UPD MethodDeclaration@@protected, Promise[], MethodName:asPromiseArray, Object input,  @TO@ protected, Promise<?>[], MethodName:asPromiseArray, Object input,  @AT@ 1923 @LENGTH@ 640
---UPD ArrayType@@Promise[] @TO@ Promise<?>[] @AT@ 1933 @LENGTH@ 9
------DEL SimpleType@@Promise @AT@ 1933 @LENGTH@ 7
------INS ParameterizedType@@Promise<?> @TO@ ArrayType@@Promise[] @AT@ 1936 @LENGTH@ 10
---------INS SimpleType@@Promise @TO@ ParameterizedType@@Promise<?> @AT@ 1936 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Promise<?> @AT@ 1944 @LENGTH@ 1
---UPD VariableDeclarationStatement@@Promise[] promises; @TO@ Promise<?>[] promises; @AT@ 1982 @LENGTH@ 19
------UPD ArrayType@@Promise[] @TO@ Promise<?>[] @AT@ 1982 @LENGTH@ 9
---------DEL SimpleType@@Promise @AT@ 1982 @LENGTH@ 7
---------INS ParameterizedType@@Promise<?> @TO@ ArrayType@@Promise[] @AT@ 1988 @LENGTH@ 10
------------INS SimpleType@@Promise @TO@ ParameterizedType@@Promise<?> @AT@ 1988 @LENGTH@ 7
------------INS WildcardType@@? @TO@ ParameterizedType@@Promise<?> @AT@ 1996 @LENGTH@ 1
---UPD IfStatement@@if (input instanceof Object[]) {  Object[] inputArray=(Object[])input;  promises=new Promise[inputArray.length];  for (int i=0; i < inputArray.length; i++) {    promises[i]=Promise.asPromise(inputArray[i]);  }} else {  promises=new Promise[1];  if (input instanceof Promise) {    promises[0]=(Promise)input;  } else {    promises[0]=Promise.asPromise(input);  }} @TO@ if (input instanceof Object[]) {  Object[] inputArray=(Object[])input;  promises=new Promise[inputArray.length];  for (int i=0; i < inputArray.length; i++) {    promises[i]=Promise.asPromise(inputArray[i]);  }} else {  promises=new Promise[1];  if (input instanceof Promise) {    promises[0]=(Promise<?>)input;  } else {    promises[0]=Promise.asPromise(input);  }} @AT@ 2010 @LENGTH@ 522
------UPD Block@@ElseBody:{  promises=new Promise[1];  if (input instanceof Promise) {    promises[0]=(Promise)input;  } else {    promises[0]=Promise.asPromise(input);  }} @TO@ ElseBody:{  promises=new Promise[1];  if (input instanceof Promise) {    promises[0]=(Promise<?>)input;  } else {    promises[0]=Promise.asPromise(input);  }} @AT@ 2300 @LENGTH@ 232
---------UPD IfStatement@@if (input instanceof Promise) {  promises[0]=(Promise)input;} else {  promises[0]=Promise.asPromise(input);} @TO@ if (input instanceof Promise) {  promises[0]=(Promise<?>)input;} else {  promises[0]=Promise.asPromise(input);} @AT@ 2353 @LENGTH@ 169
------------UPD Block@@ThenBody:{  promises[0]=(Promise)input;} @TO@ ThenBody:{  promises[0]=(Promise<?>)input;} @AT@ 2383 @LENGTH@ 62
---------------UPD ExpressionStatement@@Assignment:promises[0]=(Promise)input @TO@ Assignment:promises[0]=(Promise<?>)input @AT@ 2401 @LENGTH@ 30
------------------UPD Assignment@@promises[0]=(Promise)input @TO@ promises[0]=(Promise<?>)input @AT@ 2401 @LENGTH@ 29
---------------------UPD CastExpression@@(Promise)input @TO@ (Promise<?>)input @AT@ 2415 @LENGTH@ 15
------------------------DEL SimpleType@@Promise @AT@ 2416 @LENGTH@ 7
------------------------INS ParameterizedType@@Promise<?> @TO@ CastExpression@@(Promise)input @AT@ 2425 @LENGTH@ 10
---------------------------INS SimpleType@@Promise @TO@ ParameterizedType@@Promise<?> @AT@ 2425 @LENGTH@ 7
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Promise<?> @AT@ 2433 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter","--http.port=" + port) @TO@ MethodInvocation:TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter.TestFatJarRouter","--http.port=" + port) @AT@ 1368 @LENGTH@ 112
---UPD MethodInvocation@@TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter","--http.port=" + port) @TO@ TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter.TestFatJarRouter","--http.port=" + port) @AT@ 1368 @LENGTH@ 111
------UPD SimpleName@@MethodName:main:["--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter", "--http.port=" + port] @TO@ MethodName:main:["--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter.TestFatJarRouter", "--http.port=" + port] @AT@ 1385 @LENGTH@ 94
---------UPD StringLiteral@@"--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter" @TO@ "--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter.TestFatJarRouter" @AT@ 1390 @LENGTH@ 65


INS IfStatement@@if (address instanceof InetSocketAddress) {  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} else {  acceptor.unbind(address);} @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 4158 @LENGTH@ 281
---INS InstanceofExpression@@address instanceof InetSocketAddress @TO@ IfStatement@@if (address instanceof InetSocketAddress) {  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} else {  acceptor.unbind(address);} @AT@ 4162 @LENGTH@ 36
------INS SimpleName@@address @TO@ InstanceofExpression@@address instanceof InetSocketAddress @AT@ 4162 @LENGTH@ 7
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@address instanceof InetSocketAddress @AT@ 4170 @LENGTH@ 10
------INS SimpleType@@InetSocketAddress @TO@ InstanceofExpression@@address instanceof InetSocketAddress @AT@ 4181 @LENGTH@ 17
---INS Block@@ThenBody:{  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} @TO@ IfStatement@@if (address instanceof InetSocketAddress) {  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} else {  acceptor.unbind(address);} @AT@ 4200 @LENGTH@ 184
------INS IfStatement@@if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  acceptor.unbind(acceptor.getLocalAddresses());} @TO@ Block@@ThenBody:{  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} @AT@ 4214 @LENGTH@ 160
---------INS MethodInvocation@@"0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress()) @TO@ IfStatement@@if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4218 @LENGTH@ 76
------------INS StringLiteral@@"0.0.0.0" @TO@ MethodInvocation@@"0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress()) @AT@ 4218 @LENGTH@ 9
------------INS SimpleName@@MethodName:equals:[((InetSocketAddress)address).getAddress().getHostAddress()] @TO@ MethodInvocation@@"0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress()) @AT@ 4228 @LENGTH@ 66
---------------INS MethodInvocation@@((InetSocketAddress)address).getAddress().getHostAddress() @TO@ SimpleName@@MethodName:equals:[((InetSocketAddress)address).getAddress().getHostAddress()] @AT@ 4235 @LENGTH@ 58
------------------INS MethodInvocation@@MethodName:getAddress:[] @TO@ MethodInvocation@@((InetSocketAddress)address).getAddress().getHostAddress() @AT@ 4235 @LENGTH@ 41
------------------INS ParenthesizedExpression@@((InetSocketAddress)address) @TO@ MethodInvocation@@((InetSocketAddress)address).getAddress().getHostAddress() @AT@ 4235 @LENGTH@ 28
---------------------INS CastExpression@@(InetSocketAddress)address @TO@ ParenthesizedExpression@@((InetSocketAddress)address) @AT@ 4236 @LENGTH@ 26
------------------------INS SimpleType@@InetSocketAddress @TO@ CastExpression@@(InetSocketAddress)address @AT@ 4237 @LENGTH@ 17
------------------------INS SimpleName@@address @TO@ CastExpression@@(InetSocketAddress)address @AT@ 4255 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getHostAddress:[] @TO@ MethodInvocation@@((InetSocketAddress)address).getAddress().getHostAddress() @AT@ 4277 @LENGTH@ 16
---------INS Block@@ThenBody:{  acceptor.unbind(acceptor.getLocalAddresses());} @TO@ IfStatement@@if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4296 @LENGTH@ 78
------------INS ExpressionStatement@@MethodInvocation:acceptor.unbind(acceptor.getLocalAddresses()) @TO@ Block@@ThenBody:{  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4314 @LENGTH@ 46
---------------INS MethodInvocation@@acceptor.unbind(acceptor.getLocalAddresses()) @TO@ ExpressionStatement@@MethodInvocation:acceptor.unbind(acceptor.getLocalAddresses()) @AT@ 4314 @LENGTH@ 45
------------------INS SimpleName@@Name:acceptor @TO@ MethodInvocation@@acceptor.unbind(acceptor.getLocalAddresses()) @AT@ 4314 @LENGTH@ 8
------------------INS SimpleName@@MethodName:unbind:[acceptor.getLocalAddresses()] @TO@ MethodInvocation@@acceptor.unbind(acceptor.getLocalAddresses()) @AT@ 4323 @LENGTH@ 36
---------------------INS MethodInvocation@@acceptor.getLocalAddresses() @TO@ SimpleName@@MethodName:unbind:[acceptor.getLocalAddresses()] @AT@ 4330 @LENGTH@ 28
------------------------INS SimpleName@@Name:acceptor @TO@ MethodInvocation@@acceptor.getLocalAddresses() @AT@ 4330 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getLocalAddresses:[] @TO@ MethodInvocation@@acceptor.getLocalAddresses() @AT@ 4339 @LENGTH@ 19
---INS Block@@ElseBody:{  acceptor.unbind(address);} @TO@ IfStatement@@if (address instanceof InetSocketAddress) {  if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {    acceptor.unbind(acceptor.getLocalAddresses());  }} else {  acceptor.unbind(address);} @AT@ 4390 @LENGTH@ 49
------MOV ExpressionStatement@@MethodInvocation:acceptor.unbind(address) @TO@ Block@@ElseBody:{  acceptor.unbind(address);} @AT@ 4085 @LENGTH@ 25


UPD ReturnStatement@@ClassInstanceCreation:new FacebookTemplate(ACCESS_TOKEN) @TO@ ClassInstanceCreation:new FacebookTemplate(ACCESS_TOKEN,"APP_NAMESPACE","APP_ID") @AT@ 2061 @LENGTH@ 42
---UPD ClassInstanceCreation@@FacebookTemplate[ACCESS_TOKEN] @TO@ FacebookTemplate[ACCESS_TOKEN, "APP_NAMESPACE", "APP_ID"] @AT@ 2068 @LENGTH@ 34
------INS StringLiteral@@"APP_NAMESPACE" @TO@ ClassInstanceCreation@@FacebookTemplate[ACCESS_TOKEN] @AT@ 2103 @LENGTH@ 15
------INS StringLiteral@@"APP_ID" @TO@ ClassInstanceCreation@@FacebookTemplate[ACCESS_TOKEN] @AT@ 2120 @LENGTH@ 8


UPD FieldDeclaration@@private, boolean, [extractAttachments=false] @TO@ private, boolean, [extractAttachments] @AT@ 2381 @LENGTH@ 43
---UPD VariableDeclarationFragment@@extractAttachments=false @TO@ extractAttachments @AT@ 2397 @LENGTH@ 26
------DEL BooleanLiteral@@false @AT@ 2418 @LENGTH@ 5


UPD IfStatement@@if (json != null) {  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @TO@ if (json != null) {  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  OutputStream fos=buildContext.newFileOutputStream(out);  fos.write(schema.getBytes());  fos.close();  buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @AT@ 8073 @LENGTH@ 2854
---UPD Block@@ThenBody:{  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @TO@ ThenBody:{  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  OutputStream fos=buildContext.newFileOutputStream(out);  fos.write(schema.getBytes());  fos.close();  buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @AT@ 8091 @LENGTH@ 2836
------DEL TryStatement@@try (OutputStream fos=buildContext.newFileOutputStream(out)){  fos.write(schema.getBytes());}  @AT@ 10555 @LENGTH@ 164
---------DEL VariableDeclarationExpression@@OutputStream fos=buildContext.newFileOutputStream(out) @AT@ 10560 @LENGTH@ 56
------------DEL SimpleType@@OutputStream @AT@ 10560 @LENGTH@ 12
------INS VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @TO@ Block@@ThenBody:{  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @AT@ 10594 @LENGTH@ 57
---------MOV VariableDeclarationFragment@@fos=buildContext.newFileOutputStream(out) @TO@ VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @AT@ 10573 @LENGTH@ 43
---------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @AT@ 10594 @LENGTH@ 12
------MOV ExpressionStatement@@MethodInvocation:fos.write(schema.getBytes()) @TO@ Block@@ThenBody:{  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @AT@ 10656 @LENGTH@ 29
------INS ExpressionStatement@@MethodInvocation:fos.close() @TO@ Block@@ThenBody:{  LanguageModel languageModel=new LanguageModel();  languageModel.setName(name);  languageModel.setTitle("");  languageModel.setModelName(modelName);  languageModel.setLabel("");  languageModel.setDescription("");  languageModel.setJavaType(javaType);  languageModel.setGroupId(project.getGroupId());  languageModel.setArtifactId(project.getArtifactId());  languageModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      languageModel.setTitle(row.get("title"));    }    if (row.containsKey("description")) {      languageModel.setDescription(row.get("description"));    }    if (row.containsKey("label")) {      languageModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      languageModel.setModelJavaType(row.get("javaType"));    }  }  log.debug("Model " + languageModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(languageModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(languageModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   buildContext.refresh(out);  log.debug("Generated " + out + " containing JSon schema for "+ name+ " language");} @AT@ 10746 @LENGTH@ 12
---------INS MethodInvocation@@fos.close() @TO@ ExpressionStatement@@MethodInvocation:fos.close() @AT@ 10746 @LENGTH@ 11
------------INS SimpleName@@Name:fos @TO@ MethodInvocation@@fos.close() @AT@ 10746 @LENGTH@ 3
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@fos.close() @AT@ 10750 @LENGTH@ 7


UPD VariableDeclarationStatement@@String[] names=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class); @TO@ String[] names=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class,false,false); @AT@ 8528 @LENGTH@ 118
---UPD VariableDeclarationFragment@@names=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class) @TO@ names=BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class,false,false) @AT@ 8537 @LENGTH@ 108
------UPD MethodInvocation@@BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class) @TO@ BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory,JwtAccessTokenConverter.class,false,false) @AT@ 8545 @LENGTH@ 100
---------UPD SimpleName@@MethodName:beanNamesForTypeIncludingAncestors:[beanFactory, JwtAccessTokenConverter.class] @TO@ MethodName:beanNamesForTypeIncludingAncestors:[beanFactory, JwtAccessTokenConverter.class, false, false] @AT@ 8562 @LENGTH@ 83
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:beanNamesForTypeIncludingAncestors:[beanFactory, JwtAccessTokenConverter.class] @AT@ 8646 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:beanNamesForTypeIncludingAncestors:[beanFactory, JwtAccessTokenConverter.class] @AT@ 8653 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @TO@ Assignment:this.dateFormat=this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4178 @LENGTH@ 56
---INS Assignment@@this.dateFormat=this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @TO@ ExpressionStatement@@MethodInvocation:dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4108 @LENGTH@ 78
------INS FieldAccess@@this.dateFormat @TO@ Assignment@@this.dateFormat=this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4108 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ FieldAccess@@this.dateFormat @AT@ 4108 @LENGTH@ 4
---------INS SimpleName@@dateFormat @TO@ FieldAccess@@this.dateFormat @AT@ 4113 @LENGTH@ 10
------INS Operator@@= @TO@ Assignment@@this.dateFormat=this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4123 @LENGTH@ 1
------MOV MethodInvocation@@dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @TO@ Assignment@@this.dateFormat=this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4178 @LENGTH@ 55
---------INS FieldAccess@@this.dateFormat @TO@ MethodInvocation@@dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4126 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.dateFormat @AT@ 4126 @LENGTH@ 4
------------INS SimpleName@@dateFormat @TO@ FieldAccess@@this.dateFormat @AT@ 4131 @LENGTH@ 10
---------INS FieldAccess@@this.dateFormat @TO@ MethodInvocation@@dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4126 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.dateFormat @AT@ 4126 @LENGTH@ 4
------------INS SimpleName@@dateFormat @TO@ FieldAccess@@this.dateFormat @AT@ 4131 @LENGTH@ 10
---UPD MethodInvocation@@dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @TO@ this.dateFormat.withZone(DateTimeZone.forTimeZone(timeZone)) @AT@ 4178 @LENGTH@ 55


INS TryStatement@@try {  OIDList list=new OIDList();  if (s != null && s.indexOf(",") != -1) {    StringTokenizer strTok=new StringTokenizer(s,",");    while (strTok.hasMoreTokens()) {      String tok=strTok.nextToken();      if (tok != null && tok.trim().length() > 0) {        list.add(new OID(tok.trim()));      } else {      }    }  } else   if (s != null) {    list.add(new OID(s.trim()));  }  return list;} catch (Throwable e) {  return null;} @TO@ MethodDeclaration@@public, static, OIDList, MethodName:toOIDList, String s, Exchange exchange,  @AT@ 2121 @LENGTH@ 1025
---MOV VariableDeclarationStatement@@OIDList list=new OIDList(); @TO@ TryStatement@@try {  OIDList list=new OIDList();  if (s != null && s.indexOf(",") != -1) {    StringTokenizer strTok=new StringTokenizer(s,",");    while (strTok.hasMoreTokens()) {      String tok=strTok.nextToken();      if (tok != null && tok.trim().length() > 0) {        list.add(new OID(tok.trim()));      } else {      }    }  } else   if (s != null) {    list.add(new OID(s.trim()));  }  return list;} catch (Throwable e) {  return null;} @AT@ 2052 @LENGTH@ 29
---MOV IfStatement@@if (s != null && s.indexOf(",") != -1) {  StringTokenizer strTok=new StringTokenizer(s,",");  while (strTok.hasMoreTokens()) {    String tok=strTok.nextToken();    if (tok != null && tok.trim().length() > 0) {      list.add(new OID(tok.trim()));    } else {    }  }} else if (s != null) {  list.add(new OID(s.trim()));} @TO@ TryStatement@@try {  OIDList list=new OIDList();  if (s != null && s.indexOf(",") != -1) {    StringTokenizer strTok=new StringTokenizer(s,",");    while (strTok.hasMoreTokens()) {      String tok=strTok.nextToken();      if (tok != null && tok.trim().length() > 0) {        list.add(new OID(tok.trim()));      } else {      }    }  } else   if (s != null) {    list.add(new OID(s.trim()));  }  return list;} catch (Throwable e) {  return null;} @AT@ 2091 @LENGTH@ 583
---INS ReturnStatement@@SimpleName:list @TO@ TryStatement@@try {  OIDList list=new OIDList();  if (s != null && s.indexOf(",") != -1) {    StringTokenizer strTok=new StringTokenizer(s,",");    while (strTok.hasMoreTokens()) {      String tok=strTok.nextToken();      if (tok != null && tok.trim().length() > 0) {        list.add(new OID(tok.trim()));      } else {      }    }  } else   if (s != null) {    list.add(new OID(s.trim()));  }  return list;} catch (Throwable e) {  return null;} @AT@ 2835 @LENGTH@ 12
------MOV SimpleName@@list @TO@ ReturnStatement@@SimpleName:list @AT@ 2691 @LENGTH@ 4
---INS CatchClause@@catch (Throwable e) {  return null;} @TO@ TryStatement@@try {  OIDList list=new OIDList();  if (s != null && s.indexOf(",") != -1) {    StringTokenizer strTok=new StringTokenizer(s,",");    while (strTok.hasMoreTokens()) {      String tok=strTok.nextToken();      if (tok != null && tok.trim().length() > 0) {        list.add(new OID(tok.trim()));      } else {      }    }  } else   if (s != null) {    list.add(new OID(s.trim()));  }  return list;} catch (Throwable e) {  return null;} @AT@ 2858 @LENGTH@ 288
------INS SingleVariableDeclaration@@Throwable e @TO@ CatchClause@@catch (Throwable e) {  return null;} @AT@ 2865 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable e @AT@ 2865 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Throwable e @AT@ 2875 @LENGTH@ 1
------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Throwable e) {  return null;} @AT@ 3124 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3131 @LENGTH@ 4


DEL MethodDeclaration@@public, voidMethodName:DefaultExecCommandExecutor, Exchange exchange,  @AT@ 2236 @LENGTH@ 94
---DEL Modifier@@public @AT@ 2236 @LENGTH@ 6
---DEL SimpleName@@MethodName:DefaultExecCommandExecutor @AT@ 2243 @LENGTH@ 26
---DEL SingleVariableDeclaration@@Exchange exchange @AT@ 2270 @LENGTH@ 17
------DEL SimpleType@@Exchange @AT@ 2270 @LENGTH@ 8
------DEL SimpleName@@exchange @AT@ 2279 @LENGTH@ 8
---DEL ExpressionStatement@@Assignment:this.exchange=exchange @AT@ 2299 @LENGTH@ 25
------DEL Assignment@@this.exchange=exchange @AT@ 2299 @LENGTH@ 24
---------DEL FieldAccess@@this.exchange @AT@ 2299 @LENGTH@ 13
------------DEL ThisExpression@@this @AT@ 2299 @LENGTH@ 4
------------DEL SimpleName@@exchange @AT@ 2304 @LENGTH@ 8
---------DEL Operator@@= @AT@ 2312 @LENGTH@ 1
---------DEL SimpleName@@exchange @AT@ 2315 @LENGTH@ 8


UPD MethodDeclaration@@ResourceMetadata, MethodName:getMappingFor, Class<?> type,  @TO@ ResourceMetadata, MethodName:getMetadataFor, Class<?> type,  @AT@ 937 @LENGTH@ 29
---UPD SimpleName@@MethodName:getMappingFor @TO@ MethodName:getMetadataFor @AT@ 937 @LENGTH@ 13


INS MethodDeclaration@@Long, MethodName:getOldestInflightDuration,  @TO@ TypeDeclaration@@[public]ManagedRouteMBean, [ManagedPerformanceCounterMBean] @AT@ 4414 @LENGTH@ 28
---INS SimpleType@@Long @TO@ MethodDeclaration@@Long, MethodName:getOldestInflightDuration,  @AT@ 4409 @LENGTH@ 4
---INS SimpleName@@MethodName:getOldestInflightDuration @TO@ MethodDeclaration@@Long, MethodName:getOldestInflightDuration,  @AT@ 4414 @LENGTH@ 25


UPD IfStatement@@if (shoudUseReflectionEntityInstantiator(entity)) {  return ReflectionEntityInstantiator.INSTANCE;} @TO@ if (shouldUseReflectionEntityInstantiator(entity)) {  return ReflectionEntityInstantiator.INSTANCE;} @AT@ 3928 @LENGTH@ 104
---UPD MethodInvocation@@shoudUseReflectionEntityInstantiator(entity) @TO@ shouldUseReflectionEntityInstantiator(entity) @AT@ 3932 @LENGTH@ 44
------UPD SimpleName@@MethodName:shoudUseReflectionEntityInstantiator:[entity] @TO@ MethodName:shouldUseReflectionEntityInstantiator:[entity] @AT@ 3932 @LENGTH@ 44


INS MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @TO@ TypeDeclaration@@[public]LowLevelCacheImpl, [LowLevelCache, EvictionListener] @AT@ 15279 @LENGTH@ 135
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15279 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15286 @LENGTH@ 4
---INS SimpleName@@MethodName:notifyReused @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15291 @LENGTH@ 12
---INS SingleVariableDeclaration@@LlapMemoryBuffer buffer @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15304 @LENGTH@ 23
------INS SimpleType@@LlapMemoryBuffer @TO@ SingleVariableDeclaration@@LlapMemoryBuffer buffer @AT@ 15304 @LENGTH@ 16
------INS SimpleName@@buffer @TO@ SingleVariableDeclaration@@LlapMemoryBuffer buffer @AT@ 15321 @LENGTH@ 6
---INS VariableDeclarationStatement@@int newVal=((LlapCacheableBuffer)buffer).incRef(); @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15335 @LENGTH@ 52
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int newVal=((LlapCacheableBuffer)buffer).incRef(); @AT@ 15335 @LENGTH@ 3
------INS VariableDeclarationFragment@@newVal=((LlapCacheableBuffer)buffer).incRef() @TO@ VariableDeclarationStatement@@int newVal=((LlapCacheableBuffer)buffer).incRef(); @AT@ 15339 @LENGTH@ 47
---------INS SimpleName@@newVal @TO@ VariableDeclarationFragment@@newVal=((LlapCacheableBuffer)buffer).incRef() @AT@ 15339 @LENGTH@ 6
---------INS MethodInvocation@@((LlapCacheableBuffer)buffer).incRef() @TO@ VariableDeclarationFragment@@newVal=((LlapCacheableBuffer)buffer).incRef() @AT@ 15348 @LENGTH@ 38
------------INS ParenthesizedExpression@@((LlapCacheableBuffer)buffer) @TO@ MethodInvocation@@((LlapCacheableBuffer)buffer).incRef() @AT@ 15348 @LENGTH@ 29
---------------INS CastExpression@@(LlapCacheableBuffer)buffer @TO@ ParenthesizedExpression@@((LlapCacheableBuffer)buffer) @AT@ 15349 @LENGTH@ 27
------------------INS SimpleType@@LlapCacheableBuffer @TO@ CastExpression@@(LlapCacheableBuffer)buffer @AT@ 15350 @LENGTH@ 19
------------------INS SimpleName@@buffer @TO@ CastExpression@@(LlapCacheableBuffer)buffer @AT@ 15370 @LENGTH@ 6
------------INS SimpleName@@MethodName:incRef:[] @TO@ MethodInvocation@@((LlapCacheableBuffer)buffer).incRef() @AT@ 15378 @LENGTH@ 8
---INS AssertStatement@@InfixExpression:newVal > 1 @TO@ MethodDeclaration@@public, void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 15392 @LENGTH@ 18
------INS InfixExpression@@newVal > 1 @TO@ AssertStatement@@InfixExpression:newVal > 1 @AT@ 15399 @LENGTH@ 10
---------INS SimpleName@@newVal @TO@ InfixExpression@@newVal > 1 @AT@ 15399 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@newVal > 1 @AT@ 15405 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@newVal > 1 @AT@ 15408 @LENGTH@ 1


UPD VariableDeclarationStatement@@final SalesforceException exception=new SalesforceException(msg,responseStatus,createRestException(request)); @TO@ final SalesforceException exception=new SalesforceException(msg,responseStatus,createRestException(request,reason)); @AT@ 5934 @LENGTH@ 113
---UPD VariableDeclarationFragment@@exception=new SalesforceException(msg,responseStatus,createRestException(request)) @TO@ exception=new SalesforceException(msg,responseStatus,createRestException(request,reason)) @AT@ 5960 @LENGTH@ 86
------UPD ClassInstanceCreation@@SalesforceException[msg, responseStatus, createRestException(request)] @TO@ SalesforceException[msg, responseStatus, createRestException(request,reason)] @AT@ 5972 @LENGTH@ 74
---------UPD MethodInvocation@@createRestException(request) @TO@ createRestException(request,reason) @AT@ 6017 @LENGTH@ 28
------------UPD SimpleName@@MethodName:createRestException:[request] @TO@ MethodName:createRestException:[request, reason] @AT@ 6017 @LENGTH@ 28
---------------INS SimpleName@@reason @TO@ SimpleName@@MethodName:createRestException:[request] @AT@ 6046 @LENGTH@ 6


UPD FieldDeclaration@@SimpleAttributeDefinition, [REPLACE_ALL=SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build()] @TO@ SimpleAttributeDefinition, [REPLACE_ALL=SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN,true).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build()] @AT@ 10945 @LENGTH@ 224
---UPD VariableDeclarationFragment@@REPLACE_ALL=SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build() @TO@ REPLACE_ALL=SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN,true).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build() @AT@ 10971 @LENGTH@ 197
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build() @TO@ SimpleAttributeDefinitionBuilder.create("replace-all",ModelType.BOOLEAN,true).setAllowExpression(false).setDefaultValue(new ModelNode(true)).build() @AT@ 10985 @LENGTH@ 183
---------UPD MethodInvocation@@MethodName:create:["replace-all", ModelType.BOOLEAN] @TO@ MethodName:create:["replace-all", ModelType.BOOLEAN, true] @AT@ 10985 @LENGTH@ 73
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:create:["replace-all", ModelType.BOOLEAN] @AT@ 11059 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:Reference,  @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]Reference, FacebookObject[Serializable] @AT@ 1010 @LENGTH@ 53
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Reference,  @AT@ 1010 @LENGTH@ 7
---INS SimpleName@@MethodName:Reference @TO@ MethodDeclaration@@private, voidMethodName:Reference,  @AT@ 1018 @LENGTH@ 9
---INS ConstructorInvocation@@this(null,null); @TO@ MethodDeclaration@@private, voidMethodName:Reference,  @AT@ 1040 @LENGTH@ 17
------INS NullLiteral@@null @TO@ ConstructorInvocation@@this(null,null); @AT@ 1045 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConstructorInvocation@@this(null,null); @AT@ 1051 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("jetty://" + serverUri).transform(body().prepend("Bye ")) @TO@ MethodInvocation:from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")) @AT@ 2188 @LENGTH@ 84
---UPD MethodInvocation@@from("jetty://" + serverUri).transform(body().prepend("Bye ")) @TO@ from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")) @AT@ 2188 @LENGTH@ 83
------INS MethodInvocation@@MethodName:id:["route1"] @TO@ MethodInvocation@@from("jetty://" + serverUri).transform(body().prepend("Bye ")) @AT@ 2188 @LENGTH@ 41
---------INS StringLiteral@@"route1" @TO@ MethodInvocation@@MethodName:id:["route1"] @AT@ 2220 @LENGTH@ 8


UPD IfStatement@@if (clientTokenServices != null && auth != null && auth.isAuthenticated()) {  clientTokenServices.saveAccessToken(resource,auth,accessToken);} @TO@ if (clientTokenServices != null && (resource.isClientOnly() || auth != null && auth.isAuthenticated())) {  clientTokenServices.saveAccessToken(resource,auth,accessToken);} @AT@ 4656 @LENGTH@ 149
---UPD InfixExpression@@clientTokenServices != null && auth != null && auth.isAuthenticated() @TO@ clientTokenServices != null && (resource.isClientOnly() || auth != null && auth.isAuthenticated()) @AT@ 4660 @LENGTH@ 69
------DEL InfixExpression@@clientTokenServices != null && auth != null @AT@ 4660 @LENGTH@ 43
------MOV InfixExpression@@clientTokenServices != null @TO@ InfixExpression@@clientTokenServices != null && auth != null && auth.isAuthenticated() @AT@ 4660 @LENGTH@ 27
------MOV Operator@@&& @TO@ InfixExpression@@clientTokenServices != null && auth != null && auth.isAuthenticated() @AT@ 4687 @LENGTH@ 2
------INS ParenthesizedExpression@@(resource.isClientOnly() || auth != null && auth.isAuthenticated()) @TO@ InfixExpression@@clientTokenServices != null && auth != null && auth.isAuthenticated() @AT@ 4691 @LENGTH@ 67
---------INS InfixExpression@@resource.isClientOnly() || auth != null && auth.isAuthenticated() @TO@ ParenthesizedExpression@@(resource.isClientOnly() || auth != null && auth.isAuthenticated()) @AT@ 4692 @LENGTH@ 65
------------INS MethodInvocation@@resource.isClientOnly() @TO@ InfixExpression@@resource.isClientOnly() || auth != null && auth.isAuthenticated() @AT@ 4692 @LENGTH@ 23
---------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.isClientOnly() @AT@ 4692 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isClientOnly:[] @TO@ MethodInvocation@@resource.isClientOnly() @AT@ 4701 @LENGTH@ 14
------------INS Operator@@|| @TO@ InfixExpression@@resource.isClientOnly() || auth != null && auth.isAuthenticated() @AT@ 4715 @LENGTH@ 2
------------INS InfixExpression@@auth != null && auth.isAuthenticated() @TO@ InfixExpression@@resource.isClientOnly() || auth != null && auth.isAuthenticated() @AT@ 4719 @LENGTH@ 38
---------------MOV InfixExpression@@auth != null @TO@ InfixExpression@@auth != null && auth.isAuthenticated() @AT@ 4691 @LENGTH@ 12
---------------MOV Operator@@&& @TO@ InfixExpression@@auth != null && auth.isAuthenticated() @AT@ 4703 @LENGTH@ 2
---------------MOV MethodInvocation@@auth.isAuthenticated() @TO@ InfixExpression@@auth != null && auth.isAuthenticated() @AT@ 4707 @LENGTH@ 22


UPD IfStatement@@if (!strategy.applyFilterToCamelHeaders(key,value,target.getExchange())) {  target.setHeader(key,value);} @TO@ if (!strategy.applyFilterToExternalHeaders(key,value,target.getExchange())) {  target.setHeader(key,value);} @AT@ 18316 @LENGTH@ 227
---UPD PrefixExpression@@!strategy.applyFilterToCamelHeaders(key,value,target.getExchange()) @TO@ !strategy.applyFilterToExternalHeaders(key,value,target.getExchange()) @AT@ 18320 @LENGTH@ 69
------UPD MethodInvocation@@strategy.applyFilterToCamelHeaders(key,value,target.getExchange()) @TO@ strategy.applyFilterToExternalHeaders(key,value,target.getExchange()) @AT@ 18321 @LENGTH@ 68
---------UPD SimpleName@@MethodName:applyFilterToCamelHeaders:[key, value, target.getExchange()] @TO@ MethodName:applyFilterToExternalHeaders:[key, value, target.getExchange()] @AT@ 18330 @LENGTH@ 59


UPD FieldDeclaration@@private, TokenStore, [tokenStore] @TO@ private, DefaultTokenServices, [tokenServices] @AT@ 790 @LENGTH@ 30
---UPD SimpleType@@TokenStore @TO@ DefaultTokenServices @AT@ 798 @LENGTH@ 10
---UPD VariableDeclarationFragment@@tokenStore @TO@ tokenServices @AT@ 809 @LENGTH@ 10
------UPD SimpleName@@tokenStore @TO@ tokenServices @AT@ 809 @LENGTH@ 10


UPD MethodDeclaration@@private, ResourceSupport, MethodName:doWithReferencedProperty, RootResourceInformation repoRequest, Serializable id, String propertyPath, Function<ReferencedProperty,ResourceSupport> handler, HttpMethod method, Exception,  @TO@ private, ResourceSupport, MethodName:doWithReferencedProperty, RootResourceInformation resourceInformation, Serializable id, String propertyPath, Function<ReferencedProperty,ResourceSupport> handler, HttpMethod method, Exception,  @AT@ 17159 @LENGTH@ 1000
---UPD SingleVariableDeclaration@@RootResourceInformation repoRequest @TO@ RootResourceInformation resourceInformation @AT@ 17208 @LENGTH@ 35
------UPD SimpleName@@repoRequest @TO@ resourceInformation @AT@ 17232 @LENGTH@ 11
---UPD VariableDeclarationStatement@@RepositoryInvoker invoker=repoRequest.getInvoker(); @TO@ RepositoryInvoker invoker=resourceInformation.getInvoker(); @AT@ 17382 @LENGTH@ 53
------UPD VariableDeclarationFragment@@invoker=repoRequest.getInvoker() @TO@ invoker=resourceInformation.getInvoker() @AT@ 17400 @LENGTH@ 34
---------UPD MethodInvocation@@repoRequest.getInvoker() @TO@ resourceInformation.getInvoker() @AT@ 17410 @LENGTH@ 24
------------UPD SimpleName@@Name:repoRequest @TO@ Name:resourceInformation @AT@ 17410 @LENGTH@ 11
---UPD IfStatement@@if (!repoRequest.getSupportedMethods().supports(method,ResourceType.ITEM)) {  throw new HttpRequestMethodNotSupportedException(method.name());} @TO@ if (!resourceInformation.getSupportedMethods().supports(method,ResourceType.ITEM)) {  throw new HttpRequestMethodNotSupportedException(method.name());} @AT@ 17439 @LENGTH@ 149
------UPD PrefixExpression@@!repoRequest.getSupportedMethods().supports(method,ResourceType.ITEM) @TO@ !resourceInformation.getSupportedMethods().supports(method,ResourceType.ITEM) @AT@ 17443 @LENGTH@ 70
---------UPD MethodInvocation@@repoRequest.getSupportedMethods().supports(method,ResourceType.ITEM) @TO@ resourceInformation.getSupportedMethods().supports(method,ResourceType.ITEM) @AT@ 17444 @LENGTH@ 69
------------UPD SimpleName@@Name:repoRequest @TO@ Name:resourceInformation @AT@ 17444 @LENGTH@ 11
---MOV VariableDeclarationStatement@@Object domainObj=invoker.invokeFindOne(id); @TO@ MethodDeclaration@@private, ResourceSupport, MethodName:doWithReferencedProperty, RootResourceInformation repoRequest, Serializable id, String propertyPath, Function<ReferencedProperty,ResourceSupport> handler, HttpMethod method, Exception,  @AT@ 17592 @LENGTH@ 45
---MOV IfStatement@@if (null == domainObj) {  throw new ResourceNotFoundException();} @TO@ MethodDeclaration@@private, ResourceSupport, MethodName:doWithReferencedProperty, RootResourceInformation repoRequest, Serializable id, String propertyPath, Function<ReferencedProperty,ResourceSupport> handler, HttpMethod method, Exception,  @AT@ 17641 @LENGTH@ 70
---UPD VariableDeclarationStatement@@PersistentEntity<?,?> persistentEntity=repoRequest.getPersistentEntity(); @TO@ ResourceMetadata metadata=resourceInformation.getResourceMetadata(); @AT@ 17715 @LENGTH@ 76
------INS SimpleType@@ResourceMetadata @TO@ VariableDeclarationStatement@@PersistentEntity<?,?> persistentEntity=repoRequest.getPersistentEntity(); @AT@ 17696 @LENGTH@ 16
------DEL ParameterizedType@@PersistentEntity<?,?> @AT@ 17715 @LENGTH@ 22
---------DEL SimpleType@@PersistentEntity @AT@ 17715 @LENGTH@ 16
---------DEL WildcardType@@? @AT@ 17732 @LENGTH@ 1
---------DEL WildcardType@@? @AT@ 17735 @LENGTH@ 1
------UPD VariableDeclarationFragment@@persistentEntity=repoRequest.getPersistentEntity() @TO@ metadata=resourceInformation.getResourceMetadata() @AT@ 17738 @LENGTH@ 52
---------UPD SimpleName@@persistentEntity @TO@ metadata @AT@ 17738 @LENGTH@ 16
---------UPD MethodInvocation@@repoRequest.getPersistentEntity() @TO@ resourceInformation.getResourceMetadata() @AT@ 17757 @LENGTH@ 33
------------UPD SimpleName@@Name:repoRequest @TO@ Name:resourceInformation @AT@ 17757 @LENGTH@ 11
------------UPD SimpleName@@MethodName:getPersistentEntity:[] @TO@ MethodName:getResourceMetadata:[] @AT@ 17769 @LENGTH@ 21
---UPD VariableDeclarationStatement@@PersistentProperty<?> prop=persistentEntity.getPersistentProperty(propertyPath); @TO@ PropertyAwareResourceMapping mapping=metadata.getProperty(propertyPath); @AT@ 17794 @LENGTH@ 82
------INS SimpleType@@PropertyAwareResourceMapping @TO@ VariableDeclarationStatement@@PersistentProperty<?> prop=persistentEntity.getPersistentProperty(propertyPath); @AT@ 17769 @LENGTH@ 28
------DEL ParameterizedType@@PersistentProperty<?> @AT@ 17794 @LENGTH@ 21
---------DEL SimpleType@@PersistentProperty @AT@ 17794 @LENGTH@ 18
---------DEL WildcardType@@? @AT@ 17813 @LENGTH@ 1
------UPD VariableDeclarationFragment@@prop=persistentEntity.getPersistentProperty(propertyPath) @TO@ mapping=metadata.getProperty(propertyPath) @AT@ 17816 @LENGTH@ 59
---------UPD SimpleName@@prop @TO@ mapping @AT@ 17816 @LENGTH@ 4
---------UPD MethodInvocation@@persistentEntity.getPersistentProperty(propertyPath) @TO@ metadata.getProperty(propertyPath) @AT@ 17823 @LENGTH@ 52
------------UPD SimpleName@@Name:persistentEntity @TO@ Name:metadata @AT@ 17823 @LENGTH@ 16
------------UPD SimpleName@@MethodName:getPersistentProperty:[propertyPath] @TO@ MethodName:getProperty:[propertyPath] @AT@ 17840 @LENGTH@ 35
---UPD IfStatement@@if (null == prop) {  throw new ResourceNotFoundException();} @TO@ if (mapping == null || !mapping.isExported()) {  throw new ResourceNotFoundException();} @AT@ 17880 @LENGTH@ 65
------UPD InfixExpression@@null == prop @TO@ mapping == null || !mapping.isExported() @AT@ 17884 @LENGTH@ 12
---------INS InfixExpression@@mapping == null @TO@ InfixExpression@@null == prop @AT@ 17851 @LENGTH@ 15
------------INS SimpleName@@mapping @TO@ InfixExpression@@mapping == null @AT@ 17851 @LENGTH@ 7
------------INS Operator@@== @TO@ InfixExpression@@mapping == null @AT@ 17858 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@mapping == null @AT@ 17884 @LENGTH@ 4
---------INS PrefixExpression@@!mapping.isExported() @TO@ InfixExpression@@null == prop @AT@ 17870 @LENGTH@ 21
------------INS Operator@@! @TO@ PrefixExpression@@!mapping.isExported() @AT@ 17870 @LENGTH@ 1
------------INS MethodInvocation@@mapping.isExported() @TO@ PrefixExpression@@!mapping.isExported() @AT@ 17871 @LENGTH@ 20
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.isExported() @AT@ 17871 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isExported:[] @TO@ MethodInvocation@@mapping.isExported() @AT@ 17879 @LENGTH@ 12
---------UPD Operator@@== @TO@ || @AT@ 17888 @LENGTH@ 2
---------DEL SimpleName@@prop @AT@ 17892 @LENGTH@ 4
---UPD VariableDeclarationStatement@@PersistentPropertyAccessor accessor=persistentEntity.getPropertyAccessor(domainObj); @TO@ PersistentProperty<?> property=mapping.getProperty(); @AT@ 17949 @LENGTH@ 86
------DEL SimpleType@@PersistentPropertyAccessor @AT@ 17949 @LENGTH@ 26
------UPD VariableDeclarationFragment@@accessor=persistentEntity.getPropertyAccessor(domainObj) @TO@ property=mapping.getProperty() @AT@ 17976 @LENGTH@ 58
---------UPD SimpleName@@accessor @TO@ property @AT@ 17976 @LENGTH@ 8
---------UPD MethodInvocation@@persistentEntity.getPropertyAccessor(domainObj) @TO@ mapping.getProperty() @AT@ 17987 @LENGTH@ 47
------------UPD SimpleName@@Name:persistentEntity @TO@ Name:mapping @AT@ 17987 @LENGTH@ 16
------------UPD SimpleName@@MethodName:getPropertyAccessor:[domainObj] @TO@ MethodName:getProperty:[] @AT@ 18004 @LENGTH@ 30
---------------DEL SimpleName@@domainObj @AT@ 18024 @LENGTH@ 9
------INS ParameterizedType@@PersistentProperty<?> @TO@ VariableDeclarationStatement@@PersistentPropertyAccessor accessor=persistentEntity.getPropertyAccessor(domainObj); @AT@ 18067 @LENGTH@ 21
---------INS SimpleType@@PersistentProperty @TO@ ParameterizedType@@PersistentProperty<?> @AT@ 18067 @LENGTH@ 18
---------INS WildcardType@@? @TO@ ParameterizedType@@PersistentProperty<?> @AT@ 18086 @LENGTH@ 1
---UPD VariableDeclarationStatement@@Object propVal=accessor.getProperty(prop); @TO@ PersistentPropertyAccessor accessor=property.getOwner().getPropertyAccessor(domainObj); @AT@ 18038 @LENGTH@ 44
------UPD SimpleType@@Object @TO@ PersistentPropertyAccessor @AT@ 18038 @LENGTH@ 6
------UPD VariableDeclarationFragment@@propVal=accessor.getProperty(prop) @TO@ accessor=property.getOwner().getPropertyAccessor(domainObj) @AT@ 18045 @LENGTH@ 36
---------UPD SimpleName@@propVal @TO@ accessor @AT@ 18045 @LENGTH@ 7
---------UPD MethodInvocation@@accessor.getProperty(prop) @TO@ property.getOwner().getPropertyAccessor(domainObj) @AT@ 18055 @LENGTH@ 26
------------UPD SimpleName@@Name:accessor @TO@ Name:property @AT@ 18055 @LENGTH@ 8
------------UPD SimpleName@@MethodName:getProperty:[prop] @TO@ MethodName:getPropertyAccessor:[domainObj] @AT@ 18064 @LENGTH@ 17
---------------UPD SimpleName@@prop @TO@ domainObj @AT@ 18076 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getOwner:[] @TO@ MethodInvocation@@accessor.getProperty(prop) @AT@ 18163 @LENGTH@ 19
---UPD ReturnStatement@@MethodInvocation:handler.apply(new ReferencedProperty(prop,propVal,accessor)) @TO@ MethodInvocation:handler.apply(new ReferencedProperty(property,accessor.getProperty(property),accessor)) @AT@ 18086 @LENGTH@ 70
------UPD MethodInvocation@@handler.apply(new ReferencedProperty(prop,propVal,accessor)) @TO@ handler.apply(new ReferencedProperty(property,accessor.getProperty(property),accessor)) @AT@ 18093 @LENGTH@ 62
---------UPD SimpleName@@MethodName:apply:[new ReferencedProperty(prop,propVal,accessor)] @TO@ MethodName:apply:[new ReferencedProperty(property,accessor.getProperty(property),accessor)] @AT@ 18101 @LENGTH@ 54
------------UPD ClassInstanceCreation@@ReferencedProperty[prop, propVal, accessor] @TO@ ReferencedProperty[property, accessor.getProperty(property), accessor] @AT@ 18107 @LENGTH@ 47
---------------UPD SimpleName@@prop @TO@ property @AT@ 18130 @LENGTH@ 4
---------------DEL SimpleName@@propVal @AT@ 18136 @LENGTH@ 7
---------------INS MethodInvocation@@accessor.getProperty(property) @TO@ ClassInstanceCreation@@ReferencedProperty[prop, propVal, accessor] @AT@ 18271 @LENGTH@ 30
------------------INS SimpleName@@Name:accessor @TO@ MethodInvocation@@accessor.getProperty(property) @AT@ 18271 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getProperty:[property] @TO@ MethodInvocation@@accessor.getProperty(property) @AT@ 18280 @LENGTH@ 21
---------------------INS SimpleName@@property @TO@ SimpleName@@MethodName:getProperty:[property] @AT@ 18292 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:baseTypeId.equals(CamelCMISConstants.CMIS_FOLDER) @TO@ MethodInvocation:CamelCMISConstants.CMIS_FOLDER.equals(cmisSessionFacade.getCMISTypeFor(baseTypeId)) @AT@ 4436 @LENGTH@ 57
---UPD MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_FOLDER) @TO@ CamelCMISConstants.CMIS_FOLDER.equals(cmisSessionFacade.getCMISTypeFor(baseTypeId)) @AT@ 4443 @LENGTH@ 49
------INS QualifiedName@@Name:CamelCMISConstants.CMIS_FOLDER @TO@ MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_FOLDER) @AT@ 4443 @LENGTH@ 30
------UPD SimpleName@@Name:baseTypeId @TO@ Name:cmisSessionFacade @AT@ 4443 @LENGTH@ 10
------UPD SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_FOLDER] @TO@ MethodName:getCMISTypeFor:[baseTypeId] @AT@ 4454 @LENGTH@ 38
------INS SimpleName@@MethodName:equals:[cmisSessionFacade.getCMISTypeFor(baseTypeId)] @TO@ MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_FOLDER) @AT@ 4474 @LENGTH@ 52
---------INS MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @TO@ SimpleName@@MethodName:equals:[cmisSessionFacade.getCMISTypeFor(baseTypeId)] @AT@ 4481 @LENGTH@ 44
------------MOV SimpleName@@Name:baseTypeId @TO@ MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @AT@ 4443 @LENGTH@ 10
------------MOV SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_FOLDER] @TO@ MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @AT@ 4454 @LENGTH@ 38
---------------DEL QualifiedName@@CamelCMISConstants.CMIS_FOLDER @AT@ 4461 @LENGTH@ 30
------------------DEL SimpleName@@CamelCMISConstants @AT@ 4461 @LENGTH@ 18
------------------DEL SimpleName@@CMIS_FOLDER @AT@ 4480 @LENGTH@ 11
---------------INS SimpleName@@baseTypeId @TO@ SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_FOLDER] @AT@ 4514 @LENGTH@ 10


UPD ReturnStatement@@ParenthesizedExpression:(fakeSha.incrementAndGet() + "") @TO@ InfixExpression:fakeSha.incrementAndGet() + "" @AT@ 2792 @LENGTH@ 38
---DEL ParenthesizedExpression@@(fakeSha.incrementAndGet() + "") @AT@ 2799 @LENGTH@ 30
---MOV InfixExpression@@fakeSha.incrementAndGet() + "" @TO@ ReturnStatement@@ParenthesizedExpression:(fakeSha.incrementAndGet() + "") @AT@ 2800 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:tweakClientAuthentication,  @TO@ TypeDeclaration@@[@SpringApplicationConfiguration(classes=Application.class), public]ResourceOwnerPasswordProviderTests, AbstractResourceOwnerPasswordProviderTests @AT@ 612 @LENGTH@ 169
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:tweakClientAuthentication,  @AT@ 612 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:tweakClientAuthentication,  @AT@ 619 @LENGTH@ 4
---INS SimpleName@@MethodName:tweakClientAuthentication @TO@ MethodDeclaration@@public, void, MethodName:tweakClientAuthentication,  @AT@ 624 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:((BaseOAuth2ProtectedResourceDetails)context.getResource()).setClientAuthenticationScheme(AuthenticationScheme.form) @TO@ MethodDeclaration@@public, void, MethodName:tweakClientAuthentication,  @AT@ 656 @LENGTH@ 122
------INS MethodInvocation@@((BaseOAuth2ProtectedResourceDetails)context.getResource()).setClientAuthenticationScheme(AuthenticationScheme.form) @TO@ ExpressionStatement@@MethodInvocation:((BaseOAuth2ProtectedResourceDetails)context.getResource()).setClientAuthenticationScheme(AuthenticationScheme.form) @AT@ 656 @LENGTH@ 121
---------INS ParenthesizedExpression@@((BaseOAuth2ProtectedResourceDetails)context.getResource()) @TO@ MethodInvocation@@((BaseOAuth2ProtectedResourceDetails)context.getResource()).setClientAuthenticationScheme(AuthenticationScheme.form) @AT@ 656 @LENGTH@ 59
------------INS CastExpression@@(BaseOAuth2ProtectedResourceDetails)context.getResource() @TO@ ParenthesizedExpression@@((BaseOAuth2ProtectedResourceDetails)context.getResource()) @AT@ 657 @LENGTH@ 57
---------------INS SimpleType@@BaseOAuth2ProtectedResourceDetails @TO@ CastExpression@@(BaseOAuth2ProtectedResourceDetails)context.getResource() @AT@ 658 @LENGTH@ 34
---------------INS MethodInvocation@@context.getResource() @TO@ CastExpression@@(BaseOAuth2ProtectedResourceDetails)context.getResource() @AT@ 693 @LENGTH@ 21
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResource() @AT@ 693 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getResource:[] @TO@ MethodInvocation@@context.getResource() @AT@ 701 @LENGTH@ 13
---------INS SimpleName@@MethodName:setClientAuthenticationScheme:[AuthenticationScheme.form] @TO@ MethodInvocation@@((BaseOAuth2ProtectedResourceDetails)context.getResource()).setClientAuthenticationScheme(AuthenticationScheme.form) @AT@ 721 @LENGTH@ 56
------------INS QualifiedName@@AuthenticationScheme.form @TO@ SimpleName@@MethodName:setClientAuthenticationScheme:[AuthenticationScheme.form] @AT@ 751 @LENGTH@ 25
---------------INS SimpleName@@AuthenticationScheme @TO@ QualifiedName@@AuthenticationScheme.form @AT@ 751 @LENGTH@ 20
---------------INS SimpleName@@form @TO@ QualifiedName@@AuthenticationScheme.form @AT@ 772 @LENGTH@ 4


MOV MethodDeclaration@@public, voidMethodName:MQTTComponent,  @TO@ TypeDeclaration@@[public]MQTTComponent, UriEndpointComponent @AT@ 1044 @LENGTH@ 65


INS IfStatement@@if (ObjectHelper.isNotEmpty(ccfb.getDependsOn())) {  factory2.addDependsOn(ccfb.getDependsOn());} @TO@ MethodDeclaration@@private, Metadata, MethodName:parseCamelContextNode, Element element, ParserContext context,  @AT@ 12268 @LENGTH@ 117
---INS MethodInvocation@@ObjectHelper.isNotEmpty(ccfb.getDependsOn()) @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(ccfb.getDependsOn())) {  factory2.addDependsOn(ccfb.getDependsOn());} @AT@ 12272 @LENGTH@ 44
------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(ccfb.getDependsOn()) @AT@ 12272 @LENGTH@ 12
------INS SimpleName@@MethodName:isNotEmpty:[ccfb.getDependsOn()] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(ccfb.getDependsOn()) @AT@ 12285 @LENGTH@ 31
---------INS MethodInvocation@@ccfb.getDependsOn() @TO@ SimpleName@@MethodName:isNotEmpty:[ccfb.getDependsOn()] @AT@ 12296 @LENGTH@ 19
------------INS SimpleName@@Name:ccfb @TO@ MethodInvocation@@ccfb.getDependsOn() @AT@ 12296 @LENGTH@ 4
------------INS SimpleName@@MethodName:getDependsOn:[] @TO@ MethodInvocation@@ccfb.getDependsOn() @AT@ 12301 @LENGTH@ 14
---INS Block@@ThenBody:{  factory2.addDependsOn(ccfb.getDependsOn());} @TO@ IfStatement@@if (ObjectHelper.isNotEmpty(ccfb.getDependsOn())) {  factory2.addDependsOn(ccfb.getDependsOn());} @AT@ 12318 @LENGTH@ 67
------INS ExpressionStatement@@MethodInvocation:factory2.addDependsOn(ccfb.getDependsOn()) @TO@ Block@@ThenBody:{  factory2.addDependsOn(ccfb.getDependsOn());} @AT@ 12332 @LENGTH@ 43
---------INS MethodInvocation@@factory2.addDependsOn(ccfb.getDependsOn()) @TO@ ExpressionStatement@@MethodInvocation:factory2.addDependsOn(ccfb.getDependsOn()) @AT@ 12332 @LENGTH@ 42
------------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.addDependsOn(ccfb.getDependsOn()) @AT@ 12332 @LENGTH@ 8
------------INS SimpleName@@MethodName:addDependsOn:[ccfb.getDependsOn()] @TO@ MethodInvocation@@factory2.addDependsOn(ccfb.getDependsOn()) @AT@ 12341 @LENGTH@ 33
---------------INS MethodInvocation@@ccfb.getDependsOn() @TO@ SimpleName@@MethodName:addDependsOn:[ccfb.getDependsOn()] @AT@ 12354 @LENGTH@ 19
------------------INS SimpleName@@Name:ccfb @TO@ MethodInvocation@@ccfb.getDependsOn() @AT@ 12354 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getDependsOn:[] @TO@ MethodInvocation@@ccfb.getDependsOn() @AT@ 12359 @LENGTH@ 14


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/bar"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/bar"] @AT@ 1225 @LENGTH@ 68
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/bar" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/bar" @AT@ 1240 @LENGTH@ 52
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/bar" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/bar" @AT@ 1246 @LENGTH@ 46
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1246 @LENGTH@ 25


UPD IfStatement@@if (t instanceof RemoteException) {  RemoteException re=(RemoteException)t;  String message=re.toString();  if (message.contains(RejectedExecutionException.class.getName())) {    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");  } else {    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());  }} else {  if (t instanceof IOException) {    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");  } else {    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());  }} @TO@ if (t instanceof RemoteException) {  RemoteException re=(RemoteException)t;  String message=re.toString();  if (message.contains(RejectedExecutionException.class.getName())) {    LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy");    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");  } else {    LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());  }} else {  if (t instanceof IOException) {    LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error");    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");  } else {    LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());  }} @AT@ 9487 @LENGTH@ 1359
---UPD Block@@ThenBody:{  RemoteException re=(RemoteException)t;  String message=re.toString();  if (message.contains(RejectedExecutionException.class.getName())) {    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");  } else {    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());  }} @TO@ ThenBody:{  RemoteException re=(RemoteException)t;  String message=re.toString();  if (message.contains(RejectedExecutionException.class.getName())) {    LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy");    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");  } else {    LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());  }} @AT@ 9521 @LENGTH@ 723
------UPD IfStatement@@if (message.contains(RejectedExecutionException.class.getName())) {  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");} else {  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());} @TO@ if (message.contains(RejectedExecutionException.class.getName())) {  LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy");  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");} else {  LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());} @AT@ 9716 @LENGTH@ 514
---------UPD Block@@ThenBody:{  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");} @TO@ ThenBody:{  LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy");  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");} @AT@ 9782 @LENGTH@ 174
------------INS ExpressionStatement@@MethodInvocation:LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy") @TO@ Block@@ThenBody:{  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.SERVICE_BUSY,"Service Busy");} @AT@ 9685 @LENGTH@ 163
---------------INS MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy") @AT@ 9685 @LENGTH@ 162
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy") @AT@ 9685 @LENGTH@ 3
------------------INS SimpleName@@MethodName:info:["Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy"] @TO@ MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy") @AT@ 9689 @LENGTH@ 158
---------------------INS InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @TO@ SimpleName@@MethodName:info:["Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy"] @AT@ 9715 @LENGTH@ 131
------------------------INS StringLiteral@@"Unable to run task: " @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9715 @LENGTH@ 22
------------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9737 @LENGTH@ 1
------------------------INS MethodInvocation@@taskSpec.getTaskAttemptID() @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9740 @LENGTH@ 27
---------------------------INS SimpleName@@Name:taskSpec @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 9740 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getTaskAttemptID:[] @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 9749 @LENGTH@ 18
------------------------INS StringLiteral@@" on containerId: " @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9770 @LENGTH@ 19
------------------------INS SimpleName@@containerId @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9816 @LENGTH@ 11
------------------------INS StringLiteral@@", Service Busy" @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Service Busy" @AT@ 9830 @LENGTH@ 16
---------UPD Block@@ElseBody:{  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());} @TO@ ElseBody:{  LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());} @AT@ 9962 @LENGTH@ 268
------------MOV ExpressionStatement@@MethodInvocation:LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @TO@ Block@@ElseBody:{  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.toString());} @AT@ 9218 @LENGTH@ 102
---UPD Block@@ElseBody:{  if (t instanceof IOException) {    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");  } else {    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());  }} @TO@ ElseBody:{  if (t instanceof IOException) {    LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error");    getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");  } else {    LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);    getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());  }} @AT@ 10250 @LENGTH@ 596
------UPD IfStatement@@if (t instanceof IOException) {  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");} else {  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());} @TO@ if (t instanceof IOException) {  LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error");  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");} else {  LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());} @AT@ 10372 @LENGTH@ 460
---------UPD Block@@ThenBody:{  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");} @TO@ ThenBody:{  LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error");  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");} @AT@ 10402 @LENGTH@ 188
------------INS ExpressionStatement@@MethodInvocation:LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error") @TO@ Block@@ThenBody:{  getTaskCommunicatorContext().taskKilled(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.COMMUNICATION_ERROR,"Communication Error");} @AT@ 10604 @LENGTH@ 170
---------------INS MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error") @AT@ 10604 @LENGTH@ 169
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error") @AT@ 10604 @LENGTH@ 3
------------------INS SimpleName@@MethodName:info:["Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error"] @TO@ MethodInvocation@@LOG.info("Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error") @AT@ 10608 @LENGTH@ 165
---------------------INS InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @TO@ SimpleName@@MethodName:info:["Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error"] @AT@ 10634 @LENGTH@ 138
------------------------INS StringLiteral@@"Unable to run task: " @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10634 @LENGTH@ 22
------------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10656 @LENGTH@ 1
------------------------INS MethodInvocation@@taskSpec.getTaskAttemptID() @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10659 @LENGTH@ 27
---------------------------INS SimpleName@@Name:taskSpec @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 10659 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getTaskAttemptID:[] @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 10668 @LENGTH@ 18
------------------------INS StringLiteral@@" on containerId: " @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10689 @LENGTH@ 19
------------------------INS SimpleName@@containerId @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10735 @LENGTH@ 11
------------------------INS StringLiteral@@", Communication Error" @TO@ InfixExpression@@"Unable to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId+ ", Communication Error" @AT@ 10749 @LENGTH@ 23
---------UPD Block@@ElseBody:{  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());} @TO@ ElseBody:{  LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t);  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());} @AT@ 10596 @LENGTH@ 236
------------INS ExpressionStatement@@MethodInvocation:LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @TO@ Block@@ElseBody:{  getTaskCommunicatorContext().taskFailed(taskSpec.getTaskAttemptID(),TaskAttemptEndReason.OTHER,t.getMessage());} @AT@ 11029 @LENGTH@ 102
---------------INS MethodInvocation@@LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @AT@ 11029 @LENGTH@ 101
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @AT@ 11029 @LENGTH@ 3
------------------INS SimpleName@@MethodName:info:["Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId, t] @TO@ MethodInvocation@@LOG.info("Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId,t) @AT@ 11033 @LENGTH@ 97
---------------------INS InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @TO@ SimpleName@@MethodName:info:["Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId, t] @AT@ 11038 @LENGTH@ 88
------------------------INS StringLiteral@@"Failed to run task: " @TO@ InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @AT@ 11038 @LENGTH@ 22
------------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @AT@ 11060 @LENGTH@ 1
------------------------INS MethodInvocation@@taskSpec.getTaskAttemptID() @TO@ InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @AT@ 11063 @LENGTH@ 27
---------------------------INS SimpleName@@Name:taskSpec @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 11063 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getTaskAttemptID:[] @TO@ MethodInvocation@@taskSpec.getTaskAttemptID() @AT@ 11072 @LENGTH@ 18
------------------------INS StringLiteral@@" on containerId: " @TO@ InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @AT@ 11093 @LENGTH@ 19
------------------------INS SimpleName@@containerId @TO@ InfixExpression@@"Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId @AT@ 11115 @LENGTH@ 11
---------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:info:["Failed to run task: " + taskSpec.getTaskAttemptID() + " on containerId: "+ containerId, t] @AT@ 11128 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new AmbiguousMethodException(udafClass,null,null) @TO@ ClassInstanceCreation:new AmbiguousMethodException(udafClass,argClasses,mList) @AT@ 3536 @LENGTH@ 58
---UPD ClassInstanceCreation@@AmbiguousMethodException[udafClass, null, null] @TO@ AmbiguousMethodException[udafClass, argClasses, mList] @AT@ 3542 @LENGTH@ 51
------INS SimpleName@@argClasses @TO@ ClassInstanceCreation@@AmbiguousMethodException[udafClass, null, null] @AT@ 3557 @LENGTH@ 10
------INS SimpleName@@mList @TO@ ClassInstanceCreation@@AmbiguousMethodException[udafClass, null, null] @AT@ 3569 @LENGTH@ 5
------DEL NullLiteral@@null @AT@ 3582 @LENGTH@ 4
------DEL NullLiteral@@null @AT@ 3588 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:mock.message(0).body().contains("Dear Ibsen, Claus") @TO@ MethodDeclaration@@public, void, MethodName:testFreemarkerLetter, Exception,  @AT@ 1784 @LENGTH@ 53
---INS MethodInvocation@@mock.message(0).body().contains("Dear Ibsen, Claus") @TO@ ExpressionStatement@@MethodInvocation:mock.message(0).body().contains("Dear Ibsen, Claus") @AT@ 1784 @LENGTH@ 52
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.message(0).body().contains("Dear Ibsen, Claus") @AT@ 1784 @LENGTH@ 22
------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.message(0).body().contains("Dear Ibsen, Claus") @AT@ 1784 @LENGTH@ 15
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1797 @LENGTH@ 1
------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.message(0).body().contains("Dear Ibsen, Claus") @AT@ 1784 @LENGTH@ 4
------INS SimpleName@@MethodName:contains:["Dear Ibsen, Claus"] @TO@ MethodInvocation@@mock.message(0).body().contains("Dear Ibsen, Claus") @AT@ 1807 @LENGTH@ 29
---------INS StringLiteral@@"Dear Ibsen, Claus" @TO@ SimpleName@@MethodName:contains:["Dear Ibsen, Claus"] @AT@ 1816 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1756 @LENGTH@ 82
---INS MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1756 @LENGTH@ 81
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1756 @LENGTH@ 81
---------INS MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1767 @LENGTH@ 69
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1767 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1772 @LENGTH@ 64
---------------INS StringLiteral@@"\"name\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1781 @LENGTH@ 54


INS IfStatement@@if (artifact == null) {  throw new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?");} @TO@ MethodDeclaration@@private, void, MethodName:addJBossModules, MojoFailureException,  @AT@ 12156 @LENGTH@ 243
---INS InfixExpression@@artifact == null @TO@ IfStatement@@if (artifact == null) {  throw new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?");} @AT@ 12160 @LENGTH@ 16
------INS SimpleName@@artifact @TO@ InfixExpression@@artifact == null @AT@ 12160 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@artifact == null @AT@ 12168 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@artifact == null @AT@ 12172 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?");} @TO@ IfStatement@@if (artifact == null) {  throw new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?");} @AT@ 12178 @LENGTH@ 221
------INS ThrowStatement@@ClassInstanceCreation:new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?") @TO@ Block@@ThenBody:{  throw new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?");} @AT@ 12192 @LENGTH@ 197
---------INS ClassInstanceCreation@@MojoFailureException["Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?"] @TO@ ThrowStatement@@ClassInstanceCreation:new MojoFailureException("Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?") @AT@ 12198 @LENGTH@ 190
------------INS New@@new @TO@ ClassInstanceCreation@@MojoFailureException["Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?"] @AT@ 12198 @LENGTH@ 3
------------INS SimpleType@@MojoFailureException @TO@ ClassInstanceCreation@@MojoFailureException["Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?"] @AT@ 12202 @LENGTH@ 20
------------INS InfixExpression@@"Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?" @TO@ ClassInstanceCreation@@MojoFailureException["Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?"] @AT@ 12223 @LENGTH@ 164
---------------INS StringLiteral@@"Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." @TO@ InfixExpression@@"Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?" @AT@ 12223 @LENGTH@ 78
---------------INS Operator@@+ @TO@ InfixExpression@@"Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?" @AT@ 12301 @LENGTH@ 1
---------------INS StringLiteral@@" Is a WildFly Swarm fraction present as a project dependency?" @TO@ InfixExpression@@"Unable to find org.jboss.modules:jboss-modules:jar in the project artifacts." + " Is a WildFly Swarm fraction present as a project dependency?" @AT@ 12324 @LENGTH@ 63


UPD TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  OAuthWebViewData viewData=new OAuthWebViewData(boxClient.getOAuthDataController());  viewData.setOptionalState(String.valueOf(csrfId));  final HtmlPage authPage=webClient.getPage(viewData.buildUrl().toString());  final HtmlForm loginForm=authPage.getFormByName("login_form");  final HtmlTextInput login=loginForm.getInputByName("login");  login.setText(configuration.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("password");  password.setText(configuration.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("login_submit");  final HtmlPage consentPage=submitInput.click();  final HtmlForm consentForm=consentPage.getFormByName("consent_form");  final HtmlButton consentAccept=consentForm.getButtonByName("consent_accept");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=consentAccept.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    final SecurityException e=new SecurityException("Invalid CSRF code!");    listener.onAuthFlowException(e);  } else {    final String authorizationCode=params.get("code");    final IBoxOAuthManager oAuthManager=boxClient.getOAuthManager();    final BoxOAuthToken oAuthToken=oAuthManager.createOAuth(authorizationCode,configuration.getClientId(),configuration.getClientSecret(),null);    final OAuthDataMessage authDataMessage=new OAuthDataMessage(oAuthToken,boxClient.getJSONParser(),boxClient.getResourceHub());    listener.onAuthFlowEvent(OAuthEvent.OAUTH_CREATED,authDataMessage);  }} catch (Exception e) {  listener.onAuthFlowException(e);} @TO@ try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  OAuthWebViewData viewData=new OAuthWebViewData(boxClient.getOAuthDataController());  viewData.setOptionalState(String.valueOf(csrfId));  final HtmlPage authPage=webClient.getPage(viewData.buildUrl().toString());  final HtmlDivision div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]");  if (div != null) {    final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();    throw new IllegalArgumentException("Error authorizing application: " + errorMessage);  }  final HtmlForm loginForm=authPage.getFormByName("login_form");  final HtmlTextInput login=loginForm.getInputByName("login");  login.setText(configuration.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("password");  password.setText(configuration.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("login_submit");  final HtmlPage consentPage=submitInput.click();  final HtmlForm consentForm=consentPage.getFormByName("consent_form");  final HtmlButton consentAccept=consentForm.getButtonByName("consent_accept");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=consentAccept.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    final SecurityException e=new SecurityException("Invalid CSRF code!");    listener.onAuthFlowException(e);  } else {    final String authorizationCode=params.get("code");    final IBoxOAuthManager oAuthManager=boxClient.getOAuthManager();    final BoxOAuthToken oAuthToken=oAuthManager.createOAuth(authorizationCode,configuration.getClientId(),configuration.getClientSecret(),null);    final OAuthDataMessage authDataMessage=new OAuthDataMessage(oAuthToken,boxClient.getJSONParser(),boxClient.getResourceHub());    listener.onAuthFlowEvent(OAuthEvent.OAUTH_CREATED,authDataMessage);  }} catch (Exception e) {  listener.onAuthFlowException(e);} @AT@ 4877 @LENGTH@ 3286
---INS VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]"); @TO@ TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  OAuthWebViewData viewData=new OAuthWebViewData(boxClient.getOAuthDataController());  viewData.setOptionalState(String.valueOf(csrfId));  final HtmlPage authPage=webClient.getPage(viewData.buildUrl().toString());  final HtmlForm loginForm=authPage.getFormByName("login_form");  final HtmlTextInput login=loginForm.getInputByName("login");  login.setText(configuration.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("password");  password.setText(configuration.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("login_submit");  final HtmlPage consentPage=submitInput.click();  final HtmlForm consentForm=consentPage.getFormByName("consent_form");  final HtmlButton consentAccept=consentForm.getButtonByName("consent_accept");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=consentAccept.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    final SecurityException e=new SecurityException("Invalid CSRF code!");    listener.onAuthFlowException(e);  } else {    final String authorizationCode=params.get("code");    final IBoxOAuthManager oAuthManager=boxClient.getOAuthManager();    final BoxOAuthToken oAuthToken=oAuthManager.createOAuth(authorizationCode,configuration.getClientId(),configuration.getClientSecret(),null);    final OAuthDataMessage authDataMessage=new OAuthDataMessage(oAuthToken,boxClient.getJSONParser(),boxClient.getResourceHub());    listener.onAuthFlowEvent(OAuthEvent.OAUTH_CREATED,authDataMessage);  }} catch (Exception e) {  listener.onAuthFlowException(e);} @AT@ 5957 @LENGTH@ 114
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]"); @AT@ 5957 @LENGTH@ 5
------INS SimpleType@@HtmlDivision @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]"); @AT@ 5963 @LENGTH@ 12
------INS VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]"); @AT@ 5976 @LENGTH@ 94
---------INS SimpleName@@div @TO@ VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @AT@ 5976 @LENGTH@ 3
---------INS MethodInvocation@@authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @TO@ VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @AT@ 5982 @LENGTH@ 88
------------INS SimpleName@@Name:authPage @TO@ MethodInvocation@@authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @AT@ 5982 @LENGTH@ 8
------------INS SimpleName@@MethodName:getFirstByXPath:["//div[contains(concat(' ', @class, ' '), ' error_message ')]"] @TO@ MethodInvocation@@authPage.getFirstByXPath("//div[contains(concat(' ', @class, ' '), ' error_message ')]") @AT@ 5991 @LENGTH@ 79
---------------INS StringLiteral@@"//div[contains(concat(' ', @class, ' '), ' error_message ')]" @TO@ SimpleName@@MethodName:getFirstByXPath:["//div[contains(concat(' ', @class, ' '), ' error_message ')]"] @AT@ 6007 @LENGTH@ 62
---INS IfStatement@@if (div != null) {  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @TO@ TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  OAuthWebViewData viewData=new OAuthWebViewData(boxClient.getOAuthDataController());  viewData.setOptionalState(String.valueOf(csrfId));  final HtmlPage authPage=webClient.getPage(viewData.buildUrl().toString());  final HtmlForm loginForm=authPage.getFormByName("login_form");  final HtmlTextInput login=loginForm.getInputByName("login");  login.setText(configuration.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("password");  password.setText(configuration.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("login_submit");  final HtmlPage consentPage=submitInput.click();  final HtmlForm consentForm=consentPage.getFormByName("consent_form");  final HtmlButton consentAccept=consentForm.getButtonByName("consent_accept");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=consentAccept.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    final SecurityException e=new SecurityException("Invalid CSRF code!");    listener.onAuthFlowException(e);  } else {    final String authorizationCode=params.get("code");    final IBoxOAuthManager oAuthManager=boxClient.getOAuthManager();    final BoxOAuthToken oAuthToken=oAuthManager.createOAuth(authorizationCode,configuration.getClientId(),configuration.getClientSecret(),null);    final OAuthDataMessage authDataMessage=new OAuthDataMessage(oAuthToken,boxClient.getJSONParser(),boxClient.getResourceHub());    listener.onAuthFlowEvent(OAuthEvent.OAUTH_CREATED,authDataMessage);  }} catch (Exception e) {  listener.onAuthFlowException(e);} @AT@ 6084 @LENGTH@ 333
------INS InfixExpression@@div != null @TO@ IfStatement@@if (div != null) {  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @AT@ 6088 @LENGTH@ 11
---------INS SimpleName@@div @TO@ InfixExpression@@div != null @AT@ 6088 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@div != null @AT@ 6091 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@div != null @AT@ 6095 @LENGTH@ 4
------INS Block@@ThenBody:{  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @TO@ IfStatement@@if (div != null) {  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @AT@ 6101 @LENGTH@ 316
---------INS VariableDeclarationStatement@@final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim(); @TO@ Block@@ThenBody:{  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @AT@ 6119 @LENGTH@ 182
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim(); @AT@ 6119 @LENGTH@ 5
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim(); @AT@ 6125 @LENGTH@ 6
------------INS VariableDeclarationFragment@@errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @TO@ VariableDeclarationStatement@@final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim(); @AT@ 6132 @LENGTH@ 168
---------------INS SimpleName@@errorMessage @TO@ VariableDeclarationFragment@@errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6132 @LENGTH@ 12
---------------INS MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @TO@ VariableDeclarationFragment@@errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6147 @LENGTH@ 153
------------------INS MethodInvocation@@MethodName:replaceAll:[" Show Error Details", ":"] @TO@ MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6147 @LENGTH@ 125
---------------------INS StringLiteral@@" Show Error Details" @TO@ MethodInvocation@@MethodName:replaceAll:[" Show Error Details", ":"] @AT@ 6245 @LENGTH@ 21
---------------------INS StringLiteral@@":" @TO@ MethodInvocation@@MethodName:replaceAll:[" Show Error Details", ":"] @AT@ 6268 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:replaceAll:["\\s+", " "] @TO@ MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6147 @LENGTH@ 65
---------------------INS StringLiteral@@"\\s+" @TO@ MethodInvocation@@MethodName:replaceAll:["\\s+", " "] @AT@ 6200 @LENGTH@ 6
---------------------INS StringLiteral@@" " @TO@ MethodInvocation@@MethodName:replaceAll:["\\s+", " "] @AT@ 6208 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:getTextContent:[] @TO@ MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6147 @LENGTH@ 20
------------------INS SimpleName@@Name:div @TO@ MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6147 @LENGTH@ 3
------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim() @AT@ 6294 @LENGTH@ 6
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Error authorizing application: " + errorMessage) @TO@ Block@@ThenBody:{  final String errorMessage=div.getTextContent().replaceAll("\\s+"," ").replaceAll(" Show Error Details",":").trim();  throw new IllegalArgumentException("Error authorizing application: " + errorMessage);} @AT@ 6318 @LENGTH@ 85
------------INS ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + errorMessage] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Error authorizing application: " + errorMessage) @AT@ 6324 @LENGTH@ 78
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + errorMessage] @AT@ 6324 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + errorMessage] @AT@ 6328 @LENGTH@ 24
---------------INS InfixExpression@@"Error authorizing application: " + errorMessage @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + errorMessage] @AT@ 6353 @LENGTH@ 48
------------------INS StringLiteral@@"Error authorizing application: " @TO@ InfixExpression@@"Error authorizing application: " + errorMessage @AT@ 6353 @LENGTH@ 33
------------------INS Operator@@+ @TO@ InfixExpression@@"Error authorizing application: " + errorMessage @AT@ 6386 @LENGTH@ 1
------------------INS SimpleName@@errorMessage @TO@ InfixExpression@@"Error authorizing application: " + errorMessage @AT@ 6389 @LENGTH@ 12


UPD IfStatement@@if (arguments.length < 0) {  throw new UDFArgumentLengthException("UPPER requires 1 argument, got " + arguments.length);} @TO@ if (arguments.length != 1) {  throw new UDFArgumentLengthException("UPPER requires 1 argument, got " + arguments.length);} @AT@ 2753 @LENGTH@ 142
---UPD InfixExpression@@arguments.length < 0 @TO@ arguments.length != 1 @AT@ 2757 @LENGTH@ 20
------UPD Operator@@< @TO@ != @AT@ 2773 @LENGTH@ 1
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 2776 @LENGTH@ 1


UPD MethodDeclaration@@void, MethodName:processExchange, Exchange exchange,  @TO@ public, void, MethodName:done, boolean doneSync,  @AT@ 1583 @LENGTH@ 356


UPD ReturnStatement@@MethodInvocation:Integer.valueOf(getOptionsFromCoder(coder)) @TO@ MethodInvocation:getOptionsFromCoder(coder) @AT@ 2089 @LENGTH@ 51
---DEL MethodInvocation@@Integer.valueOf(getOptionsFromCoder(coder)) @AT@ 2096 @LENGTH@ 43
------DEL SimpleName@@Name:Integer @AT@ 2096 @LENGTH@ 7
------DEL SimpleName@@MethodName:valueOf:[getOptionsFromCoder(coder)] @AT@ 2104 @LENGTH@ 35
---MOV MethodInvocation@@getOptionsFromCoder(coder) @TO@ ReturnStatement@@MethodInvocation:Integer.valueOf(getOptionsFromCoder(coder)) @AT@ 2112 @LENGTH@ 26


INS FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @TO@ TypeDeclaration@@[public]OAuth2ClientAuthenticationProcessingFilterTests,  @AT@ 2327 @LENGTH@ 61
---INS Modifier@@public @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 2327 @LENGTH@ 6
---INS SimpleType@@ExpectedException @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 2334 @LENGTH@ 17
---INS VariableDeclarationFragment@@expected=ExpectedException.none() @TO@ FieldDeclaration@@public, ExpectedException, [expected=ExpectedException.none()] @AT@ 2352 @LENGTH@ 35
------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=ExpectedException.none() @AT@ 2352 @LENGTH@ 8
------INS MethodInvocation@@ExpectedException.none() @TO@ VariableDeclarationFragment@@expected=ExpectedException.none() @AT@ 2363 @LENGTH@ 24
---------INS SimpleName@@Name:ExpectedException @TO@ MethodInvocation@@ExpectedException.none() @AT@ 2363 @LENGTH@ 17
---------INS SimpleName@@MethodName:none:[] @TO@ MethodInvocation@@ExpectedException.none() @AT@ 2381 @LENGTH@ 6


UPD IfStatement@@if (json != null) {  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @TO@ if (json != null) {  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  OutputStream fos=buildContext.newFileOutputStream(out);  fos.write(schema.getBytes());  fos.close();  log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @AT@ 8085 @LENGTH@ 3176
---UPD Block@@ThenBody:{  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @TO@ ThenBody:{  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  OutputStream fos=buildContext.newFileOutputStream(out);  fos.write(schema.getBytes());  fos.close();  log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @AT@ 8103 @LENGTH@ 3158
------DEL TryStatement@@try (OutputStream fos=buildContext.newFileOutputStream(out)){  fos.write(schema.getBytes());}  @AT@ 10946 @LENGTH@ 164
---------DEL VariableDeclarationExpression@@OutputStream fos=buildContext.newFileOutputStream(out) @AT@ 10951 @LENGTH@ 56
------------DEL SimpleType@@OutputStream @AT@ 10951 @LENGTH@ 12
------INS VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @TO@ Block@@ThenBody:{  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @AT@ 10987 @LENGTH@ 57
---------MOV VariableDeclarationFragment@@fos=buildContext.newFileOutputStream(out) @TO@ VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @AT@ 10964 @LENGTH@ 43
---------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@OutputStream fos=buildContext.newFileOutputStream(out); @AT@ 10987 @LENGTH@ 12
------MOV ExpressionStatement@@MethodInvocation:fos.write(schema.getBytes()) @TO@ Block@@ThenBody:{  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @AT@ 11047 @LENGTH@ 29
------INS ExpressionStatement@@MethodInvocation:fos.close() @TO@ Block@@ThenBody:{  DataFormatModel dataFormatModel=new DataFormatModel();  dataFormatModel.setName(name);  dataFormatModel.setTitle("");  dataFormatModel.setModelName(modelName);  dataFormatModel.setLabel("");  dataFormatModel.setDescription(project.getDescription());  dataFormatModel.setJavaType(javaType);  dataFormatModel.setGroupId(project.getGroupId());  dataFormatModel.setArtifactId(project.getArtifactId());  dataFormatModel.setVersion(project.getVersion());  List<Map<String,String>> rows=JSonSchemaHelper.parseJsonSchema("model",json,false);  for (  Map<String,String> row : rows) {    if (row.containsKey("title")) {      String title=row.get("title");      dataFormatModel.setTitle(asModelTitle(name,title));    }    if (row.containsKey("label")) {      dataFormatModel.setLabel(row.get("label"));    }    if (row.containsKey("javaType")) {      dataFormatModel.setModelJavaType(row.get("javaType"));    }    if ("camel-core".equals(project.getArtifactId())) {      if (row.containsKey("description")) {        dataFormatModel.setLabel(row.get("description"));      }    }  }  log.debug("Model " + dataFormatModel);  String properties=after(json,"  \"properties\": {");  String schema=createParameterJsonSchema(dataFormatModel,properties);  log.debug("JSon schema\n" + schema);  File dir=new File(schemaOutDir,schemaSubDirectory(dataFormatModel.getJavaType()));  dir.mkdirs();  File out=new File(dir,name + ".json");  try (OutputStream fos=buildContext.newFileOutputStream(out)){    fos.write(schema.getBytes());  }   log.debug("Generated " + out + " containing JSon schema for "+ name+ " data format");} @AT@ 11139 @LENGTH@ 12
---------INS MethodInvocation@@fos.close() @TO@ ExpressionStatement@@MethodInvocation:fos.close() @AT@ 11139 @LENGTH@ 11
------------INS SimpleName@@Name:fos @TO@ MethodInvocation@@fos.close() @AT@ 11139 @LENGTH@ 3
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@fos.close() @AT@ 11143 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:line=getOpts().isSilent() ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @TO@ Assignment:line=(getOpts().isSilent() && getOpts().getScriptFile() != null) ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @AT@ 27117 @LENGTH@ 108
---UPD Assignment@@line=getOpts().isSilent() ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @TO@ line=(getOpts().isSilent() && getOpts().getScriptFile() != null) ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @AT@ 27117 @LENGTH@ 107
------UPD ConditionalExpression@@getOpts().isSilent() ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @TO@ (getOpts().isSilent() && getOpts().getScriptFile() != null) ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @AT@ 27124 @LENGTH@ 100
---------INS ParenthesizedExpression@@(getOpts().isSilent() && getOpts().getScriptFile() != null) @TO@ ConditionalExpression@@getOpts().isSilent() ? reader.readLine(null,ConsoleReader.NULL_MASK) : reader.readLine(getPrompt()) @AT@ 27124 @LENGTH@ 59
------------INS InfixExpression@@getOpts().isSilent() && getOpts().getScriptFile() != null @TO@ ParenthesizedExpression@@(getOpts().isSilent() && getOpts().getScriptFile() != null) @AT@ 27125 @LENGTH@ 57
---------------INS MethodInvocation@@getOpts().isSilent() @TO@ InfixExpression@@getOpts().isSilent() && getOpts().getScriptFile() != null @AT@ 27125 @LENGTH@ 20
------------------MOV MethodInvocation@@MethodName:getOpts:[] @TO@ MethodInvocation@@getOpts().isSilent() @AT@ 27124 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:isSilent:[] @TO@ MethodInvocation@@getOpts().isSilent() @AT@ 27134 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@getOpts().isSilent() && getOpts().getScriptFile() != null @AT@ 27145 @LENGTH@ 2
---------------INS InfixExpression@@getOpts().getScriptFile() != null @TO@ InfixExpression@@getOpts().isSilent() && getOpts().getScriptFile() != null @AT@ 27149 @LENGTH@ 33
------------------INS MethodInvocation@@getOpts().getScriptFile() @TO@ InfixExpression@@getOpts().getScriptFile() != null @AT@ 27149 @LENGTH@ 25
---------------------INS MethodInvocation@@MethodName:getOpts:[] @TO@ MethodInvocation@@getOpts().getScriptFile() @AT@ 27149 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getScriptFile:[] @TO@ MethodInvocation@@getOpts().getScriptFile() @AT@ 27159 @LENGTH@ 15
------------------INS Operator@@!= @TO@ InfixExpression@@getOpts().getScriptFile() != null @AT@ 27174 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@getOpts().getScriptFile() != null @AT@ 27178 @LENGTH@ 4
---------DEL MethodInvocation@@getOpts().isSilent() @AT@ 27124 @LENGTH@ 20


INS TryStatement@@try {  remove(datasourceAddress());} catch (Exception e) {} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 2997 @LENGTH@ 189
---MOV ExpressionStatement@@MethodInvocation:remove(datasourceAddress()) @TO@ TryStatement@@try {  remove(datasourceAddress());} catch (Exception e) {} @AT@ 2892 @LENGTH@ 28
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  remove(datasourceAddress());} catch (Exception e) {} @AT@ 3062 @LENGTH@ 124
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3069 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3069 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3079 @LENGTH@ 1


UPD MethodDeclaration@@RowIndex[], MethodName:getCurrentRowIndexEntries, boolean[] included, IOException,  @TO@ void, MethodName:getCurrentRowIndexEntries, boolean[] included, RowIndex[] indexes, IOException,  @AT@ 3891 @LENGTH@ 65
---DEL ArrayType@@RowIndex[] @AT@ 3880 @LENGTH@ 10
---INS PrimitiveType@@void @TO@ MethodDeclaration@@RowIndex[], MethodName:getCurrentRowIndexEntries, boolean[] included, IOException,  @AT@ 3880 @LENGTH@ 4
---INS SimpleName@@MethodName:getCurrentRowIndexEntries @TO@ MethodDeclaration@@RowIndex[], MethodName:getCurrentRowIndexEntries, boolean[] included, IOException,  @AT@ 3885 @LENGTH@ 25
---DEL SimpleName@@MethodName:getCurrentRowIndexEntries @AT@ 3891 @LENGTH@ 25
---INS SingleVariableDeclaration@@RowIndex[] indexes @TO@ MethodDeclaration@@RowIndex[], MethodName:getCurrentRowIndexEntries, boolean[] included, IOException,  @AT@ 3931 @LENGTH@ 18
------INS ArrayType@@RowIndex[] @TO@ SingleVariableDeclaration@@RowIndex[] indexes @AT@ 3931 @LENGTH@ 10
---------MOV SimpleType@@RowIndex @TO@ ArrayType@@RowIndex[] @AT@ 3880 @LENGTH@ 8
------INS SimpleName@@indexes @TO@ SingleVariableDeclaration@@RowIndex[] indexes @AT@ 3942 @LENGTH@ 7


INS IfStatement@@if (exchange.hasOut()) {  query.setVariable("out",exchange.getOut());} @TO@ MethodDeclaration@@protected, void, MethodName:configureQuery, Exchange exchange,  @AT@ 4415 @LENGTH@ 91
---INS MethodInvocation@@exchange.hasOut() @TO@ IfStatement@@if (exchange.hasOut()) {  query.setVariable("out",exchange.getOut());} @AT@ 4419 @LENGTH@ 17
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 4419 @LENGTH@ 8
------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 4428 @LENGTH@ 8
---INS Block@@ThenBody:{  query.setVariable("out",exchange.getOut());} @TO@ IfStatement@@if (exchange.hasOut()) {  query.setVariable("out",exchange.getOut());} @AT@ 4438 @LENGTH@ 68
------MOV ExpressionStatement@@MethodInvocation:query.setVariable("out",exchange.getOut()) @TO@ Block@@ThenBody:{  query.setVariable("out",exchange.getOut());} @AT@ 4340 @LENGTH@ 44


DEL ExpressionStatement@@MethodInvocation:remove(address1) @AT@ 3079 @LENGTH@ 17


DEL MethodDeclaration@@public, voidMethodName:MeterData,  @AT@ 938 @LENGTH@ 21
---DEL Modifier@@public @AT@ 938 @LENGTH@ 6
---DEL SimpleName@@MethodName:MeterData @AT@ 945 @LENGTH@ 9


UPD IfStatement@@if (isStoreAsBodyOnCompletion()) {  List<V> list=(List<V>)exchange.removeProperty(Exchange.GROUPED_EXCHANGE);  if (list != null) {    exchange.getIn().setBody(list);  }} @TO@ if (exchange != null && isStoreAsBodyOnCompletion()) {  List<V> list=(List<V>)exchange.removeProperty(Exchange.GROUPED_EXCHANGE);  if (list != null) {    exchange.getIn().setBody(list);  }} @AT@ 2802 @LENGTH@ 227
---INS InfixExpression@@exchange != null && isStoreAsBodyOnCompletion() @TO@ IfStatement@@if (isStoreAsBodyOnCompletion()) {  List<V> list=(List<V>)exchange.removeProperty(Exchange.GROUPED_EXCHANGE);  if (list != null) {    exchange.getIn().setBody(list);  }} @AT@ 2806 @LENGTH@ 47
------INS InfixExpression@@exchange != null @TO@ InfixExpression@@exchange != null && isStoreAsBodyOnCompletion() @AT@ 2806 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 2806 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 2814 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 2818 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@exchange != null && isStoreAsBodyOnCompletion() @AT@ 2822 @LENGTH@ 2
------INS MethodInvocation@@MethodName:isStoreAsBodyOnCompletion:[] @TO@ InfixExpression@@exchange != null && isStoreAsBodyOnCompletion() @AT@ 2826 @LENGTH@ 27
---DEL MethodInvocation@@MethodName:isStoreAsBodyOnCompletion:[] @AT@ 2806 @LENGTH@ 27


INS FieldDeclaration@@private, final, Log, [log=LogFactory.getLog(getClass())] @TO@ TypeDeclaration@@[public]VFSFileSystem, DefaultFileSystem @AT@ 2096 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, Log, [log=LogFactory.getLog(getClass())] @AT@ 2096 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, Log, [log=LogFactory.getLog(getClass())] @AT@ 2104 @LENGTH@ 5
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, final, Log, [log=LogFactory.getLog(getClass())] @AT@ 2110 @LENGTH@ 3
---INS VariableDeclarationFragment@@log=LogFactory.getLog(getClass()) @TO@ FieldDeclaration@@private, final, Log, [log=LogFactory.getLog(getClass())] @AT@ 2114 @LENGTH@ 35
------INS SimpleName@@log @TO@ VariableDeclarationFragment@@log=LogFactory.getLog(getClass()) @AT@ 2114 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(getClass()) @TO@ VariableDeclarationFragment@@log=LogFactory.getLog(getClass()) @AT@ 2120 @LENGTH@ 29
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(getClass()) @AT@ 2120 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[getClass()] @TO@ MethodInvocation@@LogFactory.getLog(getClass()) @AT@ 2131 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ SimpleName@@MethodName:getLog:[getClass()] @AT@ 2138 @LENGTH@ 10


MOV VariableDeclarationStatement@@Message msg; @TO@ MethodDeclaration@@public, void, MethodName:handleDelivery, String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body, IOException,  @AT@ 6400 @LENGTH@ 12


INS MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @TO@ TypeDeclaration@@[public]NonBlockingOpDeDupProc, [Transform] @AT@ 7913 @LENGTH@ 515
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7913 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7921 @LENGTH@ 4
---INS SimpleName@@MethodName:fixContextReferences @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7926 @LENGTH@ 20
---INS SingleVariableDeclaration@@SelectOperator cSEL @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7947 @LENGTH@ 19
------INS SimpleType@@SelectOperator @TO@ SingleVariableDeclaration@@SelectOperator cSEL @AT@ 7947 @LENGTH@ 14
------INS SimpleName@@cSEL @TO@ SingleVariableDeclaration@@SelectOperator cSEL @AT@ 7962 @LENGTH@ 4
---INS SingleVariableDeclaration@@SelectOperator pSEL @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7968 @LENGTH@ 19
------INS SimpleType@@SelectOperator @TO@ SingleVariableDeclaration@@SelectOperator pSEL @AT@ 7968 @LENGTH@ 14
------INS SimpleName@@pSEL @TO@ SingleVariableDeclaration@@SelectOperator pSEL @AT@ 7983 @LENGTH@ 4
---INS VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7995 @LENGTH@ 68
------INS ParameterizedType@@Collection<QBJoinTree> @TO@ VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @AT@ 7995 @LENGTH@ 22
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<QBJoinTree> @AT@ 7995 @LENGTH@ 10
---------INS SimpleType@@QBJoinTree @TO@ ParameterizedType@@Collection<QBJoinTree> @AT@ 8006 @LENGTH@ 10
------INS VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @TO@ VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @AT@ 8018 @LENGTH@ 44
---------INS SimpleName@@qbJoinTrees @TO@ VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @AT@ 8018 @LENGTH@ 11
---------INS MethodInvocation@@pctx.getJoinContext().values() @TO@ VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getJoinContext:[] @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 21
------------INS SimpleName@@Name:pctx @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 4
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8054 @LENGTH@ 8
---INS EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 8068 @LENGTH@ 356
------INS SingleVariableDeclaration@@QBJoinTree qbJoinTree @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8073 @LENGTH@ 21
---------INS SimpleType@@QBJoinTree @TO@ SingleVariableDeclaration@@QBJoinTree qbJoinTree @AT@ 8073 @LENGTH@ 10
---------INS SimpleName@@qbJoinTree @TO@ SingleVariableDeclaration@@QBJoinTree qbJoinTree @AT@ 8084 @LENGTH@ 10
------INS SimpleName@@qbJoinTrees @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8097 @LENGTH@ 11
------INS VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8118 @LENGTH@ 92
---------INS ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @TO@ VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @AT@ 8118 @LENGTH@ 45
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8118 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8122 @LENGTH@ 6
------------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8130 @LENGTH@ 32
---------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8130 @LENGTH@ 8
---------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8139 @LENGTH@ 22
---------INS VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @TO@ VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @AT@ 8164 @LENGTH@ 45
------------INS SimpleName@@aliasToOpInfo @TO@ VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @AT@ 8164 @LENGTH@ 13
------------INS MethodInvocation@@qbJoinTree.getAliasToOpInfo() @TO@ VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @AT@ 8180 @LENGTH@ 29
---------------INS SimpleName@@Name:qbJoinTree @TO@ MethodInvocation@@qbJoinTree.getAliasToOpInfo() @AT@ 8180 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getAliasToOpInfo:[] @TO@ MethodInvocation@@qbJoinTree.getAliasToOpInfo() @AT@ 8191 @LENGTH@ 18
------INS EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8217 @LENGTH@ 201
---------INS SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8222 @LENGTH@ 57
------------INS ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @TO@ SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @AT@ 8222 @LENGTH@ 51
---------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8222 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8232 @LENGTH@ 6
---------------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8240 @LENGTH@ 32
------------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8240 @LENGTH@ 8
------------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8249 @LENGTH@ 22
------------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @AT@ 8274 @LENGTH@ 5
---------INS MethodInvocation@@aliasToOpInfo.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8282 @LENGTH@ 24
------------INS SimpleName@@Name:aliasToOpInfo @TO@ MethodInvocation@@aliasToOpInfo.entrySet() @AT@ 8282 @LENGTH@ 13
------------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@aliasToOpInfo.entrySet() @AT@ 8296 @LENGTH@ 10
---------INS IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8318 @LENGTH@ 92
------------INS InfixExpression@@entry.getValue() == cSEL @TO@ IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8322 @LENGTH@ 24
---------------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8322 @LENGTH@ 16
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 8322 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 8328 @LENGTH@ 10
---------------INS Operator@@== @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8338 @LENGTH@ 2
---------------INS SimpleName@@cSEL @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8342 @LENGTH@ 4
------------INS Block@@ThenBody:{  aliasToOpInfo.put(entry.getKey(),pSEL);} @TO@ IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8348 @LENGTH@ 62
---------------INS ExpressionStatement@@MethodInvocation:aliasToOpInfo.put(entry.getKey(),pSEL) @TO@ Block@@ThenBody:{  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8360 @LENGTH@ 40
------------------INS MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @TO@ ExpressionStatement@@MethodInvocation:aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8360 @LENGTH@ 39
---------------------INS SimpleName@@Name:aliasToOpInfo @TO@ MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8360 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:put:[entry.getKey(), pSEL] @TO@ MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8374 @LENGTH@ 25
------------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[entry.getKey(), pSEL] @AT@ 8378 @LENGTH@ 14
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 8378 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 8384 @LENGTH@ 8
------------------------INS SimpleName@@pSEL @TO@ SimpleName@@MethodName:put:[entry.getKey(), pSEL] @AT@ 8394 @LENGTH@ 4


MOV FieldDeclaration@@private, static, final, String, [DEFAULT_FIELDS_SELECTOR=""] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="linkedin",consumerClass=LinkedInConsumer.class,consumerPrefix="consumer"), public]LinkedInEndpoint, AbstractApiEndpoint<LinkedInApiName,LinkedInConfiguration> @AT@ 2382 @LENGTH@ 57


UPD TypeDeclaration@@[public, static]EchoService,  @TO@ [public]EchoService,  @AT@ 3221 @LENGTH@ 84
---DEL Modifier@@static @AT@ 3228 @LENGTH@ 6


INS IfStatement@@if (skip) {  getLog().debug("Skipping server shutdown");  return;} @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 2321 @LENGTH@ 97
---INS SimpleName@@skip @TO@ IfStatement@@if (skip) {  getLog().debug("Skipping server shutdown");  return;} @AT@ 2325 @LENGTH@ 4
---INS Block@@ThenBody:{  getLog().debug("Skipping server shutdown");  return;} @TO@ IfStatement@@if (skip) {  getLog().debug("Skipping server shutdown");  return;} @AT@ 2331 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:getLog().debug("Skipping server shutdown") @TO@ Block@@ThenBody:{  getLog().debug("Skipping server shutdown");  return;} @AT@ 2345 @LENGTH@ 43
---------INS MethodInvocation@@getLog().debug("Skipping server shutdown") @TO@ ExpressionStatement@@MethodInvocation:getLog().debug("Skipping server shutdown") @AT@ 2345 @LENGTH@ 42
------------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().debug("Skipping server shutdown") @AT@ 2345 @LENGTH@ 8
------------INS SimpleName@@MethodName:debug:["Skipping server shutdown"] @TO@ MethodInvocation@@getLog().debug("Skipping server shutdown") @AT@ 2354 @LENGTH@ 33
---------------INS StringLiteral@@"Skipping server shutdown" @TO@ SimpleName@@MethodName:debug:["Skipping server shutdown"] @AT@ 2360 @LENGTH@ 26
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  getLog().debug("Skipping server shutdown");  return;} @AT@ 2401 @LENGTH@ 7


INS IfStatement@@if (mode == Mode.PARTIAL2 || mode == Mode.FINAL) {  partialCountAggOI=(LongObjectInspector)parameters[0];} @TO@ MethodDeclaration@@public, ObjectInspector, MethodName:init, Mode m, ObjectInspector[] parameters, HiveException,  @AT@ 3631 @LENGTH@ 122
---INS InfixExpression@@mode == Mode.PARTIAL2 || mode == Mode.FINAL @TO@ IfStatement@@if (mode == Mode.PARTIAL2 || mode == Mode.FINAL) {  partialCountAggOI=(LongObjectInspector)parameters[0];} @AT@ 3635 @LENGTH@ 43
------INS InfixExpression@@mode == Mode.PARTIAL2 @TO@ InfixExpression@@mode == Mode.PARTIAL2 || mode == Mode.FINAL @AT@ 3635 @LENGTH@ 21
---------INS SimpleName@@mode @TO@ InfixExpression@@mode == Mode.PARTIAL2 @AT@ 3635 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@mode == Mode.PARTIAL2 @AT@ 3639 @LENGTH@ 2
---------INS QualifiedName@@Mode.PARTIAL2 @TO@ InfixExpression@@mode == Mode.PARTIAL2 @AT@ 3643 @LENGTH@ 13
------------INS SimpleName@@Mode @TO@ QualifiedName@@Mode.PARTIAL2 @AT@ 3643 @LENGTH@ 4
------------INS SimpleName@@PARTIAL2 @TO@ QualifiedName@@Mode.PARTIAL2 @AT@ 3648 @LENGTH@ 8
------INS Operator@@|| @TO@ InfixExpression@@mode == Mode.PARTIAL2 || mode == Mode.FINAL @AT@ 3656 @LENGTH@ 2
------INS InfixExpression@@mode == Mode.FINAL @TO@ InfixExpression@@mode == Mode.PARTIAL2 || mode == Mode.FINAL @AT@ 3660 @LENGTH@ 18
---------INS SimpleName@@mode @TO@ InfixExpression@@mode == Mode.FINAL @AT@ 3660 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@mode == Mode.FINAL @AT@ 3664 @LENGTH@ 2
---------INS QualifiedName@@Mode.FINAL @TO@ InfixExpression@@mode == Mode.FINAL @AT@ 3668 @LENGTH@ 10
------------INS SimpleName@@Mode @TO@ QualifiedName@@Mode.FINAL @AT@ 3668 @LENGTH@ 4
------------INS SimpleName@@FINAL @TO@ QualifiedName@@Mode.FINAL @AT@ 3673 @LENGTH@ 5
---INS Block@@ThenBody:{  partialCountAggOI=(LongObjectInspector)parameters[0];} @TO@ IfStatement@@if (mode == Mode.PARTIAL2 || mode == Mode.FINAL) {  partialCountAggOI=(LongObjectInspector)parameters[0];} @AT@ 3680 @LENGTH@ 73
------INS ExpressionStatement@@Assignment:partialCountAggOI=(LongObjectInspector)parameters[0] @TO@ Block@@ThenBody:{  partialCountAggOI=(LongObjectInspector)parameters[0];} @AT@ 3690 @LENGTH@ 55
---------MOV Assignment@@partialCountAggOI=PrimitiveObjectInspectorFactory.writableLongObjectInspector @TO@ ExpressionStatement@@Assignment:partialCountAggOI=(LongObjectInspector)parameters[0] @AT@ 3631 @LENGTH@ 87
------------DEL QualifiedName@@PrimitiveObjectInspectorFactory.writableLongObjectInspector @AT@ 3659 @LENGTH@ 59
---------------DEL SimpleName@@PrimitiveObjectInspectorFactory @AT@ 3659 @LENGTH@ 31
---------------DEL SimpleName@@writableLongObjectInspector @AT@ 3691 @LENGTH@ 27
------------INS CastExpression@@(LongObjectInspector)parameters[0] @TO@ Assignment@@partialCountAggOI=PrimitiveObjectInspectorFactory.writableLongObjectInspector @AT@ 3710 @LENGTH@ 34
---------------INS SimpleType@@LongObjectInspector @TO@ CastExpression@@(LongObjectInspector)parameters[0] @AT@ 3711 @LENGTH@ 19
---------------INS ArrayAccess@@parameters[0] @TO@ CastExpression@@(LongObjectInspector)parameters[0] @AT@ 3731 @LENGTH@ 13
------------------INS SimpleName@@parameters @TO@ ArrayAccess@@parameters[0] @AT@ 3731 @LENGTH@ 10
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@parameters[0] @AT@ 3742 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("jetty://" + serverUri).transform(body().prepend("Bye ")) @TO@ MethodInvocation:from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")) @AT@ 2421 @LENGTH@ 84
---UPD MethodInvocation@@from("jetty://" + serverUri).transform(body().prepend("Bye ")) @TO@ from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")) @AT@ 2421 @LENGTH@ 83
------INS MethodInvocation@@MethodName:id:["route1"] @TO@ MethodInvocation@@from("jetty://" + serverUri).transform(body().prepend("Bye ")) @AT@ 2421 @LENGTH@ 41
---------INS StringLiteral@@"route1" @TO@ MethodInvocation@@MethodName:id:["route1"] @AT@ 2453 @LENGTH@ 8


UPD IfStatement@@if (!(one instanceof FlowState)) {  FlowBuilder<Flow> stateBuilder=new FlowBuilder<Flow>(name + "_" + (counter++));  stateBuilder.currentState=one;  flow=stateBuilder.build();} @TO@ if (!(one instanceof FlowState)) {  FlowBuilder<Flow> stateBuilder=new FlowBuilder<Flow>(name + "_" + (counter++));  stateBuilder.currentState=one;  flow=stateBuilder.build();} else if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @AT@ 17316 @LENGTH@ 195
---INS Block@@ElseBody:if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @TO@ IfStatement@@if (!(one instanceof FlowState)) {  FlowBuilder<Flow> stateBuilder=new FlowBuilder<Flow>(name + "_" + (counter++));  stateBuilder.currentState=one;  flow=stateBuilder.build();} @AT@ 18636 @LENGTH@ 127
------INS IfStatement@@if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @TO@ Block@@ElseBody:if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @AT@ 18636 @LENGTH@ 127
---------INS InfixExpression@@one instanceof FlowState && parent.states.size() == 1 @TO@ IfStatement@@if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @AT@ 18640 @LENGTH@ 53
------------INS InstanceofExpression@@one instanceof FlowState @TO@ InfixExpression@@one instanceof FlowState && parent.states.size() == 1 @AT@ 18640 @LENGTH@ 24
---------------INS SimpleName@@one @TO@ InstanceofExpression@@one instanceof FlowState @AT@ 18640 @LENGTH@ 3
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@one instanceof FlowState @AT@ 18644 @LENGTH@ 10
---------------INS SimpleType@@FlowState @TO@ InstanceofExpression@@one instanceof FlowState @AT@ 18655 @LENGTH@ 9
------------INS Operator@@&& @TO@ InfixExpression@@one instanceof FlowState && parent.states.size() == 1 @AT@ 18664 @LENGTH@ 2
------------INS InfixExpression@@parent.states.size() == 1 @TO@ InfixExpression@@one instanceof FlowState && parent.states.size() == 1 @AT@ 18668 @LENGTH@ 25
---------------INS MethodInvocation@@parent.states.size() @TO@ InfixExpression@@parent.states.size() == 1 @AT@ 18668 @LENGTH@ 20
------------------INS QualifiedName@@Name:parent.states @TO@ MethodInvocation@@parent.states.size() @AT@ 18668 @LENGTH@ 13
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@parent.states.size() @AT@ 18682 @LENGTH@ 6
---------------INS Operator@@== @TO@ InfixExpression@@parent.states.size() == 1 @AT@ 18688 @LENGTH@ 2
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@parent.states.size() == 1 @AT@ 18692 @LENGTH@ 1
---------INS Block@@ThenBody:{  list.add(((FlowState)one).getFlows().iterator().next());} @TO@ IfStatement@@if (one instanceof FlowState && parent.states.size() == 1) {  list.add(((FlowState)one).getFlows().iterator().next());} @AT@ 18695 @LENGTH@ 68
------------INS ExpressionStatement@@MethodInvocation:list.add(((FlowState)one).getFlows().iterator().next()) @TO@ Block@@ThenBody:{  list.add(((FlowState)one).getFlows().iterator().next());} @AT@ 18701 @LENGTH@ 57
---------------INS MethodInvocation@@list.add(((FlowState)one).getFlows().iterator().next()) @TO@ ExpressionStatement@@MethodInvocation:list.add(((FlowState)one).getFlows().iterator().next()) @AT@ 18701 @LENGTH@ 56
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(((FlowState)one).getFlows().iterator().next()) @AT@ 18701 @LENGTH@ 4
------------------INS SimpleName@@MethodName:add:[((FlowState)one).getFlows().iterator().next()] @TO@ MethodInvocation@@list.add(((FlowState)one).getFlows().iterator().next()) @AT@ 18706 @LENGTH@ 51
---------------------INS MethodInvocation@@((FlowState)one).getFlows().iterator().next() @TO@ SimpleName@@MethodName:add:[((FlowState)one).getFlows().iterator().next()] @AT@ 18710 @LENGTH@ 46
------------------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@((FlowState)one).getFlows().iterator().next() @AT@ 18710 @LENGTH@ 39
------------------------INS MethodInvocation@@MethodName:getFlows:[] @TO@ MethodInvocation@@((FlowState)one).getFlows().iterator().next() @AT@ 18710 @LENGTH@ 28
------------------------INS ParenthesizedExpression@@((FlowState)one) @TO@ MethodInvocation@@((FlowState)one).getFlows().iterator().next() @AT@ 18710 @LENGTH@ 17
---------------------------INS CastExpression@@(FlowState)one @TO@ ParenthesizedExpression@@((FlowState)one) @AT@ 18711 @LENGTH@ 15
------------------------------INS SimpleType@@FlowState @TO@ CastExpression@@(FlowState)one @AT@ 18712 @LENGTH@ 9
------------------------------INS SimpleName@@one @TO@ CastExpression@@(FlowState)one @AT@ 18723 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@((FlowState)one).getFlows().iterator().next() @AT@ 18750 @LENGTH@ 6


UPD VariableDeclarationStatement@@ResourceMetadata metadata=mappings.getMappingFor(parameter.getParameterType()); @TO@ ResourceMetadata metadata=mappings.getMetadataFor(parameter.getParameterType()); @AT@ 10753 @LENGTH@ 81
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(parameter.getParameterType()) @TO@ metadata=mappings.getMetadataFor(parameter.getParameterType()) @AT@ 10770 @LENGTH@ 63
------UPD MethodInvocation@@mappings.getMappingFor(parameter.getParameterType()) @TO@ mappings.getMetadataFor(parameter.getParameterType()) @AT@ 10781 @LENGTH@ 52
---------UPD SimpleName@@MethodName:getMappingFor:[parameter.getParameterType()] @TO@ MethodName:getMetadataFor:[parameter.getParameterType()] @AT@ 10790 @LENGTH@ 43


UPD IfStatement@@if (current.end < cbEndOffset && current.next == null) {  return null;} @TO@ if (current.end < cbEndOffset && !current.hasContiguousNext()) {  return null;} @AT@ 27624 @LENGTH@ 128
---UPD InfixExpression@@current.end < cbEndOffset && current.next == null @TO@ current.end < cbEndOffset && !current.hasContiguousNext() @AT@ 27628 @LENGTH@ 49
------INS PrefixExpression@@!current.hasContiguousNext() @TO@ InfixExpression@@current.end < cbEndOffset && current.next == null @AT@ 27657 @LENGTH@ 28
---------INS Operator@@! @TO@ PrefixExpression@@!current.hasContiguousNext() @AT@ 27657 @LENGTH@ 1
---------INS MethodInvocation@@current.hasContiguousNext() @TO@ PrefixExpression@@!current.hasContiguousNext() @AT@ 27658 @LENGTH@ 27
------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.hasContiguousNext() @AT@ 27658 @LENGTH@ 7
------------INS SimpleName@@MethodName:hasContiguousNext:[] @TO@ MethodInvocation@@current.hasContiguousNext() @AT@ 27666 @LENGTH@ 19
------DEL InfixExpression@@current.next == null @AT@ 27657 @LENGTH@ 20
---------DEL QualifiedName@@current.next @AT@ 27657 @LENGTH@ 12
------------DEL SimpleName@@current @AT@ 27657 @LENGTH@ 7
------------DEL SimpleName@@next @AT@ 27665 @LENGTH@ 4
---------DEL Operator@@== @AT@ 27669 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 27673 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen.") @TO@ MethodInvocation:mock.message(0).body().contains("Hi Claus how are you? Its a nice day.") @AT@ 1342 @LENGTH@ 107
---UPD MethodInvocation@@mock.expectedBodiesReceived("Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen.") @TO@ mock.message(0).body().contains("Hi Claus how are you? Its a nice day.") @AT@ 1342 @LENGTH@ 106
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.expectedBodiesReceived("Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen.") @AT@ 1342 @LENGTH@ 22
------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.expectedBodiesReceived("Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen.") @AT@ 1342 @LENGTH@ 15
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1355 @LENGTH@ 1
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen."] @TO@ MethodName:contains:["Hi Claus how are you? Its a nice day."] @AT@ 1347 @LENGTH@ 101
---------UPD StringLiteral@@"Hi Claus how are you? Its a nice day.\nGive my regards to the family Ibsen." @TO@ "Hi Claus how are you? Its a nice day." @AT@ 1370 @LENGTH@ 77


UPD TypeDeclaration@@[public]EventType,  @TO@ [public]EventType, [Serializable] @AT@ 1850 @LENGTH@ 3391
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public]EventType,  @AT@ 1930 @LENGTH@ 12


UPD TypeDeclaration@@[private, static]TransactionInitializer,  @TO@ [private]TransactionInitializer,  @AT@ 55063 @LENGTH@ 548
---DEL Modifier@@static @AT@ 55071 @LENGTH@ 6


INS IfStatement@@if (cOffset == endCOffset) return null; @TO@ MethodDeclaration@@public, static, DiskRangeList, MethodName:uncompressStream, String fileName, long baseOffset, DiskRangeList start, long cOffset, long endCOffset, ZeroCopyReaderShim zcr, CompressionCodec codec, int bufferSize, LowLevelCache cache, StreamBuffer streamBuffer, IOException,  @AT@ 20415 @LENGTH@ 39
---INS InfixExpression@@cOffset == endCOffset @TO@ IfStatement@@if (cOffset == endCOffset) return null; @AT@ 20419 @LENGTH@ 21
------INS SimpleName@@cOffset @TO@ InfixExpression@@cOffset == endCOffset @AT@ 20419 @LENGTH@ 7
------INS Operator@@== @TO@ InfixExpression@@cOffset == endCOffset @AT@ 20426 @LENGTH@ 2
------INS SimpleName@@endCOffset @TO@ InfixExpression@@cOffset == endCOffset @AT@ 20430 @LENGTH@ 10
---INS Block@@ThenBody:return null; @TO@ IfStatement@@if (cOffset == endCOffset) return null; @AT@ 20442 @LENGTH@ 12
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:return null; @AT@ 20442 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 20449 @LENGTH@ 4


UPD VariableDeclarationStatement@@DBCursor resultCursor=((DBCursor)result); @TO@ DBCursor resultCursor=(DBCursor)result; @AT@ 1916 @LENGTH@ 44
---UPD VariableDeclarationFragment@@resultCursor=((DBCursor)result) @TO@ resultCursor=(DBCursor)result @AT@ 1925 @LENGTH@ 34
------DEL ParenthesizedExpression@@((DBCursor)result) @AT@ 1940 @LENGTH@ 19
---------DEL CastExpression@@(DBCursor)result @AT@ 1941 @LENGTH@ 17
------INS CastExpression@@(DBCursor)result @TO@ VariableDeclarationFragment@@resultCursor=((DBCursor)result) @AT@ 1940 @LENGTH@ 17
---------MOV SimpleType@@DBCursor @TO@ CastExpression@@(DBCursor)result @AT@ 1942 @LENGTH@ 8
---------MOV SimpleName@@result @TO@ CastExpression@@(DBCursor)result @AT@ 1952 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2113 @LENGTH@ 119
---UPD MethodInvocation@@factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2120 @LENGTH@ 111
------UPD SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @TO@ MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", TEST_SERVER_1, props, new NoCallbackHandler()] @AT@ 2128 @LENGTH@ 103
---------DEL StringLiteral@@"test_server_1" @AT@ 2183 @LENGTH@ 15
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @AT@ 2183 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:cte.put(Integer.valueOf(method.getCode()),method) @TO@ MethodInvocation:cte.put(method.getCode(),method) @AT@ 4910 @LENGTH@ 51
---UPD MethodInvocation@@cte.put(Integer.valueOf(method.getCode()),method) @TO@ cte.put(method.getCode(),method) @AT@ 4910 @LENGTH@ 50
------UPD SimpleName@@MethodName:put:[Integer.valueOf(method.getCode()), method] @TO@ MethodName:put:[method.getCode(), method] @AT@ 4914 @LENGTH@ 46
---------DEL MethodInvocation@@Integer.valueOf(method.getCode()) @AT@ 4918 @LENGTH@ 33
------------DEL SimpleName@@Name:Integer @AT@ 4918 @LENGTH@ 7
------------DEL SimpleName@@MethodName:valueOf:[method.getCode()] @AT@ 4926 @LENGTH@ 25
---------MOV MethodInvocation@@method.getCode() @TO@ SimpleName@@MethodName:put:[Integer.valueOf(method.getCode()), method] @AT@ 4934 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @TO@ TypeDeclaration@@[public]OAuth2ClientAuthenticationProcessingFilterTests,  @AT@ 3794 @LENGTH@ 290
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3794 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3801 @LENGTH@ 4
---INS SimpleName@@MethodName:testDeniedToken @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3806 @LENGTH@ 15
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3831 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:filter.setRestTemplate(restTemplate) @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3845 @LENGTH@ 37
------INS MethodInvocation@@filter.setRestTemplate(restTemplate) @TO@ ExpressionStatement@@MethodInvocation:filter.setRestTemplate(restTemplate) @AT@ 3845 @LENGTH@ 36
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setRestTemplate(restTemplate) @AT@ 3845 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRestTemplate:[restTemplate] @TO@ MethodInvocation@@filter.setRestTemplate(restTemplate) @AT@ 3852 @LENGTH@ 29
------------INS SimpleName@@restTemplate @TO@ SimpleName@@MethodName:setRestTemplate:[restTemplate] @AT@ 3868 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3885 @LENGTH@ 102
------INS MethodInvocation@@Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @AT@ 3885 @LENGTH@ 101
---------INS MethodInvocation@@MethodName:when:[restTemplate.getAccessToken()] @TO@ MethodInvocation@@Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @AT@ 3885 @LENGTH@ 43
------------INS MethodInvocation@@restTemplate.getAccessToken() @TO@ MethodInvocation@@MethodName:when:[restTemplate.getAccessToken()] @AT@ 3898 @LENGTH@ 29
---------------INS SimpleName@@Name:restTemplate @TO@ MethodInvocation@@restTemplate.getAccessToken() @AT@ 3898 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@restTemplate.getAccessToken() @AT@ 3911 @LENGTH@ 16
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @AT@ 3885 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenThrow:[new OAuth2Exception("User denied acess token")] @TO@ MethodInvocation@@Mockito.when(restTemplate.getAccessToken()).thenThrow(new OAuth2Exception("User denied acess token")) @AT@ 3929 @LENGTH@ 57
------------INS ClassInstanceCreation@@OAuth2Exception["User denied acess token"] @TO@ SimpleName@@MethodName:thenThrow:[new OAuth2Exception("User denied acess token")] @AT@ 3939 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Exception["User denied acess token"] @AT@ 3939 @LENGTH@ 3
---------------INS SimpleType@@OAuth2Exception @TO@ ClassInstanceCreation@@OAuth2Exception["User denied acess token"] @AT@ 3943 @LENGTH@ 15
---------------INS StringLiteral@@"User denied acess token" @TO@ ClassInstanceCreation@@OAuth2Exception["User denied acess token"] @AT@ 3959 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:expected.expect(BadCredentialsException.class) @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 3990 @LENGTH@ 47
------INS MethodInvocation@@expected.expect(BadCredentialsException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(BadCredentialsException.class) @AT@ 3990 @LENGTH@ 46
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(BadCredentialsException.class) @AT@ 3990 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[BadCredentialsException.class] @TO@ MethodInvocation@@expected.expect(BadCredentialsException.class) @AT@ 3999 @LENGTH@ 37
------------INS TypeLiteral@@BadCredentialsException.class @TO@ SimpleName@@MethodName:expect:[BadCredentialsException.class] @AT@ 4006 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:filter.attemptAuthentication(null,null) @TO@ MethodDeclaration@@public, void, MethodName:testDeniedToken, Exception,  @AT@ 4040 @LENGTH@ 41
------INS MethodInvocation@@filter.attemptAuthentication(null,null) @TO@ ExpressionStatement@@MethodInvocation:filter.attemptAuthentication(null,null) @AT@ 4040 @LENGTH@ 40
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.attemptAuthentication(null,null) @AT@ 4040 @LENGTH@ 6
---------INS SimpleName@@MethodName:attemptAuthentication:[null, null] @TO@ MethodInvocation@@filter.attemptAuthentication(null,null) @AT@ 4047 @LENGTH@ 33
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:attemptAuthentication:[null, null] @AT@ 4069 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:attemptAuthentication:[null, null] @AT@ 4075 @LENGTH@ 4


DEL VariableDeclarationStatement@@int ITERATIONS=400; @AT@ 3464 @LENGTH@ 21
---DEL PrimitiveType@@int @AT@ 3464 @LENGTH@ 3
---DEL VariableDeclarationFragment@@ITERATIONS=400 @AT@ 3468 @LENGTH@ 16
------DEL SimpleName@@ITERATIONS @AT@ 3468 @LENGTH@ 10
------DEL NumberLiteral@@400 @AT@ 3481 @LENGTH@ 3


UPD VariableDeclarationStatement@@LinkedHashMap<String,Integer> fields=new LinkedHashMap<>(); @TO@ LinkedHashMap<String,Integer> fields=new LinkedHashMap<String,Integer>(); @AT@ 7641 @LENGTH@ 62
---UPD VariableDeclarationFragment@@fields=new LinkedHashMap<>() @TO@ fields=new LinkedHashMap<String,Integer>() @AT@ 7672 @LENGTH@ 30
------UPD ClassInstanceCreation@@LinkedHashMap<>[] @TO@ LinkedHashMap<String,Integer>[] @AT@ 7681 @LENGTH@ 21
---------UPD ParameterizedType@@LinkedHashMap<> @TO@ LinkedHashMap<String,Integer> @AT@ 7685 @LENGTH@ 15
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 7703 @LENGTH@ 6
------------INS SimpleType@@Integer @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 7711 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:a").expectedMessageCount(252) @TO@ MethodInvocation:getMockEndpoint("mock:a").expectedMinimumMessageCount(250) @AT@ 1173 @LENGTH@ 52
---UPD MethodInvocation@@getMockEndpoint("mock:a").expectedMessageCount(252) @TO@ getMockEndpoint("mock:a").expectedMinimumMessageCount(250) @AT@ 1173 @LENGTH@ 51
------UPD SimpleName@@MethodName:expectedMessageCount:[252] @TO@ MethodName:expectedMinimumMessageCount:[250] @AT@ 1199 @LENGTH@ 25
---------UPD NumberLiteral@@252 @TO@ 250 @AT@ 1220 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:clusterSpecificConfiguration.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH,false) @TO@ MethodDeclaration@@public, void, MethodName:serviceStart,  @AT@ 6031 @LENGTH@ 114
---INS MethodInvocation@@clusterSpecificConfiguration.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH,false) @TO@ ExpressionStatement@@MethodInvocation:clusterSpecificConfiguration.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH,false) @AT@ 6031 @LENGTH@ 113
------INS SimpleName@@Name:clusterSpecificConfiguration @TO@ MethodInvocation@@clusterSpecificConfiguration.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH,false) @AT@ 6031 @LENGTH@ 28
------INS SimpleName@@MethodName:setBoolean:[TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH, false] @TO@ MethodInvocation@@clusterSpecificConfiguration.setBoolean(TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH,false) @AT@ 6069 @LENGTH@ 75
---------INS QualifiedName@@TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH @TO@ SimpleName@@MethodName:setBoolean:[TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH, false] @AT@ 6080 @LENGTH@ 56
------------INS SimpleName@@TezRuntimeConfiguration @TO@ QualifiedName@@TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH @AT@ 6080 @LENGTH@ 23
------------INS SimpleName@@TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH @TO@ QualifiedName@@TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH @AT@ 6104 @LENGTH@ 32
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setBoolean:[TezRuntimeConfiguration.TEZ_RUNTIME_OPTIMIZE_LOCAL_FETCH, false] @AT@ 6138 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @TO@ public, void, MethodName:shiftBy, long offsetDelta,  @AT@ 2004 @LENGTH@ 91
---UPD SingleVariableDeclaration@@long baseOffset @TO@ long offsetDelta @AT@ 2024 @LENGTH@ 15
------UPD SimpleName@@baseOffset @TO@ offsetDelta @AT@ 2029 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:offset-=baseOffset @TO@ Assignment:offset+=offsetDelta @AT@ 2047 @LENGTH@ 21
------UPD Assignment@@offset-=baseOffset @TO@ offset+=offsetDelta @AT@ 2047 @LENGTH@ 20
---------UPD Operator@@-= @TO@ += @AT@ 2053 @LENGTH@ 2
---------UPD SimpleName@@baseOffset @TO@ offsetDelta @AT@ 2057 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:end-=baseOffset @TO@ Assignment:end+=offsetDelta @AT@ 2073 @LENGTH@ 18
------UPD Assignment@@end-=baseOffset @TO@ end+=offsetDelta @AT@ 2073 @LENGTH@ 17
---------UPD Operator@@-= @TO@ += @AT@ 2076 @LENGTH@ 2
---------UPD SimpleName@@baseOffset @TO@ offsetDelta @AT@ 2080 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:codeToEnum.get(Integer.valueOf(code)) @TO@ MethodInvocation:codeToEnum.get(code) @AT@ 5615 @LENGTH@ 45
---UPD MethodInvocation@@codeToEnum.get(Integer.valueOf(code)) @TO@ codeToEnum.get(code) @AT@ 5622 @LENGTH@ 37
------DEL SimpleName@@MethodName:get:[Integer.valueOf(code)] @AT@ 5633 @LENGTH@ 26
---------DEL MethodInvocation@@Integer.valueOf(code) @AT@ 5637 @LENGTH@ 21
------------DEL SimpleName@@Name:Integer @AT@ 5637 @LENGTH@ 7
------MOV SimpleName@@MethodName:valueOf:[code] @TO@ MethodInvocation@@codeToEnum.get(Integer.valueOf(code)) @AT@ 5645 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 10055 @LENGTH@ 337
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10055 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10062 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldReplaceAllNamedExpressionParametersWithInClause @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10067 @LENGTH@ 53
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"); @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10130 @LENGTH@ 97
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"); @AT@ 10130 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}") @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"); @AT@ 10142 @LENGTH@ 84
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}") @AT@ 10142 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery["select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"] @TO@ VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in :#{#bs} and a.c in :#{#cs}") @AT@ 10150 @LENGTH@ 76
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"] @AT@ 10150 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"] @AT@ 10154 @LENGTH@ 11
------------INS StringLiteral@@"select a from A a where a.b in :#{#bs} and a.c in :#{#cs}" @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in :#{#bs} and a.c in :#{#cs}"] @AT@ 10166 @LENGTH@ 59
---INS VariableDeclarationStatement@@String queryString=query.getQueryString(); @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10230 @LENGTH@ 44
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String queryString=query.getQueryString(); @AT@ 10230 @LENGTH@ 6
------INS VariableDeclarationFragment@@queryString=query.getQueryString() @TO@ VariableDeclarationStatement@@String queryString=query.getQueryString(); @AT@ 10237 @LENGTH@ 36
---------INS SimpleName@@queryString @TO@ VariableDeclarationFragment@@queryString=query.getQueryString() @AT@ 10237 @LENGTH@ 11
---------INS MethodInvocation@@query.getQueryString() @TO@ VariableDeclarationFragment@@queryString=query.getQueryString() @AT@ 10251 @LENGTH@ 22
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 10251 @LENGTH@ 5
------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 10257 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(queryString,is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")) @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllNamedExpressionParametersWithInClause,  @AT@ 10280 @LENGTH@ 109
------INS MethodInvocation@@assertThat(queryString,is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(queryString,is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")) @AT@ 10280 @LENGTH@ 108
---------INS SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")] @TO@ MethodInvocation@@assertThat(queryString,is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")) @AT@ 10280 @LENGTH@ 108
------------INS SimpleName@@queryString @TO@ SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")] @AT@ 10291 @LENGTH@ 11
------------INS MethodInvocation@@is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2") @TO@ SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2")] @AT@ 10304 @LENGTH@ 83
---------------INS SimpleName@@MethodName:is:["select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2"] @TO@ MethodInvocation@@is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2") @AT@ 10304 @LENGTH@ 83
------------------INS StringLiteral@@"select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2" @TO@ SimpleName@@MethodName:is:["select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2"] @AT@ 10307 @LENGTH@ 79
---------------INS SimpleName@@MethodName:is:["select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2"] @TO@ MethodInvocation@@is("select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2") @AT@ 10304 @LENGTH@ 83
------------------INS StringLiteral@@"select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2" @TO@ SimpleName@@MethodName:is:["select a from A a where a.b in :__$synthetic$__1 and a.c in :__$synthetic$__2"] @AT@ 10307 @LENGTH@ 79


UPD ExpressionStatement@@MethodInvocation:jdbcTemplate.update(insertAccessTokenSql,new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()},new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}) @TO@ MethodInvocation:jdbcTemplate.update(insertAccessTokenSql,new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),name,resource.getClientId()},new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}) @AT@ 3102 @LENGTH@ 357
---UPD MethodInvocation@@jdbcTemplate.update(insertAccessTokenSql,new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()},new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}) @TO@ jdbcTemplate.update(insertAccessTokenSql,new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),name,resource.getClientId()},new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}) @AT@ 3102 @LENGTH@ 356
------UPD SimpleName@@MethodName:update:[insertAccessTokenSql, new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()}, new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}] @TO@ MethodName:update:[insertAccessTokenSql, new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),name,resource.getClientId()}, new int[]{Types.VARCHAR,Types.BLOB,Types.VARCHAR,Types.VARCHAR,Types.VARCHAR}] @AT@ 3115 @LENGTH@ 343
---------UPD ArrayCreation@@new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()} @TO@ new Object[]{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),name,resource.getClientId()} @AT@ 3153 @LENGTH@ 212
------------UPD ArrayInitializer@@{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()} @TO@ {accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),name,resource.getClientId()} @AT@ 3166 @LENGTH@ 199
---------------DEL MethodInvocation@@authentication.getName() @AT@ 3309 @LENGTH@ 24
------------------DEL SimpleName@@Name:authentication @AT@ 3309 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 3324 @LENGTH@ 9
---------------INS SimpleName@@name @TO@ ArrayInitializer@@{accessToken.getValue(),new SqlLobValue(SerializationUtils.serialize(accessToken)),keyGenerator.extractKey(resource,authentication),authentication.getName(),resource.getClientId()} @AT@ 3381 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testRequestNoParameter_Null, Exception,  @TO@ public, void, MethodName:testRequestNoParameterNull, Exception,  @AT@ 3683 @LENGTH@ 270
---UPD SimpleName@@MethodName:testRequestNoParameter_Null @TO@ MethodName:testRequestNoParameterNull @AT@ 3695 @LENGTH@ 27


UPD FieldDeclaration@@private, Map<Integer,boolean[]>, [socketAudits=new HashMap<>()] @TO@ private, Map<Integer,boolean[]>, [socketAudits=new HashMap<Integer,boolean[]>()] @AT@ 1557 @LENGTH@ 63
---UPD VariableDeclarationFragment@@socketAudits=new HashMap<>() @TO@ socketAudits=new HashMap<Integer,boolean[]>() @AT@ 1589 @LENGTH@ 30
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<Integer,boolean[]>[] @AT@ 1604 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<Integer,boolean[]> @AT@ 1608 @LENGTH@ 9
------------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<> @AT@ 1616 @LENGTH@ 7
------------INS ArrayType@@boolean[] @TO@ ParameterizedType@@HashMap<> @AT@ 1625 @LENGTH@ 9
---------------INS PrimitiveType@@boolean @TO@ ArrayType@@boolean[] @AT@ 1625 @LENGTH@ 7


UPD VariableDeclarationStatement@@RelNode modifiedOptimizedOptiqPlan=introduceProjectIfNeeded(optimizedOptiqPlan); @TO@ RelNode modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema); @AT@ 25728 @LENGTH@ 82
---UPD VariableDeclarationFragment@@modifiedOptimizedOptiqPlan=introduceProjectIfNeeded(optimizedOptiqPlan) @TO@ modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @AT@ 25736 @LENGTH@ 73
------INS MethodInvocation@@PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @TO@ VariableDeclarationFragment@@modifiedOptimizedOptiqPlan=introduceProjectIfNeeded(optimizedOptiqPlan) @AT@ 25854 @LENGTH@ 119
---------INS SimpleName@@Name:PlanModifierForReturnPath @TO@ MethodInvocation@@PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @AT@ 25854 @LENGTH@ 25
---------INS SimpleName@@MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema] @TO@ MethodInvocation@@PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @AT@ 25880 @LENGTH@ 93
------------MOV MethodInvocation@@introduceProjectIfNeeded(optimizedOptiqPlan) @TO@ SimpleName@@MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema] @AT@ 25765 @LENGTH@ 44
------------INS SimpleName@@topLevelFieldSchema @TO@ SimpleName@@MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema] @AT@ 25953 @LENGTH@ 19


UPD FieldDeclaration@@private, final, LinkedHashSet<String>, [headers=new LinkedHashSet<>()] @TO@ private, final, LinkedHashSet<String>, [headers=new LinkedHashSet<String>()] @AT@ 1522 @LENGTH@ 68
---UPD VariableDeclarationFragment@@headers=new LinkedHashSet<>() @TO@ headers=new LinkedHashSet<String>() @AT@ 1558 @LENGTH@ 31
------UPD ClassInstanceCreation@@LinkedHashSet<>[] @TO@ LinkedHashSet<String>[] @AT@ 1568 @LENGTH@ 21
---------UPD ParameterizedType@@LinkedHashSet<> @TO@ LinkedHashSet<String> @AT@ 1572 @LENGTH@ 15
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<> @AT@ 1584 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [PATTERN=PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING).setAllowExpression(true).setAllowNull(false).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build()] @TO@ public, static, final, PropertyAttributeDefinition, [PATTERN=PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING,true).setAllowExpression(true).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build()] @AT@ 3096 @LENGTH@ 304
---UPD VariableDeclarationFragment@@PATTERN=PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING).setAllowExpression(true).setAllowNull(false).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build() @TO@ PATTERN=PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING,true).setAllowExpression(true).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build() @AT@ 3144 @LENGTH@ 255
------UPD MethodInvocation@@PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING).setAllowExpression(true).setAllowNull(false).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build() @TO@ PropertyAttributeDefinition.Builder.of("pattern",ModelType.STRING,true).setAllowExpression(true).setDefaultValue(new ModelNode("%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n")).build() @AT@ 3154 @LENGTH@ 245
---------DEL MethodInvocation@@MethodName:setAllowNull:[false] @AT@ 3154 @LENGTH@ 138
------------DEL BooleanLiteral@@false @AT@ 3286 @LENGTH@ 5
---------UPD MethodInvocation@@MethodName:of:["pattern", ModelType.STRING] @TO@ MethodName:of:["pattern", ModelType.STRING, true] @AT@ 3154 @LENGTH@ 67
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:of:["pattern", ModelType.STRING] @AT@ 3222 @LENGTH@ 4


INS IfStatement@@if (eventPublisher != null) {  resources.eventPublisher(eventPublisher);} @TO@ MethodDeclaration@@protected, void, MethodName:configure, HttpSecurity http, Exception,  @AT@ 4485 @LENGTH@ 78
---INS InfixExpression@@eventPublisher != null @TO@ IfStatement@@if (eventPublisher != null) {  resources.eventPublisher(eventPublisher);} @AT@ 4489 @LENGTH@ 22
------INS SimpleName@@eventPublisher @TO@ InfixExpression@@eventPublisher != null @AT@ 4489 @LENGTH@ 14
------INS Operator@@!= @TO@ InfixExpression@@eventPublisher != null @AT@ 4503 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@eventPublisher != null @AT@ 4507 @LENGTH@ 4
---INS Block@@ThenBody:{  resources.eventPublisher(eventPublisher);} @TO@ IfStatement@@if (eventPublisher != null) {  resources.eventPublisher(eventPublisher);} @AT@ 4513 @LENGTH@ 50
------INS ExpressionStatement@@MethodInvocation:resources.eventPublisher(eventPublisher) @TO@ Block@@ThenBody:{  resources.eventPublisher(eventPublisher);} @AT@ 4518 @LENGTH@ 41
---------INS MethodInvocation@@resources.eventPublisher(eventPublisher) @TO@ ExpressionStatement@@MethodInvocation:resources.eventPublisher(eventPublisher) @AT@ 4518 @LENGTH@ 40
------------INS SimpleName@@Name:resources @TO@ MethodInvocation@@resources.eventPublisher(eventPublisher) @AT@ 4518 @LENGTH@ 9
------------INS SimpleName@@MethodName:eventPublisher:[eventPublisher] @TO@ MethodInvocation@@resources.eventPublisher(eventPublisher) @AT@ 4528 @LENGTH@ 30
---------------INS SimpleName@@eventPublisher @TO@ SimpleName@@MethodName:eventPublisher:[eventPublisher] @AT@ 4543 @LENGTH@ 14


UPD VariableDeclarationStatement@@List<String> answer=new ArrayList<>(record.size()); @TO@ List<String> answer=new ArrayList<String>(record.size()); @AT@ 1805 @LENGTH@ 53
---UPD VariableDeclarationFragment@@answer=new ArrayList<>(record.size()) @TO@ answer=new ArrayList<String>(record.size()) @AT@ 1818 @LENGTH@ 39
------UPD ClassInstanceCreation@@ArrayList<>[record.size()] @TO@ ArrayList<String>[record.size()] @AT@ 1827 @LENGTH@ 30
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<String> @AT@ 1831 @LENGTH@ 11
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<> @AT@ 1841 @LENGTH@ 6


INS MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @TO@ TypeDeclaration@@[public]EJB3SubsystemXMLPersister, [XMLElementWriter<SubsystemMarshallingContext>] @AT@ 31254 @LENGTH@ 244
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31254 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31269 @LENGTH@ 4
---INS SimpleName@@MethodName:writeAttribute @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31274 @LENGTH@ 14
---INS SingleVariableDeclaration@@XMLExtendedStreamWriter writer @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31289 @LENGTH@ 30
------INS SimpleType@@XMLExtendedStreamWriter @TO@ SingleVariableDeclaration@@XMLExtendedStreamWriter writer @AT@ 31289 @LENGTH@ 23
------INS SimpleName@@writer @TO@ SingleVariableDeclaration@@XMLExtendedStreamWriter writer @AT@ 31313 @LENGTH@ 6
---INS SingleVariableDeclaration@@ModelNode model @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31321 @LENGTH@ 15
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 31321 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@ModelNode model @AT@ 31331 @LENGTH@ 5
---INS SingleVariableDeclaration@@AttributeDefinition attribute @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31338 @LENGTH@ 29
------INS SimpleType@@AttributeDefinition @TO@ SingleVariableDeclaration@@AttributeDefinition attribute @AT@ 31338 @LENGTH@ 19
------INS SimpleName@@attribute @TO@ SingleVariableDeclaration@@AttributeDefinition attribute @AT@ 31358 @LENGTH@ 9
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31376 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @TO@ MethodDeclaration@@private, static, void, MethodName:writeAttribute, XMLExtendedStreamWriter writer, ModelNode model, AttributeDefinition attribute, XMLStreamException,  @AT@ 31405 @LENGTH@ 87
------INS MethodInvocation@@attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @TO@ ExpressionStatement@@MethodInvocation:attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @AT@ 31405 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:getAttributeMarshaller:[] @TO@ MethodInvocation@@attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @AT@ 31405 @LENGTH@ 34
---------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @AT@ 31405 @LENGTH@ 9
---------INS SimpleName@@MethodName:marshallAsAttribute:[attribute, model, true, writer] @TO@ MethodInvocation@@attribute.getAttributeMarshaller().marshallAsAttribute(attribute,model,true,writer) @AT@ 31440 @LENGTH@ 51
------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:marshallAsAttribute:[attribute, model, true, writer] @AT@ 31460 @LENGTH@ 9
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:marshallAsAttribute:[attribute, model, true, writer] @AT@ 31471 @LENGTH@ 5
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:marshallAsAttribute:[attribute, model, true, writer] @AT@ 31478 @LENGTH@ 4
------------INS SimpleName@@writer @TO@ SimpleName@@MethodName:marshallAsAttribute:[attribute, model, true, writer] @AT@ 31484 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:merge, List<DoubleWritable> other,  @TO@ public, void, MethodName:merge, List other, DoubleObjectInspector doi,  @AT@ 3495 @LENGTH@ 1534
---UPD SingleVariableDeclaration@@List<DoubleWritable> other @TO@ List other @AT@ 3513 @LENGTH@ 26
------DEL ParameterizedType@@List<DoubleWritable> @AT@ 3513 @LENGTH@ 20
---------DEL SimpleType@@List @AT@ 3513 @LENGTH@ 4
---------DEL SimpleType@@DoubleWritable @AT@ 3518 @LENGTH@ 14
------INS SimpleType@@List @TO@ SingleVariableDeclaration@@List<DoubleWritable> other @AT@ 3600 @LENGTH@ 4
---UPD IfStatement@@if (nbins == 0 || nusedbins == 0) {  nbins=(int)other.get(0).get();  nusedbins=(other.size() - 1) / 2;  bins=new ArrayList<Coord>(nusedbins);  for (int i=1; i < other.size(); i+=2) {    Coord bin=new Coord();    bin.x=other.get(i).get();    bin.y=other.get(i + 1).get();    bins.add(bin);  }} else {  ArrayList<Coord> tmp_bins=new ArrayList<Coord>(nusedbins + (other.size() - 1) / 2);  for (int i=0; i < nusedbins; i++) {    Coord bin=new Coord();    bin.x=bins.get(i).x;    bin.y=bins.get(i).y;    tmp_bins.add(bin);  }  for (int j=1; j < other.size(); j+=2) {    Coord bin=new Coord();    bin.x=other.get(j).get();    bin.y=other.get(j + 1).get();    tmp_bins.add(bin);  }  Collections.sort(tmp_bins);  bins=tmp_bins;  nusedbins+=(other.size() - 1) / 2;  trim();} @TO@ if (nbins == 0 || nusedbins == 0) {  nbins=(int)doi.get(other.get(0));  nusedbins=(other.size() - 1) / 2;  bins=new ArrayList<Coord>(nusedbins);  for (int i=1; i < other.size(); i+=2) {    Coord bin=new Coord();    bin.x=doi.get(other.get(i));    bin.y=doi.get(other.get(i + 1));    bins.add(bin);  }} else {  ArrayList<Coord> tmp_bins=new ArrayList<Coord>(nusedbins + (other.size() - 1) / 2);  for (int i=0; i < nusedbins; i++) {    Coord bin=new Coord();    bin.x=bins.get(i).x;    bin.y=bins.get(i).y;    tmp_bins.add(bin);  }  for (int j=1; j < other.size(); j+=2) {    Coord bin=new Coord();    bin.x=doi.get(other.get(j));    bin.y=doi.get(other.get(j + 1));    tmp_bins.add(bin);  }  Collections.sort(tmp_bins);  bins=tmp_bins;  nusedbins+=(other.size() - 1) / 2;  trim();} @AT@ 3592 @LENGTH@ 1433
------UPD Block@@ThenBody:{  nbins=(int)other.get(0).get();  nusedbins=(other.size() - 1) / 2;  bins=new ArrayList<Coord>(nusedbins);  for (int i=1; i < other.size(); i+=2) {    Coord bin=new Coord();    bin.x=other.get(i).get();    bin.y=other.get(i + 1).get();    bins.add(bin);  }} @TO@ ThenBody:{  nbins=(int)doi.get(other.get(0));  nusedbins=(other.size() - 1) / 2;  bins=new ArrayList<Coord>(nusedbins);  for (int i=1; i < other.size(); i+=2) {    Coord bin=new Coord();    bin.x=doi.get(other.get(i));    bin.y=doi.get(other.get(i + 1));    bins.add(bin);  }} @AT@ 3626 @LENGTH@ 480
---------UPD ExpressionStatement@@Assignment:nbins=(int)other.get(0).get() @TO@ Assignment:nbins=(int)doi.get(other.get(0)) @AT@ 3797 @LENGTH@ 33
------------UPD Assignment@@nbins=(int)other.get(0).get() @TO@ nbins=(int)doi.get(other.get(0)) @AT@ 3797 @LENGTH@ 32
---------------UPD CastExpression@@(int)other.get(0).get() @TO@ (int)doi.get(other.get(0)) @AT@ 3805 @LENGTH@ 24
------------------UPD MethodInvocation@@other.get(0).get() @TO@ doi.get(other.get(0)) @AT@ 3811 @LENGTH@ 18
---------------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 3811 @LENGTH@ 12
------------------------DEL NumberLiteral@@0 @AT@ 3821 @LENGTH@ 1
---------------------UPD SimpleName@@Name:other @TO@ Name:doi @AT@ 3811 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:get:[] @AT@ 3824 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[other.get(0)] @TO@ MethodInvocation@@other.get(0).get() @AT@ 3913 @LENGTH@ 17
------------------------INS MethodInvocation@@other.get(0) @TO@ SimpleName@@MethodName:get:[other.get(0)] @AT@ 3917 @LENGTH@ 12
---------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.get(0) @AT@ 3917 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@other.get(0) @AT@ 3923 @LENGTH@ 6
------------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3927 @LENGTH@ 1
---------UPD ForStatement@@for (int i=1; i < other.size(); i+=2) {  Coord bin=new Coord();  bin.x=other.get(i).get();  bin.y=other.get(i + 1).get();  bins.add(bin);} @TO@ for (int i=1; i < other.size(); i+=2) {  Coord bin=new Coord();  bin.x=doi.get(other.get(i));  bin.y=doi.get(other.get(i + 1));  bins.add(bin);} @AT@ 3921 @LENGTH@ 179
------------UPD ExpressionStatement@@Assignment:bin.x=other.get(i).get() @TO@ Assignment:bin.x=doi.get(other.get(i)) @AT@ 4004 @LENGTH@ 27
---------------UPD Assignment@@bin.x=other.get(i).get() @TO@ bin.x=doi.get(other.get(i)) @AT@ 4004 @LENGTH@ 26
------------------UPD MethodInvocation@@other.get(i).get() @TO@ doi.get(other.get(i)) @AT@ 4012 @LENGTH@ 18
---------------------DEL MethodInvocation@@MethodName:get:[i] @AT@ 4012 @LENGTH@ 12
------------------------DEL SimpleName@@i @AT@ 4022 @LENGTH@ 1
---------------------UPD SimpleName@@Name:other @TO@ Name:doi @AT@ 4012 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:get:[] @AT@ 4025 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[other.get(i)] @TO@ MethodInvocation@@other.get(i).get() @AT@ 4117 @LENGTH@ 17
------------------------INS MethodInvocation@@other.get(i) @TO@ SimpleName@@MethodName:get:[other.get(i)] @AT@ 4121 @LENGTH@ 12
---------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.get(i) @AT@ 4121 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@other.get(i) @AT@ 4127 @LENGTH@ 6
------------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:get:[i] @AT@ 4131 @LENGTH@ 1
------------UPD ExpressionStatement@@Assignment:bin.y=other.get(i + 1).get() @TO@ Assignment:bin.y=doi.get(other.get(i + 1)) @AT@ 4040 @LENGTH@ 29
---------------UPD Assignment@@bin.y=other.get(i + 1).get() @TO@ bin.y=doi.get(other.get(i + 1)) @AT@ 4040 @LENGTH@ 28
------------------UPD MethodInvocation@@other.get(i + 1).get() @TO@ doi.get(other.get(i + 1)) @AT@ 4048 @LENGTH@ 20
---------------------DEL MethodInvocation@@MethodName:get:[i + 1] @AT@ 4048 @LENGTH@ 14
------------------------DEL InfixExpression@@i + 1 @AT@ 4058 @LENGTH@ 3
---------------------UPD SimpleName@@Name:other @TO@ Name:doi @AT@ 4048 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:get:[] @AT@ 4063 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[other.get(i + 1)] @TO@ MethodInvocation@@other.get(i + 1).get() @AT@ 4156 @LENGTH@ 19
------------------------INS MethodInvocation@@other.get(i + 1) @TO@ SimpleName@@MethodName:get:[other.get(i + 1)] @AT@ 4160 @LENGTH@ 14
---------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.get(i + 1) @AT@ 4160 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:get:[i + 1] @TO@ MethodInvocation@@other.get(i + 1) @AT@ 4166 @LENGTH@ 8
------------------------------INS InfixExpression@@i + 1 @TO@ SimpleName@@MethodName:get:[i + 1] @AT@ 4170 @LENGTH@ 3
---------------------------------MOV SimpleName@@i @TO@ InfixExpression@@i + 1 @AT@ 4058 @LENGTH@ 1
---------------------------------MOV Operator@@+ @TO@ InfixExpression@@i + 1 @AT@ 4059 @LENGTH@ 1
---------------------------------MOV NumberLiteral@@1 @TO@ InfixExpression@@i + 1 @AT@ 4060 @LENGTH@ 1
------UPD Block@@ElseBody:{  ArrayList<Coord> tmp_bins=new ArrayList<Coord>(nusedbins + (other.size() - 1) / 2);  for (int i=0; i < nusedbins; i++) {    Coord bin=new Coord();    bin.x=bins.get(i).x;    bin.y=bins.get(i).y;    tmp_bins.add(bin);  }  for (int j=1; j < other.size(); j+=2) {    Coord bin=new Coord();    bin.x=other.get(j).get();    bin.y=other.get(j + 1).get();    tmp_bins.add(bin);  }  Collections.sort(tmp_bins);  bins=tmp_bins;  nusedbins+=(other.size() - 1) / 2;  trim();} @TO@ ElseBody:{  ArrayList<Coord> tmp_bins=new ArrayList<Coord>(nusedbins + (other.size() - 1) / 2);  for (int i=0; i < nusedbins; i++) {    Coord bin=new Coord();    bin.x=bins.get(i).x;    bin.y=bins.get(i).y;    tmp_bins.add(bin);  }  for (int j=1; j < other.size(); j+=2) {    Coord bin=new Coord();    bin.x=doi.get(other.get(j));    bin.y=doi.get(other.get(j + 1));    tmp_bins.add(bin);  }  Collections.sort(tmp_bins);  bins=tmp_bins;  nusedbins+=(other.size() - 1) / 2;  trim();} @AT@ 4112 @LENGTH@ 913
---------UPD ForStatement@@for (int j=1; j < other.size(); j+=2) {  Coord bin=new Coord();  bin.x=other.get(j).get();  bin.y=other.get(j + 1).get();  tmp_bins.add(bin);} @TO@ for (int j=1; j < other.size(); j+=2) {  Coord bin=new Coord();  bin.x=doi.get(other.get(j));  bin.y=doi.get(other.get(j + 1));  tmp_bins.add(bin);} @AT@ 4644 @LENGTH@ 185
------------UPD ExpressionStatement@@Assignment:bin.x=other.get(j).get() @TO@ Assignment:bin.x=doi.get(other.get(j)) @AT@ 4729 @LENGTH@ 27
---------------UPD Assignment@@bin.x=other.get(j).get() @TO@ bin.x=doi.get(other.get(j)) @AT@ 4729 @LENGTH@ 26
------------------UPD MethodInvocation@@other.get(j).get() @TO@ doi.get(other.get(j)) @AT@ 4737 @LENGTH@ 18
---------------------DEL MethodInvocation@@MethodName:get:[j] @AT@ 4737 @LENGTH@ 12
------------------------DEL SimpleName@@j @AT@ 4747 @LENGTH@ 1
---------------------UPD SimpleName@@Name:other @TO@ Name:doi @AT@ 4737 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:get:[] @AT@ 4750 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[other.get(j)] @TO@ MethodInvocation@@other.get(j).get() @AT@ 4848 @LENGTH@ 17
------------------------INS MethodInvocation@@other.get(j) @TO@ SimpleName@@MethodName:get:[other.get(j)] @AT@ 4852 @LENGTH@ 12
---------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.get(j) @AT@ 4852 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:get:[j] @TO@ MethodInvocation@@other.get(j) @AT@ 4858 @LENGTH@ 6
------------------------------INS SimpleName@@j @TO@ SimpleName@@MethodName:get:[j] @AT@ 4862 @LENGTH@ 1
------------UPD ExpressionStatement@@Assignment:bin.y=other.get(j + 1).get() @TO@ Assignment:bin.y=doi.get(other.get(j + 1)) @AT@ 4765 @LENGTH@ 29
---------------UPD Assignment@@bin.y=other.get(j + 1).get() @TO@ bin.y=doi.get(other.get(j + 1)) @AT@ 4765 @LENGTH@ 28
------------------UPD MethodInvocation@@other.get(j + 1).get() @TO@ doi.get(other.get(j + 1)) @AT@ 4773 @LENGTH@ 20
---------------------DEL MethodInvocation@@MethodName:get:[j + 1] @AT@ 4773 @LENGTH@ 14
------------------------DEL InfixExpression@@j + 1 @AT@ 4783 @LENGTH@ 3
---------------------UPD SimpleName@@Name:other @TO@ Name:doi @AT@ 4773 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:get:[] @AT@ 4788 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[other.get(j + 1)] @TO@ MethodInvocation@@other.get(j + 1).get() @AT@ 4887 @LENGTH@ 19
------------------------INS MethodInvocation@@other.get(j + 1) @TO@ SimpleName@@MethodName:get:[other.get(j + 1)] @AT@ 4891 @LENGTH@ 14
---------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.get(j + 1) @AT@ 4891 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:get:[j + 1] @TO@ MethodInvocation@@other.get(j + 1) @AT@ 4897 @LENGTH@ 8
------------------------------INS InfixExpression@@j + 1 @TO@ SimpleName@@MethodName:get:[j + 1] @AT@ 4901 @LENGTH@ 3
---------------------------------MOV SimpleName@@j @TO@ InfixExpression@@j + 1 @AT@ 4783 @LENGTH@ 1
---------------------------------MOV Operator@@+ @TO@ InfixExpression@@j + 1 @AT@ 4784 @LENGTH@ 1
---------------------------------MOV NumberLiteral@@1 @TO@ InfixExpression@@j + 1 @AT@ 4785 @LENGTH@ 1
---INS SingleVariableDeclaration@@DoubleObjectInspector doi @TO@ MethodDeclaration@@public, void, MethodName:merge, List<DoubleWritable> other,  @AT@ 3612 @LENGTH@ 25
------INS SimpleType@@DoubleObjectInspector @TO@ SingleVariableDeclaration@@DoubleObjectInspector doi @AT@ 3612 @LENGTH@ 21
------INS SimpleName@@doi @TO@ SingleVariableDeclaration@@DoubleObjectInspector doi @AT@ 3634 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(p.getAssertMsg(),"{\"status\":\"ok\",\"version\":\"v1\"}",p.responseBody) @TO@ MethodInvocation:Assert.assertTrue(p.getAssertMsg(),jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody))) @AT@ 3843 @LENGTH@ 96
---UPD MethodInvocation@@Assert.assertEquals(p.getAssertMsg(),"{\"status\":\"ok\",\"version\":\"v1\"}",p.responseBody) @TO@ Assert.assertTrue(p.getAssertMsg(),jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody))) @AT@ 3843 @LENGTH@ 95
------UPD SimpleName@@MethodName:assertEquals:[p.getAssertMsg(), "{\"status\":\"ok\",\"version\":\"v1\"}", p.responseBody] @TO@ MethodName:assertTrue:[p.getAssertMsg(), jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody))] @AT@ 3850 @LENGTH@ 88
---------DEL StringLiteral@@"{\"status\":\"ok\",\"version\":\"v1\"}" @AT@ 3881 @LENGTH@ 40
---------INS MethodInvocation@@jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody)) @TO@ SimpleName@@MethodName:assertEquals:[p.getAssertMsg(), "{\"status\":\"ok\",\"version\":\"v1\"}", p.responseBody] @AT@ 4494 @LENGTH@ 122
------------INS MethodInvocation@@MethodName:jsonStringToSortedMap:["{\"status\":\"ok\",\"version\":\"v1\"}"] @TO@ MethodInvocation@@jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody)) @AT@ 4494 @LENGTH@ 63
---------------INS StringLiteral@@"{\"status\":\"ok\",\"version\":\"v1\"}" @TO@ MethodInvocation@@MethodName:jsonStringToSortedMap:["{\"status\":\"ok\",\"version\":\"v1\"}"] @AT@ 4516 @LENGTH@ 40
------------INS SimpleName@@MethodName:equals:[jsonStringToSortedMap(p.responseBody)] @TO@ MethodInvocation@@jsonStringToSortedMap("{\"status\":\"ok\",\"version\":\"v1\"}").equals(jsonStringToSortedMap(p.responseBody)) @AT@ 4558 @LENGTH@ 58
---------------INS MethodInvocation@@jsonStringToSortedMap(p.responseBody) @TO@ SimpleName@@MethodName:equals:[jsonStringToSortedMap(p.responseBody)] @AT@ 4578 @LENGTH@ 37
------------------INS SimpleName@@MethodName:jsonStringToSortedMap:[p.responseBody] @TO@ MethodInvocation@@jsonStringToSortedMap(p.responseBody) @AT@ 4578 @LENGTH@ 37
---------------------MOV QualifiedName@@p.responseBody @TO@ SimpleName@@MethodName:jsonStringToSortedMap:[p.responseBody] @AT@ 3923 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:LlapIoImpl.LOG.info("setError called; closed " + isClosed + ", done "+ isDone+ ", err "+ pendingError+ ", pending "+ pendingData.size()) @TO@ MethodDeclaration@@public, void, MethodName:setError, Throwable t,  @AT@ 4978 @LENGTH@ 150


INS MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationTests,  @AT@ 2575 @LENGTH@ 495
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2575 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2582 @LENGTH@ 4
---INS SimpleName@@MethodName:testSerializationWithDetails @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2587 @LENGTH@ 28
---INS VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")); @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2622 @LENGTH@ 201
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")); @AT@ 2622 @LENGTH@ 20
------INS VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")) @TO@ VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")); @AT@ 2643 @LENGTH@ 179
---------INS SimpleName@@holder @TO@ VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")) @AT@ 2643 @LENGTH@ 6
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(), new UsernamePasswordAuthenticationToken("user","pwd")] @TO@ VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(),new UsernamePasswordAuthenticationToken("user","pwd")) @AT@ 2652 @LENGTH@ 170
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2652 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2656 @LENGTH@ 20
------------INS MethodInvocation@@new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request() @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2682 @LENGTH@ 79
---------------INS ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @TO@ MethodInvocation@@new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request() @AT@ 2682 @LENGTH@ 57
------------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2682 @LENGTH@ 3
------------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2686 @LENGTH@ 20
------------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2707 @LENGTH@ 8
------------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2717 @LENGTH@ 21
---------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2717 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2724 @LENGTH@ 14
------------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 2731 @LENGTH@ 6
---------------INS SimpleName@@MethodName:createOAuth2Request:[] @TO@ MethodInvocation@@new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request() @AT@ 2740 @LENGTH@ 21
------------INS ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")).createOAuth2Request(), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2767 @LENGTH@ 54
---------------INS New@@new @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2767 @LENGTH@ 3
---------------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2771 @LENGTH@ 35
---------------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2807 @LENGTH@ 6
---------------INS StringLiteral@@"pwd" @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2815 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:holder.setDetails(new OAuth2AuthenticationDetails(new MockHttpServletRequest())) @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2826 @LENGTH@ 81
------INS MethodInvocation@@holder.setDetails(new OAuth2AuthenticationDetails(new MockHttpServletRequest())) @TO@ ExpressionStatement@@MethodInvocation:holder.setDetails(new OAuth2AuthenticationDetails(new MockHttpServletRequest())) @AT@ 2826 @LENGTH@ 80
---------INS SimpleName@@Name:holder @TO@ MethodInvocation@@holder.setDetails(new OAuth2AuthenticationDetails(new MockHttpServletRequest())) @AT@ 2826 @LENGTH@ 6
---------INS SimpleName@@MethodName:setDetails:[new OAuth2AuthenticationDetails(new MockHttpServletRequest())] @TO@ MethodInvocation@@holder.setDetails(new OAuth2AuthenticationDetails(new MockHttpServletRequest())) @AT@ 2833 @LENGTH@ 73
------------INS ClassInstanceCreation@@OAuth2AuthenticationDetails[new MockHttpServletRequest()] @TO@ SimpleName@@MethodName:setDetails:[new OAuth2AuthenticationDetails(new MockHttpServletRequest())] @AT@ 2844 @LENGTH@ 61
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[new MockHttpServletRequest()] @AT@ 2844 @LENGTH@ 3
---------------INS SimpleType@@OAuth2AuthenticationDetails @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[new MockHttpServletRequest()] @AT@ 2848 @LENGTH@ 27
---------------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ ClassInstanceCreation@@OAuth2AuthenticationDetails[new MockHttpServletRequest()] @AT@ 2876 @LENGTH@ 28
------------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2876 @LENGTH@ 3
------------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2880 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 2910 @LENGTH@ 126
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @AT@ 2910 @LENGTH@ 20
------INS VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @AT@ 2931 @LENGTH@ 104
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2931 @LENGTH@ 5
---------INS CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2939 @LENGTH@ 96
------------INS SimpleType@@OAuth2Authentication @TO@ CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2940 @LENGTH@ 20
------------INS MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2962 @LENGTH@ 73
---------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2962 @LENGTH@ 18
---------------INS SimpleName@@MethodName:deserialize:[SerializationUtils.serialize(holder)] @TO@ MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2981 @LENGTH@ 54
------------------INS MethodInvocation@@SerializationUtils.serialize(holder) @TO@ SimpleName@@MethodName:deserialize:[SerializationUtils.serialize(holder)] @AT@ 2993 @LENGTH@ 41
---------------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.serialize(holder) @AT@ 2993 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:serialize:[holder] @TO@ MethodInvocation@@SerializationUtils.serialize(holder) @AT@ 3017 @LENGTH@ 17
------------------------INS SimpleName@@holder @TO@ SimpleName@@MethodName:serialize:[holder] @AT@ 3027 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(holder,other) @TO@ MethodDeclaration@@public, void, MethodName:testSerializationWithDetails,  @AT@ 3039 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(holder,other) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(holder,other) @AT@ 3039 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[holder, other] @TO@ MethodInvocation@@assertEquals(holder,other) @AT@ 3039 @LENGTH@ 27
------------INS SimpleName@@holder @TO@ SimpleName@@MethodName:assertEquals:[holder, other] @AT@ 3052 @LENGTH@ 6
------------INS SimpleName@@other @TO@ SimpleName@@MethodName:assertEquals:[holder, other] @AT@ 3060 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:context.destroy() @TO@ MethodInvocation:context.close() @AT@ 12395 @LENGTH@ 18
---UPD MethodInvocation@@context.destroy() @TO@ context.close() @AT@ 12395 @LENGTH@ 17
------UPD SimpleName@@MethodName:destroy:[] @TO@ MethodName:close:[] @AT@ 12403 @LENGTH@ 9


UPD MethodDeclaration@@public, static, String, MethodName:toIso, Country country,  @TO@ public, String, MethodName:toIso, Country country,  @AT@ 1195 @LENGTH@ 84
---DEL Modifier@@static @AT@ 1202 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new StreamSource(ClassLoader.getSystemResourceAsStream(rulesDir.concat(File.separator).concat(href))) @TO@ ClassInstanceCreation:new StreamSource(ClassLoader.getSystemResourceAsStream(rulesDir.concat("/").concat(href))) @AT@ 1499 @LENGTH@ 109
---UPD ClassInstanceCreation@@StreamSource[ClassLoader.getSystemResourceAsStream(rulesDir.concat(File.separator).concat(href))] @TO@ StreamSource[ClassLoader.getSystemResourceAsStream(rulesDir.concat("/").concat(href))] @AT@ 1506 @LENGTH@ 101
------UPD MethodInvocation@@ClassLoader.getSystemResourceAsStream(rulesDir.concat(File.separator).concat(href)) @TO@ ClassLoader.getSystemResourceAsStream(rulesDir.concat("/").concat(href)) @AT@ 1523 @LENGTH@ 83
---------UPD SimpleName@@MethodName:getSystemResourceAsStream:[rulesDir.concat(File.separator).concat(href)] @TO@ MethodName:getSystemResourceAsStream:[rulesDir.concat("/").concat(href)] @AT@ 1535 @LENGTH@ 71
------------UPD MethodInvocation@@rulesDir.concat(File.separator).concat(href) @TO@ rulesDir.concat("/").concat(href) @AT@ 1561 @LENGTH@ 44
---------------UPD MethodInvocation@@MethodName:concat:[File.separator] @TO@ MethodName:concat:["/"] @AT@ 1561 @LENGTH@ 31
------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:concat:[File.separator] @AT@ 1556 @LENGTH@ 3
------------------DEL QualifiedName@@File.separator @AT@ 1577 @LENGTH@ 14
---------------------DEL SimpleName@@File @AT@ 1577 @LENGTH@ 4
---------------------DEL SimpleName@@separator @AT@ 1582 @LENGTH@ 9


DEL MethodDeclaration@@FqlOperations, MethodName:fqlOperations,  @AT@ 1699 @LENGTH@ 16
---DEL SimpleType@@FqlOperations @AT@ 1685 @LENGTH@ 13
---DEL SimpleName@@MethodName:fqlOperations @AT@ 1699 @LENGTH@ 13


UPD MethodDeclaration@@EncodedDataReader<BatchKey>, MethodName:getReader, InputSplit split, List<Integer> columnIds, SearchArgument sarg, String[] columnNames, Consumer<EncodedColumn<BatchKey>> consumer,  @TO@ EncodedDataReader<BatchKey>, MethodName:getReader, InputSplit split, List<Integer> columnIds, SearchArgument sarg, String[] columnNames, Consumer<EncodedColumnBatch<BatchKey>> consumer,  @AT@ 1223 @LENGTH@ 146
---UPD SingleVariableDeclaration@@Consumer<EncodedColumn<BatchKey>> consumer @TO@ Consumer<EncodedColumnBatch<BatchKey>> consumer @AT@ 1325 @LENGTH@ 42
------UPD ParameterizedType@@Consumer<EncodedColumn<BatchKey>> @TO@ Consumer<EncodedColumnBatch<BatchKey>> @AT@ 1325 @LENGTH@ 33
---------UPD ParameterizedType@@EncodedColumn<BatchKey> @TO@ EncodedColumnBatch<BatchKey> @AT@ 1334 @LENGTH@ 23
------------UPD SimpleType@@EncodedColumn @TO@ EncodedColumnBatch @AT@ 1334 @LENGTH@ 13


UPD IfStatement@@if (StringUtils.hasLength(requestedScope)) {  params.setScope(requestedScope);} else {  params.setScope(defaultScope);} @TO@ if (StringUtils.hasLength(requestedScope)) {  params.setScope(requestedScope);} else if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @AT@ 4683 @LENGTH@ 129
---INS Block@@ElseBody:if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @TO@ IfStatement@@if (StringUtils.hasLength(requestedScope)) {  params.setScope(requestedScope);} else {  params.setScope(defaultScope);} @AT@ 4773 @LENGTH@ 80
------INS IfStatement@@if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @TO@ Block@@ElseBody:if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @AT@ 4773 @LENGTH@ 80
---------MOV Block@@ElseBody:{  params.setScope(defaultScope);} @TO@ IfStatement@@if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @AT@ 4773 @LENGTH@ 39
---------INS MethodInvocation@@StringUtils.hasLength(defaultScope) @TO@ IfStatement@@if (StringUtils.hasLength(defaultScope)) {  params.setScope(defaultScope);} @AT@ 4777 @LENGTH@ 35
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasLength(defaultScope) @AT@ 4777 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasLength:[defaultScope] @TO@ MethodInvocation@@StringUtils.hasLength(defaultScope) @AT@ 4789 @LENGTH@ 23
---------------INS SimpleName@@defaultScope @TO@ SimpleName@@MethodName:hasLength:[defaultScope] @AT@ 4799 @LENGTH@ 12
---UPD Block@@ElseBody:{  params.setScope(defaultScope);} @TO@ ThenBody:{  params.setScope(defaultScope);} @AT@ 4773 @LENGTH@ 39


UPD TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "dataformats: " : "dataformat: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelDataFormat",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @TO@ try {  OutputStream os=buildContext.newFileOutputStream(outFile);  properties.store(os,"Generated by camel-package-maven-plugin");  os.close();  log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "dataformats: " : "dataformat: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelDataFormat",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 12194 @LENGTH@ 669
---DEL TryStatement@@try (OutputStream os=buildContext.newFileOutputStream(outFile)){  properties.store(os,"Generated by camel-package-maven-plugin");}  @AT@ 12216 @LENGTH@ 169
------DEL VariableDeclarationExpression@@OutputStream os=buildContext.newFileOutputStream(outFile) @AT@ 12220 @LENGTH@ 59
---------DEL SimpleType@@OutputStream @AT@ 12220 @LENGTH@ 12
---INS VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "dataformats: " : "dataformat: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelDataFormat",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 12257 @LENGTH@ 60
------MOV VariableDeclarationFragment@@os=buildContext.newFileOutputStream(outFile) @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 12233 @LENGTH@ 46
------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 12257 @LENGTH@ 12
---MOV ExpressionStatement@@MethodInvocation:properties.store(os,"Generated by camel-package-maven-plugin") @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "dataformats: " : "dataformat: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelDataFormat",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 12303 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:os.close() @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "dataformats: " : "dataformat: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelDataFormat",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 12415 @LENGTH@ 11
------INS MethodInvocation@@os.close() @TO@ ExpressionStatement@@MethodInvocation:os.close() @AT@ 12415 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.close() @AT@ 12415 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@os.close() @AT@ 12418 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:executor=new DefaultExecCommandExecutor(exchange) @TO@ Assignment:executor=new DefaultExecCommandExecutor() @AT@ 1713 @LENGTH@ 52
---UPD Assignment@@executor=new DefaultExecCommandExecutor(exchange) @TO@ executor=new DefaultExecCommandExecutor() @AT@ 1713 @LENGTH@ 51
------UPD ClassInstanceCreation@@DefaultExecCommandExecutor[exchange] @TO@ DefaultExecCommandExecutor[] @AT@ 1724 @LENGTH@ 40
---------DEL SimpleName@@exchange @AT@ 1755 @LENGTH@ 8


INS FieldDeclaration@@private, HeaderFilterStrategy, [httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy()] @TO@ TypeDeclaration@@[public]DefaultJettyHttpBinding, [JettyHttpBinding] @AT@ 1880 @LENGTH@ 103
---INS Modifier@@private @TO@ FieldDeclaration@@private, HeaderFilterStrategy, [httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy()] @AT@ 1880 @LENGTH@ 7
---INS SimpleType@@HeaderFilterStrategy @TO@ FieldDeclaration@@private, HeaderFilterStrategy, [httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy()] @AT@ 1888 @LENGTH@ 20
---INS VariableDeclarationFragment@@httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy() @TO@ FieldDeclaration@@private, HeaderFilterStrategy, [httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy()] @AT@ 1909 @LENGTH@ 73
------INS SimpleName@@httpProtocolHeaderFilterStrategy @TO@ VariableDeclarationFragment@@httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy() @AT@ 1909 @LENGTH@ 32
------INS ClassInstanceCreation@@HttpProtocolHeaderFilterStrategy[] @TO@ VariableDeclarationFragment@@httpProtocolHeaderFilterStrategy=new HttpProtocolHeaderFilterStrategy() @AT@ 1944 @LENGTH@ 38
---------INS New@@new @TO@ ClassInstanceCreation@@HttpProtocolHeaderFilterStrategy[] @AT@ 1944 @LENGTH@ 3
---------INS SimpleType@@HttpProtocolHeaderFilterStrategy @TO@ ClassInstanceCreation@@HttpProtocolHeaderFilterStrategy[] @AT@ 1948 @LENGTH@ 32


UPD VariableDeclarationStatement@@ResourceMetadata mapping=mappings.getMappingFor(domainType); @TO@ ResourceMetadata mapping=mappings.getMetadataFor(domainType); @AT@ 3976 @LENGTH@ 62
---UPD VariableDeclarationFragment@@mapping=mappings.getMappingFor(domainType) @TO@ mapping=mappings.getMetadataFor(domainType) @AT@ 3993 @LENGTH@ 44
------UPD MethodInvocation@@mappings.getMappingFor(domainType) @TO@ mappings.getMetadataFor(domainType) @AT@ 4003 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getMappingFor:[domainType] @TO@ MethodName:getMetadataFor:[domainType] @AT@ 4012 @LENGTH@ 25


UPD VariableDeclarationStatement@@String expected="{\n" + "  \"name\" : \"Camel\"" + "\n}"; @TO@ String expected=String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()); @AT@ 2401 @LENGTH@ 109
---UPD VariableDeclarationFragment@@expected="{\n" + "  \"name\" : \"Camel\"" + "\n}" @TO@ expected=String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2408 @LENGTH@ 101
------INS MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @TO@ VariableDeclarationFragment@@expected="{\n" + "  \"name\" : \"Camel\"" + "\n}" @AT@ 2419 @LENGTH@ 93
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2419 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @TO@ MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2426 @LENGTH@ 86
------------INS StringLiteral@@"{%s  \"name\" : \"Camel\"%s}" @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2433 @LENGTH@ 30
------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2465 @LENGTH@ 22
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2465 @LENGTH@ 6
---------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2472 @LENGTH@ 15
------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2489 @LENGTH@ 22
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2489 @LENGTH@ 6
---------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2496 @LENGTH@ 15
------DEL InfixExpression@@"{\n" + "  \"name\" : \"Camel\"" + "\n}" @AT@ 2419 @LENGTH@ 90
---------DEL StringLiteral@@"{\n" @AT@ 2419 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 2424 @LENGTH@ 1
---------DEL StringLiteral@@"  \"name\" : \"Camel\"" @AT@ 2452 @LENGTH@ 24
---------DEL StringLiteral@@"\n}" @AT@ 2504 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractDefaultTokenServicesTests,  @AT@ 8956 @LENGTH@ 522
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 8956 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 8963 @LENGTH@ 4
---INS SimpleName@@MethodName:testRevokedTokenNotAvailable @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 8968 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9006 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2Authentication authentication=createAuthentication(); @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9020 @LENGTH@ 61
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=createAuthentication(); @AT@ 9020 @LENGTH@ 20
------INS VariableDeclarationFragment@@authentication=createAuthentication() @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=createAuthentication(); @AT@ 9041 @LENGTH@ 39
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=createAuthentication() @AT@ 9041 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:createAuthentication:[] @TO@ VariableDeclarationFragment@@authentication=createAuthentication() @AT@ 9058 @LENGTH@ 22
---INS VariableDeclarationStatement@@OAuth2AccessToken token=getTokenServices().createAccessToken(authentication); @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9084 @LENGTH@ 79
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken token=getTokenServices().createAccessToken(authentication); @AT@ 9084 @LENGTH@ 17
------INS VariableDeclarationFragment@@token=getTokenServices().createAccessToken(authentication) @TO@ VariableDeclarationStatement@@OAuth2AccessToken token=getTokenServices().createAccessToken(authentication); @AT@ 9102 @LENGTH@ 60
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=getTokenServices().createAccessToken(authentication) @AT@ 9102 @LENGTH@ 5
---------INS MethodInvocation@@getTokenServices().createAccessToken(authentication) @TO@ VariableDeclarationFragment@@token=getTokenServices().createAccessToken(authentication) @AT@ 9110 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(authentication) @AT@ 9110 @LENGTH@ 18
------------INS SimpleName@@MethodName:createAccessToken:[authentication] @TO@ MethodInvocation@@getTokenServices().createAccessToken(authentication) @AT@ 9129 @LENGTH@ 33
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:createAccessToken:[authentication] @AT@ 9147 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:getTokenServices().revokeToken(token.getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9166 @LENGTH@ 49
------INS MethodInvocation@@getTokenServices().revokeToken(token.getValue()) @TO@ ExpressionStatement@@MethodInvocation:getTokenServices().revokeToken(token.getValue()) @AT@ 9166 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().revokeToken(token.getValue()) @AT@ 9166 @LENGTH@ 18
---------INS SimpleName@@MethodName:revokeToken:[token.getValue()] @TO@ MethodInvocation@@getTokenServices().revokeToken(token.getValue()) @AT@ 9185 @LENGTH@ 29
------------INS MethodInvocation@@token.getValue() @TO@ SimpleName@@MethodName:revokeToken:[token.getValue()] @AT@ 9197 @LENGTH@ 16
---------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getValue() @AT@ 9197 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getValue() @AT@ 9203 @LENGTH@ 10
---INS VariableDeclarationStatement@@Collection<OAuth2AccessToken> tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()); @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9218 @LENGTH@ 186
------INS ParameterizedType@@Collection<OAuth2AccessToken> @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()); @AT@ 9218 @LENGTH@ 29
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 9218 @LENGTH@ 10
---------INS SimpleType@@OAuth2AccessToken @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 9229 @LENGTH@ 17
------INS VariableDeclarationFragment@@tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()); @AT@ 9248 @LENGTH@ 155
---------INS SimpleName@@tokens @TO@ VariableDeclarationFragment@@tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @AT@ 9248 @LENGTH@ 6
---------INS MethodInvocation@@getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @TO@ VariableDeclarationFragment@@tokens=getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @AT@ 9257 @LENGTH@ 146
------------INS MethodInvocation@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @AT@ 9257 @LENGTH@ 15
------------INS SimpleName@@MethodName:findTokensByClientIdAndUserName:[authentication.getOAuth2Request().getClientId(), authentication.getUserAuthentication().getName()] @TO@ MethodInvocation@@getTokenStore().findTokensByClientIdAndUserName(authentication.getOAuth2Request().getClientId(),authentication.getUserAuthentication().getName()) @AT@ 9273 @LENGTH@ 130
---------------INS MethodInvocation@@authentication.getOAuth2Request().getClientId() @TO@ SimpleName@@MethodName:findTokensByClientIdAndUserName:[authentication.getOAuth2Request().getClientId(), authentication.getUserAuthentication().getName()] @AT@ 9305 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 9305 @LENGTH@ 33
------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 9305 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().getClientId() @AT@ 9339 @LENGTH@ 13
---------------INS MethodInvocation@@authentication.getUserAuthentication().getName() @TO@ SimpleName@@MethodName:findTokensByClientIdAndUserName:[authentication.getOAuth2Request().getClientId(), authentication.getUserAuthentication().getName()] @AT@ 9354 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 9354 @LENGTH@ 38
------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 9354 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getName() @AT@ 9393 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertFalse(tokens.contains(token)) @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9407 @LENGTH@ 36
------INS MethodInvocation@@assertFalse(tokens.contains(token)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(tokens.contains(token)) @AT@ 9407 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertFalse:[tokens.contains(token)] @TO@ MethodInvocation@@assertFalse(tokens.contains(token)) @AT@ 9407 @LENGTH@ 35
------------INS MethodInvocation@@tokens.contains(token) @TO@ SimpleName@@MethodName:assertFalse:[tokens.contains(token)] @AT@ 9419 @LENGTH@ 22
---------------INS SimpleName@@Name:tokens @TO@ MethodInvocation@@tokens.contains(token) @AT@ 9419 @LENGTH@ 6
---------------INS SimpleName@@MethodName:contains:[token] @TO@ MethodInvocation@@tokens.contains(token) @AT@ 9426 @LENGTH@ 15
------------------INS SimpleName@@token @TO@ SimpleName@@MethodName:contains:[token] @AT@ 9435 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertTrue(tokens.isEmpty()) @TO@ MethodDeclaration@@public, void, MethodName:testRevokedTokenNotAvailable, Exception,  @AT@ 9446 @LENGTH@ 29
------INS MethodInvocation@@assertTrue(tokens.isEmpty()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(tokens.isEmpty()) @AT@ 9446 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertTrue:[tokens.isEmpty()] @TO@ MethodInvocation@@assertTrue(tokens.isEmpty()) @AT@ 9446 @LENGTH@ 28
------------INS MethodInvocation@@tokens.isEmpty() @TO@ SimpleName@@MethodName:assertTrue:[tokens.isEmpty()] @AT@ 9457 @LENGTH@ 16
---------------INS SimpleName@@Name:tokens @TO@ MethodInvocation@@tokens.isEmpty() @AT@ 9457 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@tokens.isEmpty() @AT@ 9464 @LENGTH@ 9


UPD Block@@ElseBody:if (name.startsWith("host3")) {  racks.add("/rack3");} @TO@ ElseBody:if (name.startsWith("host3")) {  racks.add("/rack3");} else {  racks.add("/default-rack");} @AT@ 499 @LENGTH@ 61
---UPD IfStatement@@if (name.startsWith("host3")) {  racks.add("/rack3");} @TO@ if (name.startsWith("host3")) {  racks.add("/rack3");} else {  racks.add("/default-rack");} @AT@ 499 @LENGTH@ 61
------INS Block@@ElseBody:{  racks.add("/default-rack");} @TO@ IfStatement@@if (name.startsWith("host3")) {  racks.add("/rack3");} @AT@ 1293 @LENGTH@ 38
---------INS ExpressionStatement@@MethodInvocation:racks.add("/default-rack") @TO@ Block@@ElseBody:{  racks.add("/default-rack");} @AT@ 1299 @LENGTH@ 27
------------INS MethodInvocation@@racks.add("/default-rack") @TO@ ExpressionStatement@@MethodInvocation:racks.add("/default-rack") @AT@ 1299 @LENGTH@ 26
---------------INS SimpleName@@Name:racks @TO@ MethodInvocation@@racks.add("/default-rack") @AT@ 1299 @LENGTH@ 5
---------------INS SimpleName@@MethodName:add:["/default-rack"] @TO@ MethodInvocation@@racks.add("/default-rack") @AT@ 1305 @LENGTH@ 20
------------------INS StringLiteral@@"/default-rack" @TO@ SimpleName@@MethodName:add:["/default-rack"] @AT@ 1309 @LENGTH@ 15
---UPD IfStatement@@if (name.startsWith("host3")) {  racks.add("/rack3");} @TO@ if (name.startsWith("host3")) {  racks.add("/rack3");} else {  racks.add("/default-rack");} @AT@ 499 @LENGTH@ 61
------INS Block@@ElseBody:{  racks.add("/default-rack");} @TO@ IfStatement@@if (name.startsWith("host3")) {  racks.add("/rack3");} @AT@ 1293 @LENGTH@ 38
---------INS ExpressionStatement@@MethodInvocation:racks.add("/default-rack") @TO@ Block@@ElseBody:{  racks.add("/default-rack");} @AT@ 1299 @LENGTH@ 27
------------INS MethodInvocation@@racks.add("/default-rack") @TO@ ExpressionStatement@@MethodInvocation:racks.add("/default-rack") @AT@ 1299 @LENGTH@ 26
---------------INS SimpleName@@Name:racks @TO@ MethodInvocation@@racks.add("/default-rack") @AT@ 1299 @LENGTH@ 5
---------------INS SimpleName@@MethodName:add:["/default-rack"] @TO@ MethodInvocation@@racks.add("/default-rack") @AT@ 1305 @LENGTH@ 20
------------------INS StringLiteral@@"/default-rack" @TO@ SimpleName@@MethodName:add:["/default-rack"] @AT@ 1309 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertThat(files.size(),equalTo(2)) @TO@ MethodInvocation:assertThat(files.size() - before,equalTo(2)) @AT@ 11252 @LENGTH@ 37
---UPD MethodInvocation@@assertThat(files.size(),equalTo(2)) @TO@ assertThat(files.size() - before,equalTo(2)) @AT@ 11252 @LENGTH@ 36
------UPD SimpleName@@MethodName:assertThat:[files.size(), equalTo(2)] @TO@ MethodName:assertThat:[files.size() - before, equalTo(2)] @AT@ 11252 @LENGTH@ 36
---------DEL MethodInvocation@@files.size() @AT@ 11263 @LENGTH@ 12
---------INS InfixExpression@@files.size() - before @TO@ SimpleName@@MethodName:assertThat:[files.size(), equalTo(2)] @AT@ 11415 @LENGTH@ 21
------------INS MethodInvocation@@files.size() @TO@ InfixExpression@@files.size() - before @AT@ 11415 @LENGTH@ 12
---------------MOV SimpleName@@Name:files @TO@ MethodInvocation@@files.size() @AT@ 11263 @LENGTH@ 5
---------------MOV SimpleName@@Name:files @TO@ MethodInvocation@@files.size() @AT@ 11263 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@files.size() @AT@ 11269 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@files.size() @AT@ 11269 @LENGTH@ 6
------------INS Operator@@- @TO@ InfixExpression@@files.size() - before @AT@ 11427 @LENGTH@ 1
------------INS SimpleName@@before @TO@ InfixExpression@@files.size() - before @AT@ 11430 @LENGTH@ 6


UPD IfStatement@@if (configuration.getTransportAddressesList() != null && !configuration.getTransportAddressesList().isEmpty()) {  List<TransportAddress> addresses=new ArrayList(configuration.getTransportAddressesList().size());  for (  TransportAddress address : configuration.getTransportAddressesList()) {    addresses.add(address);  }  this.client=new TransportClient(getSettings()).addTransportAddresses(addresses.toArray(new TransportAddress[addresses.size()]));} else {  NodeBuilder builder=nodeBuilder().local(configuration.isLocal()).data(configuration.getData());  if (!configuration.isLocal() && configuration.getClusterName() != null) {    builder.clusterName(configuration.getClusterName());  }  node=builder.node();  client=node.client();} @TO@ if (configuration.getTransportAddressesList() != null && !configuration.getTransportAddressesList().isEmpty()) {  List<TransportAddress> addresses=new ArrayList(configuration.getTransportAddressesList().size());  for (  TransportAddress address : configuration.getTransportAddressesList()) {    addresses.add(address);  }  this.client=new TransportClient(getSettings()).addTransportAddresses(addresses.toArray(new TransportAddress[addresses.size()]));} else {  NodeBuilder builder=nodeBuilder().local(configuration.isLocal()).data(configuration.getData());  if (!configuration.isLocal() && configuration.getClusterName() != null) {    builder.clusterName(configuration.getClusterName());  }  builder.getSettings().classLoader(Settings.class.getClassLoader());  node=builder.node();  client=node.client();} @AT@ 3313 @LENGTH@ 922
---UPD Block@@ElseBody:{  NodeBuilder builder=nodeBuilder().local(configuration.isLocal()).data(configuration.getData());  if (!configuration.isLocal() && configuration.getClusterName() != null) {    builder.clusterName(configuration.getClusterName());  }  node=builder.node();  client=node.client();} @TO@ ElseBody:{  NodeBuilder builder=nodeBuilder().local(configuration.isLocal()).data(configuration.getData());  if (!configuration.isLocal() && configuration.getClusterName() != null) {    builder.clusterName(configuration.getClusterName());  }  builder.getSettings().classLoader(Settings.class.getClassLoader());  node=builder.node();  client=node.client();} @AT@ 3874 @LENGTH@ 361
------INS ExpressionStatement@@MethodInvocation:builder.getSettings().classLoader(Settings.class.getClassLoader()) @TO@ Block@@ElseBody:{  NodeBuilder builder=nodeBuilder().local(configuration.isLocal()).data(configuration.getData());  if (!configuration.isLocal() && configuration.getClusterName() != null) {    builder.clusterName(configuration.getClusterName());  }  node=builder.node();  client=node.client();} @AT@ 4167 @LENGTH@ 67
---------INS MethodInvocation@@builder.getSettings().classLoader(Settings.class.getClassLoader()) @TO@ ExpressionStatement@@MethodInvocation:builder.getSettings().classLoader(Settings.class.getClassLoader()) @AT@ 4167 @LENGTH@ 66
------------INS MethodInvocation@@MethodName:getSettings:[] @TO@ MethodInvocation@@builder.getSettings().classLoader(Settings.class.getClassLoader()) @AT@ 4167 @LENGTH@ 21
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getSettings().classLoader(Settings.class.getClassLoader()) @AT@ 4167 @LENGTH@ 7
------------INS SimpleName@@MethodName:classLoader:[Settings.class.getClassLoader()] @TO@ MethodInvocation@@builder.getSettings().classLoader(Settings.class.getClassLoader()) @AT@ 4189 @LENGTH@ 44
---------------INS MethodInvocation@@Settings.class.getClassLoader() @TO@ SimpleName@@MethodName:classLoader:[Settings.class.getClassLoader()] @AT@ 4201 @LENGTH@ 31
------------------INS TypeLiteral@@Settings.class @TO@ MethodInvocation@@Settings.class.getClassLoader() @AT@ 4201 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@Settings.class.getClassLoader() @AT@ 4216 @LENGTH@ 16


INS MethodDeclaration@@private, Set<HttpMethod>, MethodName:allowedTokenEndpointRequestMethods,  @TO@ TypeDeclaration@@[@Configuration, @Import(TokenKeyEndpointRegistrar.class), public]AuthorizationServerEndpointsConfiguration,  @AT@ 7094 @LENGTH@ 140
---INS Modifier@@private @TO@ MethodDeclaration@@private, Set<HttpMethod>, MethodName:allowedTokenEndpointRequestMethods,  @AT@ 7094 @LENGTH@ 7
---INS ParameterizedType@@Set<HttpMethod> @TO@ MethodDeclaration@@private, Set<HttpMethod>, MethodName:allowedTokenEndpointRequestMethods,  @AT@ 7102 @LENGTH@ 15
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<HttpMethod> @AT@ 7102 @LENGTH@ 3
------INS SimpleType@@HttpMethod @TO@ ParameterizedType@@Set<HttpMethod> @AT@ 7106 @LENGTH@ 10
---INS SimpleName@@MethodName:allowedTokenEndpointRequestMethods @TO@ MethodDeclaration@@private, Set<HttpMethod>, MethodName:allowedTokenEndpointRequestMethods,  @AT@ 7118 @LENGTH@ 34
---INS ReturnStatement@@MethodInvocation:getEndpointsConfigurer().getAllowedTokenEndpointRequestMethods() @TO@ MethodDeclaration@@private, Set<HttpMethod>, MethodName:allowedTokenEndpointRequestMethods,  @AT@ 7159 @LENGTH@ 72
------INS MethodInvocation@@getEndpointsConfigurer().getAllowedTokenEndpointRequestMethods() @TO@ ReturnStatement@@MethodInvocation:getEndpointsConfigurer().getAllowedTokenEndpointRequestMethods() @AT@ 7166 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:getEndpointsConfigurer:[] @TO@ MethodInvocation@@getEndpointsConfigurer().getAllowedTokenEndpointRequestMethods() @AT@ 7166 @LENGTH@ 24
---------INS SimpleName@@MethodName:getAllowedTokenEndpointRequestMethods:[] @TO@ MethodInvocation@@getEndpointsConfigurer().getAllowedTokenEndpointRequestMethods() @AT@ 7191 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @TO@ TypeDeclaration@@[public]MySqlPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 3421 @LENGTH@ 1208
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3421 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3428 @LENGTH@ 4
---INS SimpleName@@MethodName:testFirstPageSqlWithAliases @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3433 @LENGTH@ 27
---INS ExpressionStatement@@Assignment:this.pagingQueryProvider=new MySqlPagingQueryProvider() @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3467 @LENGTH@ 58
------INS Assignment@@this.pagingQueryProvider=new MySqlPagingQueryProvider() @TO@ ExpressionStatement@@Assignment:this.pagingQueryProvider=new MySqlPagingQueryProvider() @AT@ 3467 @LENGTH@ 57
---------INS FieldAccess@@this.pagingQueryProvider @TO@ Assignment@@this.pagingQueryProvider=new MySqlPagingQueryProvider() @AT@ 3467 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3467 @LENGTH@ 4
------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3472 @LENGTH@ 19
---------INS Operator@@= @TO@ Assignment@@this.pagingQueryProvider=new MySqlPagingQueryProvider() @AT@ 3491 @LENGTH@ 1
---------INS ClassInstanceCreation@@MySqlPagingQueryProvider[] @TO@ Assignment@@this.pagingQueryProvider=new MySqlPagingQueryProvider() @AT@ 3494 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@MySqlPagingQueryProvider[] @AT@ 3494 @LENGTH@ 3
------------INS SimpleType@@MySqlPagingQueryProvider @TO@ ClassInstanceCreation@@MySqlPagingQueryProvider[] @AT@ 3498 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setSelectClause("SELECT owner.id as ownerid, first_name, last_name, dog_name ") @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3528 @LENGTH@ 105
------INS MethodInvocation@@this.pagingQueryProvider.setSelectClause("SELECT owner.id as ownerid, first_name, last_name, dog_name ") @TO@ ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setSelectClause("SELECT owner.id as ownerid, first_name, last_name, dog_name ") @AT@ 3528 @LENGTH@ 104
---------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.setSelectClause("SELECT owner.id as ownerid, first_name, last_name, dog_name ") @AT@ 3528 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3528 @LENGTH@ 4
------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3533 @LENGTH@ 19
---------INS SimpleName@@MethodName:setSelectClause:["SELECT owner.id as ownerid, first_name, last_name, dog_name "] @TO@ MethodInvocation@@this.pagingQueryProvider.setSelectClause("SELECT owner.id as ownerid, first_name, last_name, dog_name ") @AT@ 3553 @LENGTH@ 79
------------INS StringLiteral@@"SELECT owner.id as ownerid, first_name, last_name, dog_name " @TO@ SimpleName@@MethodName:setSelectClause:["SELECT owner.id as ownerid, first_name, last_name, dog_name "] @AT@ 3569 @LENGTH@ 62
---INS ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setFromClause("FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ") @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3636 @LENGTH@ 100
------INS MethodInvocation@@this.pagingQueryProvider.setFromClause("FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ") @TO@ ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setFromClause("FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ") @AT@ 3636 @LENGTH@ 99
---------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.setFromClause("FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ") @AT@ 3636 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3636 @LENGTH@ 4
------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3641 @LENGTH@ 19
---------INS SimpleName@@MethodName:setFromClause:["FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id "] @TO@ MethodInvocation@@this.pagingQueryProvider.setFromClause("FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ") @AT@ 3661 @LENGTH@ 74
------------INS StringLiteral@@"FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id " @TO@ SimpleName@@MethodName:setFromClause:["FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id "] @AT@ 3675 @LENGTH@ 59
---INS ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setSortKeys(new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3739 @LENGTH@ 112
------INS MethodInvocation@@this.pagingQueryProvider.setSortKeys(new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:this.pagingQueryProvider.setSortKeys(new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
) @AT@ 3739 @LENGTH@ 111
---------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.setSortKeys(new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
) @AT@ 3739 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3739 @LENGTH@ 4
------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3744 @LENGTH@ 19
---------INS SimpleName@@MethodName:setSortKeys:[new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
] @TO@ MethodInvocation@@this.pagingQueryProvider.setSortKeys(new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
) @AT@ 3764 @LENGTH@ 86
------------INS ClassInstanceCreation@@HashMap<String,Order>[] @TO@ SimpleName@@MethodName:setSortKeys:[new HashMap<String,Order>(){
{
    put("owner.id",Order.ASCENDING);
  }
}
] @AT@ 3776 @LENGTH@ 73
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Order>[] @AT@ 3776 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<String,Order> @TO@ ClassInstanceCreation@@HashMap<String,Order>[] @AT@ 3780 @LENGTH@ 22
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 3780 @LENGTH@ 7
------------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 3788 @LENGTH@ 6
------------------INS SimpleType@@Order @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 3796 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@HashMap<String,Order>[] @AT@ 3805 @LENGTH@ 44
------------------INS Initializer@@Initializer @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3806 @LENGTH@ 42
---------------------INS ExpressionStatement@@MethodInvocation:put("owner.id",Order.ASCENDING) @TO@ Initializer@@Initializer @AT@ 3811 @LENGTH@ 33
------------------------INS MethodInvocation@@put("owner.id",Order.ASCENDING) @TO@ ExpressionStatement@@MethodInvocation:put("owner.id",Order.ASCENDING) @AT@ 3811 @LENGTH@ 32
---------------------------INS SimpleName@@MethodName:put:["owner.id", Order.ASCENDING] @TO@ MethodInvocation@@put("owner.id",Order.ASCENDING) @AT@ 3811 @LENGTH@ 32
------------------------------INS StringLiteral@@"owner.id" @TO@ SimpleName@@MethodName:put:["owner.id", Order.ASCENDING] @AT@ 3815 @LENGTH@ 10
------------------------------INS QualifiedName@@Order.ASCENDING @TO@ SimpleName@@MethodName:put:["owner.id", Order.ASCENDING] @AT@ 3827 @LENGTH@ 15
---------------------------------INS SimpleName@@Order @TO@ QualifiedName@@Order.ASCENDING @AT@ 3827 @LENGTH@ 5
---------------------------------INS SimpleName@@ASCENDING @TO@ QualifiedName@@Order.ASCENDING @AT@ 3833 @LENGTH@ 9
---INS VariableDeclarationStatement@@String firstPage=this.pagingQueryProvider.generateFirstPageQuery(5); @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3855 @LENGTH@ 70
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String firstPage=this.pagingQueryProvider.generateFirstPageQuery(5); @AT@ 3855 @LENGTH@ 6
------INS VariableDeclarationFragment@@firstPage=this.pagingQueryProvider.generateFirstPageQuery(5) @TO@ VariableDeclarationStatement@@String firstPage=this.pagingQueryProvider.generateFirstPageQuery(5); @AT@ 3862 @LENGTH@ 62
---------INS SimpleName@@firstPage @TO@ VariableDeclarationFragment@@firstPage=this.pagingQueryProvider.generateFirstPageQuery(5) @AT@ 3862 @LENGTH@ 9
---------INS MethodInvocation@@this.pagingQueryProvider.generateFirstPageQuery(5) @TO@ VariableDeclarationFragment@@firstPage=this.pagingQueryProvider.generateFirstPageQuery(5) @AT@ 3874 @LENGTH@ 50
------------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.generateFirstPageQuery(5) @AT@ 3874 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3874 @LENGTH@ 4
---------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3879 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateFirstPageQuery:[5] @TO@ MethodInvocation@@this.pagingQueryProvider.generateFirstPageQuery(5) @AT@ 3899 @LENGTH@ 25
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:generateFirstPageQuery:[5] @AT@ 3922 @LENGTH@ 1
---INS VariableDeclarationStatement@@String jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5); @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 3928 @LENGTH@ 80
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5); @AT@ 3928 @LENGTH@ 6
------INS VariableDeclarationFragment@@jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5) @TO@ VariableDeclarationStatement@@String jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5); @AT@ 3935 @LENGTH@ 72
---------INS SimpleName@@jumpToItemQuery @TO@ VariableDeclarationFragment@@jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5) @AT@ 3935 @LENGTH@ 15
---------INS MethodInvocation@@this.pagingQueryProvider.generateJumpToItemQuery(7,5) @TO@ VariableDeclarationFragment@@jumpToItemQuery=this.pagingQueryProvider.generateJumpToItemQuery(7,5) @AT@ 3953 @LENGTH@ 54
------------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.generateJumpToItemQuery(7,5) @AT@ 3953 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3953 @LENGTH@ 4
---------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 3958 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[7, 5] @TO@ MethodInvocation@@this.pagingQueryProvider.generateJumpToItemQuery(7,5) @AT@ 3978 @LENGTH@ 29
---------------INS NumberLiteral@@7 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[7, 5] @AT@ 4002 @LENGTH@ 1
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[7, 5] @AT@ 4005 @LENGTH@ 1
---INS VariableDeclarationStatement@@String remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5); @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 4011 @LENGTH@ 85
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5); @AT@ 4011 @LENGTH@ 6
------INS VariableDeclarationFragment@@remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5) @TO@ VariableDeclarationStatement@@String remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5); @AT@ 4018 @LENGTH@ 77
---------INS SimpleName@@remainingPagesQuery @TO@ VariableDeclarationFragment@@remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5) @AT@ 4018 @LENGTH@ 19
---------INS MethodInvocation@@this.pagingQueryProvider.generateRemainingPagesQuery(5) @TO@ VariableDeclarationFragment@@remainingPagesQuery=this.pagingQueryProvider.generateRemainingPagesQuery(5) @AT@ 4040 @LENGTH@ 55
------------INS FieldAccess@@this.pagingQueryProvider @TO@ MethodInvocation@@this.pagingQueryProvider.generateRemainingPagesQuery(5) @AT@ 4040 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 4040 @LENGTH@ 4
---------------INS SimpleName@@pagingQueryProvider @TO@ FieldAccess@@this.pagingQueryProvider @AT@ 4045 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateRemainingPagesQuery:[5] @TO@ MethodInvocation@@this.pagingQueryProvider.generateRemainingPagesQuery(5) @AT@ 4065 @LENGTH@ 30
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:generateRemainingPagesQuery:[5] @AT@ 4093 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5",firstPage) @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 4100 @LENGTH@ 174
------INS MethodInvocation@@assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5",firstPage) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5",firstPage) @AT@ 4100 @LENGTH@ 173
---------INS SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5", firstPage] @TO@ MethodInvocation@@assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5",firstPage) @AT@ 4100 @LENGTH@ 173
------------INS StringLiteral@@"SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5" @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5", firstPage] @AT@ 4113 @LENGTH@ 148
------------INS SimpleName@@firstPage @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 5", firstPage] @AT@ 4263 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1",jumpToItemQuery) @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 4277 @LENGTH@ 139
------INS MethodInvocation@@assertEquals("SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1",jumpToItemQuery) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1",jumpToItemQuery) @AT@ 4277 @LENGTH@ 138
---------INS SimpleName@@MethodName:assertEquals:["SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1", jumpToItemQuery] @TO@ MethodInvocation@@assertEquals("SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1",jumpToItemQuery) @AT@ 4277 @LENGTH@ 138
------------INS StringLiteral@@"SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1" @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1", jumpToItemQuery] @AT@ 4290 @LENGTH@ 107
------------INS SimpleName@@jumpToItemQuery @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id ORDER BY owner.id ASC LIMIT 4, 1", jumpToItemQuery] @AT@ 4399 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5",remainingPagesQuery) @TO@ MethodDeclaration@@public, void, MethodName:testFirstPageSqlWithAliases,  @AT@ 4419 @LENGTH@ 207
------INS MethodInvocation@@assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5",remainingPagesQuery) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5",remainingPagesQuery) @AT@ 4419 @LENGTH@ 206
---------INS SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5", remainingPagesQuery] @TO@ MethodInvocation@@assertEquals("SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5",remainingPagesQuery) @AT@ 4419 @LENGTH@ 206
------------INS StringLiteral@@"SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5" @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5", remainingPagesQuery] @AT@ 4432 @LENGTH@ 171
------------INS SimpleName@@remainingPagesQuery @TO@ SimpleName@@MethodName:assertEquals:["SELECT owner.id as ownerid, first_name, last_name, dog_name FROM dog_owner owner INNER JOIN dog ON owner.id = dog.id WHERE ((owner.id > ?)) ORDER BY owner.id ASC LIMIT 5", remainingPagesQuery] @AT@ 4605 @LENGTH@ 19


INS MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @TO@ TypeDeclaration@@[public]MQTTConsumer, DefaultConsumer @AT@ 1622 @LENGTH@ 788
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 1617 @LENGTH@ 4
---INS SimpleName@@MethodName:processExchange @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 1622 @LENGTH@ 15
---INS SingleVariableDeclaration@@final Exchange exchange @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 1638 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 1638 @LENGTH@ 5
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 1644 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@final Exchange exchange @AT@ 1653 @LENGTH@ 8
---INS VariableDeclarationStatement@@boolean sync=true; @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 1673 @LENGTH@ 20
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean sync=true; @AT@ 1673 @LENGTH@ 7
------INS VariableDeclarationFragment@@sync=true @TO@ VariableDeclarationStatement@@boolean sync=true; @AT@ 1681 @LENGTH@ 11
---------INS SimpleName@@sync @TO@ VariableDeclarationFragment@@sync=true @AT@ 1681 @LENGTH@ 4
---------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@sync=true @AT@ 1688 @LENGTH@ 4
---INS TryStatement@@try {  sync=getAsyncProcessor().process(exchange,new AsyncCallback(){    @Override public void done(    boolean doneSync){      if (exchange.getException() != null) {        getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());      }    }  });} catch (Throwable e) {  exchange.setException(e);} @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 1702 @LENGTH@ 486
------MOV CatchClause@@catch (Throwable e) {  exchange.setException(e);} @TO@ TryStatement@@try {  sync=getAsyncProcessor().process(exchange,new AsyncCallback(){    @Override public void done(    boolean doneSync){      if (exchange.getException() != null) {        getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());      }    }  });} catch (Throwable e) {  exchange.setException(e);} @AT@ 1690 @LENGTH@ 69
------INS ExpressionStatement@@Assignment:sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @TO@ TryStatement@@try {  sync=getAsyncProcessor().process(exchange,new AsyncCallback(){    @Override public void done(    boolean doneSync){      if (exchange.getException() != null) {        getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());      }    }  });} catch (Throwable e) {  exchange.setException(e);} @AT@ 1720 @LENGTH@ 388
---------INS Assignment@@sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @TO@ ExpressionStatement@@Assignment:sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1720 @LENGTH@ 387
------------INS SimpleName@@sync @TO@ Assignment@@sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1720 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1724 @LENGTH@ 1
------------INS MethodInvocation@@getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @TO@ Assignment@@sync=getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1727 @LENGTH@ 380
---------------INS MethodInvocation@@MethodName:getAsyncProcessor:[] @TO@ MethodInvocation@@getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1727 @LENGTH@ 19
---------------INS SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
] @TO@ MethodInvocation@@getAsyncProcessor().process(exchange,new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
) @AT@ 1747 @LENGTH@ 360
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
] @AT@ 1755 @LENGTH@ 8
------------------INS ClassInstanceCreation@@AsyncCallback[] @TO@ SimpleName@@MethodName:process:[exchange, new AsyncCallback(){
  @Override public void done(  boolean doneSync){
    if (exchange.getException() != null) {
      getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());
    }
  }
}
] @AT@ 1765 @LENGTH@ 341
---------------------INS New@@new @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1765 @LENGTH@ 3
---------------------INS SimpleType@@AsyncCallback @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1769 @LENGTH@ 13
---------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@AsyncCallback[] @AT@ 1785 @LENGTH@ 321
------------------------MOV MethodDeclaration@@void, MethodName:processExchange, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1583 @LENGTH@ 356
---------------------------UPD SimpleName@@MethodName:processExchange @TO@ MethodName:done @AT@ 1583 @LENGTH@ 15
---------------------------UPD SingleVariableDeclaration@@Exchange exchange @TO@ boolean doneSync @AT@ 1599 @LENGTH@ 17
------------------------------DEL SimpleType@@Exchange @AT@ 1599 @LENGTH@ 8
------------------------------UPD SimpleName@@exchange @TO@ doneSync @AT@ 1608 @LENGTH@ 8
------------------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1846 @LENGTH@ 7
---------------------------DEL TryStatement@@try {  getProcessor().process(exchange);} catch (Throwable e) {  exchange.setException(e);} @AT@ 1628 @LENGTH@ 131
------------------------------DEL ExpressionStatement@@MethodInvocation:getProcessor().process(exchange) @AT@ 1646 @LENGTH@ 33
---------------------------------DEL MethodInvocation@@getProcessor().process(exchange) @AT@ 1646 @LENGTH@ 32
------------------------------------DEL MethodInvocation@@MethodName:getProcessor:[] @AT@ 1646 @LENGTH@ 14
------------------------------------DEL SimpleName@@MethodName:process:[exchange] @AT@ 1661 @LENGTH@ 17
---------------------------------------DEL SimpleName@@exchange @AT@ 1669 @LENGTH@ 8
---------------------------INS Modifier@@public @TO@ MethodDeclaration@@void, MethodName:processExchange, Exchange exchange,  @AT@ 1829 @LENGTH@ 6
---INS IfStatement@@if (sync) {  if (exchange.getException() != null) {    getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());  }} @TO@ MethodDeclaration@@void, MethodName:processExchange, final Exchange exchange,  @AT@ 2198 @LENGTH@ 206
------INS SimpleName@@sync @TO@ IfStatement@@if (sync) {  if (exchange.getException() != null) {    getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());  }} @AT@ 2202 @LENGTH@ 4
------INS Block@@ThenBody:{  if (exchange.getException() != null) {    getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());  }} @TO@ IfStatement@@if (sync) {  if (exchange.getException() != null) {    getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());  }} @AT@ 2208 @LENGTH@ 196
---------INS IfStatement@@if (exchange.getException() != null) {  getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());} @TO@ Block@@ThenBody:{  if (exchange.getException() != null) {    getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());  }} @AT@ 2222 @LENGTH@ 172
------------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchange.getException() != null) {  getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());} @AT@ 2226 @LENGTH@ 31
---------------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 2226 @LENGTH@ 23
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 2226 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 2235 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@exchange.getException() != null @AT@ 2249 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 2253 @LENGTH@ 4
------------INS Block@@ThenBody:{  getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());} @TO@ IfStatement@@if (exchange.getException() != null) {  getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());} @AT@ 2259 @LENGTH@ 135
---------------INS ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException()) @TO@ Block@@ThenBody:{  getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException());} @AT@ 2277 @LENGTH@ 103
------------------INS MethodInvocation@@getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException()) @TO@ ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException()) @AT@ 2277 @LENGTH@ 102
---------------------INS MethodInvocation@@MethodName:getExceptionHandler:[] @TO@ MethodInvocation@@getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException()) @AT@ 2277 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:handleException:["Error processing exchange.", exchange, exchange.getException()] @TO@ MethodInvocation@@getExceptionHandler().handleException("Error processing exchange.",exchange,exchange.getException()) @AT@ 2299 @LENGTH@ 80
------------------------INS StringLiteral@@"Error processing exchange." @TO@ SimpleName@@MethodName:handleException:["Error processing exchange.", exchange, exchange.getException()] @AT@ 2315 @LENGTH@ 28
------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:handleException:["Error processing exchange.", exchange, exchange.getException()] @AT@ 2345 @LENGTH@ 8
------------------------INS MethodInvocation@@exchange.getException() @TO@ SimpleName@@MethodName:handleException:["Error processing exchange.", exchange, exchange.getException()] @AT@ 2355 @LENGTH@ 23
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 2355 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 2364 @LENGTH@ 14


UPD ForStatement@@for (int i=0; i < neededColIndxsFrmReloptHT.size(); i++) {  colName=scanColNames.get(i);  posInRHT=neededColIndxsFrmReloptHT.get(i);  if (VColsMap.containsKey(posInRHT)) {    vc=VColsMap.get(posInRHT);    virtualCols.add(vc);    colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());    vcolsInCalcite.add(posInRHT);  } else   if (posToPartColInfo.containsKey(posInRHT)) {    partColNames.add(colName);    colInfo=posToPartColInfo.get(posInRHT);    vcolsInCalcite.add(posInRHT);  } else {    colInfo=posToNonPartColInfo.get(posInRHT);  }  neededColumnIDs.add(posInRHT);  neededColumnNames.add(colName);  colInfos.add(colInfo);} @TO@ for (int index=0; index < scanRel.getRowType().getFieldList().size(); index++) {  colName=scanColNames.get(index);  if (VColsMap.containsKey(index)) {    vc=VColsMap.get(index);    virtualCols.add(vc);    colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());    vcolsInCalcite.add(index);  } else   if (posToPartColInfo.containsKey(index)) {    partColNames.add(colName);    colInfo=posToPartColInfo.get(index);    vcolsInCalcite.add(index);  } else {    colInfo=posToNonPartColInfo.get(index);  }  colInfos.add(colInfo);  if (neededColIndxsFrmReloptHT.contains(index)) {    neededColumnIDs.add(index);    neededColumnNames.add(colName);  }} @AT@ 9266 @LENGTH@ 766
---UPD VariableDeclarationExpression@@int i=0 @TO@ int index=0 @AT@ 9271 @LENGTH@ 9
------UPD VariableDeclarationFragment@@i=0 @TO@ index=0 @AT@ 9275 @LENGTH@ 5
---------UPD SimpleName@@i @TO@ index @AT@ 9275 @LENGTH@ 1
---UPD InfixExpression@@i < neededColIndxsFrmReloptHT.size() @TO@ index < scanRel.getRowType().getFieldList().size() @AT@ 9282 @LENGTH@ 36
------UPD SimpleName@@i @TO@ index @AT@ 9282 @LENGTH@ 1
------UPD MethodInvocation@@neededColIndxsFrmReloptHT.size() @TO@ scanRel.getRowType().getFieldList().size() @AT@ 9286 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getFieldList:[] @TO@ MethodInvocation@@neededColIndxsFrmReloptHT.size() @AT@ 9272 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:getRowType:[] @TO@ MethodInvocation@@neededColIndxsFrmReloptHT.size() @AT@ 9272 @LENGTH@ 20
---------UPD SimpleName@@Name:neededColIndxsFrmReloptHT @TO@ Name:scanRel @AT@ 9286 @LENGTH@ 25
---UPD PostfixExpression@@i++ @TO@ index++ @AT@ 9320 @LENGTH@ 3
------UPD SimpleName@@i @TO@ index @AT@ 9320 @LENGTH@ 1
---UPD ExpressionStatement@@Assignment:colName=scanColNames.get(i) @TO@ Assignment:colName=scanColNames.get(index) @AT@ 9333 @LENGTH@ 30
------UPD Assignment@@colName=scanColNames.get(i) @TO@ colName=scanColNames.get(index) @AT@ 9333 @LENGTH@ 29
---------UPD MethodInvocation@@scanColNames.get(i) @TO@ scanColNames.get(index) @AT@ 9343 @LENGTH@ 19
------------UPD SimpleName@@MethodName:get:[i] @TO@ MethodName:get:[index] @AT@ 9356 @LENGTH@ 6
---------------UPD SimpleName@@i @TO@ index @AT@ 9360 @LENGTH@ 1
---DEL ExpressionStatement@@Assignment:posInRHT=neededColIndxsFrmReloptHT.get(i) @AT@ 9370 @LENGTH@ 44
------DEL Assignment@@posInRHT=neededColIndxsFrmReloptHT.get(i) @AT@ 9370 @LENGTH@ 43
---------DEL SimpleName@@posInRHT @AT@ 9370 @LENGTH@ 8
---------DEL Operator@@= @AT@ 9378 @LENGTH@ 1
---------DEL MethodInvocation@@neededColIndxsFrmReloptHT.get(i) @AT@ 9381 @LENGTH@ 32
---UPD IfStatement@@if (VColsMap.containsKey(posInRHT)) {  vc=VColsMap.get(posInRHT);  virtualCols.add(vc);  colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());  vcolsInCalcite.add(posInRHT);} else if (posToPartColInfo.containsKey(posInRHT)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(posInRHT);  vcolsInCalcite.add(posInRHT);} else {  colInfo=posToNonPartColInfo.get(posInRHT);} @TO@ if (VColsMap.containsKey(index)) {  vc=VColsMap.get(index);  virtualCols.add(vc);  colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());  vcolsInCalcite.add(index);} else if (posToPartColInfo.containsKey(index)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(index);  vcolsInCalcite.add(index);} else {  colInfo=posToNonPartColInfo.get(index);} @AT@ 9421 @LENGTH@ 501
------UPD MethodInvocation@@VColsMap.containsKey(posInRHT) @TO@ VColsMap.containsKey(index) @AT@ 9425 @LENGTH@ 30
---------UPD SimpleName@@MethodName:containsKey:[posInRHT] @TO@ MethodName:containsKey:[index] @AT@ 9434 @LENGTH@ 21
------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9446 @LENGTH@ 8
------UPD Block@@ThenBody:{  vc=VColsMap.get(posInRHT);  virtualCols.add(vc);  colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());  vcolsInCalcite.add(posInRHT);} @TO@ ThenBody:{  vc=VColsMap.get(index);  virtualCols.add(vc);  colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());  vcolsInCalcite.add(index);} @AT@ 9457 @LENGTH@ 215
---------UPD ExpressionStatement@@Assignment:vc=VColsMap.get(posInRHT) @TO@ Assignment:vc=VColsMap.get(index) @AT@ 9467 @LENGTH@ 28
------------UPD Assignment@@vc=VColsMap.get(posInRHT) @TO@ vc=VColsMap.get(index) @AT@ 9467 @LENGTH@ 27
---------------UPD MethodInvocation@@VColsMap.get(posInRHT) @TO@ VColsMap.get(index) @AT@ 9472 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:get:[posInRHT] @TO@ MethodName:get:[index] @AT@ 9481 @LENGTH@ 13
---------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9485 @LENGTH@ 8
---------UPD ExpressionStatement@@MethodInvocation:vcolsInCalcite.add(posInRHT) @TO@ MethodInvocation:vcolsInCalcite.add(index) @AT@ 9635 @LENGTH@ 29
------------UPD MethodInvocation@@vcolsInCalcite.add(posInRHT) @TO@ vcolsInCalcite.add(index) @AT@ 9635 @LENGTH@ 28
---------------UPD SimpleName@@MethodName:add:[posInRHT] @TO@ MethodName:add:[index] @AT@ 9650 @LENGTH@ 13
------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9654 @LENGTH@ 8
------UPD Block@@ElseBody:if (posToPartColInfo.containsKey(posInRHT)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(posInRHT);  vcolsInCalcite.add(posInRHT);} else {  colInfo=posToNonPartColInfo.get(posInRHT);} @TO@ ElseBody:if (posToPartColInfo.containsKey(index)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(index);  vcolsInCalcite.add(index);} else {  colInfo=posToNonPartColInfo.get(index);} @AT@ 9678 @LENGTH@ 244
---------UPD IfStatement@@if (posToPartColInfo.containsKey(posInRHT)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(posInRHT);  vcolsInCalcite.add(posInRHT);} else {  colInfo=posToNonPartColInfo.get(posInRHT);} @TO@ if (posToPartColInfo.containsKey(index)) {  partColNames.add(colName);  colInfo=posToPartColInfo.get(index);  vcolsInCalcite.add(index);} else {  colInfo=posToNonPartColInfo.get(index);} @AT@ 9678 @LENGTH@ 244
------------UPD MethodInvocation@@posToPartColInfo.containsKey(posInRHT) @TO@ posToPartColInfo.containsKey(index) @AT@ 9682 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:containsKey:[posInRHT] @TO@ MethodName:containsKey:[index] @AT@ 9699 @LENGTH@ 21
------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9711 @LENGTH@ 8
------------UPD Block@@ThenBody:{  partColNames.add(colName);  colInfo=posToPartColInfo.get(posInRHT);  vcolsInCalcite.add(posInRHT);} @TO@ ThenBody:{  partColNames.add(colName);  colInfo=posToPartColInfo.get(index);  vcolsInCalcite.add(index);} @AT@ 9722 @LENGTH@ 132
---------------UPD ExpressionStatement@@Assignment:colInfo=posToPartColInfo.get(posInRHT) @TO@ Assignment:colInfo=posToPartColInfo.get(index) @AT@ 9767 @LENGTH@ 41
------------------UPD Assignment@@colInfo=posToPartColInfo.get(posInRHT) @TO@ colInfo=posToPartColInfo.get(index) @AT@ 9767 @LENGTH@ 40
---------------------UPD MethodInvocation@@posToPartColInfo.get(posInRHT) @TO@ posToPartColInfo.get(index) @AT@ 9777 @LENGTH@ 30
------------------------UPD SimpleName@@MethodName:get:[posInRHT] @TO@ MethodName:get:[index] @AT@ 9794 @LENGTH@ 13
---------------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9798 @LENGTH@ 8
---------------UPD ExpressionStatement@@MethodInvocation:vcolsInCalcite.add(posInRHT) @TO@ MethodInvocation:vcolsInCalcite.add(index) @AT@ 9817 @LENGTH@ 29
------------------UPD MethodInvocation@@vcolsInCalcite.add(posInRHT) @TO@ vcolsInCalcite.add(index) @AT@ 9817 @LENGTH@ 28
---------------------UPD SimpleName@@MethodName:add:[posInRHT] @TO@ MethodName:add:[index] @AT@ 9832 @LENGTH@ 13
------------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9836 @LENGTH@ 8
------------UPD Block@@ElseBody:{  colInfo=posToNonPartColInfo.get(posInRHT);} @TO@ ElseBody:{  colInfo=posToNonPartColInfo.get(index);} @AT@ 9860 @LENGTH@ 62
---------------UPD ExpressionStatement@@Assignment:colInfo=posToNonPartColInfo.get(posInRHT) @TO@ Assignment:colInfo=posToNonPartColInfo.get(index) @AT@ 9870 @LENGTH@ 44
------------------UPD Assignment@@colInfo=posToNonPartColInfo.get(posInRHT) @TO@ colInfo=posToNonPartColInfo.get(index) @AT@ 9870 @LENGTH@ 43
---------------------UPD MethodInvocation@@posToNonPartColInfo.get(posInRHT) @TO@ posToNonPartColInfo.get(index) @AT@ 9880 @LENGTH@ 33
------------------------UPD SimpleName@@MethodName:get:[posInRHT] @TO@ MethodName:get:[index] @AT@ 9900 @LENGTH@ 13
---------------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9904 @LENGTH@ 8
---INS IfStatement@@if (neededColIndxsFrmReloptHT.contains(index)) {  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @TO@ ForStatement@@for (int i=0; i < neededColIndxsFrmReloptHT.size(); i++) {  colName=scanColNames.get(i);  posInRHT=neededColIndxsFrmReloptHT.get(i);  if (VColsMap.containsKey(posInRHT)) {    vc=VColsMap.get(posInRHT);    virtualCols.add(vc);    colInfo=new ColumnInfo(vc.getName(),vc.getTypeInfo(),tableAlias,true,vc.getIsHidden());    vcolsInCalcite.add(posInRHT);  } else   if (posToPartColInfo.containsKey(posInRHT)) {    partColNames.add(colName);    colInfo=posToPartColInfo.get(posInRHT);    vcolsInCalcite.add(posInRHT);  } else {    colInfo=posToNonPartColInfo.get(posInRHT);  }  neededColumnIDs.add(posInRHT);  neededColumnNames.add(colName);  colInfos.add(colInfo);} @AT@ 9890 @LENGTH@ 132
------INS MethodInvocation@@neededColIndxsFrmReloptHT.contains(index) @TO@ IfStatement@@if (neededColIndxsFrmReloptHT.contains(index)) {  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @AT@ 9894 @LENGTH@ 41
---------MOV SimpleName@@Name:neededColIndxsFrmReloptHT @TO@ MethodInvocation@@neededColIndxsFrmReloptHT.contains(index) @AT@ 9381 @LENGTH@ 25
---------MOV SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@neededColIndxsFrmReloptHT.contains(index) @AT@ 9407 @LENGTH@ 6
------------UPD SimpleName@@i @TO@ index @AT@ 9411 @LENGTH@ 1
------INS Block@@ThenBody:{  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @TO@ IfStatement@@if (neededColIndxsFrmReloptHT.contains(index)) {  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @AT@ 9937 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:neededColumnIDs.add(index) @TO@ Block@@ThenBody:{  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @AT@ 9947 @LENGTH@ 27
------------MOV MethodInvocation@@neededColumnIDs.add(posInRHT) @TO@ ExpressionStatement@@MethodInvocation:neededColumnIDs.add(index) @AT@ 9929 @LENGTH@ 29
---------------UPD SimpleName@@MethodName:add:[posInRHT] @TO@ MethodName:add:[index] @AT@ 9945 @LENGTH@ 13
------------------UPD SimpleName@@posInRHT @TO@ index @AT@ 9949 @LENGTH@ 8
---------MOV ExpressionStatement@@MethodInvocation:neededColumnNames.add(colName) @TO@ Block@@ThenBody:{  neededColumnIDs.add(index);  neededColumnNames.add(colName);} @AT@ 9966 @LENGTH@ 31
---DEL ExpressionStatement@@MethodInvocation:neededColumnIDs.add(posInRHT) @AT@ 9929 @LENGTH@ 30


UPD MethodDeclaration@@boolean, MethodName:isManagedResource, PersistentProperty<?> property,  @TO@ PropertyAwareResourceMapping, MethodName:getProperty, String mappedPath,  @AT@ 1260 @LENGTH@ 50
---DEL PrimitiveType@@boolean @AT@ 1252 @LENGTH@ 7
---UPD SimpleName@@MethodName:isManagedResource @TO@ MethodName:getProperty @AT@ 1260 @LENGTH@ 17
---UPD SingleVariableDeclaration@@PersistentProperty<?> property @TO@ String mappedPath @AT@ 1278 @LENGTH@ 30
------DEL ParameterizedType@@PersistentProperty<?> @AT@ 1278 @LENGTH@ 21
---------DEL SimpleType@@PersistentProperty @AT@ 1278 @LENGTH@ 18
---------DEL WildcardType@@? @AT@ 1297 @LENGTH@ 1
------UPD SimpleName@@property @TO@ mappedPath @AT@ 1300 @LENGTH@ 8
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@PersistentProperty<?> property @AT@ 1609 @LENGTH@ 6
---INS SimpleType@@PropertyAwareResourceMapping @TO@ MethodDeclaration@@boolean, MethodName:isManagedResource, PersistentProperty<?> property,  @AT@ 1568 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:currentNamespaceMapping().remove(prefix) @TO@ MethodDeclaration@@public, void, MethodName:endPrefixMapping, String prefix, SAXException,  @AT@ 2842 @LENGTH@ 41
---INS MethodInvocation@@currentNamespaceMapping().remove(prefix) @TO@ ExpressionStatement@@MethodInvocation:currentNamespaceMapping().remove(prefix) @AT@ 2842 @LENGTH@ 40
------INS MethodInvocation@@MethodName:currentNamespaceMapping:[] @TO@ MethodInvocation@@currentNamespaceMapping().remove(prefix) @AT@ 2842 @LENGTH@ 25
------INS SimpleName@@MethodName:remove:[prefix] @TO@ MethodInvocation@@currentNamespaceMapping().remove(prefix) @AT@ 2868 @LENGTH@ 14
---------INS SimpleName@@prefix @TO@ SimpleName@@MethodName:remove:[prefix] @AT@ 2875 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:basicResourceRegistration.registerReadOnlyAttribute(TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false),null) @TO@ MethodInvocation:basicResourceRegistration.registerReadOnlyAttribute(TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false,true),null) @AT@ 9067 @LENGTH@ 136
---UPD MethodInvocation@@basicResourceRegistration.registerReadOnlyAttribute(TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false),null) @TO@ basicResourceRegistration.registerReadOnlyAttribute(TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false,true),null) @AT@ 9067 @LENGTH@ 135
------UPD SimpleName@@MethodName:registerReadOnlyAttribute:[TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false), null] @TO@ MethodName:registerReadOnlyAttribute:[TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false,true), null] @AT@ 9093 @LENGTH@ 109
---------UPD MethodInvocation@@TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false) @TO@ TestUtils.createAttribute("eigth",ModelType.STRING,"group1",false,false,true) @AT@ 9119 @LENGTH@ 76
------------UPD SimpleName@@MethodName:createAttribute:["eigth", ModelType.STRING, "group1", false, false] @TO@ MethodName:createAttribute:["eigth", ModelType.STRING, "group1", false, false, true] @AT@ 9129 @LENGTH@ 66
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:createAttribute:["eigth", ModelType.STRING, "group1", false, false] @AT@ 9114 @LENGTH@ 4


INS MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @TO@ TypeDeclaration@@[public, final]JSonSchemaHelper,  @AT@ 3956 @LENGTH@ 221
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 3956 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 3964 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 3971 @LENGTH@ 6
---INS SimpleName@@MethodName:decodeJson @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 3978 @LENGTH@ 10
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 3989 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 3989 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 3996 @LENGTH@ 5
---INS IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 4086 @LENGTH@ 63
------INS MethodInvocation@@"\\\\".equals(value) @TO@ IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @AT@ 4090 @LENGTH@ 20
---------INS StringLiteral@@"\\\\" @TO@ MethodInvocation@@"\\\\".equals(value) @AT@ 4090 @LENGTH@ 6
---------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"\\\\".equals(value) @AT@ 4097 @LENGTH@ 13
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 4104 @LENGTH@ 5
------INS Block@@ThenBody:{  value="\\";} @TO@ IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @AT@ 4112 @LENGTH@ 37
---------INS ExpressionStatement@@Assignment:value="\\" @TO@ Block@@ThenBody:{  value="\\";} @AT@ 4126 @LENGTH@ 13
------------INS Assignment@@value="\\" @TO@ ExpressionStatement@@Assignment:value="\\" @AT@ 4126 @LENGTH@ 12
---------------INS SimpleName@@value @TO@ Assignment@@value="\\" @AT@ 4126 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value="\\" @AT@ 4131 @LENGTH@ 1
---------------INS StringLiteral@@"\\" @TO@ Assignment@@value="\\" @AT@ 4134 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:value @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 4158 @LENGTH@ 13
------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 4165 @LENGTH@ 5


UPD MethodDeclaration@@public, AuthorizationServerEndpointsConfigurer, MethodName:reuseRefreshTokens,  @TO@ public, AuthorizationServerEndpointsConfigurer, MethodName:reuseRefreshTokens, boolean reuseRefreshToken,  @AT@ 6264 @LENGTH@ 119
---UPD ExpressionStatement@@Assignment:this.reuseRefreshToken=true @TO@ Assignment:this.reuseRefreshToken=reuseRefreshToken @AT@ 6335 @LENGTH@ 30
------UPD Assignment@@this.reuseRefreshToken=true @TO@ this.reuseRefreshToken=reuseRefreshToken @AT@ 6335 @LENGTH@ 29
---------DEL BooleanLiteral@@true @AT@ 6360 @LENGTH@ 4
---------INS SimpleName@@reuseRefreshToken @TO@ Assignment@@this.reuseRefreshToken=true @AT@ 6392 @LENGTH@ 17
---INS SingleVariableDeclaration@@boolean reuseRefreshToken @TO@ MethodDeclaration@@public, AuthorizationServerEndpointsConfigurer, MethodName:reuseRefreshTokens,  @AT@ 6336 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean reuseRefreshToken @AT@ 6336 @LENGTH@ 7
------INS SimpleName@@reuseRefreshToken @TO@ SingleVariableDeclaration@@boolean reuseRefreshToken @AT@ 6344 @LENGTH@ 17


DEL ReturnStatement@@InfixExpression:lastFinishableState == fragmentInfo.canFinish() @AT@ 6583 @LENGTH@ 55
---DEL InfixExpression@@lastFinishableState == fragmentInfo.canFinish() @AT@ 6590 @LENGTH@ 47


INS TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 3077 @LENGTH@ 304
---MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown(managementClient,containerId) @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3068 @LENGTH@ 46
---INS Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3168 @LENGTH@ 213
------INS TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3186 @LENGTH@ 181
---------INS ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3212 @LENGTH@ 35
------------MOV MethodInvocation@@remove(address1) @TO@ ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @AT@ 3118 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:remove:[address1] @TO@ MethodName:remove:[address1, managementClient] @AT@ 3118 @LENGTH@ 16
------------------INS SimpleName@@managementClient @TO@ SimpleName@@MethodName:remove:[address1] @AT@ 3229 @LENGTH@ 16
---------INS Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3274 @LENGTH@ 93
------------MOV ExpressionStatement@@MethodInvocation:removeModule("org/jboss/ironjacamar/ra16out1",true) @TO@ Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3139 @LENGTH@ 53


UPD ReturnStatement@@ClassInstanceCreation:new VectorReaderImpl(split,columnIds,sarg,cvp) @TO@ ClassInstanceCreation:new VectorReader(split,columnIds,sarg,cvp) @AT@ 3553 @LENGTH@ 57
---UPD ClassInstanceCreation@@VectorReaderImpl[split, columnIds, sarg, cvp] @TO@ VectorReader[split, columnIds, sarg, cvp] @AT@ 3560 @LENGTH@ 49
------UPD SimpleType@@VectorReaderImpl @TO@ VectorReader @AT@ 3564 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:values.setProfileUrl("https://www.facebook.com/app_scoped_user_id/" + profile.getId() + '/') @TO@ MethodInvocation:values.setProfileUrl(profile.getLink()) @AT@ 1593 @LENGTH@ 93
---UPD MethodInvocation@@values.setProfileUrl("https://www.facebook.com/app_scoped_user_id/" + profile.getId() + '/') @TO@ values.setProfileUrl(profile.getLink()) @AT@ 1593 @LENGTH@ 92
------UPD SimpleName@@MethodName:setProfileUrl:["https://www.facebook.com/app_scoped_user_id/" + profile.getId() + '/'] @TO@ MethodName:setProfileUrl:[profile.getLink()] @AT@ 1600 @LENGTH@ 85
---------DEL InfixExpression@@"https://www.facebook.com/app_scoped_user_id/" + profile.getId() + '/' @AT@ 1614 @LENGTH@ 70
------------DEL StringLiteral@@"https://www.facebook.com/app_scoped_user_id/" @AT@ 1614 @LENGTH@ 46
------------DEL Operator@@+ @AT@ 1660 @LENGTH@ 1
------------DEL MethodInvocation@@profile.getId() @AT@ 1663 @LENGTH@ 15
------------DEL CharacterLiteral@@'/' @AT@ 1681 @LENGTH@ 3
---------INS MethodInvocation@@profile.getLink() @TO@ SimpleName@@MethodName:setProfileUrl:["https://www.facebook.com/app_scoped_user_id/" + profile.getId() + '/'] @AT@ 1671 @LENGTH@ 17
------------MOV SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getLink() @AT@ 1663 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@profile.getLink() @AT@ 1671 @LENGTH@ 7


INS MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]TokenEndpoint, AbstractEndpoint @AT@ 3749 @LENGTH@ 344
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3749 @LENGTH@ 6
---INS ParameterizedType@@ResponseEntity<OAuth2AccessToken> @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3756 @LENGTH@ 33
------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<OAuth2AccessToken> @AT@ 3756 @LENGTH@ 14
------INS SimpleType@@OAuth2AccessToken @TO@ ParameterizedType@@ResponseEntity<OAuth2AccessToken> @AT@ 3771 @LENGTH@ 17
---INS SimpleName@@MethodName:getAccessToken @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3790 @LENGTH@ 14
---INS SingleVariableDeclaration@@Principal principal @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3805 @LENGTH@ 19
------INS SimpleType@@Principal @TO@ SingleVariableDeclaration@@Principal principal @AT@ 3805 @LENGTH@ 9
------INS SimpleName@@principal @TO@ SingleVariableDeclaration@@Principal principal @AT@ 3815 @LENGTH@ 9
---INS SingleVariableDeclaration@@@RequestParam Map<String,String> parameters @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3826 @LENGTH@ 45
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@@RequestParam Map<String,String> parameters @AT@ 3841 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3841 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3845 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3853 @LENGTH@ 6
------INS SimpleName@@parameters @TO@ SingleVariableDeclaration@@@RequestParam Map<String,String> parameters @AT@ 3861 @LENGTH@ 10
---INS SimpleType@@HttpRequestMethodNotSupportedException @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3880 @LENGTH@ 38
---INS IfStatement@@if (!allowedRequestMethods.contains(HttpMethod.GET)) {  throw new HttpRequestMethodNotSupportedException("GET");} @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3923 @LENGTH@ 118
------INS PrefixExpression@@!allowedRequestMethods.contains(HttpMethod.GET) @TO@ IfStatement@@if (!allowedRequestMethods.contains(HttpMethod.GET)) {  throw new HttpRequestMethodNotSupportedException("GET");} @AT@ 3927 @LENGTH@ 47
---------INS Operator@@! @TO@ PrefixExpression@@!allowedRequestMethods.contains(HttpMethod.GET) @AT@ 3927 @LENGTH@ 1
---------INS MethodInvocation@@allowedRequestMethods.contains(HttpMethod.GET) @TO@ PrefixExpression@@!allowedRequestMethods.contains(HttpMethod.GET) @AT@ 3928 @LENGTH@ 46
------------INS SimpleName@@Name:allowedRequestMethods @TO@ MethodInvocation@@allowedRequestMethods.contains(HttpMethod.GET) @AT@ 3928 @LENGTH@ 21
------------INS SimpleName@@MethodName:contains:[HttpMethod.GET] @TO@ MethodInvocation@@allowedRequestMethods.contains(HttpMethod.GET) @AT@ 3950 @LENGTH@ 24
---------------INS QualifiedName@@HttpMethod.GET @TO@ SimpleName@@MethodName:contains:[HttpMethod.GET] @AT@ 3959 @LENGTH@ 14
------------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.GET @AT@ 3959 @LENGTH@ 10
------------------INS SimpleName@@GET @TO@ QualifiedName@@HttpMethod.GET @AT@ 3970 @LENGTH@ 3
------INS Block@@ThenBody:{  throw new HttpRequestMethodNotSupportedException("GET");} @TO@ IfStatement@@if (!allowedRequestMethods.contains(HttpMethod.GET)) {  throw new HttpRequestMethodNotSupportedException("GET");} @AT@ 3976 @LENGTH@ 65
---------INS ThrowStatement@@ClassInstanceCreation:new HttpRequestMethodNotSupportedException("GET") @TO@ Block@@ThenBody:{  throw new HttpRequestMethodNotSupportedException("GET");} @AT@ 3981 @LENGTH@ 56
------------INS ClassInstanceCreation@@HttpRequestMethodNotSupportedException["GET"] @TO@ ThrowStatement@@ClassInstanceCreation:new HttpRequestMethodNotSupportedException("GET") @AT@ 3987 @LENGTH@ 49
---------------INS New@@new @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["GET"] @AT@ 3987 @LENGTH@ 3
---------------INS SimpleType@@HttpRequestMethodNotSupportedException @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["GET"] @AT@ 3991 @LENGTH@ 38
---------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@HttpRequestMethodNotSupportedException["GET"] @AT@ 4030 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:postAccessToken(principal,parameters) @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 4044 @LENGTH@ 46
------INS MethodInvocation@@postAccessToken(principal,parameters) @TO@ ReturnStatement@@MethodInvocation:postAccessToken(principal,parameters) @AT@ 4051 @LENGTH@ 38
---------INS SimpleName@@MethodName:postAccessToken:[principal, parameters] @TO@ MethodInvocation@@postAccessToken(principal,parameters) @AT@ 4051 @LENGTH@ 38
------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:postAccessToken:[principal, parameters] @AT@ 4067 @LENGTH@ 9
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:postAccessToken:[principal, parameters] @AT@ 4078 @LENGTH@ 10


INS VariableDeclarationStatement@@String name=authentication == null ? null : authentication.getName(); @TO@ MethodDeclaration@@public, void, MethodName:saveAccessToken, OAuth2ProtectedResourceDetails resource, Authentication authentication, OAuth2AccessToken accessToken,  @AT@ 3102 @LENGTH@ 69
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=authentication == null ? null : authentication.getName(); @AT@ 3102 @LENGTH@ 6
---INS VariableDeclarationFragment@@name=authentication == null ? null : authentication.getName() @TO@ VariableDeclarationStatement@@String name=authentication == null ? null : authentication.getName(); @AT@ 3109 @LENGTH@ 61
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=authentication == null ? null : authentication.getName() @AT@ 3109 @LENGTH@ 4
------INS ConditionalExpression@@authentication == null ? null : authentication.getName() @TO@ VariableDeclarationFragment@@name=authentication == null ? null : authentication.getName() @AT@ 3116 @LENGTH@ 54
---------INS InfixExpression@@authentication == null @TO@ ConditionalExpression@@authentication == null ? null : authentication.getName() @AT@ 3116 @LENGTH@ 20
------------INS SimpleName@@authentication @TO@ InfixExpression@@authentication == null @AT@ 3116 @LENGTH@ 14
------------INS Operator@@== @TO@ InfixExpression@@authentication == null @AT@ 3130 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@authentication == null @AT@ 3132 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@authentication == null ? null : authentication.getName() @AT@ 3139 @LENGTH@ 4
---------INS MethodInvocation@@authentication.getName() @TO@ ConditionalExpression@@authentication == null ? null : authentication.getName() @AT@ 3146 @LENGTH@ 24
------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 3146 @LENGTH@ 14
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 3161 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:template.start() @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRouteAndThenAddAgain, Exception,  @AT@ 2058 @LENGTH@ 17
---INS MethodInvocation@@template.start() @TO@ ExpressionStatement@@MethodInvocation:template.start() @AT@ 2058 @LENGTH@ 16
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.start() @AT@ 2058 @LENGTH@ 8
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@template.start() @AT@ 2067 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3167 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 3167 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3167 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3187 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 3192 @LENGTH@ 11


UPD ReturnStatement@@ConditionalExpression:loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @TO@ ConditionalExpression:loader != null ? loader.getClass().getName().startsWith("com.ibm.") : false @AT@ 1678 @LENGTH@ 82
---UPD ConditionalExpression@@loader != null ? loader.getClass().getName().startsWith("com.ibm") : false @TO@ loader != null ? loader.getClass().getName().startsWith("com.ibm.") : false @AT@ 1685 @LENGTH@ 74
------UPD MethodInvocation@@loader.getClass().getName().startsWith("com.ibm") @TO@ loader.getClass().getName().startsWith("com.ibm.") @AT@ 1702 @LENGTH@ 49
---------UPD SimpleName@@MethodName:startsWith:["com.ibm"] @TO@ MethodName:startsWith:["com.ibm."] @AT@ 1730 @LENGTH@ 21
------------UPD StringLiteral@@"com.ibm" @TO@ "com.ibm." @AT@ 1741 @LENGTH@ 9


INS MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @TO@ TypeDeclaration@@JsonPatchHandler,  @AT@ 5039 @LENGTH@ 352
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5039 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5047 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5054 @LENGTH@ 7
---INS SimpleName@@MethodName:isCollectionElementReference @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5062 @LENGTH@ 28
---INS SingleVariableDeclaration@@JsonPointer pointer @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5091 @LENGTH@ 19
------INS SimpleType@@JsonPointer @TO@ SingleVariableDeclaration@@JsonPointer pointer @AT@ 5091 @LENGTH@ 11
------INS SimpleName@@pointer @TO@ SingleVariableDeclaration@@JsonPointer pointer @AT@ 5103 @LENGTH@ 7
---INS VariableDeclarationStatement@@String[] segments=pointer.toString().split("/"); @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5117 @LENGTH@ 50
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] segments=pointer.toString().split("/"); @AT@ 5117 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5117 @LENGTH@ 6
------INS VariableDeclarationFragment@@segments=pointer.toString().split("/") @TO@ VariableDeclarationStatement@@String[] segments=pointer.toString().split("/"); @AT@ 5126 @LENGTH@ 40
---------INS SimpleName@@segments @TO@ VariableDeclarationFragment@@segments=pointer.toString().split("/") @AT@ 5126 @LENGTH@ 8
---------INS MethodInvocation@@pointer.toString().split("/") @TO@ VariableDeclarationFragment@@segments=pointer.toString().split("/") @AT@ 5137 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@pointer.toString().split("/") @AT@ 5137 @LENGTH@ 18
------------INS SimpleName@@Name:pointer @TO@ MethodInvocation@@pointer.toString().split("/") @AT@ 5137 @LENGTH@ 7
------------INS SimpleName@@MethodName:split:["/"] @TO@ MethodInvocation@@pointer.toString().split("/") @AT@ 5156 @LENGTH@ 10
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:split:["/"] @AT@ 5162 @LENGTH@ 3
---INS IfStatement@@if (segments.length == 0) {  return false;} @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5171 @LENGTH@ 48
------INS InfixExpression@@segments.length == 0 @TO@ IfStatement@@if (segments.length == 0) {  return false;} @AT@ 5175 @LENGTH@ 20
---------INS QualifiedName@@segments.length @TO@ InfixExpression@@segments.length == 0 @AT@ 5175 @LENGTH@ 15
------------INS SimpleName@@segments @TO@ QualifiedName@@segments.length @AT@ 5175 @LENGTH@ 8
------------INS SimpleName@@length @TO@ QualifiedName@@segments.length @AT@ 5184 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@segments.length == 0 @AT@ 5190 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@segments.length == 0 @AT@ 5194 @LENGTH@ 1
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (segments.length == 0) {  return false;} @AT@ 5197 @LENGTH@ 22
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 5202 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5209 @LENGTH@ 5
---INS VariableDeclarationStatement@@String trailing=segments[segments.length - 1]; @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5223 @LENGTH@ 48
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String trailing=segments[segments.length - 1]; @AT@ 5223 @LENGTH@ 6
------INS VariableDeclarationFragment@@trailing=segments[segments.length - 1] @TO@ VariableDeclarationStatement@@String trailing=segments[segments.length - 1]; @AT@ 5230 @LENGTH@ 40
---------INS SimpleName@@trailing @TO@ VariableDeclarationFragment@@trailing=segments[segments.length - 1] @AT@ 5230 @LENGTH@ 8
---------INS ArrayAccess@@segments[segments.length - 1] @TO@ VariableDeclarationFragment@@trailing=segments[segments.length - 1] @AT@ 5241 @LENGTH@ 29
------------INS SimpleName@@segments @TO@ ArrayAccess@@segments[segments.length - 1] @AT@ 5241 @LENGTH@ 8
------------INS InfixExpression@@segments.length - 1 @TO@ ArrayAccess@@segments[segments.length - 1] @AT@ 5250 @LENGTH@ 19
---------------INS QualifiedName@@segments.length @TO@ InfixExpression@@segments.length - 1 @AT@ 5250 @LENGTH@ 15
------------------INS SimpleName@@segments @TO@ QualifiedName@@segments.length @AT@ 5250 @LENGTH@ 8
------------------INS SimpleName@@length @TO@ QualifiedName@@segments.length @AT@ 5259 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@segments.length - 1 @AT@ 5265 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@segments.length - 1 @AT@ 5268 @LENGTH@ 1
---INS TryStatement@@try {  Integer.parseInt(trailing);  return true;} catch (NumberFormatException o_O) {  return false;} @TO@ MethodDeclaration@@private, static, boolean, MethodName:isCollectionElementReference, JsonPointer pointer,  @AT@ 5275 @LENGTH@ 113
------INS ExpressionStatement@@MethodInvocation:Integer.parseInt(trailing) @TO@ TryStatement@@try {  Integer.parseInt(trailing);  return true;} catch (NumberFormatException o_O) {  return false;} @AT@ 5284 @LENGTH@ 27
---------INS MethodInvocation@@Integer.parseInt(trailing) @TO@ ExpressionStatement@@MethodInvocation:Integer.parseInt(trailing) @AT@ 5284 @LENGTH@ 26
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(trailing) @AT@ 5284 @LENGTH@ 7
------------INS SimpleName@@MethodName:parseInt:[trailing] @TO@ MethodInvocation@@Integer.parseInt(trailing) @AT@ 5292 @LENGTH@ 18
---------------INS SimpleName@@trailing @TO@ SimpleName@@MethodName:parseInt:[trailing] @AT@ 5301 @LENGTH@ 8
------INS ReturnStatement@@BooleanLiteral:true @TO@ TryStatement@@try {  Integer.parseInt(trailing);  return true;} catch (NumberFormatException o_O) {  return false;} @AT@ 5315 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 5322 @LENGTH@ 4
------INS CatchClause@@catch (NumberFormatException o_O) {  return false;} @TO@ TryStatement@@try {  Integer.parseInt(trailing);  return true;} catch (NumberFormatException o_O) {  return false;} @AT@ 5332 @LENGTH@ 56
---------INS SingleVariableDeclaration@@NumberFormatException o_O @TO@ CatchClause@@catch (NumberFormatException o_O) {  return false;} @AT@ 5339 @LENGTH@ 25
------------INS SimpleType@@NumberFormatException @TO@ SingleVariableDeclaration@@NumberFormatException o_O @AT@ 5339 @LENGTH@ 21
------------INS SimpleName@@o_O @TO@ SingleVariableDeclaration@@NumberFormatException o_O @AT@ 5361 @LENGTH@ 3
---------INS ReturnStatement@@BooleanLiteral:false @TO@ CatchClause@@catch (NumberFormatException o_O) {  return false;} @AT@ 5371 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5378 @LENGTH@ 5


UPD MethodDeclaration@@public, static, Country, MethodName:toCountry, String iso,  @TO@ public, Country, MethodName:toCountry, String iso,  @AT@ 996 @LENGTH@ 178
---DEL Modifier@@static @AT@ 1003 @LENGTH@ 6


UPD IfStatement@@if (input.equalsIgnoreCase("true")) {  return Boolean.TRUE;} else if (input.equalsIgnoreCase("false")) {  return false;} else {  return null;} @TO@ if ("true".equalsIgnoreCase(input.toString())) {  return Boolean.TRUE;} else if ("false".equalsIgnoreCase(input.toString())) {  return false;} else {  return null;} @AT@ 1970 @LENGTH@ 172
---UPD MethodInvocation@@input.equalsIgnoreCase("true") @TO@ "true".equalsIgnoreCase(input.toString()) @AT@ 1974 @LENGTH@ 30
------INS StringLiteral@@"true" @TO@ MethodInvocation@@input.equalsIgnoreCase("true") @AT@ 1970 @LENGTH@ 6
------INS SimpleName@@MethodName:equalsIgnoreCase:[input.toString()] @TO@ MethodInvocation@@input.equalsIgnoreCase("true") @AT@ 1977 @LENGTH@ 34
---------INS MethodInvocation@@input.toString() @TO@ SimpleName@@MethodName:equalsIgnoreCase:[input.toString()] @AT@ 1994 @LENGTH@ 16
------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.toString() @AT@ 1974 @LENGTH@ 5
------------MOV SimpleName@@MethodName:equalsIgnoreCase:["true"] @TO@ MethodInvocation@@input.toString() @AT@ 1980 @LENGTH@ 24
---------------DEL StringLiteral@@"true" @AT@ 1997 @LENGTH@ 6
------UPD SimpleName@@MethodName:equalsIgnoreCase:["true"] @TO@ MethodName:toString:[] @AT@ 1980 @LENGTH@ 24
---UPD Block@@ElseBody:if (input.equalsIgnoreCase("false")) {  return false;} else {  return null;} @TO@ ElseBody:if ("false".equalsIgnoreCase(input.toString())) {  return false;} else {  return null;} @AT@ 2046 @LENGTH@ 96
------UPD IfStatement@@if (input.equalsIgnoreCase("false")) {  return false;} else {  return null;} @TO@ if ("false".equalsIgnoreCase(input.toString())) {  return false;} else {  return null;} @AT@ 2046 @LENGTH@ 96
---------UPD MethodInvocation@@input.equalsIgnoreCase("false") @TO@ "false".equalsIgnoreCase(input.toString()) @AT@ 2050 @LENGTH@ 31
------------UPD SimpleName@@MethodName:equalsIgnoreCase:["false"] @TO@ MethodName:toString:[] @AT@ 2056 @LENGTH@ 25
------------INS StringLiteral@@"false" @TO@ MethodInvocation@@input.equalsIgnoreCase("false") @AT@ 2057 @LENGTH@ 7
------------INS SimpleName@@MethodName:equalsIgnoreCase:[input.toString()] @TO@ MethodInvocation@@input.equalsIgnoreCase("false") @AT@ 2065 @LENGTH@ 34
---------------INS MethodInvocation@@input.toString() @TO@ SimpleName@@MethodName:equalsIgnoreCase:[input.toString()] @AT@ 2082 @LENGTH@ 16
------------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.toString() @AT@ 2050 @LENGTH@ 5
------------------MOV SimpleName@@Name:input @TO@ MethodInvocation@@input.toString() @AT@ 2050 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:equalsIgnoreCase:["false"] @TO@ MethodInvocation@@input.toString() @AT@ 2056 @LENGTH@ 25
---------------------DEL StringLiteral@@"false" @AT@ 2073 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:equalsIgnoreCase:["false"] @TO@ MethodInvocation@@input.toString() @AT@ 2056 @LENGTH@ 25
---------------------DEL StringLiteral@@"false" @AT@ 2073 @LENGTH@ 7


INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testBeanstalkException, Exception,  @AT@ 2551 @LENGTH@ 47
---INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 2555 @LENGTH@ 10
------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 2555 @LENGTH@ 1
------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 2556 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 2567 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2581 @LENGTH@ 7


UPD CatchClause@@catch (IllegalArgumentException e) {  assertTrue("Actual message: " + e.getMessage(),e.getMessage().endsWith("Unknown parameters=[{doesNotExist=2000}]"));} @TO@ catch (Exception e) {  assertTrue("Actual message: " + e.getMessage(),e.getMessage().endsWith("Unknown parameters=[{doesNotExist=2000}]"));} @AT@ 2242 @LENGTH@ 176
---UPD SingleVariableDeclaration@@IllegalArgumentException e @TO@ Exception e @AT@ 2249 @LENGTH@ 26
------UPD SimpleType@@IllegalArgumentException @TO@ Exception @AT@ 2249 @LENGTH@ 24


DEL IfStatement@@if (delegate == null) {  throw HostControllerLogger.ROOT_LOGGER.nullVar("delegate");} @AT@ 1805 @LENGTH@ 105
---DEL InfixExpression@@delegate == null @AT@ 1809 @LENGTH@ 16
---DEL Block@@ThenBody:{  throw HostControllerLogger.ROOT_LOGGER.nullVar("delegate");} @AT@ 1827 @LENGTH@ 83
------DEL ThrowStatement@@MethodInvocation:HostControllerLogger.ROOT_LOGGER.nullVar("delegate") @AT@ 1841 @LENGTH@ 59
---------DEL MethodInvocation@@HostControllerLogger.ROOT_LOGGER.nullVar("delegate") @AT@ 1847 @LENGTH@ 52
------------DEL QualifiedName@@Name:HostControllerLogger.ROOT_LOGGER @AT@ 1847 @LENGTH@ 32
------------DEL SimpleName@@MethodName:nullVar:["delegate"] @AT@ 1880 @LENGTH@ 19
---------------DEL StringLiteral@@"delegate" @AT@ 1888 @LENGTH@ 10


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/cheese"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/cheese"] @AT@ 1173 @LENGTH@ 71
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/cheese" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/cheese" @AT@ 1188 @LENGTH@ 55
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/cheese" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/cheese" @AT@ 1194 @LENGTH@ 49
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1194 @LENGTH@ 25


MOV MethodDeclaration@@boolean, MethodName:isManagedResource, PersistentProperty<?> property,  @TO@ TypeDeclaration@@[public]ResourceMetadata, [CollectionResourceMapping] @AT@ 1260 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:assertTrue(ex.getMessage().indexOf("unskippable chunk") > -1) @TO@ MethodInvocation:assertTrue(ex.getMessage().contains("unskippable chunk")) @AT@ 6036 @LENGTH@ 62
---UPD MethodInvocation@@assertTrue(ex.getMessage().indexOf("unskippable chunk") > -1) @TO@ assertTrue(ex.getMessage().contains("unskippable chunk")) @AT@ 6036 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertTrue:[ex.getMessage().indexOf("unskippable chunk") > -1] @TO@ MethodName:assertTrue:[ex.getMessage().contains("unskippable chunk")] @AT@ 6036 @LENGTH@ 61
---------DEL InfixExpression@@ex.getMessage().indexOf("unskippable chunk") > -1 @AT@ 6047 @LENGTH@ 49
------------DEL MethodInvocation@@ex.getMessage().indexOf("unskippable chunk") @AT@ 6047 @LENGTH@ 44
------------DEL Operator@@> @AT@ 6091 @LENGTH@ 1
------------DEL PrefixExpression@@-1 @AT@ 6094 @LENGTH@ 2
---------------DEL Operator@@- @AT@ 6094 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 6095 @LENGTH@ 1
---------INS MethodInvocation@@ex.getMessage().contains("unskippable chunk") @TO@ SimpleName@@MethodName:assertTrue:[ex.getMessage().indexOf("unskippable chunk") > -1] @AT@ 6047 @LENGTH@ 45
------------MOV MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage().contains("unskippable chunk") @AT@ 6047 @LENGTH@ 15
------------MOV SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage().contains("unskippable chunk") @AT@ 6047 @LENGTH@ 2
------------MOV SimpleName@@MethodName:indexOf:["unskippable chunk"] @TO@ MethodInvocation@@ex.getMessage().contains("unskippable chunk") @AT@ 6063 @LENGTH@ 28


UPD VariableDeclarationStatement@@ResourceMetadata mapping=mappings.getMappingFor(domainType); @TO@ ResourceMetadata mapping=mappings.getMetadataFor(domainType); @AT@ 3765 @LENGTH@ 62
---UPD VariableDeclarationFragment@@mapping=mappings.getMappingFor(domainType) @TO@ mapping=mappings.getMetadataFor(domainType) @AT@ 3782 @LENGTH@ 44
------UPD MethodInvocation@@mappings.getMappingFor(domainType) @TO@ mappings.getMetadataFor(domainType) @AT@ 3792 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getMappingFor:[domainType] @TO@ MethodName:getMetadataFor:[domainType] @AT@ 3801 @LENGTH@ 25


INS IfStatement@@if (server == null) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isRegistered, ObjectName name,  @AT@ 10000 @LENGTH@ 57
---INS InfixExpression@@server == null @TO@ IfStatement@@if (server == null) {  return false;} @AT@ 10004 @LENGTH@ 14
------INS SimpleName@@server @TO@ InfixExpression@@server == null @AT@ 10004 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@server == null @AT@ 10010 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@server == null @AT@ 10014 @LENGTH@ 4
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (server == null) {  return false;} @AT@ 10020 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 10034 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 10041 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new StepExecutionInfoResource(stepExecution,TimeZone.getTimeZone("CDT")) @TO@ ClassInstanceCreation:new StepExecutionInfoResource(stepExecution,TimeZone.getTimeZone("America/Chicago")) @AT@ 5577 @LENGTH@ 81
---UPD ClassInstanceCreation@@StepExecutionInfoResource[stepExecution, TimeZone.getTimeZone("CDT")] @TO@ StepExecutionInfoResource[stepExecution, TimeZone.getTimeZone("America/Chicago")] @AT@ 5584 @LENGTH@ 73
------UPD MethodInvocation@@TimeZone.getTimeZone("CDT") @TO@ TimeZone.getTimeZone("America/Chicago") @AT@ 5629 @LENGTH@ 27
---------UPD SimpleName@@MethodName:getTimeZone:["CDT"] @TO@ MethodName:getTimeZone:["America/Chicago"] @AT@ 5638 @LENGTH@ 18
------------UPD StringLiteral@@"CDT" @TO@ "America/Chicago" @AT@ 5650 @LENGTH@ 5


UPD WhileStatement@@while (pos < offset && hasNext()) {  next();  pos++;} @TO@ while (pos < offset && hasNext()) {  next();} @AT@ 2365 @LENGTH@ 84
---UPD Block@@WhileBody:{  next();  pos++;} @TO@ WhileBody:{  next();} @AT@ 2399 @LENGTH@ 50
------DEL ExpressionStatement@@PostfixExpression:pos++ @AT@ 2433 @LENGTH@ 6
---------DEL PostfixExpression@@pos++ @AT@ 2433 @LENGTH@ 5
------------DEL SimpleName@@pos @AT@ 2433 @LENGTH@ 3
------------DEL Operator@@++ @AT@ 2437 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:index=recordReader.readRowIndex(1) @TO@ Assignment:index=recordReader.readRowIndex(1,null) @AT@ 29829 @LENGTH@ 37
---UPD Assignment@@index=recordReader.readRowIndex(1) @TO@ index=recordReader.readRowIndex(1,null) @AT@ 29829 @LENGTH@ 36
------UPD MethodInvocation@@recordReader.readRowIndex(1) @TO@ recordReader.readRowIndex(1,null) @AT@ 29837 @LENGTH@ 28
---------UPD SimpleName@@MethodName:readRowIndex:[1] @TO@ MethodName:readRowIndex:[1, null] @AT@ 29850 @LENGTH@ 15
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:readRowIndex:[1] @AT@ 29872 @LENGTH@ 4


UPD Block@@ElseBody:{  if (useValueAsElementName) {    writeStartElement(writer,namespaceURI,resourceDefinition.getPathElement().getValue());  } else   if (isSubsystem) {    startSubsystemElement(writer,namespaceURI,children.isEmpty());  } else {    writeStartElement(writer,namespaceURI,xmlElementName);  }  persistAttributes(writer,model,true);  persistChildren(writer,model);  if (!isSubsystem || !children.isEmpty()) {    writer.writeEndElement();  }} @TO@ ElseBody:{  final boolean empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty();  if (useValueAsElementName) {    writeStartElement(writer,namespaceURI,resourceDefinition.getPathElement().getValue());  } else   if (isSubsystem) {    startSubsystemElement(writer,namespaceURI,empty);  } else {    writeStartElement(writer,namespaceURI,xmlElementName);  }  persistAttributes(writer,model,true);  persistChildren(writer,model);  if (!isSubsystem || !empty) {    writer.writeEndElement();  }} @AT@ 14647 @LENGTH@ 681
---UPD IfStatement@@if (useValueAsElementName) {  writeStartElement(writer,namespaceURI,resourceDefinition.getPathElement().getValue());} else if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,children.isEmpty());} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @TO@ if (useValueAsElementName) {  writeStartElement(writer,namespaceURI,resourceDefinition.getPathElement().getValue());} else if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,empty);} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @AT@ 14661 @LENGTH@ 360
------UPD Block@@ElseBody:if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,children.isEmpty());} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @TO@ ElseBody:if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,empty);} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @AT@ 14814 @LENGTH@ 207
---------UPD IfStatement@@if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,children.isEmpty());} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @TO@ if (isSubsystem) {  startSubsystemElement(writer,namespaceURI,empty);} else {  writeStartElement(writer,namespaceURI,xmlElementName);} @AT@ 14814 @LENGTH@ 207
------------UPD Block@@ThenBody:{  startSubsystemElement(writer,namespaceURI,children.isEmpty());} @TO@ ThenBody:{  startSubsystemElement(writer,namespaceURI,empty);} @AT@ 14831 @LENGTH@ 96
---------------UPD ExpressionStatement@@MethodInvocation:startSubsystemElement(writer,namespaceURI,children.isEmpty()) @TO@ MethodInvocation:startSubsystemElement(writer,namespaceURI,empty) @AT@ 14849 @LENGTH@ 64
------------------UPD MethodInvocation@@startSubsystemElement(writer,namespaceURI,children.isEmpty()) @TO@ startSubsystemElement(writer,namespaceURI,empty) @AT@ 14849 @LENGTH@ 63
---------------------UPD SimpleName@@MethodName:startSubsystemElement:[writer, namespaceURI, children.isEmpty()] @TO@ MethodName:startSubsystemElement:[writer, namespaceURI, empty] @AT@ 14849 @LENGTH@ 63
------------------------DEL MethodInvocation@@children.isEmpty() @AT@ 14893 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:children @AT@ 14893 @LENGTH@ 8
---------------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 14902 @LENGTH@ 9
------------------------INS SimpleName@@empty @TO@ SimpleName@@MethodName:startSubsystemElement:[writer, namespaceURI, children.isEmpty()] @AT@ 15118 @LENGTH@ 5
---------------------UPD SimpleName@@MethodName:startSubsystemElement:[writer, namespaceURI, children.isEmpty()] @TO@ MethodName:startSubsystemElement:[writer, namespaceURI, empty] @AT@ 14849 @LENGTH@ 63
------------------------DEL MethodInvocation@@children.isEmpty() @AT@ 14893 @LENGTH@ 18
---------------------------DEL SimpleName@@Name:children @AT@ 14893 @LENGTH@ 8
---------------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 14902 @LENGTH@ 9
------------------------INS SimpleName@@empty @TO@ SimpleName@@MethodName:startSubsystemElement:[writer, namespaceURI, children.isEmpty()] @AT@ 15118 @LENGTH@ 5
---INS VariableDeclarationStatement@@final boolean empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty(); @TO@ Block@@ElseBody:{  if (useValueAsElementName) {    writeStartElement(writer,namespaceURI,resourceDefinition.getPathElement().getValue());  } else   if (isSubsystem) {    startSubsystemElement(writer,namespaceURI,children.isEmpty());  } else {    writeStartElement(writer,namespaceURI,xmlElementName);  }  persistAttributes(writer,model,true);  persistChildren(writer,model);  if (!isSubsystem || !children.isEmpty()) {    writer.writeEndElement();  }} @AT@ 14771 @LENGTH@ 102
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final boolean empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty(); @AT@ 14771 @LENGTH@ 5
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@final boolean empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty(); @AT@ 14777 @LENGTH@ 7
------INS VariableDeclarationFragment@@empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @TO@ VariableDeclarationStatement@@final boolean empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty(); @AT@ 14785 @LENGTH@ 87
---------INS SimpleName@@empty @TO@ VariableDeclarationFragment@@empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14785 @LENGTH@ 5
---------INS InfixExpression@@attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @TO@ VariableDeclarationFragment@@empty=attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14793 @LENGTH@ 79
------------INS MethodInvocation@@attributeGroups.isEmpty() @TO@ InfixExpression@@attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14793 @LENGTH@ 25
---------------INS SimpleName@@Name:attributeGroups @TO@ MethodInvocation@@attributeGroups.isEmpty() @AT@ 14793 @LENGTH@ 15
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@attributeGroups.isEmpty() @AT@ 14809 @LENGTH@ 9
------------INS Operator@@&& @TO@ InfixExpression@@attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14818 @LENGTH@ 2
------------INS MethodInvocation@@propertyAttributes.isEmpty() @TO@ InfixExpression@@attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14822 @LENGTH@ 28
---------------INS SimpleName@@Name:propertyAttributes @TO@ MethodInvocation@@propertyAttributes.isEmpty() @AT@ 14822 @LENGTH@ 18
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@propertyAttributes.isEmpty() @AT@ 14841 @LENGTH@ 9
------------INS MethodInvocation@@children.isEmpty() @TO@ InfixExpression@@attributeGroups.isEmpty() && propertyAttributes.isEmpty() && children.isEmpty() @AT@ 14854 @LENGTH@ 18
---------------INS SimpleName@@Name:children @TO@ MethodInvocation@@children.isEmpty() @AT@ 14854 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@children.isEmpty() @AT@ 14863 @LENGTH@ 9
---UPD IfStatement@@if (!isSubsystem || !children.isEmpty()) {  writer.writeEndElement();} @TO@ if (!isSubsystem || !empty) {  writer.writeEndElement();} @AT@ 15220 @LENGTH@ 98
------UPD InfixExpression@@!isSubsystem || !children.isEmpty() @TO@ !isSubsystem || !empty @AT@ 15224 @LENGTH@ 35
---------UPD PrefixExpression@@!children.isEmpty() @TO@ !empty @AT@ 15240 @LENGTH@ 19
------------DEL MethodInvocation@@children.isEmpty() @AT@ 15241 @LENGTH@ 18
---------------DEL SimpleName@@Name:children @AT@ 15241 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 15250 @LENGTH@ 9
------------INS SimpleName@@empty @TO@ PrefixExpression@@!children.isEmpty() @AT@ 15453 @LENGTH@ 5


UPD EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @TO@ for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\\\\\"",QUOT);  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 1949 @LENGTH@ 1643
---INS ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @TO@ EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 2466 @LENGTH@ 39
------INS Assignment@@line=line.replaceAll("\\\\\"",QUOT) @TO@ ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @AT@ 2466 @LENGTH@ 38
---------INS SimpleName@@line @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 2466 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 2470 @LENGTH@ 1
---------INS MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 2473 @LENGTH@ 31
------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @AT@ 2473 @LENGTH@ 4
------------INS SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @TO@ MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @AT@ 2478 @LENGTH@ 26
---------------INS StringLiteral@@"\\\\\"" @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 2489 @LENGTH@ 8
---------------INS SimpleName@@QUOT @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 2499 @LENGTH@ 4
---UPD WhileStatement@@while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();    }    row.put(key,value);    key=null;  }} @TO@ while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @AT@ 2761 @LENGTH@ 740
------UPD Block@@WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();    }    row.put(key,value);    key=null;  }} @TO@ WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @AT@ 2784 @LENGTH@ 717
---------UPD IfStatement@@if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();  }  row.put(key,value);  key=null;} @TO@ if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @AT@ 2802 @LENGTH@ 685
------------UPD Block@@ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();  }  row.put(key,value);  key=null;} @TO@ ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @AT@ 2888 @LENGTH@ 599
---------------UPD IfStatement@@if (value != null) {  value=value.trim();} @TO@ if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 3279 @LENGTH@ 88
------------------UPD Block@@ThenBody:{  value=value.trim();} @TO@ ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 3298 @LENGTH@ 69
---------------------INS ExpressionStatement@@Assignment:value=value.replaceAll(QUOT,"\"") @TO@ Block@@ThenBody:{  value=value.trim();} @AT@ 3574 @LENGTH@ 37
------------------------INS Assignment@@value=value.replaceAll(QUOT,"\"") @TO@ ExpressionStatement@@Assignment:value=value.replaceAll(QUOT,"\"") @AT@ 3574 @LENGTH@ 36
---------------------------INS SimpleName@@value @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 3574 @LENGTH@ 5
---------------------------INS Operator@@= @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 3579 @LENGTH@ 1
---------------------------INS MethodInvocation@@value.replaceAll(QUOT,"\"") @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 3582 @LENGTH@ 28
------------------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.replaceAll(QUOT,"\"") @AT@ 3582 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:replaceAll:[QUOT, "\""] @TO@ MethodInvocation@@value.replaceAll(QUOT,"\"") @AT@ 3588 @LENGTH@ 22
---------------------------------INS SimpleName@@QUOT @TO@ SimpleName@@MethodName:replaceAll:[QUOT, "\""] @AT@ 3599 @LENGTH@ 4
---------------------------------INS StringLiteral@@"\"" @TO@ SimpleName@@MethodName:replaceAll:[QUOT, "\""] @AT@ 3605 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:assertTrue(ts2 > ts) @AT@ 3046 @LENGTH@ 21
---DEL MethodInvocation@@assertTrue(ts2 > ts) @AT@ 3046 @LENGTH@ 20
------DEL SimpleName@@MethodName:assertTrue:[ts2 > ts] @AT@ 3046 @LENGTH@ 20
---------DEL InfixExpression@@ts2 > ts @AT@ 3057 @LENGTH@ 8
------------DEL SimpleName@@ts2 @AT@ 3057 @LENGTH@ 3
------------DEL Operator@@> @AT@ 3060 @LENGTH@ 1
------------DEL SimpleName@@ts @AT@ 3063 @LENGTH@ 2


INS MethodDeclaration@@public, Boolean, MethodName:getSkipBindingOnErrorCode,  @TO@ TypeDeclaration@@[@XmlRootElement(name="rest"), @XmlAccessorType(XmlAccessType.FIELD), public]RestDefinition, OptionalIdentifiedDefinition<RestDefinition> @AT@ 2929 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, Boolean, MethodName:getSkipBindingOnErrorCode,  @AT@ 2929 @LENGTH@ 6
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@public, Boolean, MethodName:getSkipBindingOnErrorCode,  @AT@ 2936 @LENGTH@ 7
---INS SimpleName@@MethodName:getSkipBindingOnErrorCode @TO@ MethodDeclaration@@public, Boolean, MethodName:getSkipBindingOnErrorCode,  @AT@ 2944 @LENGTH@ 25
---INS ReturnStatement@@SimpleName:skipBindingOnErrorCode @TO@ MethodDeclaration@@public, Boolean, MethodName:getSkipBindingOnErrorCode,  @AT@ 2982 @LENGTH@ 30
------INS SimpleName@@skipBindingOnErrorCode @TO@ ReturnStatement@@SimpleName:skipBindingOnErrorCode @AT@ 2989 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollationImpl.EMPTY) @TO@ MethodInvocation:cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollations.EMPTY) @AT@ 1388 @LENGTH@ 74
---UPD MethodInvocation@@cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollationImpl.EMPTY) @TO@ cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollations.EMPTY) @AT@ 1395 @LENGTH@ 66
------UPD SimpleName@@MethodName:traitSetOf:[HiveRelNode.CONVENTION, RelCollationImpl.EMPTY] @TO@ MethodName:traitSetOf:[HiveRelNode.CONVENTION, RelCollations.EMPTY] @AT@ 1403 @LENGTH@ 58
---------UPD QualifiedName@@RelCollationImpl.EMPTY @TO@ RelCollations.EMPTY @AT@ 1438 @LENGTH@ 22
------------UPD SimpleName@@RelCollationImpl @TO@ RelCollations @AT@ 1438 @LENGTH@ 16


UPD CatchClause@@catch (Exception ex) {  return;} @TO@ catch (Exception ex) {  log.warn("Cannot access property '" + key + "'! Ignoring.",ex);} @AT@ 11374 @LENGTH@ 60
---DEL ReturnStatement@@ @AT@ 11417 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:log.warn("Cannot access property '" + key + "'! Ignoring.",ex) @TO@ CatchClause@@catch (Exception ex) {  return;} @AT@ 11585 @LENGTH@ 64
------INS MethodInvocation@@log.warn("Cannot access property '" + key + "'! Ignoring.",ex) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Cannot access property '" + key + "'! Ignoring.",ex) @AT@ 11585 @LENGTH@ 63
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Cannot access property '" + key + "'! Ignoring.",ex) @AT@ 11585 @LENGTH@ 3
---------INS SimpleName@@MethodName:warn:["Cannot access property '" + key + "'! Ignoring.", ex] @TO@ MethodInvocation@@log.warn("Cannot access property '" + key + "'! Ignoring.",ex) @AT@ 11589 @LENGTH@ 59
------------INS InfixExpression@@"Cannot access property '" + key + "'! Ignoring." @TO@ SimpleName@@MethodName:warn:["Cannot access property '" + key + "'! Ignoring.", ex] @AT@ 11594 @LENGTH@ 49
---------------INS StringLiteral@@"Cannot access property '" @TO@ InfixExpression@@"Cannot access property '" + key + "'! Ignoring." @AT@ 11594 @LENGTH@ 26
---------------INS Operator@@+ @TO@ InfixExpression@@"Cannot access property '" + key + "'! Ignoring." @AT@ 11620 @LENGTH@ 1
---------------INS SimpleName@@key @TO@ InfixExpression@@"Cannot access property '" + key + "'! Ignoring." @AT@ 11623 @LENGTH@ 3
---------------INS StringLiteral@@"'! Ignoring." @TO@ InfixExpression@@"Cannot access property '" + key + "'! Ignoring." @AT@ 11629 @LENGTH@ 14
------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:warn:["Cannot access property '" + key + "'! Ignoring.", ex] @AT@ 11645 @LENGTH@ 2


UPD MethodDeclaration@@private, boolean, MethodName:shoudUseReflectionEntityInstantiator, PersistentEntity<?,?> entity,  @TO@ private, boolean, MethodName:shouldUseReflectionEntityInstantiator, PersistentEntity<?,?> entity,  @AT@ 4242 @LENGTH@ 619
---UPD SimpleName@@MethodName:shoudUseReflectionEntityInstantiator @TO@ MethodName:shouldUseReflectionEntityInstantiator @AT@ 4258 @LENGTH@ 36


DEL ForStatement@@for (int i=0; i < length; ++i) {  byte b=buffer[i];  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 2384 @LENGTH@ 278
---DEL VariableDeclarationExpression@@int i=0 @AT@ 2389 @LENGTH@ 9
------DEL PrimitiveType@@int @AT@ 2389 @LENGTH@ 3
------DEL VariableDeclarationFragment@@i=0 @AT@ 2393 @LENGTH@ 5
---------DEL SimpleName@@i @AT@ 2393 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 2397 @LENGTH@ 1
---DEL InfixExpression@@i < length @AT@ 2400 @LENGTH@ 10
------DEL SimpleName@@i @AT@ 2400 @LENGTH@ 1
------DEL Operator@@< @AT@ 2401 @LENGTH@ 1
------DEL SimpleName@@length @AT@ 2404 @LENGTH@ 6
---DEL PrefixExpression@@++i @AT@ 2412 @LENGTH@ 3
------DEL Operator@@++ @AT@ 2412 @LENGTH@ 2
------DEL SimpleName@@i @AT@ 2414 @LENGTH@ 1
---DEL VariableDeclarationStatement@@byte b=buffer[i]; @AT@ 2439 @LENGTH@ 19
------DEL PrimitiveType@@byte @AT@ 2439 @LENGTH@ 4
------DEL VariableDeclarationFragment@@b=buffer[i] @AT@ 2444 @LENGTH@ 13
---------DEL SimpleName@@b @AT@ 2444 @LENGTH@ 1
---------DEL ArrayAccess@@buffer[i] @AT@ 2448 @LENGTH@ 9
------------DEL SimpleName@@buffer @AT@ 2448 @LENGTH@ 6
------------DEL SimpleName@@i @AT@ 2455 @LENGTH@ 1


UPD FieldDeclaration@@private, String, [url="http://0.0.0.0:" + getPort() + "/cheese"] @TO@ private, String, [url="http://127.0.0.1:" + getPort() + "/cheese"] @AT@ 1099 @LENGTH@ 63
---UPD VariableDeclarationFragment@@url="http://0.0.0.0:" + getPort() + "/cheese" @TO@ url="http://127.0.0.1:" + getPort() + "/cheese" @AT@ 1114 @LENGTH@ 47
------UPD InfixExpression@@"http://0.0.0.0:" + getPort() + "/cheese" @TO@ "http://127.0.0.1:" + getPort() + "/cheese" @AT@ 1120 @LENGTH@ 41
---------UPD StringLiteral@@"http://0.0.0.0:" @TO@ "http://127.0.0.1:" @AT@ 1120 @LENGTH@ 17


UPD MethodDeclaration@@public, StreamBuffer, MethodName:get, CacheKey key,  @TO@ public, StreamBuffer[], MethodName:get, CacheKey key,  @AT@ 1103 @LENGTH@ 116
---DEL SimpleType@@StreamBuffer @AT@ 1110 @LENGTH@ 12
---INS ArrayType@@StreamBuffer[] @TO@ MethodDeclaration@@public, StreamBuffer, MethodName:get, CacheKey key,  @AT@ 1119 @LENGTH@ 14
------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1119 @LENGTH@ 12


UPD TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @TO@ try {  OutputStream os=buildContext.newFileOutputStream(outFile);  properties.store(os,"Generated by camel-package-maven-plugin");  os.close();  log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 5415 @LENGTH@ 666
---DEL TryStatement@@try (OutputStream os=buildContext.newFileOutputStream(outFile)){  properties.store(os,"Generated by camel-package-maven-plugin");}  @AT@ 5437 @LENGTH@ 169
------DEL VariableDeclarationExpression@@OutputStream os=buildContext.newFileOutputStream(outFile) @AT@ 5441 @LENGTH@ 59
---------DEL SimpleType@@OutputStream @AT@ 5441 @LENGTH@ 12
---INS VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 5467 @LENGTH@ 60
------MOV VariableDeclarationFragment@@os=buildContext.newFileOutputStream(outFile) @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 5454 @LENGTH@ 46
------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 5467 @LENGTH@ 12
---MOV ExpressionStatement@@MethodInvocation:properties.store(os,"Generated by camel-package-maven-plugin") @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 5524 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:os.close() @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "components: " : "component: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelComponent",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 5625 @LENGTH@ 11
------INS MethodInvocation@@os.close() @TO@ ExpressionStatement@@MethodInvocation:os.close() @AT@ 5625 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.close() @AT@ 5625 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@os.close() @AT@ 5628 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:start").routeId("foo").to("log:foo").id("a").delay(100).id("b").to("mock:foo").id("c") @TO@ MethodInvocation:from("direct:start").routeId("foo").to("log:foo").delay(100).to("mock:foo") @AT@ 2434 @LENGTH@ 175
---UPD MethodInvocation@@from("direct:start").routeId("foo").to("log:foo").id("a").delay(100).id("b").to("mock:foo").id("c") @TO@ from("direct:start").routeId("foo").to("log:foo").delay(100).to("mock:foo") @AT@ 2434 @LENGTH@ 174
------DEL MethodInvocation@@MethodName:to:["mock:foo"] @AT@ 2434 @LENGTH@ 166
---------DEL StringLiteral@@"mock:foo" @AT@ 2589 @LENGTH@ 10
------DEL MethodInvocation@@MethodName:id:["b"] @AT@ 2434 @LENGTH@ 126
---------DEL StringLiteral@@"b" @AT@ 2556 @LENGTH@ 3
------DEL MethodInvocation@@MethodName:id:["a"] @AT@ 2434 @LENGTH@ 82
---------DEL StringLiteral@@"a" @AT@ 2512 @LENGTH@ 3
------UPD SimpleName@@MethodName:id:["c"] @TO@ MethodName:to:["mock:foo"] @AT@ 2601 @LENGTH@ 7
---------UPD StringLiteral@@"c" @TO@ "mock:foo" @AT@ 2604 @LENGTH@ 3


INS MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @TO@ TypeDeclaration@@[final]JsonSchemaHelper,  @AT@ 9495 @LENGTH@ 242
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9495 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9503 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9510 @LENGTH@ 6
---INS SimpleName@@MethodName:safeDefaultValue @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9517 @LENGTH@ 16
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9534 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 9534 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 9541 @LENGTH@ 5
---INS IfStatement@@if ("\"".equals(value)) {  return "\\\"";} else if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @TO@ MethodDeclaration@@private, static, String, MethodName:safeDefaultValue, String value,  @AT@ 9558 @LENGTH@ 173
------INS MethodInvocation@@"\"".equals(value) @TO@ IfStatement@@if ("\"".equals(value)) {  return "\\\"";} else if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9562 @LENGTH@ 18
---------INS StringLiteral@@"\"" @TO@ MethodInvocation@@"\"".equals(value) @AT@ 9562 @LENGTH@ 4
---------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"\"".equals(value) @AT@ 9567 @LENGTH@ 13
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 9574 @LENGTH@ 5
------INS Block@@ThenBody:{  return "\\\"";} @TO@ IfStatement@@if ("\"".equals(value)) {  return "\\\"";} else if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9582 @LENGTH@ 38
---------INS ReturnStatement@@StringLiteral:"\\\"" @TO@ Block@@ThenBody:{  return "\\\"";} @AT@ 9596 @LENGTH@ 14
------------INS StringLiteral@@"\\\"" @TO@ ReturnStatement@@StringLiteral:"\\\"" @AT@ 9603 @LENGTH@ 6
------INS Block@@ElseBody:if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @TO@ IfStatement@@if ("\"".equals(value)) {  return "\\\"";} else if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9626 @LENGTH@ 105
---------INS IfStatement@@if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @TO@ Block@@ElseBody:if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9626 @LENGTH@ 105
------------INS MethodInvocation@@"\\".equals(value) @TO@ IfStatement@@if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9630 @LENGTH@ 18
---------------INS StringLiteral@@"\\" @TO@ MethodInvocation@@"\\".equals(value) @AT@ 9630 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"\\".equals(value) @AT@ 9635 @LENGTH@ 13
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 9642 @LENGTH@ 5
------------INS Block@@ThenBody:{  return "\\\\";} @TO@ IfStatement@@if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9650 @LENGTH@ 38
---------------INS ReturnStatement@@StringLiteral:"\\\\" @TO@ Block@@ThenBody:{  return "\\\\";} @AT@ 9664 @LENGTH@ 14
------------------INS StringLiteral@@"\\\\" @TO@ ReturnStatement@@StringLiteral:"\\\\" @AT@ 9671 @LENGTH@ 6
------------INS Block@@ElseBody:{  return value;} @TO@ IfStatement@@if ("\\".equals(value)) {  return "\\\\";} else {  return value;} @AT@ 9694 @LENGTH@ 37
---------------INS ReturnStatement@@SimpleName:value @TO@ Block@@ElseBody:{  return value;} @AT@ 9708 @LENGTH@ 13
------------------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 9715 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @TO@ TypeDeclaration@@[public]LinkedInConsumer, AbstractApiConsumer<LinkedInApiName,LinkedInConfiguration> @AT@ 1658 @LENGTH@ 600
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @AT@ 1658 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @AT@ 1665 @LENGTH@ 4
---INS SimpleName@@MethodName:interceptPropertyNames @TO@ MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @AT@ 1670 @LENGTH@ 22
---INS SingleVariableDeclaration@@Set<String> propertyNames @TO@ MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @AT@ 1693 @LENGTH@ 25
------INS ParameterizedType@@Set<String> @TO@ SingleVariableDeclaration@@Set<String> propertyNames @AT@ 1693 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 1693 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 1697 @LENGTH@ 6
------INS SimpleName@@propertyNames @TO@ SingleVariableDeclaration@@Set<String> propertyNames @AT@ 1705 @LENGTH@ 13
---INS IfStatement@@if (!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION)) {  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @TO@ MethodDeclaration@@public, void, MethodName:interceptPropertyNames, Set<String> propertyNames,  @AT@ 1773 @LENGTH@ 479
------INS PrefixExpression@@!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @TO@ IfStatement@@if (!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION)) {  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @AT@ 1777 @LENGTH@ 55
---------INS Operator@@! @TO@ PrefixExpression@@!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1777 @LENGTH@ 1
---------INS MethodInvocation@@propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @TO@ PrefixExpression@@!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1778 @LENGTH@ 54
------------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1778 @LENGTH@ 13
------------INS SimpleName@@MethodName:contains:[LinkedInEndpoint.FIELDS_OPTION] @TO@ MethodInvocation@@propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1792 @LENGTH@ 40
---------------INS QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @TO@ SimpleName@@MethodName:contains:[LinkedInEndpoint.FIELDS_OPTION] @AT@ 1801 @LENGTH@ 30
------------------INS SimpleName@@LinkedInEndpoint @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 1801 @LENGTH@ 16
------------------INS SimpleName@@FIELDS_OPTION @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 1818 @LENGTH@ 13
------INS Block@@ThenBody:{  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @TO@ IfStatement@@if (!propertyNames.contains(LinkedInEndpoint.FIELDS_OPTION)) {  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @AT@ 1834 @LENGTH@ 418
---------INS VariableDeclarationStatement@@final List<ApiMethod> candidates=endpoint.getCandidates(); @TO@ Block@@ThenBody:{  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @AT@ 1848 @LENGTH@ 60
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<ApiMethod> candidates=endpoint.getCandidates(); @AT@ 1848 @LENGTH@ 5
------------INS ParameterizedType@@List<ApiMethod> @TO@ VariableDeclarationStatement@@final List<ApiMethod> candidates=endpoint.getCandidates(); @AT@ 1854 @LENGTH@ 15
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<ApiMethod> @AT@ 1854 @LENGTH@ 4
---------------INS SimpleType@@ApiMethod @TO@ ParameterizedType@@List<ApiMethod> @AT@ 1859 @LENGTH@ 9
------------INS VariableDeclarationFragment@@candidates=endpoint.getCandidates() @TO@ VariableDeclarationStatement@@final List<ApiMethod> candidates=endpoint.getCandidates(); @AT@ 1870 @LENGTH@ 37
---------------INS SimpleName@@candidates @TO@ VariableDeclarationFragment@@candidates=endpoint.getCandidates() @AT@ 1870 @LENGTH@ 10
---------------INS MethodInvocation@@endpoint.getCandidates() @TO@ VariableDeclarationFragment@@candidates=endpoint.getCandidates() @AT@ 1883 @LENGTH@ 24
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getCandidates() @AT@ 1883 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getCandidates:[] @TO@ MethodInvocation@@endpoint.getCandidates() @AT@ 1892 @LENGTH@ 15
---------INS EnhancedForStatement@@for (ApiMethod method : candidates) {  if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {    return;  }} @TO@ Block@@ThenBody:{  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @AT@ 1922 @LENGTH@ 183
------------INS SingleVariableDeclaration@@ApiMethod method @TO@ EnhancedForStatement@@for (ApiMethod method : candidates) {  if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {    return;  }} @AT@ 1927 @LENGTH@ 16
---------------INS SimpleType@@ApiMethod @TO@ SingleVariableDeclaration@@ApiMethod method @AT@ 1927 @LENGTH@ 9
---------------INS SimpleName@@method @TO@ SingleVariableDeclaration@@ApiMethod method @AT@ 1937 @LENGTH@ 6
------------INS SimpleName@@candidates @TO@ EnhancedForStatement@@for (ApiMethod method : candidates) {  if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {    return;  }} @AT@ 1946 @LENGTH@ 10
------------INS IfStatement@@if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {  return;} @TO@ EnhancedForStatement@@for (ApiMethod method : candidates) {  if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {    return;  }} @AT@ 1976 @LENGTH@ 115
---------------INS PrefixExpression@@!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @TO@ IfStatement@@if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {  return;} @AT@ 1980 @LENGTH@ 62
------------------INS Operator@@! @TO@ PrefixExpression@@!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1980 @LENGTH@ 1
------------------INS MethodInvocation@@method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @TO@ PrefixExpression@@!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1981 @LENGTH@ 61
---------------------INS MethodInvocation@@MethodName:getArgNames:[] @TO@ MethodInvocation@@method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1981 @LENGTH@ 20
---------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 1981 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:contains:[LinkedInEndpoint.FIELDS_OPTION] @TO@ MethodInvocation@@method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION) @AT@ 2002 @LENGTH@ 40
------------------------INS QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @TO@ SimpleName@@MethodName:contains:[LinkedInEndpoint.FIELDS_OPTION] @AT@ 2011 @LENGTH@ 30
---------------------------INS SimpleName@@LinkedInEndpoint @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 2011 @LENGTH@ 16
---------------------------INS SimpleName@@FIELDS_OPTION @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 2028 @LENGTH@ 13
---------------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {  return;} @AT@ 2044 @LENGTH@ 47
------------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2066 @LENGTH@ 7
---------INS ExpressionStatement@@MethodInvocation:propertyNames.add(LinkedInEndpoint.FIELDS_OPTION) @TO@ Block@@ThenBody:{  final List<ApiMethod> candidates=endpoint.getCandidates();  for (  ApiMethod method : candidates) {    if (!method.getArgNames().contains(LinkedInEndpoint.FIELDS_OPTION)) {      return;    }  }  propertyNames.add(LinkedInEndpoint.FIELDS_OPTION);} @AT@ 2192 @LENGTH@ 50
------------INS MethodInvocation@@propertyNames.add(LinkedInEndpoint.FIELDS_OPTION) @TO@ ExpressionStatement@@MethodInvocation:propertyNames.add(LinkedInEndpoint.FIELDS_OPTION) @AT@ 2192 @LENGTH@ 49
---------------INS SimpleName@@Name:propertyNames @TO@ MethodInvocation@@propertyNames.add(LinkedInEndpoint.FIELDS_OPTION) @AT@ 2192 @LENGTH@ 13
---------------INS SimpleName@@MethodName:add:[LinkedInEndpoint.FIELDS_OPTION] @TO@ MethodInvocation@@propertyNames.add(LinkedInEndpoint.FIELDS_OPTION) @AT@ 2206 @LENGTH@ 35
------------------INS QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @TO@ SimpleName@@MethodName:add:[LinkedInEndpoint.FIELDS_OPTION] @AT@ 2210 @LENGTH@ 30
---------------------INS SimpleName@@LinkedInEndpoint @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 2210 @LENGTH@ 16
---------------------INS SimpleName@@FIELDS_OPTION @TO@ QualifiedName@@LinkedInEndpoint.FIELDS_OPTION @AT@ 2227 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=MongoDbRepositoryConfig.class), public]MongoWebTests, CommonWebTests @AT@ 8630 @LENGTH@ 485
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8630 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8637 @LENGTH@ 4
---INS SimpleName@@MethodName:updatesMapPropertyCorrectly @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8642 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8679 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link profilesLink=client.discoverUnique("profiles"); @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8694 @LENGTH@ 54
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link profilesLink=client.discoverUnique("profiles"); @AT@ 8694 @LENGTH@ 4
------INS VariableDeclarationFragment@@profilesLink=client.discoverUnique("profiles") @TO@ VariableDeclarationStatement@@Link profilesLink=client.discoverUnique("profiles"); @AT@ 8699 @LENGTH@ 48
---------INS SimpleName@@profilesLink @TO@ VariableDeclarationFragment@@profilesLink=client.discoverUnique("profiles") @AT@ 8699 @LENGTH@ 12
---------INS MethodInvocation@@client.discoverUnique("profiles") @TO@ VariableDeclarationFragment@@profilesLink=client.discoverUnique("profiles") @AT@ 8714 @LENGTH@ 33
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.discoverUnique("profiles") @AT@ 8714 @LENGTH@ 6
------------INS SimpleName@@MethodName:discoverUnique:["profiles"] @TO@ MethodInvocation@@client.discoverUnique("profiles") @AT@ 8721 @LENGTH@ 26
---------------INS StringLiteral@@"profiles" @TO@ SimpleName@@MethodName:discoverUnique:["profiles"] @AT@ 8736 @LENGTH@ 10
---INS VariableDeclarationStatement@@Link profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)); @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8751 @LENGTH@ 85
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)); @AT@ 8751 @LENGTH@ 4
------INS VariableDeclarationFragment@@profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)) @TO@ VariableDeclarationStatement@@Link profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)); @AT@ 8756 @LENGTH@ 79
---------INS SimpleName@@profileLink @TO@ VariableDeclarationFragment@@profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)) @AT@ 8756 @LENGTH@ 11
---------INS MethodInvocation@@assertHasContentLinkWithRel("self",client.request(profilesLink)) @TO@ VariableDeclarationFragment@@profileLink=assertHasContentLinkWithRel("self",client.request(profilesLink)) @AT@ 8770 @LENGTH@ 65
------------INS SimpleName@@MethodName:assertHasContentLinkWithRel:["self", client.request(profilesLink)] @TO@ MethodInvocation@@assertHasContentLinkWithRel("self",client.request(profilesLink)) @AT@ 8770 @LENGTH@ 65
---------------INS StringLiteral@@"self" @TO@ SimpleName@@MethodName:assertHasContentLinkWithRel:["self", client.request(profilesLink)] @AT@ 8798 @LENGTH@ 6
---------------INS MethodInvocation@@client.request(profilesLink) @TO@ SimpleName@@MethodName:assertHasContentLinkWithRel:["self", client.request(profilesLink)] @AT@ 8806 @LENGTH@ 28
------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.request(profilesLink) @AT@ 8806 @LENGTH@ 6
------------------INS SimpleName@@MethodName:request:[profilesLink] @TO@ MethodInvocation@@client.request(profilesLink) @AT@ 8813 @LENGTH@ 21
---------------------INS SimpleName@@profilesLink @TO@ SimpleName@@MethodName:request:[profilesLink] @AT@ 8821 @LENGTH@ 12
---INS VariableDeclarationStatement@@Profile profile=new Profile(); @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8840 @LENGTH@ 32
------INS SimpleType@@Profile @TO@ VariableDeclarationStatement@@Profile profile=new Profile(); @AT@ 8840 @LENGTH@ 7
------INS VariableDeclarationFragment@@profile=new Profile() @TO@ VariableDeclarationStatement@@Profile profile=new Profile(); @AT@ 8848 @LENGTH@ 23
---------INS SimpleName@@profile @TO@ VariableDeclarationFragment@@profile=new Profile() @AT@ 8848 @LENGTH@ 7
---------INS ClassInstanceCreation@@Profile[] @TO@ VariableDeclarationFragment@@profile=new Profile() @AT@ 8858 @LENGTH@ 13
------------INS New@@new @TO@ ClassInstanceCreation@@Profile[] @AT@ 8858 @LENGTH@ 3
------------INS SimpleType@@Profile @TO@ ClassInstanceCreation@@Profile[] @AT@ 8862 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:profile.setMetadata(Collections.singletonMap("Key","Value")) @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8875 @LENGTH@ 62
------INS MethodInvocation@@profile.setMetadata(Collections.singletonMap("Key","Value")) @TO@ ExpressionStatement@@MethodInvocation:profile.setMetadata(Collections.singletonMap("Key","Value")) @AT@ 8875 @LENGTH@ 61
---------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.setMetadata(Collections.singletonMap("Key","Value")) @AT@ 8875 @LENGTH@ 7
---------INS SimpleName@@MethodName:setMetadata:[Collections.singletonMap("Key","Value")] @TO@ MethodInvocation@@profile.setMetadata(Collections.singletonMap("Key","Value")) @AT@ 8883 @LENGTH@ 53
------------INS MethodInvocation@@Collections.singletonMap("Key","Value") @TO@ SimpleName@@MethodName:setMetadata:[Collections.singletonMap("Key","Value")] @AT@ 8895 @LENGTH@ 40
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("Key","Value") @AT@ 8895 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["Key", "Value"] @TO@ MethodInvocation@@Collections.singletonMap("Key","Value") @AT@ 8907 @LENGTH@ 28
------------------INS StringLiteral@@"Key" @TO@ SimpleName@@MethodName:singletonMap:["Key", "Value"] @AT@ 8920 @LENGTH@ 5
------------------INS StringLiteral@@"Value" @TO@ SimpleName@@MethodName:singletonMap:["Key", "Value"] @AT@ 8927 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:putAndGet(profileLink,mapper.writeValueAsString(profile),MediaType.APPLICATION_JSON) @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 8941 @LENGTH@ 87
------INS MethodInvocation@@putAndGet(profileLink,mapper.writeValueAsString(profile),MediaType.APPLICATION_JSON) @TO@ ExpressionStatement@@MethodInvocation:putAndGet(profileLink,mapper.writeValueAsString(profile),MediaType.APPLICATION_JSON) @AT@ 8941 @LENGTH@ 86
---------INS SimpleName@@MethodName:putAndGet:[profileLink, mapper.writeValueAsString(profile), MediaType.APPLICATION_JSON] @TO@ MethodInvocation@@putAndGet(profileLink,mapper.writeValueAsString(profile),MediaType.APPLICATION_JSON) @AT@ 8941 @LENGTH@ 86
------------INS SimpleName@@profileLink @TO@ SimpleName@@MethodName:putAndGet:[profileLink, mapper.writeValueAsString(profile), MediaType.APPLICATION_JSON] @AT@ 8951 @LENGTH@ 11
------------INS MethodInvocation@@mapper.writeValueAsString(profile) @TO@ SimpleName@@MethodName:putAndGet:[profileLink, mapper.writeValueAsString(profile), MediaType.APPLICATION_JSON] @AT@ 8964 @LENGTH@ 34
---------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsString(profile) @AT@ 8964 @LENGTH@ 6
---------------INS SimpleName@@MethodName:writeValueAsString:[profile] @TO@ MethodInvocation@@mapper.writeValueAsString(profile) @AT@ 8971 @LENGTH@ 27
------------------INS SimpleName@@profile @TO@ SimpleName@@MethodName:writeValueAsString:[profile] @AT@ 8990 @LENGTH@ 7
------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:putAndGet:[profileLink, mapper.writeValueAsString(profile), MediaType.APPLICATION_JSON] @AT@ 9000 @LENGTH@ 26
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 9000 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 9010 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @TO@ MethodDeclaration@@public, void, MethodName:updatesMapPropertyCorrectly, Exception,  @AT@ 9032 @LENGTH@ 80
------INS MethodInvocation@@client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @TO@ ExpressionStatement@@MethodInvocation:client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @AT@ 9032 @LENGTH@ 79
---------INS MethodInvocation@@MethodName:follow:[profileLink] @TO@ MethodInvocation@@client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @AT@ 9032 @LENGTH@ 26
------------INS SimpleName@@profileLink @TO@ MethodInvocation@@MethodName:follow:[profileLink] @AT@ 9046 @LENGTH@ 11
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @AT@ 9032 @LENGTH@ 6
---------INS SimpleName@@MethodName:andExpect:[jsonPath("$.metadata.Key").value("Value")] @TO@ MethodInvocation@@client.follow(profileLink).andExpect(jsonPath("$.metadata.Key").value("Value")) @AT@ 9059 @LENGTH@ 52
------------INS MethodInvocation@@jsonPath("$.metadata.Key").value("Value") @TO@ SimpleName@@MethodName:andExpect:[jsonPath("$.metadata.Key").value("Value")] @AT@ 9069 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:jsonPath:["$.metadata.Key"] @TO@ MethodInvocation@@jsonPath("$.metadata.Key").value("Value") @AT@ 9069 @LENGTH@ 26
------------------INS StringLiteral@@"$.metadata.Key" @TO@ MethodInvocation@@MethodName:jsonPath:["$.metadata.Key"] @AT@ 9078 @LENGTH@ 16
---------------INS SimpleName@@MethodName:value:["Value"] @TO@ MethodInvocation@@jsonPath("$.metadata.Key").value("Value") @AT@ 9096 @LENGTH@ 14
------------------INS StringLiteral@@"Value" @TO@ SimpleName@@MethodName:value:["Value"] @AT@ 9102 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertEquals("[ROLE_USER]",extracted.getAuthorities().toString()) @TO@ MethodDeclaration@@public, void, MethodName:extractAuthentication,  @AT@ 2815 @LENGTH@ 67
---INS MethodInvocation@@assertEquals("[ROLE_USER]",extracted.getAuthorities().toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("[ROLE_USER]",extracted.getAuthorities().toString()) @AT@ 2815 @LENGTH@ 66
------INS SimpleName@@MethodName:assertEquals:["[ROLE_USER]", extracted.getAuthorities().toString()] @TO@ MethodInvocation@@assertEquals("[ROLE_USER]",extracted.getAuthorities().toString()) @AT@ 2815 @LENGTH@ 66
---------INS StringLiteral@@"[ROLE_USER]" @TO@ SimpleName@@MethodName:assertEquals:["[ROLE_USER]", extracted.getAuthorities().toString()] @AT@ 2828 @LENGTH@ 13
---------INS MethodInvocation@@extracted.getAuthorities().toString() @TO@ SimpleName@@MethodName:assertEquals:["[ROLE_USER]", extracted.getAuthorities().toString()] @AT@ 2843 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 2843 @LENGTH@ 26
------------INS SimpleName@@Name:extracted @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 2843 @LENGTH@ 9
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 2870 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 10434 @LENGTH@ 310
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10434 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10441 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldReplaceAllPositionExpressionParametersWithInClause @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10446 @LENGTH@ 56
---INS VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"); @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10512 @LENGTH@ 97
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"); @AT@ 10512 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}") @TO@ VariableDeclarationStatement@@StringQuery query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"); @AT@ 10524 @LENGTH@ 84
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}") @AT@ 10524 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringQuery["select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"] @TO@ VariableDeclarationFragment@@query=new StringQuery("select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}") @AT@ 10532 @LENGTH@ 76
------------INS New@@new @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"] @AT@ 10532 @LENGTH@ 3
------------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"] @AT@ 10536 @LENGTH@ 11
------------INS StringLiteral@@"select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}" @TO@ ClassInstanceCreation@@StringQuery["select a from A a where a.b in ?#{#bs} and a.c in ?#{#cs}"] @AT@ 10548 @LENGTH@ 59
---INS VariableDeclarationStatement@@String queryString=query.getQueryString(); @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10612 @LENGTH@ 44
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String queryString=query.getQueryString(); @AT@ 10612 @LENGTH@ 6
------INS VariableDeclarationFragment@@queryString=query.getQueryString() @TO@ VariableDeclarationStatement@@String queryString=query.getQueryString(); @AT@ 10619 @LENGTH@ 36
---------INS SimpleName@@queryString @TO@ VariableDeclarationFragment@@queryString=query.getQueryString() @AT@ 10619 @LENGTH@ 11
---------INS MethodInvocation@@query.getQueryString() @TO@ VariableDeclarationFragment@@queryString=query.getQueryString() @AT@ 10633 @LENGTH@ 22
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 10633 @LENGTH@ 5
------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 10639 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(queryString,is("select a from A a where a.b in ?1 and a.c in ?2")) @TO@ MethodDeclaration@@public, void, MethodName:shouldReplaceAllPositionExpressionParametersWithInClause,  @AT@ 10662 @LENGTH@ 79
------INS MethodInvocation@@assertThat(queryString,is("select a from A a where a.b in ?1 and a.c in ?2")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(queryString,is("select a from A a where a.b in ?1 and a.c in ?2")) @AT@ 10662 @LENGTH@ 78
---------INS SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in ?1 and a.c in ?2")] @TO@ MethodInvocation@@assertThat(queryString,is("select a from A a where a.b in ?1 and a.c in ?2")) @AT@ 10662 @LENGTH@ 78
------------INS SimpleName@@queryString @TO@ SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in ?1 and a.c in ?2")] @AT@ 10673 @LENGTH@ 11
------------INS MethodInvocation@@is("select a from A a where a.b in ?1 and a.c in ?2") @TO@ SimpleName@@MethodName:assertThat:[queryString, is("select a from A a where a.b in ?1 and a.c in ?2")] @AT@ 10686 @LENGTH@ 53
---------------INS SimpleName@@MethodName:is:["select a from A a where a.b in ?1 and a.c in ?2"] @TO@ MethodInvocation@@is("select a from A a where a.b in ?1 and a.c in ?2") @AT@ 10686 @LENGTH@ 53
------------------INS StringLiteral@@"select a from A a where a.b in ?1 and a.c in ?2" @TO@ SimpleName@@MethodName:is:["select a from A a where a.b in ?1 and a.c in ?2"] @AT@ 10689 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:populateHostControllerInfo(hostControllerInfo,context,operation,operation) @TO@ MethodInvocation:populateHostControllerInfo(hostControllerInfo,context,operation) @AT@ 2577 @LENGTH@ 78
---UPD MethodInvocation@@populateHostControllerInfo(hostControllerInfo,context,operation,operation) @TO@ populateHostControllerInfo(hostControllerInfo,context,operation) @AT@ 2577 @LENGTH@ 77
------UPD SimpleName@@MethodName:populateHostControllerInfo:[hostControllerInfo, context, operation, operation] @TO@ MethodName:populateHostControllerInfo:[hostControllerInfo, context, operation] @AT@ 2577 @LENGTH@ 77
---------DEL SimpleName@@operation @AT@ 2644 @LENGTH@ 9


UPD IfStatement@@if (dir.isDirectory() && !"camel-jetty8".equals(dir.getName()) && !"target".equals(dir.getName())) {  File target=new File(dir,"target/classes");  int before=componentFiles.size();  int before2=jsonFiles.size();  findComponentFilesRecursive(target,jsonFiles,componentFiles,new CamelComponentsFileFilter());  int after=componentFiles.size();  int after2=jsonFiles.size();  if (before != after && before2 == after2) {    missingComponents.add(dir);  }} @TO@ if (dir.isDirectory() && !"camel-jetty9".equals(dir.getName()) && !"target".equals(dir.getName())) {  File target=new File(dir,"target/classes");  int before=componentFiles.size();  int before2=jsonFiles.size();  findComponentFilesRecursive(target,jsonFiles,componentFiles,new CamelComponentsFileFilter());  int after=componentFiles.size();  int after2=jsonFiles.size();  if (before != after && before2 == after2) {    missingComponents.add(dir);  }} @AT@ 10610 @LENGTH@ 698
---UPD InfixExpression@@dir.isDirectory() && !"camel-jetty8".equals(dir.getName()) && !"target".equals(dir.getName()) @TO@ dir.isDirectory() && !"camel-jetty9".equals(dir.getName()) && !"target".equals(dir.getName()) @AT@ 10614 @LENGTH@ 93
------UPD PrefixExpression@@!"camel-jetty8".equals(dir.getName()) @TO@ !"camel-jetty9".equals(dir.getName()) @AT@ 10635 @LENGTH@ 37
---------UPD MethodInvocation@@"camel-jetty8".equals(dir.getName()) @TO@ "camel-jetty9".equals(dir.getName()) @AT@ 10636 @LENGTH@ 36
------------UPD StringLiteral@@"camel-jetty8" @TO@ "camel-jetty9" @AT@ 10636 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:cancelToken(accessToken.getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testHappyDay, Exception,  @AT@ 1354 @LENGTH@ 36
---INS MethodInvocation@@cancelToken(accessToken.getValue()) @TO@ ExpressionStatement@@MethodInvocation:cancelToken(accessToken.getValue()) @AT@ 1354 @LENGTH@ 35
------INS SimpleName@@MethodName:cancelToken:[accessToken.getValue()] @TO@ MethodInvocation@@cancelToken(accessToken.getValue()) @AT@ 1354 @LENGTH@ 35
---------INS MethodInvocation@@accessToken.getValue() @TO@ SimpleName@@MethodName:cancelToken:[accessToken.getValue()] @AT@ 1366 @LENGTH@ 22
------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getValue() @AT@ 1366 @LENGTH@ 11
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@accessToken.getValue() @AT@ 1378 @LENGTH@ 10


UPD FieldDeclaration@@public, static, final, PropertyAttributeDefinition, [OVERFLOW_ACTION=PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build()] @TO@ public, static, final, PropertyAttributeDefinition, [OVERFLOW_ACTION=PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setAllowNull(true).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build()] @AT@ 3709 @LENGTH@ 1212
---UPD VariableDeclarationFragment@@OVERFLOW_ACTION=PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build() @TO@ OVERFLOW_ACTION=PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setAllowNull(true).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build() @AT@ 3757 @LENGTH@ 1163
------UPD MethodInvocation@@PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build() @TO@ PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setAllowNull(true).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build() @AT@ 3775 @LENGTH@ 1145
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@PropertyAttributeDefinition.Builder.of("overflow-action",ModelType.STRING).setAllowExpression(true).setAttributeMarshaller(new DefaultAttributeMarshaller(){
  @Override public void marshallAsElement(  final AttributeDefinition attribute,  final ModelNode resourceModel,  final boolean marshallDefault,  final XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel,marshallDefault)) {
      writer.writeStartElement(attribute.getXmlName());
      String content=resourceModel.get(attribute.getName()).asString().toLowerCase(Locale.ENGLISH);
      writer.writeAttribute("value",content);
      writer.writeEndElement();
    }
  }
}
).setDefaultValue(new ModelNode(OverflowAction.BLOCK.name())).setPropertyName("overflowAction").setResolver(OverflowActionResolver.INSTANCE).setValidator(EnumValidator.create(OverflowAction.class,false,false)).build() @AT@ 3776 @LENGTH@ 894
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 4665 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:answer.append(" exchangesInflight=\"").append(getInflightExchanges()).append("\"") @AT@ 13666 @LENGTH@ 83
---DEL MethodInvocation@@answer.append(" exchangesInflight=\"").append(getInflightExchanges()).append("\"") @AT@ 13666 @LENGTH@ 82
------DEL MethodInvocation@@MethodName:append:[getInflightExchanges()] @AT@ 13666 @LENGTH@ 69
---------DEL MethodInvocation@@MethodName:getInflightExchanges:[] @AT@ 13712 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:append:[" exchangesInflight=\""] @AT@ 13666 @LENGTH@ 38
---------DEL StringLiteral@@" exchangesInflight=\"" @AT@ 13680 @LENGTH@ 23
------DEL SimpleName@@Name:answer @AT@ 13666 @LENGTH@ 6
------DEL SimpleName@@MethodName:append:["\""] @AT@ 13736 @LENGTH@ 12
---------DEL StringLiteral@@"\"" @AT@ 13743 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:fixContextReferences(cSEL,pSEL) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node nd, Stack<Node> stack, NodeProcessorCtx procCtx, Object... nodeOutputs, SemanticException,  @AT@ 6207 @LENGTH@ 33
---INS MethodInvocation@@fixContextReferences(cSEL,pSEL) @TO@ ExpressionStatement@@MethodInvocation:fixContextReferences(cSEL,pSEL) @AT@ 6207 @LENGTH@ 32
------INS SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @TO@ MethodInvocation@@fixContextReferences(cSEL,pSEL) @AT@ 6207 @LENGTH@ 32
---------INS SimpleName@@cSEL @TO@ SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @AT@ 6228 @LENGTH@ 4
---------INS SimpleName@@pSEL @TO@ SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @AT@ 6234 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @TO@ TypeDeclaration@@[public]ProviderSignInControllerTest,  @AT@ 2785 @LENGTH@ 1027
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2785 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2792 @LENGTH@ 4
---INS SimpleName@@MethodName:signIn_nonExistentProvider @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2797 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2833 @LENGTH@ 9
---INS VariableDeclarationStatement@@ConnectionFactoryRegistry connectionFactoryLocator=new ConnectionFactoryRegistry(); @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2847 @LENGTH@ 85
------INS SimpleType@@ConnectionFactoryRegistry @TO@ VariableDeclarationStatement@@ConnectionFactoryRegistry connectionFactoryLocator=new ConnectionFactoryRegistry(); @AT@ 2847 @LENGTH@ 25
------INS VariableDeclarationFragment@@connectionFactoryLocator=new ConnectionFactoryRegistry() @TO@ VariableDeclarationStatement@@ConnectionFactoryRegistry connectionFactoryLocator=new ConnectionFactoryRegistry(); @AT@ 2873 @LENGTH@ 58
---------INS SimpleName@@connectionFactoryLocator @TO@ VariableDeclarationFragment@@connectionFactoryLocator=new ConnectionFactoryRegistry() @AT@ 2873 @LENGTH@ 24
---------INS ClassInstanceCreation@@ConnectionFactoryRegistry[] @TO@ VariableDeclarationFragment@@connectionFactoryLocator=new ConnectionFactoryRegistry() @AT@ 2900 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@ConnectionFactoryRegistry[] @AT@ 2900 @LENGTH@ 3
------------INS SimpleType@@ConnectionFactoryRegistry @TO@ ClassInstanceCreation@@ConnectionFactoryRegistry[] @AT@ 2904 @LENGTH@ 25
---INS VariableDeclarationStatement@@ConnectionFactory<TestApi1> connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret"); @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 2935 @LENGTH@ 109
------INS ParameterizedType@@ConnectionFactory<TestApi1> @TO@ VariableDeclarationStatement@@ConnectionFactory<TestApi1> connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret"); @AT@ 2935 @LENGTH@ 27
---------INS SimpleType@@ConnectionFactory @TO@ ParameterizedType@@ConnectionFactory<TestApi1> @AT@ 2935 @LENGTH@ 17
---------INS SimpleType@@TestApi1 @TO@ ParameterizedType@@ConnectionFactory<TestApi1> @AT@ 2953 @LENGTH@ 8
------INS VariableDeclarationFragment@@connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret") @TO@ VariableDeclarationStatement@@ConnectionFactory<TestApi1> connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret"); @AT@ 2963 @LENGTH@ 80
---------INS SimpleName@@connectionFactory1 @TO@ VariableDeclarationFragment@@connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret") @AT@ 2963 @LENGTH@ 18
---------INS ClassInstanceCreation@@StubOAuth1ConnectionFactory["clientId", "clientSecret"] @TO@ VariableDeclarationFragment@@connectionFactory1=new StubOAuth1ConnectionFactory("clientId","clientSecret") @AT@ 2984 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@StubOAuth1ConnectionFactory["clientId", "clientSecret"] @AT@ 2984 @LENGTH@ 3
------------INS SimpleType@@StubOAuth1ConnectionFactory @TO@ ClassInstanceCreation@@StubOAuth1ConnectionFactory["clientId", "clientSecret"] @AT@ 2988 @LENGTH@ 27
------------INS StringLiteral@@"clientId" @TO@ ClassInstanceCreation@@StubOAuth1ConnectionFactory["clientId", "clientSecret"] @AT@ 3016 @LENGTH@ 10
------------INS StringLiteral@@"clientSecret" @TO@ ClassInstanceCreation@@StubOAuth1ConnectionFactory["clientId", "clientSecret"] @AT@ 3028 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:connectionFactoryLocator.addConnectionFactory(connectionFactory1) @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3047 @LENGTH@ 66
------INS MethodInvocation@@connectionFactoryLocator.addConnectionFactory(connectionFactory1) @TO@ ExpressionStatement@@MethodInvocation:connectionFactoryLocator.addConnectionFactory(connectionFactory1) @AT@ 3047 @LENGTH@ 65
---------INS SimpleName@@Name:connectionFactoryLocator @TO@ MethodInvocation@@connectionFactoryLocator.addConnectionFactory(connectionFactory1) @AT@ 3047 @LENGTH@ 24
---------INS SimpleName@@MethodName:addConnectionFactory:[connectionFactory1] @TO@ MethodInvocation@@connectionFactoryLocator.addConnectionFactory(connectionFactory1) @AT@ 3072 @LENGTH@ 40
------------INS SimpleName@@connectionFactory1 @TO@ SimpleName@@MethodName:addConnectionFactory:[connectionFactory1] @AT@ 3093 @LENGTH@ 18
---INS VariableDeclarationStatement@@StubUsersConnectionRepository usersConnectionRepository=new StubUsersConnectionRepository(); @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3116 @LENGTH@ 94
------INS SimpleType@@StubUsersConnectionRepository @TO@ VariableDeclarationStatement@@StubUsersConnectionRepository usersConnectionRepository=new StubUsersConnectionRepository(); @AT@ 3116 @LENGTH@ 29
------INS VariableDeclarationFragment@@usersConnectionRepository=new StubUsersConnectionRepository() @TO@ VariableDeclarationStatement@@StubUsersConnectionRepository usersConnectionRepository=new StubUsersConnectionRepository(); @AT@ 3146 @LENGTH@ 63
---------INS SimpleName@@usersConnectionRepository @TO@ VariableDeclarationFragment@@usersConnectionRepository=new StubUsersConnectionRepository() @AT@ 3146 @LENGTH@ 25
---------INS ClassInstanceCreation@@StubUsersConnectionRepository[] @TO@ VariableDeclarationFragment@@usersConnectionRepository=new StubUsersConnectionRepository() @AT@ 3174 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@StubUsersConnectionRepository[] @AT@ 3174 @LENGTH@ 3
------------INS SimpleType@@StubUsersConnectionRepository @TO@ ClassInstanceCreation@@StubUsersConnectionRepository[] @AT@ 3178 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3213 @LENGTH@ 216
------INS MethodInvocation@@usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @TO@ ExpressionStatement@@MethodInvocation:usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @AT@ 3213 @LENGTH@ 215
---------INS MethodInvocation@@MethodName:createConnectionRepository:["habuma"] @TO@ MethodInvocation@@usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @AT@ 3213 @LENGTH@ 62
------------INS StringLiteral@@"habuma" @TO@ MethodInvocation@@MethodName:createConnectionRepository:["habuma"] @AT@ 3266 @LENGTH@ 8
---------INS SimpleName@@Name:usersConnectionRepository @TO@ MethodInvocation@@usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @AT@ 3213 @LENGTH@ 25
---------INS SimpleName@@MethodName:addConnection:[connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))] @TO@ MethodInvocation@@usersConnectionRepository.createConnectionRepository("habuma").addConnection(connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))) @AT@ 3276 @LENGTH@ 152
------------INS MethodInvocation@@connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null)) @TO@ SimpleName@@MethodName:addConnection:[connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null))] @AT@ 3290 @LENGTH@ 137
---------------INS SimpleName@@Name:connectionFactory1 @TO@ MethodInvocation@@connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null)) @AT@ 3290 @LENGTH@ 18
---------------INS SimpleName@@MethodName:createConnection:[new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null)] @TO@ MethodInvocation@@connectionFactory1.createConnection(new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null)) @AT@ 3309 @LENGTH@ 118
------------------INS ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @TO@ SimpleName@@MethodName:createConnection:[new ConnectionData("oauth1Provider","provider1User1",null,null,null,null,null,null,null)] @AT@ 3330 @LENGTH@ 96
---------------------INS New@@new @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3330 @LENGTH@ 3
---------------------INS SimpleType@@ConnectionData @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3334 @LENGTH@ 14
---------------------INS StringLiteral@@"oauth1Provider" @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3349 @LENGTH@ 16
---------------------INS StringLiteral@@"provider1User1" @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3367 @LENGTH@ 16
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3385 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3391 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3397 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3403 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3409 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3415 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConnectionData["oauth1Provider", "provider1User1", null, null, null, null, null, null, null] @AT@ 3421 @LENGTH@ 4
---INS VariableDeclarationStatement@@ProviderSignInController providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null); @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3432 @LENGTH@ 140
------INS SimpleType@@ProviderSignInController @TO@ VariableDeclarationStatement@@ProviderSignInController providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null); @AT@ 3432 @LENGTH@ 24
------INS VariableDeclarationFragment@@providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null) @TO@ VariableDeclarationStatement@@ProviderSignInController providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null); @AT@ 3457 @LENGTH@ 114
---------INS SimpleName@@providerSignInController @TO@ VariableDeclarationFragment@@providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null) @AT@ 3457 @LENGTH@ 24
---------INS ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @TO@ VariableDeclarationFragment@@providerSignInController=new ProviderSignInController(connectionFactoryLocator,usersConnectionRepository,null) @AT@ 3484 @LENGTH@ 87
------------INS New@@new @TO@ ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @AT@ 3484 @LENGTH@ 3
------------INS SimpleType@@ProviderSignInController @TO@ ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @AT@ 3488 @LENGTH@ 24
------------INS SimpleName@@connectionFactoryLocator @TO@ ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @AT@ 3513 @LENGTH@ 24
------------INS SimpleName@@usersConnectionRepository @TO@ ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @AT@ 3539 @LENGTH@ 25
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ProviderSignInController[connectionFactoryLocator, usersConnectionRepository, null] @AT@ 3566 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:providerSignInController.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3575 @LENGTH@ 46
------INS MethodInvocation@@providerSignInController.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:providerSignInController.afterPropertiesSet() @AT@ 3575 @LENGTH@ 45
---------INS SimpleName@@Name:providerSignInController @TO@ MethodInvocation@@providerSignInController.afterPropertiesSet() @AT@ 3575 @LENGTH@ 24
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@providerSignInController.afterPropertiesSet() @AT@ 3600 @LENGTH@ 20
---INS VariableDeclarationStatement@@MockMvc mockMvc=standaloneSetup(providerSignInController).build(); @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3624 @LENGTH@ 68
------INS SimpleType@@MockMvc @TO@ VariableDeclarationStatement@@MockMvc mockMvc=standaloneSetup(providerSignInController).build(); @AT@ 3624 @LENGTH@ 7
------INS VariableDeclarationFragment@@mockMvc=standaloneSetup(providerSignInController).build() @TO@ VariableDeclarationStatement@@MockMvc mockMvc=standaloneSetup(providerSignInController).build(); @AT@ 3632 @LENGTH@ 59
---------INS SimpleName@@mockMvc @TO@ VariableDeclarationFragment@@mockMvc=standaloneSetup(providerSignInController).build() @AT@ 3632 @LENGTH@ 7
---------INS MethodInvocation@@standaloneSetup(providerSignInController).build() @TO@ VariableDeclarationFragment@@mockMvc=standaloneSetup(providerSignInController).build() @AT@ 3642 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:standaloneSetup:[providerSignInController] @TO@ MethodInvocation@@standaloneSetup(providerSignInController).build() @AT@ 3642 @LENGTH@ 41
---------------INS SimpleName@@providerSignInController @TO@ MethodInvocation@@MethodName:standaloneSetup:[providerSignInController] @AT@ 3658 @LENGTH@ 24
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@standaloneSetup(providerSignInController).build() @AT@ 3684 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @TO@ MethodDeclaration@@public, void, MethodName:signIn_nonExistentProvider, Exception,  @AT@ 3695 @LENGTH@ 114
------INS MethodInvocation@@mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @TO@ ExpressionStatement@@MethodInvocation:mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @AT@ 3695 @LENGTH@ 113
---------INS MethodInvocation@@MethodName:perform:[post("/signin/nonExistentOAuth1Provider")] @TO@ MethodInvocation@@mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @AT@ 3695 @LENGTH@ 58
------------INS MethodInvocation@@post("/signin/nonExistentOAuth1Provider") @TO@ MethodInvocation@@MethodName:perform:[post("/signin/nonExistentOAuth1Provider")] @AT@ 3711 @LENGTH@ 41
---------------INS SimpleName@@MethodName:post:["/signin/nonExistentOAuth1Provider"] @TO@ MethodInvocation@@post("/signin/nonExistentOAuth1Provider") @AT@ 3711 @LENGTH@ 41
------------------INS StringLiteral@@"/signin/nonExistentOAuth1Provider" @TO@ SimpleName@@MethodName:post:["/signin/nonExistentOAuth1Provider"] @AT@ 3716 @LENGTH@ 35
---------INS SimpleName@@Name:mockMvc @TO@ MethodInvocation@@mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @AT@ 3695 @LENGTH@ 7
---------INS SimpleName@@MethodName:andExpect:[redirectedUrl("/signin?error=provider")] @TO@ MethodInvocation@@mockMvc.perform(post("/signin/nonExistentOAuth1Provider")).andExpect(redirectedUrl("/signin?error=provider")) @AT@ 3758 @LENGTH@ 50
------------INS MethodInvocation@@redirectedUrl("/signin?error=provider") @TO@ SimpleName@@MethodName:andExpect:[redirectedUrl("/signin?error=provider")] @AT@ 3768 @LENGTH@ 39
---------------INS SimpleName@@MethodName:redirectedUrl:["/signin?error=provider"] @TO@ MethodInvocation@@redirectedUrl("/signin?error=provider") @AT@ 3768 @LENGTH@ 39
------------------INS StringLiteral@@"/signin?error=provider" @TO@ SimpleName@@MethodName:redirectedUrl:["/signin?error=provider"] @AT@ 3782 @LENGTH@ 24


MOV MethodDeclaration@@public, boolean, MethodName:isUseRouteBuilder,  @TO@ TypeDeclaration@@[public]ObjectCacheProducerTest, CamelTestSupport @AT@ 570 @LENGTH@ 64


UPD TryStatement@@try {  fs.delete(toPath,false);  succeed=fs.rename(path,toPath);} catch (Exception e) {  throw new StoreException("Failed renaming from " + path + " to "+ toPath,e);} @TO@ try {  fs.delete(toPath,false);  log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]");  succeed=fs.rename(path,toPath);} catch (Exception e) {  throw new StoreException("Failed renaming from " + path + " to "+ toPath,e);} @AT@ 7740 @LENGTH@ 189
---INS ExpressionStatement@@MethodInvocation:log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]") @TO@ TryStatement@@try {  fs.delete(toPath,false);  succeed=fs.rename(path,toPath);} catch (Exception e) {  throw new StoreException("Failed renaming from " + path + " to "+ toPath,e);} @AT@ 7839 @LENGTH@ 65
------INS MethodInvocation@@log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]") @TO@ ExpressionStatement@@MethodInvocation:log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]") @AT@ 7839 @LENGTH@ 64
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]") @AT@ 7839 @LENGTH@ 3
---------INS SimpleName@@MethodName:info:["Renaming path=[" + path + "] toPath=["+ toPath+ "]"] @TO@ MethodInvocation@@log.info("Renaming path=[" + path + "] toPath=["+ toPath+ "]") @AT@ 7843 @LENGTH@ 60
------------INS InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @TO@ SimpleName@@MethodName:info:["Renaming path=[" + path + "] toPath=["+ toPath+ "]"] @AT@ 7848 @LENGTH@ 54
---------------INS StringLiteral@@"Renaming path=[" @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7848 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7865 @LENGTH@ 1
---------------INS SimpleName@@path @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7868 @LENGTH@ 4
---------------INS StringLiteral@@"] toPath=[" @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7875 @LENGTH@ 12
---------------INS SimpleName@@toPath @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7890 @LENGTH@ 6
---------------INS StringLiteral@@"]" @TO@ InfixExpression@@"Renaming path=[" + path + "] toPath=["+ toPath+ "]" @AT@ 7899 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:headerFilterStrategy.setOutFilterPattern("foo") @TO@ MethodInvocation:headerFilterStrategy.setInFilterPattern("foo") @AT@ 4528 @LENGTH@ 48
---UPD MethodInvocation@@headerFilterStrategy.setOutFilterPattern("foo") @TO@ headerFilterStrategy.setInFilterPattern("foo") @AT@ 4528 @LENGTH@ 47
------UPD SimpleName@@MethodName:setOutFilterPattern:["foo"] @TO@ MethodName:setInFilterPattern:["foo"] @AT@ 4549 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationProcessingFilterTests,  @AT@ 3172 @LENGTH@ 511
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3172 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3179 @LENGTH@ 4
---INS SimpleName@@MethodName:testDetailsAddedWithForm @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3184 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3218 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:request.addParameter("access_token","FOO") @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3232 @LENGTH@ 44
------INS MethodInvocation@@request.addParameter("access_token","FOO") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("access_token","FOO") @AT@ 3232 @LENGTH@ 43
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("access_token","FOO") @AT@ 3232 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["access_token", "FOO"] @TO@ MethodInvocation@@request.addParameter("access_token","FOO") @AT@ 3240 @LENGTH@ 35
------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:addParameter:["access_token", "FOO"] @AT@ 3253 @LENGTH@ 14
------------INS StringLiteral@@"FOO" @TO@ SimpleName@@MethodName:addParameter:["access_token", "FOO"] @AT@ 3269 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3279 @LENGTH@ 38
------INS MethodInvocation@@filter.doFilter(request,null,chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @AT@ 3279 @LENGTH@ 37
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3279 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, null, chain] @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3286 @LENGTH@ 30
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3295 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3304 @LENGTH@ 4
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3310 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull(request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3320 @LENGTH@ 84
------INS MethodInvocation@@assertNotNull(request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)) @AT@ 3320 @LENGTH@ 83
---------INS SimpleName@@MethodName:assertNotNull:[request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)] @TO@ MethodInvocation@@assertNotNull(request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)) @AT@ 3320 @LENGTH@ 83
------------INS MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE) @TO@ SimpleName@@MethodName:assertNotNull:[request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE)] @AT@ 3334 @LENGTH@ 68
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE) @AT@ 3334 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE] @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE) @AT@ 3342 @LENGTH@ 60
------------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @TO@ SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE] @AT@ 3355 @LENGTH@ 46
---------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @AT@ 3355 @LENGTH@ 27
---------------------INS SimpleName@@ACCESS_TOKEN_VALUE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE @AT@ 3383 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals(OAuth2AccessToken.BEARER_TYPE,request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3407 @LENGTH@ 113
------INS MethodInvocation@@assertEquals(OAuth2AccessToken.BEARER_TYPE,request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(OAuth2AccessToken.BEARER_TYPE,request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @AT@ 3407 @LENGTH@ 112
---------INS SimpleName@@MethodName:assertEquals:[OAuth2AccessToken.BEARER_TYPE, request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @TO@ MethodInvocation@@assertEquals(OAuth2AccessToken.BEARER_TYPE,request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @AT@ 3407 @LENGTH@ 112
------------INS QualifiedName@@OAuth2AccessToken.BEARER_TYPE @TO@ SimpleName@@MethodName:assertEquals:[OAuth2AccessToken.BEARER_TYPE, request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @AT@ 3420 @LENGTH@ 29
---------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 3420 @LENGTH@ 17
---------------INS SimpleName@@BEARER_TYPE @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 3438 @LENGTH@ 11
------------INS MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @TO@ SimpleName@@MethodName:assertEquals:[OAuth2AccessToken.BEARER_TYPE, request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @AT@ 3451 @LENGTH@ 67
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @AT@ 3451 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE] @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @AT@ 3459 @LENGTH@ 59
------------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @TO@ SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE] @AT@ 3472 @LENGTH@ 45
---------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 3472 @LENGTH@ 27
---------------------INS SimpleName@@ACCESS_TOKEN_TYPE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 3500 @LENGTH@ 17
---INS VariableDeclarationStatement@@Authentication result=SecurityContextHolder.getContext().getAuthentication(); @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3523 @LENGTH@ 79
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@Authentication result=SecurityContextHolder.getContext().getAuthentication(); @AT@ 3523 @LENGTH@ 14
------INS VariableDeclarationFragment@@result=SecurityContextHolder.getContext().getAuthentication() @TO@ VariableDeclarationStatement@@Authentication result=SecurityContextHolder.getContext().getAuthentication(); @AT@ 3538 @LENGTH@ 63
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=SecurityContextHolder.getContext().getAuthentication() @AT@ 3538 @LENGTH@ 6
---------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ VariableDeclarationFragment@@result=SecurityContextHolder.getContext().getAuthentication() @AT@ 3547 @LENGTH@ 54
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3547 @LENGTH@ 34
------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3547 @LENGTH@ 21
------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3582 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertEquals(authentication,result) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3605 @LENGTH@ 37
------INS MethodInvocation@@assertEquals(authentication,result) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(authentication,result) @AT@ 3605 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:[authentication, result] @TO@ MethodInvocation@@assertEquals(authentication,result) @AT@ 3605 @LENGTH@ 36
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:assertEquals:[authentication, result] @AT@ 3618 @LENGTH@ 14
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertEquals:[authentication, result] @AT@ 3634 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertNotNull(result.getDetails()) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAddedWithForm, Exception,  @AT@ 3645 @LENGTH@ 35
------INS MethodInvocation@@assertNotNull(result.getDetails()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(result.getDetails()) @AT@ 3645 @LENGTH@ 34
---------INS SimpleName@@MethodName:assertNotNull:[result.getDetails()] @TO@ MethodInvocation@@assertNotNull(result.getDetails()) @AT@ 3645 @LENGTH@ 34
------------INS MethodInvocation@@result.getDetails() @TO@ SimpleName@@MethodName:assertNotNull:[result.getDetails()] @AT@ 3659 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getDetails() @AT@ 3659 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@result.getDetails() @AT@ 3666 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James") @TO@ MethodInvocation:mock.message(0).body().contains("Thanks for the order of Camel in Action.") @AT@ 1784 @LENGTH@ 179
---UPD MethodInvocation@@mock.expectedBodiesReceived("Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James") @TO@ mock.message(0).body().contains("Thanks for the order of Camel in Action.") @AT@ 1784 @LENGTH@ 178
------UPD SimpleName@@MethodName:expectedBodiesReceived:["Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James"] @TO@ MethodName:contains:["Thanks for the order of Camel in Action."] @AT@ 1789 @LENGTH@ 173
---------DEL InfixExpression@@"Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James" @AT@ 1812 @LENGTH@ 149
------------DEL StringLiteral@@"Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." @AT@ 1812 @LENGTH@ 63
------------DEL Operator@@+ @AT@ 1875 @LENGTH@ 1
------------DEL StringLiteral@@"\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James" @AT@ 1894 @LENGTH@ 67
---------INS StringLiteral@@"Thanks for the order of Camel in Action." @TO@ SimpleName@@MethodName:expectedBodiesReceived:["Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James"] @AT@ 1878 @LENGTH@ 42
------INS MethodInvocation@@MethodName:body:[] @TO@ MethodInvocation@@mock.expectedBodiesReceived("Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James") @AT@ 1846 @LENGTH@ 22
------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.expectedBodiesReceived("Dear Ibsen, Claus\n\nThanks for the order of Camel in Action." + "\n\nRegards Camel Riders Bookstore\nPS: Next beer is on me, James") @AT@ 1846 @LENGTH@ 15
---------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1859 @LENGTH@ 1


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 5957 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 5987 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 5995 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 5999 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 6005 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 6013 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:patchedNode=new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @TO@ Assignment:patchedNode=isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4289 @LENGTH@ 84
---UPD Assignment@@patchedNode=new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @TO@ patchedNode=isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4289 @LENGTH@ 83
------INS ConditionalExpression@@isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @TO@ Assignment@@patchedNode=new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4308 @LENGTH@ 143
---------MOV MethodInvocation@@new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @TO@ ConditionalExpression@@isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4303 @LENGTH@ 69
---------INS MethodInvocation@@isCollectionElementReference(path) @TO@ ConditionalExpression@@isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4308 @LENGTH@ 34
------------INS SimpleName@@MethodName:isCollectionElementReference:[path] @TO@ MethodInvocation@@isCollectionElementReference(path) @AT@ 4308 @LENGTH@ 34
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:isCollectionElementReference:[path] @AT@ 4337 @LENGTH@ 4
---------INS MethodInvocation@@operation.apply(patchedNode) @TO@ ConditionalExpression@@isCollectionElementReference(path) ? operation.apply(patchedNode) : new ReplaceOperation(path,NullNode.getInstance()).apply(patchedNode) @AT@ 4345 @LENGTH@ 28
------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.apply(patchedNode) @AT@ 4345 @LENGTH@ 9
------------INS SimpleName@@MethodName:apply:[patchedNode] @TO@ MethodInvocation@@operation.apply(patchedNode) @AT@ 4355 @LENGTH@ 18
---------------INS SimpleName@@patchedNode @TO@ SimpleName@@MethodName:apply:[patchedNode] @AT@ 4361 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:prev1=t2 @TO@ Assignment:prev2=t2 @AT@ 6097 @LENGTH@ 11
---UPD Assignment@@prev1=t2 @TO@ prev2=t2 @AT@ 6097 @LENGTH@ 10
------UPD SimpleName@@prev1 @TO@ prev2 @AT@ 6097 @LENGTH@ 5


UPD FieldDeclaration@@public, static, final, long, [LLAP_DAEMON_LIVENESS_HEARTBEAT_INTERVAL_MS_DEFAULT=5000l] @TO@ public, static, final, long, [LLAP_DAEMON_LIVENESS_HEARTBEAT_INTERVAL_MS_DEFAULT=10000l] @AT@ 1832 @LENGTH@ 84
---UPD VariableDeclarationFragment@@LLAP_DAEMON_LIVENESS_HEARTBEAT_INTERVAL_MS_DEFAULT=5000l @TO@ LLAP_DAEMON_LIVENESS_HEARTBEAT_INTERVAL_MS_DEFAULT=10000l @AT@ 1857 @LENGTH@ 58
------UPD NumberLiteral@@5000l @TO@ 10000l @AT@ 1910 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),answer,strategy,false) @TO@ MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false) @AT@ 5286 @LENGTH@ 69
---UPD MethodInvocation@@MessageHelper.copyHeaders(exchange.getIn(),answer,strategy,false) @TO@ MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false) @AT@ 5286 @LENGTH@ 68
------UPD SimpleName@@MethodName:copyHeaders:[exchange.getIn(), answer, strategy, false] @TO@ MethodName:copyHeaders:[exchange.getIn(), answer, httpProtocolHeaderFilterStrategy, false] @AT@ 5300 @LENGTH@ 54
---------UPD SimpleName@@strategy @TO@ httpProtocolHeaderFilterStrategy @AT@ 5338 @LENGTH@ 8


UPD EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\\\\\"",QUOT);  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @TO@ for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"');  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");        value=decodeJson(value);      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 1998 @LENGTH@ 1860
---UPD ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @TO@ Assignment:line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 2466 @LENGTH@ 39
------UPD Assignment@@line=line.replaceAll("\\\\\"",QUOT) @TO@ line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 2466 @LENGTH@ 38
---------UPD MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @TO@ line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 2473 @LENGTH@ 31
------------UPD SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @TO@ MethodName:replaceAll:["\"\\\\\"\"", '"' + QUOT + '"'] @AT@ 2478 @LENGTH@ 26
---------------UPD StringLiteral@@"\\\\\"" @TO@ "\"\\\\\"\"" @AT@ 2489 @LENGTH@ 8
---------------DEL SimpleName@@QUOT @AT@ 2499 @LENGTH@ 4
---------------INS InfixExpression@@'"' + QUOT + '"' @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 2503 @LENGTH@ 16
------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 2503 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 2506 @LENGTH@ 1
------------------INS SimpleName@@QUOT @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 2509 @LENGTH@ 4
------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 2516 @LENGTH@ 3
---UPD WhileStatement@@while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @TO@ while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");      value=decodeJson(value);    }    row.put(key,value);    key=null;  }} @AT@ 2926 @LENGTH@ 841
------UPD Block@@WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @TO@ WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");      value=decodeJson(value);    }    row.put(key,value);    key=null;  }} @AT@ 2949 @LENGTH@ 818
---------UPD IfStatement@@if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @TO@ if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");    value=decodeJson(value);  }  row.put(key,value);  key=null;} @AT@ 2967 @LENGTH@ 786
------------UPD Block@@ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @TO@ ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");    value=decodeJson(value);  }  row.put(key,value);  key=null;} @AT@ 3053 @LENGTH@ 700
---------------UPD IfStatement@@if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @TO@ if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");  value=decodeJson(value);} @AT@ 3444 @LENGTH@ 189
------------------UPD Block@@ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @TO@ ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");  value=decodeJson(value);} @AT@ 3463 @LENGTH@ 170
---------------------INS ExpressionStatement@@Assignment:value=decodeJson(value) @TO@ Block@@ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 3647 @LENGTH@ 26
------------------------INS Assignment@@value=decodeJson(value) @TO@ ExpressionStatement@@Assignment:value=decodeJson(value) @AT@ 3647 @LENGTH@ 25
---------------------------INS SimpleName@@value @TO@ Assignment@@value=decodeJson(value) @AT@ 3647 @LENGTH@ 5
---------------------------INS Operator@@= @TO@ Assignment@@value=decodeJson(value) @AT@ 3652 @LENGTH@ 1
---------------------------INS MethodInvocation@@decodeJson(value) @TO@ Assignment@@value=decodeJson(value) @AT@ 3655 @LENGTH@ 17
------------------------------INS SimpleName@@MethodName:decodeJson:[value] @TO@ MethodInvocation@@decodeJson(value) @AT@ 3655 @LENGTH@ 17
---------------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:decodeJson:[value] @AT@ 3666 @LENGTH@ 5


UPD VariableDeclarationStatement@@File file1=super.getFile("utf8-7zip-test.zip"); @TO@ File file1=getFile("utf8-7zip-test.zip"); @AT@ 13781 @LENGTH@ 49
---UPD VariableDeclarationFragment@@file1=super.getFile("utf8-7zip-test.zip") @TO@ file1=getFile("utf8-7zip-test.zip") @AT@ 13786 @LENGTH@ 43
------DEL SuperMethodInvocation@@super.getFile("utf8-7zip-test.zip") @AT@ 13794 @LENGTH@ 35
---------DEL SimpleName@@MethodName:getFile:["utf8-7zip-test.zip"] @AT@ 13800 @LENGTH@ 7
---------DEL StringLiteral@@"utf8-7zip-test.zip" @AT@ 13808 @LENGTH@ 20
------INS MethodInvocation@@getFile("utf8-7zip-test.zip") @TO@ VariableDeclarationFragment@@file1=super.getFile("utf8-7zip-test.zip") @AT@ 13794 @LENGTH@ 29
---------INS SimpleName@@MethodName:getFile:["utf8-7zip-test.zip"] @TO@ MethodInvocation@@getFile("utf8-7zip-test.zip") @AT@ 13794 @LENGTH@ 29
------------INS StringLiteral@@"utf8-7zip-test.zip" @TO@ SimpleName@@MethodName:getFile:["utf8-7zip-test.zip"] @AT@ 13802 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertEquals("#choice7##to3#",ids) @TO@ MethodInvocation:assertEquals("#choice7##to2#",ids) @AT@ 3416 @LENGTH@ 36
---UPD MethodInvocation@@assertEquals("#choice7##to3#",ids) @TO@ assertEquals("#choice7##to2#",ids) @AT@ 3416 @LENGTH@ 35
------UPD SimpleName@@MethodName:assertEquals:["#choice7##to3#", ids] @TO@ MethodName:assertEquals:["#choice7##to2#", ids] @AT@ 3416 @LENGTH@ 35
---------UPD StringLiteral@@"#choice7##to3#" @TO@ "#choice7##to2#" @AT@ 3429 @LENGTH@ 16


UPD Block@@ThenBody:{  streamsHolder.close();  renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));  }  streamsHolder=null;} @TO@ ThenBody:{  streamsHolder.close();  Path path=renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));  }  streamsHolder=null;} @AT@ 2437 @LENGTH@ 304
---INS VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @TO@ Block@@ThenBody:{  streamsHolder.close();  renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));  }  streamsHolder=null;} @AT@ 2469 @LENGTH@ 48
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @AT@ 2469 @LENGTH@ 4
------INS VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @TO@ VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @AT@ 2474 @LENGTH@ 42
---------MOV MethodInvocation@@renameFile(streamsHolder.getPath()) @TO@ VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @AT@ 2469 @LENGTH@ 35
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @AT@ 2474 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:renameFile(streamsHolder.getPath()) @AT@ 2469 @LENGTH@ 36
---UPD IfStatement@@if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));} @TO@ if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 2581 @LENGTH@ 130
------UPD Block@@ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));} @TO@ ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 2614 @LENGTH@ 97
---------UPD ExpressionStatement@@MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath())) @TO@ MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 2620 @LENGTH@ 86
------------UPD MethodInvocation@@storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath())) @TO@ storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 2620 @LENGTH@ 85
---------------UPD SimpleName@@MethodName:publishEvent:[new FileWrittenEvent(this,streamsHolder.getPath())] @TO@ MethodName:publishEvent:[new FileWrittenEvent(this,path)] @AT@ 2640 @LENGTH@ 65
------------------UPD ClassInstanceCreation@@FileWrittenEvent[this, streamsHolder.getPath()] @TO@ FileWrittenEvent[this, path] @AT@ 2653 @LENGTH@ 51
---------------------DEL MethodInvocation@@streamsHolder.getPath() @AT@ 2680 @LENGTH@ 23
------------------------DEL SimpleName@@Name:streamsHolder @AT@ 2680 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 2694 @LENGTH@ 9
---------------------INS SimpleName@@path @TO@ ClassInstanceCreation@@FileWrittenEvent[this, streamsHolder.getPath()] @AT@ 2692 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:http.csrf().disable() @AT@ 5931 @LENGTH@ 22
---DEL MethodInvocation@@http.csrf().disable() @AT@ 5931 @LENGTH@ 21
------DEL MethodInvocation@@MethodName:csrf:[] @AT@ 5931 @LENGTH@ 11
------DEL SimpleName@@Name:http @AT@ 5931 @LENGTH@ 4
------DEL SimpleName@@MethodName:disable:[] @AT@ 5943 @LENGTH@ 9


UPD FieldDeclaration@@private, transient, final, List<JobToAdd>, [jobsToAdd=new ArrayList<JobToAdd>()] @TO@ private, final, transient, List<JobToAdd>, [jobsToAdd=new ArrayList<JobToAdd>()] @AT@ 2189 @LENGTH@ 77
---INS Modifier@@final @TO@ FieldDeclaration@@private, transient, final, List<JobToAdd>, [jobsToAdd=new ArrayList<JobToAdd>()] @AT@ 2197 @LENGTH@ 5
---DEL Modifier@@final @AT@ 2207 @LENGTH@ 5


UPD VariableDeclarationStatement@@DateFormat df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss"); @TO@ DateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); @AT@ 7363 @LENGTH@ 60
---UPD VariableDeclarationFragment@@df=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss") @TO@ df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss") @AT@ 7374 @LENGTH@ 48
------UPD ClassInstanceCreation@@SimpleDateFormat["yyyy-MM-dd hh:mm:ss"] @TO@ SimpleDateFormat["yyyy-MM-dd HH:mm:ss"] @AT@ 7379 @LENGTH@ 43
---------UPD StringLiteral@@"yyyy-MM-dd hh:mm:ss" @TO@ "yyyy-MM-dd HH:mm:ss" @AT@ 7400 @LENGTH@ 21


UPD IfStatement@@if (headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @TO@ if (headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().isEmpty()) {  LOG.trace("Drop CXF message protocol header: {}={}",entry.getKey(),entry.getValue());} else {  camelMessage.setHeader(entry.getKey(),entry.getValue().get(0));} @AT@ 12869 @LENGTH@ 462
---UPD InfixExpression@@headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @TO@ headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().isEmpty() @AT@ 12873 @LENGTH@ 150
------DEL InfixExpression@@entry.getValue().get(0) == null @AT@ 12992 @LENGTH@ 31
---------DEL Operator@@== @AT@ 13015 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 13019 @LENGTH@ 4
------MOV MethodInvocation@@entry.getValue().get(0) @TO@ InfixExpression@@headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange) || entry.getValue().get(0) == null @AT@ 12992 @LENGTH@ 23
---------UPD SimpleName@@MethodName:get:[0] @TO@ MethodName:isEmpty:[] @AT@ 13009 @LENGTH@ 6
------------DEL NumberLiteral@@0 @AT@ 13013 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.fail("Not throwed IllegalArgumentException for " + Integer.toHexString(codePoint) + "!") @TO@ MethodInvocation:fail("Not throwed IllegalArgumentException for " + Integer.toHexString(codePoint) + "!") @AT@ 65695 @LENGTH@ 96
---UPD MethodInvocation@@Assert.fail("Not throwed IllegalArgumentException for " + Integer.toHexString(codePoint) + "!") @TO@ fail("Not throwed IllegalArgumentException for " + Integer.toHexString(codePoint) + "!") @AT@ 65695 @LENGTH@ 95
------DEL SimpleName@@Name:Assert @AT@ 65695 @LENGTH@ 6


UPD MethodDeclaration@@public, StreamBuffer, MethodName:get, CacheKey key,  @TO@ public, StreamBuffer[], MethodName:get, CacheKey key,  @AT@ 1080 @LENGTH@ 38
---DEL SimpleType@@StreamBuffer @AT@ 1087 @LENGTH@ 12
---INS ArrayType@@StreamBuffer[] @TO@ MethodDeclaration@@public, StreamBuffer, MethodName:get, CacheKey key,  @AT@ 1096 @LENGTH@ 14
------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1096 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:config.setDirectory(remaining) @AT@ 2048 @LENGTH@ 31
---DEL MethodInvocation@@config.setDirectory(remaining) @AT@ 2048 @LENGTH@ 30
------DEL SimpleName@@Name:config @AT@ 2048 @LENGTH@ 6
------DEL SimpleName@@MethodName:setDirectory:[remaining] @AT@ 2055 @LENGTH@ 23
---------DEL SimpleName@@remaining @AT@ 2068 @LENGTH@ 9


INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testReceive, Exception,  @AT@ 1636 @LENGTH@ 47
---INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1640 @LENGTH@ 10
------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 1640 @LENGTH@ 1
------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 1641 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1652 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1666 @LENGTH@ 7


UPD EnhancedForStatement@@for (Property prop : currentList.asPropertyList()) {  final String discoveryOptionType=prop.getName();  final String discoveryOptionName=prop.getValue().get(ModelDescriptionConstants.NAME).asString();  if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {    newList.add(discoveryOptionType,prop.getValue());  }} @TO@ for (ModelNode e : currentList.asList()) {  final Property prop=e.asProperty();  final String discoveryOptionType=prop.getName();  final String discoveryOptionName=prop.getValue().get(ModelDescriptionConstants.NAME).asString();  if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {    newList.add(e);  }} @AT@ 2885 @LENGTH@ 408
---DEL SingleVariableDeclaration@@Property prop @AT@ 2890 @LENGTH@ 13
------DEL SimpleType@@Property @AT@ 2890 @LENGTH@ 8
------DEL SimpleName@@prop @AT@ 2899 @LENGTH@ 4
---INS SingleVariableDeclaration@@ModelNode e @TO@ EnhancedForStatement@@for (Property prop : currentList.asPropertyList()) {  final String discoveryOptionType=prop.getName();  final String discoveryOptionName=prop.getValue().get(ModelDescriptionConstants.NAME).asString();  if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {    newList.add(discoveryOptionType,prop.getValue());  }} @AT@ 2890 @LENGTH@ 11
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode e @AT@ 2890 @LENGTH@ 9
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ModelNode e @AT@ 2900 @LENGTH@ 1
---INS MethodInvocation@@currentList.asList() @TO@ EnhancedForStatement@@for (Property prop : currentList.asPropertyList()) {  final String discoveryOptionType=prop.getName();  final String discoveryOptionName=prop.getValue().get(ModelDescriptionConstants.NAME).asString();  if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {    newList.add(discoveryOptionType,prop.getValue());  }} @AT@ 2904 @LENGTH@ 20
------INS SimpleName@@Name:currentList @TO@ MethodInvocation@@currentList.asList() @AT@ 2904 @LENGTH@ 11
------INS SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@currentList.asList() @AT@ 2916 @LENGTH@ 8
---DEL MethodInvocation@@currentList.asPropertyList() @AT@ 2906 @LENGTH@ 28
---INS VariableDeclarationStatement@@final Property prop=e.asProperty(); @TO@ EnhancedForStatement@@for (Property prop : currentList.asPropertyList()) {  final String discoveryOptionType=prop.getName();  final String discoveryOptionName=prop.getValue().get(ModelDescriptionConstants.NAME).asString();  if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {    newList.add(discoveryOptionType,prop.getValue());  }} @AT@ 2940 @LENGTH@ 37
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Property prop=e.asProperty(); @AT@ 2940 @LENGTH@ 5
------INS SimpleType@@Property @TO@ VariableDeclarationStatement@@final Property prop=e.asProperty(); @AT@ 2946 @LENGTH@ 8
------INS VariableDeclarationFragment@@prop=e.asProperty() @TO@ VariableDeclarationStatement@@final Property prop=e.asProperty(); @AT@ 2955 @LENGTH@ 21
---------INS SimpleName@@prop @TO@ VariableDeclarationFragment@@prop=e.asProperty() @AT@ 2955 @LENGTH@ 4
---------INS MethodInvocation@@e.asProperty() @TO@ VariableDeclarationFragment@@prop=e.asProperty() @AT@ 2962 @LENGTH@ 14
------------MOV SimpleName@@Name:currentList @TO@ MethodInvocation@@e.asProperty() @AT@ 2906 @LENGTH@ 11
------------MOV SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@e.asProperty() @AT@ 2918 @LENGTH@ 16
---UPD IfStatement@@if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {  newList.add(discoveryOptionType,prop.getValue());} @TO@ if (!(discoveryOptionType.equals(type) && discoveryOptionName.equals(name))) {  newList.add(e);} @AT@ 3124 @LENGTH@ 159
------UPD Block@@ThenBody:{  newList.add(discoveryOptionType,prop.getValue());} @TO@ ThenBody:{  newList.add(e);} @AT@ 3201 @LENGTH@ 82
---------UPD ExpressionStatement@@MethodInvocation:newList.add(discoveryOptionType,prop.getValue()) @TO@ MethodInvocation:newList.add(e) @AT@ 3219 @LENGTH@ 50
------------UPD MethodInvocation@@newList.add(discoveryOptionType,prop.getValue()) @TO@ newList.add(e) @AT@ 3219 @LENGTH@ 49
---------------UPD SimpleName@@MethodName:add:[discoveryOptionType, prop.getValue()] @TO@ MethodName:add:[e] @AT@ 3227 @LENGTH@ 41
------------------UPD SimpleName@@discoveryOptionType @TO@ e @AT@ 3231 @LENGTH@ 19
------------------DEL MethodInvocation@@prop.getValue() @AT@ 3252 @LENGTH@ 15
---------------------DEL SimpleName@@Name:prop @AT@ 3252 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 3257 @LENGTH@ 10


UPD TypeDeclaration@@[private, static, abstract]AbstractTestProcessor, [Processor] @TO@ [private, abstract, static]AbstractTestProcessor, [Processor] @AT@ 7798 @LENGTH@ 2779
---INS Modifier@@abstract @TO@ TypeDeclaration@@[private, static, abstract]AbstractTestProcessor, [Processor] @AT@ 7806 @LENGTH@ 8
---DEL Modifier@@abstract @AT@ 7813 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:current=getPersistentEntity(persistentProperty.getActualType()) @TO@ Assignment:current=getPersistentEntity(persistentProperty.getTypeInformation().getActualType()) @AT@ 8543 @LENGTH@ 66
---UPD Assignment@@current=getPersistentEntity(persistentProperty.getActualType()) @TO@ current=getPersistentEntity(persistentProperty.getTypeInformation().getActualType()) @AT@ 8543 @LENGTH@ 65
------UPD MethodInvocation@@getPersistentEntity(persistentProperty.getActualType()) @TO@ getPersistentEntity(persistentProperty.getTypeInformation().getActualType()) @AT@ 8553 @LENGTH@ 55
---------UPD SimpleName@@MethodName:getPersistentEntity:[persistentProperty.getActualType()] @TO@ MethodName:getPersistentEntity:[persistentProperty.getTypeInformation().getActualType()] @AT@ 8553 @LENGTH@ 55
------------UPD MethodInvocation@@persistentProperty.getActualType() @TO@ persistentProperty.getTypeInformation().getActualType() @AT@ 8573 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getTypeInformation:[] @TO@ MethodInvocation@@persistentProperty.getActualType() @AT@ 8573 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getTypeInformation:[] @TO@ MethodInvocation@@persistentProperty.getActualType() @AT@ 8573 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:setDirectoryName(getDirectory()) @TO@ MethodDeclaration@@public, void, MethodName:configure, URI uri,  @AT@ 3096 @LENGTH@ 33
---INS MethodInvocation@@setDirectoryName(getDirectory()) @TO@ ExpressionStatement@@MethodInvocation:setDirectoryName(getDirectory()) @AT@ 3096 @LENGTH@ 32
------INS SimpleName@@MethodName:setDirectoryName:[getDirectory()] @TO@ MethodInvocation@@setDirectoryName(getDirectory()) @AT@ 3096 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getDirectory:[] @TO@ SimpleName@@MethodName:setDirectoryName:[getDirectory()] @AT@ 3113 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:nonce.getBytes() @TO@ MethodInvocation:nonce.getBytes(StandardCharsets.UTF_8) @AT@ 2196 @LENGTH@ 24
---UPD MethodInvocation@@nonce.getBytes() @TO@ nonce.getBytes(StandardCharsets.UTF_8) @AT@ 2203 @LENGTH@ 16
------UPD SimpleName@@MethodName:getBytes:[] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2209 @LENGTH@ 10
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[] @AT@ 2193 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2193 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2210 @LENGTH@ 5


UPD IfStatement@@if (existingPath.cycles(property,path)) {  paths.add(new Path(property,path));  throw new CyclicPropertyReferenceException(property.getFieldName(),property.getOwner().getType(),existingPath.getPath());} @TO@ if (existingPath.cycles(property,path) && property.isEntity()) {  paths.add(new Path(property,path));  throw new CyclicPropertyReferenceException(property.getFieldName(),property.getOwner().getType(),existingPath.getPath());} @AT@ 17600 @LENGTH@ 230
---INS InfixExpression@@existingPath.cycles(property,path) && property.isEntity() @TO@ IfStatement@@if (existingPath.cycles(property,path)) {  paths.add(new Path(property,path));  throw new CyclicPropertyReferenceException(property.getFieldName(),property.getOwner().getType(),existingPath.getPath());} @AT@ 17609 @LENGTH@ 58
------MOV MethodInvocation@@existingPath.cycles(property,path) @TO@ InfixExpression@@existingPath.cycles(property,path) && property.isEntity() @AT@ 17604 @LENGTH@ 35
------INS Operator@@&& @TO@ InfixExpression@@existingPath.cycles(property,path) && property.isEntity() @AT@ 17644 @LENGTH@ 2
------INS MethodInvocation@@property.isEntity() @TO@ InfixExpression@@existingPath.cycles(property,path) && property.isEntity() @AT@ 17648 @LENGTH@ 19
---------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isEntity() @AT@ 17648 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEntity:[] @TO@ MethodInvocation@@property.isEntity() @AT@ 17657 @LENGTH@ 10


UPD ReturnStatement@@ConditionalExpression:(earlier > later) ? -1 : ((earlier == later) ? 0 : 1) @TO@ MethodInvocation:later.compareTo(earlier) @AT@ 4088 @LENGTH@ 61
---DEL ConditionalExpression@@(earlier > later) ? -1 : ((earlier == later) ? 0 : 1) @AT@ 4095 @LENGTH@ 53
------DEL ParenthesizedExpression@@(earlier > later) @AT@ 4095 @LENGTH@ 17
---------DEL InfixExpression@@earlier > later @AT@ 4096 @LENGTH@ 15
------------DEL SimpleName@@earlier @AT@ 4096 @LENGTH@ 7
------------DEL Operator@@> @AT@ 4103 @LENGTH@ 1
------------DEL SimpleName@@later @AT@ 4106 @LENGTH@ 5
------DEL PrefixExpression@@-1 @AT@ 4115 @LENGTH@ 2
---------DEL Operator@@- @AT@ 4115 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 4116 @LENGTH@ 1
------DEL ParenthesizedExpression@@((earlier == later) ? 0 : 1) @AT@ 4120 @LENGTH@ 28
---------DEL ConditionalExpression@@(earlier == later) ? 0 : 1 @AT@ 4121 @LENGTH@ 26
------------DEL ParenthesizedExpression@@(earlier == later) @AT@ 4121 @LENGTH@ 18
---------------DEL InfixExpression@@earlier == later @AT@ 4122 @LENGTH@ 16
------------------DEL SimpleName@@earlier @AT@ 4122 @LENGTH@ 7
------------------DEL Operator@@== @AT@ 4129 @LENGTH@ 2
------------------DEL SimpleName@@later @AT@ 4133 @LENGTH@ 5
------------DEL NumberLiteral@@0 @AT@ 4142 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 4146 @LENGTH@ 1
---INS MethodInvocation@@later.compareTo(earlier) @TO@ ReturnStatement@@ConditionalExpression:(earlier > later) ? -1 : ((earlier == later) ? 0 : 1) @AT@ 4095 @LENGTH@ 24
------INS SimpleName@@Name:later @TO@ MethodInvocation@@later.compareTo(earlier) @AT@ 4095 @LENGTH@ 5
------INS SimpleName@@MethodName:compareTo:[earlier] @TO@ MethodInvocation@@later.compareTo(earlier) @AT@ 4101 @LENGTH@ 18
---------INS SimpleName@@earlier @TO@ SimpleName@@MethodName:compareTo:[earlier] @AT@ 4111 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Invalid query or field specification in %s!",getQueryMethod(),o_O)) @TO@ ClassInstanceCreation:new IllegalStateException(String.format("Invalid query or field specification in %s!",getQueryMethod()),o_O) @AT@ 3370 @LENGTH@ 122
---UPD ClassInstanceCreation@@IllegalStateException[String.format("Invalid query or field specification in %s!",getQueryMethod(),o_O)] @TO@ IllegalStateException[String.format("Invalid query or field specification in %s!",getQueryMethod()), o_O] @AT@ 3376 @LENGTH@ 115
------UPD MethodInvocation@@String.format("Invalid query or field specification in %s!",getQueryMethod(),o_O) @TO@ String.format("Invalid query or field specification in %s!",getQueryMethod()) @AT@ 3402 @LENGTH@ 88
---------UPD SimpleName@@MethodName:format:["Invalid query or field specification in %s!", getQueryMethod(), o_O] @TO@ MethodName:format:["Invalid query or field specification in %s!", getQueryMethod()] @AT@ 3409 @LENGTH@ 81
------------DEL SimpleName@@o_O @AT@ 3486 @LENGTH@ 3
------INS SimpleName@@o_O @TO@ ClassInstanceCreation@@IllegalStateException[String.format("Invalid query or field specification in %s!",getQueryMethod(),o_O)] @AT@ 3487 @LENGTH@ 3


DEL MethodDeclaration@@public, static, Archive<?>, MethodName:descriptorOverrideDeploy,  @AT@ 1434 @LENGTH@ 335
---DEL Modifier@@public @AT@ 1434 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1441 @LENGTH@ 6
---DEL ParameterizedType@@Archive<?> @AT@ 1448 @LENGTH@ 10
------DEL SimpleType@@Archive @AT@ 1448 @LENGTH@ 7
------DEL WildcardType@@? @AT@ 1456 @LENGTH@ 1
---DEL SimpleName@@MethodName:descriptorOverrideDeploy @AT@ 1459 @LENGTH@ 24
---DEL ReturnStatement@@MethodInvocation:ShrinkWrap.create(JavaArchive.class,"test2.jar").addPackage(IIOPNamingInContainerTestCase.class.getPackage()).addAsManifestResource(IIOPNamingInContainerTestCase.class.getPackage(),"jboss-ejb3-naming.xml","jboss-ejb3.xml") @AT@ 1496 @LENGTH@ 267
------DEL MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test2.jar").addPackage(IIOPNamingInContainerTestCase.class.getPackage()).addAsManifestResource(IIOPNamingInContainerTestCase.class.getPackage(),"jboss-ejb3-naming.xml","jboss-ejb3.xml") @AT@ 1503 @LENGTH@ 259
---------DEL MethodInvocation@@MethodName:addPackage:[IIOPNamingInContainerTestCase.class.getPackage()] @AT@ 1503 @LENGTH@ 127
------------DEL MethodInvocation@@IIOPNamingInContainerTestCase.class.getPackage() @AT@ 1581 @LENGTH@ 48
---------------DEL TypeLiteral@@IIOPNamingInContainerTestCase.class @AT@ 1581 @LENGTH@ 35
---------------DEL SimpleName@@MethodName:getPackage:[] @AT@ 1617 @LENGTH@ 12
---------DEL MethodInvocation@@MethodName:create:[JavaArchive.class, "test2.jar"] @AT@ 1503 @LENGTH@ 49
------------DEL TypeLiteral@@JavaArchive.class @AT@ 1521 @LENGTH@ 17
------------DEL StringLiteral@@"test2.jar" @AT@ 1540 @LENGTH@ 11
---------DEL SimpleName@@Name:ShrinkWrap @AT@ 1503 @LENGTH@ 10
---------DEL SimpleName@@MethodName:addAsManifestResource:[IIOPNamingInContainerTestCase.class.getPackage(), "jboss-ejb3-naming.xml", "jboss-ejb3.xml"] @AT@ 1648 @LENGTH@ 114
------------DEL MethodInvocation@@IIOPNamingInContainerTestCase.class.getPackage() @AT@ 1670 @LENGTH@ 48
---------------DEL TypeLiteral@@IIOPNamingInContainerTestCase.class @AT@ 1670 @LENGTH@ 35
---------------DEL SimpleName@@MethodName:getPackage:[] @AT@ 1706 @LENGTH@ 12
------------DEL StringLiteral@@"jboss-ejb3-naming.xml" @AT@ 1720 @LENGTH@ 23
------------DEL StringLiteral@@"jboss-ejb3.xml" @AT@ 1745 @LENGTH@ 16


UPD FieldDeclaration@@private, transient, StandardListObjectInspector, [internalMergeOI] @TO@ private, transient, ListObjectInspector, [internalMergeOI] @AT@ 1898 @LENGTH@ 62
---UPD SimpleType@@StandardListObjectInspector @TO@ ListObjectInspector @AT@ 1916 @LENGTH@ 27


UPD VariableDeclarationStatement@@SimpleDateFormat sdf=new SimpleDateFormat("yyyy-mm-dd hh:mm:ss"); @TO@ SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); @AT@ 5352 @LENGTH@ 67
---UPD VariableDeclarationFragment@@sdf=new SimpleDateFormat("yyyy-mm-dd hh:mm:ss") @TO@ sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss") @AT@ 5369 @LENGTH@ 49
------UPD ClassInstanceCreation@@SimpleDateFormat["yyyy-mm-dd hh:mm:ss"] @TO@ SimpleDateFormat["yyyy-MM-dd HH:mm:ss"] @AT@ 5375 @LENGTH@ 43
---------UPD StringLiteral@@"yyyy-mm-dd hh:mm:ss" @TO@ "yyyy-MM-dd HH:mm:ss" @AT@ 5396 @LENGTH@ 21


UPD TryStatement@@try {  http.getForString("/admin/beans");  fail("Should have thrown exception");} catch (InsufficientScopeException ex) {  assertTrue("Wrong summary: " + ex,ex.getSummary().contains("scope=\"read"));} @TO@ try {  http.getForString("/admin/beans");  fail("Should have thrown exception");} catch (InsufficientScopeException ex) {  assertTrue("Wrong summary: " + ex,ex.getSummary().contains("scope=\"read"));}catch (Exception e) {  fail("Wrong exception: " + e.getClass());  throw e;} @AT@ 1825 @LENGTH@ 215
---INS CatchClause@@catch (Exception e) {  fail("Wrong exception: " + e.getClass());  throw e;} @TO@ TryStatement@@try {  http.getForString("/admin/beans");  fail("Should have thrown exception");} catch (InsufficientScopeException ex) {  assertTrue("Wrong summary: " + ex,ex.getSummary().contains("scope=\"read"));} @AT@ 2041 @LENGTH@ 82
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  fail("Wrong exception: " + e.getClass());  throw e;} @AT@ 2048 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2048 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2058 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:fail("Wrong exception: " + e.getClass()) @TO@ CatchClause@@catch (Exception e) {  fail("Wrong exception: " + e.getClass());  throw e;} @AT@ 2066 @LENGTH@ 41
---------INS MethodInvocation@@fail("Wrong exception: " + e.getClass()) @TO@ ExpressionStatement@@MethodInvocation:fail("Wrong exception: " + e.getClass()) @AT@ 2066 @LENGTH@ 40
------------INS SimpleName@@MethodName:fail:["Wrong exception: " + e.getClass()] @TO@ MethodInvocation@@fail("Wrong exception: " + e.getClass()) @AT@ 2066 @LENGTH@ 40
---------------INS InfixExpression@@"Wrong exception: " + e.getClass() @TO@ SimpleName@@MethodName:fail:["Wrong exception: " + e.getClass()] @AT@ 2071 @LENGTH@ 34
------------------INS StringLiteral@@"Wrong exception: " @TO@ InfixExpression@@"Wrong exception: " + e.getClass() @AT@ 2071 @LENGTH@ 19
------------------INS Operator@@+ @TO@ InfixExpression@@"Wrong exception: " + e.getClass() @AT@ 2090 @LENGTH@ 1
------------------INS MethodInvocation@@e.getClass() @TO@ InfixExpression@@"Wrong exception: " + e.getClass() @AT@ 2093 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getClass() @AT@ 2093 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@e.getClass() @AT@ 2095 @LENGTH@ 10
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (Exception e) {  fail("Wrong exception: " + e.getClass());  throw e;} @AT@ 2111 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 2117 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, int, [ID_COLUMN_VARCHAR_SIZE=255] @TO@ public, static, final, int, [ID_COLUMN_VARCHAR_SIZE=4000] @AT@ 1628 @LENGTH@ 53
---UPD VariableDeclarationFragment@@ID_COLUMN_VARCHAR_SIZE=255 @TO@ ID_COLUMN_VARCHAR_SIZE=4000 @AT@ 1652 @LENGTH@ 28
------UPD NumberLiteral@@255 @TO@ 4000 @AT@ 1677 @LENGTH@ 3


UPD FieldDeclaration@@private, ArrayDeque<DecoderState>, [states=new ArrayDeque<DecoderState>()] @TO@ private, final, ArrayDeque<DecoderState>, [states=new ArrayDeque<DecoderState>()] @AT@ 1290 @LENGTH@ 73
---INS Modifier@@final @TO@ FieldDeclaration@@private, ArrayDeque<DecoderState>, [states=new ArrayDeque<DecoderState>()] @AT@ 1304 @LENGTH@ 5


UPD CatchClause@@catch (NumberFormatException nfe) {  if (LOG.isWarnEnabled()) {    LOG.warn("NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe));  }  result=hasNull ? TruthValue.YES_NO_NULL : TruthValue.YES_NO;} @TO@ catch (Exception e) {  if (LOG.isWarnEnabled()) {    LOG.warn("Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e));  }  result=hasNull ? TruthValue.YES_NO_NULL : TruthValue.YES_NO;} @AT@ 15002 @LENGTH@ 318
---UPD SingleVariableDeclaration@@NumberFormatException nfe @TO@ Exception e @AT@ 15009 @LENGTH@ 25
------UPD SimpleType@@NumberFormatException @TO@ Exception @AT@ 15009 @LENGTH@ 21
------UPD SimpleName@@nfe @TO@ e @AT@ 15031 @LENGTH@ 3
---UPD IfStatement@@if (LOG.isWarnEnabled()) {  LOG.warn("NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe));} @TO@ if (LOG.isWarnEnabled()) {  LOG.warn("Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e));} @AT@ 15044 @LENGTH@ 201
------UPD Block@@ThenBody:{  LOG.warn("NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe));} @TO@ ThenBody:{  LOG.warn("Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e));} @AT@ 15069 @LENGTH@ 176
---------UPD ExpressionStatement@@MethodInvocation:LOG.warn("NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe)) @TO@ MethodInvocation:LOG.warn("Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e)) @AT@ 15079 @LENGTH@ 158
------------UPD MethodInvocation@@LOG.warn("NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe)) @TO@ LOG.warn("Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e)) @AT@ 15079 @LENGTH@ 157
---------------UPD SimpleName@@MethodName:warn:["NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe)] @TO@ MethodName:warn:["Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e)] @AT@ 15083 @LENGTH@ 153
------------------UPD InfixExpression@@"NumberFormatException when type matching predicate object" + " and statistics object. Exception: " + ExceptionUtils.getStackTrace(nfe) @TO@ "Exception when evaluating predicate. Skipping ORC PPD." + " Exception: " + ExceptionUtils.getStackTrace(e) @AT@ 15088 @LENGTH@ 147
---------------------UPD StringLiteral@@"NumberFormatException when type matching predicate object" @TO@ "Exception when evaluating predicate. Skipping ORC PPD." @AT@ 15088 @LENGTH@ 59
---------------------UPD StringLiteral@@" and statistics object. Exception: " @TO@ " Exception: " @AT@ 15162 @LENGTH@ 37
---------------------UPD MethodInvocation@@ExceptionUtils.getStackTrace(nfe) @TO@ ExceptionUtils.getStackTrace(e) @AT@ 15202 @LENGTH@ 33
------------------------UPD SimpleName@@MethodName:getStackTrace:[nfe] @TO@ MethodName:getStackTrace:[e] @AT@ 15217 @LENGTH@ 18
---------------------------UPD SimpleName@@nfe @TO@ e @AT@ 15231 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3060 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 3060 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3060 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3080 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 3085 @LENGTH@ 11


INS IfStatement@@if (content != null && content.length != 0) {  this.content=content.clone();  this.length=this.content.length;} else {  this.content=new byte[16];} @TO@ MethodDeclaration@@public, voidMethodName:ByteStringBuilder, final byte[] content,  @AT@ 1324 @LENGTH@ 204
---INS InfixExpression@@content != null && content.length != 0 @TO@ IfStatement@@if (content != null && content.length != 0) {  this.content=content.clone();  this.length=this.content.length;} else {  this.content=new byte[16];} @AT@ 1328 @LENGTH@ 38
------INS InfixExpression@@content != null @TO@ InfixExpression@@content != null && content.length != 0 @AT@ 1328 @LENGTH@ 15
---------INS SimpleName@@content @TO@ InfixExpression@@content != null @AT@ 1328 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@content != null @AT@ 1335 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@content != null @AT@ 1339 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@content != null && content.length != 0 @AT@ 1343 @LENGTH@ 2
------INS InfixExpression@@content.length != 0 @TO@ InfixExpression@@content != null && content.length != 0 @AT@ 1347 @LENGTH@ 19
---------INS QualifiedName@@content.length @TO@ InfixExpression@@content.length != 0 @AT@ 1347 @LENGTH@ 14
------------INS SimpleName@@content @TO@ QualifiedName@@content.length @AT@ 1347 @LENGTH@ 7
------------INS SimpleName@@length @TO@ QualifiedName@@content.length @AT@ 1355 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@content.length != 0 @AT@ 1361 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@content.length != 0 @AT@ 1365 @LENGTH@ 1
---INS Block@@ThenBody:{  this.content=content.clone();  this.length=this.content.length;} @TO@ IfStatement@@if (content != null && content.length != 0) {  this.content=content.clone();  this.length=this.content.length;} else {  this.content=new byte[16];} @AT@ 1368 @LENGTH@ 102
------MOV ExpressionStatement@@Assignment:this.content=content.clone() @TO@ Block@@ThenBody:{  this.content=content.clone();  this.length=this.content.length;} @AT@ 1324 @LENGTH@ 31
------MOV ExpressionStatement@@Assignment:this.length=this.content.length @TO@ Block@@ThenBody:{  this.content=content.clone();  this.length=this.content.length;} @AT@ 1364 @LENGTH@ 34
---INS Block@@ElseBody:{  this.content=new byte[16];} @TO@ IfStatement@@if (content != null && content.length != 0) {  this.content=content.clone();  this.length=this.content.length;} else {  this.content=new byte[16];} @AT@ 1476 @LENGTH@ 52
------INS ExpressionStatement@@Assignment:this.content=new byte[16] @TO@ Block@@ElseBody:{  this.content=new byte[16];} @AT@ 1490 @LENGTH@ 28
---------INS Assignment@@this.content=new byte[16] @TO@ ExpressionStatement@@Assignment:this.content=new byte[16] @AT@ 1490 @LENGTH@ 27
------------INS FieldAccess@@this.content @TO@ Assignment@@this.content=new byte[16] @AT@ 1490 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.content @AT@ 1490 @LENGTH@ 4
---------------INS SimpleName@@content @TO@ FieldAccess@@this.content @AT@ 1495 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@this.content=new byte[16] @AT@ 1502 @LENGTH@ 1
------------INS ArrayCreation@@new byte[16] @TO@ Assignment@@this.content=new byte[16] @AT@ 1505 @LENGTH@ 12
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[16] @AT@ 1509 @LENGTH@ 8
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 1509 @LENGTH@ 4
---------------INS NumberLiteral@@16 @TO@ ArrayCreation@@new byte[16] @AT@ 1514 @LENGTH@ 2


DEL ExpressionStatement@@MethodInvocation:orbInitializers.add("org.jboss.as.jdkorb.fixme.MockInitializer") @AT@ 13075 @LENGTH@ 65
---DEL MethodInvocation@@orbInitializers.add("org.jboss.as.jdkorb.fixme.MockInitializer") @AT@ 13075 @LENGTH@ 64
------DEL SimpleName@@Name:orbInitializers @AT@ 13075 @LENGTH@ 15
------DEL SimpleName@@MethodName:add:["org.jboss.as.jdkorb.fixme.MockInitializer"] @AT@ 13091 @LENGTH@ 48
---------DEL StringLiteral@@"org.jboss.as.jdkorb.fixme.MockInitializer" @AT@ 13095 @LENGTH@ 43


UPD IfStatement@@if (PrimitiveObjectInspectorUtils.comparePrimitiveObjects(caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]),caseOI,caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i]),caseOI)) {  Object caseValue=arguments[i + 1].get();  return returnOIResolver.convertIfNecessary(caseValue,argumentOIs[i + 1]);} @TO@ if (PrimitiveObjectInspectorUtils.comparePrimitiveObjects(caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]),caseOI,caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i],false),caseOI)) {  Object caseValue=arguments[i + 1].get();  return returnOIResolver.convertIfNecessary(caseValue,argumentOIs[i + 1]);} @AT@ 4209 @LENGTH@ 365
---UPD MethodInvocation@@PrimitiveObjectInspectorUtils.comparePrimitiveObjects(caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]),caseOI,caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i]),caseOI) @TO@ PrimitiveObjectInspectorUtils.comparePrimitiveObjects(caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]),caseOI,caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i],false),caseOI) @AT@ 4213 @LENGTH@ 216
------UPD SimpleName@@MethodName:comparePrimitiveObjects:[caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]), caseOI, caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i]), caseOI] @TO@ MethodName:comparePrimitiveObjects:[caseOIResolver.convertIfNecessary(exprValue,argumentOIs[0]), caseOI, caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i],false), caseOI] @AT@ 4243 @LENGTH@ 186
---------UPD MethodInvocation@@caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i]) @TO@ caseOIResolver.convertIfNecessary(caseKey,argumentOIs[i],false) @AT@ 4362 @LENGTH@ 58
------------UPD SimpleName@@MethodName:convertIfNecessary:[caseKey, argumentOIs[i]] @TO@ MethodName:convertIfNecessary:[caseKey, argumentOIs[i], false] @AT@ 4377 @LENGTH@ 43
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:convertIfNecessary:[caseKey, argumentOIs[i]] @AT@ 4421 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]EventSourceSupport,  @TO@ [public]EventSourceSupport,  @AT@ 7641 @LENGTH@ 1228
---DEL Modifier@@static @AT@ 7648 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Supplied URI '{}' contains unsafe characters, please check encoding",uri) @TO@ MethodInvocation:LOG.warn("Supplied URI '{}' contains unsafe characters, please check encoding",URISupport.sanitizeUri(uri)) @AT@ 2514 @LENGTH@ 85
---UPD MethodInvocation@@LOG.warn("Supplied URI '{}' contains unsafe characters, please check encoding",uri) @TO@ LOG.warn("Supplied URI '{}' contains unsafe characters, please check encoding",URISupport.sanitizeUri(uri)) @AT@ 2514 @LENGTH@ 84
------UPD SimpleName@@MethodName:warn:["Supplied URI '{}' contains unsafe characters, please check encoding", uri] @TO@ MethodName:warn:["Supplied URI '{}' contains unsafe characters, please check encoding", URISupport.sanitizeUri(uri)] @AT@ 2518 @LENGTH@ 80
---------INS MethodInvocation@@URISupport.sanitizeUri(uri) @TO@ SimpleName@@MethodName:warn:["Supplied URI '{}' contains unsafe characters, please check encoding", uri] @AT@ 2661 @LENGTH@ 27
------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 2661 @LENGTH@ 10
------------INS SimpleName@@MethodName:sanitizeUri:[uri] @TO@ MethodInvocation@@URISupport.sanitizeUri(uri) @AT@ 2672 @LENGTH@ 16
---------------MOV SimpleName@@uri @TO@ SimpleName@@MethodName:sanitizeUri:[uri] @AT@ 2594 @LENGTH@ 3


INS TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 3043 @LENGTH@ 304
---MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown(managementClient,containerId) @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3043 @LENGTH@ 46
---INS Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3134 @LENGTH@ 213
------INS TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3152 @LENGTH@ 181
---------INS ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3178 @LENGTH@ 35
------------MOV MethodInvocation@@remove(address1) @TO@ ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @AT@ 3102 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:remove:[address1] @TO@ MethodName:remove:[address1, managementClient] @AT@ 3102 @LENGTH@ 16
------------------INS SimpleName@@managementClient @TO@ SimpleName@@MethodName:remove:[address1] @AT@ 3195 @LENGTH@ 16
---------INS Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3240 @LENGTH@ 93
------------MOV ExpressionStatement@@MethodInvocation:removeModule("org/jboss/ironjacamar/ra16out1",true) @TO@ Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3132 @LENGTH@ 53


UPD MethodDeclaration@@public, void, MethodName:resetMatchLocalityForAllHeldContainers,  @TO@ public, void, MethodName:dagComplete,  @AT@ 12013 @LENGTH@ 307
---UPD SimpleName@@MethodName:resetMatchLocalityForAllHeldContainers @TO@ MethodName:dagComplete @AT@ 12025 @LENGTH@ 38


UPD VariableDeclarationStatement@@MetadataListStructObjectInspector result=cached.get(columnNames); @TO@ MetadataListStructObjectInspector result=cached.get(key); @AT@ 2180 @LENGTH@ 67
---UPD VariableDeclarationFragment@@result=cached.get(columnNames) @TO@ result=cached.get(key) @AT@ 2214 @LENGTH@ 32
------UPD MethodInvocation@@cached.get(columnNames) @TO@ cached.get(key) @AT@ 2223 @LENGTH@ 23
---------UPD SimpleName@@MethodName:get:[columnNames] @TO@ MethodName:get:[key] @AT@ 2230 @LENGTH@ 16
------------UPD SimpleName@@columnNames @TO@ key @AT@ 2234 @LENGTH@ 11


UPD MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @TO@ public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi, boolean reuse,  @AT@ 7881 @LENGTH@ 662
---UPD IfStatement@@if (oi == returnObjectInspector) {  converted=o;} else {  if (o == null) {    return null;  }  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  Converter converter=converters.get(oi);  if (converter == null) {    converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);    converters.put(oi,converter);  }  converted=converter.convert(o);} @TO@ if (oi == returnObjectInspector) {  converted=o;} else {  if (o == null) {    return null;  }  Converter converter=null;  if (reuse) {    if (converters == null) {      converters=new HashMap<ObjectInspector,Converter>();    }    converter=converters.get(oi);  }  if (converter == null) {    converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);    if (reuse) {      converters.put(oi,converter);    }  }  converted=converter.convert(o);} @AT@ 7983 @LENGTH@ 530
------UPD Block@@ElseBody:{  if (o == null) {    return null;  }  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  Converter converter=converters.get(oi);  if (converter == null) {    converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);    converters.put(oi,converter);  }  converted=converter.convert(o);} @TO@ ElseBody:{  if (o == null) {    return null;  }  Converter converter=null;  if (reuse) {    if (converters == null) {      converters=new HashMap<ObjectInspector,Converter>();    }    converter=converters.get(oi);  }  if (converter == null) {    converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);    if (reuse) {      converters.put(oi,converter);    }  }  converted=converter.convert(o);} @AT@ 8054 @LENGTH@ 459
---------UPD VariableDeclarationStatement@@Converter converter=converters.get(oi); @TO@ Converter converter=null; @AT@ 8235 @LENGTH@ 41
------------UPD VariableDeclarationFragment@@converter=converters.get(oi) @TO@ converter=null @AT@ 8245 @LENGTH@ 30
---------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@converter=converters.get(oi) @AT@ 8414 @LENGTH@ 4
---------UPD IfStatement@@if (converter == null) {  converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);  converters.put(oi,converter);} @TO@ if (converter == null) {  converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);  if (reuse) {    converters.put(oi,converter);  }} @AT@ 8285 @LENGTH@ 178
------------UPD Block@@ThenBody:{  converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);  converters.put(oi,converter);} @TO@ ThenBody:{  converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);  if (reuse) {    converters.put(oi,converter);  }} @AT@ 8308 @LENGTH@ 155
---------------INS IfStatement@@if (reuse) {  converters.put(oi,converter);} @TO@ Block@@ThenBody:{  converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);  converters.put(oi,converter);} @AT@ 8728 @LENGTH@ 67
------------------INS SimpleName@@reuse @TO@ IfStatement@@if (reuse) {  converters.put(oi,converter);} @AT@ 8732 @LENGTH@ 5
------------------INS Block@@ThenBody:{  converters.put(oi,converter);} @TO@ IfStatement@@if (reuse) {  converters.put(oi,converter);} @AT@ 8739 @LENGTH@ 56
---------------------MOV ExpressionStatement@@MethodInvocation:converters.put(oi,converter) @TO@ Block@@ThenBody:{  converters.put(oi,converter);} @AT@ 8423 @LENGTH@ 30
---------INS IfStatement@@if (reuse) {  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @TO@ Block@@ElseBody:{  if (o == null) {    return null;  }  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  Converter converter=converters.get(oi);  if (converter == null) {    converter=ObjectInspectorConverters.getConverter(oi,returnObjectInspector);    converters.put(oi,converter);  }  converted=converter.convert(o);} @AT@ 8428 @LENGTH@ 152
------------INS SimpleName@@reuse @TO@ IfStatement@@if (reuse) {  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @AT@ 8432 @LENGTH@ 5
------------INS Block@@ThenBody:{  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @TO@ IfStatement@@if (reuse) {  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @AT@ 8439 @LENGTH@ 141
---------------MOV IfStatement@@if (converters == null) {  converters=new HashMap<ObjectInspector,Converter>();} @TO@ Block@@ThenBody:{  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @AT@ 8124 @LENGTH@ 101
---------------INS ExpressionStatement@@Assignment:converter=converters.get(oi) @TO@ Block@@ThenBody:{  if (converters == null) {    converters=new HashMap<ObjectInspector,Converter>();  }  converter=converters.get(oi);} @AT@ 8539 @LENGTH@ 31
------------------INS Assignment@@converter=converters.get(oi) @TO@ ExpressionStatement@@Assignment:converter=converters.get(oi) @AT@ 8539 @LENGTH@ 30
---------------------MOV MethodInvocation@@converters.get(oi) @TO@ Assignment@@converter=converters.get(oi) @AT@ 8257 @LENGTH@ 18
---------------------INS SimpleName@@converter @TO@ Assignment@@converter=converters.get(oi) @AT@ 8539 @LENGTH@ 9
---------------------INS Operator@@= @TO@ Assignment@@converter=converters.get(oi) @AT@ 8548 @LENGTH@ 1
---INS SingleVariableDeclaration@@boolean reuse @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 8197 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean reuse @AT@ 8197 @LENGTH@ 7
------INS SimpleName@@reuse @TO@ SingleVariableDeclaration@@boolean reuse @AT@ 8205 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2076 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 2076 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2076 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2096 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 2101 @LENGTH@ 11


UPD VariableDeclarationStatement@@final List<SortTermWithDescending> sortTermsWithDescending=new ArrayList<>(sortTerm.length); @TO@ final List<SortTermWithDescending> sortTermsWithDescending=new ArrayList<SortTermWithDescending>(sortTerm.length); @AT@ 2433 @LENGTH@ 94
---UPD VariableDeclarationFragment@@sortTermsWithDescending=new ArrayList<>(sortTerm.length) @TO@ sortTermsWithDescending=new ArrayList<SortTermWithDescending>(sortTerm.length) @AT@ 2468 @LENGTH@ 58
------UPD ClassInstanceCreation@@ArrayList<>[sortTerm.length] @TO@ ArrayList<SortTermWithDescending>[sortTerm.length] @AT@ 2494 @LENGTH@ 32
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<SortTermWithDescending> @AT@ 2498 @LENGTH@ 11
------------INS SimpleType@@SortTermWithDescending @TO@ ParameterizedType@@ArrayList<> @AT@ 2506 @LENGTH@ 22


INS TypeDeclaration@@[@BasePathAwareController, static]BooksHtmlController,  @TO@ TypeDeclaration@@[@Configuration, @EnableJpaRepositories, @EnableTransactionManagement, public]JpaRepositoryConfig, JpaInfrastructureConfig @AT@ 1647 @LENGTH@ 213
---INS MarkerAnnotation@@@BasePathAwareController @TO@ TypeDeclaration@@[@BasePathAwareController, static]BooksHtmlController,  @AT@ 1647 @LENGTH@ 24
---INS Modifier@@static @TO@ TypeDeclaration@@[@BasePathAwareController, static]BooksHtmlController,  @AT@ 1673 @LENGTH@ 6
---INS SimpleName@@ClassName:BooksHtmlController @TO@ TypeDeclaration@@[@BasePathAwareController, static]BooksHtmlController,  @AT@ 1686 @LENGTH@ 19


UPD ReturnStatement@@InfixExpression:boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId && clientSecret == other.clientSecret && authSecureStorage == other.authSecureStorage @TO@ InfixExpression:boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && Objects.equals(clientId,other.clientId) && Objects.equals(clientSecret,other.clientSecret) && authSecureStorage == other.authSecureStorage @AT@ 7725 @LENGTH@ 328
---UPD InfixExpression@@boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId && clientSecret == other.clientSecret && authSecureStorage == other.authSecureStorage @TO@ boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && Objects.equals(clientId,other.clientId) && Objects.equals(clientSecret,other.clientSecret) && authSecureStorage == other.authSecureStorage @AT@ 7732 @LENGTH@ 320
------UPD InfixExpression@@boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId && clientSecret == other.clientSecret @TO@ boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && Objects.equals(clientId,other.clientId) && Objects.equals(clientSecret,other.clientSecret) @AT@ 7732 @LENGTH@ 256
---------UPD InfixExpression@@boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId @TO@ boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && Objects.equals(clientId,other.clientId) @AT@ 7732 @LENGTH@ 202
------------DEL InfixExpression@@clientId == other.clientId @AT@ 7908 @LENGTH@ 26
---------------DEL SimpleName@@clientId @AT@ 7908 @LENGTH@ 8
---------------DEL Operator@@== @AT@ 7916 @LENGTH@ 2
---------------DEL QualifiedName@@other.clientId @AT@ 7920 @LENGTH@ 14
------------INS MethodInvocation@@Objects.equals(clientId,other.clientId) @TO@ InfixExpression@@boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId @AT@ 7934 @LENGTH@ 40
---------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(clientId,other.clientId) @AT@ 7934 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[clientId, other.clientId] @TO@ MethodInvocation@@Objects.equals(clientId,other.clientId) @AT@ 7942 @LENGTH@ 32
------------------INS SimpleName@@clientId @TO@ SimpleName@@MethodName:equals:[clientId, other.clientId] @AT@ 7949 @LENGTH@ 8
------------------INS QualifiedName@@other.clientId @TO@ SimpleName@@MethodName:equals:[clientId, other.clientId] @AT@ 7959 @LENGTH@ 14
---------------------MOV SimpleName@@other @TO@ QualifiedName@@other.clientId @AT@ 7920 @LENGTH@ 5
---------------------MOV SimpleName@@clientId @TO@ QualifiedName@@other.clientId @AT@ 7926 @LENGTH@ 8
---------DEL InfixExpression@@clientSecret == other.clientSecret @AT@ 7954 @LENGTH@ 34
------------DEL SimpleName@@clientSecret @AT@ 7954 @LENGTH@ 12
------------DEL Operator@@== @AT@ 7966 @LENGTH@ 2
------------DEL QualifiedName@@other.clientSecret @AT@ 7970 @LENGTH@ 18
---------INS MethodInvocation@@Objects.equals(clientSecret,other.clientSecret) @TO@ InfixExpression@@boxConfig == other.boxConfig && connectionManagerBuilder == other.connectionManagerBuilder && httpParams == other.httpParams && clientId == other.clientId && clientSecret == other.clientSecret @AT@ 7994 @LENGTH@ 48
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(clientSecret,other.clientSecret) @AT@ 7994 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[clientSecret, other.clientSecret] @TO@ MethodInvocation@@Objects.equals(clientSecret,other.clientSecret) @AT@ 8002 @LENGTH@ 40
---------------INS SimpleName@@clientSecret @TO@ SimpleName@@MethodName:equals:[clientSecret, other.clientSecret] @AT@ 8009 @LENGTH@ 12
---------------INS QualifiedName@@other.clientSecret @TO@ SimpleName@@MethodName:equals:[clientSecret, other.clientSecret] @AT@ 8023 @LENGTH@ 18
------------------MOV SimpleName@@other @TO@ QualifiedName@@other.clientSecret @AT@ 7970 @LENGTH@ 5
------------------MOV SimpleName@@clientSecret @TO@ QualifiedName@@other.clientSecret @AT@ 7976 @LENGTH@ 12


MOV MethodDeclaration@@private, voidMethodName:Constants,  @TO@ TypeDeclaration@@[public, final]Constants,  @AT@ 912 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:badRequest(null,throwable) @TO@ MethodInvocation:badRequest(new HttpHeaders(),throwable) @AT@ 5846 @LENGTH@ 35
---UPD MethodInvocation@@badRequest(null,throwable) @TO@ badRequest(new HttpHeaders(),throwable) @AT@ 5853 @LENGTH@ 27
------UPD SimpleName@@MethodName:badRequest:[null, throwable] @TO@ MethodName:badRequest:[new HttpHeaders(), throwable] @AT@ 5853 @LENGTH@ 27
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ SimpleName@@MethodName:badRequest:[null, throwable] @AT@ 5864 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 5864 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 5868 @LENGTH@ 11
---------DEL NullLiteral@@null @AT@ 5864 @LENGTH@ 4


UPD FieldDeclaration@@protected, long, [readLockMinAge=0] @TO@ protected, long, [readLockMinAge] @AT@ 6777 @LENGTH@ 34
---UPD VariableDeclarationFragment@@readLockMinAge=0 @TO@ readLockMinAge @AT@ 6792 @LENGTH@ 18
------DEL NumberLiteral@@0 @AT@ 6809 @LENGTH@ 1


UPD ReturnStatement@@ParenthesizedExpression:(files.get(id)) @TO@ MethodInvocation:files.get(id) @AT@ 5201 @LENGTH@ 23
---DEL ParenthesizedExpression@@(files.get(id)) @AT@ 5208 @LENGTH@ 15
---MOV MethodInvocation@@files.get(id) @TO@ ReturnStatement@@ParenthesizedExpression:(files.get(id)) @AT@ 5209 @LENGTH@ 13


UPD SynchronizedStatement@@synchronized (routes) {  this.routes.removeAll(routes);} @TO@ synchronized (this.routes) {  this.routes.removeAll(routes);} @AT@ 34486 @LENGTH@ 76
---INS FieldAccess@@this.routes @TO@ SynchronizedStatement@@synchronized (routes) {  this.routes.removeAll(routes);} @AT@ 34500 @LENGTH@ 11
------INS ThisExpression@@this @TO@ FieldAccess@@this.routes @AT@ 34500 @LENGTH@ 4
------INS SimpleName@@routes @TO@ FieldAccess@@this.routes @AT@ 34505 @LENGTH@ 6
---DEL SimpleName@@routes @AT@ 34500 @LENGTH@ 6


UPD IfStatement@@if (server != null && server.isRegistered(name)) {  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} else {  return null;} @TO@ if (isRegistered(name)) {  ObjectName on=mbeansRegistered.get(name);  return MBeanServerInvocationHandler.newProxyInstance(server,on != null ? on : name,mbean,false);} else {  return null;} @AT@ 10293 @LENGTH@ 196
---DEL InfixExpression@@server != null && server.isRegistered(name) @AT@ 10297 @LENGTH@ 43
------DEL InfixExpression@@server != null @AT@ 10297 @LENGTH@ 14
---------DEL SimpleName@@server @AT@ 10297 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 10303 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 10307 @LENGTH@ 4
------DEL Operator@@&& @AT@ 10311 @LENGTH@ 2
------DEL MethodInvocation@@server.isRegistered(name) @AT@ 10315 @LENGTH@ 25
---------DEL SimpleName@@Name:server @AT@ 10315 @LENGTH@ 6
---INS MethodInvocation@@isRegistered(name) @TO@ IfStatement@@if (server != null && server.isRegistered(name)) {  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} else {  return null;} @AT@ 10297 @LENGTH@ 18
------MOV SimpleName@@MethodName:isRegistered:[name] @TO@ MethodInvocation@@isRegistered(name) @AT@ 10322 @LENGTH@ 18
---UPD Block@@ThenBody:{  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} @TO@ ThenBody:{  ObjectName on=mbeansRegistered.get(name);  return MBeanServerInvocationHandler.newProxyInstance(server,on != null ? on : name,mbean,false);} @AT@ 10342 @LENGTH@ 105
------INS VariableDeclarationStatement@@ObjectName on=mbeansRegistered.get(name); @TO@ Block@@ThenBody:{  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} @AT@ 10331 @LENGTH@ 43
---------INS SimpleType@@ObjectName @TO@ VariableDeclarationStatement@@ObjectName on=mbeansRegistered.get(name); @AT@ 10331 @LENGTH@ 10
---------INS VariableDeclarationFragment@@on=mbeansRegistered.get(name) @TO@ VariableDeclarationStatement@@ObjectName on=mbeansRegistered.get(name); @AT@ 10342 @LENGTH@ 31
------------INS SimpleName@@on @TO@ VariableDeclarationFragment@@on=mbeansRegistered.get(name) @AT@ 10342 @LENGTH@ 2
------------INS MethodInvocation@@mbeansRegistered.get(name) @TO@ VariableDeclarationFragment@@on=mbeansRegistered.get(name) @AT@ 10347 @LENGTH@ 26
---------------INS SimpleName@@Name:mbeansRegistered @TO@ MethodInvocation@@mbeansRegistered.get(name) @AT@ 10347 @LENGTH@ 16
---------------INS SimpleName@@MethodName:get:[name] @TO@ MethodInvocation@@mbeansRegistered.get(name) @AT@ 10364 @LENGTH@ 9
------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:get:[name] @AT@ 10368 @LENGTH@ 4
------UPD ReturnStatement@@MethodInvocation:MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false) @TO@ MethodInvocation:MBeanServerInvocationHandler.newProxyInstance(server,on != null ? on : name,mbean,false) @AT@ 10356 @LENGTH@ 81
---------UPD MethodInvocation@@MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false) @TO@ MBeanServerInvocationHandler.newProxyInstance(server,on != null ? on : name,mbean,false) @AT@ 10363 @LENGTH@ 73
------------UPD SimpleName@@MethodName:newProxyInstance:[server, name, mbean, false] @TO@ MethodName:newProxyInstance:[server, on != null ? on : name, mbean, false] @AT@ 10392 @LENGTH@ 44
---------------DEL SimpleName@@name @AT@ 10417 @LENGTH@ 4
---------------INS ConditionalExpression@@on != null ? on : name @TO@ SimpleName@@MethodName:newProxyInstance:[server, name, mbean, false] @AT@ 10448 @LENGTH@ 22
------------------INS InfixExpression@@on != null @TO@ ConditionalExpression@@on != null ? on : name @AT@ 10448 @LENGTH@ 10
---------------------INS SimpleName@@on @TO@ InfixExpression@@on != null @AT@ 10448 @LENGTH@ 2
---------------------INS Operator@@!= @TO@ InfixExpression@@on != null @AT@ 10450 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@on != null @AT@ 10454 @LENGTH@ 4
------------------INS SimpleName@@on @TO@ ConditionalExpression@@on != null ? on : name @AT@ 10461 @LENGTH@ 2
------------------INS SimpleName@@name @TO@ ConditionalExpression@@on != null ? on : name @AT@ 10466 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"httpClientMaxThreads\": { \"type\": \"integer\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 1962 @LENGTH@ 79
---UPD MethodInvocation@@assertTrue(json.contains("\"httpClientMaxThreads\": { \"type\": \"integer\"")) @TO@ assertTrue(json.contains("\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 1962 @LENGTH@ 78
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"httpClientMaxThreads\": { \"type\": \"integer\"")] @TO@ MethodName:assertTrue:[json.contains("\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @AT@ 1962 @LENGTH@ 78
---------UPD MethodInvocation@@json.contains("\"httpClientMaxThreads\": { \"type\": \"integer\"") @TO@ json.contains("\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\"") @AT@ 1973 @LENGTH@ 66
------------UPD SimpleName@@MethodName:contains:["\"httpClientMaxThreads\": { \"type\": \"integer\""] @TO@ MethodName:contains:["\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\""] @AT@ 1978 @LENGTH@ 61
---------------UPD StringLiteral@@"\"httpClientMaxThreads\": { \"type\": \"integer\"" @TO@ "\"httpClientMaxThreads\": { \"kind\": \"parameter\", \"type\": \"integer\"" @AT@ 1987 @LENGTH@ 51


INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testBeanstalkException, Exception,  @AT@ 3707 @LENGTH@ 47
---INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 3711 @LENGTH@ 10
------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 3711 @LENGTH@ 1
------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 3712 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 3723 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3737 @LENGTH@ 7


INS IfStatement@@if (skip) {  log.debug("Skipping server start");  return;} @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6594 @LENGTH@ 89
---INS SimpleName@@skip @TO@ IfStatement@@if (skip) {  log.debug("Skipping server start");  return;} @AT@ 6598 @LENGTH@ 4
---INS Block@@ThenBody:{  log.debug("Skipping server start");  return;} @TO@ IfStatement@@if (skip) {  log.debug("Skipping server start");  return;} @AT@ 6604 @LENGTH@ 79
------INS ExpressionStatement@@MethodInvocation:log.debug("Skipping server start") @TO@ Block@@ThenBody:{  log.debug("Skipping server start");  return;} @AT@ 6618 @LENGTH@ 35
---------INS MethodInvocation@@log.debug("Skipping server start") @TO@ ExpressionStatement@@MethodInvocation:log.debug("Skipping server start") @AT@ 6618 @LENGTH@ 34
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("Skipping server start") @AT@ 6618 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Skipping server start"] @TO@ MethodInvocation@@log.debug("Skipping server start") @AT@ 6622 @LENGTH@ 30
---------------INS StringLiteral@@"Skipping server start" @TO@ SimpleName@@MethodName:debug:["Skipping server start"] @AT@ 6628 @LENGTH@ 23
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  log.debug("Skipping server start");  return;} @AT@ 6666 @LENGTH@ 7


UPD MethodDeclaration@@void, MethodName:getFileData, String fileName, LinkedList<DiskRange> ranges,  @TO@ void, MethodName:getFileData, String fileName, LinkedList<DiskRange> ranges, long base,  @AT@ 1131 @LENGTH@ 59
---INS SingleVariableDeclaration@@long base @TO@ MethodDeclaration@@void, MethodName:getFileData, String fileName, LinkedList<DiskRange> ranges,  @AT@ 1266 @LENGTH@ 9
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long base @AT@ 1266 @LENGTH@ 4
------INS SimpleName@@base @TO@ SingleVariableDeclaration@@long base @AT@ 1271 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testSendCsutomConnectionFactory, Exception,  @TO@ public, void, MethodName:testSendCustomConnectionFactory, Exception,  @AT@ 4182 @LENGTH@ 550
---UPD SimpleName@@MethodName:testSendCsutomConnectionFactory @TO@ MethodName:testSendCustomConnectionFactory @AT@ 4194 @LENGTH@ 31


INS IfStatement@@if (data.decRef() != 0) return; @TO@ MethodDeclaration@@public, void, MethodName:returnData, StreamBuffer data,  @AT@ 17385 @LENGTH@ 31
---INS InfixExpression@@data.decRef() != 0 @TO@ IfStatement@@if (data.decRef() != 0) return; @AT@ 17389 @LENGTH@ 18
------INS MethodInvocation@@data.decRef() @TO@ InfixExpression@@data.decRef() != 0 @AT@ 17389 @LENGTH@ 13
---------INS SimpleName@@Name:data @TO@ MethodInvocation@@data.decRef() @AT@ 17389 @LENGTH@ 4
---------INS SimpleName@@MethodName:decRef:[] @TO@ MethodInvocation@@data.decRef() @AT@ 17394 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@data.decRef() != 0 @AT@ 17402 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@data.decRef() != 0 @AT@ 17406 @LENGTH@ 1
---INS Block@@ThenBody:return; @TO@ IfStatement@@if (data.decRef() != 0) return; @AT@ 17409 @LENGTH@ 7
------INS ReturnStatement@@ @TO@ Block@@ThenBody:return; @AT@ 17409 @LENGTH@ 7


UPD MethodDeclaration@@public, StreamBuffer, MethodName:cacheOrGet, CacheKey key, StreamBuffer value,  @TO@ public, StreamBuffer[], MethodName:cacheOrGet, CacheKey key, StreamBuffer[] value,  @AT@ 999 @LENGTH@ 88
---DEL SimpleType@@StreamBuffer @AT@ 1006 @LENGTH@ 12
---INS ArrayType@@StreamBuffer[] @TO@ MethodDeclaration@@public, StreamBuffer, MethodName:cacheOrGet, CacheKey key, StreamBuffer value,  @AT@ 1011 @LENGTH@ 14
------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1011 @LENGTH@ 12
---UPD SingleVariableDeclaration@@StreamBuffer value @TO@ StreamBuffer[] value @AT@ 1044 @LENGTH@ 18
------DEL SimpleType@@StreamBuffer @AT@ 1044 @LENGTH@ 12
------INS ArrayType@@StreamBuffer[] @TO@ SingleVariableDeclaration@@StreamBuffer value @AT@ 1051 @LENGTH@ 14
---------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1051 @LENGTH@ 12


UPD IfStatement@@if (RecordReaderUtils.isDictionary(sctx.kind,ctx.encoding)) {  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting stripe-level stream [" + sctx.kind + ", "+ ctx.encoding+ "] for"+ " column "+ ctx.colIx+ " RG "+ rgIx+ " at "+ sctx.offset+ ", "+ sctx.length);  }  if (sctx.stripeLevelStream == null) {    sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());    sctx.stripeLevelStream.incRef();    iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);  }  if (!isLastRg) {    sctx.stripeLevelStream.incRef();  }  cb=sctx.stripeLevelStream;} else {  long cOffset=index.getPositions(sctx.streamIndexOffset) + sctx.offset, nextCOffset=isLastRg ? sctx.length : nextIndex.getPositions(sctx.streamIndexOffset), endCOffset=RecordReaderUtils.estimateRgEndOffset(isCompressed,isLastRg,nextCOffset,sctx.length,bufferSize) + sctx.offset;  cb=new StreamBuffer(sctx.kind.getNumber());  cb.incRef();  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting data for column " + ctx.colIx + " "+ (isLastRg ? "last " : "")+ "RG "+ rgIx+ " stream "+ sctx.kind+ " at "+ sctx.offset+ ", "+ sctx.length+ " index position "+ sctx.streamIndexOffset+ ": compressed ["+ cOffset+ ", "+ endCOffset+ ")");  }  boolean isStartOfStream=sctx.bufferIter == null;  DiskRangeList range=isStartOfStream ? iter : sctx.bufferIter;  DiskRangeList next=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb);  sctx.bufferIter=iter=next;} @TO@ if (RecordReaderUtils.isDictionary(sctx.kind,ctx.encoding)) {  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting stripe-level stream [" + sctx.kind + ", "+ ctx.encoding+ "] for"+ " column "+ ctx.colIx+ " RG "+ rgIx+ " at "+ sctx.offset+ ", "+ sctx.length);  }  if (sctx.stripeLevelStream == null) {    sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());    sctx.stripeLevelStream.incRef();    DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);    if (lastCached != null) {      iter=lastCached;    }  }  if (!isLastRg) {    sctx.stripeLevelStream.incRef();  }  cb=sctx.stripeLevelStream;} else {  long cOffset=index.getPositions(sctx.streamIndexOffset) + sctx.offset, nextCOffset=isLastRg ? sctx.length : nextIndex.getPositions(sctx.streamIndexOffset), endCOffset=RecordReaderUtils.estimateRgEndOffset(isCompressed,isLastRg,nextCOffset,sctx.length,bufferSize) + sctx.offset;  cb=new StreamBuffer(sctx.kind.getNumber());  cb.incRef();  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting data for column " + ctx.colIx + " "+ (isLastRg ? "last " : "")+ "RG "+ rgIx+ " stream "+ sctx.kind+ " at "+ sctx.offset+ ", "+ sctx.length+ " index position "+ sctx.streamIndexOffset+ ": compressed ["+ cOffset+ ", "+ endCOffset+ ")");  }  boolean isStartOfStream=sctx.bufferIter == null;  DiskRangeList range=isStartOfStream ? iter : sctx.bufferIter;  DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb);  if (lastCached != null) {    sctx.bufferIter=iter=lastCached;  }} @AT@ 11911 @LENGTH@ 2604
---UPD Block@@ThenBody:{  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting stripe-level stream [" + sctx.kind + ", "+ ctx.encoding+ "] for"+ " column "+ ctx.colIx+ " RG "+ rgIx+ " at "+ sctx.offset+ ", "+ sctx.length);  }  if (sctx.stripeLevelStream == null) {    sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());    sctx.stripeLevelStream.incRef();    iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);  }  if (!isLastRg) {    sctx.stripeLevelStream.incRef();  }  cb=sctx.stripeLevelStream;} @TO@ ThenBody:{  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting stripe-level stream [" + sctx.kind + ", "+ ctx.encoding+ "] for"+ " column "+ ctx.colIx+ " RG "+ rgIx+ " at "+ sctx.offset+ ", "+ sctx.length);  }  if (sctx.stripeLevelStream == null) {    sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());    sctx.stripeLevelStream.incRef();    DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);    if (lastCached != null) {      iter=lastCached;    }  }  if (!isLastRg) {    sctx.stripeLevelStream.incRef();  }  cb=sctx.stripeLevelStream;} @AT@ 11972 @LENGTH@ 1224
------UPD IfStatement@@if (sctx.stripeLevelStream == null) {  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);} @TO@ if (sctx.stripeLevelStream == null) {  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);  if (lastCached != null) {    iter=lastCached;  }} @AT@ 12354 @LENGTH@ 699
---------UPD Block@@ThenBody:{  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);} @TO@ ThenBody:{  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);  if (lastCached != null) {    iter=lastCached;  }} @AT@ 12390 @LENGTH@ 663
------------INS VariableDeclarationStatement@@DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream); @TO@ Block@@ThenBody:{  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);} @AT@ 12863 @LENGTH@ 213
---------------INS SimpleType@@DiskRangeList @TO@ VariableDeclarationStatement@@DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream); @AT@ 12863 @LENGTH@ 13
---------------INS VariableDeclarationFragment@@lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @TO@ VariableDeclarationStatement@@DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream); @AT@ 12877 @LENGTH@ 198
------------------MOV MethodInvocation@@InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @TO@ VariableDeclarationFragment@@lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @AT@ 12870 @LENGTH@ 168
------------------INS SimpleName@@lastCached @TO@ VariableDeclarationFragment@@lastCached=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @AT@ 12877 @LENGTH@ 10
------------UPD ExpressionStatement@@Assignment:iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @TO@ Assignment:iter=lastCached @AT@ 12863 @LENGTH@ 176
------------INS IfStatement@@if (lastCached != null) {  iter=lastCached;} @TO@ Block@@ThenBody:{  sctx.stripeLevelStream=new StreamBuffer(sctx.kind.getNumber());  sctx.stripeLevelStream.incRef();  iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream);} @AT@ 13091 @LENGTH@ 76
---------------INS InfixExpression@@lastCached != null @TO@ IfStatement@@if (lastCached != null) {  iter=lastCached;} @AT@ 13095 @LENGTH@ 18
------------------INS SimpleName@@lastCached @TO@ InfixExpression@@lastCached != null @AT@ 13095 @LENGTH@ 10
------------------INS Operator@@!= @TO@ InfixExpression@@lastCached != null @AT@ 13105 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@lastCached != null @AT@ 13109 @LENGTH@ 4
---------------INS Block@@ThenBody:{  iter=lastCached;} @TO@ IfStatement@@if (lastCached != null) {  iter=lastCached;} @AT@ 13115 @LENGTH@ 52
------------------MOV ExpressionStatement@@Assignment:iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @TO@ Block@@ThenBody:{  iter=lastCached;} @AT@ 12863 @LENGTH@ 176
---------------------UPD Assignment@@iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @TO@ iter=lastCached @AT@ 12863 @LENGTH@ 175
------------------------INS SimpleName@@lastCached @TO@ Assignment@@iter=InStream.uncompressStream(fileName,stripeOffset,iter,sctx.offset,sctx.offset + sctx.length,zcr,codec,bufferSize,cache,sctx.stripeLevelStream) @AT@ 13140 @LENGTH@ 10
---UPD Block@@ElseBody:{  long cOffset=index.getPositions(sctx.streamIndexOffset) + sctx.offset, nextCOffset=isLastRg ? sctx.length : nextIndex.getPositions(sctx.streamIndexOffset), endCOffset=RecordReaderUtils.estimateRgEndOffset(isCompressed,isLastRg,nextCOffset,sctx.length,bufferSize) + sctx.offset;  cb=new StreamBuffer(sctx.kind.getNumber());  cb.incRef();  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting data for column " + ctx.colIx + " "+ (isLastRg ? "last " : "")+ "RG "+ rgIx+ " stream "+ sctx.kind+ " at "+ sctx.offset+ ", "+ sctx.length+ " index position "+ sctx.streamIndexOffset+ ": compressed ["+ cOffset+ ", "+ endCOffset+ ")");  }  boolean isStartOfStream=sctx.bufferIter == null;  DiskRangeList range=isStartOfStream ? iter : sctx.bufferIter;  DiskRangeList next=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb);  sctx.bufferIter=iter=next;} @TO@ ElseBody:{  long cOffset=index.getPositions(sctx.streamIndexOffset) + sctx.offset, nextCOffset=isLastRg ? sctx.length : nextIndex.getPositions(sctx.streamIndexOffset), endCOffset=RecordReaderUtils.estimateRgEndOffset(isCompressed,isLastRg,nextCOffset,sctx.length,bufferSize) + sctx.offset;  cb=new StreamBuffer(sctx.kind.getNumber());  cb.incRef();  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting data for column " + ctx.colIx + " "+ (isLastRg ? "last " : "")+ "RG "+ rgIx+ " stream "+ sctx.kind+ " at "+ sctx.offset+ ", "+ sctx.length+ " index position "+ sctx.streamIndexOffset+ ": compressed ["+ cOffset+ ", "+ endCOffset+ ")");  }  boolean isStartOfStream=sctx.bufferIter == null;  DiskRangeList range=isStartOfStream ? iter : sctx.bufferIter;  DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb);  if (lastCached != null) {    sctx.bufferIter=iter=lastCached;  }} @AT@ 13202 @LENGTH@ 1313
------UPD VariableDeclarationStatement@@DiskRangeList next=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb); @TO@ DiskRangeList lastCached=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb); @AT@ 14270 @LENGTH@ 150
---------UPD VariableDeclarationFragment@@next=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb) @TO@ lastCached=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb) @AT@ 14284 @LENGTH@ 135
------------UPD SimpleName@@next @TO@ lastCached @AT@ 14284 @LENGTH@ 4
------UPD ExpressionStatement@@Assignment:sctx.bufferIter=iter=next @TO@ Assignment:sctx.bufferIter=iter=lastCached @AT@ 14433 @LENGTH@ 30
------INS IfStatement@@if (lastCached != null) {  sctx.bufferIter=iter=lastCached;} @TO@ Block@@ElseBody:{  long cOffset=index.getPositions(sctx.streamIndexOffset) + sctx.offset, nextCOffset=isLastRg ? sctx.length : nextIndex.getPositions(sctx.streamIndexOffset), endCOffset=RecordReaderUtils.estimateRgEndOffset(isCompressed,isLastRg,nextCOffset,sctx.length,bufferSize) + sctx.offset;  cb=new StreamBuffer(sctx.kind.getNumber());  cb.incRef();  if (DebugUtils.isTraceOrcEnabled()) {    LOG.info("Getting data for column " + ctx.colIx + " "+ (isLastRg ? "last " : "")+ "RG "+ rgIx+ " stream "+ sctx.kind+ " at "+ sctx.offset+ ", "+ sctx.length+ " index position "+ sctx.streamIndexOffset+ ": compressed ["+ cOffset+ ", "+ endCOffset+ ")");  }  boolean isStartOfStream=sctx.bufferIter == null;  DiskRangeList range=isStartOfStream ? iter : sctx.bufferIter;  DiskRangeList next=InStream.uncompressStream(fileName,stripeOffset,range,cOffset,endCOffset,zcr,codec,bufferSize,cache,cb);  sctx.bufferIter=iter=next;} @AT@ 14567 @LENGTH@ 130
---------INS InfixExpression@@lastCached != null @TO@ IfStatement@@if (lastCached != null) {  sctx.bufferIter=iter=lastCached;} @AT@ 14571 @LENGTH@ 18
------------INS SimpleName@@lastCached @TO@ InfixExpression@@lastCached != null @AT@ 14571 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@lastCached != null @AT@ 14581 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@lastCached != null @AT@ 14585 @LENGTH@ 4
---------INS Block@@ThenBody:{  sctx.bufferIter=iter=lastCached;} @TO@ IfStatement@@if (lastCached != null) {  sctx.bufferIter=iter=lastCached;} @AT@ 14591 @LENGTH@ 106
------------MOV ExpressionStatement@@Assignment:sctx.bufferIter=iter=next @TO@ Block@@ThenBody:{  sctx.bufferIter=iter=lastCached;} @AT@ 14433 @LENGTH@ 30
---------------UPD Assignment@@sctx.bufferIter=iter=next @TO@ sctx.bufferIter=iter=lastCached @AT@ 14433 @LENGTH@ 29
------------------UPD Assignment@@iter=next @TO@ iter=lastCached @AT@ 14451 @LENGTH@ 11
---------------------UPD SimpleName@@next @TO@ lastCached @AT@ 14458 @LENGTH@ 4


INS MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @TO@ TypeDeclaration@@[public]JwtTokenStore, [TokenStore] @AT@ 4997 @LENGTH@ 342
---INS Modifier@@private @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 4997 @LENGTH@ 7
---INS SimpleType@@OAuth2RefreshToken @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 5005 @LENGTH@ 18
---INS SimpleName@@MethodName:createRefreshToken @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 5024 @LENGTH@ 18
---INS SingleVariableDeclaration@@OAuth2AccessToken encodedRefreshToken @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 5043 @LENGTH@ 37
------INS SimpleType@@OAuth2AccessToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken encodedRefreshToken @AT@ 5043 @LENGTH@ 17
------INS SimpleName@@encodedRefreshToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken encodedRefreshToken @AT@ 5061 @LENGTH@ 19
---INS IfStatement@@if (encodedRefreshToken.getExpiration() != null) {  return new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration());} @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 5086 @LENGTH@ 178
------INS InfixExpression@@encodedRefreshToken.getExpiration() != null @TO@ IfStatement@@if (encodedRefreshToken.getExpiration() != null) {  return new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration());} @AT@ 5090 @LENGTH@ 41
---------INS MethodInvocation@@encodedRefreshToken.getExpiration() @TO@ InfixExpression@@encodedRefreshToken.getExpiration() != null @AT@ 5090 @LENGTH@ 35
------------INS SimpleName@@Name:encodedRefreshToken @TO@ MethodInvocation@@encodedRefreshToken.getExpiration() @AT@ 5090 @LENGTH@ 19
------------INS SimpleName@@MethodName:getExpiration:[] @TO@ MethodInvocation@@encodedRefreshToken.getExpiration() @AT@ 5110 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@encodedRefreshToken.getExpiration() != null @AT@ 5125 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@encodedRefreshToken.getExpiration() != null @AT@ 5127 @LENGTH@ 4
------INS Block@@ThenBody:{  return new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration());} @TO@ IfStatement@@if (encodedRefreshToken.getExpiration() != null) {  return new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration());} @AT@ 5133 @LENGTH@ 131
---------INS ReturnStatement@@ClassInstanceCreation:new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration()) @TO@ Block@@ThenBody:{  return new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration());} @AT@ 5138 @LENGTH@ 119
------------MOV ClassInstanceCreation@@DefaultExpiringOAuth2RefreshToken[encodedRefreshToken.getValue(), encodedRefreshToken.getExpiration()] @TO@ ReturnStatement@@ClassInstanceCreation:new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration()) @AT@ 4235 @LENGTH@ 110
---INS ReturnStatement@@ClassInstanceCreation:new DefaultOAuth2RefreshToken(encodedRefreshToken.getValue()) @TO@ MethodDeclaration@@private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2AccessToken encodedRefreshToken,  @AT@ 5267 @LENGTH@ 69
------INS ClassInstanceCreation@@DefaultOAuth2RefreshToken[encodedRefreshToken.getValue()] @TO@ ReturnStatement@@ClassInstanceCreation:new DefaultOAuth2RefreshToken(encodedRefreshToken.getValue()) @AT@ 5274 @LENGTH@ 61
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[encodedRefreshToken.getValue()] @AT@ 5274 @LENGTH@ 3
---------INS SimpleType@@DefaultOAuth2RefreshToken @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[encodedRefreshToken.getValue()] @AT@ 5278 @LENGTH@ 25
---------INS MethodInvocation@@encodedRefreshToken.getValue() @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[encodedRefreshToken.getValue()] @AT@ 5304 @LENGTH@ 30
------------INS SimpleName@@Name:encodedRefreshToken @TO@ MethodInvocation@@encodedRefreshToken.getValue() @AT@ 5304 @LENGTH@ 19
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@encodedRefreshToken.getValue() @AT@ 5324 @LENGTH@ 10


UPD Block@@ThenBody:{  holder.close();  renameFile(holder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath()));  }  holder=null;} @TO@ ThenBody:{  holder.close();  Path path=renameFile(holder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));  }  holder=null;} @AT@ 2431 @LENGTH@ 276
---INS VariableDeclarationStatement@@Path path=renameFile(holder.getPath()); @TO@ Block@@ThenBody:{  holder.close();  renameFile(holder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath()));  }  holder=null;} @AT@ 2456 @LENGTH@ 41
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path path=renameFile(holder.getPath()); @AT@ 2456 @LENGTH@ 4
------INS VariableDeclarationFragment@@path=renameFile(holder.getPath()) @TO@ VariableDeclarationStatement@@Path path=renameFile(holder.getPath()); @AT@ 2461 @LENGTH@ 35
---------MOV MethodInvocation@@renameFile(holder.getPath()) @TO@ VariableDeclarationFragment@@path=renameFile(holder.getPath()) @AT@ 2456 @LENGTH@ 28
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=renameFile(holder.getPath()) @AT@ 2461 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:renameFile(holder.getPath()) @AT@ 2456 @LENGTH@ 29
---UPD IfStatement@@if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath()));} @TO@ if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 2561 @LENGTH@ 123
------UPD Block@@ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath()));} @TO@ ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 2594 @LENGTH@ 90
---------UPD ExpressionStatement@@MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath())) @TO@ MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 2600 @LENGTH@ 79
------------UPD MethodInvocation@@storeEventPublisher.publishEvent(new FileWrittenEvent(this,holder.getPath())) @TO@ storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 2600 @LENGTH@ 78
---------------UPD SimpleName@@MethodName:publishEvent:[new FileWrittenEvent(this,holder.getPath())] @TO@ MethodName:publishEvent:[new FileWrittenEvent(this,path)] @AT@ 2620 @LENGTH@ 58
------------------UPD ClassInstanceCreation@@FileWrittenEvent[this, holder.getPath()] @TO@ FileWrittenEvent[this, path] @AT@ 2633 @LENGTH@ 44
---------------------DEL MethodInvocation@@holder.getPath() @AT@ 2660 @LENGTH@ 16
------------------------DEL SimpleName@@Name:holder @AT@ 2660 @LENGTH@ 6
------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 2667 @LENGTH@ 9
---------------------INS SimpleName@@path @TO@ ClassInstanceCreation@@FileWrittenEvent[this, holder.getPath()] @AT@ 2672 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:assertEquals("[ROLE_CLIENT]",extracted.getAuthorities().toString()) @TO@ MethodDeclaration@@public, void, MethodName:extractAuthenticationFromClientToken,  @AT@ 3662 @LENGTH@ 69
---INS MethodInvocation@@assertEquals("[ROLE_CLIENT]",extracted.getAuthorities().toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("[ROLE_CLIENT]",extracted.getAuthorities().toString()) @AT@ 3662 @LENGTH@ 68
------INS SimpleName@@MethodName:assertEquals:["[ROLE_CLIENT]", extracted.getAuthorities().toString()] @TO@ MethodInvocation@@assertEquals("[ROLE_CLIENT]",extracted.getAuthorities().toString()) @AT@ 3662 @LENGTH@ 68
---------INS StringLiteral@@"[ROLE_CLIENT]" @TO@ SimpleName@@MethodName:assertEquals:["[ROLE_CLIENT]", extracted.getAuthorities().toString()] @AT@ 3675 @LENGTH@ 15
---------INS MethodInvocation@@extracted.getAuthorities().toString() @TO@ SimpleName@@MethodName:assertEquals:["[ROLE_CLIENT]", extracted.getAuthorities().toString()] @AT@ 3692 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 3692 @LENGTH@ 26
------------INS SimpleName@@Name:extracted @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 3692 @LENGTH@ 9
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@extracted.getAuthorities().toString() @AT@ 3719 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:ResultSetIterator, ResultSet resultSet, boolean isJDBC4, SQLException,  @TO@ public, voidMethodName:ResultSetIterator, Connection conn, ResultSet resultSet, boolean isJDBC4, SQLException,  @AT@ 1727 @LENGTH@ 879
---INS SingleVariableDeclaration@@Connection conn @TO@ MethodDeclaration@@public, voidMethodName:ResultSetIterator, ResultSet resultSet, boolean isJDBC4, SQLException,  @AT@ 1752 @LENGTH@ 15
------INS SimpleType@@Connection @TO@ SingleVariableDeclaration@@Connection conn @AT@ 1752 @LENGTH@ 10
------INS SimpleName@@conn @TO@ SingleVariableDeclaration@@Connection conn @AT@ 1763 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:this.connection=this.statement.getConnection() @TO@ Assignment:this.connection=conn @AT@ 1912 @LENGTH@ 49
------UPD Assignment@@this.connection=this.statement.getConnection() @TO@ this.connection=conn @AT@ 1912 @LENGTH@ 48
---------DEL MethodInvocation@@this.statement.getConnection() @AT@ 1930 @LENGTH@ 30
------------DEL FieldAccess@@this.statement @AT@ 1930 @LENGTH@ 14
---------------DEL ThisExpression@@this @AT@ 1930 @LENGTH@ 4
---------------DEL SimpleName@@statement @AT@ 1935 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getConnection:[] @AT@ 1945 @LENGTH@ 15
---------INS SimpleName@@conn @TO@ Assignment@@this.connection=this.statement.getConnection() @AT@ 1947 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2194 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 2194 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2194 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2214 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 2219 @LENGTH@ 11


INS MethodDeclaration@@public, String, MethodName:getDataFormatName,  @TO@ TypeDeclaration@@[@Metadata(label="dataformat,transformation"), @XmlRootElement(name="json"), @XmlAccessorType(XmlAccessType.FIELD), public]JsonDataFormat, DataFormatDefinition @AT@ 5627 @LENGTH@ 177
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getDataFormatName,  @AT@ 5627 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getDataFormatName,  @AT@ 5634 @LENGTH@ 6
---INS SimpleName@@MethodName:getDataFormatName @TO@ MethodDeclaration@@public, String, MethodName:getDataFormatName,  @AT@ 5641 @LENGTH@ 17
---INS ReturnStatement@@InfixExpression:"json-" + library.name().toLowerCase() @TO@ MethodDeclaration@@public, String, MethodName:getDataFormatName,  @AT@ 5752 @LENGTH@ 46
------INS InfixExpression@@"json-" + library.name().toLowerCase() @TO@ ReturnStatement@@InfixExpression:"json-" + library.name().toLowerCase() @AT@ 5759 @LENGTH@ 38
---------INS StringLiteral@@"json-" @TO@ InfixExpression@@"json-" + library.name().toLowerCase() @AT@ 5759 @LENGTH@ 7
---------INS Operator@@+ @TO@ InfixExpression@@"json-" + library.name().toLowerCase() @AT@ 5766 @LENGTH@ 1
---------INS MethodInvocation@@library.name().toLowerCase() @TO@ InfixExpression@@"json-" + library.name().toLowerCase() @AT@ 5769 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:name:[] @TO@ MethodInvocation@@library.name().toLowerCase() @AT@ 5769 @LENGTH@ 14
------------INS SimpleName@@Name:library @TO@ MethodInvocation@@library.name().toLowerCase() @AT@ 5769 @LENGTH@ 7
------------INS SimpleName@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@library.name().toLowerCase() @AT@ 5784 @LENGTH@ 13


UPD FieldDeclaration@@private, Document, [document] @TO@ private, transient, Document, [document] @AT@ 1110 @LENGTH@ 26
---INS Modifier@@transient @TO@ FieldDeclaration@@private, Document, [document] @AT@ 1119 @LENGTH@ 9


DEL VariableDeclarationStatement@@Integer posInRHT; @AT@ 9243 @LENGTH@ 17
---DEL SimpleType@@Integer @AT@ 9243 @LENGTH@ 7
---DEL VariableDeclarationFragment@@posInRHT @AT@ 9251 @LENGTH@ 8
------DEL SimpleName@@posInRHT @AT@ 9251 @LENGTH@ 8


INS IfStatement@@if (result == null) {  throw new InvalidTokenException("Invalid access token: " + accessTokenValue);} @TO@ MethodDeclaration@@public, OAuth2Authentication, MethodName:loadAuthentication, String accessTokenValue, AuthenticationException, InvalidTokenException,  @AT@ 10130 @LENGTH@ 138
---INS InfixExpression@@result == null @TO@ IfStatement@@if (result == null) {  throw new InvalidTokenException("Invalid access token: " + accessTokenValue);} @AT@ 10134 @LENGTH@ 14
------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 10134 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 10140 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 10144 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new InvalidTokenException("Invalid access token: " + accessTokenValue);} @TO@ IfStatement@@if (result == null) {  throw new InvalidTokenException("Invalid access token: " + accessTokenValue);} @AT@ 10150 @LENGTH@ 118
------INS ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Invalid access token: " + accessTokenValue) @TO@ Block@@ThenBody:{  throw new InvalidTokenException("Invalid access token: " + accessTokenValue);} @AT@ 10187 @LENGTH@ 77
---------INS ClassInstanceCreation@@InvalidTokenException["Invalid access token: " + accessTokenValue] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Invalid access token: " + accessTokenValue) @AT@ 10193 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid access token: " + accessTokenValue] @AT@ 10193 @LENGTH@ 3
------------INS SimpleType@@InvalidTokenException @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid access token: " + accessTokenValue] @AT@ 10197 @LENGTH@ 21
------------INS InfixExpression@@"Invalid access token: " + accessTokenValue @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid access token: " + accessTokenValue] @AT@ 10219 @LENGTH@ 43
---------------INS StringLiteral@@"Invalid access token: " @TO@ InfixExpression@@"Invalid access token: " + accessTokenValue @AT@ 10219 @LENGTH@ 24
---------------INS Operator@@+ @TO@ InfixExpression@@"Invalid access token: " + accessTokenValue @AT@ 10243 @LENGTH@ 1
---------------INS SimpleName@@accessTokenValue @TO@ InfixExpression@@"Invalid access token: " + accessTokenValue @AT@ 10246 @LENGTH@ 16


UPD SwitchStatement@@switch (primitiveTypeInfo.getPrimitiveCategory()) {case BOOLEAN:{    boolean value=deserializeRead.readBoolean();    if (!(object instanceof Boolean)) {      TestCase.fail("Boolean expected object not Boolean");    }    Boolean expected=(Boolean)object;    if (value != expected) {      TestCase.fail("Boolean field mismatch (expected " + expected + " found "+ value+ ")");    }  }break;case BYTE:{byte value=deserializeRead.readByte();if (!(object instanceof Byte)) {  TestCase.fail("Byte expected object not Byte");}Byte expected=(Byte)object;if (value != expected) {  TestCase.fail("Byte field mismatch (expected " + (int)expected + " found "+ (int)value+ ")");}}break;case SHORT:{short value=deserializeRead.readShort();if (!(object instanceof Short)) {TestCase.fail("Short expected object not Short");}Short expected=(Short)object;if (value != expected) {TestCase.fail("Short field mismatch (expected " + expected + " found "+ value+ ")");}}break;case INT:{int value=deserializeRead.readInt();if (!(object instanceof Integer)) {TestCase.fail("Integer expected object not Integer");}Integer expected=(Integer)object;if (value != expected) {TestCase.fail("Int field mismatch (expected " + expected + " found "+ value+ ")");}}break;case LONG:{long value=deserializeRead.readLong();if (!(object instanceof Long)) {TestCase.fail("Long expected object not Long");}Long expected=(Long)object;if (value != expected) {TestCase.fail("Long field mismatch (expected " + expected + " found "+ value+ ")");}}break;case FLOAT:{float value=deserializeRead.readFloat();Float expected=(Float)object;if (!(object instanceof Float)) {TestCase.fail("Float expected object not Float");}if (value != expected) {TestCase.fail("Float field mismatch (expected " + expected + " found "+ value+ ")");}}break;case DOUBLE:{double value=deserializeRead.readDouble();Double expected=(Double)object;if (!(object instanceof Double)) {TestCase.fail("Double expected object not Double");}if (value != expected) {TestCase.fail("Double field mismatch (expected " + expected + " found "+ value+ ")");}}break;case STRING:{DeserializeRead.ReadStringResults readStringResults=deserializeRead.createReadStringResults();deserializeRead.readString(readStringResults);byte[] stringBytes=Arrays.copyOfRange(readStringResults.bytes,readStringResults.start,readStringResults.start + readStringResults.length);Text text=new Text(stringBytes);String string=text.toString();String expected=(String)object;if (!string.equals(expected)) {TestCase.fail("String field mismatch (expected '" + expected + "' found '"+ string+ "')");}}break;case CHAR:{DeserializeRead.ReadHiveCharResults readHiveCharResults=deserializeRead.createReadHiveCharResults();deserializeRead.readHiveChar(readHiveCharResults);HiveChar hiveChar=readHiveCharResults.getHiveChar();HiveChar expected=(HiveChar)object;if (!hiveChar.equals(expected)) {TestCase.fail("Char field mismatch (expected '" + expected + "' found '"+ hiveChar+ "')");}}break;case VARCHAR:{DeserializeRead.ReadHiveVarcharResults readHiveVarcharResults=deserializeRead.createReadHiveVarcharResults();deserializeRead.readHiveVarchar(readHiveVarcharResults);HiveVarchar hiveVarchar=readHiveVarcharResults.getHiveVarchar();HiveVarchar expected=(HiveVarchar)object;if (!hiveVarchar.equals(expected)) {TestCase.fail("Varchar field mismatch (expected '" + expected + "' found '"+ hiveVarchar+ "')");}}break;case DECIMAL:{DeserializeRead.ReadDecimalResults readDecimalResults=deserializeRead.createReadDecimalResults();deserializeRead.readHiveDecimal(readDecimalResults);HiveDecimal value=readDecimalResults.getHiveDecimal();if (value == null) {TestCase.fail("Decimal field evaluated to NULL");}HiveDecimal expected=(HiveDecimal)object;if (!value.equals(expected)) {DecimalTypeInfo decimalTypeInfo=(DecimalTypeInfo)primitiveTypeInfo;int precision=decimalTypeInfo.getPrecision();int scale=decimalTypeInfo.getScale();TestCase.fail("Decimal field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ") precision "+ precision+ ", scale "+ scale);}}break;case DATE:{DeserializeRead.ReadDateResults readDateResults=deserializeRead.createReadDateResults();deserializeRead.readDate(readDateResults);Date value=readDateResults.getDate();Date expected=(Date)object;if (!value.equals(expected)) {TestCase.fail("Date field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case TIMESTAMP:{DeserializeRead.ReadTimestampResults readTimestampResults=deserializeRead.createReadTimestampResults();deserializeRead.readTimestamp(readTimestampResults);Timestamp value=readTimestampResults.getTimestamp();Timestamp expected=(Timestamp)object;if (!value.equals(expected)) {TestCase.fail("Timestamp field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case INTERVAL_YEAR_MONTH:{DeserializeRead.ReadIntervalYearMonthResults readIntervalYearMonthResults=deserializeRead.createReadIntervalYearMonthResults();deserializeRead.readIntervalYearMonth(readIntervalYearMonthResults);HiveIntervalYearMonth value=readIntervalYearMonthResults.getHiveIntervalYearMonth();HiveIntervalYearMonth expected=(HiveIntervalYearMonth)object;if (!value.equals(expected)) {TestCase.fail("HiveIntervalYearMonth field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case INTERVAL_DAY_TIME:{DeserializeRead.ReadIntervalDayTimeResults readIntervalDayTimeResults=deserializeRead.createReadIntervalDayTimeResults();deserializeRead.readIntervalDayTime(readIntervalDayTimeResults);HiveIntervalDayTime value=readIntervalDayTimeResults.getHiveIntervalDayTime();HiveIntervalDayTime expected=(HiveIntervalDayTime)object;if (!value.equals(expected)) {TestCase.fail("HiveIntervalDayTime field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case BINARY:{DeserializeRead.ReadBinaryResults readBinaryResults=deserializeRead.createReadBinaryResults();deserializeRead.readBinary(readBinaryResults);byte[] byteArray=Arrays.copyOfRange(readBinaryResults.bytes,readBinaryResults.start,readBinaryResults.start + readBinaryResults.length);byte[] expected=(byte[])object;if (byteArray.length != expected.length) {TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");}for (int b=0; b < byteArray.length; b++) {if (byteArray[b] != expected[b]) {TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");}}}break;default :throw new Error("Unknown primitive category " + primitiveTypeInfo.getPrimitiveCategory());} @TO@ switch (primitiveTypeInfo.getPrimitiveCategory()) {case BOOLEAN:{    boolean value=deserializeRead.readBoolean();    if (!(object instanceof Boolean)) {      TestCase.fail("Boolean expected object not Boolean");    }    Boolean expected=(Boolean)object;    if (value != expected) {      TestCase.fail("Boolean field mismatch (expected " + expected + " found "+ value+ ")");    }  }break;case BYTE:{byte value=deserializeRead.readByte();if (!(object instanceof Byte)) {  TestCase.fail("Byte expected object not Byte");}Byte expected=(Byte)object;if (value != expected) {  TestCase.fail("Byte field mismatch (expected " + (int)expected + " found "+ (int)value+ ")");}}break;case SHORT:{short value=deserializeRead.readShort();if (!(object instanceof Short)) {TestCase.fail("Short expected object not Short");}Short expected=(Short)object;if (value != expected) {TestCase.fail("Short field mismatch (expected " + expected + " found "+ value+ ")");}}break;case INT:{int value=deserializeRead.readInt();if (!(object instanceof Integer)) {TestCase.fail("Integer expected object not Integer");}Integer expected=(Integer)object;if (value != expected) {TestCase.fail("Int field mismatch (expected " + expected + " found "+ value+ ")");}}break;case LONG:{long value=deserializeRead.readLong();if (!(object instanceof Long)) {TestCase.fail("Long expected object not Long");}Long expected=(Long)object;if (value != expected) {TestCase.fail("Long field mismatch (expected " + expected + " found "+ value+ ")");}}break;case FLOAT:{float value=deserializeRead.readFloat();Float expected=(Float)object;if (!(object instanceof Float)) {TestCase.fail("Float expected object not Float");}if (value != expected) {TestCase.fail("Float field mismatch (expected " + expected + " found "+ value+ ")");}}break;case DOUBLE:{double value=deserializeRead.readDouble();Double expected=(Double)object;if (!(object instanceof Double)) {TestCase.fail("Double expected object not Double");}if (value != expected) {TestCase.fail("Double field mismatch (expected " + expected + " found "+ value+ ")");}}break;case STRING:{DeserializeRead.ReadStringResults readStringResults=deserializeRead.createReadStringResults();deserializeRead.readString(readStringResults);byte[] stringBytes=Arrays.copyOfRange(readStringResults.bytes,readStringResults.start,readStringResults.start + readStringResults.length);Text text=new Text(stringBytes);String string=text.toString();String expected=(String)object;if (!string.equals(expected)) {TestCase.fail("String field mismatch (expected '" + expected + "' found '"+ string+ "')");}}break;case CHAR:{DeserializeRead.ReadHiveCharResults readHiveCharResults=deserializeRead.createReadHiveCharResults();deserializeRead.readHiveChar(readHiveCharResults);HiveChar hiveChar=readHiveCharResults.getHiveChar();HiveChar expected=(HiveChar)object;if (!hiveChar.equals(expected)) {TestCase.fail("Char field mismatch (expected '" + expected + "' found '"+ hiveChar+ "')");}}break;case VARCHAR:{DeserializeRead.ReadHiveVarcharResults readHiveVarcharResults=deserializeRead.createReadHiveVarcharResults();deserializeRead.readHiveVarchar(readHiveVarcharResults);HiveVarchar hiveVarchar=readHiveVarcharResults.getHiveVarchar();HiveVarchar expected=(HiveVarchar)object;if (!hiveVarchar.equals(expected)) {TestCase.fail("Varchar field mismatch (expected '" + expected + "' found '"+ hiveVarchar+ "')");}}break;case DECIMAL:{DeserializeRead.ReadDecimalResults readDecimalResults=deserializeRead.createReadDecimalResults();deserializeRead.readHiveDecimal(readDecimalResults);HiveDecimal value=readDecimalResults.getHiveDecimal();if (value == null) {TestCase.fail("Decimal field evaluated to NULL");}HiveDecimal expected=(HiveDecimal)object;if (!value.equals(expected)) {DecimalTypeInfo decimalTypeInfo=(DecimalTypeInfo)primitiveTypeInfo;int precision=decimalTypeInfo.getPrecision();int scale=decimalTypeInfo.getScale();TestCase.fail("Decimal field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ") precision "+ precision+ ", scale "+ scale);}}break;case DATE:{DeserializeRead.ReadDateResults readDateResults=deserializeRead.createReadDateResults();deserializeRead.readDate(readDateResults);Date value=readDateResults.getDate();Date expected=(Date)object;if (!value.equals(expected)) {TestCase.fail("Date field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case TIMESTAMP:{DeserializeRead.ReadTimestampResults readTimestampResults=deserializeRead.createReadTimestampResults();deserializeRead.readTimestamp(readTimestampResults);Timestamp value=readTimestampResults.getTimestamp();Timestamp expected=(Timestamp)object;if (!value.equals(expected)) {TestCase.fail("Timestamp field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case INTERVAL_YEAR_MONTH:{DeserializeRead.ReadIntervalYearMonthResults readIntervalYearMonthResults=deserializeRead.createReadIntervalYearMonthResults();deserializeRead.readIntervalYearMonth(readIntervalYearMonthResults);HiveIntervalYearMonth value=readIntervalYearMonthResults.getHiveIntervalYearMonth();HiveIntervalYearMonth expected=(HiveIntervalYearMonth)object;if (!value.equals(expected)) {TestCase.fail("HiveIntervalYearMonth field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case INTERVAL_DAY_TIME:{DeserializeRead.ReadIntervalDayTimeResults readIntervalDayTimeResults=deserializeRead.createReadIntervalDayTimeResults();deserializeRead.readIntervalDayTime(readIntervalDayTimeResults);HiveIntervalDayTime value=readIntervalDayTimeResults.getHiveIntervalDayTime();HiveIntervalDayTime expected=(HiveIntervalDayTime)object;if (!value.equals(expected)) {TestCase.fail("HiveIntervalDayTime field mismatch (expected " + expected.toString() + " found "+ value.toString()+ ")");}}break;case BINARY:{DeserializeRead.ReadBinaryResults readBinaryResults=deserializeRead.createReadBinaryResults();deserializeRead.readBinary(readBinaryResults);byte[] byteArray=Arrays.copyOfRange(readBinaryResults.bytes,readBinaryResults.start,readBinaryResults.start + readBinaryResults.length);byte[] expected=(byte[])object;if (byteArray.length != expected.length) {TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");}for (int b=0; b < byteArray.length; b++) {if (byteArray[b] != expected[b]) {TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");}}}break;default :throw new Error("Unknown primitive category " + primitiveTypeInfo.getPrimitiveCategory());} @AT@ 2447 @LENGTH@ 8367
---UPD IfStatement@@if (byteArray.length != expected.length) {  TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");} @TO@ if (byteArray.length != expected.length) {  TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");} @AT@ 10292 @LENGTH@ 157
------UPD Block@@ThenBody:{  TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");} @TO@ ThenBody:{  TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");} @AT@ 10332 @LENGTH@ 117
---------UPD ExpressionStatement@@MethodInvocation:TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")") @TO@ MethodInvocation:TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")") @AT@ 10344 @LENGTH@ 95
------------UPD MethodInvocation@@TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")") @TO@ TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")") @AT@ 10344 @LENGTH@ 94
---------------UPD SimpleName@@MethodName:fail:["Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")"] @TO@ MethodName:fail:["Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")"] @AT@ 10353 @LENGTH@ 85
------------------UPD InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @TO@ "Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")" @AT@ 10358 @LENGTH@ 79
---------------------INS MethodInvocation@@Arrays.toString(expected) @TO@ InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @AT@ 10130 @LENGTH@ 25
------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 10130 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:toString:[expected] @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 10137 @LENGTH@ 18
---------------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:toString:[expected] @AT@ 10146 @LENGTH@ 8
---------------------INS MethodInvocation@@Arrays.toString(byteArray) @TO@ InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @AT@ 10184 @LENGTH@ 26
------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(byteArray) @AT@ 10184 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:toString:[byteArray] @TO@ MethodInvocation@@Arrays.toString(byteArray) @AT@ 10191 @LENGTH@ 19
---------------------------INS SimpleName@@byteArray @TO@ SimpleName@@MethodName:toString:[byteArray] @AT@ 10200 @LENGTH@ 9
---------------------DEL SimpleName@@expected @AT@ 10399 @LENGTH@ 8
---------------------DEL SimpleName@@byteArray @AT@ 10422 @LENGTH@ 9
---UPD ForStatement@@for (int b=0; b < byteArray.length; b++) {  if (byteArray[b] != expected[b]) {    TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");  }} @TO@ for (int b=0; b < byteArray.length; b++) {  if (byteArray[b] != expected[b]) {    TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");  }} @AT@ 10458 @LENGTH@ 219
------UPD IfStatement@@if (byteArray[b] != expected[b]) {  TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");} @TO@ if (byteArray[b] != expected[b]) {  TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");} @AT@ 10513 @LENGTH@ 154
---------UPD Block@@ThenBody:{  TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")");} @TO@ ThenBody:{  TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")");} @AT@ 10546 @LENGTH@ 121
------------UPD ExpressionStatement@@MethodInvocation:TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")") @TO@ MethodInvocation:TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")") @AT@ 10560 @LENGTH@ 95
---------------UPD MethodInvocation@@TestCase.fail("Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")") @TO@ TestCase.fail("Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")") @AT@ 10560 @LENGTH@ 94
------------------UPD SimpleName@@MethodName:fail:["Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")"] @TO@ MethodName:fail:["Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")"] @AT@ 10569 @LENGTH@ 85
---------------------UPD InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @TO@ "Byte Array field mismatch (expected " + Arrays.toString(expected) + " found "+ Arrays.toString(byteArray)+ ")" @AT@ 10574 @LENGTH@ 79
------------------------INS MethodInvocation@@Arrays.toString(expected) @TO@ InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @AT@ 10394 @LENGTH@ 25
---------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 10394 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:toString:[expected] @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 10401 @LENGTH@ 18
------------------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:toString:[expected] @AT@ 10410 @LENGTH@ 8
------------------------INS MethodInvocation@@Arrays.toString(byteArray) @TO@ InfixExpression@@"Byte Array field mismatch (expected " + expected + " found "+ byteArray+ ")" @AT@ 10448 @LENGTH@ 26
---------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(byteArray) @AT@ 10448 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:toString:[byteArray] @TO@ MethodInvocation@@Arrays.toString(byteArray) @AT@ 10455 @LENGTH@ 19
------------------------------INS SimpleName@@byteArray @TO@ SimpleName@@MethodName:toString:[byteArray] @AT@ 10464 @LENGTH@ 9
------------------------DEL SimpleName@@expected @AT@ 10615 @LENGTH@ 8
------------------------DEL SimpleName@@byteArray @AT@ 10638 @LENGTH@ 9


UPD MethodDeclaration@@private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap,  @TO@ private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap, MessageContext messageContext,  @AT@ 11311 @LENGTH@ 1297
---INS SingleVariableDeclaration@@MessageContext messageContext @TO@ MethodDeclaration@@private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap,  @AT@ 11554 @LENGTH@ 29
------INS SimpleType@@MessageContext @TO@ SingleVariableDeclaration@@MessageContext messageContext @AT@ 11554 @LENGTH@ 14
------INS SimpleName@@messageContext @TO@ SingleVariableDeclaration@@MessageContext messageContext @AT@ 11569 @LENGTH@ 14
---DEL VariableDeclarationStatement@@List<EndpointInterceptor> interceptors=new ArrayList<EndpointInterceptor>(preInterceptors.length + postInterceptors.length + smartInterceptors.length+ 1); @AT@ 11875 @LENGTH@ 157
------DEL VariableDeclarationFragment@@interceptors=new ArrayList<EndpointInterceptor>(preInterceptors.length + postInterceptors.length + smartInterceptors.length+ 1) @AT@ 11901 @LENGTH@ 130
---------DEL ClassInstanceCreation@@ArrayList<EndpointInterceptor>[preInterceptors.length + postInterceptors.length + smartInterceptors.length+ 1] @AT@ 11916 @LENGTH@ 115
------------DEL InfixExpression@@preInterceptors.length + postInterceptors.length + smartInterceptors.length+ 1 @AT@ 11951 @LENGTH@ 79
---------------DEL QualifiedName@@preInterceptors.length @AT@ 11951 @LENGTH@ 22
------------------DEL SimpleName@@preInterceptors @AT@ 11951 @LENGTH@ 15
------------------DEL SimpleName@@length @AT@ 11967 @LENGTH@ 6
---------------DEL QualifiedName@@postInterceptors.length @AT@ 11976 @LENGTH@ 23
------------------DEL SimpleName@@postInterceptors @AT@ 11976 @LENGTH@ 16
------------------DEL SimpleName@@length @AT@ 11993 @LENGTH@ 6
---------------DEL QualifiedName@@smartInterceptors.length @AT@ 12002 @LENGTH@ 24
------------------DEL SimpleName@@smartInterceptors @AT@ 12002 @LENGTH@ 17
------------------DEL SimpleName@@length @AT@ 12020 @LENGTH@ 6
---------------DEL NumberLiteral@@1 @AT@ 12029 @LENGTH@ 1
---INS VariableDeclarationStatement@@List<EndpointInterceptor> interceptors=new ArrayList<EndpointInterceptor>(); @TO@ MethodDeclaration@@private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap,  @AT@ 11889 @LENGTH@ 78
------MOV ParameterizedType@@List<EndpointInterceptor> @TO@ VariableDeclarationStatement@@List<EndpointInterceptor> interceptors=new ArrayList<EndpointInterceptor>(); @AT@ 11875 @LENGTH@ 25
------INS VariableDeclarationFragment@@interceptors=new ArrayList<EndpointInterceptor>() @TO@ VariableDeclarationStatement@@List<EndpointInterceptor> interceptors=new ArrayList<EndpointInterceptor>(); @AT@ 11915 @LENGTH@ 51
---------MOV SimpleName@@interceptors @TO@ VariableDeclarationFragment@@interceptors=new ArrayList<EndpointInterceptor>() @AT@ 11901 @LENGTH@ 12
---------INS ClassInstanceCreation@@ArrayList<EndpointInterceptor>[] @TO@ VariableDeclarationFragment@@interceptors=new ArrayList<EndpointInterceptor>() @AT@ 11930 @LENGTH@ 36
------------MOV New@@new @TO@ ClassInstanceCreation@@ArrayList<EndpointInterceptor>[] @AT@ 11916 @LENGTH@ 3
------------MOV ParameterizedType@@ArrayList<EndpointInterceptor> @TO@ ClassInstanceCreation@@ArrayList<EndpointInterceptor>[] @AT@ 11920 @LENGTH@ 30
---MOV VariableDeclarationStatement@@AddressingEndpointInterceptor addressingInterceptor=new AddressingEndpointInterceptor(version,messageIdStrategy,messageSenders,responseAction,faultAction); @TO@ MethodDeclaration@@private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap,  @AT@ 12038 @LENGTH@ 174
---INS IfStatement@@if (this.smartInterceptors != null) {  for (  SmartEndpointInterceptor smartInterceptor : smartInterceptors) {    if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {      interceptors.add(smartInterceptor);    }  }} @TO@ MethodDeclaration@@private, EndpointInvocationChain, MethodName:getEndpointInvocationChain, Object endpoint, AddressingVersion version, MessageAddressingProperties requestMap,  @AT@ 12334 @LENGTH@ 299
------INS InfixExpression@@this.smartInterceptors != null @TO@ IfStatement@@if (this.smartInterceptors != null) {  for (  SmartEndpointInterceptor smartInterceptor : smartInterceptors) {    if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {      interceptors.add(smartInterceptor);    }  }} @AT@ 12338 @LENGTH@ 30
---------MOV Operator@@+ @TO@ InfixExpression@@this.smartInterceptors != null @AT@ 11973 @LENGTH@ 1
---------INS FieldAccess@@this.smartInterceptors @TO@ InfixExpression@@this.smartInterceptors != null @AT@ 12338 @LENGTH@ 22
------------INS ThisExpression@@this @TO@ FieldAccess@@this.smartInterceptors @AT@ 12338 @LENGTH@ 4
------------INS SimpleName@@smartInterceptors @TO@ FieldAccess@@this.smartInterceptors @AT@ 12343 @LENGTH@ 17
---------INS NullLiteral@@null @TO@ InfixExpression@@this.smartInterceptors != null @AT@ 12364 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  SmartEndpointInterceptor smartInterceptor : smartInterceptors) {    if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {      interceptors.add(smartInterceptor);    }  }} @TO@ IfStatement@@if (this.smartInterceptors != null) {  for (  SmartEndpointInterceptor smartInterceptor : smartInterceptors) {    if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {      interceptors.add(smartInterceptor);    }  }} @AT@ 12370 @LENGTH@ 263
---------INS EnhancedForStatement@@for (SmartEndpointInterceptor smartInterceptor : smartInterceptors) {  if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {    interceptors.add(smartInterceptor);  }} @TO@ Block@@ThenBody:{  for (  SmartEndpointInterceptor smartInterceptor : smartInterceptors) {    if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {      interceptors.add(smartInterceptor);    }  }} @AT@ 12384 @LENGTH@ 239
------------INS SingleVariableDeclaration@@SmartEndpointInterceptor smartInterceptor @TO@ EnhancedForStatement@@for (SmartEndpointInterceptor smartInterceptor : smartInterceptors) {  if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {    interceptors.add(smartInterceptor);  }} @AT@ 12389 @LENGTH@ 41
---------------INS SimpleType@@SmartEndpointInterceptor @TO@ SingleVariableDeclaration@@SmartEndpointInterceptor smartInterceptor @AT@ 12389 @LENGTH@ 24
---------------INS SimpleName@@smartInterceptor @TO@ SingleVariableDeclaration@@SmartEndpointInterceptor smartInterceptor @AT@ 12414 @LENGTH@ 16
------------INS SimpleName@@smartInterceptors @TO@ EnhancedForStatement@@for (SmartEndpointInterceptor smartInterceptor : smartInterceptors) {  if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {    interceptors.add(smartInterceptor);  }} @AT@ 12433 @LENGTH@ 17
------------INS IfStatement@@if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {  interceptors.add(smartInterceptor);} @TO@ EnhancedForStatement@@for (SmartEndpointInterceptor smartInterceptor : smartInterceptors) {  if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {    interceptors.add(smartInterceptor);  }} @AT@ 12470 @LENGTH@ 139
---------------INS MethodInvocation@@smartInterceptor.shouldIntercept(messageContext,endpoint) @TO@ IfStatement@@if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {  interceptors.add(smartInterceptor);} @AT@ 12474 @LENGTH@ 58
------------------INS SimpleName@@Name:smartInterceptor @TO@ MethodInvocation@@smartInterceptor.shouldIntercept(messageContext,endpoint) @AT@ 12474 @LENGTH@ 16
------------------INS SimpleName@@MethodName:shouldIntercept:[messageContext, endpoint] @TO@ MethodInvocation@@smartInterceptor.shouldIntercept(messageContext,endpoint) @AT@ 12491 @LENGTH@ 41
---------------------INS SimpleName@@messageContext @TO@ SimpleName@@MethodName:shouldIntercept:[messageContext, endpoint] @AT@ 12507 @LENGTH@ 14
---------------------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:shouldIntercept:[messageContext, endpoint] @AT@ 12523 @LENGTH@ 8
---------------INS Block@@ThenBody:{  interceptors.add(smartInterceptor);} @TO@ IfStatement@@if (smartInterceptor.shouldIntercept(messageContext,endpoint)) {  interceptors.add(smartInterceptor);} @AT@ 12534 @LENGTH@ 75
------------------INS ExpressionStatement@@MethodInvocation:interceptors.add(smartInterceptor) @TO@ Block@@ThenBody:{  interceptors.add(smartInterceptor);} @AT@ 12556 @LENGTH@ 35
---------------------MOV MethodInvocation@@interceptors.addAll(Arrays.asList(smartInterceptors)) @TO@ ExpressionStatement@@MethodInvocation:interceptors.add(smartInterceptor) @AT@ 12382 @LENGTH@ 53
------------------------DEL SimpleName@@MethodName:addAll:[Arrays.asList(smartInterceptors)] @AT@ 12395 @LENGTH@ 40
---------------------------DEL MethodInvocation@@Arrays.asList(smartInterceptors) @AT@ 12402 @LENGTH@ 32
------------------------------DEL SimpleName@@Name:Arrays @AT@ 12402 @LENGTH@ 6
------------------------MOV SimpleName@@MethodName:asList:[smartInterceptors] @TO@ MethodInvocation@@interceptors.addAll(Arrays.asList(smartInterceptors)) @AT@ 12409 @LENGTH@ 25
---------------------------UPD SimpleName@@smartInterceptors @TO@ smartInterceptor @AT@ 12416 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:interceptors.addAll(Arrays.asList(smartInterceptors)) @AT@ 12382 @LENGTH@ 54


UPD Block@@ThenBody:{  Exception exception=checkException(oldExchange,newExchange);  if (exception != null) {    original.setException(exception);  }} @TO@ ThenBody:{  Exception exception=checkException(oldExchange,newExchange);  if (exception != null) {    if (original != null) {      original.setException(exception);    } else {      oldExchange.setException(exception);    }  }} @AT@ 1795 @LENGTH@ 188
---INS IfStatement@@if (exception != null) {  if (original != null) {    original.setException(exception);  } else {    oldExchange.setException(exception);  }} @TO@ Block@@ThenBody:{  Exception exception=checkException(oldExchange,newExchange);  if (exception != null) {    original.setException(exception);  }} @AT@ 1885 @LENGTH@ 232
------INS InfixExpression@@exception != null @TO@ IfStatement@@if (exception != null) {  if (original != null) {    original.setException(exception);  } else {    oldExchange.setException(exception);  }} @AT@ 1889 @LENGTH@ 17
---------INS SimpleName@@exception @TO@ InfixExpression@@exception != null @AT@ 1889 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@exception != null @AT@ 1898 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exception != null @AT@ 1902 @LENGTH@ 4
------INS Block@@ThenBody:{  if (original != null) {    original.setException(exception);  } else {    oldExchange.setException(exception);  }} @TO@ IfStatement@@if (exception != null) {  if (original != null) {    original.setException(exception);  } else {    oldExchange.setException(exception);  }} @AT@ 1908 @LENGTH@ 209
---------MOV IfStatement@@if (exception != null) {  original.setException(exception);} @TO@ Block@@ThenBody:{  if (original != null) {    original.setException(exception);  } else {    oldExchange.setException(exception);  }} @AT@ 1885 @LENGTH@ 88
------------UPD InfixExpression@@exception != null @TO@ original != null @AT@ 1889 @LENGTH@ 17
---------------UPD SimpleName@@exception @TO@ original @AT@ 1889 @LENGTH@ 9
------------INS Block@@ElseBody:{  oldExchange.setException(exception);} @TO@ IfStatement@@if (exception != null) {  original.setException(exception);} @AT@ 2027 @LENGTH@ 76
---------------INS ExpressionStatement@@MethodInvocation:oldExchange.setException(exception) @TO@ Block@@ElseBody:{  oldExchange.setException(exception);} @AT@ 2049 @LENGTH@ 36
------------------INS MethodInvocation@@oldExchange.setException(exception) @TO@ ExpressionStatement@@MethodInvocation:oldExchange.setException(exception) @AT@ 2049 @LENGTH@ 35
---------------------INS SimpleName@@Name:oldExchange @TO@ MethodInvocation@@oldExchange.setException(exception) @AT@ 2049 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:setException:[exception] @TO@ MethodInvocation@@oldExchange.setException(exception) @AT@ 2061 @LENGTH@ 23
------------------------INS SimpleName@@exception @TO@ SimpleName@@MethodName:setException:[exception] @AT@ 2074 @LENGTH@ 9
---UPD IfStatement@@if (exception != null) {  original.setException(exception);} @TO@ if (original != null) {  original.setException(exception);} else {  oldExchange.setException(exception);} @AT@ 1885 @LENGTH@ 88


INS MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @TO@ TypeDeclaration@@[public]TestUtils,  @AT@ 2488 @LENGTH@ 222
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2488 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2495 @LENGTH@ 6
---INS SimpleType@@AttributeDefinition @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2502 @LENGTH@ 19
---INS SimpleName@@MethodName:createAttribute @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2522 @LENGTH@ 15
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2538 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2538 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2545 @LENGTH@ 4
---INS SingleVariableDeclaration@@ModelType type @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2551 @LENGTH@ 14
------INS SimpleType@@ModelType @TO@ SingleVariableDeclaration@@ModelType type @AT@ 2551 @LENGTH@ 9
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@ModelType type @AT@ 2561 @LENGTH@ 4
---INS SingleVariableDeclaration@@String groupName @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2567 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String groupName @AT@ 2567 @LENGTH@ 6
------INS SimpleName@@groupName @TO@ SingleVariableDeclaration@@String groupName @AT@ 2574 @LENGTH@ 9
---INS SingleVariableDeclaration@@boolean runtimeOnly @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2585 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean runtimeOnly @AT@ 2585 @LENGTH@ 7
------INS SimpleName@@runtimeOnly @TO@ SingleVariableDeclaration@@boolean runtimeOnly @AT@ 2593 @LENGTH@ 11
---INS SingleVariableDeclaration@@boolean alias @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2606 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean alias @AT@ 2606 @LENGTH@ 7
------INS SimpleName@@alias @TO@ SingleVariableDeclaration@@boolean alias @AT@ 2614 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:createAttribute(name,type,groupName,runtimeOnly,alias,false) @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2631 @LENGTH@ 73
------INS MethodInvocation@@createAttribute(name,type,groupName,runtimeOnly,alias,false) @TO@ ReturnStatement@@MethodInvocation:createAttribute(name,type,groupName,runtimeOnly,alias,false) @AT@ 2638 @LENGTH@ 65
---------INS SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @TO@ MethodInvocation@@createAttribute(name,type,groupName,runtimeOnly,alias,false) @AT@ 2638 @LENGTH@ 65
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2654 @LENGTH@ 4
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2660 @LENGTH@ 4
------------INS SimpleName@@groupName @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2666 @LENGTH@ 9
------------INS SimpleName@@runtimeOnly @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2677 @LENGTH@ 11
------------INS SimpleName@@alias @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2690 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createAttribute:[name, type, groupName, runtimeOnly, alias, false] @AT@ 2697 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1908 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 1908 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1908 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1928 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 1933 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter","--http.port=" + port) @TO@ MethodInvocation:TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter","--http.port=" + port) @AT@ 1368 @LENGTH@ 112
---UPD MethodInvocation@@TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter","--http.port=" + port) @TO@ TestFatJarRouter.main("--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter","--http.port=" + port) @AT@ 1368 @LENGTH@ 111
------UPD SimpleName@@MethodName:main:["--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter", "--http.port=" + port] @TO@ MethodName:main:["--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter", "--http.port=" + port] @AT@ 1385 @LENGTH@ 94
---------UPD StringLiteral@@"--spring.main.sources=org.apache.camel.spring.boot.fatjarrouter" @TO@ "--spring.main.sources=org.apache.camel.spring.boot.FatJarRouter" @AT@ 1390 @LENGTH@ 65


INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnComplete, Exception,  @AT@ 1930 @LENGTH@ 47
---INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1934 @LENGTH@ 10
------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 1934 @LENGTH@ 1
------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 1935 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1946 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1960 @LENGTH@ 7


UPD VariableDeclarationStatement@@Element e=((Element)element.item(0)); @TO@ Element e=(Element)element.item(0); @AT@ 3803 @LENGTH@ 40
---UPD VariableDeclarationFragment@@e=((Element)element.item(0)) @TO@ e=(Element)element.item(0) @AT@ 3811 @LENGTH@ 31
------DEL ParenthesizedExpression@@((Element)element.item(0)) @AT@ 3815 @LENGTH@ 27
------MOV CastExpression@@(Element)element.item(0) @TO@ VariableDeclarationFragment@@e=((Element)element.item(0)) @AT@ 3816 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2576 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 2576 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2576 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2596 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 2601 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1790 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 1790 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1790 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1810 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 1815 @LENGTH@ 11


DEL VariableDeclarationStatement@@ResultSet rs=pstmt.executeQuery(); @AT@ 16187 @LENGTH@ 36
---DEL SimpleType@@ResultSet @AT@ 16187 @LENGTH@ 9
---DEL VariableDeclarationFragment@@rs=pstmt.executeQuery() @AT@ 16197 @LENGTH@ 25
------DEL SimpleName@@rs @AT@ 16197 @LENGTH@ 2
------DEL MethodInvocation@@pstmt.executeQuery() @AT@ 16202 @LENGTH@ 20
---------DEL SimpleName@@Name:pstmt @AT@ 16202 @LENGTH@ 5
---------DEL SimpleName@@MethodName:executeQuery:[] @AT@ 16208 @LENGTH@ 14


UPD EnhancedForStatement@@for (String qop : qops) {  if (!first)   challenge.append(DELIMITER);  challenge.append(SaslQuote.quote(qop));} @TO@ for (String qop : qops) {  if (!first)   challenge.append(DELIMITER);  first=false;  challenge.append(SaslQuote.quote(qop));} @AT@ 4052 @LENGTH@ 149
---INS ExpressionStatement@@Assignment:first=false @TO@ EnhancedForStatement@@for (String qop : qops) {  if (!first)   challenge.append(DELIMITER);  challenge.append(SaslQuote.quote(qop));} @AT@ 4148 @LENGTH@ 14
------INS Assignment@@first=false @TO@ ExpressionStatement@@Assignment:first=false @AT@ 4148 @LENGTH@ 13
---------INS SimpleName@@first @TO@ Assignment@@first=false @AT@ 4148 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@first=false @AT@ 4153 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@first=false @AT@ 4156 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @TO@ TypeDeclaration@@[public]HdfsConsumerTest, HdfsTestSupport @AT@ 2511 @LENGTH@ 42
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2511 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2519 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2526 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2532 @LENGTH@ 3
---INS VariableDeclarationFragment@@ITERATIONS=200 @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2536 @LENGTH@ 16
------INS SimpleName@@ITERATIONS @TO@ VariableDeclarationFragment@@ITERATIONS=200 @AT@ 2536 @LENGTH@ 10
------INS NumberLiteral@@200 @TO@ VariableDeclarationFragment@@ITERATIONS=200 @AT@ 2549 @LENGTH@ 3


INS MethodDeclaration@@private, voidMethodName:CassandraUtils,  @TO@ TypeDeclaration@@[public]CassandraUtils,  @AT@ 1588 @LENGTH@ 32
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CassandraUtils,  @AT@ 1588 @LENGTH@ 7
---INS SimpleName@@MethodName:CassandraUtils @TO@ MethodDeclaration@@private, voidMethodName:CassandraUtils,  @AT@ 1596 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:path.append(gavToPath(gav,"/")) @TO@ MethodInvocation:path.append(gavToPath(gav)) @AT@ 496 @LENGTH@ 37
---UPD MethodInvocation@@path.append(gavToPath(gav,"/")) @TO@ path.append(gavToPath(gav)) @AT@ 496 @LENGTH@ 36
------UPD SimpleName@@MethodName:append:[gavToPath(gav,"/")] @TO@ MethodName:append:[gavToPath(gav)] @AT@ 501 @LENGTH@ 31
---------UPD MethodInvocation@@gavToPath(gav,"/") @TO@ gavToPath(gav) @AT@ 509 @LENGTH@ 21
------------UPD SimpleName@@MethodName:gavToPath:[gav, "/"] @TO@ MethodName:gavToPath:[gav] @AT@ 509 @LENGTH@ 21
---------------DEL StringLiteral@@"/" @AT@ 525 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:resources.resourceId(SPARKLR_RESOURCE_ID) @TO@ MethodInvocation:resources.resourceId(SPARKLR_RESOURCE_ID).stateless(false) @AT@ 3255 @LENGTH@ 42
---UPD MethodInvocation@@resources.resourceId(SPARKLR_RESOURCE_ID) @TO@ resources.resourceId(SPARKLR_RESOURCE_ID).stateless(false) @AT@ 3255 @LENGTH@ 41
------INS MethodInvocation@@MethodName:resourceId:[SPARKLR_RESOURCE_ID] @TO@ MethodInvocation@@resources.resourceId(SPARKLR_RESOURCE_ID) @AT@ 3255 @LENGTH@ 41
---------INS SimpleName@@SPARKLR_RESOURCE_ID @TO@ MethodInvocation@@MethodName:resourceId:[SPARKLR_RESOURCE_ID] @AT@ 3276 @LENGTH@ 19
------DEL SimpleName@@MethodName:resourceId:[SPARKLR_RESOURCE_ID] @AT@ 3265 @LENGTH@ 31
---------DEL SimpleName@@SPARKLR_RESOURCE_ID @AT@ 3276 @LENGTH@ 19
------INS SimpleName@@MethodName:stateless:[false] @TO@ MethodInvocation@@resources.resourceId(SPARKLR_RESOURCE_ID) @AT@ 3297 @LENGTH@ 16
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:stateless:[false] @AT@ 3307 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:tokenEndpoint.setAllowedRequestMethods(allowedTokenEndpointRequestMethods()) @TO@ MethodDeclaration@@public, TokenEndpoint, MethodName:tokenEndpoint, Exception,  @AT@ 5308 @LENGTH@ 77
---INS MethodInvocation@@tokenEndpoint.setAllowedRequestMethods(allowedTokenEndpointRequestMethods()) @TO@ ExpressionStatement@@MethodInvocation:tokenEndpoint.setAllowedRequestMethods(allowedTokenEndpointRequestMethods()) @AT@ 5308 @LENGTH@ 76
------INS SimpleName@@Name:tokenEndpoint @TO@ MethodInvocation@@tokenEndpoint.setAllowedRequestMethods(allowedTokenEndpointRequestMethods()) @AT@ 5308 @LENGTH@ 13
------INS SimpleName@@MethodName:setAllowedRequestMethods:[allowedTokenEndpointRequestMethods()] @TO@ MethodInvocation@@tokenEndpoint.setAllowedRequestMethods(allowedTokenEndpointRequestMethods()) @AT@ 5322 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:allowedTokenEndpointRequestMethods:[] @TO@ SimpleName@@MethodName:setAllowedRequestMethods:[allowedTokenEndpointRequestMethods()] @AT@ 5347 @LENGTH@ 36


UPD IfStatement@@if (this.jdkORBSocketBindingInjector.getValue() != null) {  InetSocketAddress address=this.jdkORBSocketBindingInjector.getValue().getSocketAddress();  properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.INITIAL_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.INITIAL_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.PERSISTENT_NAME_SERVICE_NAME,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,persistentServerId);} @TO@ if (this.jdkORBSocketBindingInjector.getValue() != null) {  InetSocketAddress address=this.jdkORBSocketBindingInjector.getValue().getSocketAddress();  properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.PERSISTENT_NAME_SERVICE_NAME,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,persistentServerId);} @AT@ 4313 @LENGTH@ 969
---UPD Block@@ThenBody:{  InetSocketAddress address=this.jdkORBSocketBindingInjector.getValue().getSocketAddress();  properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.INITIAL_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.INITIAL_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.PERSISTENT_NAME_SERVICE_NAME,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,persistentServerId);} @TO@ ThenBody:{  InetSocketAddress address=this.jdkORBSocketBindingInjector.getValue().getSocketAddress();  properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.PERSISTENT_NAME_SERVICE_NAME,address.getAddress().getHostAddress());  properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY,String.valueOf(address.getPort()));  properties.setProperty(ORBConstants.ORB_SERVER_ID_PROPERTY,persistentServerId);} @AT@ 4369 @LENGTH@ 913
------DEL ExpressionStatement@@MethodInvocation:properties.setProperty(ORBConstants.INITIAL_HOST_PROPERTY,address.getAddress().getHostAddress()) @AT@ 4719 @LENGTH@ 98
---------DEL MethodInvocation@@properties.setProperty(ORBConstants.INITIAL_HOST_PROPERTY,address.getAddress().getHostAddress()) @AT@ 4719 @LENGTH@ 97
------------DEL SimpleName@@Name:properties @AT@ 4719 @LENGTH@ 10
------------DEL SimpleName@@MethodName:setProperty:[ORBConstants.INITIAL_HOST_PROPERTY, address.getAddress().getHostAddress()] @AT@ 4730 @LENGTH@ 86
---------------DEL QualifiedName@@ORBConstants.INITIAL_HOST_PROPERTY @AT@ 4742 @LENGTH@ 34
------------------DEL SimpleName@@ORBConstants @AT@ 4742 @LENGTH@ 12
------------------DEL SimpleName@@INITIAL_HOST_PROPERTY @AT@ 4755 @LENGTH@ 21
---------------DEL MethodInvocation@@address.getAddress().getHostAddress() @AT@ 4778 @LENGTH@ 37
------------------DEL MethodInvocation@@MethodName:getAddress:[] @AT@ 4778 @LENGTH@ 20
------------------DEL SimpleName@@Name:address @AT@ 4778 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getHostAddress:[] @AT@ 4799 @LENGTH@ 16
------DEL ExpressionStatement@@MethodInvocation:properties.setProperty(ORBConstants.INITIAL_PORT_PROPERTY,String.valueOf(address.getPort())) @AT@ 4834 @LENGTH@ 94
---------DEL MethodInvocation@@properties.setProperty(ORBConstants.INITIAL_PORT_PROPERTY,String.valueOf(address.getPort())) @AT@ 4834 @LENGTH@ 93
------------DEL SimpleName@@Name:properties @AT@ 4834 @LENGTH@ 10
------------DEL SimpleName@@MethodName:setProperty:[ORBConstants.INITIAL_PORT_PROPERTY, String.valueOf(address.getPort())] @AT@ 4845 @LENGTH@ 82
---------------DEL QualifiedName@@ORBConstants.INITIAL_PORT_PROPERTY @AT@ 4857 @LENGTH@ 34
------------------DEL SimpleName@@ORBConstants @AT@ 4857 @LENGTH@ 12
------------------DEL SimpleName@@INITIAL_PORT_PROPERTY @AT@ 4870 @LENGTH@ 21
---------------DEL MethodInvocation@@String.valueOf(address.getPort()) @AT@ 4893 @LENGTH@ 33
------------------DEL SimpleName@@Name:String @AT@ 4893 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:valueOf:[address.getPort()] @AT@ 4900 @LENGTH@ 26
---------------------DEL MethodInvocation@@address.getPort() @AT@ 4908 @LENGTH@ 17
------------------------DEL SimpleName@@Name:address @AT@ 4908 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getPort:[] @AT@ 4916 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2757 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 2757 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2757 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2777 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 2782 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationProcessingFilterTests,  @AT@ 3008 @LENGTH@ 323
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3008 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3015 @LENGTH@ 4
---INS SimpleName@@MethodName:testStateless @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3020 @LENGTH@ 13
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3043 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3057 @LENGTH@ 160
------INS MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ ExpressionStatement@@MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3057 @LENGTH@ 159
---------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3057 @LENGTH@ 34
---------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3057 @LENGTH@ 21
---------INS SimpleName@@MethodName:setAuthentication:[new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))] @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3092 @LENGTH@ 124
------------INS ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @TO@ SimpleName@@MethodName:setAuthentication:[new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))] @AT@ 3115 @LENGTH@ 100
---------------INS New@@new @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3115 @LENGTH@ 3
---------------INS SimpleType@@AnonymousAuthenticationToken @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3119 @LENGTH@ 28
---------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3148 @LENGTH@ 5
---------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3155 @LENGTH@ 5
---------------INS MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3162 @LENGTH@ 52
------------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @AT@ 3162 @LENGTH@ 14
------------------INS SimpleName@@MethodName:createAuthorityList:["ROLE_ANONYMOUS"] @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @AT@ 3177 @LENGTH@ 37
---------------------INS StringLiteral@@"ROLE_ANONYMOUS" @TO@ SimpleName@@MethodName:createAuthorityList:["ROLE_ANONYMOUS"] @AT@ 3197 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3220 @LENGTH@ 38
------INS MethodInvocation@@filter.doFilter(request,null,chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @AT@ 3220 @LENGTH@ 37
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3220 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, null, chain] @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3227 @LENGTH@ 30
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3236 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3245 @LENGTH@ 4
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3251 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNull(SecurityContextHolder.getContext().getAuthentication()) @TO@ MethodDeclaration@@public, void, MethodName:testStateless, Exception,  @AT@ 3261 @LENGTH@ 67
------INS MethodInvocation@@assertNull(SecurityContextHolder.getContext().getAuthentication()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(SecurityContextHolder.getContext().getAuthentication()) @AT@ 3261 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertNull:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertNull(SecurityContextHolder.getContext().getAuthentication()) @AT@ 3261 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ SimpleName@@MethodName:assertNull:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 3272 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3272 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3272 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3307 @LENGTH@ 19


UPD IfStatement@@if (baseTbl.getTableType() == TableType.VIRTUAL_VIEW.toString()) {  throw new HiveException("tableName=" + tableName + " is a VIRTUAL VIEW. Index on VIRTUAL VIEW is not supported.");} @TO@ if (TableType.VIRTUAL_VIEW.toString().equals(baseTbl.getTableType())) {  throw new HiveException("tableName=" + tableName + " is a VIRTUAL VIEW. Index on VIRTUAL VIEW is not supported.");} @AT@ 28664 @LENGTH@ 195
---INS MethodInvocation@@TableType.VIRTUAL_VIEW.toString().equals(baseTbl.getTableType()) @TO@ IfStatement@@if (baseTbl.getTableType() == TableType.VIRTUAL_VIEW.toString()) {  throw new HiveException("tableName=" + tableName + " is a VIRTUAL VIEW. Index on VIRTUAL VIEW is not supported.");} @AT@ 28668 @LENGTH@ 64
------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@TableType.VIRTUAL_VIEW.toString().equals(baseTbl.getTableType()) @AT@ 28668 @LENGTH@ 33
------INS QualifiedName@@Name:TableType.VIRTUAL_VIEW @TO@ MethodInvocation@@TableType.VIRTUAL_VIEW.toString().equals(baseTbl.getTableType()) @AT@ 28668 @LENGTH@ 22
------INS SimpleName@@MethodName:equals:[baseTbl.getTableType()] @TO@ MethodInvocation@@TableType.VIRTUAL_VIEW.toString().equals(baseTbl.getTableType()) @AT@ 28702 @LENGTH@ 30
---------INS MethodInvocation@@baseTbl.getTableType() @TO@ SimpleName@@MethodName:equals:[baseTbl.getTableType()] @AT@ 28709 @LENGTH@ 22
------------MOV SimpleName@@Name:baseTbl @TO@ MethodInvocation@@baseTbl.getTableType() @AT@ 28668 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getTableType:[] @TO@ MethodInvocation@@baseTbl.getTableType() @AT@ 28676 @LENGTH@ 14
---DEL InfixExpression@@baseTbl.getTableType() == TableType.VIRTUAL_VIEW.toString() @AT@ 28668 @LENGTH@ 59
------DEL MethodInvocation@@baseTbl.getTableType() @AT@ 28668 @LENGTH@ 22
------DEL Operator@@== @AT@ 28690 @LENGTH@ 2
------DEL MethodInvocation@@TableType.VIRTUAL_VIEW.toString() @AT@ 28694 @LENGTH@ 33
---------DEL QualifiedName@@Name:TableType.VIRTUAL_VIEW @AT@ 28694 @LENGTH@ 22
---------DEL SimpleName@@MethodName:toString:[] @AT@ 28717 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should include javadoc",json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")) @TO@ MethodInvocation:assertTrue("Should include javadoc",json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled.")) @AT@ 2582 @LENGTH@ 328
---UPD MethodInvocation@@assertTrue("Should include javadoc",json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")) @TO@ assertTrue("Should include javadoc",json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled.")) @AT@ 2582 @LENGTH@ 327
------UPD SimpleName@@MethodName:assertTrue:["Should include javadoc", json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"")] @TO@ MethodName:assertTrue:["Should include javadoc", json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled.")] @AT@ 2582 @LENGTH@ 327
---------UPD MethodInvocation@@json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"") @TO@ json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled.") @AT@ 2619 @LENGTH@ 289
------------UPD SimpleName@@MethodName:contains:["\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\""] @TO@ MethodName:contains:["\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled."] @AT@ 2624 @LENGTH@ 284
---------------UPD InfixExpression@@"\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"" @TO@ "\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\", \"javaType\": \"long\"," + " \"deprecated\": \"false\", \"defaultValue\": \"30000\"," + " \"description\": \"The timeout value to use if block is enabled." @AT@ 2633 @LENGTH@ 274
------------------UPD StringLiteral@@" \"description\": \"The timeout value to use if block is enabled. Is by default 30000.\"" @TO@ " \"description\": \"The timeout value to use if block is enabled." @AT@ 2817 @LENGTH@ 90


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @TO@ MethodInvocation:http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.NEVER) @AT@ 3041 @LENGTH@ 381
---UPD MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @TO@ http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.NEVER) @AT@ 3041 @LENGTH@ 380
------INS MethodInvocation@@MethodName:sessionManagement:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @AT@ 3112 @LENGTH@ 425
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @AT@ 3112 @LENGTH@ 395
------INS MethodInvocation@@MethodName:antMatchers:[tokenEndpointPath, tokenKeyPath, checkTokenPath] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @AT@ 3112 @LENGTH@ 380
---------INS SimpleName@@tokenEndpointPath @TO@ MethodInvocation@@MethodName:antMatchers:[tokenEndpointPath, tokenKeyPath, checkTokenPath] @AT@ 3444 @LENGTH@ 17
---------INS SimpleName@@tokenKeyPath @TO@ MethodInvocation@@MethodName:antMatchers:[tokenEndpointPath, tokenKeyPath, checkTokenPath] @AT@ 3463 @LENGTH@ 12
---------INS SimpleName@@checkTokenPath @TO@ MethodInvocation@@MethodName:antMatchers:[tokenEndpointPath, tokenKeyPath, checkTokenPath] @AT@ 3477 @LENGTH@ 14
------DEL SimpleName@@MethodName:antMatchers:[tokenEndpointPath, tokenKeyPath, checkTokenPath] @AT@ 3361 @LENGTH@ 60
---------DEL SimpleName@@tokenEndpointPath @AT@ 3373 @LENGTH@ 17
---------DEL SimpleName@@tokenKeyPath @AT@ 3392 @LENGTH@ 12
---------DEL SimpleName@@checkTokenPath @AT@ 3406 @LENGTH@ 14
------INS SimpleName@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.NEVER] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers(tokenEndpointPath).fullyAuthenticated().antMatchers(tokenKeyPath).access(configurer.getTokenKeyAccess()).antMatchers(checkTokenPath).access(configurer.getCheckTokenAccess()).and().requestMatchers().antMatchers(tokenEndpointPath,tokenKeyPath,checkTokenPath) @AT@ 3538 @LENGTH@ 50
---------INS QualifiedName@@SessionCreationPolicy.NEVER @TO@ SimpleName@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.NEVER] @AT@ 3560 @LENGTH@ 27
------------INS SimpleName@@SessionCreationPolicy @TO@ QualifiedName@@SessionCreationPolicy.NEVER @AT@ 3560 @LENGTH@ 21
------------INS SimpleName@@NEVER @TO@ QualifiedName@@SessionCreationPolicy.NEVER @AT@ 3582 @LENGTH@ 5


UPD IfStatement@@if (model.hasDefined(Constants.IOR_SETTINGS)) {  securityConfigMetaData=this.createIORSecurityConfigMetaData(context,model.get(IORSettingsDefinition.INSTANCE.getPathElement().getKeyValuePair()));} @TO@ if (configNode.hasDefined(Constants.IOR_SETTINGS)) {  securityConfigMetaData=this.createIORSecurityConfigMetaData(context,model.get(IORSettingsDefinition.INSTANCE.getPathElement().getKeyValuePair()));} @AT@ 12057 @LENGTH@ 239
---UPD MethodInvocation@@model.hasDefined(Constants.IOR_SETTINGS) @TO@ configNode.hasDefined(Constants.IOR_SETTINGS) @AT@ 12061 @LENGTH@ 40
------UPD SimpleName@@Name:model @TO@ Name:configNode @AT@ 12061 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @TO@ TypeDeclaration@@[public]PageableHandlerMethodArgumentResolverUnitTests, PageableDefaultUnitTests @AT@ 6727 @LENGTH@ 578
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6727 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6734 @LENGTH@ 4
---INS SimpleName@@MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6739 @LENGTH@ 57
---INS VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6804 @LENGTH@ 63
------INS SimpleType@@PageableHandlerMethodArgumentResolver @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 6804 @LENGTH@ 37
------INS VariableDeclarationFragment@@resolver=getResolver() @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 6842 @LENGTH@ 24
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 6842 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:getResolver:[] @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 6853 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(null) @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6870 @LENGTH@ 35
------INS MethodInvocation@@resolver.setFallbackPageable(null) @TO@ ExpressionStatement@@MethodInvocation:resolver.setFallbackPageable(null) @AT@ 6870 @LENGTH@ 34
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setFallbackPageable(null) @AT@ 6870 @LENGTH@ 8
---------INS SimpleName@@MethodName:setFallbackPageable:[null] @TO@ MethodInvocation@@resolver.setFallbackPageable(null) @AT@ 6879 @LENGTH@ 25
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setFallbackPageable:[null] @AT@ 6899 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6909 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6909 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 6932 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6932 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 6942 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6942 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 6946 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addParameter("page","0") @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 6974 @LENGTH@ 34
------INS MethodInvocation@@request.addParameter("page","0") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("page","0") @AT@ 6974 @LENGTH@ 33
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("page","0") @AT@ 6974 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["page", "0"] @TO@ MethodInvocation@@request.addParameter("page","0") @AT@ 6982 @LENGTH@ 25
------------INS StringLiteral@@"page" @TO@ SimpleName@@MethodName:addParameter:["page", "0"] @AT@ 6995 @LENGTH@ 6
------------INS StringLiteral@@"0" @TO@ SimpleName@@MethodName:addParameter:["page", "0"] @AT@ 7003 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:request.addParameter("size","10") @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 7011 @LENGTH@ 35
------INS MethodInvocation@@request.addParameter("size","10") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("size","10") @AT@ 7011 @LENGTH@ 34
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("size","10") @AT@ 7011 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["size", "10"] @TO@ MethodInvocation@@request.addParameter("size","10") @AT@ 7019 @LENGTH@ 26
------------INS StringLiteral@@"size" @TO@ SimpleName@@MethodName:addParameter:["size", "10"] @AT@ 7032 @LENGTH@ 6
------------INS StringLiteral@@"10" @TO@ SimpleName@@MethodName:addParameter:["size", "10"] @AT@ 7040 @LENGTH@ 4
---INS VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 7050 @LENGTH@ 113
------INS SimpleType@@Pageable @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 7050 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 7059 @LENGTH@ 103
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7059 @LENGTH@ 6
---------INS MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7068 @LENGTH@ 94
------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7068 @LENGTH@ 8
------------INS SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7077 @LENGTH@ 85
---------------INS SimpleName@@supportedMethodParameter @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7093 @LENGTH@ 24
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7119 @LENGTH@ 4
---------------INS ClassInstanceCreation@@ServletWebRequest[request] @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7125 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7125 @LENGTH@ 3
------------------INS SimpleType@@ServletWebRequest @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7129 @LENGTH@ 17
------------------INS SimpleName@@request @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7147 @LENGTH@ 7
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7157 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getPageNumber(),is(0)) @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 7167 @LENGTH@ 42
------INS MethodInvocation@@assertThat(result.getPageNumber(),is(0)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getPageNumber(),is(0)) @AT@ 7167 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @TO@ MethodInvocation@@assertThat(result.getPageNumber(),is(0)) @AT@ 7167 @LENGTH@ 41
------------INS MethodInvocation@@result.getPageNumber() @TO@ SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @AT@ 7178 @LENGTH@ 22
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPageNumber() @AT@ 7178 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPageNumber:[] @TO@ MethodInvocation@@result.getPageNumber() @AT@ 7185 @LENGTH@ 15
------------INS MethodInvocation@@is(0) @TO@ SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @AT@ 7202 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[0] @TO@ MethodInvocation@@is(0) @AT@ 7202 @LENGTH@ 5
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:is:[0] @AT@ 7205 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[0] @TO@ MethodInvocation@@is(0) @AT@ 7202 @LENGTH@ 5
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:is:[0] @AT@ 7205 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getPageSize(),is(10)) @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 7212 @LENGTH@ 41
------INS MethodInvocation@@assertThat(result.getPageSize(),is(10)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getPageSize(),is(10)) @AT@ 7212 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @TO@ MethodInvocation@@assertThat(result.getPageSize(),is(10)) @AT@ 7212 @LENGTH@ 40
------------INS MethodInvocation@@result.getPageSize() @TO@ SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @AT@ 7223 @LENGTH@ 20
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPageSize() @AT@ 7223 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPageSize:[] @TO@ MethodInvocation@@result.getPageSize() @AT@ 7230 @LENGTH@ 13
------------INS MethodInvocation@@is(10) @TO@ SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @AT@ 7245 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[10] @TO@ MethodInvocation@@is(10) @AT@ 7245 @LENGTH@ 6
------------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:is:[10] @AT@ 7248 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[10] @TO@ MethodInvocation@@is(10) @AT@ 7245 @LENGTH@ 6
------------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:is:[10] @AT@ 7248 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getSort(),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:usesNullSortIfNoDefaultIsConfiguredAndPageAndSizeAreGiven,  @AT@ 7256 @LENGTH@ 46
------INS MethodInvocation@@assertThat(result.getSort(),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getSort(),is(nullValue())) @AT@ 7256 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[result.getSort(), is(nullValue())] @TO@ MethodInvocation@@assertThat(result.getSort(),is(nullValue())) @AT@ 7256 @LENGTH@ 45
------------INS MethodInvocation@@result.getSort() @TO@ SimpleName@@MethodName:assertThat:[result.getSort(), is(nullValue())] @AT@ 7267 @LENGTH@ 16
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getSort() @AT@ 7267 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getSort:[] @TO@ MethodInvocation@@result.getSort() @AT@ 7274 @LENGTH@ 9
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[result.getSort(), is(nullValue())] @AT@ 7285 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 7285 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 7288 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:setOrder(Ordered.LOWEST_PRECEDENCE - 150) @AT@ 2676 @LENGTH@ 42
---DEL MethodInvocation@@setOrder(Ordered.LOWEST_PRECEDENCE - 150) @AT@ 2676 @LENGTH@ 41
------DEL SimpleName@@MethodName:setOrder:[Ordered.LOWEST_PRECEDENCE - 150] @AT@ 2676 @LENGTH@ 41
---------DEL InfixExpression@@Ordered.LOWEST_PRECEDENCE - 150 @AT@ 2685 @LENGTH@ 31
------------DEL QualifiedName@@Ordered.LOWEST_PRECEDENCE @AT@ 2685 @LENGTH@ 25
---------------DEL SimpleName@@Ordered @AT@ 2685 @LENGTH@ 7
---------------DEL SimpleName@@LOWEST_PRECEDENCE @AT@ 2693 @LENGTH@ 17
------------DEL Operator@@- @AT@ 2710 @LENGTH@ 1
------------DEL NumberLiteral@@150 @AT@ 2713 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:remove(address1) @AT@ 2889 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:mappings.getObject().getMappingFor(type).getRel() @TO@ MethodInvocation:mappings.getObject().getMetadataFor(type).getRel() @AT@ 1789 @LENGTH@ 57
---UPD MethodInvocation@@mappings.getObject().getMappingFor(type).getRel() @TO@ mappings.getObject().getMetadataFor(type).getRel() @AT@ 1796 @LENGTH@ 49
------UPD MethodInvocation@@MethodName:getMappingFor:[type] @TO@ MethodName:getMetadataFor:[type] @AT@ 1796 @LENGTH@ 40


UPD IfStatement@@if (!srcs[pos].isFile()) {  throw new RuntimeException("Was expecting '" + srcs[pos].getPath() + "' to be bucket file.");} @TO@ if (ShimLoader.getHadoopShims().isDirectory(srcs[pos])) {  throw new RuntimeException("Was expecting '" + srcs[pos].getPath() + "' to be bucket file.");} @AT@ 9016 @LENGTH@ 139
---DEL PrefixExpression@@!srcs[pos].isFile() @AT@ 9019 @LENGTH@ 19
------DEL Operator@@! @AT@ 9019 @LENGTH@ 1
------DEL MethodInvocation@@srcs[pos].isFile() @AT@ 9020 @LENGTH@ 18
---------DEL ArrayAccess@@srcs[pos] @AT@ 9020 @LENGTH@ 9
---------DEL SimpleName@@MethodName:isFile:[] @AT@ 9030 @LENGTH@ 8
---INS MethodInvocation@@ShimLoader.getHadoopShims().isDirectory(srcs[pos]) @TO@ IfStatement@@if (!srcs[pos].isFile()) {  throw new RuntimeException("Was expecting '" + srcs[pos].getPath() + "' to be bucket file.");} @AT@ 9068 @LENGTH@ 50
------INS MethodInvocation@@MethodName:getHadoopShims:[] @TO@ MethodInvocation@@ShimLoader.getHadoopShims().isDirectory(srcs[pos]) @AT@ 9068 @LENGTH@ 27
------INS SimpleName@@Name:ShimLoader @TO@ MethodInvocation@@ShimLoader.getHadoopShims().isDirectory(srcs[pos]) @AT@ 9068 @LENGTH@ 10
------INS SimpleName@@MethodName:isDirectory:[srcs[pos]] @TO@ MethodInvocation@@ShimLoader.getHadoopShims().isDirectory(srcs[pos]) @AT@ 9096 @LENGTH@ 22
---------INS ArrayAccess@@srcs[pos] @TO@ SimpleName@@MethodName:isDirectory:[srcs[pos]] @AT@ 9108 @LENGTH@ 9
------------MOV SimpleName@@srcs @TO@ ArrayAccess@@srcs[pos] @AT@ 9020 @LENGTH@ 4
------------MOV SimpleName@@pos @TO@ ArrayAccess@@srcs[pos] @AT@ 9025 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:values.setImageUrl("https://graph.facebook.com/" + profile.getId() + "/picture") @TO@ MethodInvocation:values.setImageUrl(GraphApi.GRAPH_API_URL + profile.getId() + "/picture") @AT@ 1689 @LENGTH@ 81
---UPD MethodInvocation@@values.setImageUrl("https://graph.facebook.com/" + profile.getId() + "/picture") @TO@ values.setImageUrl(GraphApi.GRAPH_API_URL + profile.getId() + "/picture") @AT@ 1689 @LENGTH@ 80
------UPD SimpleName@@MethodName:setImageUrl:["https://graph.facebook.com/" + profile.getId() + "/picture"] @TO@ MethodName:setImageUrl:[GraphApi.GRAPH_API_URL + profile.getId() + "/picture"] @AT@ 1696 @LENGTH@ 73
---------UPD InfixExpression@@"https://graph.facebook.com/" + profile.getId() + "/picture" @TO@ GraphApi.GRAPH_API_URL + profile.getId() + "/picture" @AT@ 1708 @LENGTH@ 60
------------DEL StringLiteral@@"https://graph.facebook.com/" @AT@ 1708 @LENGTH@ 29
------------INS QualifiedName@@GraphApi.GRAPH_API_URL @TO@ InfixExpression@@"https://graph.facebook.com/" + profile.getId() + "/picture" @AT@ 1712 @LENGTH@ 22
---------------INS SimpleName@@GraphApi @TO@ QualifiedName@@GraphApi.GRAPH_API_URL @AT@ 1712 @LENGTH@ 8
---------------INS SimpleName@@GRAPH_API_URL @TO@ QualifiedName@@GraphApi.GRAPH_API_URL @AT@ 1721 @LENGTH@ 13


UPD EnhancedForStatement@@for (String address : addressesStr) {  String[] split=address.split(IP_PORT_SEPARATOR_REGEX);  String hostname;  if (split.length > 0)   hostname=split[0]; else   throw new IllegalArgumentException();  Integer port=(split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT);  addressesTrAd.add(new InetSocketTransportAddress(hostname,port));} @TO@ for (String address : addressesStr) {  String[] split=address.split(IP_PORT_SEPARATOR_REGEX);  String hostname;  if (split.length > 0) {    hostname=split[0];  } else {    throw new IllegalArgumentException();  }  Integer port=split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT;  addressesTrAd.add(new InetSocketTransportAddress(hostname,port));} @AT@ 6760 @LENGTH@ 457
---UPD IfStatement@@if (split.length > 0) hostname=split[0]; else throw new IllegalArgumentException(); @TO@ if (split.length > 0) {  hostname=split[0];} else {  throw new IllegalArgumentException();} @AT@ 6908 @LENGTH@ 129
------UPD Block@@ThenBody:hostname=split[0]; @TO@ ThenBody:{  hostname=split[0];} @AT@ 6946 @LENGTH@ 20
------UPD Block@@ElseBody:throw new IllegalArgumentException(); @TO@ ElseBody:{  throw new IllegalArgumentException();} @AT@ 7000 @LENGTH@ 37
---UPD VariableDeclarationStatement@@Integer port=(split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT); @TO@ Integer port=split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT; @AT@ 7050 @LENGTH@ 78
------UPD VariableDeclarationFragment@@port=(split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT) @TO@ port=split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT @AT@ 7058 @LENGTH@ 69
---------DEL ParenthesizedExpression@@(split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT) @AT@ 7065 @LENGTH@ 62
---------MOV ConditionalExpression@@split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT @TO@ VariableDeclarationFragment@@port=(split.length > 1 ? Integer.parseInt(split[1]) : DEFAULT_PORT) @AT@ 7066 @LENGTH@ 60


UPD IfStatement@@if (ivysettingsPath == null || !(new File(ivysettingsPath).exists())) {  ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @TO@ if (ivysettingsPath == null || !(new File(ivysettingsPath).exists())) {  URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml");  if (ivysetttingsResource != null) {    ivysettingsPath=ivysetttingsResource.getFile();    _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");  }} @AT@ 2288 @LENGTH@ 288
---UPD Block@@ThenBody:{  ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @TO@ ThenBody:{  ivysettingsPath=ivysetttingsResource.getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @AT@ 2358 @LENGTH@ 218
---INS Block@@ThenBody:{  URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml");  if (ivysetttingsResource != null) {    ivysettingsPath=ivysetttingsResource.getFile();    _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");  }} @TO@ IfStatement@@if (ivysettingsPath == null || !(new File(ivysettingsPath).exists())) {  ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @AT@ 2379 @LENGTH@ 326
------INS VariableDeclarationStatement@@URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml"); @TO@ Block@@ThenBody:{  URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml");  if (ivysetttingsResource != null) {    ivysettingsPath=ivysetttingsResource.getFile();    _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");  }} @AT@ 2387 @LENGTH@ 76
---------INS SimpleType@@URL @TO@ VariableDeclarationStatement@@URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml"); @AT@ 2387 @LENGTH@ 3
---------INS VariableDeclarationFragment@@ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml") @TO@ VariableDeclarationStatement@@URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml"); @AT@ 2391 @LENGTH@ 71
------------INS SimpleName@@ivysetttingsResource @TO@ VariableDeclarationFragment@@ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml") @AT@ 2391 @LENGTH@ 20
------------INS MethodInvocation@@ClassLoader.getSystemResource("ivysettings.xml") @TO@ VariableDeclarationFragment@@ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml") @AT@ 2414 @LENGTH@ 48
---------------INS SimpleName@@Name:ClassLoader @TO@ MethodInvocation@@ClassLoader.getSystemResource("ivysettings.xml") @AT@ 2414 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getSystemResource:["ivysettings.xml"] @TO@ MethodInvocation@@ClassLoader.getSystemResource("ivysettings.xml") @AT@ 2426 @LENGTH@ 36
------------------INS StringLiteral@@"ivysettings.xml" @TO@ SimpleName@@MethodName:getSystemResource:["ivysettings.xml"] @AT@ 2444 @LENGTH@ 17
------INS IfStatement@@if (ivysetttingsResource != null) {  ivysettingsPath=ivysetttingsResource.getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @TO@ Block@@ThenBody:{  URL ivysetttingsResource=ClassLoader.getSystemResource("ivysettings.xml");  if (ivysetttingsResource != null) {    ivysettingsPath=ivysetttingsResource.getFile();    _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");  }} @AT@ 2470 @LENGTH@ 229
---------MOV Block@@ThenBody:{  ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @TO@ IfStatement@@if (ivysetttingsResource != null) {  ivysettingsPath=ivysetttingsResource.getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @AT@ 2358 @LENGTH@ 218
------------UPD ExpressionStatement@@Assignment:ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile() @TO@ Assignment:ivysettingsPath=ivysetttingsResource.getFile() @AT@ 2366 @LENGTH@ 77
---------------UPD Assignment@@ivysettingsPath=ClassLoader.getSystemResource("ivysettings.xml").getFile() @TO@ ivysettingsPath=ivysetttingsResource.getFile() @AT@ 2366 @LENGTH@ 76
------------------UPD MethodInvocation@@ClassLoader.getSystemResource("ivysettings.xml").getFile() @TO@ ivysetttingsResource.getFile() @AT@ 2384 @LENGTH@ 58
---------------------DEL MethodInvocation@@MethodName:getSystemResource:["ivysettings.xml"] @AT@ 2384 @LENGTH@ 48
------------------------DEL StringLiteral@@"ivysettings.xml" @AT@ 2414 @LENGTH@ 17
---------------------UPD SimpleName@@Name:ClassLoader @TO@ Name:ivysetttingsResource @AT@ 2384 @LENGTH@ 11
---------INS InfixExpression@@ivysetttingsResource != null @TO@ IfStatement@@if (ivysetttingsResource != null) {  ivysettingsPath=ivysetttingsResource.getFile();  _console.printInfo("ivysettings.xml file not found in HIVE_HOME or HIVE_CONF_DIR," + ivysettingsPath + " will be used");} @AT@ 2474 @LENGTH@ 28
------------INS SimpleName@@ivysetttingsResource @TO@ InfixExpression@@ivysetttingsResource != null @AT@ 2474 @LENGTH@ 20
------------INS Operator@@!= @TO@ InfixExpression@@ivysetttingsResource != null @AT@ 2494 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@ivysetttingsResource != null @AT@ 2498 @LENGTH@ 4


UPD IfStatement@@if (ObjectHelper.isNotEmpty(newUrl) && newUrl != url) {  if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {    answer=newUrl;  } else   if (baseUrl != null) {    if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {      answer=baseUrl + newUrl.substring(1);    } else {      answer=baseUrl + newUrl;    }  } else {    answer=newUrl;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});  }} @TO@ if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {  if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {    answer=newUrl;  } else   if (baseUrl != null) {    if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {      answer=baseUrl + newUrl.substring(1);    } else {      answer=baseUrl + newUrl;    }  } else {    answer=newUrl;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});  }} @AT@ 15888 @LENGTH@ 1028
---UPD InfixExpression@@ObjectHelper.isNotEmpty(newUrl) && newUrl != url @TO@ ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url) @AT@ 15892 @LENGTH@ 48
------INS PrefixExpression@@!newUrl.equals(url) @TO@ InfixExpression@@ObjectHelper.isNotEmpty(newUrl) && newUrl != url @AT@ 15927 @LENGTH@ 19
---------INS Operator@@! @TO@ PrefixExpression@@!newUrl.equals(url) @AT@ 15927 @LENGTH@ 1
---------INS MethodInvocation@@newUrl.equals(url) @TO@ PrefixExpression@@!newUrl.equals(url) @AT@ 15928 @LENGTH@ 18
------------INS SimpleName@@Name:newUrl @TO@ MethodInvocation@@newUrl.equals(url) @AT@ 15928 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@newUrl.equals(url) @AT@ 15935 @LENGTH@ 11
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 15942 @LENGTH@ 3
------DEL InfixExpression@@newUrl != url @AT@ 15927 @LENGTH@ 13
---------DEL SimpleName@@newUrl @AT@ 15927 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 15933 @LENGTH@ 2
---------DEL SimpleName@@url @AT@ 15937 @LENGTH@ 3


UPD TypeDeclaration@@[final]OAuth2ExpressionParser, [ExpressionParser] @TO@ [public]OAuth2ExpressionParser, [ExpressionParser] @AT@ 1495 @LENGTH@ 722
---UPD Modifier@@final @TO@ public @AT@ 1495 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"servletName\": { \"kind\": \"property\", \"type\": \"string\"")) @AT@ 1968 @LENGTH@ 94
---UPD MethodInvocation@@assertTrue(json.contains("\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"servletName\": { \"kind\": \"property\", \"type\": \"string\"")) @AT@ 1968 @LENGTH@ 93
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"servletName\": { \"kind\": \"property\", \"type\": \"string\"")] @AT@ 1968 @LENGTH@ 93
---------UPD MethodInvocation@@json.contains("\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"servletName\": { \"kind\": \"property\", \"type\": \"string\"") @AT@ 1979 @LENGTH@ 81
------------UPD SimpleName@@MethodName:contains:["\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"servletName\": { \"kind\": \"property\", \"type\": \"string\""] @AT@ 1984 @LENGTH@ 76
---------------UPD StringLiteral@@"\"servletName\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"servletName\": { \"kind\": \"property\", \"type\": \"string\"" @AT@ 1993 @LENGTH@ 66


UPD TryStatement@@try {  streamsHolder.close();  renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));  }} catch (IOException e) {  rethrow=e;  log.error("error in close",e);} finally {  streamsHolder=null;} @TO@ try {  streamsHolder.close();  Path path=renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));  }} catch (IOException e) {  rethrow=e;  log.error("error in close",e);} finally {  streamsHolder=null;} @AT@ 3618 @LENGTH@ 410
---DEL ExpressionStatement@@MethodInvocation:renameFile(streamsHolder.getPath()) @AT@ 3655 @LENGTH@ 36
---INS VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @TO@ TryStatement@@try {  streamsHolder.close();  renameFile(streamsHolder.getPath());  StoreEventPublisher storeEventPublisher=getStoreEventPublisher();  if (storeEventPublisher != null) {    storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));  }} catch (IOException e) {  rethrow=e;  log.error("error in close",e);} finally {  streamsHolder=null;} @AT@ 3656 @LENGTH@ 48
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @AT@ 3656 @LENGTH@ 4
------INS VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @TO@ VariableDeclarationStatement@@Path path=renameFile(streamsHolder.getPath()); @AT@ 3661 @LENGTH@ 42
---------MOV MethodInvocation@@renameFile(streamsHolder.getPath()) @TO@ VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @AT@ 3655 @LENGTH@ 35
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=renameFile(streamsHolder.getPath()) @AT@ 3661 @LENGTH@ 4
---UPD IfStatement@@if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));} @TO@ if (storeEventPublisher != null) {  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 3768 @LENGTH@ 132
------UPD Block@@ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath()));} @TO@ ThenBody:{  storeEventPublisher.publishEvent(new FileWrittenEvent(this,path));} @AT@ 3801 @LENGTH@ 99
---------UPD ExpressionStatement@@MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath())) @TO@ MethodInvocation:storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 3808 @LENGTH@ 86
------------UPD MethodInvocation@@storeEventPublisher.publishEvent(new FileWrittenEvent(this,streamsHolder.getPath())) @TO@ storeEventPublisher.publishEvent(new FileWrittenEvent(this,path)) @AT@ 3808 @LENGTH@ 85
---------------UPD SimpleName@@MethodName:publishEvent:[new FileWrittenEvent(this,streamsHolder.getPath())] @TO@ MethodName:publishEvent:[new FileWrittenEvent(this,path)] @AT@ 3828 @LENGTH@ 65
------------------UPD ClassInstanceCreation@@FileWrittenEvent[this, streamsHolder.getPath()] @TO@ FileWrittenEvent[this, path] @AT@ 3841 @LENGTH@ 51
---------------------DEL MethodInvocation@@streamsHolder.getPath() @AT@ 3868 @LENGTH@ 23
------------------------DEL SimpleName@@Name:streamsHolder @AT@ 3868 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 3882 @LENGTH@ 9
---------------------INS SimpleName@@path @TO@ ClassInstanceCreation@@FileWrittenEvent[this, streamsHolder.getPath()] @AT@ 3882 @LENGTH@ 4


UPD SynchronizedStatement@@synchronized (routes) {  this.routes.addAll(routes);} @TO@ synchronized (this.routes) {  this.routes.addAll(routes);} @AT@ 34651 @LENGTH@ 73
---DEL SimpleName@@routes @AT@ 34665 @LENGTH@ 6
---INS FieldAccess@@this.routes @TO@ SynchronizedStatement@@synchronized (routes) {  this.routes.addAll(routes);} @AT@ 34670 @LENGTH@ 11
------INS ThisExpression@@this @TO@ FieldAccess@@this.routes @AT@ 34670 @LENGTH@ 4
------INS SimpleName@@routes @TO@ FieldAccess@@this.routes @AT@ 34675 @LENGTH@ 6


UPD IfStatement@@if ((value.toLowerCase().startsWith(OAuth2AccessToken.BEARER_TYPE.toLowerCase()))) {  String authHeaderValue=value.substring(OAuth2AccessToken.BEARER_TYPE.length()).trim();  int commaIndex=authHeaderValue.indexOf(',');  if (commaIndex > 0) {    authHeaderValue=authHeaderValue.substring(0,commaIndex);  }  return authHeaderValue;} @TO@ if ((value.toLowerCase().startsWith(OAuth2AccessToken.BEARER_TYPE.toLowerCase()))) {  String authHeaderValue=value.substring(OAuth2AccessToken.BEARER_TYPE.length()).trim();  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim());  int commaIndex=authHeaderValue.indexOf(',');  if (commaIndex > 0) {    authHeaderValue=authHeaderValue.substring(0,commaIndex);  }  return authHeaderValue;} @AT@ 2788 @LENGTH@ 358
---UPD Block@@ThenBody:{  String authHeaderValue=value.substring(OAuth2AccessToken.BEARER_TYPE.length()).trim();  int commaIndex=authHeaderValue.indexOf(',');  if (commaIndex > 0) {    authHeaderValue=authHeaderValue.substring(0,commaIndex);  }  return authHeaderValue;} @TO@ ThenBody:{  String authHeaderValue=value.substring(OAuth2AccessToken.BEARER_TYPE.length()).trim();  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim());  int commaIndex=authHeaderValue.indexOf(',');  if (commaIndex > 0) {    authHeaderValue=authHeaderValue.substring(0,commaIndex);  }  return authHeaderValue;} @AT@ 2871 @LENGTH@ 275
------INS ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()) @TO@ Block@@ThenBody:{  String authHeaderValue=value.substring(OAuth2AccessToken.BEARER_TYPE.length()).trim();  int commaIndex=authHeaderValue.indexOf(',');  if (commaIndex > 0) {    authHeaderValue=authHeaderValue.substring(0,commaIndex);  }  return authHeaderValue;} @AT@ 3194 @LENGTH@ 141
---------INS MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()) @TO@ ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()) @AT@ 3194 @LENGTH@ 140
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()) @AT@ 3194 @LENGTH@ 7
------------INS SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()] @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()) @AT@ 3202 @LENGTH@ 132
---------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()] @AT@ 3215 @LENGTH@ 45
------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 3215 @LENGTH@ 27
------------------INS SimpleName@@ACCESS_TOKEN_TYPE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 3243 @LENGTH@ 17
---------------INS MethodInvocation@@value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim() @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim()] @AT@ 3268 @LENGTH@ 65
------------------INS MethodInvocation@@MethodName:substring:[0, OAuth2AccessToken.BEARER_TYPE.length()] @TO@ MethodInvocation@@value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim() @AT@ 3268 @LENGTH@ 58
---------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:substring:[0, OAuth2AccessToken.BEARER_TYPE.length()] @AT@ 3284 @LENGTH@ 1
---------------------INS MethodInvocation@@OAuth2AccessToken.BEARER_TYPE.length() @TO@ MethodInvocation@@MethodName:substring:[0, OAuth2AccessToken.BEARER_TYPE.length()] @AT@ 3287 @LENGTH@ 38
------------------------INS QualifiedName@@Name:OAuth2AccessToken.BEARER_TYPE @TO@ MethodInvocation@@OAuth2AccessToken.BEARER_TYPE.length() @AT@ 3287 @LENGTH@ 29
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@OAuth2AccessToken.BEARER_TYPE.length() @AT@ 3317 @LENGTH@ 8
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim() @AT@ 3268 @LENGTH@ 5
------------------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@value.substring(0,OAuth2AccessToken.BEARER_TYPE.length()).trim() @AT@ 3327 @LENGTH@ 6


UPD VariableDeclarationStatement@@ClientDetails clientDetails=clientDetailsService.loadClientByClientId(username); @TO@ ClientDetails clientDetails; @AT@ 1790 @LENGTH@ 82
---UPD VariableDeclarationFragment@@clientDetails=clientDetailsService.loadClientByClientId(username) @TO@ clientDetails @AT@ 1804 @LENGTH@ 67


UPD Block@@ThenBody:{  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));  Collection<OAuth2AccessToken> tokens;  tokens=this.userNameToAccessTokenStore.get(authentication.getName());  if (tokens != null) {    tokens.remove(removed);  }  String clientId=authentication.getOAuth2Request().getClientId();  tokens=this.clientIdToAccessTokenStore.get(clientId);  if (tokens != null) {    tokens.remove(removed);  }  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));} @TO@ ThenBody:{  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));  Collection<OAuth2AccessToken> tokens;  String clientId=authentication.getOAuth2Request().getClientId();  tokens=this.userNameToAccessTokenStore.get(getApprovalKey(clientId,authentication.getName()));  if (tokens != null) {    tokens.remove(removed);  }  tokens=this.clientIdToAccessTokenStore.get(clientId);  if (tokens != null) {    tokens.remove(removed);  }  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));} @AT@ 8357 @LENGTH@ 574
---UPD ExpressionStatement@@Assignment:tokens=this.userNameToAccessTokenStore.get(authentication.getName()) @TO@ Assignment:tokens=this.userNameToAccessTokenStore.get(getApprovalKey(clientId,authentication.getName())) @AT@ 8507 @LENGTH@ 71
------UPD Assignment@@tokens=this.userNameToAccessTokenStore.get(authentication.getName()) @TO@ tokens=this.userNameToAccessTokenStore.get(getApprovalKey(clientId,authentication.getName())) @AT@ 8507 @LENGTH@ 70
---------UPD MethodInvocation@@this.userNameToAccessTokenStore.get(authentication.getName()) @TO@ this.userNameToAccessTokenStore.get(getApprovalKey(clientId,authentication.getName())) @AT@ 8516 @LENGTH@ 61
------------UPD SimpleName@@MethodName:get:[authentication.getName()] @TO@ MethodName:getApprovalKey:[clientId, authentication.getName()] @AT@ 8548 @LENGTH@ 29
------------INS SimpleName@@MethodName:get:[getApprovalKey(clientId,authentication.getName())] @TO@ MethodInvocation@@this.userNameToAccessTokenStore.get(authentication.getName()) @AT@ 8618 @LENGTH@ 55
---------------INS MethodInvocation@@getApprovalKey(clientId,authentication.getName()) @TO@ SimpleName@@MethodName:get:[getApprovalKey(clientId,authentication.getName())] @AT@ 8622 @LENGTH@ 50
------------------MOV SimpleName@@MethodName:get:[authentication.getName()] @TO@ MethodInvocation@@getApprovalKey(clientId,authentication.getName()) @AT@ 8548 @LENGTH@ 29
---------------------INS SimpleName@@clientId @TO@ SimpleName@@MethodName:get:[authentication.getName()] @AT@ 8637 @LENGTH@ 8
---MOV VariableDeclarationStatement@@String clientId=authentication.getOAuth2Request().getClientId(); @TO@ Block@@ThenBody:{  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));  Collection<OAuth2AccessToken> tokens;  tokens=this.userNameToAccessTokenStore.get(authentication.getName());  if (tokens != null) {    tokens.remove(removed);  }  String clientId=authentication.getOAuth2Request().getClientId();  tokens=this.clientIdToAccessTokenStore.get(clientId);  if (tokens != null) {    tokens.remove(removed);  }  this.authenticationToAccessTokenStore.remove(authenticationKeyGenerator.extractKey(authentication));} @AT@ 8640 @LENGTH@ 66


UPD EnhancedForStatement@@for (EncodedColumnBatch.StreamBuffer sb : sbs) {  if (sb.decRef() != 0)   continue;  upstreamFeedback.returnData(sb);} @TO@ for (EncodedColumnBatch.StreamBuffer sb : sbs) {  upstreamFeedback.returnData(sb);} @AT@ 3877 @LENGTH@ 137
---DEL IfStatement@@if (sb.decRef() != 0) continue; @AT@ 3934 @LENGTH@ 31
------DEL InfixExpression@@sb.decRef() != 0 @AT@ 3938 @LENGTH@ 16
---------DEL MethodInvocation@@sb.decRef() @AT@ 3938 @LENGTH@ 11
------------DEL SimpleName@@Name:sb @AT@ 3938 @LENGTH@ 2
------------DEL SimpleName@@MethodName:decRef:[] @AT@ 3941 @LENGTH@ 8
---------DEL Operator@@!= @AT@ 3949 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 3953 @LENGTH@ 1
------DEL Block@@ThenBody:continue; @AT@ 3956 @LENGTH@ 9
---------DEL ContinueStatement@@ @AT@ 3956 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOG.info("Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead)) @TO@ MethodInvocation:LOG.info("Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 9752 @LENGTH@ 92
---UPD MethodInvocation@@LOG.info("Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead)) @TO@ LOG.info("Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 9752 @LENGTH@ 91
------UPD SimpleName@@MethodName:info:["Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead)] @TO@ MethodName:info:["Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead.next)] @AT@ 9756 @LENGTH@ 87
---------UPD InfixExpression@@"Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead) @TO@ "Resulting disk ranges to read: " + RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 9761 @LENGTH@ 81
------------UPD MethodInvocation@@RecordReaderUtils.stringifyDiskRanges(toRead) @TO@ RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 9797 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:stringifyDiskRanges:[toRead] @TO@ MethodName:stringifyDiskRanges:[toRead.next] @AT@ 9815 @LENGTH@ 27
------------------DEL SimpleName@@toRead @AT@ 9835 @LENGTH@ 6
------------------INS QualifiedName@@toRead.next @TO@ SimpleName@@MethodName:stringifyDiskRanges:[toRead] @AT@ 9845 @LENGTH@ 11
---------------------INS SimpleName@@toRead @TO@ QualifiedName@@toRead.next @AT@ 9845 @LENGTH@ 6
---------------------INS SimpleName@@next @TO@ QualifiedName@@toRead.next @AT@ 9852 @LENGTH@ 4


INS VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @TO@ MethodDeclaration@@public, void, MethodName:testReadWithReadSuffix, Exception,  @AT@ 9434 @LENGTH@ 58
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @AT@ 9434 @LENGTH@ 3
---INS VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @TO@ VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @AT@ 9438 @LENGTH@ 53
------INS SimpleName@@before @TO@ VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @AT@ 9438 @LENGTH@ 6
------INS ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @TO@ VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @AT@ 9447 @LENGTH@ 44
---------INS InfixExpression@@beforeFiles != null @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9447 @LENGTH@ 19
------------INS SimpleName@@beforeFiles @TO@ InfixExpression@@beforeFiles != null @AT@ 9447 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@beforeFiles != null @AT@ 9458 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@beforeFiles != null @AT@ 9462 @LENGTH@ 4
---------INS QualifiedName@@beforeFiles.length @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9469 @LENGTH@ 18
------------INS SimpleName@@beforeFiles @TO@ QualifiedName@@beforeFiles.length @AT@ 9469 @LENGTH@ 11
------------INS SimpleName@@length @TO@ QualifiedName@@beforeFiles.length @AT@ 9481 @LENGTH@ 6
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9490 @LENGTH@ 1


UPD FieldDeclaration@@private, final, DateTimeFormatter, [dateFormat=ISODateTimeFormat.dateTime()] @TO@ private, DateTimeFormatter, [dateFormat=ISODateTimeFormat.dateTime()] @AT@ 1623 @LENGTH@ 74
---DEL Modifier@@final @AT@ 1631 @LENGTH@ 5


INS VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @TO@ MethodDeclaration@@public, void, MethodName:testReadWithReadSuffix, Exception,  @AT@ 9476 @LENGTH@ 58
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @AT@ 9476 @LENGTH@ 3
---INS VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @TO@ VariableDeclarationStatement@@int before=beforeFiles != null ? beforeFiles.length : 0; @AT@ 9480 @LENGTH@ 53
------INS SimpleName@@before @TO@ VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @AT@ 9480 @LENGTH@ 6
------INS ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @TO@ VariableDeclarationFragment@@before=beforeFiles != null ? beforeFiles.length : 0 @AT@ 9489 @LENGTH@ 44
---------INS InfixExpression@@beforeFiles != null @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9489 @LENGTH@ 19
------------INS SimpleName@@beforeFiles @TO@ InfixExpression@@beforeFiles != null @AT@ 9489 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@beforeFiles != null @AT@ 9500 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@beforeFiles != null @AT@ 9504 @LENGTH@ 4
---------INS QualifiedName@@beforeFiles.length @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9511 @LENGTH@ 18
------------INS SimpleName@@beforeFiles @TO@ QualifiedName@@beforeFiles.length @AT@ 9511 @LENGTH@ 11
------------INS SimpleName@@length @TO@ QualifiedName@@beforeFiles.length @AT@ 9523 @LENGTH@ 6
---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@beforeFiles != null ? beforeFiles.length : 0 @AT@ 9532 @LENGTH@ 1


UPD MethodDeclaration@@private, Class, MethodName:getResultType, Exchange exchange, ClassNotFoundException,  @TO@ private, Class<?>, MethodName:getResultType, Exchange exchange, ClassNotFoundException,  @AT@ 5472 @LENGTH@ 340
---INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@private, Class, MethodName:getResultType, Exchange exchange, ClassNotFoundException,  @AT@ 5480 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 5480 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 5486 @LENGTH@ 1
---DEL SimpleType@@Class @AT@ 5480 @LENGTH@ 5


UPD MethodDeclaration@@public, T, MethodName:doSomething, S foo,  @TO@ T, MethodName:doSomething, S foo,  @AT@ 903 @LENGTH@ 28
---DEL Modifier@@public @AT@ 903 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:testOwnCodePointToStringConversion, Exception,  @TO@ public, void, MethodName:testHelpersCodePointToStringConversion, Exception,  @AT@ 66440 @LENGTH@ 265
---UPD SimpleName@@MethodName:testOwnCodePointToStringConversion @TO@ MethodName:testHelpersCodePointToStringConversion @AT@ 66452 @LENGTH@ 34


UPD VariableDeclarationStatement@@PreparedStatement pstmt=initStatement(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key); @TO@ ResultSet rs=openResultSet(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key); @AT@ 16043 @LENGTH@ 127
---UPD SimpleType@@PreparedStatement @TO@ ResultSet @AT@ 16043 @LENGTH@ 17
---UPD VariableDeclarationFragment@@pstmt=initStatement(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key) @TO@ rs=openResultSet(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key) @AT@ 16061 @LENGTH@ 108
------UPD SimpleName@@pstmt @TO@ rs @AT@ 16061 @LENGTH@ 5
------UPD MethodInvocation@@initStatement(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key) @TO@ openResultSet(String.format(SQL_GET_PROPERTY,table,keyColumn),true,key) @AT@ 16069 @LENGTH@ 100
---------UPD SimpleName@@MethodName:initStatement:[String.format(SQL_GET_PROPERTY,table,keyColumn), true, key] @TO@ MethodName:openResultSet:[String.format(SQL_GET_PROPERTY,table,keyColumn), true, key] @AT@ 16069 @LENGTH@ 100


UPD VariableDeclarationStatement@@final ResourceMetadata metadata=mappings.getMappingFor(entity.getType()); @TO@ final ResourceMetadata metadata=mappings.getMetadataFor(entity.getType()); @AT@ 4894 @LENGTH@ 75
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(entity.getType()) @TO@ metadata=mappings.getMetadataFor(entity.getType()) @AT@ 4917 @LENGTH@ 51
------UPD MethodInvocation@@mappings.getMappingFor(entity.getType()) @TO@ mappings.getMetadataFor(entity.getType()) @AT@ 4928 @LENGTH@ 40
---------UPD SimpleName@@MethodName:getMappingFor:[entity.getType()] @TO@ MethodName:getMetadataFor:[entity.getType()] @AT@ 4937 @LENGTH@ 31


INS ExpressionStatement@@MethodInvocation:assertEquals("4e863a809aa7f7cc191be93705967394",HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))) @TO@ MethodDeclaration@@public, void, MethodName:testH_A1, Exception,  @AT@ 2056 @LENGTH@ 389
---INS MethodInvocation@@assertEquals("4e863a809aa7f7cc191be93705967394",HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("4e863a809aa7f7cc191be93705967394",HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))) @AT@ 2056 @LENGTH@ 388
------INS SimpleName@@MethodName:assertEquals:["4e863a809aa7f7cc191be93705967394", HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))] @TO@ MethodInvocation@@assertEquals("4e863a809aa7f7cc191be93705967394",HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))) @AT@ 2056 @LENGTH@ 388
---------INS StringLiteral@@"4e863a809aa7f7cc191be93705967394" @TO@ SimpleName@@MethodName:assertEquals:["4e863a809aa7f7cc191be93705967394", HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))] @AT@ 2069 @LENGTH@ 34
---------INS MethodInvocation@@HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8)) @TO@ SimpleName@@MethodName:assertEquals:["4e863a809aa7f7cc191be93705967394", HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8))] @AT@ 2105 @LENGTH@ 338
------------INS SimpleName@@Name:HexConverter @TO@ MethodInvocation@@HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8)) @AT@ 2105 @LENGTH@ 12
------------INS SimpleName@@MethodName:convertToHexString:[H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8)] @TO@ MethodInvocation@@HexConverter.convertToHexString(H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8)) @AT@ 2118 @LENGTH@ 325
---------------INS MethodInvocation@@H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8) @TO@ SimpleName@@MethodName:convertToHexString:[H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8)] @AT@ 2154 @LENGTH@ 288
------------------INS SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @TO@ MethodInvocation@@H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8) @AT@ 2154 @LENGTH@ 288
---------------------INS SimpleName@@md @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2159 @LENGTH@ 2
---------------------INS StringLiteral@@"\u0438\u4F60\uD83C\uDCA1" @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2163 @LENGTH@ 26
---------------------INS StringLiteral@@"realm.\u0438\u4F60\uD83C\uDCA1.com" @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2191 @LENGTH@ 36
---------------------INS MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2229 @LENGTH@ 40
------------------------INS StringLiteral@@"\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @AT@ 2229 @LENGTH@ 26
------------------------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @AT@ 2256 @LENGTH@ 13
---------------------INS MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2287 @LENGTH@ 61
------------------------INS StringLiteral@@"sn\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2287 @LENGTH@ 28
------------------------INS SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @TO@ MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2316 @LENGTH@ 32
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2325 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2325 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2342 @LENGTH@ 5
---------------------INS MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2350 @LENGTH@ 61
------------------------INS StringLiteral@@"cn\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2350 @LENGTH@ 28
------------------------INS SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @TO@ MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2379 @LENGTH@ 32
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2388 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2388 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2405 @LENGTH@ 5
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2413 @LENGTH@ 4
---------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2419 @LENGTH@ 22
------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2419 @LENGTH@ 16
------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2436 @LENGTH@ 5
------------------INS SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @TO@ MethodInvocation@@H_A1(md,"\u0438\u4F60\uD83C\uDCA1","realm.\u0438\u4F60\uD83C\uDCA1.com","\u0438\u4F60\uD83C\uDCA1".toCharArray(),"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8),null,StandardCharsets.UTF_8) @AT@ 2154 @LENGTH@ 288
---------------------INS SimpleName@@md @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2159 @LENGTH@ 2
---------------------INS StringLiteral@@"\u0438\u4F60\uD83C\uDCA1" @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2163 @LENGTH@ 26
---------------------INS StringLiteral@@"realm.\u0438\u4F60\uD83C\uDCA1.com" @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2191 @LENGTH@ 36
---------------------INS MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2229 @LENGTH@ 40
------------------------INS StringLiteral@@"\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @AT@ 2229 @LENGTH@ 26
------------------------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"\u0438\u4F60\uD83C\uDCA1".toCharArray() @AT@ 2256 @LENGTH@ 13
---------------------INS MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2287 @LENGTH@ 61
------------------------INS StringLiteral@@"sn\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2287 @LENGTH@ 28
------------------------INS SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @TO@ MethodInvocation@@"sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2316 @LENGTH@ 32
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2325 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2325 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2342 @LENGTH@ 5
---------------------INS MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2350 @LENGTH@ 61
------------------------INS StringLiteral@@"cn\u0438\u4F60\uD83C\uDCA1" @TO@ MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2350 @LENGTH@ 28
------------------------INS SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @TO@ MethodInvocation@@"cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8) @AT@ 2379 @LENGTH@ 32
---------------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2388 @LENGTH@ 22
------------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2388 @LENGTH@ 16
------------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2405 @LENGTH@ 5
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2413 @LENGTH@ 4
---------------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:H_A1:[md, "\u0438\u4F60\uD83C\uDCA1", "realm.\u0438\u4F60\uD83C\uDCA1.com", "\u0438\u4F60\uD83C\uDCA1".toCharArray(), "sn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), "cn\u0438\u4F60\uD83C\uDCA1".getBytes(StandardCharsets.UTF_8), null, StandardCharsets.UTF_8] @AT@ 2419 @LENGTH@ 22
------------------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2419 @LENGTH@ 16
------------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2436 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:path.append("/") @TO@ MethodInvocation:path.append(SEPARATOR) @AT@ 468 @LENGTH@ 19
---UPD MethodInvocation@@path.append("/") @TO@ path.append(SEPARATOR) @AT@ 468 @LENGTH@ 18
------UPD SimpleName@@MethodName:append:["/"] @TO@ MethodName:append:[SEPARATOR] @AT@ 473 @LENGTH@ 13
---------INS SimpleName@@SEPARATOR @TO@ SimpleName@@MethodName:append:["/"] @AT@ 481 @LENGTH@ 9
---------DEL StringLiteral@@"/" @AT@ 481 @LENGTH@ 3


MOV FieldDeclaration@@private, boolean, [stopOnEviction] @TO@ TypeDeclaration@@[public]LRUCache, [Map<K,V>, EvictionListener<K,V>, Serializable] @AT@ 1745 @LENGTH@ 31


INS TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 3020 @LENGTH@ 304
---MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown(managementClient,containerId) @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3020 @LENGTH@ 46
---INS Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3111 @LENGTH@ 213
------INS TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ Block@@FinallyBody:{  try {    remove(address1,managementClient);  }  finally {    removeModule("org/jboss/ironjacamar/ra16out1",true);  }} @AT@ 3129 @LENGTH@ 181
---------INS ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3155 @LENGTH@ 35
------------MOV MethodInvocation@@remove(address1) @TO@ ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @AT@ 3079 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:remove:[address1] @TO@ MethodName:remove:[address1, managementClient] @AT@ 3079 @LENGTH@ 16
------------------INS SimpleName@@managementClient @TO@ SimpleName@@MethodName:remove:[address1] @AT@ 3172 @LENGTH@ 16
---------INS Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @TO@ TryStatement@@try {  remove(address1,managementClient);}  finally {  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3217 @LENGTH@ 93
------------MOV ExpressionStatement@@MethodInvocation:removeModule("org/jboss/ironjacamar/ra16out1",true) @TO@ Block@@FinallyBody:{  removeModule("org/jboss/ironjacamar/ra16out1",true);} @AT@ 3109 @LENGTH@ 53


UPD ReturnStatement@@MethodInvocation:baseTypeId.equals(CamelCMISConstants.CMIS_DOCUMENT) @TO@ MethodInvocation:CamelCMISConstants.CMIS_DOCUMENT.equals(cmisSessionFacade.getCMISTypeFor(baseTypeId)) @AT@ 6100 @LENGTH@ 59
---UPD MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_DOCUMENT) @TO@ CamelCMISConstants.CMIS_DOCUMENT.equals(cmisSessionFacade.getCMISTypeFor(baseTypeId)) @AT@ 6107 @LENGTH@ 51
------UPD SimpleName@@Name:baseTypeId @TO@ Name:cmisSessionFacade @AT@ 6107 @LENGTH@ 10
------UPD SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_DOCUMENT] @TO@ MethodName:getCMISTypeFor:[baseTypeId] @AT@ 6118 @LENGTH@ 40
------INS QualifiedName@@Name:CamelCMISConstants.CMIS_DOCUMENT @TO@ MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_DOCUMENT) @AT@ 6141 @LENGTH@ 32
------INS SimpleName@@MethodName:equals:[cmisSessionFacade.getCMISTypeFor(baseTypeId)] @TO@ MethodInvocation@@baseTypeId.equals(CamelCMISConstants.CMIS_DOCUMENT) @AT@ 6174 @LENGTH@ 52
---------INS MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @TO@ SimpleName@@MethodName:equals:[cmisSessionFacade.getCMISTypeFor(baseTypeId)] @AT@ 6181 @LENGTH@ 44
------------MOV SimpleName@@Name:baseTypeId @TO@ MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @AT@ 6107 @LENGTH@ 10
------------MOV SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_DOCUMENT] @TO@ MethodInvocation@@cmisSessionFacade.getCMISTypeFor(baseTypeId) @AT@ 6118 @LENGTH@ 40
---------------DEL QualifiedName@@CamelCMISConstants.CMIS_DOCUMENT @AT@ 6125 @LENGTH@ 32
------------------DEL SimpleName@@CamelCMISConstants @AT@ 6125 @LENGTH@ 18
------------------DEL SimpleName@@CMIS_DOCUMENT @AT@ 6144 @LENGTH@ 13
---------------INS SimpleName@@baseTypeId @TO@ SimpleName@@MethodName:equals:[CamelCMISConstants.CMIS_DOCUMENT] @AT@ 6214 @LENGTH@ 10


MOV FieldDeclaration@@protected, final, Logger, [log=LoggerFactory.getLogger(getClass())] @TO@ TypeDeclaration@@[public]DefaultPropertiesParser, [AugmentedPropertyNameAwarePropertiesParser] @AT@ 1244 @LENGTH@ 65


UPD ReturnStatement@@MethodInvocation:message.getBody(new byte[0].getClass()) @TO@ MethodInvocation:message.getBody(byte[].class) @AT@ 7153 @LENGTH@ 47
---UPD MethodInvocation@@message.getBody(new byte[0].getClass()) @TO@ message.getBody(byte[].class) @AT@ 7160 @LENGTH@ 39
------UPD SimpleName@@MethodName:getBody:[new byte[0].getClass()] @TO@ MethodName:getBody:[byte[].class] @AT@ 7168 @LENGTH@ 31
---------DEL MethodInvocation@@new byte[0].getClass() @AT@ 7176 @LENGTH@ 22
------------DEL ArrayCreation@@new byte[0] @AT@ 7176 @LENGTH@ 11
---------------DEL ArrayType@@byte[] @AT@ 7180 @LENGTH@ 7
------------------DEL PrimitiveType@@byte @AT@ 7180 @LENGTH@ 4
---------------DEL NumberLiteral@@0 @AT@ 7185 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getClass:[] @AT@ 7188 @LENGTH@ 10
---------INS TypeLiteral@@byte[].class @TO@ SimpleName@@MethodName:getBody:[new byte[0].getClass()] @AT@ 7189 @LENGTH@ 12


UPD EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\\\\\"",QUOT);  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @TO@ for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"');  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");        value=decodeJson(value);      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 5002 @LENGTH@ 1860
---UPD ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @TO@ Assignment:line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 5470 @LENGTH@ 39
------UPD Assignment@@line=line.replaceAll("\\\\\"",QUOT) @TO@ line=line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 5470 @LENGTH@ 38
---------UPD MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @TO@ line.replaceAll("\"\\\\\"\"",'"' + QUOT + '"') @AT@ 5477 @LENGTH@ 31
------------UPD SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @TO@ MethodName:replaceAll:["\"\\\\\"\"", '"' + QUOT + '"'] @AT@ 5482 @LENGTH@ 26
---------------UPD StringLiteral@@"\\\\\"" @TO@ "\"\\\\\"\"" @AT@ 5493 @LENGTH@ 8
---------------DEL SimpleName@@QUOT @AT@ 5503 @LENGTH@ 4
---------------INS InfixExpression@@'"' + QUOT + '"' @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 5507 @LENGTH@ 16
------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 5507 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 5510 @LENGTH@ 1
------------------INS SimpleName@@QUOT @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 5513 @LENGTH@ 4
------------------INS CharacterLiteral@@'"' @TO@ InfixExpression@@'"' + QUOT + '"' @AT@ 5520 @LENGTH@ 3
---UPD WhileStatement@@while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @TO@ while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");      value=decodeJson(value);    }    row.put(key,value);    key=null;  }} @AT@ 5930 @LENGTH@ 841
------UPD Block@@WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @TO@ WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");      value=decodeJson(value);    }    row.put(key,value);    key=null;  }} @AT@ 5953 @LENGTH@ 818
---------UPD IfStatement@@if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @TO@ if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");    value=decodeJson(value);  }  row.put(key,value);  key=null;} @AT@ 5971 @LENGTH@ 786
------------UPD Block@@ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @TO@ ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");    value=decodeJson(value);  }  row.put(key,value);  key=null;} @AT@ 6057 @LENGTH@ 700
---------------UPD IfStatement@@if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @TO@ if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");  value=decodeJson(value);} @AT@ 6448 @LENGTH@ 189
------------------UPD Block@@ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @TO@ ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");  value=decodeJson(value);} @AT@ 6467 @LENGTH@ 170
---------------------INS ExpressionStatement@@Assignment:value=decodeJson(value) @TO@ Block@@ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 6651 @LENGTH@ 26
------------------------INS Assignment@@value=decodeJson(value) @TO@ ExpressionStatement@@Assignment:value=decodeJson(value) @AT@ 6651 @LENGTH@ 25
---------------------------INS SimpleName@@value @TO@ Assignment@@value=decodeJson(value) @AT@ 6651 @LENGTH@ 5
---------------------------INS Operator@@= @TO@ Assignment@@value=decodeJson(value) @AT@ 6656 @LENGTH@ 1
---------------------------INS MethodInvocation@@decodeJson(value) @TO@ Assignment@@value=decodeJson(value) @AT@ 6659 @LENGTH@ 17
------------------------------INS SimpleName@@MethodName:decodeJson:[value] @TO@ MethodInvocation@@decodeJson(value) @AT@ 6659 @LENGTH@ 17
---------------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:decodeJson:[value] @AT@ 6670 @LENGTH@ 5


UPD EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @TO@ for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  line=line.replaceAll("\\\\\"",QUOT);  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();        value=value.replaceAll(QUOT,"\"");      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 4953 @LENGTH@ 1643
---INS ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @TO@ EnhancedForStatement@@for (String line : lines) {  if (!found) {    String s=line.trim();    found=s.startsWith("\"" + group + "\":");    continue;  }  if (line.equals("  },") || line.equals("  }")) {    break;  }  Map<String,String> row=new LinkedHashMap<String,String>();  Matcher matcher=PATTERN.matcher(line);  String key;  if (parseProperties) {    key="name";  } else {    key=null;  }  while (matcher.find()) {    if (key == null) {      key=matcher.group(1);    } else {      String value=matcher.group(1);      if (value == null) {        value=matcher.group(2);        value=value.replaceAll("\"","");        value=value.replaceAll(", ",",");      }      if (value != null) {        value=value.trim();      }      row.put(key,value);      key=null;    }  }  if (!row.isEmpty()) {    answer.add(row);  }} @AT@ 5470 @LENGTH@ 39
------INS Assignment@@line=line.replaceAll("\\\\\"",QUOT) @TO@ ExpressionStatement@@Assignment:line=line.replaceAll("\\\\\"",QUOT) @AT@ 5470 @LENGTH@ 38
---------INS SimpleName@@line @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 5470 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 5474 @LENGTH@ 1
---------INS MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @TO@ Assignment@@line=line.replaceAll("\\\\\"",QUOT) @AT@ 5477 @LENGTH@ 31
------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @AT@ 5477 @LENGTH@ 4
------------INS SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @TO@ MethodInvocation@@line.replaceAll("\\\\\"",QUOT) @AT@ 5482 @LENGTH@ 26
---------------INS StringLiteral@@"\\\\\"" @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 5493 @LENGTH@ 8
---------------INS SimpleName@@QUOT @TO@ SimpleName@@MethodName:replaceAll:["\\\\\"", QUOT] @AT@ 5503 @LENGTH@ 4
---UPD WhileStatement@@while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();    }    row.put(key,value);    key=null;  }} @TO@ while (matcher.find()) {  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @AT@ 5765 @LENGTH@ 740
------UPD Block@@WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();    }    row.put(key,value);    key=null;  }} @TO@ WhileBody:{  if (key == null) {    key=matcher.group(1);  } else {    String value=matcher.group(1);    if (value == null) {      value=matcher.group(2);      value=value.replaceAll("\"","");      value=value.replaceAll(", ",",");    }    if (value != null) {      value=value.trim();      value=value.replaceAll(QUOT,"\"");    }    row.put(key,value);    key=null;  }} @AT@ 5788 @LENGTH@ 717
---------UPD IfStatement@@if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();  }  row.put(key,value);  key=null;} @TO@ if (key == null) {  key=matcher.group(1);} else {  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @AT@ 5806 @LENGTH@ 685
------------UPD Block@@ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();  }  row.put(key,value);  key=null;} @TO@ ElseBody:{  String value=matcher.group(1);  if (value == null) {    value=matcher.group(2);    value=value.replaceAll("\"","");    value=value.replaceAll(", ",",");  }  if (value != null) {    value=value.trim();    value=value.replaceAll(QUOT,"\"");  }  row.put(key,value);  key=null;} @AT@ 5892 @LENGTH@ 599
---------------UPD IfStatement@@if (value != null) {  value=value.trim();} @TO@ if (value != null) {  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 6283 @LENGTH@ 88
------------------UPD Block@@ThenBody:{  value=value.trim();} @TO@ ThenBody:{  value=value.trim();  value=value.replaceAll(QUOT,"\"");} @AT@ 6302 @LENGTH@ 69
---------------------INS ExpressionStatement@@Assignment:value=value.replaceAll(QUOT,"\"") @TO@ Block@@ThenBody:{  value=value.trim();} @AT@ 6578 @LENGTH@ 37
------------------------INS Assignment@@value=value.replaceAll(QUOT,"\"") @TO@ ExpressionStatement@@Assignment:value=value.replaceAll(QUOT,"\"") @AT@ 6578 @LENGTH@ 36
---------------------------INS SimpleName@@value @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 6578 @LENGTH@ 5
---------------------------INS Operator@@= @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 6583 @LENGTH@ 1
---------------------------INS MethodInvocation@@value.replaceAll(QUOT,"\"") @TO@ Assignment@@value=value.replaceAll(QUOT,"\"") @AT@ 6586 @LENGTH@ 28
------------------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.replaceAll(QUOT,"\"") @AT@ 6586 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:replaceAll:[QUOT, "\""] @TO@ MethodInvocation@@value.replaceAll(QUOT,"\"") @AT@ 6592 @LENGTH@ 22
---------------------------------INS SimpleName@@QUOT @TO@ SimpleName@@MethodName:replaceAll:[QUOT, "\""] @AT@ 6603 @LENGTH@ 4
---------------------------------INS StringLiteral@@"\"" @TO@ SimpleName@@MethodName:replaceAll:[QUOT, "\""] @AT@ 6609 @LENGTH@ 4


UPD FieldDeclaration@@private, String, [prefix=null] @TO@ private, String, [prefix] @AT@ 2558 @LENGTH@ 29
---UPD VariableDeclarationFragment@@prefix=null @TO@ prefix @AT@ 2573 @LENGTH@ 13
------DEL NullLiteral@@null @AT@ 2582 @LENGTH@ 4


INS IfStatement@@if (len == 0) {  return NO_BYTES;} @TO@ MethodDeclaration@@public, byte[], MethodName:unwrap, final byte[] incoming, final int offset, final int len, SaslException,  @AT@ 7348 @LENGTH@ 53
---INS InfixExpression@@len == 0 @TO@ IfStatement@@if (len == 0) {  return NO_BYTES;} @AT@ 7351 @LENGTH@ 8
------INS SimpleName@@len @TO@ InfixExpression@@len == 0 @AT@ 7351 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@len == 0 @AT@ 7354 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@len == 0 @AT@ 7358 @LENGTH@ 1
---INS Block@@ThenBody:{  return NO_BYTES;} @TO@ IfStatement@@if (len == 0) {  return NO_BYTES;} @AT@ 7361 @LENGTH@ 40
------INS ReturnStatement@@SimpleName:NO_BYTES @TO@ Block@@ThenBody:{  return NO_BYTES;} @AT@ 7375 @LENGTH@ 16
---------INS SimpleName@@NO_BYTES @TO@ ReturnStatement@@SimpleName:NO_BYTES @AT@ 7382 @LENGTH@ 8


INS VariableDeclarationStatement@@FileWriter fw=new FileWriter(script); @TO@ MethodDeclaration@@private, void, MethodName:writeScript, File script, IOException,  @AT@ 3664 @LENGTH@ 39
---INS SimpleType@@FileWriter @TO@ VariableDeclarationStatement@@FileWriter fw=new FileWriter(script); @AT@ 3664 @LENGTH@ 10
---MOV VariableDeclarationFragment@@fw=new FileWriter(script) @TO@ VariableDeclarationStatement@@FileWriter fw=new FileWriter(script); @AT@ 3680 @LENGTH@ 27


DEL IfStatement@@if (request.getCookie() != null) {  headers.set("Cookie",request.getCookie());} @AT@ 8988 @LENGTH@ 85
---DEL InfixExpression@@request.getCookie() != null @AT@ 8992 @LENGTH@ 27
------DEL MethodInvocation@@request.getCookie() @AT@ 8992 @LENGTH@ 19
---------DEL SimpleName@@Name:request @AT@ 8992 @LENGTH@ 7
---------DEL SimpleName@@MethodName:getCookie:[] @AT@ 9000 @LENGTH@ 11
------DEL Operator@@!= @AT@ 9011 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 9015 @LENGTH@ 4
---DEL Block@@ThenBody:{  headers.set("Cookie",request.getCookie());} @AT@ 9021 @LENGTH@ 52
------DEL ExpressionStatement@@MethodInvocation:headers.set("Cookie",request.getCookie()) @AT@ 9026 @LENGTH@ 43
---------DEL MethodInvocation@@headers.set("Cookie",request.getCookie()) @AT@ 9026 @LENGTH@ 42
------------DEL SimpleName@@Name:headers @AT@ 9026 @LENGTH@ 7
------------DEL SimpleName@@MethodName:set:["Cookie", request.getCookie()] @AT@ 9034 @LENGTH@ 34
---------------DEL StringLiteral@@"Cookie" @AT@ 9038 @LENGTH@ 8
---------------DEL MethodInvocation@@request.getCookie() @AT@ 9048 @LENGTH@ 19
------------------DEL SimpleName@@Name:request @AT@ 9048 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getCookie:[] @AT@ 9056 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:merge, List<Text> other, HiveException,  @TO@ public, void, MethodName:merge, List other, HiveException,  @AT@ 6940 @LENGTH@ 1653
---UPD SingleVariableDeclaration@@List<Text> other @TO@ List other @AT@ 6958 @LENGTH@ 16
------DEL ParameterizedType@@List<Text> @AT@ 6958 @LENGTH@ 10
---------DEL SimpleType@@List @AT@ 6958 @LENGTH@ 4
---------DEL SimpleType@@Text @AT@ 6963 @LENGTH@ 4
------INS SimpleType@@List @TO@ SingleVariableDeclaration@@List<Text> other @AT@ 6958 @LENGTH@ 4
---UPD ForStatement@@for (int i=3; i < other.size(); i++) {  ArrayList<String> key=new ArrayList<String>();  for (int j=0; j < n; j++) {    Text word=other.get(i + j);    key.add(word.toString());  }  i+=n;  double val=Double.parseDouble(other.get(i).toString());  Double myval=ngrams.get(key);  if (myval == null) {    myval=new Double(val);  } else {    myval+=val;  }  ngrams.put(key,myval);} @TO@ for (int i=3; i < other.size(); i++) {  ArrayList<String> key=new ArrayList<String>();  for (int j=0; j < n; j++) {    key.add(other.get(i + j).toString());  }  i+=n;  double val=Double.parseDouble(other.get(i).toString());  Double myval=ngrams.get(key);  if (myval == null) {    myval=new Double(val);  } else {    myval+=val;  }  ngrams.put(key,myval);} @AT@ 8106 @LENGTH@ 465
------UPD ForStatement@@for (int j=0; j < n; j++) {  Text word=other.get(i + j);  key.add(word.toString());} @TO@ for (int j=0; j < n; j++) {  key.add(other.get(i + j).toString());} @AT@ 8207 @LENGTH@ 106
---------INS ExpressionStatement@@MethodInvocation:key.add(other.get(i + j).toString()) @TO@ ForStatement@@for (int j=0; j < n; j++) {  Text word=other.get(i + j);  key.add(word.toString());} @AT@ 8238 @LENGTH@ 35
------------INS MethodInvocation@@key.add(other.get(i + j).toString()) @TO@ ExpressionStatement@@MethodInvocation:key.add(other.get(i + j).toString()) @AT@ 8238 @LENGTH@ 34
---------------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.add(other.get(i + j).toString()) @AT@ 8238 @LENGTH@ 3
---------------INS SimpleName@@MethodName:add:[other.get(i + j).toString()] @TO@ MethodInvocation@@key.add(other.get(i + j).toString()) @AT@ 8242 @LENGTH@ 30
------------------INS MethodInvocation@@other.get(i + j).toString() @TO@ SimpleName@@MethodName:add:[other.get(i + j).toString()] @AT@ 8246 @LENGTH@ 25
---------------------INS MethodInvocation@@MethodName:get:[i + j] @TO@ MethodInvocation@@other.get(i + j).toString() @AT@ 8246 @LENGTH@ 14
------------------------INS InfixExpression@@i + j @TO@ MethodInvocation@@MethodName:get:[i + j] @AT@ 8256 @LENGTH@ 3
---------------------------MOV SimpleName@@i @TO@ InfixExpression@@i + j @AT@ 8266 @LENGTH@ 1
---------------------------MOV Operator@@+ @TO@ InfixExpression@@i + j @AT@ 8267 @LENGTH@ 1
---------------------------MOV SimpleName@@j @TO@ InfixExpression@@i + j @AT@ 8268 @LENGTH@ 1
---------------------MOV SimpleName@@Name:other @TO@ MethodInvocation@@other.get(i + j).toString() @AT@ 8256 @LENGTH@ 5
---------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@other.get(i + j).toString() @AT@ 8293 @LENGTH@ 10
---------DEL VariableDeclarationStatement@@Text word=other.get(i + j); @AT@ 8244 @LENGTH@ 27
------------DEL SimpleType@@Text @AT@ 8244 @LENGTH@ 4
------------DEL VariableDeclarationFragment@@word=other.get(i + j) @AT@ 8249 @LENGTH@ 21
---------------DEL SimpleName@@word @AT@ 8249 @LENGTH@ 4
---------------DEL MethodInvocation@@other.get(i + j) @AT@ 8256 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:get:[i + j] @AT@ 8262 @LENGTH@ 8
---------------------DEL InfixExpression@@i + j @AT@ 8266 @LENGTH@ 3
---------DEL ExpressionStatement@@MethodInvocation:key.add(word.toString()) @AT@ 8280 @LENGTH@ 25
------------DEL MethodInvocation@@key.add(word.toString()) @AT@ 8280 @LENGTH@ 24
---------------DEL SimpleName@@Name:key @AT@ 8280 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:add:[word.toString()] @AT@ 8284 @LENGTH@ 20
------------------DEL MethodInvocation@@word.toString() @AT@ 8288 @LENGTH@ 15
---------------------DEL SimpleName@@Name:word @AT@ 8288 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @TO@ TypeDeclaration@@[public]MessageProperties, [Serializable] @AT@ 1628 @LENGTH@ 75
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @AT@ 1628 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @AT@ 1635 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @AT@ 1642 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @AT@ 1648 @LENGTH@ 6
---INS VariableDeclarationFragment@@SPRING_AUTO_DECOMPRESS="springAutoDecompress" @TO@ FieldDeclaration@@public, static, final, String, [SPRING_AUTO_DECOMPRESS="springAutoDecompress"] @AT@ 1655 @LENGTH@ 47
------INS SimpleName@@SPRING_AUTO_DECOMPRESS @TO@ VariableDeclarationFragment@@SPRING_AUTO_DECOMPRESS="springAutoDecompress" @AT@ 1655 @LENGTH@ 22
------INS StringLiteral@@"springAutoDecompress" @TO@ VariableDeclarationFragment@@SPRING_AUTO_DECOMPRESS="springAutoDecompress" @AT@ 1680 @LENGTH@ 22


INS IfStatement@@if (isPlatform("windows")) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testRef, Exception,  @AT@ 1811 @LENGTH@ 58
---INS MethodInvocation@@isPlatform("windows") @TO@ IfStatement@@if (isPlatform("windows")) {  return;} @AT@ 1815 @LENGTH@ 21
------INS SimpleName@@MethodName:isPlatform:["windows"] @TO@ MethodInvocation@@isPlatform("windows") @AT@ 1815 @LENGTH@ 21
---------INS StringLiteral@@"windows" @TO@ SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1826 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (isPlatform("windows")) {  return;} @AT@ 1838 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1852 @LENGTH@ 7


INS VariableDeclarationStatement@@int before=new File("target/test").list().length; @TO@ MethodDeclaration@@public, void, MethodName:testReadWithReadSuffix, Exception,  @AT@ 9326 @LENGTH@ 51
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9326 @LENGTH@ 3
---INS VariableDeclarationFragment@@before=new File("target/test").list().length @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9330 @LENGTH@ 46
------INS SimpleName@@before @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9330 @LENGTH@ 6
------INS FieldAccess@@new File("target/test").list().length @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9339 @LENGTH@ 37
---------INS MethodInvocation@@new File("target/test").list() @TO@ FieldAccess@@new File("target/test").list().length @AT@ 9339 @LENGTH@ 30
------------INS ClassInstanceCreation@@File["target/test"] @TO@ MethodInvocation@@new File("target/test").list() @AT@ 9339 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9339 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9343 @LENGTH@ 4
---------------INS StringLiteral@@"target/test" @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9348 @LENGTH@ 13
------------INS SimpleName@@MethodName:list:[] @TO@ MethodInvocation@@new File("target/test").list() @AT@ 9363 @LENGTH@ 6
---------INS SimpleName@@length @TO@ FieldAccess@@new File("target/test").list().length @AT@ 9370 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.format("%d\n%d",i,i),body.get(1)) @TO@ MethodInvocation:assertEquals(String.format("%d%s%d",i,System.lineSeparator(),i),body.get(1)) @AT@ 2944 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(String.format("%d\n%d",i,i),body.get(1)) @TO@ assertEquals(String.format("%d%s%d",i,System.lineSeparator(),i),body.get(1)) @AT@ 2944 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[String.format("%d\n%d",i,i), body.get(1)] @TO@ MethodName:assertEquals:[String.format("%d%s%d",i,System.lineSeparator(),i), body.get(1)] @AT@ 2944 @LENGTH@ 56
---------UPD MethodInvocation@@String.format("%d\n%d",i,i) @TO@ String.format("%d%s%d",i,System.lineSeparator(),i) @AT@ 2957 @LENGTH@ 29
------------UPD SimpleName@@MethodName:format:["%d\n%d", i, i] @TO@ MethodName:format:["%d%s%d", i, System.lineSeparator(), i] @AT@ 2964 @LENGTH@ 22
---------------UPD StringLiteral@@"%d\n%d" @TO@ "%d%s%d" @AT@ 2971 @LENGTH@ 8
---------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["%d\n%d", i, i] @AT@ 3008 @LENGTH@ 22
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 3008 @LENGTH@ 6
------------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 3015 @LENGTH@ 15


UPD VariableDeclarationStatement@@SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss"); @TO@ SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); @AT@ 104308 @LENGTH@ 67
---UPD VariableDeclarationFragment@@sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss") @TO@ sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss") @AT@ 104325 @LENGTH@ 49
------UPD ClassInstanceCreation@@SimpleDateFormat["yyyy-MM-dd hh:mm:ss"] @TO@ SimpleDateFormat["yyyy-MM-dd HH:mm:ss"] @AT@ 104331 @LENGTH@ 43
---------UPD StringLiteral@@"yyyy-MM-dd hh:mm:ss" @TO@ "yyyy-MM-dd HH:mm:ss" @AT@ 104352 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:result.getClass().getMethod("setResponseBufferSize",Integer.TYPE).invoke(result,responseHeaderSize) @TO@ MethodInvocation:result.getClass().getMethod("setResponseHeaderSize",Integer.TYPE).invoke(result,responseHeaderSize) @AT@ 4051 @LENGTH@ 123
---UPD MethodInvocation@@result.getClass().getMethod("setResponseBufferSize",Integer.TYPE).invoke(result,responseHeaderSize) @TO@ result.getClass().getMethod("setResponseHeaderSize",Integer.TYPE).invoke(result,responseHeaderSize) @AT@ 4051 @LENGTH@ 122
------UPD MethodInvocation@@MethodName:getMethod:["setResponseBufferSize", Integer.TYPE] @TO@ MethodName:getMethod:["setResponseHeaderSize", Integer.TYPE] @AT@ 4051 @LENGTH@ 66
---------UPD StringLiteral@@"setResponseBufferSize" @TO@ "setResponseHeaderSize" @AT@ 4079 @LENGTH@ 23


INS TryStatement@@try {  clientDetails=clientDetailsService.loadClientByClientId(username);} catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @TO@ MethodDeclaration@@public, UserDetails, MethodName:loadUserByUsername, String username, UsernameNotFoundException,  @AT@ 1896 @LENGTH@ 178
---INS ExpressionStatement@@Assignment:clientDetails=clientDetailsService.loadClientByClientId(username) @TO@ TryStatement@@try {  clientDetails=clientDetailsService.loadClientByClientId(username);} catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @AT@ 1905 @LENGTH@ 68
------INS Assignment@@clientDetails=clientDetailsService.loadClientByClientId(username) @TO@ ExpressionStatement@@Assignment:clientDetails=clientDetailsService.loadClientByClientId(username) @AT@ 1905 @LENGTH@ 67
---------MOV MethodInvocation@@clientDetailsService.loadClientByClientId(username) @TO@ Assignment@@clientDetails=clientDetailsService.loadClientByClientId(username) @AT@ 1820 @LENGTH@ 51
---------INS SimpleName@@clientDetails @TO@ Assignment@@clientDetails=clientDetailsService.loadClientByClientId(username) @AT@ 1905 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@clientDetails=clientDetailsService.loadClientByClientId(username) @AT@ 1918 @LENGTH@ 1
---INS CatchClause@@catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @TO@ TryStatement@@try {  clientDetails=clientDetailsService.loadClientByClientId(username);} catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @AT@ 1978 @LENGTH@ 96
------INS SingleVariableDeclaration@@NoSuchClientException e @TO@ CatchClause@@catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @AT@ 1985 @LENGTH@ 23
---------INS SimpleType@@NoSuchClientException @TO@ SingleVariableDeclaration@@NoSuchClientException e @AT@ 1985 @LENGTH@ 21
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoSuchClientException e @AT@ 2007 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new UsernameNotFoundException(e.getMessage(),e) @TO@ CatchClause@@catch (NoSuchClientException e) {  throw new UsernameNotFoundException(e.getMessage(),e);} @AT@ 2015 @LENGTH@ 55
---------INS ClassInstanceCreation@@UsernameNotFoundException[e.getMessage(), e] @TO@ ThrowStatement@@ClassInstanceCreation:new UsernameNotFoundException(e.getMessage(),e) @AT@ 2021 @LENGTH@ 48
------------INS New@@new @TO@ ClassInstanceCreation@@UsernameNotFoundException[e.getMessage(), e] @AT@ 2021 @LENGTH@ 3
------------INS SimpleType@@UsernameNotFoundException @TO@ ClassInstanceCreation@@UsernameNotFoundException[e.getMessage(), e] @AT@ 2025 @LENGTH@ 25
------------INS MethodInvocation@@e.getMessage() @TO@ ClassInstanceCreation@@UsernameNotFoundException[e.getMessage(), e] @AT@ 2051 @LENGTH@ 14
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 2051 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 2053 @LENGTH@ 12
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@UsernameNotFoundException[e.getMessage(), e] @AT@ 2067 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:restConfiguration().component("dummy-rest") @TO@ MethodInvocation:restConfiguration().component("dummy-rest").host("localhost") @AT@ 1220 @LENGTH@ 44
---UPD MethodInvocation@@restConfiguration().component("dummy-rest") @TO@ restConfiguration().component("dummy-rest").host("localhost") @AT@ 1220 @LENGTH@ 43
------INS MethodInvocation@@MethodName:component:["dummy-rest"] @TO@ MethodInvocation@@restConfiguration().component("dummy-rest") @AT@ 1220 @LENGTH@ 43
---------INS StringLiteral@@"dummy-rest" @TO@ MethodInvocation@@MethodName:component:["dummy-rest"] @AT@ 1250 @LENGTH@ 12
------UPD SimpleName@@MethodName:component:["dummy-rest"] @TO@ MethodName:host:["localhost"] @AT@ 1240 @LENGTH@ 23
---------UPD StringLiteral@@"dummy-rest" @TO@ "localhost" @AT@ 1250 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:log.debug("renameFile called with path=[" + path + "]") @TO@ MethodDeclaration@@protected, void, MethodName:renameFile, Path path,  @AT@ 7213 @LENGTH@ 56
---INS MethodInvocation@@log.debug("renameFile called with path=[" + path + "]") @TO@ ExpressionStatement@@MethodInvocation:log.debug("renameFile called with path=[" + path + "]") @AT@ 7213 @LENGTH@ 55
------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("renameFile called with path=[" + path + "]") @AT@ 7213 @LENGTH@ 3
------INS SimpleName@@MethodName:debug:["renameFile called with path=[" + path + "]"] @TO@ MethodInvocation@@log.debug("renameFile called with path=[" + path + "]") @AT@ 7217 @LENGTH@ 51
---------INS InfixExpression@@"renameFile called with path=[" + path + "]" @TO@ SimpleName@@MethodName:debug:["renameFile called with path=[" + path + "]"] @AT@ 7223 @LENGTH@ 44
------------INS StringLiteral@@"renameFile called with path=[" @TO@ InfixExpression@@"renameFile called with path=[" + path + "]" @AT@ 7223 @LENGTH@ 31
------------INS Operator@@+ @TO@ InfixExpression@@"renameFile called with path=[" + path + "]" @AT@ 7254 @LENGTH@ 1
------------INS SimpleName@@path @TO@ InfixExpression@@"renameFile called with path=[" + path + "]" @AT@ 7257 @LENGTH@ 4
------------INS StringLiteral@@"]" @TO@ InfixExpression@@"renameFile called with path=[" + path + "]" @AT@ 7264 @LENGTH@ 3


UPD VariableDeclarationStatement@@final long lfhOffset=offsets.get(ze).longValue(); @TO@ final long lfhOffset=offsets.get(ze); @AT@ 42831 @LENGTH@ 51
---UPD VariableDeclarationFragment@@lfhOffset=offsets.get(ze).longValue() @TO@ lfhOffset=offsets.get(ze) @AT@ 42842 @LENGTH@ 39
------UPD MethodInvocation@@offsets.get(ze).longValue() @TO@ offsets.get(ze) @AT@ 42854 @LENGTH@ 27
---------DEL MethodInvocation@@MethodName:get:[ze] @AT@ 42854 @LENGTH@ 15
------------DEL SimpleName@@ze @AT@ 42866 @LENGTH@ 2
---------INS SimpleName@@MethodName:get:[ze] @TO@ MethodInvocation@@offsets.get(ze).longValue() @AT@ 42862 @LENGTH@ 7
------------INS SimpleName@@ze @TO@ SimpleName@@MethodName:get:[ze] @AT@ 42866 @LENGTH@ 2
---------DEL SimpleName@@MethodName:longValue:[] @AT@ 42870 @LENGTH@ 11


UPD MethodDeclaration@@public, int, MethodName:getMaximumCacheSize,  @TO@ int, MethodName:getMaximumCacheSize,  @AT@ 2036 @LENGTH@ 33
---DEL Modifier@@public @AT@ 2036 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains(" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")) @AT@ 2614 @LENGTH@ 149
---UPD MethodInvocation@@assertTrue(json.contains(" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\"")) @TO@ assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")) @AT@ 2614 @LENGTH@ 148
------UPD SimpleName@@MethodName:assertTrue:[json.contains(" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\"")] @TO@ MethodName:assertTrue:[json.contains("\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")] @AT@ 2614 @LENGTH@ 148
---------UPD MethodInvocation@@json.contains(" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\"") @TO@ json.contains("\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"") @AT@ 2625 @LENGTH@ 136
------------UPD SimpleName@@MethodName:contains:[" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\""] @TO@ MethodName:contains:["\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\""] @AT@ 2630 @LENGTH@ 131
---------------UPD StringLiteral@@" \"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"value\": \"foo\"" @TO@ "\"onConsume\": { \"kind\": \"parameter\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"" @AT@ 2639 @LENGTH@ 121


UPD ExpressionStatement@@MethodInvocation:handleOutput("New instance submitted") @TO@ MethodInvocation:handleOutput("New version installed") @AT@ 2891 @LENGTH@ 39
---UPD MethodInvocation@@handleOutput("New instance submitted") @TO@ handleOutput("New version installed") @AT@ 2891 @LENGTH@ 38
------UPD SimpleName@@MethodName:handleOutput:["New instance submitted"] @TO@ MethodName:handleOutput:["New version installed"] @AT@ 2891 @LENGTH@ 38
---------UPD StringLiteral@@"New instance submitted" @TO@ "New version installed" @AT@ 2904 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:testRequestNoParameter_Empty, Exception,  @TO@ public, void, MethodName:testRequestNoParameterEmpty, Exception,  @AT@ 3969 @LENGTH@ 271
---UPD SimpleName@@MethodName:testRequestNoParameter_Empty @TO@ MethodName:testRequestNoParameterEmpty @AT@ 3981 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @TO@ TypeDeclaration@@[public]PageableHandlerMethodArgumentResolverUnitTests, PageableDefaultUnitTests @AT@ 7352 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7352 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7359 @LENGTH@ 4
---INS SimpleName@@MethodName:oneIndexedParametersDefaultsIndexOutOfRange @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7364 @LENGTH@ 43
---INS VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7415 @LENGTH@ 63
------INS SimpleType@@PageableHandlerMethodArgumentResolver @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 7415 @LENGTH@ 37
------INS VariableDeclarationFragment@@resolver=getResolver() @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 7453 @LENGTH@ 24
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 7453 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:getResolver:[] @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 7464 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resolver.setOneIndexedParameters(true) @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7481 @LENGTH@ 39
------INS MethodInvocation@@resolver.setOneIndexedParameters(true) @TO@ ExpressionStatement@@MethodInvocation:resolver.setOneIndexedParameters(true) @AT@ 7481 @LENGTH@ 38
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setOneIndexedParameters(true) @AT@ 7481 @LENGTH@ 8
---------INS SimpleName@@MethodName:setOneIndexedParameters:[true] @TO@ MethodInvocation@@resolver.setOneIndexedParameters(true) @AT@ 7490 @LENGTH@ 29
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setOneIndexedParameters:[true] @AT@ 7514 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7524 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 7524 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 7547 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 7547 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 7557 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 7557 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 7561 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addParameter("page","0") @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7589 @LENGTH@ 34
------INS MethodInvocation@@request.addParameter("page","0") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("page","0") @AT@ 7589 @LENGTH@ 33
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("page","0") @AT@ 7589 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["page", "0"] @TO@ MethodInvocation@@request.addParameter("page","0") @AT@ 7597 @LENGTH@ 25
------------INS StringLiteral@@"page" @TO@ SimpleName@@MethodName:addParameter:["page", "0"] @AT@ 7610 @LENGTH@ 6
------------INS StringLiteral@@"0" @TO@ SimpleName@@MethodName:addParameter:["page", "0"] @AT@ 7618 @LENGTH@ 3
---INS VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7627 @LENGTH@ 113
------INS SimpleType@@Pageable @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 7627 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 7636 @LENGTH@ 103
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7636 @LENGTH@ 6
---------INS MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7645 @LENGTH@ 94
------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7645 @LENGTH@ 8
------------INS SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 7654 @LENGTH@ 85
---------------INS SimpleName@@supportedMethodParameter @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7670 @LENGTH@ 24
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7696 @LENGTH@ 4
---------------INS ClassInstanceCreation@@ServletWebRequest[request] @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7702 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7702 @LENGTH@ 3
------------------INS SimpleType@@ServletWebRequest @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7706 @LENGTH@ 17
------------------INS SimpleName@@request @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 7724 @LENGTH@ 7
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 7734 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getPageNumber(),is(0)) @TO@ MethodDeclaration@@public, void, MethodName:oneIndexedParametersDefaultsIndexOutOfRange,  @AT@ 7744 @LENGTH@ 42
------INS MethodInvocation@@assertThat(result.getPageNumber(),is(0)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getPageNumber(),is(0)) @AT@ 7744 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @TO@ MethodInvocation@@assertThat(result.getPageNumber(),is(0)) @AT@ 7744 @LENGTH@ 41
------------INS MethodInvocation@@result.getPageNumber() @TO@ SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @AT@ 7755 @LENGTH@ 22
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPageNumber() @AT@ 7755 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPageNumber:[] @TO@ MethodInvocation@@result.getPageNumber() @AT@ 7762 @LENGTH@ 15
------------INS MethodInvocation@@is(0) @TO@ SimpleName@@MethodName:assertThat:[result.getPageNumber(), is(0)] @AT@ 7779 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[0] @TO@ MethodInvocation@@is(0) @AT@ 7779 @LENGTH@ 5
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:is:[0] @AT@ 7782 @LENGTH@ 1


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 1789 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 1796 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("direct:start").routeId("myRoute").to("mock:before").to("async:bye:camel?delay=1000").id("myAsync").to("mock:after").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    int size=context.getAsyncProcessorAwaitManager().size();
    log.info("async inflight: {}",size);
    assertEquals(1,size);
    Collection<AsyncProcessorAwaitManager.AwaitThread> threads=context.getAsyncProcessorAwaitManager().browse();
    AsyncProcessorAwaitManager.AwaitThread thread=threads.iterator().next();
    String id=thread.getExchange().getExchangeId();
    context.getAsyncProcessorAwaitManager().interrupt(id);
  }
}
).transform(constant("Hi Camel")).to("mock:result") @TO@ MethodInvocation:from("direct:start").routeId("myRoute").to("mock:before").to("async:bye:camel?delay=2000").id("myAsync").to("mock:after").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    int size=context.getAsyncProcessorAwaitManager().size();
    log.info("async inflight: {}",size);
    assertEquals(1,size);
    Collection<AsyncProcessorAwaitManager.AwaitThread> threads=context.getAsyncProcessorAwaitManager().browse();
    AsyncProcessorAwaitManager.AwaitThread thread=threads.iterator().next();
    String id=thread.getExchange().getExchangeId();
    context.getAsyncProcessorAwaitManager().interrupt(id);
  }
}
).transform(constant("Hi Camel")).to("mock:result") @AT@ 2784 @LENGTH@ 1219
---UPD MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:before").to("async:bye:camel?delay=1000").id("myAsync").to("mock:after").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    int size=context.getAsyncProcessorAwaitManager().size();
    log.info("async inflight: {}",size);
    assertEquals(1,size);
    Collection<AsyncProcessorAwaitManager.AwaitThread> threads=context.getAsyncProcessorAwaitManager().browse();
    AsyncProcessorAwaitManager.AwaitThread thread=threads.iterator().next();
    String id=thread.getExchange().getExchangeId();
    context.getAsyncProcessorAwaitManager().interrupt(id);
  }
}
).transform(constant("Hi Camel")).to("mock:result") @TO@ from("direct:start").routeId("myRoute").to("mock:before").to("async:bye:camel?delay=2000").id("myAsync").to("mock:after").process(new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    int size=context.getAsyncProcessorAwaitManager().size();
    log.info("async inflight: {}",size);
    assertEquals(1,size);
    Collection<AsyncProcessorAwaitManager.AwaitThread> threads=context.getAsyncProcessorAwaitManager().browse();
    AsyncProcessorAwaitManager.AwaitThread thread=threads.iterator().next();
    String id=thread.getExchange().getExchangeId();
    context.getAsyncProcessorAwaitManager().interrupt(id);
  }
}
).transform(constant("Hi Camel")).to("mock:result") @AT@ 2784 @LENGTH@ 1218
------UPD MethodInvocation@@MethodName:to:["async:bye:camel?delay=1000"] @TO@ MethodName:to:["async:bye:camel?delay=2000"] @AT@ 2784 @LENGTH@ 140
---------UPD StringLiteral@@"async:bye:camel?delay=1000" @TO@ "async:bye:camel?delay=2000" @AT@ 2895 @LENGTH@ 28


UPD EnhancedForStatement@@for (EncodedColumnBatch.StreamBuffer data : dataToDiscard) {  if (data.decRef() == 0) {    upstreamFeedback.returnData(data);  }} @TO@ for (EncodedColumnBatch.StreamBuffer data : dataToDiscard) {  upstreamFeedback.returnData(data);} @AT@ 5335 @LENGTH@ 149
---DEL IfStatement@@if (data.decRef() == 0) {  upstreamFeedback.returnData(data);} @AT@ 5402 @LENGTH@ 76
------DEL InfixExpression@@data.decRef() == 0 @AT@ 5406 @LENGTH@ 18
---------DEL MethodInvocation@@data.decRef() @AT@ 5406 @LENGTH@ 13
------------DEL SimpleName@@Name:data @AT@ 5406 @LENGTH@ 4
------------DEL SimpleName@@MethodName:decRef:[] @AT@ 5411 @LENGTH@ 8
---------DEL Operator@@== @AT@ 5419 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5423 @LENGTH@ 1
------DEL Block@@ThenBody:{  upstreamFeedback.returnData(data);} @AT@ 5426 @LENGTH@ 52
---MOV ExpressionStatement@@MethodInvocation:upstreamFeedback.returnData(data) @TO@ EnhancedForStatement@@for (EncodedColumnBatch.StreamBuffer data : dataToDiscard) {  if (data.decRef() == 0) {    upstreamFeedback.returnData(data);  }} @AT@ 5436 @LENGTH@ 34


UPD VariableDeclarationStatement@@Endpoint endpoint=new SapQueuedIDocDestinationEndpoint(uri,this); @TO@ SapQueuedIDocDestinationEndpoint endpoint=new SapQueuedIDocDestinationEndpoint(uri,this); @AT@ 2343 @LENGTH@ 68
---UPD SimpleType@@Endpoint @TO@ SapQueuedIDocDestinationEndpoint @AT@ 2343 @LENGTH@ 8


UPD FieldDeclaration@@private, Map<Integer,boolean[]>, [socketAudits=new HashMap<>()] @TO@ private, Map<Integer,boolean[]>, [socketAudits=new HashMap<Integer,boolean[]>()] @AT@ 1397 @LENGTH@ 63
---UPD VariableDeclarationFragment@@socketAudits=new HashMap<>() @TO@ socketAudits=new HashMap<Integer,boolean[]>() @AT@ 1429 @LENGTH@ 30
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<Integer,boolean[]>[] @AT@ 1444 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<Integer,boolean[]> @AT@ 1448 @LENGTH@ 9
------------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<> @AT@ 1456 @LENGTH@ 7
------------INS ArrayType@@boolean[] @TO@ ParameterizedType@@HashMap<> @AT@ 1465 @LENGTH@ 9
---------------INS PrimitiveType@@boolean @TO@ ArrayType@@boolean[] @AT@ 1465 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 8199 @LENGTH@ 261
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8199 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8206 @LENGTH@ 4
---INS SimpleName@@MethodName:detectsAliassesInPlainJoins @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8211 @LENGTH@ 27
---INS VariableDeclarationStatement@@String query="select p from Customer c join c.productOrder p where p.delayed = true"; @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8246 @LENGTH@ 87
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query="select p from Customer c join c.productOrder p where p.delayed = true"; @AT@ 8246 @LENGTH@ 6
------INS VariableDeclarationFragment@@query="select p from Customer c join c.productOrder p where p.delayed = true" @TO@ VariableDeclarationStatement@@String query="select p from Customer c join c.productOrder p where p.delayed = true"; @AT@ 8253 @LENGTH@ 79
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query="select p from Customer c join c.productOrder p where p.delayed = true" @AT@ 8253 @LENGTH@ 5
---------INS StringLiteral@@"select p from Customer c join c.productOrder p where p.delayed = true" @TO@ VariableDeclarationFragment@@query="select p from Customer c join c.productOrder p where p.delayed = true" @AT@ 8261 @LENGTH@ 71
---INS VariableDeclarationStatement@@Sort sort=new Sort("p.lineItems"); @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8336 @LENGTH@ 36
------INS SimpleType@@Sort @TO@ VariableDeclarationStatement@@Sort sort=new Sort("p.lineItems"); @AT@ 8336 @LENGTH@ 4
------INS VariableDeclarationFragment@@sort=new Sort("p.lineItems") @TO@ VariableDeclarationStatement@@Sort sort=new Sort("p.lineItems"); @AT@ 8341 @LENGTH@ 30
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new Sort("p.lineItems") @AT@ 8341 @LENGTH@ 4
---------INS ClassInstanceCreation@@Sort["p.lineItems"] @TO@ VariableDeclarationFragment@@sort=new Sort("p.lineItems") @AT@ 8348 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@Sort["p.lineItems"] @AT@ 8348 @LENGTH@ 3
------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["p.lineItems"] @AT@ 8352 @LENGTH@ 4
------------INS StringLiteral@@"p.lineItems" @TO@ ClassInstanceCreation@@Sort["p.lineItems"] @AT@ 8357 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"c"),endsWith("order by p.lineItems asc")) @TO@ MethodDeclaration@@public, void, MethodName:detectsAliassesInPlainJoins,  @AT@ 8376 @LENGTH@ 81
------INS MethodInvocation@@assertThat(applySorting(query,sort,"c"),endsWith("order by p.lineItems asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"c"),endsWith("order by p.lineItems asc")) @AT@ 8376 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by p.lineItems asc")] @TO@ MethodInvocation@@assertThat(applySorting(query,sort,"c"),endsWith("order by p.lineItems asc")) @AT@ 8376 @LENGTH@ 80
------------INS MethodInvocation@@applySorting(query,sort,"c") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by p.lineItems asc")] @AT@ 8387 @LENGTH@ 30
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "c"] @TO@ MethodInvocation@@applySorting(query,sort,"c") @AT@ 8387 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8400 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8407 @LENGTH@ 4
------------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8413 @LENGTH@ 3
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "c"] @TO@ MethodInvocation@@applySorting(query,sort,"c") @AT@ 8387 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8400 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8407 @LENGTH@ 4
------------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 8413 @LENGTH@ 3
------------INS MethodInvocation@@endsWith("order by p.lineItems asc") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by p.lineItems asc")] @AT@ 8419 @LENGTH@ 36
---------------INS SimpleName@@MethodName:endsWith:["order by p.lineItems asc"] @TO@ MethodInvocation@@endsWith("order by p.lineItems asc") @AT@ 8419 @LENGTH@ 36
------------------INS StringLiteral@@"order by p.lineItems asc" @TO@ SimpleName@@MethodName:endsWith:["order by p.lineItems asc"] @AT@ 8428 @LENGTH@ 26
---------------INS SimpleName@@MethodName:endsWith:["order by p.lineItems asc"] @TO@ MethodInvocation@@endsWith("order by p.lineItems asc") @AT@ 8419 @LENGTH@ 36
------------------INS StringLiteral@@"order by p.lineItems asc" @TO@ SimpleName@@MethodName:endsWith:["order by p.lineItems asc"] @AT@ 8428 @LENGTH@ 26


UPD ThrowStatement@@ClassInstanceCreation:new UDFArgumentTypeException(1,"Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments") @TO@ ClassInstanceCreation:new UDFArgumentTypeException(1,"Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments") @AT@ 4401 @LENGTH@ 178
---UPD ClassInstanceCreation@@UDFArgumentTypeException[1, "Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments"] @TO@ UDFArgumentTypeException[1, "Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments"] @AT@ 4407 @LENGTH@ 171
------UPD InfixExpression@@"Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments" @TO@ "Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments" @AT@ 4449 @LENGTH@ 128
---------UPD MethodInvocation@@arguments[2].getTypeName() @TO@ arguments[1].getTypeName() @AT@ 4515 @LENGTH@ 26
------------UPD ArrayAccess@@arguments[2] @TO@ arguments[1] @AT@ 4515 @LENGTH@ 12
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 4525 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.format("%d\n%d",i,i),body.get(1)) @TO@ MethodInvocation:assertEquals(String.format("%d%s%d",i,System.lineSeparator(),i),body.get(1)) @AT@ 2232 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(String.format("%d\n%d",i,i),body.get(1)) @TO@ assertEquals(String.format("%d%s%d",i,System.lineSeparator(),i),body.get(1)) @AT@ 2232 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[String.format("%d\n%d",i,i), body.get(1)] @TO@ MethodName:assertEquals:[String.format("%d%s%d",i,System.lineSeparator(),i), body.get(1)] @AT@ 2232 @LENGTH@ 56
---------UPD MethodInvocation@@String.format("%d\n%d",i,i) @TO@ String.format("%d%s%d",i,System.lineSeparator(),i) @AT@ 2245 @LENGTH@ 29
------------UPD SimpleName@@MethodName:format:["%d\n%d", i, i] @TO@ MethodName:format:["%d%s%d", i, System.lineSeparator(), i] @AT@ 2252 @LENGTH@ 22
---------------UPD StringLiteral@@"%d\n%d" @TO@ "%d%s%d" @AT@ 2259 @LENGTH@ 8
---------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["%d\n%d", i, i] @AT@ 2272 @LENGTH@ 22
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2272 @LENGTH@ 6
------------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2279 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:restConfiguration().enableCORS(true) @TO@ MethodInvocation:restConfiguration().host("localhost").enableCORS(true) @AT@ 2650 @LENGTH@ 37
---UPD MethodInvocation@@restConfiguration().enableCORS(true) @TO@ restConfiguration().host("localhost").enableCORS(true) @AT@ 2650 @LENGTH@ 36
------INS MethodInvocation@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().enableCORS(true) @AT@ 2650 @LENGTH@ 37
---------INS StringLiteral@@"localhost" @TO@ MethodInvocation@@MethodName:host:["localhost"] @AT@ 2675 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @TO@ TypeDeclaration@@[public]JdbcClientTokenServicesTests,  @AT@ 1967 @LENGTH@ 489
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 1967 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 1974 @LENGTH@ 4
---INS SimpleName@@MethodName:testSaveAndRetrieveTokenForClientCredentials @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 1979 @LENGTH@ 44
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2033 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AccessToken accessToken=new DefaultOAuth2AccessToken("FOO"); @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2047 @LENGTH@ 68
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=new DefaultOAuth2AccessToken("FOO"); @AT@ 2047 @LENGTH@ 17
------INS VariableDeclarationFragment@@accessToken=new DefaultOAuth2AccessToken("FOO") @TO@ VariableDeclarationStatement@@OAuth2AccessToken accessToken=new DefaultOAuth2AccessToken("FOO"); @AT@ 2065 @LENGTH@ 49
---------INS SimpleName@@accessToken @TO@ VariableDeclarationFragment@@accessToken=new DefaultOAuth2AccessToken("FOO") @AT@ 2065 @LENGTH@ 11
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @TO@ VariableDeclarationFragment@@accessToken=new DefaultOAuth2AccessToken("FOO") @AT@ 2079 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 2079 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 2083 @LENGTH@ 24
------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 2108 @LENGTH@ 5
---INS VariableDeclarationStatement@@AuthorizationCodeResourceDetails resource=new AuthorizationCodeResourceDetails(); @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2118 @LENGTH@ 83
------INS SimpleType@@AuthorizationCodeResourceDetails @TO@ VariableDeclarationStatement@@AuthorizationCodeResourceDetails resource=new AuthorizationCodeResourceDetails(); @AT@ 2118 @LENGTH@ 32
------INS VariableDeclarationFragment@@resource=new AuthorizationCodeResourceDetails() @TO@ VariableDeclarationStatement@@AuthorizationCodeResourceDetails resource=new AuthorizationCodeResourceDetails(); @AT@ 2151 @LENGTH@ 49
---------INS SimpleName@@resource @TO@ VariableDeclarationFragment@@resource=new AuthorizationCodeResourceDetails() @AT@ 2151 @LENGTH@ 8
---------INS ClassInstanceCreation@@AuthorizationCodeResourceDetails[] @TO@ VariableDeclarationFragment@@resource=new AuthorizationCodeResourceDetails() @AT@ 2162 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationCodeResourceDetails[] @AT@ 2162 @LENGTH@ 3
------------INS SimpleType@@AuthorizationCodeResourceDetails @TO@ ClassInstanceCreation@@AuthorizationCodeResourceDetails[] @AT@ 2166 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:resource.setClientId("client") @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2204 @LENGTH@ 31
------INS MethodInvocation@@resource.setClientId("client") @TO@ ExpressionStatement@@MethodInvocation:resource.setClientId("client") @AT@ 2204 @LENGTH@ 30
---------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.setClientId("client") @AT@ 2204 @LENGTH@ 8
---------INS SimpleName@@MethodName:setClientId:["client"] @TO@ MethodInvocation@@resource.setClientId("client") @AT@ 2213 @LENGTH@ 21
------------INS StringLiteral@@"client" @TO@ SimpleName@@MethodName:setClientId:["client"] @AT@ 2225 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:resource.setScope(Arrays.asList("foo","bar")) @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2238 @LENGTH@ 47
------INS MethodInvocation@@resource.setScope(Arrays.asList("foo","bar")) @TO@ ExpressionStatement@@MethodInvocation:resource.setScope(Arrays.asList("foo","bar")) @AT@ 2238 @LENGTH@ 46
---------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.setScope(Arrays.asList("foo","bar")) @AT@ 2238 @LENGTH@ 8
---------INS SimpleName@@MethodName:setScope:[Arrays.asList("foo","bar")] @TO@ MethodInvocation@@resource.setScope(Arrays.asList("foo","bar")) @AT@ 2247 @LENGTH@ 37
------------INS MethodInvocation@@Arrays.asList("foo","bar") @TO@ SimpleName@@MethodName:setScope:[Arrays.asList("foo","bar")] @AT@ 2256 @LENGTH@ 27
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("foo","bar") @AT@ 2256 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["foo", "bar"] @TO@ MethodInvocation@@Arrays.asList("foo","bar") @AT@ 2263 @LENGTH@ 20
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:asList:["foo", "bar"] @AT@ 2270 @LENGTH@ 5
------------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:asList:["foo", "bar"] @AT@ 2277 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:tokenStore.saveAccessToken(resource,null,accessToken) @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2288 @LENGTH@ 56
------INS MethodInvocation@@tokenStore.saveAccessToken(resource,null,accessToken) @TO@ ExpressionStatement@@MethodInvocation:tokenStore.saveAccessToken(resource,null,accessToken) @AT@ 2288 @LENGTH@ 55
---------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.saveAccessToken(resource,null,accessToken) @AT@ 2288 @LENGTH@ 10
---------INS SimpleName@@MethodName:saveAccessToken:[resource, null, accessToken] @TO@ MethodInvocation@@tokenStore.saveAccessToken(resource,null,accessToken) @AT@ 2299 @LENGTH@ 44
------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, accessToken] @AT@ 2315 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, accessToken] @AT@ 2325 @LENGTH@ 4
------------INS SimpleName@@accessToken @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, accessToken] @AT@ 2331 @LENGTH@ 11
---INS VariableDeclarationStatement@@OAuth2AccessToken result=tokenStore.getAccessToken(resource,null); @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2347 @LENGTH@ 69
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken result=tokenStore.getAccessToken(resource,null); @AT@ 2347 @LENGTH@ 17
------INS VariableDeclarationFragment@@result=tokenStore.getAccessToken(resource,null) @TO@ VariableDeclarationStatement@@OAuth2AccessToken result=tokenStore.getAccessToken(resource,null); @AT@ 2365 @LENGTH@ 50
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=tokenStore.getAccessToken(resource,null) @AT@ 2365 @LENGTH@ 6
---------INS MethodInvocation@@tokenStore.getAccessToken(resource,null) @TO@ VariableDeclarationFragment@@result=tokenStore.getAccessToken(resource,null) @AT@ 2374 @LENGTH@ 41
------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.getAccessToken(resource,null) @AT@ 2374 @LENGTH@ 10
------------INS SimpleName@@MethodName:getAccessToken:[resource, null] @TO@ MethodInvocation@@tokenStore.getAccessToken(resource,null) @AT@ 2385 @LENGTH@ 30
---------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:getAccessToken:[resource, null] @AT@ 2400 @LENGTH@ 8
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getAccessToken:[resource, null] @AT@ 2410 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(accessToken,result) @TO@ MethodDeclaration@@public, void, MethodName:testSaveAndRetrieveTokenForClientCredentials, Exception,  @AT@ 2419 @LENGTH@ 34
------INS MethodInvocation@@assertEquals(accessToken,result) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(accessToken,result) @AT@ 2419 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertEquals:[accessToken, result] @TO@ MethodInvocation@@assertEquals(accessToken,result) @AT@ 2419 @LENGTH@ 33
------------INS SimpleName@@accessToken @TO@ SimpleName@@MethodName:assertEquals:[accessToken, result] @AT@ 2432 @LENGTH@ 11
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertEquals:[accessToken, result] @AT@ 2445 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:sql.append(" ORDER BY ").append(SqlPagingQueryUtils.buildSortClause(this)) @TO@ MethodInvocation:sql.append(" ORDER BY ").append(buildSortClause(this)) @AT@ 5415 @LENGTH@ 75
---UPD MethodInvocation@@sql.append(" ORDER BY ").append(SqlPagingQueryUtils.buildSortClause(this)) @TO@ sql.append(" ORDER BY ").append(buildSortClause(this)) @AT@ 5415 @LENGTH@ 74
------UPD SimpleName@@MethodName:append:[SqlPagingQueryUtils.buildSortClause(this)] @TO@ MethodName:append:[buildSortClause(this)] @AT@ 5440 @LENGTH@ 49
---------UPD MethodInvocation@@SqlPagingQueryUtils.buildSortClause(this) @TO@ buildSortClause(this) @AT@ 5447 @LENGTH@ 41
------------DEL SimpleName@@Name:SqlPagingQueryUtils @AT@ 5447 @LENGTH@ 19


UPD ReturnStatement@@ClassInstanceCreation:new EndpointObservable<Exchange>(endpoint,new EndpointSubscribeFunc<>(endpoint,new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
)) @TO@ ClassInstanceCreation:new EndpointObservable<Exchange>(endpoint,new EndpointSubscribeFunc<Exchange>(endpoint,new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
)) @AT@ 5441 @LENGTH@ 257
---UPD ClassInstanceCreation@@EndpointObservable<Exchange>[endpoint, new EndpointSubscribeFunc<>(endpoint,new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
)] @TO@ EndpointObservable<Exchange>[endpoint, new EndpointSubscribeFunc<Exchange>(endpoint,new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
)] @AT@ 5448 @LENGTH@ 249
------UPD ClassInstanceCreation@@EndpointSubscribeFunc<>[endpoint, new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
] @TO@ EndpointSubscribeFunc<Exchange>[endpoint, new Func1<Exchange,Exchange>(){
  @Override public Exchange call(  Exchange exchange){
    return exchange;
  }
}
] @AT@ 5491 @LENGTH@ 205
---------UPD ParameterizedType@@EndpointSubscribeFunc<> @TO@ EndpointSubscribeFunc<Exchange> @AT@ 5495 @LENGTH@ 23
------------INS SimpleType@@Exchange @TO@ ParameterizedType@@EndpointSubscribeFunc<> @AT@ 5517 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().csrf().disable() @TO@ MethodInvocation:http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @AT@ 4362 @LENGTH@ 138
---UPD MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().csrf().disable() @TO@ http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @AT@ 4362 @LENGTH@ 137
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().csrf().disable() @AT@ 4440 @LENGTH@ 292
------INS MethodInvocation@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.STATELESS] @TO@ MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().csrf().disable() @AT@ 4440 @LENGTH@ 283
---------INS QualifiedName@@SessionCreationPolicy.STATELESS @TO@ MethodInvocation@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.STATELESS] @AT@ 4691 @LENGTH@ 31
------------INS SimpleName@@SessionCreationPolicy @TO@ QualifiedName@@SessionCreationPolicy.STATELESS @AT@ 4691 @LENGTH@ 21
------------INS SimpleName@@STATELESS @TO@ QualifiedName@@SessionCreationPolicy.STATELESS @AT@ 4713 @LENGTH@ 9
------INS MethodInvocation@@MethodName:sessionManagement:[] @TO@ MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().anonymous().disable().csrf().disable() @AT@ 4440 @LENGTH@ 228


UPD FieldDeclaration@@private, ByteIterator, [bi] @TO@ private, final, ByteIterator, [bi] @AT@ 1261 @LENGTH@ 24
---INS Modifier@@final @TO@ FieldDeclaration@@private, ByteIterator, [bi] @AT@ 1269 @LENGTH@ 5


UPD IfStatement@@if (arguments.length < 0) {  throw new UDFArgumentLengthException("LOWER requires 1 argument, got " + arguments.length);} @TO@ if (arguments.length != 1) {  throw new UDFArgumentLengthException("LOWER requires 1 argument, got " + arguments.length);} @AT@ 2678 @LENGTH@ 142
---UPD InfixExpression@@arguments.length < 0 @TO@ arguments.length != 1 @AT@ 2682 @LENGTH@ 20
------UPD Operator@@< @TO@ != @AT@ 2698 @LENGTH@ 1
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 2701 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 2656 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 2656 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2656 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 2676 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 2681 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:mappings.getObject().getMappingFor(type).getItemResourceRel() @TO@ MethodInvocation:mappings.getObject().getMetadataFor(type).getItemResourceRel() @AT@ 2034 @LENGTH@ 69
---UPD MethodInvocation@@mappings.getObject().getMappingFor(type).getItemResourceRel() @TO@ mappings.getObject().getMetadataFor(type).getItemResourceRel() @AT@ 2041 @LENGTH@ 61
------UPD MethodInvocation@@MethodName:getMappingFor:[type] @TO@ MethodName:getMetadataFor:[type] @AT@ 2041 @LENGTH@ 40


UPD VariableDeclarationStatement@@Path artifactPath=m2repo.resolve(gavToPath(gav,File.separator)); @TO@ Path artifactPath=m2repo.resolve(gavToPath(gav)); @AT@ 450 @LENGTH@ 67
---UPD VariableDeclarationFragment@@artifactPath=m2repo.resolve(gavToPath(gav,File.separator)) @TO@ artifactPath=m2repo.resolve(gavToPath(gav)) @AT@ 455 @LENGTH@ 61
------UPD MethodInvocation@@m2repo.resolve(gavToPath(gav,File.separator)) @TO@ m2repo.resolve(gavToPath(gav)) @AT@ 470 @LENGTH@ 46
---------UPD SimpleName@@MethodName:resolve:[gavToPath(gav,File.separator)] @TO@ MethodName:resolve:[gavToPath(gav)] @AT@ 477 @LENGTH@ 39
------------UPD MethodInvocation@@gavToPath(gav,File.separator) @TO@ gavToPath(gav) @AT@ 485 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:gavToPath:[gav, File.separator] @TO@ MethodName:gavToPath:[gav] @AT@ 485 @LENGTH@ 30
------------------DEL QualifiedName@@File.separator @AT@ 500 @LENGTH@ 14
---------------------DEL SimpleName@@File @AT@ 500 @LENGTH@ 4
---------------------DEL SimpleName@@separator @AT@ 505 @LENGTH@ 9


MOV TryStatement@@try {  final boolean isHttps=HttpSchemes.HTTPS.equals(String.valueOf(request.getScheme()));  request.setEventListener(new SalesforceSecurityListener(httpClient.getDestination(request.getAddress(),isHttps),request,session,accessToken));} catch (IOException e) {  callback.onResponse(null,new SalesforceException(String.format("Error registering security listener: %s",e.getMessage()),e));} @TO@ MethodDeclaration@@protected, void, MethodName:doHttpRequest, final ContentExchange request, final ClientResponseCallback callback,  @AT@ 3885 @LENGTH@ 565


UPD IfStatement@@if (channel != null) {  LOG.trace("Closing channel: {}",channel);  channel.close().syncUninterruptibly();} @TO@ if (channel != null) {  channel.close().addListener(new ChannelFutureListener(){    public void operationComplete(    ChannelFuture future){      LOG.trace("Channel closed: {}",future.channel());    }  });} @AT@ 4869 @LENGTH@ 138
---UPD Block@@ThenBody:{  LOG.trace("Closing channel: {}",channel);  channel.close().syncUninterruptibly();} @TO@ ThenBody:{  channel.close().addListener(new ChannelFutureListener(){    public void operationComplete(    ChannelFuture future){      LOG.trace("Channel closed: {}",future.channel());    }  });} @AT@ 4890 @LENGTH@ 117
------INS ExpressionStatement@@MethodInvocation:channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @TO@ Block@@ThenBody:{  LOG.trace("Closing channel: {}",channel);  channel.close().syncUninterruptibly();} @AT@ 4904 @LENGTH@ 232
---------INS MethodInvocation@@channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @AT@ 4904 @LENGTH@ 231
------------INS MethodInvocation@@MethodName:close:[] @TO@ MethodInvocation@@channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @AT@ 4904 @LENGTH@ 15
------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @AT@ 4904 @LENGTH@ 7
------------INS SimpleName@@MethodName:addListener:[new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
] @TO@ MethodInvocation@@channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
) @AT@ 4920 @LENGTH@ 215
---------------INS ClassInstanceCreation@@ChannelFutureListener[] @TO@ SimpleName@@MethodName:addListener:[new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.channel());
  }
}
] @AT@ 4932 @LENGTH@ 202
------------------INS New@@new @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4932 @LENGTH@ 3
------------------INS SimpleType@@ChannelFutureListener @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4936 @LENGTH@ 21
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4960 @LENGTH@ 174
---------------------INS MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4978 @LENGTH@ 142
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4978 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4985 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:operationComplete @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4990 @LENGTH@ 17
------------------------INS SingleVariableDeclaration@@ChannelFuture future @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 5008 @LENGTH@ 20
---------------------------INS SimpleType@@ChannelFuture @TO@ SingleVariableDeclaration@@ChannelFuture future @AT@ 5008 @LENGTH@ 13
---------------------------INS SimpleName@@future @TO@ SingleVariableDeclaration@@ChannelFuture future @AT@ 5022 @LENGTH@ 6
------------------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Channel closed: {}",future.channel()) @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 5052 @LENGTH@ 50
---------------------------MOV MethodInvocation@@LOG.trace("Closing channel: {}",channel) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Channel closed: {}",future.channel()) @AT@ 4904 @LENGTH@ 41
------------------------------UPD SimpleName@@MethodName:trace:["Closing channel: {}", channel] @TO@ MethodName:trace:["Channel closed: {}", future.channel()] @AT@ 4908 @LENGTH@ 37
---------------------------------UPD StringLiteral@@"Closing channel: {}" @TO@ "Channel closed: {}" @AT@ 4914 @LENGTH@ 21
---------------------------------DEL SimpleName@@channel @AT@ 4937 @LENGTH@ 7
---------------------------------INS MethodInvocation@@future.channel() @TO@ SimpleName@@MethodName:trace:["Closing channel: {}", channel] @AT@ 5084 @LENGTH@ 16
------------------------------------INS SimpleName@@Name:future @TO@ MethodInvocation@@future.channel() @AT@ 5084 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:channel:[] @TO@ MethodInvocation@@future.channel() @AT@ 5091 @LENGTH@ 9
------DEL ExpressionStatement@@MethodInvocation:LOG.trace("Closing channel: {}",channel) @AT@ 4904 @LENGTH@ 42
------DEL ExpressionStatement@@MethodInvocation:channel.close().syncUninterruptibly() @AT@ 4959 @LENGTH@ 38
---------DEL MethodInvocation@@channel.close().syncUninterruptibly() @AT@ 4959 @LENGTH@ 37
------------DEL MethodInvocation@@MethodName:close:[] @AT@ 4959 @LENGTH@ 15
------------DEL SimpleName@@Name:channel @AT@ 4959 @LENGTH@ 7
------------DEL SimpleName@@MethodName:syncUninterruptibly:[] @AT@ 4975 @LENGTH@ 21


UPD MethodDeclaration@@public, StreamBuffer, MethodName:cacheOrGet, CacheKey key, StreamBuffer value,  @TO@ public, StreamBuffer[], MethodName:cacheOrGet, CacheKey key, StreamBuffer[] value,  @AT@ 1012 @LENGTH@ 65
---DEL SimpleType@@StreamBuffer @AT@ 1019 @LENGTH@ 12
---INS ArrayType@@StreamBuffer[] @TO@ MethodDeclaration@@public, StreamBuffer, MethodName:cacheOrGet, CacheKey key, StreamBuffer value,  @AT@ 1024 @LENGTH@ 14
------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1024 @LENGTH@ 12
---UPD SingleVariableDeclaration@@StreamBuffer value @TO@ StreamBuffer[] value @AT@ 1057 @LENGTH@ 18
------DEL SimpleType@@StreamBuffer @AT@ 1057 @LENGTH@ 12
------INS ArrayType@@StreamBuffer[] @TO@ SingleVariableDeclaration@@StreamBuffer value @AT@ 1064 @LENGTH@ 14
---------INS SimpleType@@StreamBuffer @TO@ ArrayType@@StreamBuffer[] @AT@ 1064 @LENGTH@ 12


UPD ReturnStatement@@ClassInstanceCreation:new PersistentEntityJackson2Module(new RepositoryResourceMappings(config(),repositories()),persistentEntities(),config(),new UriToEntityConverter(persistentEntities(),defaultConversionService())) @TO@ ClassInstanceCreation:new PersistentEntityJackson2Module(new RepositoryResourceMappings(repositories(),persistentEntities()),persistentEntities(),config(),new UriToEntityConverter(persistentEntities(),defaultConversionService())) @AT@ 3749 @LENGTH@ 212
---UPD ClassInstanceCreation@@PersistentEntityJackson2Module[new RepositoryResourceMappings(config(),repositories()), persistentEntities(), config(), new UriToEntityConverter(persistentEntities(),defaultConversionService())] @TO@ PersistentEntityJackson2Module[new RepositoryResourceMappings(repositories(),persistentEntities()), persistentEntities(), config(), new UriToEntityConverter(persistentEntities(),defaultConversionService())] @AT@ 3756 @LENGTH@ 204
------UPD ClassInstanceCreation@@RepositoryResourceMappings[config(), repositories()] @TO@ RepositoryResourceMappings[repositories(), persistentEntities()] @AT@ 3791 @LENGTH@ 56
---------UPD MethodInvocation@@MethodName:config:[] @TO@ MethodName:repositories:[] @AT@ 3822 @LENGTH@ 8
---------UPD MethodInvocation@@MethodName:repositories:[] @TO@ MethodName:persistentEntities:[] @AT@ 3832 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationProcessingFilterTests,  @AT@ 3341 @LENGTH@ 355
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3341 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3348 @LENGTH@ 4
---INS SimpleName@@MethodName:testStateful @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3353 @LENGTH@ 12
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3375 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:filter.setStateless(false) @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3389 @LENGTH@ 27
------INS MethodInvocation@@filter.setStateless(false) @TO@ ExpressionStatement@@MethodInvocation:filter.setStateless(false) @AT@ 3389 @LENGTH@ 26
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setStateless(false) @AT@ 3389 @LENGTH@ 6
---------INS SimpleName@@MethodName:setStateless:[false] @TO@ MethodInvocation@@filter.setStateless(false) @AT@ 3396 @LENGTH@ 19
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setStateless:[false] @AT@ 3409 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3419 @LENGTH@ 160
------INS MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ ExpressionStatement@@MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3419 @LENGTH@ 159
---------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3419 @LENGTH@ 34
---------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3419 @LENGTH@ 21
---------INS SimpleName@@MethodName:setAuthentication:[new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))] @TO@ MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @AT@ 3454 @LENGTH@ 124
------------INS ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @TO@ SimpleName@@MethodName:setAuthentication:[new AnonymousAuthenticationToken("FOO","foo",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))] @AT@ 3477 @LENGTH@ 100
---------------INS New@@new @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3477 @LENGTH@ 3
---------------INS SimpleType@@AnonymousAuthenticationToken @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3481 @LENGTH@ 28
---------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3510 @LENGTH@ 5
---------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3517 @LENGTH@ 5
---------------INS MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @TO@ ClassInstanceCreation@@AnonymousAuthenticationToken["FOO", "foo", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @AT@ 3524 @LENGTH@ 52
------------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @AT@ 3524 @LENGTH@ 14
------------------INS SimpleName@@MethodName:createAuthorityList:["ROLE_ANONYMOUS"] @TO@ MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @AT@ 3539 @LENGTH@ 37
---------------------INS StringLiteral@@"ROLE_ANONYMOUS" @TO@ SimpleName@@MethodName:createAuthorityList:["ROLE_ANONYMOUS"] @AT@ 3559 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3582 @LENGTH@ 38
------INS MethodInvocation@@filter.doFilter(request,null,chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,null,chain) @AT@ 3582 @LENGTH@ 37
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3582 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, null, chain] @TO@ MethodInvocation@@filter.doFilter(request,null,chain) @AT@ 3589 @LENGTH@ 30
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3598 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3607 @LENGTH@ 4
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, null, chain] @AT@ 3613 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull(SecurityContextHolder.getContext().getAuthentication()) @TO@ MethodDeclaration@@public, void, MethodName:testStateful, Exception,  @AT@ 3623 @LENGTH@ 70
------INS MethodInvocation@@assertNotNull(SecurityContextHolder.getContext().getAuthentication()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(SecurityContextHolder.getContext().getAuthentication()) @AT@ 3623 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertNotNull:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertNotNull(SecurityContextHolder.getContext().getAuthentication()) @AT@ 3623 @LENGTH@ 69
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ SimpleName@@MethodName:assertNotNull:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 3637 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3637 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3637 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3672 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong header " + header,header.contains("Basic realm=\"oauth2/client\"")) @TO@ MethodInvocation:assertTrue("Wrong header " + header,header.contains("realm=\"oauth2/client\"")) @AT@ 5355 @LENGTH@ 92
---UPD MethodInvocation@@assertTrue("Wrong header " + header,header.contains("Basic realm=\"oauth2/client\"")) @TO@ assertTrue("Wrong header " + header,header.contains("realm=\"oauth2/client\"")) @AT@ 5355 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertTrue:["Wrong header " + header, header.contains("Basic realm=\"oauth2/client\"")] @TO@ MethodName:assertTrue:["Wrong header " + header, header.contains("realm=\"oauth2/client\"")] @AT@ 5355 @LENGTH@ 91
---------UPD MethodInvocation@@header.contains("Basic realm=\"oauth2/client\"") @TO@ header.contains("realm=\"oauth2/client\"") @AT@ 5397 @LENGTH@ 48
------------UPD SimpleName@@MethodName:contains:["Basic realm=\"oauth2/client\""] @TO@ MethodName:contains:["realm=\"oauth2/client\""] @AT@ 5404 @LENGTH@ 41
---------------UPD StringLiteral@@"Basic realm=\"oauth2/client\"" @TO@ "realm=\"oauth2/client\"" @AT@ 5413 @LENGTH@ 31


INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testSimpleConsumerWithEmptyFile, Exception,  @AT@ 6832 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 6832 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 6832 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 6839 @LENGTH@ 11
---------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 6845 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThat(files.size(),equalTo(2)) @TO@ MethodInvocation:assertThat(files.size() - before,equalTo(2)) @AT@ 11145 @LENGTH@ 37
---UPD MethodInvocation@@assertThat(files.size(),equalTo(2)) @TO@ assertThat(files.size() - before,equalTo(2)) @AT@ 11145 @LENGTH@ 36
------UPD SimpleName@@MethodName:assertThat:[files.size(), equalTo(2)] @TO@ MethodName:assertThat:[files.size() - before, equalTo(2)] @AT@ 11145 @LENGTH@ 36
---------DEL MethodInvocation@@files.size() @AT@ 11156 @LENGTH@ 12
---------INS InfixExpression@@files.size() - before @TO@ SimpleName@@MethodName:assertThat:[files.size(), equalTo(2)] @AT@ 11308 @LENGTH@ 21
------------INS MethodInvocation@@files.size() @TO@ InfixExpression@@files.size() - before @AT@ 11308 @LENGTH@ 12
---------------MOV SimpleName@@Name:files @TO@ MethodInvocation@@files.size() @AT@ 11156 @LENGTH@ 5
---------------MOV SimpleName@@Name:files @TO@ MethodInvocation@@files.size() @AT@ 11156 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@files.size() @AT@ 11162 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@files.size() @AT@ 11162 @LENGTH@ 6
------------INS Operator@@- @TO@ InfixExpression@@files.size() - before @AT@ 11320 @LENGTH@ 1
------------INS SimpleName@@before @TO@ InfixExpression@@files.size() - before @AT@ 11323 @LENGTH@ 6


INS MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]TokenEndpoint, AbstractEndpoint @AT@ 6814 @LENGTH@ 233
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6814 @LENGTH@ 6
---INS ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6821 @LENGTH@ 31
------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 6821 @LENGTH@ 14
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 6836 @LENGTH@ 15
---INS SimpleName@@MethodName:handleException @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6853 @LENGTH@ 15
---INS SingleVariableDeclaration@@OAuth2Exception e @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6869 @LENGTH@ 17
------INS SimpleType@@OAuth2Exception @TO@ SingleVariableDeclaration@@OAuth2Exception e @AT@ 6869 @LENGTH@ 15
------INS SimpleName@@e @TO@ SingleVariableDeclaration@@OAuth2Exception e @AT@ 6885 @LENGTH@ 1
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6895 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:logger.info("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6909 @LENGTH@ 87
------INS MethodInvocation@@logger.info("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:logger.info("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @AT@ 6909 @LENGTH@ 86
---------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.info("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @AT@ 6909 @LENGTH@ 6
---------INS SimpleName@@MethodName:info:["Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()] @TO@ MethodInvocation@@logger.info("Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()) @AT@ 6916 @LENGTH@ 79
------------INS InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @TO@ SimpleName@@MethodName:info:["Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage()] @AT@ 6921 @LENGTH@ 73
---------------INS StringLiteral@@"Handling error: " @TO@ InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @AT@ 6921 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @AT@ 6939 @LENGTH@ 1
---------------INS MethodInvocation@@e.getClass().getSimpleName() @TO@ InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @AT@ 6942 @LENGTH@ 28
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@e.getClass().getSimpleName() @AT@ 6942 @LENGTH@ 12
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getClass().getSimpleName() @AT@ 6942 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@e.getClass().getSimpleName() @AT@ 6955 @LENGTH@ 15
---------------INS StringLiteral@@", " @TO@ InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @AT@ 6973 @LENGTH@ 4
---------------INS MethodInvocation@@e.getMessage() @TO@ InfixExpression@@"Handling error: " + e.getClass().getSimpleName() + ", "+ e.getMessage() @AT@ 6980 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 6980 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 6982 @LENGTH@ 12
---INS ReturnStatement@@MethodInvocation:getExceptionTranslator().translate(e) @TO@ MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleException, OAuth2Exception e, Exception,  @AT@ 6999 @LENGTH@ 45
------INS MethodInvocation@@getExceptionTranslator().translate(e) @TO@ ReturnStatement@@MethodInvocation:getExceptionTranslator().translate(e) @AT@ 7006 @LENGTH@ 37
---------INS MethodInvocation@@MethodName:getExceptionTranslator:[] @TO@ MethodInvocation@@getExceptionTranslator().translate(e) @AT@ 7006 @LENGTH@ 24
---------INS SimpleName@@MethodName:translate:[e] @TO@ MethodInvocation@@getExceptionTranslator().translate(e) @AT@ 7031 @LENGTH@ 12
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:translate:[e] @AT@ 7041 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:fixContextReferences(cSEL,pSEL) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node nd, Stack<Node> stack, NodeProcessorCtx procCtx, Object... nodeOutputs, SemanticException,  @AT@ 6207 @LENGTH@ 33
---INS MethodInvocation@@fixContextReferences(cSEL,pSEL) @TO@ ExpressionStatement@@MethodInvocation:fixContextReferences(cSEL,pSEL) @AT@ 6207 @LENGTH@ 32
------INS SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @TO@ MethodInvocation@@fixContextReferences(cSEL,pSEL) @AT@ 6207 @LENGTH@ 32
---------INS SimpleName@@cSEL @TO@ SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @AT@ 6228 @LENGTH@ 4
---------INS SimpleName@@pSEL @TO@ SimpleName@@MethodName:fixContextReferences:[cSEL, pSEL] @AT@ 6234 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:System.setProperty("jboss.bind.address.management",TestSuiteEnvironment.getServerAddress()) @TO@ MethodDeclaration@@public, static, void, MethodName:beforeClass, Exception,  @AT@ 5939 @LENGTH@ 93
---INS MethodInvocation@@System.setProperty("jboss.bind.address.management",TestSuiteEnvironment.getServerAddress()) @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("jboss.bind.address.management",TestSuiteEnvironment.getServerAddress()) @AT@ 5939 @LENGTH@ 92
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("jboss.bind.address.management",TestSuiteEnvironment.getServerAddress()) @AT@ 5939 @LENGTH@ 6
------INS SimpleName@@MethodName:setProperty:["jboss.bind.address.management", TestSuiteEnvironment.getServerAddress()] @TO@ MethodInvocation@@System.setProperty("jboss.bind.address.management",TestSuiteEnvironment.getServerAddress()) @AT@ 5946 @LENGTH@ 85
---------INS StringLiteral@@"jboss.bind.address.management" @TO@ SimpleName@@MethodName:setProperty:["jboss.bind.address.management", TestSuiteEnvironment.getServerAddress()] @AT@ 5958 @LENGTH@ 31
---------INS MethodInvocation@@TestSuiteEnvironment.getServerAddress() @TO@ SimpleName@@MethodName:setProperty:["jboss.bind.address.management", TestSuiteEnvironment.getServerAddress()] @AT@ 5991 @LENGTH@ 39
------------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 5991 @LENGTH@ 20
------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 6012 @LENGTH@ 18


UPD TryStatement@@try {  if (accessTokenProvider != null) {    client.setAccessTokenProvider(accessTokenProvider);  }  return client.getAccessToken();} catch (OAuth2AccessDeniedException e) {  Throwable cause=e.getCause();  if (cause instanceof RuntimeException) {    throw (RuntimeException)cause;  }  if (cause instanceof Error) {    throw (Error)cause;  }  throw e;} @TO@ try {  return client.getAccessToken();} catch (OAuth2AccessDeniedException e) {  Throwable cause=e.getCause();  if (cause instanceof RuntimeException) {    throw (RuntimeException)cause;  }  if (cause instanceof Error) {    throw (Error)cause;  }  throw e;} @AT@ 8305 @LENGTH@ 384


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000"] @AT@ 1198 @LENGTH@ 96
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000" @AT@ 1213 @LENGTH@ 80
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000" @AT@ 1219 @LENGTH@ 74
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1219 @LENGTH@ 25


UPD IfStatement@@if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  acceptor.unbind(acceptor.getLocalAddresses());} @TO@ if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  System.out.println("Unbind the server address " + acceptor.getLocalAddresses());  acceptor.unbind(acceptor.getLocalAddresses());} else {  acceptor.unbind(address);} @AT@ 4214 @LENGTH@ 160
---UPD Block@@ThenBody:{  acceptor.unbind(acceptor.getLocalAddresses());} @TO@ ThenBody:{  System.out.println("Unbind the server address " + acceptor.getLocalAddresses());  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4296 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:System.out.println("Unbind the server address " + acceptor.getLocalAddresses()) @TO@ Block@@ThenBody:{  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4318 @LENGTH@ 80
---------INS MethodInvocation@@System.out.println("Unbind the server address " + acceptor.getLocalAddresses()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Unbind the server address " + acceptor.getLocalAddresses()) @AT@ 4318 @LENGTH@ 79
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Unbind the server address " + acceptor.getLocalAddresses()) @AT@ 4318 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["Unbind the server address " + acceptor.getLocalAddresses()] @TO@ MethodInvocation@@System.out.println("Unbind the server address " + acceptor.getLocalAddresses()) @AT@ 4329 @LENGTH@ 68
---------------INS InfixExpression@@"Unbind the server address " + acceptor.getLocalAddresses() @TO@ SimpleName@@MethodName:println:["Unbind the server address " + acceptor.getLocalAddresses()] @AT@ 4337 @LENGTH@ 59
------------------INS StringLiteral@@"Unbind the server address " @TO@ InfixExpression@@"Unbind the server address " + acceptor.getLocalAddresses() @AT@ 4337 @LENGTH@ 28
------------------INS Operator@@+ @TO@ InfixExpression@@"Unbind the server address " + acceptor.getLocalAddresses() @AT@ 4365 @LENGTH@ 1
------------------INS MethodInvocation@@acceptor.getLocalAddresses() @TO@ InfixExpression@@"Unbind the server address " + acceptor.getLocalAddresses() @AT@ 4368 @LENGTH@ 28
---------------------INS SimpleName@@Name:acceptor @TO@ MethodInvocation@@acceptor.getLocalAddresses() @AT@ 4368 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getLocalAddresses:[] @TO@ MethodInvocation@@acceptor.getLocalAddresses() @AT@ 4377 @LENGTH@ 19
---INS Block@@ElseBody:{  acceptor.unbind(address);} @TO@ IfStatement@@if ("0.0.0.0".equals(((InetSocketAddress)address).getAddress().getHostAddress())) {  acceptor.unbind(acceptor.getLocalAddresses());} @AT@ 4481 @LENGTH@ 57
------INS ExpressionStatement@@MethodInvocation:acceptor.unbind(address) @TO@ Block@@ElseBody:{  acceptor.unbind(address);} @AT@ 4499 @LENGTH@ 25
---------INS MethodInvocation@@acceptor.unbind(address) @TO@ ExpressionStatement@@MethodInvocation:acceptor.unbind(address) @AT@ 4499 @LENGTH@ 24
------------INS SimpleName@@Name:acceptor @TO@ MethodInvocation@@acceptor.unbind(address) @AT@ 4499 @LENGTH@ 8
------------INS SimpleName@@MethodName:unbind:[address] @TO@ MethodInvocation@@acceptor.unbind(address) @AT@ 4508 @LENGTH@ 15
---------------INS SimpleName@@address @TO@ SimpleName@@MethodName:unbind:[address] @AT@ 4515 @LENGTH@ 7


UPD Block@@ElseBody:{  AuthorizationResponseImpl authResp=authorizations.get(opId);  if (authResp == null) {    authResp=getBasicAuthorizationResponse(opId,operation);  }  if (authResp == null) {    return AuthorizationResult.PERMITTED;  }  for (  Action.ActionEffect requiredEffect : actionEffects) {    AuthorizationResult effectResult=authResp.getResourceResult(requiredEffect);    if (effectResult == null) {      Action action=authResp.standardAction.limitAction(requiredEffect);      effectResult=modelController.getAuthorizer().authorize(getCaller(),getCallEnvironment(),action,authResp.targetResource);      authResp.addResourceResult(requiredEffect,effectResult);    }    if (effectResult.getDecision() == AuthorizationResult.Decision.DENY) {      return effectResult;    }  }  if (allAttributes) {    ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();    ModelNode model=authResp.targetResource.getResource().getModel();    Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();      AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);      if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {        return attrResult;      }    }    authResp.attributesComplete=true;  }  return AuthorizationResult.PERMITTED;} @TO@ ElseBody:{  AuthorizationResponseImpl authResp=authorizations.get(opId);  if (authResp == null) {    authResp=getBasicAuthorizationResponse(opId,operation);  }  if (authResp == null) {    return AuthorizationResult.PERMITTED;  }  for (  Action.ActionEffect requiredEffect : actionEffects) {    AuthorizationResult effectResult=authResp.getResourceResult(requiredEffect);    if (effectResult == null) {      Action action=authResp.standardAction.limitAction(requiredEffect);      effectResult=modelController.getAuthorizer().authorize(getCaller(),getCallEnvironment(),action,authResp.targetResource);      authResp.addResourceResult(requiredEffect,effectResult);    }    if (effectResult.getDecision() == AuthorizationResult.Decision.DENY) {      return effectResult;    }  }  AuthorizationResult errResult=null;  if (allAttributes) {    ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();    ModelNode model=authResp.targetResource.getResource().getModel();    Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();      AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);      if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {        errResult=attrResult;      }    }    authResp.attributesComplete=true;  }  return errResult != null ? errResult : AuthorizationResult.PERMITTED;} @AT@ 70543 @LENGTH@ 2122
---UPD IfStatement@@if (allAttributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  ModelNode model=authResp.targetResource.getResource().getModel();  Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();    AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);    if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {      return attrResult;    }  }  authResp.attributesComplete=true;} @TO@ if (allAttributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  ModelNode model=authResp.targetResource.getResource().getModel();  Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();    AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);    if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {      errResult=attrResult;    }  }  authResp.attributesComplete=true;} @AT@ 71710 @LENGTH@ 894
------UPD Block@@ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  ModelNode model=authResp.targetResource.getResource().getModel();  Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();    AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);    if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {      return attrResult;    }  }  authResp.attributesComplete=true;} @TO@ ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  ModelNode model=authResp.targetResource.getResource().getModel();  Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();    AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);    if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {      errResult=attrResult;    }  }  authResp.attributesComplete=true;} @AT@ 71729 @LENGTH@ 875
---------UPD EnhancedForStatement@@for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();  AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);  if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {    return attrResult;  }} @TO@ for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();  AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);  if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {    errResult=attrResult;  }} @AT@ 72090 @LENGTH@ 448
------------UPD IfStatement@@if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {  return attrResult;} @TO@ if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {  errResult=attrResult;} @AT@ 72387 @LENGTH@ 133
---------------UPD Block@@ThenBody:{  return attrResult;} @TO@ ThenBody:{  errResult=attrResult;} @AT@ 72454 @LENGTH@ 66
------------------DEL ReturnStatement@@SimpleName:attrResult @AT@ 72480 @LENGTH@ 18
---------------------DEL SimpleName@@attrResult @AT@ 72487 @LENGTH@ 10
------------------INS ExpressionStatement@@Assignment:errResult=attrResult @TO@ Block@@ThenBody:{  return attrResult;} @AT@ 72533 @LENGTH@ 23
---------------------INS Assignment@@errResult=attrResult @TO@ ExpressionStatement@@Assignment:errResult=attrResult @AT@ 72533 @LENGTH@ 22
------------------------INS SimpleName@@errResult @TO@ Assignment@@errResult=attrResult @AT@ 72533 @LENGTH@ 9
------------------------INS Operator@@= @TO@ Assignment@@errResult=attrResult @AT@ 72542 @LENGTH@ 1
------------------------INS SimpleName@@attrResult @TO@ Assignment@@errResult=attrResult @AT@ 72545 @LENGTH@ 10
---INS VariableDeclarationStatement@@AuthorizationResult errResult=null; @TO@ Block@@ElseBody:{  AuthorizationResponseImpl authResp=authorizations.get(opId);  if (authResp == null) {    authResp=getBasicAuthorizationResponse(opId,operation);  }  if (authResp == null) {    return AuthorizationResult.PERMITTED;  }  for (  Action.ActionEffect requiredEffect : actionEffects) {    AuthorizationResult effectResult=authResp.getResourceResult(requiredEffect);    if (effectResult == null) {      Action action=authResp.standardAction.limitAction(requiredEffect);      effectResult=modelController.getAuthorizer().authorize(getCaller(),getCallEnvironment(),action,authResp.targetResource);      authResp.addResourceResult(requiredEffect,effectResult);    }    if (effectResult.getDecision() == AuthorizationResult.Decision.DENY) {      return effectResult;    }  }  if (allAttributes) {    ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();    ModelNode model=authResp.targetResource.getResource().getModel();    Set<Action.ActionEffect> attributeEffects=actionEffects.isEmpty() ? authResp.standardAction.getActionEffects() : actionEffects;    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      ModelNode currentValue=model.has(attr) ? model.get(attr) : new ModelNode();      AuthorizationResult attrResult=authorize(opId,attr,currentValue,attributeEffects);      if (attrResult.getDecision() == AuthorizationResult.Decision.DENY) {        return attrResult;      }    }    authResp.attributesComplete=true;  }  return AuthorizationResult.PERMITTED;} @AT@ 71710 @LENGTH@ 37
------INS SimpleType@@AuthorizationResult @TO@ VariableDeclarationStatement@@AuthorizationResult errResult=null; @AT@ 71710 @LENGTH@ 19
------INS VariableDeclarationFragment@@errResult=null @TO@ VariableDeclarationStatement@@AuthorizationResult errResult=null; @AT@ 71730 @LENGTH@ 16
---------INS SimpleName@@errResult @TO@ VariableDeclarationFragment@@errResult=null @AT@ 71730 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@errResult=null @AT@ 71742 @LENGTH@ 4
---UPD ReturnStatement@@QualifiedName:AuthorizationResult.PERMITTED @TO@ ConditionalExpression:errResult != null ? errResult : AuthorizationResult.PERMITTED @AT@ 72618 @LENGTH@ 37
------DEL QualifiedName@@AuthorizationResult.PERMITTED @AT@ 72625 @LENGTH@ 29
------INS ConditionalExpression@@errResult != null ? errResult : AuthorizationResult.PERMITTED @TO@ ReturnStatement@@QualifiedName:AuthorizationResult.PERMITTED @AT@ 72683 @LENGTH@ 61
---------INS InfixExpression@@errResult != null @TO@ ConditionalExpression@@errResult != null ? errResult : AuthorizationResult.PERMITTED @AT@ 72683 @LENGTH@ 17
------------INS SimpleName@@errResult @TO@ InfixExpression@@errResult != null @AT@ 72683 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@errResult != null @AT@ 72692 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@errResult != null @AT@ 72696 @LENGTH@ 4
---------INS SimpleName@@errResult @TO@ ConditionalExpression@@errResult != null ? errResult : AuthorizationResult.PERMITTED @AT@ 72703 @LENGTH@ 9
---------INS QualifiedName@@AuthorizationResult.PERMITTED @TO@ ConditionalExpression@@errResult != null ? errResult : AuthorizationResult.PERMITTED @AT@ 72715 @LENGTH@ 29
------------MOV SimpleName@@AuthorizationResult @TO@ QualifiedName@@AuthorizationResult.PERMITTED @AT@ 72625 @LENGTH@ 19
------------MOV SimpleName@@PERMITTED @TO@ QualifiedName@@AuthorizationResult.PERMITTED @AT@ 72645 @LENGTH@ 9


INS FieldDeclaration@@private, boolean, [skip] @TO@ TypeDeclaration@@[@Mojo(name="start",requiresDependencyResolution=ResolutionScope.RUNTIME), public]StartMojo, AbstractServerConnection @AT@ 6435 @LENGTH@ 21
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6435 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6443 @LENGTH@ 7
---INS VariableDeclarationFragment@@skip @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6451 @LENGTH@ 4
------INS SimpleName@@skip @TO@ VariableDeclarationFragment@@skip @AT@ 6451 @LENGTH@ 4


UPD TryStatement@@try {  Socket socket;  SocketFactory socketFactory;  socketFactory=config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault();  if (config.getHttpProxyHost() != null) {    socket=socketFactory.createSocket(config.getHttpProxyHost(),config.getHttpProxyPort());    connectProxy(host,port,socket);  } else {    socket=socketFactory.createSocket(host,port);  }  return new SocketConnection(socket);} catch (Exception e) {  throw new IOException(e.getMessage());} @TO@ try {  Socket socket;  SocketFactory socketFactory;  socketFactory=config.getUsingSSL() && config.getHttpProxyHost() == null ? SSLSocketFactory.getDefault() : SocketFactory.getDefault();  if (config.getHttpProxyHost() != null) {    socket=socketFactory.createSocket(config.getHttpProxyHost(),config.getHttpProxyPort());    connectProxy(host,port,socket);  } else {    socket=socketFactory.createSocket(host,port);  }  if (config.getUsingSSL() && config.getHttpProxyHost() != null) {    SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();    SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);    sslSocket.startHandshake();    socket=sslSocket;  }  return new SocketConnection(socket);} catch (Exception e) {  throw new IOException(e.getMessage());} @AT@ 3546 @LENGTH@ 637
---UPD ExpressionStatement@@Assignment:socketFactory=config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @TO@ Assignment:socketFactory=config.getUsingSSL() && config.getHttpProxyHost() == null ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @AT@ 3632 @LENGTH@ 98
------UPD Assignment@@socketFactory=config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @TO@ socketFactory=config.getUsingSSL() && config.getHttpProxyHost() == null ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @AT@ 3632 @LENGTH@ 97
---------UPD ConditionalExpression@@config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @TO@ config.getUsingSSL() && config.getHttpProxyHost() == null ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @AT@ 3648 @LENGTH@ 81
------------DEL MethodInvocation@@config.getUsingSSL() @AT@ 3648 @LENGTH@ 20
------------INS InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() == null @TO@ ConditionalExpression@@config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault() @AT@ 3680 @LENGTH@ 57
---------------INS MethodInvocation@@config.getUsingSSL() @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() == null @AT@ 3680 @LENGTH@ 20
------------------MOV SimpleName@@Name:config @TO@ MethodInvocation@@config.getUsingSSL() @AT@ 3648 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getUsingSSL:[] @TO@ MethodInvocation@@config.getUsingSSL() @AT@ 3655 @LENGTH@ 13
---------------INS Operator@@&& @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() == null @AT@ 3700 @LENGTH@ 2
---------------INS InfixExpression@@config.getHttpProxyHost() == null @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() == null @AT@ 3704 @LENGTH@ 33
------------------INS MethodInvocation@@config.getHttpProxyHost() @TO@ InfixExpression@@config.getHttpProxyHost() == null @AT@ 3704 @LENGTH@ 25
---------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getHttpProxyHost() @AT@ 3704 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getHttpProxyHost:[] @TO@ MethodInvocation@@config.getHttpProxyHost() @AT@ 3711 @LENGTH@ 18
------------------INS Operator@@== @TO@ InfixExpression@@config.getHttpProxyHost() == null @AT@ 3729 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@config.getHttpProxyHost() == null @AT@ 3733 @LENGTH@ 4
---INS IfStatement@@if (config.getUsingSSL() && config.getHttpProxyHost() != null) {  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @TO@ TryStatement@@try {  Socket socket;  SocketFactory socketFactory;  socketFactory=config.getUsingSSL() ? SSLSocketFactory.getDefault() : SocketFactory.getDefault();  if (config.getHttpProxyHost() != null) {    socket=socketFactory.createSocket(config.getHttpProxyHost(),config.getHttpProxyPort());    connectProxy(host,port,socket);  } else {    socket=socketFactory.createSocket(host,port);  }  return new SocketConnection(socket);} catch (Exception e) {  throw new IOException(e.getMessage());} @AT@ 4182 @LENGTH@ 439
------INS InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() != null @TO@ IfStatement@@if (config.getUsingSSL() && config.getHttpProxyHost() != null) {  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4186 @LENGTH@ 57
---------INS MethodInvocation@@config.getUsingSSL() @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() != null @AT@ 4186 @LENGTH@ 20
------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getUsingSSL() @AT@ 4186 @LENGTH@ 6
------------INS SimpleName@@MethodName:getUsingSSL:[] @TO@ MethodInvocation@@config.getUsingSSL() @AT@ 4193 @LENGTH@ 13
---------INS Operator@@&& @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() != null @AT@ 4206 @LENGTH@ 2
---------INS InfixExpression@@config.getHttpProxyHost() != null @TO@ InfixExpression@@config.getUsingSSL() && config.getHttpProxyHost() != null @AT@ 4210 @LENGTH@ 33
------------INS MethodInvocation@@config.getHttpProxyHost() @TO@ InfixExpression@@config.getHttpProxyHost() != null @AT@ 4210 @LENGTH@ 25
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getHttpProxyHost() @AT@ 4210 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getHttpProxyHost:[] @TO@ MethodInvocation@@config.getHttpProxyHost() @AT@ 4217 @LENGTH@ 18
------------INS Operator@@!= @TO@ InfixExpression@@config.getHttpProxyHost() != null @AT@ 4235 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@config.getHttpProxyHost() != null @AT@ 4239 @LENGTH@ 4
------INS Block@@ThenBody:{  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @TO@ IfStatement@@if (config.getUsingSSL() && config.getHttpProxyHost() != null) {  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4245 @LENGTH@ 376
---------INS VariableDeclarationStatement@@SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault(); @TO@ Block@@ThenBody:{  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4337 @LENGTH@ 84
------------INS SimpleType@@SSLSocketFactory @TO@ VariableDeclarationStatement@@SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault(); @AT@ 4337 @LENGTH@ 16
------------INS VariableDeclarationFragment@@sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault() @TO@ VariableDeclarationStatement@@SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault(); @AT@ 4354 @LENGTH@ 66
---------------INS SimpleName@@sslSocketFactory @TO@ VariableDeclarationFragment@@sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault() @AT@ 4354 @LENGTH@ 16
---------------INS CastExpression@@(SSLSocketFactory)SSLSocketFactory.getDefault() @TO@ VariableDeclarationFragment@@sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault() @AT@ 4373 @LENGTH@ 47
------------------INS SimpleType@@SSLSocketFactory @TO@ CastExpression@@(SSLSocketFactory)SSLSocketFactory.getDefault() @AT@ 4374 @LENGTH@ 16
------------------INS MethodInvocation@@SSLSocketFactory.getDefault() @TO@ CastExpression@@(SSLSocketFactory)SSLSocketFactory.getDefault() @AT@ 4391 @LENGTH@ 29
---------------------INS SimpleName@@Name:SSLSocketFactory @TO@ MethodInvocation@@SSLSocketFactory.getDefault() @AT@ 4391 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getDefault:[] @TO@ MethodInvocation@@SSLSocketFactory.getDefault() @AT@ 4408 @LENGTH@ 12
---------INS VariableDeclarationStatement@@SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true); @TO@ Block@@ThenBody:{  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4438 @LENGTH@ 89
------------INS SimpleType@@SSLSocket @TO@ VariableDeclarationStatement@@SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true); @AT@ 4438 @LENGTH@ 9
------------INS VariableDeclarationFragment@@sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @TO@ VariableDeclarationStatement@@SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true); @AT@ 4448 @LENGTH@ 78
---------------INS SimpleName@@sslSocket @TO@ VariableDeclarationFragment@@sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4448 @LENGTH@ 9
---------------INS CastExpression@@(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @TO@ VariableDeclarationFragment@@sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4460 @LENGTH@ 66
------------------INS SimpleType@@SSLSocket @TO@ CastExpression@@(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4461 @LENGTH@ 9
------------------INS MethodInvocation@@sslSocketFactory.createSocket(socket,host,port,true) @TO@ CastExpression@@(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4471 @LENGTH@ 55
---------------------INS SimpleName@@Name:sslSocketFactory @TO@ MethodInvocation@@sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4471 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:createSocket:[socket, host, port, true] @TO@ MethodInvocation@@sslSocketFactory.createSocket(socket,host,port,true) @AT@ 4488 @LENGTH@ 38
------------------------INS SimpleName@@socket @TO@ SimpleName@@MethodName:createSocket:[socket, host, port, true] @AT@ 4501 @LENGTH@ 6
------------------------INS SimpleName@@host @TO@ SimpleName@@MethodName:createSocket:[socket, host, port, true] @AT@ 4509 @LENGTH@ 4
------------------------INS SimpleName@@port @TO@ SimpleName@@MethodName:createSocket:[socket, host, port, true] @AT@ 4515 @LENGTH@ 4
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:createSocket:[socket, host, port, true] @AT@ 4521 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:sslSocket.startHandshake() @TO@ Block@@ThenBody:{  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4544 @LENGTH@ 27
------------INS MethodInvocation@@sslSocket.startHandshake() @TO@ ExpressionStatement@@MethodInvocation:sslSocket.startHandshake() @AT@ 4544 @LENGTH@ 26
---------------INS SimpleName@@Name:sslSocket @TO@ MethodInvocation@@sslSocket.startHandshake() @AT@ 4544 @LENGTH@ 9
---------------INS SimpleName@@MethodName:startHandshake:[] @TO@ MethodInvocation@@sslSocket.startHandshake() @AT@ 4554 @LENGTH@ 16
---------INS ExpressionStatement@@Assignment:socket=sslSocket @TO@ Block@@ThenBody:{  SSLSocketFactory sslSocketFactory=(SSLSocketFactory)SSLSocketFactory.getDefault();  SSLSocket sslSocket=(SSLSocket)sslSocketFactory.createSocket(socket,host,port,true);  sslSocket.startHandshake();  socket=sslSocket;} @AT@ 4588 @LENGTH@ 19
------------INS Assignment@@socket=sslSocket @TO@ ExpressionStatement@@Assignment:socket=sslSocket @AT@ 4588 @LENGTH@ 18
---------------INS SimpleName@@socket @TO@ Assignment@@socket=sslSocket @AT@ 4588 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@socket=sslSocket @AT@ 4594 @LENGTH@ 1
---------------INS SimpleName@@sslSocket @TO@ Assignment@@socket=sslSocket @AT@ 4597 @LENGTH@ 9


UPD MethodDeclaration@@public, int, MethodName:getConsumerTimeoutMs,  @TO@ public, Integer, MethodName:getConsumerTimeoutMs,  @AT@ 8877 @LENGTH@ 94
---INS SimpleType@@Integer @TO@ MethodDeclaration@@public, int, MethodName:getConsumerTimeoutMs,  @AT@ 8884 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 8884 @LENGTH@ 3


UPD VariableDeclarationStatement@@byte[] decodedSalt=Base64.base64DecodeStandard(base64Salt,0); @TO@ byte[] decodedSalt=CodePointIterator.ofChars(base64Salt).base64Decode(Alphabet.STANDARD,false).drain(); @AT@ 7962 @LENGTH@ 64
---UPD VariableDeclarationFragment@@decodedSalt=Base64.base64DecodeStandard(base64Salt,0) @TO@ decodedSalt=CodePointIterator.ofChars(base64Salt).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 7969 @LENGTH@ 56
------UPD MethodInvocation@@Base64.base64DecodeStandard(base64Salt,0) @TO@ CodePointIterator.ofChars(base64Salt).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 7983 @LENGTH@ 42
---------UPD SimpleName@@Name:Base64 @TO@ Name:CodePointIterator @AT@ 7983 @LENGTH@ 6
---------DEL SimpleName@@MethodName:base64DecodeStandard:[base64Salt, 0] @AT@ 7990 @LENGTH@ 35
------------DEL SimpleName@@base64Salt @AT@ 8011 @LENGTH@ 10
------------DEL NumberLiteral@@0 @AT@ 8023 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Salt,0) @AT@ 8079 @LENGTH@ 76
------------INS QualifiedName@@Alphabet.STANDARD @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 8130 @LENGTH@ 17
---------------INS SimpleName@@Alphabet @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 8130 @LENGTH@ 8
---------------INS SimpleName@@STANDARD @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 8139 @LENGTH@ 8
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 8149 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:ofChars:[base64Salt] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Salt,0) @AT@ 8079 @LENGTH@ 37
------------INS SimpleName@@base64Salt @TO@ MethodInvocation@@MethodName:ofChars:[base64Salt] @AT@ 8105 @LENGTH@ 10
---------INS SimpleName@@MethodName:drain:[] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Salt,0) @AT@ 8156 @LENGTH@ 7


UPD ReturnStatement@@InfixExpression:"0x" + Integer.toHexString(System.identityHashCode(this)) @TO@ InfixExpression:"0x" + Integer.toHexString(System.identityHashCode(this)) + "("+ refCount+ ")" @AT@ 4264 @LENGTH@ 65
---UPD InfixExpression@@"0x" + Integer.toHexString(System.identityHashCode(this)) @TO@ "0x" + Integer.toHexString(System.identityHashCode(this)) + "("+ refCount+ ")" @AT@ 4271 @LENGTH@ 57
------INS StringLiteral@@"(" @TO@ InfixExpression@@"0x" + Integer.toHexString(System.identityHashCode(this)) @AT@ 4371 @LENGTH@ 3
------INS SimpleName@@refCount @TO@ InfixExpression@@"0x" + Integer.toHexString(System.identityHashCode(this)) @AT@ 4377 @LENGTH@ 8
------INS StringLiteral@@")" @TO@ InfixExpression@@"0x" + Integer.toHexString(System.identityHashCode(this)) @AT@ 4388 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JsonPatchHandlerUnitTests,  @AT@ 3030 @LENGTH@ 488
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3030 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3037 @LENGTH@ 4
---INS SimpleName@@MethodName:removesArrayItemCorrectly @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3042 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3077 @LENGTH@ 9
---INS VariableDeclarationStatement@@User thomas=new User(); @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3092 @LENGTH@ 25
------INS SimpleType@@User @TO@ VariableDeclarationStatement@@User thomas=new User(); @AT@ 3092 @LENGTH@ 4
------INS VariableDeclarationFragment@@thomas=new User() @TO@ VariableDeclarationStatement@@User thomas=new User(); @AT@ 3097 @LENGTH@ 19
---------INS SimpleName@@thomas @TO@ VariableDeclarationFragment@@thomas=new User() @AT@ 3097 @LENGTH@ 6
---------INS ClassInstanceCreation@@User[] @TO@ VariableDeclarationFragment@@thomas=new User() @AT@ 3106 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 3106 @LENGTH@ 3
------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 3110 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:thomas.firstname="Thomas" @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3120 @LENGTH@ 28
------INS Assignment@@thomas.firstname="Thomas" @TO@ ExpressionStatement@@Assignment:thomas.firstname="Thomas" @AT@ 3120 @LENGTH@ 27
---------INS QualifiedName@@thomas.firstname @TO@ Assignment@@thomas.firstname="Thomas" @AT@ 3120 @LENGTH@ 16
------------INS SimpleName@@thomas @TO@ QualifiedName@@thomas.firstname @AT@ 3120 @LENGTH@ 6
------------INS SimpleName@@firstname @TO@ QualifiedName@@thomas.firstname @AT@ 3127 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@thomas.firstname="Thomas" @AT@ 3136 @LENGTH@ 1
---------INS StringLiteral@@"Thomas" @TO@ Assignment@@thomas.firstname="Thomas" @AT@ 3139 @LENGTH@ 8
---INS VariableDeclarationStatement@@User christoph=new User(); @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3152 @LENGTH@ 28
------INS SimpleType@@User @TO@ VariableDeclarationStatement@@User christoph=new User(); @AT@ 3152 @LENGTH@ 4
------INS VariableDeclarationFragment@@christoph=new User() @TO@ VariableDeclarationStatement@@User christoph=new User(); @AT@ 3157 @LENGTH@ 22
---------INS SimpleName@@christoph @TO@ VariableDeclarationFragment@@christoph=new User() @AT@ 3157 @LENGTH@ 9
---------INS ClassInstanceCreation@@User[] @TO@ VariableDeclarationFragment@@christoph=new User() @AT@ 3169 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 3169 @LENGTH@ 3
------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 3173 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:christoph.firstname="Christoph" @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3183 @LENGTH@ 34
------INS Assignment@@christoph.firstname="Christoph" @TO@ ExpressionStatement@@Assignment:christoph.firstname="Christoph" @AT@ 3183 @LENGTH@ 33
---------INS QualifiedName@@christoph.firstname @TO@ Assignment@@christoph.firstname="Christoph" @AT@ 3183 @LENGTH@ 19
------------INS SimpleName@@christoph @TO@ QualifiedName@@christoph.firstname @AT@ 3183 @LENGTH@ 9
------------INS SimpleName@@firstname @TO@ QualifiedName@@christoph.firstname @AT@ 3193 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@christoph.firstname="Christoph" @AT@ 3202 @LENGTH@ 1
---------INS StringLiteral@@"Christoph" @TO@ Assignment@@christoph.firstname="Christoph" @AT@ 3205 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:this.user.colleagues=Arrays.asList(thomas,christoph) @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3221 @LENGTH@ 56
------INS Assignment@@this.user.colleagues=Arrays.asList(thomas,christoph) @TO@ ExpressionStatement@@Assignment:this.user.colleagues=Arrays.asList(thomas,christoph) @AT@ 3221 @LENGTH@ 55
---------INS FieldAccess@@this.user.colleagues @TO@ Assignment@@this.user.colleagues=Arrays.asList(thomas,christoph) @AT@ 3221 @LENGTH@ 20
------------INS FieldAccess@@this.user @TO@ FieldAccess@@this.user.colleagues @AT@ 3221 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.user @AT@ 3221 @LENGTH@ 4
---------------INS SimpleName@@user @TO@ FieldAccess@@this.user @AT@ 3226 @LENGTH@ 4
------------INS SimpleName@@colleagues @TO@ FieldAccess@@this.user.colleagues @AT@ 3231 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.user.colleagues=Arrays.asList(thomas,christoph) @AT@ 3241 @LENGTH@ 1
---------INS MethodInvocation@@Arrays.asList(thomas,christoph) @TO@ Assignment@@this.user.colleagues=Arrays.asList(thomas,christoph) @AT@ 3244 @LENGTH@ 32
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(thomas,christoph) @AT@ 3244 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[thomas, christoph] @TO@ MethodInvocation@@Arrays.asList(thomas,christoph) @AT@ 3251 @LENGTH@ 25
---------------INS SimpleName@@thomas @TO@ SimpleName@@MethodName:asList:[thomas, christoph] @AT@ 3258 @LENGTH@ 6
---------------INS SimpleName@@christoph @TO@ SimpleName@@MethodName:asList:[thomas, christoph] @AT@ 3266 @LENGTH@ 9
---INS VariableDeclarationStatement@@String input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]"; @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3281 @LENGTH@ 71
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]"; @AT@ 3281 @LENGTH@ 6
------INS VariableDeclarationFragment@@input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]" @TO@ VariableDeclarationStatement@@String input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]"; @AT@ 3288 @LENGTH@ 63
---------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]" @AT@ 3288 @LENGTH@ 5
---------INS StringLiteral@@"[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]" @TO@ VariableDeclarationFragment@@input="[{ \"op\": \"remove\", \"path\": \"/colleagues/0\" }]" @AT@ 3296 @LENGTH@ 55
---INS ExpressionStatement@@MethodInvocation:handler.applyPatch(asStream(input),user) @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3356 @LENGTH@ 42
------INS MethodInvocation@@handler.applyPatch(asStream(input),user) @TO@ ExpressionStatement@@MethodInvocation:handler.applyPatch(asStream(input),user) @AT@ 3356 @LENGTH@ 41
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.applyPatch(asStream(input),user) @AT@ 3356 @LENGTH@ 7
---------INS SimpleName@@MethodName:applyPatch:[asStream(input), user] @TO@ MethodInvocation@@handler.applyPatch(asStream(input),user) @AT@ 3364 @LENGTH@ 33
------------INS MethodInvocation@@asStream(input) @TO@ SimpleName@@MethodName:applyPatch:[asStream(input), user] @AT@ 3375 @LENGTH@ 15
---------------INS SimpleName@@MethodName:asStream:[input] @TO@ MethodInvocation@@asStream(input) @AT@ 3375 @LENGTH@ 15
------------------INS SimpleName@@input @TO@ SimpleName@@MethodName:asStream:[input] @AT@ 3384 @LENGTH@ 5
------------INS SimpleName@@user @TO@ SimpleName@@MethodName:applyPatch:[asStream(input), user] @AT@ 3392 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(user.colleagues,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3402 @LENGTH@ 40
------INS MethodInvocation@@assertThat(user.colleagues,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(user.colleagues,hasSize(1)) @AT@ 3402 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[user.colleagues, hasSize(1)] @TO@ MethodInvocation@@assertThat(user.colleagues,hasSize(1)) @AT@ 3402 @LENGTH@ 39
------------INS QualifiedName@@user.colleagues @TO@ SimpleName@@MethodName:assertThat:[user.colleagues, hasSize(1)] @AT@ 3413 @LENGTH@ 15
---------------INS SimpleName@@user @TO@ QualifiedName@@user.colleagues @AT@ 3413 @LENGTH@ 4
---------------INS SimpleName@@colleagues @TO@ QualifiedName@@user.colleagues @AT@ 3418 @LENGTH@ 10
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[user.colleagues, hasSize(1)] @AT@ 3430 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 3430 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 3438 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 3430 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 3438 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(user.colleagues.get(0).firstname,is(christoph.firstname)) @TO@ MethodDeclaration@@public, void, MethodName:removesArrayItemCorrectly, Exception,  @AT@ 3445 @LENGTH@ 70
------INS MethodInvocation@@assertThat(user.colleagues.get(0).firstname,is(christoph.firstname)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(user.colleagues.get(0).firstname,is(christoph.firstname)) @AT@ 3445 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertThat:[user.colleagues.get(0).firstname, is(christoph.firstname)] @TO@ MethodInvocation@@assertThat(user.colleagues.get(0).firstname,is(christoph.firstname)) @AT@ 3445 @LENGTH@ 69
------------INS FieldAccess@@user.colleagues.get(0).firstname @TO@ SimpleName@@MethodName:assertThat:[user.colleagues.get(0).firstname, is(christoph.firstname)] @AT@ 3456 @LENGTH@ 32
---------------INS MethodInvocation@@user.colleagues.get(0) @TO@ FieldAccess@@user.colleagues.get(0).firstname @AT@ 3456 @LENGTH@ 22
------------------INS QualifiedName@@Name:user.colleagues @TO@ MethodInvocation@@user.colleagues.get(0) @AT@ 3456 @LENGTH@ 15
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@user.colleagues.get(0) @AT@ 3472 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 3476 @LENGTH@ 1
---------------INS SimpleName@@firstname @TO@ FieldAccess@@user.colleagues.get(0).firstname @AT@ 3479 @LENGTH@ 9
------------INS MethodInvocation@@is(christoph.firstname) @TO@ SimpleName@@MethodName:assertThat:[user.colleagues.get(0).firstname, is(christoph.firstname)] @AT@ 3490 @LENGTH@ 23
---------------INS SimpleName@@MethodName:is:[christoph.firstname] @TO@ MethodInvocation@@is(christoph.firstname) @AT@ 3490 @LENGTH@ 23
------------------INS QualifiedName@@christoph.firstname @TO@ SimpleName@@MethodName:is:[christoph.firstname] @AT@ 3493 @LENGTH@ 19
---------------------INS SimpleName@@christoph @TO@ QualifiedName@@christoph.firstname @AT@ 3493 @LENGTH@ 9
---------------------INS SimpleName@@firstname @TO@ QualifiedName@@christoph.firstname @AT@ 3503 @LENGTH@ 9


UPD TypeDeclaration@@[public]DeferServiceFactory,  @TO@ [public, final]DeferServiceFactory,  @AT@ 1123 @LENGTH@ 935
---INS Modifier@@final @TO@ TypeDeclaration@@[public]DeferServiceFactory,  @AT@ 1130 @LENGTH@ 5


UPD IfStatement@@if (fileName != null) {  LOG.trace("Getting object in bucket [{}] with file name [{}]...",bucketName,fileName);  S3Object s3Object=getAmazonS3Client().getObject(new GetObjectRequest(bucketName,fileName));  exchanges=createExchanges(s3Object);} else {  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @TO@ if (fileName != null) {  LOG.trace("Getting object in bucket [{}] with file name [{}]...",bucketName,fileName);  S3Object s3Object=getAmazonS3Client().getObject(new GetObjectRequest(bucketName,fileName));  exchanges=createExchanges(s3Object);} else {  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 2514 @LENGTH@ 1024
---UPD Block@@ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @TO@ ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 2813 @LENGTH@ 725
------INS IfStatement@@if (marker != null && !getConfiguration().isDeleteAfterRead()) {  listObjectsRequest.setMarker(marker);} @TO@ Block@@ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 3209 @LENGTH@ 132
---------INS InfixExpression@@marker != null && !getConfiguration().isDeleteAfterRead() @TO@ IfStatement@@if (marker != null && !getConfiguration().isDeleteAfterRead()) {  listObjectsRequest.setMarker(marker);} @AT@ 3213 @LENGTH@ 57
------------INS InfixExpression@@marker != null @TO@ InfixExpression@@marker != null && !getConfiguration().isDeleteAfterRead() @AT@ 3213 @LENGTH@ 14
---------------INS SimpleName@@marker @TO@ InfixExpression@@marker != null @AT@ 3213 @LENGTH@ 6
---------------INS Operator@@!= @TO@ InfixExpression@@marker != null @AT@ 3219 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@marker != null @AT@ 3223 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@marker != null && !getConfiguration().isDeleteAfterRead() @AT@ 3227 @LENGTH@ 2
------------INS PrefixExpression@@!getConfiguration().isDeleteAfterRead() @TO@ InfixExpression@@marker != null && !getConfiguration().isDeleteAfterRead() @AT@ 3231 @LENGTH@ 39
---------------INS Operator@@! @TO@ PrefixExpression@@!getConfiguration().isDeleteAfterRead() @AT@ 3231 @LENGTH@ 1
---------------INS MethodInvocation@@getConfiguration().isDeleteAfterRead() @TO@ PrefixExpression@@!getConfiguration().isDeleteAfterRead() @AT@ 3232 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().isDeleteAfterRead() @AT@ 3232 @LENGTH@ 18
------------------INS SimpleName@@MethodName:isDeleteAfterRead:[] @TO@ MethodInvocation@@getConfiguration().isDeleteAfterRead() @AT@ 3251 @LENGTH@ 19
---------INS Block@@ThenBody:{  listObjectsRequest.setMarker(marker);} @TO@ IfStatement@@if (marker != null && !getConfiguration().isDeleteAfterRead()) {  listObjectsRequest.setMarker(marker);} @AT@ 3272 @LENGTH@ 69
------------INS ExpressionStatement@@MethodInvocation:listObjectsRequest.setMarker(marker) @TO@ Block@@ThenBody:{  listObjectsRequest.setMarker(marker);} @AT@ 3290 @LENGTH@ 37
---------------INS MethodInvocation@@listObjectsRequest.setMarker(marker) @TO@ ExpressionStatement@@MethodInvocation:listObjectsRequest.setMarker(marker) @AT@ 3290 @LENGTH@ 36
------------------INS SimpleName@@Name:listObjectsRequest @TO@ MethodInvocation@@listObjectsRequest.setMarker(marker) @AT@ 3290 @LENGTH@ 18
------------------INS SimpleName@@MethodName:setMarker:[marker] @TO@ MethodInvocation@@listObjectsRequest.setMarker(marker) @AT@ 3309 @LENGTH@ 17
---------------------INS SimpleName@@marker @TO@ SimpleName@@MethodName:setMarker:[marker] @AT@ 3319 @LENGTH@ 6
------INS IfStatement@@if (!getConfiguration().isDeleteAfterRead()) {  marker=listObjects.getMarker();} @TO@ Block@@ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 3523 @LENGTH@ 151
---------INS PrefixExpression@@!getConfiguration().isDeleteAfterRead() @TO@ IfStatement@@if (!getConfiguration().isDeleteAfterRead()) {  marker=listObjects.getMarker();} @AT@ 3527 @LENGTH@ 39
------------INS Operator@@! @TO@ PrefixExpression@@!getConfiguration().isDeleteAfterRead() @AT@ 3527 @LENGTH@ 1
------------INS MethodInvocation@@getConfiguration().isDeleteAfterRead() @TO@ PrefixExpression@@!getConfiguration().isDeleteAfterRead() @AT@ 3528 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().isDeleteAfterRead() @AT@ 3528 @LENGTH@ 18
---------------INS SimpleName@@MethodName:isDeleteAfterRead:[] @TO@ MethodInvocation@@getConfiguration().isDeleteAfterRead() @AT@ 3547 @LENGTH@ 19
---------INS Block@@ThenBody:{  marker=listObjects.getMarker();} @TO@ IfStatement@@if (!getConfiguration().isDeleteAfterRead()) {  marker=listObjects.getMarker();} @AT@ 3568 @LENGTH@ 106
------------INS ExpressionStatement@@Assignment:marker=listObjects.getMarker() @TO@ Block@@ThenBody:{  marker=listObjects.getMarker();} @AT@ 3627 @LENGTH@ 33
---------------INS Assignment@@marker=listObjects.getMarker() @TO@ ExpressionStatement@@Assignment:marker=listObjects.getMarker() @AT@ 3627 @LENGTH@ 32
------------------INS SimpleName@@marker @TO@ Assignment@@marker=listObjects.getMarker() @AT@ 3627 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@marker=listObjects.getMarker() @AT@ 3633 @LENGTH@ 1
------------------INS MethodInvocation@@listObjects.getMarker() @TO@ Assignment@@marker=listObjects.getMarker() @AT@ 3636 @LENGTH@ 23
---------------------INS SimpleName@@Name:listObjects @TO@ MethodInvocation@@listObjects.getMarker() @AT@ 3636 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getMarker:[] @TO@ MethodInvocation@@listObjects.getMarker() @AT@ 3648 @LENGTH@ 11


UPD VariableDeclarationStatement@@ArrayList<? extends BasicIssue> copy=new ArrayList<>(issues); @TO@ ArrayList<? extends BasicIssue> copy=new ArrayList<BasicIssue>(issues); @AT@ 1710 @LENGTH@ 63
---UPD VariableDeclarationFragment@@copy=new ArrayList<>(issues) @TO@ copy=new ArrayList<BasicIssue>(issues) @AT@ 1742 @LENGTH@ 30
------UPD ClassInstanceCreation@@ArrayList<>[issues] @TO@ ArrayList<BasicIssue>[issues] @AT@ 1749 @LENGTH@ 23
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<BasicIssue> @AT@ 1753 @LENGTH@ 11
------------INS SimpleType@@BasicIssue @TO@ ParameterizedType@@ArrayList<> @AT@ 1763 @LENGTH@ 10


UPD MethodDeclaration@@public, Object, MethodName:getWorkflowExecutionState, String workflowId, String runId, Class aClass, Throwable,  @TO@ public, Object, MethodName:getWorkflowExecutionState, String workflowId, String runId, Class<?> aClass, Throwable,  @AT@ 2397 @LENGTH@ 306
---UPD SingleVariableDeclaration@@Class aClass @TO@ Class<?> aClass @AT@ 2470 @LENGTH@ 12
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class aClass @AT@ 2470 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2470 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2476 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 2470 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:CacheFactoryResourceDefinition.ALIASES.marshallAsElement(cache,writer) @TO@ MethodInvocation:writeAttribute(writer,cache,CacheFactoryResourceDefinition.ALIASES) @AT@ 21424 @LENGTH@ 72
---UPD MethodInvocation@@CacheFactoryResourceDefinition.ALIASES.marshallAsElement(cache,writer) @TO@ writeAttribute(writer,cache,CacheFactoryResourceDefinition.ALIASES) @AT@ 21424 @LENGTH@ 71
------DEL QualifiedName@@Name:CacheFactoryResourceDefinition.ALIASES @AT@ 21424 @LENGTH@ 38
------UPD SimpleName@@MethodName:marshallAsElement:[cache, writer] @TO@ MethodName:writeAttribute:[writer, cache, CacheFactoryResourceDefinition.ALIASES] @AT@ 21463 @LENGTH@ 32
---------DEL SimpleName@@writer @AT@ 21488 @LENGTH@ 6
---------INS SimpleName@@writer @TO@ SimpleName@@MethodName:marshallAsElement:[cache, writer] @AT@ 21492 @LENGTH@ 6
---------INS QualifiedName@@CacheFactoryResourceDefinition.ALIASES @TO@ SimpleName@@MethodName:marshallAsElement:[cache, writer] @AT@ 21507 @LENGTH@ 38
------------INS SimpleName@@CacheFactoryResourceDefinition @TO@ QualifiedName@@CacheFactoryResourceDefinition.ALIASES @AT@ 21507 @LENGTH@ 30
------------INS SimpleName@@ALIASES @TO@ QualifiedName@@CacheFactoryResourceDefinition.ALIASES @AT@ 21538 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"operation\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"operation\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1905 @LENGTH@ 92
---UPD MethodInvocation@@assertTrue(json.contains("\"operation\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"operation\": { \"kind\": \"path\", \"type\": \"string\"")) @AT@ 1905 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"operation\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"operation\": { \"kind\": \"path\", \"type\": \"string\"")] @AT@ 1905 @LENGTH@ 91
---------UPD MethodInvocation@@json.contains("\"operation\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"operation\": { \"kind\": \"path\", \"type\": \"string\"") @AT@ 1916 @LENGTH@ 79
------------UPD SimpleName@@MethodName:contains:["\"operation\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"operation\": { \"kind\": \"path\", \"type\": \"string\""] @AT@ 1921 @LENGTH@ 74
---------------UPD StringLiteral@@"\"operation\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"operation\": { \"kind\": \"path\", \"type\": \"string\"" @AT@ 1930 @LENGTH@ 64


UPD VariableDeclarationStatement@@int before=new File("target/test").list().length; @TO@ String[] beforeFiles=new File("target/test").list(); @AT@ 9371 @LENGTH@ 51
---INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9371 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9371 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 9371 @LENGTH@ 3
---UPD VariableDeclarationFragment@@before=new File("target/test").list().length @TO@ beforeFiles=new File("target/test").list() @AT@ 9375 @LENGTH@ 46
------UPD SimpleName@@before @TO@ beforeFiles @AT@ 9375 @LENGTH@ 6
------DEL FieldAccess@@new File("target/test").list().length @AT@ 9384 @LENGTH@ 37
---------DEL SimpleName@@length @AT@ 9415 @LENGTH@ 6
------MOV MethodInvocation@@new File("target/test").list() @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9384 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:message.setHeader(ElasticsearchConfiguration.PARAM_INDEX_TYPE,getEndpoint().getConfig().getIndexName()) @TO@ MethodInvocation:message.setHeader(ElasticsearchConfiguration.PARAM_INDEX_TYPE,getEndpoint().getConfig().getIndexType()) @AT@ 4935 @LENGTH@ 105
---UPD MethodInvocation@@message.setHeader(ElasticsearchConfiguration.PARAM_INDEX_TYPE,getEndpoint().getConfig().getIndexName()) @TO@ message.setHeader(ElasticsearchConfiguration.PARAM_INDEX_TYPE,getEndpoint().getConfig().getIndexType()) @AT@ 4935 @LENGTH@ 104
------UPD SimpleName@@MethodName:setHeader:[ElasticsearchConfiguration.PARAM_INDEX_TYPE, getEndpoint().getConfig().getIndexName()] @TO@ MethodName:setHeader:[ElasticsearchConfiguration.PARAM_INDEX_TYPE, getEndpoint().getConfig().getIndexType()] @AT@ 4943 @LENGTH@ 96
---------UPD MethodInvocation@@getEndpoint().getConfig().getIndexName() @TO@ getEndpoint().getConfig().getIndexType() @AT@ 4998 @LENGTH@ 40
------------UPD SimpleName@@MethodName:getIndexName:[] @TO@ MethodName:getIndexType:[] @AT@ 5024 @LENGTH@ 14


INS ExpressionStatement@@SuperMethodInvocation:super.setConfiguration(configuration) @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, GenericFileConfiguration configuration,  @AT@ 6031 @LENGTH@ 38
---INS SuperMethodInvocation@@super.setConfiguration(configuration) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setConfiguration(configuration) @AT@ 6031 @LENGTH@ 37
------INS SimpleName@@MethodName:setConfiguration:[configuration] @TO@ SuperMethodInvocation@@super.setConfiguration(configuration) @AT@ 6037 @LENGTH@ 16
------INS SimpleName@@configuration @TO@ SuperMethodInvocation@@super.setConfiguration(configuration) @AT@ 6054 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testSimpleConsumerWithEmptyFile, Exception,  @AT@ 6854 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 6854 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 6854 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 6861 @LENGTH@ 11
---------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 6867 @LENGTH@ 4


UPD IfStatement@@if (e.getMessage().matches("(?s).*(IO|TTransport)Exception.*")) ; @TO@ if (e.getMessage().matches("(?s).*(IO|TTransport)Exception.*")) {  caughtException=e;} else {  throw e;} @AT@ 7303 @LENGTH@ 64
---UPD Block@@ThenBody:; @TO@ ThenBody:{  caughtException=e;} @AT@ 7366 @LENGTH@ 1
------MOV ExpressionStatement@@Assignment:caughtException=e @TO@ Block@@ThenBody:; @AT@ 7376 @LENGTH@ 20
---INS Block@@ElseBody:{  throw e;} @TO@ IfStatement@@if (e.getMessage().matches("(?s).*(IO|TTransport)Exception.*")) ; @AT@ 7415 @LENGTH@ 30
------INS ThrowStatement@@SimpleName:e @TO@ Block@@ElseBody:{  throw e;} @AT@ 7427 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 7433 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @TO@ TypeDeclaration@@[public]JwtTokenStoreTests,  @AT@ 3110 @LENGTH@ 194
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @AT@ 3110 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @AT@ 3117 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadNonExpiringRefreshToken @TO@ MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @AT@ 3122 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @AT@ 3163 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertFalse(tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @TO@ MethodDeclaration@@public, void, MethodName:testReadNonExpiringRefreshToken, Exception,  @AT@ 3177 @LENGTH@ 124
------INS MethodInvocation@@assertFalse(tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 3177 @LENGTH@ 123
---------INS SimpleName@@MethodName:assertFalse:[tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken] @TO@ MethodInvocation@@assertFalse(tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 3177 @LENGTH@ 123
------------INS InstanceofExpression@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @TO@ SimpleName@@MethodName:assertFalse:[tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken] @AT@ 3189 @LENGTH@ 110
---------------INS MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @TO@ InstanceofExpression@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3189 @LENGTH@ 65
------------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @AT@ 3189 @LENGTH@ 10
------------------INS SimpleName@@MethodName:readRefreshToken:[expectedOAuth2AccessToken.getValue()] @TO@ MethodInvocation@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) @AT@ 3200 @LENGTH@ 54
---------------------INS MethodInvocation@@expectedOAuth2AccessToken.getValue() @TO@ SimpleName@@MethodName:readRefreshToken:[expectedOAuth2AccessToken.getValue()] @AT@ 3217 @LENGTH@ 36
------------------------INS SimpleName@@Name:expectedOAuth2AccessToken @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 3217 @LENGTH@ 25
------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedOAuth2AccessToken.getValue() @AT@ 3243 @LENGTH@ 10
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3255 @LENGTH@ 10
---------------INS SimpleType@@DefaultExpiringOAuth2RefreshToken @TO@ InstanceofExpression@@tokenStore.readRefreshToken(expectedOAuth2AccessToken.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3266 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\"")) @AT@ 1694 @LENGTH@ 92
---UPD MethodInvocation@@assertTrue(json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\"")) @AT@ 1694 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\"")] @AT@ 1694 @LENGTH@ 91
---------UPD MethodInvocation@@json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\"") @TO@ json.contains("\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\"") @AT@ 1705 @LENGTH@ 79
------------UPD SimpleName@@MethodName:contains:["\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\""] @AT@ 1710 @LENGTH@ 74
---------------UPD StringLiteral@@"\"awaitJob\": { \"kind\": \"parameter\", \"type\": \"boolean\"" @TO@ "\"awaitJob\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"boolean\"" @AT@ 1719 @LENGTH@ 64


UPD ExpressionStatement@@MethodInvocation:props.put("metadata.broker.list","localhost:9092") @TO@ MethodInvocation:props.put("metadata.broker.list","localhost:" + getKarfkaPort()) @AT@ 1829 @LENGTH@ 52
---UPD MethodInvocation@@props.put("metadata.broker.list","localhost:9092") @TO@ props.put("metadata.broker.list","localhost:" + getKarfkaPort()) @AT@ 1829 @LENGTH@ 51
------UPD SimpleName@@MethodName:put:["metadata.broker.list", "localhost:9092"] @TO@ MethodName:put:["metadata.broker.list", "localhost:" + getKarfkaPort()] @AT@ 1835 @LENGTH@ 45
---------DEL StringLiteral@@"localhost:9092" @AT@ 1863 @LENGTH@ 16
---------INS InfixExpression@@"localhost:" + getKarfkaPort() @TO@ SimpleName@@MethodName:put:["metadata.broker.list", "localhost:9092"] @AT@ 1886 @LENGTH@ 30
------------INS StringLiteral@@"localhost:" @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1886 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1898 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getKarfkaPort:[] @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1901 @LENGTH@ 15


INS ExpressionStatement@@ClassInstanceCreation:new WebConnectionWrapper(webClient){
  @Override public WebResponse getResponse(  WebRequest request) throws IOException {
    request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity");
    return super.getResponse(request);
  }
}
 @TO@ MethodDeclaration@@public, void, MethodName:authenticate, IAuthFlowListener listener,  @AT@ 4576 @LENGTH@ 305
---INS ClassInstanceCreation@@WebConnectionWrapper[webClient] @TO@ ExpressionStatement@@ClassInstanceCreation:new WebConnectionWrapper(webClient){
  @Override public WebResponse getResponse(  WebRequest request) throws IOException {
    request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity");
    return super.getResponse(request);
  }
}
 @AT@ 4576 @LENGTH@ 304
------INS New@@new @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 4576 @LENGTH@ 3
------INS SimpleType@@WebConnectionWrapper @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 4580 @LENGTH@ 20
------INS SimpleName@@webClient @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 4601 @LENGTH@ 9
------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 4612 @LENGTH@ 268
---------INS MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4648 @LENGTH@ 222
------------INS Modifier@@public @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4648 @LENGTH@ 6
------------INS SimpleType@@WebResponse @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4655 @LENGTH@ 11
------------INS SimpleName@@MethodName:getResponse @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4667 @LENGTH@ 11
------------INS SingleVariableDeclaration@@WebRequest request @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4679 @LENGTH@ 18
---------------INS SimpleType@@WebRequest @TO@ SingleVariableDeclaration@@WebRequest request @AT@ 4679 @LENGTH@ 10
---------------INS SimpleName@@request @TO@ SingleVariableDeclaration@@WebRequest request @AT@ 4690 @LENGTH@ 7
------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4706 @LENGTH@ 11
------------INS ExpressionStatement@@MethodInvocation:request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4736 @LENGTH@ 69
---------------INS MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @TO@ ExpressionStatement@@MethodInvocation:request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 4736 @LENGTH@ 68
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 4736 @LENGTH@ 7
------------------INS SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @TO@ MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 4744 @LENGTH@ 60
---------------------INS QualifiedName@@HttpHeaders.ACCEPT_ENCODING @TO@ SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @AT@ 4764 @LENGTH@ 27
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.ACCEPT_ENCODING @AT@ 4764 @LENGTH@ 11
------------------------INS SimpleName@@ACCEPT_ENCODING @TO@ QualifiedName@@HttpHeaders.ACCEPT_ENCODING @AT@ 4776 @LENGTH@ 15
---------------------INS StringLiteral@@"identity" @TO@ SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @AT@ 4793 @LENGTH@ 10
------------INS ReturnStatement@@SuperMethodInvocation:super.getResponse(request) @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 4822 @LENGTH@ 34
---------------INS SuperMethodInvocation@@super.getResponse(request) @TO@ ReturnStatement@@SuperMethodInvocation:super.getResponse(request) @AT@ 4829 @LENGTH@ 26
------------------INS SimpleName@@MethodName:getResponse:[request] @TO@ SuperMethodInvocation@@super.getResponse(request) @AT@ 4835 @LENGTH@ 11
------------------INS SimpleName@@request @TO@ SuperMethodInvocation@@super.getResponse(request) @AT@ 4847 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:endpointConfiguration.setMethodName(methodName) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String methodName, GoogleMailApiName apiName, GoogleMailConfiguration endpointConfiguration,  @AT@ 3034 @LENGTH@ 48
---INS MethodInvocation@@endpointConfiguration.setMethodName(methodName) @TO@ ExpressionStatement@@MethodInvocation:endpointConfiguration.setMethodName(methodName) @AT@ 3034 @LENGTH@ 47
------INS SimpleName@@Name:endpointConfiguration @TO@ MethodInvocation@@endpointConfiguration.setMethodName(methodName) @AT@ 3034 @LENGTH@ 21
------INS SimpleName@@MethodName:setMethodName:[methodName] @TO@ MethodInvocation@@endpointConfiguration.setMethodName(methodName) @AT@ 3056 @LENGTH@ 25
---------INS SimpleName@@methodName @TO@ SimpleName@@MethodName:setMethodName:[methodName] @AT@ 3070 @LENGTH@ 10


INS TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 3265 @LENGTH@ 158
---MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown(managementClient,containerId) @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @AT@ 3277 @LENGTH@ 46
---INS Block@@FinallyBody:{  remove(address1,managementClient);} @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @AT@ 3356 @LENGTH@ 67
------INS ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @TO@ Block@@FinallyBody:{  remove(address1,managementClient);} @AT@ 3374 @LENGTH@ 35
---------MOV MethodInvocation@@remove(address1) @TO@ ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @AT@ 3256 @LENGTH@ 16
------------UPD SimpleName@@MethodName:remove:[address1] @TO@ MethodName:remove:[address1, managementClient] @AT@ 3256 @LENGTH@ 16
---------------INS SimpleName@@managementClient @TO@ SimpleName@@MethodName:remove:[address1] @AT@ 3391 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2ErrorHandlerTests,  @AT@ 4794 @LENGTH@ 263
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4794 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4801 @LENGTH@ 4
---INS SimpleName@@MethodName:testHandleGeneric403Error @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4806 @LENGTH@ 25
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4841 @LENGTH@ 9
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4855 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 4855 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 4867 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 4867 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 4877 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 4877 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 4881 @LENGTH@ 11
---INS VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403); @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4898 @LENGTH@ 71
------INS SimpleType@@ClientHttpResponse @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403); @AT@ 4898 @LENGTH@ 18
------INS VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403) @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403); @AT@ 4917 @LENGTH@ 51
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403) @AT@ 4917 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestClientHttpResponse[headers, 403] @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403) @AT@ 4928 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403] @AT@ 4928 @LENGTH@ 3
------------INS SimpleType@@TestClientHttpResponse @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403] @AT@ 4932 @LENGTH@ 22
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403] @AT@ 4955 @LENGTH@ 7
------------INS NumberLiteral@@403 @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403] @AT@ 4964 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:expected.expect(HttpClientErrorException.class) @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 4973 @LENGTH@ 48
------INS MethodInvocation@@expected.expect(HttpClientErrorException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(HttpClientErrorException.class) @AT@ 4973 @LENGTH@ 47
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(HttpClientErrorException.class) @AT@ 4973 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[HttpClientErrorException.class] @TO@ MethodInvocation@@expected.expect(HttpClientErrorException.class) @AT@ 4982 @LENGTH@ 38
------------INS TypeLiteral@@HttpClientErrorException.class @TO@ SimpleName@@MethodName:expect:[HttpClientErrorException.class] @AT@ 4989 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:handler.handleError(response) @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403Error, Exception,  @AT@ 5024 @LENGTH@ 30
------INS MethodInvocation@@handler.handleError(response) @TO@ ExpressionStatement@@MethodInvocation:handler.handleError(response) @AT@ 5024 @LENGTH@ 29
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleError(response) @AT@ 5024 @LENGTH@ 7
---------INS SimpleName@@MethodName:handleError:[response] @TO@ MethodInvocation@@handler.handleError(response) @AT@ 5032 @LENGTH@ 21
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:handleError:[response] @AT@ 5044 @LENGTH@ 8


DEL ExpressionStatement@@Assignment:this.commandExecutor=new DefaultExecCommandExecutor() @AT@ 2416 @LENGTH@ 56
---DEL Assignment@@this.commandExecutor=new DefaultExecCommandExecutor() @AT@ 2416 @LENGTH@ 55
------DEL FieldAccess@@this.commandExecutor @AT@ 2416 @LENGTH@ 20
---------DEL ThisExpression@@this @AT@ 2416 @LENGTH@ 4
---------DEL SimpleName@@commandExecutor @AT@ 2421 @LENGTH@ 15
------DEL Operator@@= @AT@ 2436 @LENGTH@ 1
------DEL ClassInstanceCreation@@DefaultExecCommandExecutor[] @AT@ 2439 @LENGTH@ 32
---------DEL New@@new @AT@ 2439 @LENGTH@ 3
---------DEL SimpleType@@DefaultExecCommandExecutor @AT@ 2443 @LENGTH@ 26


UPD VariableDeclarationStatement@@String msg=String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.",LS); @TO@ String msg=String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.","\n"); @AT@ 1240 @LENGTH@ 110
---UPD VariableDeclarationFragment@@msg=String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.",LS) @TO@ msg=String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.","\n") @AT@ 1247 @LENGTH@ 102
------UPD MethodInvocation@@String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.",LS) @TO@ String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.","\n") @AT@ 1253 @LENGTH@ 96
---------UPD SimpleName@@MethodName:format:["Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.", LS] @TO@ MethodName:format:["Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.", "\n"] @AT@ 1260 @LENGTH@ 89
------------INS StringLiteral@@"\n" @TO@ SimpleName@@MethodName:format:["Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.", LS] @AT@ 1346 @LENGTH@ 4
------------DEL SimpleName@@LS @AT@ 1346 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]PartTreeMongoQueryUnitTests,  @AT@ 4829 @LENGTH@ 267
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 4829 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 4836 @LENGTH@ 4
---INS SimpleName@@MethodName:propagatesRootExceptionForInvalidQuery @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 4841 @LENGTH@ 38
---INS ExpressionStatement@@MethodInvocation:exception.expect(IllegalStateException.class) @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 4887 @LENGTH@ 46
------INS MethodInvocation@@exception.expect(IllegalStateException.class) @TO@ ExpressionStatement@@MethodInvocation:exception.expect(IllegalStateException.class) @AT@ 4887 @LENGTH@ 45
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expect(IllegalStateException.class) @AT@ 4887 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[IllegalStateException.class] @TO@ MethodInvocation@@exception.expect(IllegalStateException.class) @AT@ 4897 @LENGTH@ 35
------------INS TypeLiteral@@IllegalStateException.class @TO@ SimpleName@@MethodName:expect:[IllegalStateException.class] @AT@ 4904 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:exception.expectCause(is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))) @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 4936 @LENGTH@ 98
------INS MethodInvocation@@exception.expectCause(is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))) @TO@ ExpressionStatement@@MethodInvocation:exception.expectCause(is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))) @AT@ 4936 @LENGTH@ 97
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expectCause(is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))) @AT@ 4936 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectCause:[is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))] @TO@ MethodInvocation@@exception.expectCause(is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))) @AT@ 4946 @LENGTH@ 87
------------INS MethodInvocation@@is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class)) @TO@ SimpleName@@MethodName:expectCause:[is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class))] @AT@ 4958 @LENGTH@ 74
---------------INS SimpleName@@MethodName:is:[org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class)] @TO@ MethodInvocation@@is(org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class)) @AT@ 4958 @LENGTH@ 74
------------------INS MethodInvocation@@org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class) @TO@ SimpleName@@MethodName:is:[org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class)] @AT@ 4961 @LENGTH@ 70
---------------------INS QualifiedName@@Name:org.hamcrest.Matchers @TO@ MethodInvocation@@org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class) @AT@ 4961 @LENGTH@ 21
---------------------INS SimpleName@@MethodName:instanceOf:[JSONParseException.class] @TO@ MethodInvocation@@org.hamcrest.Matchers.<Throwable>instanceOf(JSONParseException.class) @AT@ 4995 @LENGTH@ 36
------------------------INS TypeLiteral@@JSONParseException.class @TO@ SimpleName@@MethodName:instanceOf:[JSONParseException.class] @AT@ 5006 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:deriveQueryFromMethod("findByAge",new Object[]{1}) @TO@ MethodDeclaration@@public, void, MethodName:propagatesRootExceptionForInvalidQuery,  @AT@ 5038 @LENGTH@ 55
------INS MethodInvocation@@deriveQueryFromMethod("findByAge",new Object[]{1}) @TO@ ExpressionStatement@@MethodInvocation:deriveQueryFromMethod("findByAge",new Object[]{1}) @AT@ 5038 @LENGTH@ 54
---------INS SimpleName@@MethodName:deriveQueryFromMethod:["findByAge", new Object[]{1}] @TO@ MethodInvocation@@deriveQueryFromMethod("findByAge",new Object[]{1}) @AT@ 5038 @LENGTH@ 54
------------INS StringLiteral@@"findByAge" @TO@ SimpleName@@MethodName:deriveQueryFromMethod:["findByAge", new Object[]{1}] @AT@ 5060 @LENGTH@ 11
------------INS ArrayCreation@@new Object[]{1} @TO@ SimpleName@@MethodName:deriveQueryFromMethod:["findByAge", new Object[]{1}] @AT@ 5073 @LENGTH@ 18
---------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{1} @AT@ 5077 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5077 @LENGTH@ 6
---------------INS ArrayInitializer@@{1} @TO@ ArrayCreation@@new Object[]{1} @AT@ 5086 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1} @AT@ 5088 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:remove(address1) @AT@ 3118 @LENGTH@ 17


UPD VariableDeclarationStatement@@File file2=super.getFile("utf8-winzip-test.zip"); @TO@ File file2=getFile("utf8-winzip-test.zip"); @AT@ 13839 @LENGTH@ 51
---UPD VariableDeclarationFragment@@file2=super.getFile("utf8-winzip-test.zip") @TO@ file2=getFile("utf8-winzip-test.zip") @AT@ 13844 @LENGTH@ 45
------INS MethodInvocation@@getFile("utf8-winzip-test.zip") @TO@ VariableDeclarationFragment@@file2=super.getFile("utf8-winzip-test.zip") @AT@ 13846 @LENGTH@ 31
---------INS SimpleName@@MethodName:getFile:["utf8-winzip-test.zip"] @TO@ MethodInvocation@@getFile("utf8-winzip-test.zip") @AT@ 13846 @LENGTH@ 31
------------INS StringLiteral@@"utf8-winzip-test.zip" @TO@ SimpleName@@MethodName:getFile:["utf8-winzip-test.zip"] @AT@ 13854 @LENGTH@ 22
------DEL SuperMethodInvocation@@super.getFile("utf8-winzip-test.zip") @AT@ 13852 @LENGTH@ 37
---------DEL SimpleName@@MethodName:getFile:["utf8-winzip-test.zip"] @AT@ 13858 @LENGTH@ 7
---------DEL StringLiteral@@"utf8-winzip-test.zip" @AT@ 13866 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:directProducer.sendBodyAndHeader("Hello, World!",RabbitMQConstants.REQUEUE,4l) @TO@ MethodInvocation:directProducer.sendBodyAndHeader("Hello, World!",RabbitMQConstants.REQUEUE,4L) @AT@ 2428 @LENGTH@ 81
---UPD MethodInvocation@@directProducer.sendBodyAndHeader("Hello, World!",RabbitMQConstants.REQUEUE,4l) @TO@ directProducer.sendBodyAndHeader("Hello, World!",RabbitMQConstants.REQUEUE,4L) @AT@ 2428 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBodyAndHeader:["Hello, World!", RabbitMQConstants.REQUEUE, 4l] @TO@ MethodName:sendBodyAndHeader:["Hello, World!", RabbitMQConstants.REQUEUE, 4L] @AT@ 2443 @LENGTH@ 65
---------UPD NumberLiteral@@4l @TO@ 4L @AT@ 2505 @LENGTH@ 2


DEL MethodDeclaration@@public, void, MethodName:testIIOPNamingInvocationWithDDOverride, NamingException, RemoteException,  @AT@ 3811 @LENGTH@ 581
---DEL Modifier@@public @AT@ 3811 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3818 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIIOPNamingInvocationWithDDOverride @AT@ 3823 @LENGTH@ 38
---DEL SimpleType@@NamingException @AT@ 3871 @LENGTH@ 15
---DEL SimpleType@@RemoteException @AT@ 3888 @LENGTH@ 15
---DEL VariableDeclarationStatement@@final Properties prope=new Properties(); @AT@ 3914 @LENGTH@ 42
------DEL Modifier@@final @AT@ 3914 @LENGTH@ 5
------DEL SimpleType@@Properties @AT@ 3920 @LENGTH@ 10
------DEL VariableDeclarationFragment@@prope=new Properties() @AT@ 3931 @LENGTH@ 24
---------DEL SimpleName@@prope @AT@ 3931 @LENGTH@ 5
---------DEL ClassInstanceCreation@@Properties[] @AT@ 3939 @LENGTH@ 16
------------DEL New@@new @AT@ 3939 @LENGTH@ 3
------------DEL SimpleType@@Properties @AT@ 3943 @LENGTH@ 10
---DEL VariableDeclarationStatement@@final InitialContext context=new InitialContext(prope); @AT@ 3965 @LENGTH@ 57
------DEL Modifier@@final @AT@ 3965 @LENGTH@ 5
------DEL SimpleType@@InitialContext @AT@ 3971 @LENGTH@ 14
------DEL VariableDeclarationFragment@@context=new InitialContext(prope) @AT@ 3986 @LENGTH@ 35
---------DEL SimpleName@@context @AT@ 3986 @LENGTH@ 7
---------DEL ClassInstanceCreation@@InitialContext[prope] @AT@ 3996 @LENGTH@ 25
------------DEL New@@new @AT@ 3996 @LENGTH@ 3
------------DEL SimpleType@@InitialContext @AT@ 4000 @LENGTH@ 14
------------DEL SimpleName@@prope @AT@ 4015 @LENGTH@ 5
---DEL VariableDeclarationStatement@@final Object iiopObj=context.lookup("corbaname:iiop:" + managementClient.getMgmtAddress() + ":3528#bean/custom/name/IIOPNamingBean"); @AT@ 4031 @LENGTH@ 135
------DEL Modifier@@final @AT@ 4031 @LENGTH@ 5
------DEL SimpleType@@Object @AT@ 4037 @LENGTH@ 6
------DEL VariableDeclarationFragment@@iiopObj=context.lookup("corbaname:iiop:" + managementClient.getMgmtAddress() + ":3528#bean/custom/name/IIOPNamingBean") @AT@ 4044 @LENGTH@ 121
---------DEL SimpleName@@iiopObj @AT@ 4044 @LENGTH@ 7
---------DEL MethodInvocation@@context.lookup("corbaname:iiop:" + managementClient.getMgmtAddress() + ":3528#bean/custom/name/IIOPNamingBean") @AT@ 4054 @LENGTH@ 111
------------DEL SimpleName@@Name:context @AT@ 4054 @LENGTH@ 7
------------DEL SimpleName@@MethodName:lookup:["corbaname:iiop:" + managementClient.getMgmtAddress() + ":3528#bean/custom/name/IIOPNamingBean"] @AT@ 4062 @LENGTH@ 103
---------------DEL InfixExpression@@"corbaname:iiop:" + managementClient.getMgmtAddress() + ":3528#bean/custom/name/IIOPNamingBean" @AT@ 4069 @LENGTH@ 95
------------------DEL StringLiteral@@"corbaname:iiop:" @AT@ 4069 @LENGTH@ 17
------------------DEL Operator@@+ @AT@ 4086 @LENGTH@ 1
------------------DEL MethodInvocation@@managementClient.getMgmtAddress() @AT@ 4089 @LENGTH@ 33
---------------------DEL SimpleName@@Name:managementClient @AT@ 4089 @LENGTH@ 16
---------------------DEL SimpleName@@MethodName:getMgmtAddress:[] @AT@ 4106 @LENGTH@ 16
------------------DEL StringLiteral@@":3528#bean/custom/name/IIOPNamingBean" @AT@ 4125 @LENGTH@ 39
---DEL VariableDeclarationStatement@@final IIOPNamingHome object=(IIOPNamingHome)PortableRemoteObject.narrow(iiopObj,IIOPNamingHome.class); @AT@ 4175 @LENGTH@ 106
------DEL Modifier@@final @AT@ 4175 @LENGTH@ 5
------DEL SimpleType@@IIOPNamingHome @AT@ 4181 @LENGTH@ 14
------DEL VariableDeclarationFragment@@object=(IIOPNamingHome)PortableRemoteObject.narrow(iiopObj,IIOPNamingHome.class) @AT@ 4196 @LENGTH@ 84
---------DEL SimpleName@@object @AT@ 4196 @LENGTH@ 6
---------DEL CastExpression@@(IIOPNamingHome)PortableRemoteObject.narrow(iiopObj,IIOPNamingHome.class) @AT@ 4205 @LENGTH@ 75
------------DEL SimpleType@@IIOPNamingHome @AT@ 4206 @LENGTH@ 14
------------DEL MethodInvocation@@PortableRemoteObject.narrow(iiopObj,IIOPNamingHome.class) @AT@ 4222 @LENGTH@ 58
---------------DEL SimpleName@@Name:PortableRemoteObject @AT@ 4222 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:narrow:[iiopObj, IIOPNamingHome.class] @AT@ 4243 @LENGTH@ 37
------------------DEL SimpleName@@iiopObj @AT@ 4250 @LENGTH@ 7
------------------DEL TypeLiteral@@IIOPNamingHome.class @AT@ 4259 @LENGTH@ 20
---DEL VariableDeclarationStatement@@final IIOPRemote result=object.create(); @AT@ 4290 @LENGTH@ 42
------DEL Modifier@@final @AT@ 4290 @LENGTH@ 5
------DEL SimpleType@@IIOPRemote @AT@ 4296 @LENGTH@ 10
------DEL VariableDeclarationFragment@@result=object.create() @AT@ 4307 @LENGTH@ 24
---------DEL SimpleName@@result @AT@ 4307 @LENGTH@ 6
---------DEL MethodInvocation@@object.create() @AT@ 4316 @LENGTH@ 15
------------DEL SimpleName@@Name:object @AT@ 4316 @LENGTH@ 6
------------DEL SimpleName@@MethodName:create:[] @AT@ 4323 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals("hello",result.hello()) @AT@ 4341 @LENGTH@ 45
------DEL MethodInvocation@@Assert.assertEquals("hello",result.hello()) @AT@ 4341 @LENGTH@ 44
---------DEL SimpleName@@Name:Assert @AT@ 4341 @LENGTH@ 6
---------DEL SimpleName@@MethodName:assertEquals:["hello", result.hello()] @AT@ 4348 @LENGTH@ 37
------------DEL StringLiteral@@"hello" @AT@ 4361 @LENGTH@ 7
------------DEL MethodInvocation@@result.hello() @AT@ 4370 @LENGTH@ 14
---------------DEL SimpleName@@Name:result @AT@ 4370 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:hello:[] @AT@ 4377 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testRequestNoParameter_Empty, Exception,  @TO@ public, void, MethodName:testRequestNoParameterEmpty, Exception,  @AT@ 3941 @LENGTH@ 290
---UPD SimpleName@@MethodName:testRequestNoParameter_Empty @TO@ MethodName:testRequestNoParameterEmpty @AT@ 3953 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1905 @LENGTH@ 210
---INS MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")) @AT@ 1905 @LENGTH@ 209
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")] @TO@ MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")) @AT@ 1905 @LENGTH@ 209
---------INS MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }")] @AT@ 1916 @LENGTH@ 197
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }") @AT@ 1916 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }"] @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }") @AT@ 1921 @LENGTH@ 192
---------------INS InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }" @TO@ SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }"] @AT@ 1930 @LENGTH@ 182
------------------INS StringLiteral@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }" @AT@ 1930 @LENGTH@ 91
------------------INS Operator@@+ @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }" @AT@ 2021 @LENGTH@ 1
------------------INS StringLiteral@@" \"deprecated\": \"false\", \"description\": \"Name of data format\" }" @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"description\": \"Name of data format\" }" @AT@ 2040 @LENGTH@ 72


UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(in)); @TO@ BufferedReader reader=new BufferedReader(new InputStreamReader(in,"UTF-8")); @AT@ 2221 @LENGTH@ 70
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(in)) @TO@ reader=new BufferedReader(new InputStreamReader(in,"UTF-8")) @AT@ 2236 @LENGTH@ 54
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(in)] @TO@ BufferedReader[new InputStreamReader(in,"UTF-8")] @AT@ 2245 @LENGTH@ 45
---------UPD ClassInstanceCreation@@InputStreamReader[in] @TO@ InputStreamReader[in, "UTF-8"] @AT@ 2264 @LENGTH@ 25
------------INS StringLiteral@@"UTF-8" @TO@ ClassInstanceCreation@@InputStreamReader[in] @AT@ 2431 @LENGTH@ 7


INS IfStatement@@if (length == 0) return buffers; @TO@ MethodDeclaration@@static, List<DiskRange>, MethodName:getStreamBuffers, DiskRangeList range, long offset, long length,  @AT@ 11854 @LENGTH@ 32
---INS InfixExpression@@length == 0 @TO@ IfStatement@@if (length == 0) return buffers; @AT@ 11858 @LENGTH@ 11
------INS SimpleName@@length @TO@ InfixExpression@@length == 0 @AT@ 11858 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@length == 0 @AT@ 11864 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@length == 0 @AT@ 11868 @LENGTH@ 1
---INS Block@@ThenBody:return buffers; @TO@ IfStatement@@if (length == 0) return buffers; @AT@ 11871 @LENGTH@ 15
------INS ReturnStatement@@SimpleName:buffers @TO@ Block@@ThenBody:return buffers; @AT@ 11871 @LENGTH@ 15
---------MOV SimpleName@@buffers @TO@ ReturnStatement@@SimpleName:buffers @AT@ 13304 @LENGTH@ 7


DEL VariableDeclarationStatement@@int colsRemaining=-1; @AT@ 4172 @LENGTH@ 23
---DEL PrimitiveType@@int @AT@ 4172 @LENGTH@ 3
---DEL VariableDeclarationFragment@@colsRemaining=-1 @AT@ 4176 @LENGTH@ 18
------DEL SimpleName@@colsRemaining @AT@ 4176 @LENGTH@ 13
------DEL PrefixExpression@@-1 @AT@ 4192 @LENGTH@ 2
---------DEL Operator@@- @AT@ 4192 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 4193 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestDefaultFileSystem,  @AT@ 2319 @LENGTH@ 174
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @AT@ 2319 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @AT@ 2326 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetOutputStreamInvalidPath @TO@ MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @AT@ 2331 @LENGTH@ 30
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @AT@ 2371 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @TO@ MethodDeclaration@@public, void, MethodName:testGetOutputStreamInvalidPath, ConfigurationException,  @AT@ 2408 @LENGTH@ 79
------INS MethodInvocation@@fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @TO@ ExpressionStatement@@MethodInvocation:fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @AT@ 2408 @LENGTH@ 78
---------INS SimpleName@@Name:fileSystem @TO@ MethodInvocation@@fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @AT@ 2408 @LENGTH@ 10
---------INS SimpleName@@MethodName:getOutputStream:[new File("this is/<certainly>\\an#invalid#*path!")] @TO@ MethodInvocation@@fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @AT@ 2419 @LENGTH@ 67
------------INS ClassInstanceCreation@@File["this is/<certainly>\\an#invalid#*path!"] @TO@ SimpleName@@MethodName:getOutputStream:[new File("this is/<certainly>\\an#invalid#*path!")] @AT@ 2435 @LENGTH@ 50
---------------INS New@@new @TO@ ClassInstanceCreation@@File["this is/<certainly>\\an#invalid#*path!"] @AT@ 2435 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["this is/<certainly>\\an#invalid#*path!"] @AT@ 2439 @LENGTH@ 4
---------------INS StringLiteral@@"this is/<certainly>\\an#invalid#*path!" @TO@ ClassInstanceCreation@@File["this is/<certainly>\\an#invalid#*path!"] @AT@ 2444 @LENGTH@ 40


UPD MethodDeclaration@@public, AuthorizationServerEndpointsConfigurer, MethodName:clientDetailsService, ClientDetailsService clientDetailsService,  @TO@ public, void, MethodName:setClientDetailsService, ClientDetailsService clientDetailsService,  @AT@ 8276 @LENGTH@ 181
---DEL SimpleType@@AuthorizationServerEndpointsConfigurer @AT@ 8283 @LENGTH@ 38
---UPD SimpleName@@MethodName:clientDetailsService @TO@ MethodName:setClientDetailsService @AT@ 8322 @LENGTH@ 20
---DEL ReturnStatement@@ThisExpression:this @AT@ 8442 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 8449 @LENGTH@ 4
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, AuthorizationServerEndpointsConfigurer, MethodName:clientDetailsService, ClientDetailsService clientDetailsService,  @AT@ 8708 @LENGTH@ 4


UPD IfStatement@@if (children.size() == 0) {  if (flushRequired && attributeGroups.isEmpty()) {    ParseUtils.requireNoContent(reader);  }} else {  Map<String,PersistentResourceXMLDescription> children=getChildrenMap();  if (childAlreadyRead || (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {    do {      PersistentResourceXMLDescription child=children.get(reader.getLocalName());      if (child != null) {        if (child.xmlWrapperElement != null) {          if (reader.getLocalName().equals(child.xmlWrapperElement)) {            if (reader.hasNext() && reader.nextTag() == END_ELEMENT) {              return;            }          } else {            throw ParseUtils.unexpectedElement(reader);          }          child.parse(reader,parentAddress,list);          while (reader.nextTag() != END_ELEMENT && !reader.getLocalName().equals(child.xmlWrapperElement)) {            child.parse(reader,parentAddress,list);          }        } else {          child.parse(reader,parentAddress,list);        }      } else {        throw ParseUtils.unexpectedElement(reader,children.keySet());      }    } while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT);  }} @TO@ if (children.size() == 0) {  if (flushRequired && attributeGroups.isEmpty()) {    ParseUtils.requireNoContent(reader);  }  if (childAlreadyRead) {    throw ParseUtils.unexpectedElement(reader);  }} else {  Map<String,PersistentResourceXMLDescription> children=getChildrenMap();  if (childAlreadyRead || (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {    do {      PersistentResourceXMLDescription child=children.get(reader.getLocalName());      if (child != null) {        if (child.xmlWrapperElement != null) {          if (reader.getLocalName().equals(child.xmlWrapperElement)) {            if (reader.hasNext() && reader.nextTag() == END_ELEMENT) {              return;            }          } else {            throw ParseUtils.unexpectedElement(reader);          }          child.parse(reader,parentAddress,list);          while (reader.nextTag() != END_ELEMENT && !reader.getLocalName().equals(child.xmlWrapperElement)) {            child.parse(reader,parentAddress,list);          }        } else {          child.parse(reader,parentAddress,list);        }      } else {        throw ParseUtils.unexpectedElement(reader,children.keySet());      }    } while (reader.hasNext() && reader.nextTag() != XMLStreamConstants.END_ELEMENT);  }} @AT@ 10371 @LENGTH@ 1620
---UPD Block@@ThenBody:{  if (flushRequired && attributeGroups.isEmpty()) {    ParseUtils.requireNoContent(reader);  }} @TO@ ThenBody:{  if (flushRequired && attributeGroups.isEmpty()) {    ParseUtils.requireNoContent(reader);  }  if (childAlreadyRead) {    throw ParseUtils.unexpectedElement(reader);  }} @AT@ 10397 @LENGTH@ 140
------INS IfStatement@@if (childAlreadyRead) {  throw ParseUtils.unexpectedElement(reader);} @TO@ Block@@ThenBody:{  if (flushRequired && attributeGroups.isEmpty()) {    ParseUtils.requireNoContent(reader);  }} @AT@ 10540 @LENGTH@ 97
---------INS SimpleName@@childAlreadyRead @TO@ IfStatement@@if (childAlreadyRead) {  throw ParseUtils.unexpectedElement(reader);} @AT@ 10544 @LENGTH@ 16
---------INS Block@@ThenBody:{  throw ParseUtils.unexpectedElement(reader);} @TO@ IfStatement@@if (childAlreadyRead) {  throw ParseUtils.unexpectedElement(reader);} @AT@ 10562 @LENGTH@ 75
------------INS ThrowStatement@@MethodInvocation:ParseUtils.unexpectedElement(reader) @TO@ Block@@ThenBody:{  throw ParseUtils.unexpectedElement(reader);} @AT@ 10580 @LENGTH@ 43
---------------INS MethodInvocation@@ParseUtils.unexpectedElement(reader) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.unexpectedElement(reader) @AT@ 10586 @LENGTH@ 36
------------------INS SimpleName@@Name:ParseUtils @TO@ MethodInvocation@@ParseUtils.unexpectedElement(reader) @AT@ 10586 @LENGTH@ 10
------------------INS SimpleName@@MethodName:unexpectedElement:[reader] @TO@ MethodInvocation@@ParseUtils.unexpectedElement(reader) @AT@ 10597 @LENGTH@ 25
---------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:unexpectedElement:[reader] @AT@ 10615 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2028 @LENGTH@ 119
---UPD MethodInvocation@@factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2035 @LENGTH@ 111
------UPD SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @TO@ MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", TEST_SERVER_1, props, new NoCallbackHandler()] @AT@ 2043 @LENGTH@ 103
---------DEL StringLiteral@@"test_server_1" @AT@ 2098 @LENGTH@ 15
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @AT@ 2098 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:uri=URI.create(uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString) @TO@ Assignment:uri=URI.create((uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString) @AT@ 2454 @LENGTH@ 103
---UPD Assignment@@uri=URI.create(uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString) @TO@ uri=URI.create((uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString) @AT@ 2454 @LENGTH@ 102
------UPD MethodInvocation@@URI.create(uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString) @TO@ URI.create((uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString) @AT@ 2460 @LENGTH@ 96
---------UPD SimpleName@@MethodName:create:[uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString] @TO@ MethodName:create:[(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString] @AT@ 2464 @LENGTH@ 92
------------INS InfixExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString @TO@ SimpleName@@MethodName:create:[uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString] @AT@ 2471 @LENGTH@ 102
---------------INS ParenthesizedExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) @TO@ InfixExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString @AT@ 2471 @LENGTH@ 82
------------------INS ConditionalExpression@@uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue @TO@ ParenthesizedExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) @AT@ 2472 @LENGTH@ 80
---------------------MOV MethodInvocation@@uriValue.contains("?") @TO@ ConditionalExpression@@uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue @AT@ 2471 @LENGTH@ 22
---------------------INS MethodInvocation@@uriValue.substring(0,uriValue.indexOf('?')) @TO@ ConditionalExpression@@uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue @AT@ 2497 @LENGTH@ 44
------------------------INS SimpleName@@Name:uriValue @TO@ MethodInvocation@@uriValue.substring(0,uriValue.indexOf('?')) @AT@ 2497 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:substring:[0, uriValue.indexOf('?')] @TO@ MethodInvocation@@uriValue.substring(0,uriValue.indexOf('?')) @AT@ 2506 @LENGTH@ 35
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, uriValue.indexOf('?')] @AT@ 2516 @LENGTH@ 1
---------------------------INS MethodInvocation@@uriValue.indexOf('?') @TO@ SimpleName@@MethodName:substring:[0, uriValue.indexOf('?')] @AT@ 2519 @LENGTH@ 21
------------------------------INS SimpleName@@Name:uriValue @TO@ MethodInvocation@@uriValue.indexOf('?') @AT@ 2519 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:indexOf:['?'] @TO@ MethodInvocation@@uriValue.indexOf('?') @AT@ 2528 @LENGTH@ 12
---------------------------------INS CharacterLiteral@@'?' @TO@ SimpleName@@MethodName:indexOf:['?'] @AT@ 2536 @LENGTH@ 3
---------------------INS SimpleName@@uriValue @TO@ ConditionalExpression@@uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue @AT@ 2544 @LENGTH@ 8
---------------MOV Operator@@+ @TO@ InfixExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString @AT@ 2535 @LENGTH@ 1
---------------MOV StringLiteral@@"?" @TO@ InfixExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString @AT@ 2538 @LENGTH@ 3
---------------MOV SimpleName@@queryString @TO@ InfixExpression@@(uriValue.contains("?") ? uriValue.substring(0,uriValue.indexOf('?')) : uriValue) + "?" + queryString @AT@ 2544 @LENGTH@ 11
------------DEL ConditionalExpression@@uriValue.contains("?") ? uriValue + "&" + queryString : uriValue + "?" + queryString @AT@ 2471 @LENGTH@ 84
---------------DEL InfixExpression@@uriValue + "&" + queryString @AT@ 2496 @LENGTH@ 28
------------------DEL SimpleName@@uriValue @AT@ 2496 @LENGTH@ 8
------------------DEL Operator@@+ @AT@ 2504 @LENGTH@ 1
------------------DEL StringLiteral@@"&" @AT@ 2507 @LENGTH@ 3
------------------DEL SimpleName@@queryString @AT@ 2513 @LENGTH@ 11
---------------DEL InfixExpression@@uriValue + "?" + queryString @AT@ 2527 @LENGTH@ 28
------------------DEL SimpleName@@uriValue @AT@ 2527 @LENGTH@ 8


UPD MethodDeclaration@@protected, void, MethodName:renameFile, Path path,  @TO@ protected, Path, MethodName:renameFile, Path path,  @AT@ 7658 @LENGTH@ 1155
---DEL PrimitiveType@@void @AT@ 7668 @LENGTH@ 4
---INS SimpleType@@Path @TO@ MethodDeclaration@@protected, void, MethodName:renameFile, Path path,  @AT@ 7668 @LENGTH@ 4
---UPD IfStatement@@if (!StringUtils.hasText(prefix) && !StringUtils.hasText(suffix)) {  return;} @TO@ if (!StringUtils.hasText(prefix) && !StringUtils.hasText(suffix)) {  return path;} @AT@ 7806 @LENGTH@ 82
------UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  return path;} @AT@ 7872 @LENGTH@ 16
---------UPD ReturnStatement@@ @TO@ SimpleName:path @AT@ 7877 @LENGTH@ 7
------------INS SimpleName@@path @TO@ ReturnStatement@@ @AT@ 7884 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:toPath @TO@ MethodDeclaration@@protected, void, MethodName:renameFile, Path path,  @AT@ 8818 @LENGTH@ 14
------INS SimpleName@@toPath @TO@ ReturnStatement@@SimpleName:toPath @AT@ 8825 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new TabularType("listComponents","Lists all the components",ct,new String[]{"name","description","label","status","type","groupId","artifactId","version"}) @TO@ ClassInstanceCreation:new TabularType("listComponents","Lists all the components",ct,new String[]{"name"}) @AT@ 4496 @LENGTH@ 173
---UPD ClassInstanceCreation@@TabularType["listComponents", "Lists all the components", ct, new String[]{"name","description","label","status","type","groupId","artifactId","version"}] @TO@ TabularType["listComponents", "Lists all the components", ct, new String[]{"name"}] @AT@ 4503 @LENGTH@ 165
------UPD ArrayCreation@@new String[]{"name","description","label","status","type","groupId","artifactId","version"} @TO@ new String[]{"name"} @AT@ 4569 @LENGTH@ 98
---------UPD ArrayInitializer@@{"name","description","label","status","type","groupId","artifactId","version"} @TO@ {"name"} @AT@ 4581 @LENGTH@ 86
------------DEL StringLiteral@@"description" @AT@ 4590 @LENGTH@ 13
------------DEL StringLiteral@@"label" @AT@ 4605 @LENGTH@ 7
------------DEL StringLiteral@@"status" @AT@ 4614 @LENGTH@ 8
------------DEL StringLiteral@@"type" @AT@ 4624 @LENGTH@ 6
------------DEL StringLiteral@@"groupId" @AT@ 4632 @LENGTH@ 9
------------DEL StringLiteral@@"artifactId" @AT@ 4643 @LENGTH@ 12
------------DEL StringLiteral@@"version" @AT@ 4657 @LENGTH@ 9


UPD Block@@ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  int pos=directBuf.position(), startPos=pos, endPos=pos + len;  try {    while (pos < endPos) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      if (count == 0) {        throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);      }      if (directBuf.position() != pos) {        RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());      }      pos+=count;      if (pos > endPos) {        throw new AssertionError("Position " + pos + " length "+ len+ "/"+ endPos+ " after reading "+ count);      }      directBuf.position(pos);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(0);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @TO@ ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  int pos=directBuf.position(), startPos=pos, endPos=pos + len;  try {    while (pos < endPos) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      if (count == 0) {        throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);      }      if (directBuf.position() != pos) {        RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());      }      pos+=count;      if (pos > endPos) {        throw new AssertionError("Position " + pos + " length "+ len+ "/"+ endPos+ " after reading "+ count);      }      directBuf.position(pos);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(startPos);  directBuf.limit(startPos + len);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @AT@ 9863 @LENGTH@ 1454
---UPD ExpressionStatement@@MethodInvocation:directBuf.position(0) @TO@ MethodInvocation:directBuf.position(startPos) @AT@ 11206 @LENGTH@ 22
------UPD MethodInvocation@@directBuf.position(0) @TO@ directBuf.position(startPos) @AT@ 11206 @LENGTH@ 21
---------UPD SimpleName@@MethodName:position:[0] @TO@ MethodName:position:[startPos] @AT@ 11216 @LENGTH@ 11
------------INS SimpleName@@startPos @TO@ SimpleName@@MethodName:position:[0] @AT@ 11225 @LENGTH@ 8
------------DEL NumberLiteral@@0 @AT@ 11225 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:directBuf.limit(startPos + len) @TO@ Block@@ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  int pos=directBuf.position(), startPos=pos, endPos=pos + len;  try {    while (pos < endPos) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      if (count == 0) {        throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);      }      if (directBuf.position() != pos) {        RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());      }      pos+=count;      if (pos > endPos) {        throw new AssertionError("Position " + pos + " length "+ len+ "/"+ endPos+ " after reading "+ count);      }      directBuf.position(pos);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(0);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @AT@ 11244 @LENGTH@ 32
------INS MethodInvocation@@directBuf.limit(startPos + len) @TO@ ExpressionStatement@@MethodInvocation:directBuf.limit(startPos + len) @AT@ 11244 @LENGTH@ 31
---------INS SimpleName@@Name:directBuf @TO@ MethodInvocation@@directBuf.limit(startPos + len) @AT@ 11244 @LENGTH@ 9
---------INS SimpleName@@MethodName:limit:[startPos + len] @TO@ MethodInvocation@@directBuf.limit(startPos + len) @AT@ 11254 @LENGTH@ 21
------------INS InfixExpression@@startPos + len @TO@ SimpleName@@MethodName:limit:[startPos + len] @AT@ 11260 @LENGTH@ 14
---------------INS SimpleName@@startPos @TO@ InfixExpression@@startPos + len @AT@ 11260 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@startPos + len @AT@ 11268 @LENGTH@ 1
---------------INS SimpleName@@len @TO@ InfixExpression@@startPos + len @AT@ 11271 @LENGTH@ 3


UPD TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "languages: " : "language: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelLanguage",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @TO@ try {  OutputStream os=buildContext.newFileOutputStream(outFile);  properties.store(os,"Generated by camel-package-maven-plugin");  os.close();  log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "languages: " : "language: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelLanguage",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 11854 @LENGTH@ 663
---DEL TryStatement@@try (OutputStream os=buildContext.newFileOutputStream(outFile)){  properties.store(os,"Generated by camel-package-maven-plugin");}  @AT@ 11876 @LENGTH@ 169
------DEL VariableDeclarationExpression@@OutputStream os=buildContext.newFileOutputStream(outFile) @AT@ 11880 @LENGTH@ 59
---------DEL SimpleType@@OutputStream @AT@ 11880 @LENGTH@ 12
---INS VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "languages: " : "language: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelLanguage",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 11915 @LENGTH@ 60
------MOV VariableDeclarationFragment@@os=buildContext.newFileOutputStream(outFile) @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 11893 @LENGTH@ 46
------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@OutputStream os=buildContext.newFileOutputStream(outFile); @AT@ 11915 @LENGTH@ 12
---MOV ExpressionStatement@@MethodInvocation:properties.store(os,"Generated by camel-package-maven-plugin") @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "languages: " : "language: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelLanguage",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 11963 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:os.close() @TO@ TryStatement@@try {  try (OutputStream os=buildContext.newFileOutputStream(outFile)){    properties.store(os,"Generated by camel-package-maven-plugin");  }   log.info("Generated " + outFile + " containing "+ count+ " Camel "+ (count > 1 ? "languages: " : "language: ")+ names);  if (projectHelper != null) {    projectHelper.attachArtifact(project,"properties","camelLanguage",outFile);  }} catch (IOException e) {  throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: "+ e,e);} @AT@ 12073 @LENGTH@ 11
------INS MethodInvocation@@os.close() @TO@ ExpressionStatement@@MethodInvocation:os.close() @AT@ 12073 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.close() @AT@ 12073 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@os.close() @AT@ 12076 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:mockMvc.perform(get("/batch/configurations").param("page","0").param("size","1").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(1))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2))).andExpect(jsonPath("$.content[1][*].launchable",contains(false))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00"))).andExpect(jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00"))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount()))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo2'].value[1]",contains(0))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))) @TO@ MethodInvocation:mockMvc.perform(get("/batch/configurations").param("page","0").param("size","1").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(1))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2))).andExpect(jsonPath("$.content[1][*].launchable",contains(false))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z"))).andExpect(jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z"))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount()))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo2'].value[1]",contains(0))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))) @AT@ 5811 @LENGTH@ 1578
---UPD MethodInvocation@@mockMvc.perform(get("/batch/configurations").param("page","0").param("size","1").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(1))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2))).andExpect(jsonPath("$.content[1][*].launchable",contains(false))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00"))).andExpect(jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00"))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount()))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo2'].value[1]",contains(0))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))) @TO@ mockMvc.perform(get("/batch/configurations").param("page","0").param("size","1").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(1))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2))).andExpect(jsonPath("$.content[1][*].launchable",contains(false))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z"))).andExpect(jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z"))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount()))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo2'].value[1]",contains(0))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))) @AT@ 5811 @LENGTH@ 1577
------UPD MethodInvocation@@MethodName:andExpect:[jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00"))] @TO@ MethodName:andExpect:[jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z"))] @AT@ 5811 @LENGTH@ 726
---------UPD MethodInvocation@@jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00")) @TO@ jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z")) @AT@ 6458 @LENGTH@ 78
------------UPD SimpleName@@MethodName:jsonPath:["$.content[1][*].endTime", contains("1969-12-31T18:00:02.000-06:00")] @TO@ MethodName:jsonPath:["$.content[1][*].endTime", contains("1970-01-01T00:00:02.000Z")] @AT@ 6458 @LENGTH@ 78
---------------UPD MethodInvocation@@contains("1969-12-31T18:00:02.000-06:00") @TO@ contains("1970-01-01T00:00:02.000Z") @AT@ 6494 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:02.000-06:00"] @TO@ MethodName:contains:["1970-01-01T00:00:02.000Z"] @AT@ 6494 @LENGTH@ 41
---------------------UPD StringLiteral@@"1969-12-31T18:00:02.000-06:00" @TO@ "1970-01-01T00:00:02.000Z" @AT@ 6503 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:02.000-06:00"] @TO@ MethodName:contains:["1970-01-01T00:00:02.000Z"] @AT@ 6494 @LENGTH@ 41
---------------------UPD StringLiteral@@"1969-12-31T18:00:02.000-06:00" @TO@ "1970-01-01T00:00:02.000Z" @AT@ 6503 @LENGTH@ 31
------UPD MethodInvocation@@MethodName:andExpect:[jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00"))] @TO@ MethodName:andExpect:[jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z"))] @AT@ 5811 @LENGTH@ 631
---------UPD MethodInvocation@@jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00")) @TO@ jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z")) @AT@ 6361 @LENGTH@ 80
------------UPD SimpleName@@MethodName:jsonPath:["$.content[1][*].startTime", contains("1969-12-31T18:00:01.000-06:00")] @TO@ MethodName:jsonPath:["$.content[1][*].startTime", contains("1970-01-01T00:00:01.000Z")] @AT@ 6361 @LENGTH@ 80
---------------UPD MethodInvocation@@contains("1969-12-31T18:00:01.000-06:00") @TO@ contains("1970-01-01T00:00:01.000Z") @AT@ 6399 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:01.000-06:00"] @TO@ MethodName:contains:["1970-01-01T00:00:01.000Z"] @AT@ 6399 @LENGTH@ 41
---------------------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 6408 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:01.000-06:00"] @TO@ MethodName:contains:["1970-01-01T00:00:01.000Z"] @AT@ 6399 @LENGTH@ 41
---------------------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 6408 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:resultEndpoint.expectedMessageCount(2) @TO@ MethodInvocation:resultEndpoint.expectedMinimumMessageCount(2) @AT@ 1227 @LENGTH@ 39
---UPD MethodInvocation@@resultEndpoint.expectedMessageCount(2) @TO@ resultEndpoint.expectedMinimumMessageCount(2) @AT@ 1227 @LENGTH@ 38
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 1242 @LENGTH@ 23


DEL FieldDeclaration@@private, static, final, String, [NOT_AUTHORIZED_REVOKATION="The authorization has been revoked. Reason: Error validating access token: 123456789 has not authorized application 987654321"] @AT@ 2001 @LENGTH@ 184
---DEL Modifier@@private @AT@ 2001 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2009 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2016 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 2022 @LENGTH@ 6
---DEL VariableDeclarationFragment@@NOT_AUTHORIZED_REVOKATION="The authorization has been revoked. Reason: Error validating access token: 123456789 has not authorized application 987654321" @AT@ 2029 @LENGTH@ 155
------DEL SimpleName@@NOT_AUTHORIZED_REVOKATION @AT@ 2029 @LENGTH@ 25
------DEL StringLiteral@@"The authorization has been revoked. Reason: Error validating access token: 123456789 has not authorized application 987654321" @AT@ 2057 @LENGTH@ 127


UPD MethodDeclaration@@protected, Path, MethodName:gavToPath, String gav, String separator,  @TO@ protected, Path, MethodName:gavToPath, String gav,  @AT@ 410 @LENGTH@ 1044
---DEL SingleVariableDeclaration@@String separator @AT@ 447 @LENGTH@ 16
------DEL SimpleType@@String @AT@ 447 @LENGTH@ 6
------DEL SimpleName@@separator @AT@ 454 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:path.append(group.replaceAll("\\.",separator)) @TO@ MethodInvocation:path.append(group.replaceAll("\\.",SEPARATOR)) @AT@ 934 @LENGTH@ 52
------UPD MethodInvocation@@path.append(group.replaceAll("\\.",separator)) @TO@ path.append(group.replaceAll("\\.",SEPARATOR)) @AT@ 934 @LENGTH@ 51
---------UPD SimpleName@@MethodName:append:[group.replaceAll("\\.",separator)] @TO@ MethodName:append:[group.replaceAll("\\.",SEPARATOR)] @AT@ 939 @LENGTH@ 46
------------UPD MethodInvocation@@group.replaceAll("\\.",separator) @TO@ group.replaceAll("\\.",SEPARATOR) @AT@ 947 @LENGTH@ 36
---------------UPD SimpleName@@MethodName:replaceAll:["\\.", separator] @TO@ MethodName:replaceAll:["\\.", SEPARATOR] @AT@ 953 @LENGTH@ 30
------------------UPD SimpleName@@separator @TO@ SEPARATOR @AT@ 972 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:path.append(separator) @TO@ MethodInvocation:path.append(SEPARATOR) @AT@ 995 @LENGTH@ 25
------UPD MethodInvocation@@path.append(separator) @TO@ path.append(SEPARATOR) @AT@ 995 @LENGTH@ 24
---------UPD SimpleName@@MethodName:append:[separator] @TO@ MethodName:append:[SEPARATOR] @AT@ 1000 @LENGTH@ 19
------------UPD SimpleName@@separator @TO@ SEPARATOR @AT@ 1008 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:path.append(separator) @TO@ MethodInvocation:path.append(SEPARATOR) @AT@ 1062 @LENGTH@ 25
------UPD MethodInvocation@@path.append(separator) @TO@ path.append(SEPARATOR) @AT@ 1062 @LENGTH@ 24
---------UPD SimpleName@@MethodName:append:[separator] @TO@ MethodName:append:[SEPARATOR] @AT@ 1067 @LENGTH@ 19
------------UPD SimpleName@@separator @TO@ SEPARATOR @AT@ 1075 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:path.append(separator) @TO@ MethodInvocation:path.append(SEPARATOR) @AT@ 1128 @LENGTH@ 25
------UPD MethodInvocation@@path.append(separator) @TO@ path.append(SEPARATOR) @AT@ 1128 @LENGTH@ 24
---------UPD SimpleName@@MethodName:append:[separator] @TO@ MethodName:append:[SEPARATOR] @AT@ 1133 @LENGTH@ 19
------------UPD SimpleName@@separator @TO@ SEPARATOR @AT@ 1141 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @TO@ MethodInvocation:result.expectedMinimumMessageCount(1) @AT@ 1834 @LENGTH@ 31
---UPD MethodInvocation@@result.expectedMessageCount(1) @TO@ result.expectedMinimumMessageCount(1) @AT@ 1834 @LENGTH@ 30
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1841 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" },")) @TO@ MethodInvocation:assertTrue(json.contains("\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\"")) @AT@ 2050 @LENGTH@ 103
---UPD MethodInvocation@@assertTrue(json.contains("\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" },")) @TO@ assertTrue(json.contains("\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\"")) @AT@ 2050 @LENGTH@ 102
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" },")] @TO@ MethodName:assertTrue:[json.contains("\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\"")] @AT@ 2050 @LENGTH@ 102
---------UPD MethodInvocation@@json.contains("\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" },") @TO@ json.contains("\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\"") @AT@ 2061 @LENGTH@ 90
------------UPD SimpleName@@MethodName:contains:["\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" },"] @TO@ MethodName:contains:["\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\""] @AT@ 2066 @LENGTH@ 85
---------------UPD StringLiteral@@"\"sessionSupport\": { \"type\": \"boolean\", \"javaType\": \"boolean\" }," @TO@ "\"sessionSupport\": { \"kind\": \"parameter\", \"type\": \"boolean\", \"javaType\": \"boolean\"" @AT@ 2075 @LENGTH@ 75


UPD VariableDeclarationStatement@@Map<String,String> map=new HashMap<>(strings.length / 2); @TO@ Map<String,String> map=new HashMap<String,String>(strings.length / 2); @AT@ 1457 @LENGTH@ 60
---UPD VariableDeclarationFragment@@map=new HashMap<>(strings.length / 2) @TO@ map=new HashMap<String,String>(strings.length / 2) @AT@ 1477 @LENGTH@ 39
------UPD ClassInstanceCreation@@HashMap<>[strings.length / 2] @TO@ HashMap<String,String>[strings.length / 2] @AT@ 1483 @LENGTH@ 33
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,String> @AT@ 1487 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 1491 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 1499 @LENGTH@ 6


UPD VariableDeclarationStatement@@LinkedList<String> wordsList=new LinkedList<>(splittedText); @TO@ LinkedList<String> wordsList=new LinkedList<String>(splittedText); @AT@ 2134 @LENGTH@ 62
---UPD VariableDeclarationFragment@@wordsList=new LinkedList<>(splittedText) @TO@ wordsList=new LinkedList<String>(splittedText) @AT@ 2153 @LENGTH@ 42
------UPD ClassInstanceCreation@@LinkedList<>[splittedText] @TO@ LinkedList<String>[splittedText] @AT@ 2165 @LENGTH@ 30
---------UPD ParameterizedType@@LinkedList<> @TO@ LinkedList<String> @AT@ 2169 @LENGTH@ 12
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedList<> @AT@ 2180 @LENGTH@ 6


INS ExpressionStatement@@Assignment:tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @TO@ MethodDeclaration@@protected, ContainerExecutionResult, MethodName:callInternal, Exception,  @AT@ 9570 @LENGTH@ 356
---INS Assignment@@tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @TO@ ExpressionStatement@@Assignment:tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @AT@ 9570 @LENGTH@ 355
------INS SimpleName@@tezChild @TO@ Assignment@@tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @AT@ 9570 @LENGTH@ 8
------INS Operator@@= @TO@ Assignment@@tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @AT@ 9578 @LENGTH@ 1
------MOV ClassInstanceCreation@@TezChild[conf, request.getAmHost(), request.getAmPort(), request.getContainerIdString(), request.getTokenIdentifier(), request.getAppAttemptNumber(), workingDir, localDirs, envMap, objectRegistry, pid, executionContext, credentials, memoryAvailable, request.getUser(), null] @TO@ Assignment@@tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @AT@ 9592 @LENGTH@ 334


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 1186 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 1186 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1186 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 1206 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 1211 @LENGTH@ 11


UPD IfStatement@@if (0 == colsRemaining) {  ColumnVectorProducer.this.decodeBatch(targetBatch,downstreamConsumer);  returnProcessed(targetBatch.columnData);} @TO@ if (0 == targetBatch.colsRemaining) {  ColumnVectorProducer.this.decodeBatch(targetBatch,downstreamConsumer);  returnProcessed(targetBatch.columnData);} @AT@ 5012 @LENGTH@ 225
---UPD InfixExpression@@0 == colsRemaining @TO@ 0 == targetBatch.colsRemaining @AT@ 5016 @LENGTH@ 18
------INS QualifiedName@@targetBatch.colsRemaining @TO@ InfixExpression@@0 == colsRemaining @AT@ 4991 @LENGTH@ 25
---------INS SimpleName@@targetBatch @TO@ QualifiedName@@targetBatch.colsRemaining @AT@ 4991 @LENGTH@ 11
---------INS SimpleName@@colsRemaining @TO@ QualifiedName@@targetBatch.colsRemaining @AT@ 5003 @LENGTH@ 13
------DEL SimpleName@@colsRemaining @AT@ 5021 @LENGTH@ 13


UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 1766 @LENGTH@ 12
---UPD BooleanLiteral@@true @TO@ false @AT@ 1773 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.collectionFactory=new InstantiateFactory<C>(collectionClazz,new Class[]{Integer.TYPE},new Object[]{new Integer(initialCollectionCapacity)}) @TO@ Assignment:this.collectionFactory=new InstantiateFactory<C>(collectionClazz,new Class[]{Integer.TYPE},new Object[]{Integer.valueOf(initialCollectionCapacity)}) @AT@ 4541 @LENGTH@ 171
---UPD Assignment@@this.collectionFactory=new InstantiateFactory<C>(collectionClazz,new Class[]{Integer.TYPE},new Object[]{new Integer(initialCollectionCapacity)}) @TO@ this.collectionFactory=new InstantiateFactory<C>(collectionClazz,new Class[]{Integer.TYPE},new Object[]{Integer.valueOf(initialCollectionCapacity)}) @AT@ 4541 @LENGTH@ 170
------UPD ClassInstanceCreation@@InstantiateFactory<C>[collectionClazz, new Class[]{Integer.TYPE}, new Object[]{new Integer(initialCollectionCapacity)}] @TO@ InstantiateFactory<C>[collectionClazz, new Class[]{Integer.TYPE}, new Object[]{Integer.valueOf(initialCollectionCapacity)}] @AT@ 4566 @LENGTH@ 145
---------UPD ArrayCreation@@new Object[]{new Integer(initialCollectionCapacity)} @TO@ new Object[]{Integer.valueOf(initialCollectionCapacity)} @AT@ 4655 @LENGTH@ 55
------------UPD ArrayInitializer@@{new Integer(initialCollectionCapacity)} @TO@ {Integer.valueOf(initialCollectionCapacity)} @AT@ 4668 @LENGTH@ 42
---------------INS MethodInvocation@@Integer.valueOf(initialCollectionCapacity) @TO@ ArrayInitializer@@{new Integer(initialCollectionCapacity)} @AT@ 4670 @LENGTH@ 42
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(initialCollectionCapacity) @AT@ 4670 @LENGTH@ 7
------------------INS SimpleName@@MethodName:valueOf:[initialCollectionCapacity] @TO@ MethodInvocation@@Integer.valueOf(initialCollectionCapacity) @AT@ 4678 @LENGTH@ 34
---------------------INS SimpleName@@initialCollectionCapacity @TO@ SimpleName@@MethodName:valueOf:[initialCollectionCapacity] @AT@ 4686 @LENGTH@ 25
---------------DEL ClassInstanceCreation@@Integer[initialCollectionCapacity] @AT@ 4670 @LENGTH@ 38
------------------DEL New@@new @AT@ 4670 @LENGTH@ 3
------------------DEL SimpleType@@Integer @AT@ 4674 @LENGTH@ 7
------------------DEL SimpleName@@initialCollectionCapacity @AT@ 4682 @LENGTH@ 25


UPD VariableDeclarationStatement@@ExpiringOAuth2RefreshToken refreshToken=new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration()); @TO@ OAuth2RefreshToken refreshToken=createRefreshToken(encodedRefreshToken); @AT@ 4193 @LENGTH@ 153
---UPD SimpleType@@ExpiringOAuth2RefreshToken @TO@ OAuth2RefreshToken @AT@ 4193 @LENGTH@ 26
---UPD VariableDeclarationFragment@@refreshToken=new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration()) @TO@ refreshToken=createRefreshToken(encodedRefreshToken) @AT@ 4220 @LENGTH@ 125
------INS MethodInvocation@@createRefreshToken(encodedRefreshToken) @TO@ VariableDeclarationFragment@@refreshToken=new DefaultExpiringOAuth2RefreshToken(encodedRefreshToken.getValue(),encodedRefreshToken.getExpiration()) @AT@ 4226 @LENGTH@ 39
---------INS SimpleName@@MethodName:createRefreshToken:[encodedRefreshToken] @TO@ MethodInvocation@@createRefreshToken(encodedRefreshToken) @AT@ 4226 @LENGTH@ 39
------------INS SimpleName@@encodedRefreshToken @TO@ SimpleName@@MethodName:createRefreshToken:[encodedRefreshToken] @AT@ 4245 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @TO@ TypeDeclaration@@[public]HttpEndpointURLTest, CamelTestSupport @AT@ 3589 @LENGTH@ 379
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3589 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3596 @LENGTH@ 4
---INS SimpleName@@MethodName:testRawWithUnsafeCharacters @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3601 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3638 @LENGTH@ 9
---INS VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class); @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3658 @LENGTH@ 170
------INS SimpleType@@HttpEndpoint @TO@ VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class); @AT@ 3658 @LENGTH@ 12
------INS VariableDeclarationFragment@@http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @TO@ VariableDeclarationStatement@@HttpEndpoint http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class); @AT@ 3671 @LENGTH@ 156
---------INS SimpleName@@http1 @TO@ VariableDeclarationFragment@@http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @AT@ 3671 @LENGTH@ 5
---------INS MethodInvocation@@context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @TO@ VariableDeclarationFragment@@http1=context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @AT@ 3679 @LENGTH@ 148
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @AT@ 3679 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)", HttpEndpoint.class] @TO@ MethodInvocation@@context.getEndpoint("http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)",HttpEndpoint.class) @AT@ 3687 @LENGTH@ 140
---------------INS StringLiteral@@"http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)" @TO@ SimpleName@@MethodName:getEndpoint:["http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)", HttpEndpoint.class] @AT@ 3699 @LENGTH@ 107
---------------INS TypeLiteral@@HttpEndpoint.class @TO@ SimpleName@@MethodName:getEndpoint:["http4://www.google.com?authenticationPreemptive=true&authPassword=RAW(foo%bar)&authUsername=RAW(username)", HttpEndpoint.class] @AT@ 3808 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertTrue("The password is not loggged",URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0) @TO@ MethodDeclaration@@public, void, MethodName:testRawWithUnsafeCharacters, Exception,  @AT@ 3837 @LENGTH@ 125
------INS MethodInvocation@@assertTrue("The password is not loggged",URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("The password is not loggged",URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0) @AT@ 3837 @LENGTH@ 124
---------INS SimpleName@@MethodName:assertTrue:["The password is not loggged", URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0] @TO@ MethodInvocation@@assertTrue("The password is not loggged",URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0) @AT@ 3837 @LENGTH@ 124
------------INS StringLiteral@@"The password is not loggged" @TO@ SimpleName@@MethodName:assertTrue:["The password is not loggged", URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0] @AT@ 3848 @LENGTH@ 29
------------INS InfixExpression@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0 @TO@ SimpleName@@MethodName:assertTrue:["The password is not loggged", URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0] @AT@ 3879 @LENGTH@ 81
---------------INS MethodInvocation@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") @TO@ InfixExpression@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0 @AT@ 3879 @LENGTH@ 77
------------------INS MethodInvocation@@MethodName:sanitizeUri:[http1.getEndpointUri()] @TO@ MethodInvocation@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") @AT@ 3879 @LENGTH@ 46
---------------------INS MethodInvocation@@http1.getEndpointUri() @TO@ MethodInvocation@@MethodName:sanitizeUri:[http1.getEndpointUri()] @AT@ 3902 @LENGTH@ 22
------------------------INS SimpleName@@Name:http1 @TO@ MethodInvocation@@http1.getEndpointUri() @AT@ 3902 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@http1.getEndpointUri() @AT@ 3908 @LENGTH@ 16
------------------INS SimpleName@@Name:URISupport @TO@ MethodInvocation@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") @AT@ 3879 @LENGTH@ 10
------------------INS SimpleName@@MethodName:indexOf:["authPassword=xxxxxx"] @TO@ MethodInvocation@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") @AT@ 3926 @LENGTH@ 30
---------------------INS StringLiteral@@"authPassword=xxxxxx" @TO@ SimpleName@@MethodName:indexOf:["authPassword=xxxxxx"] @AT@ 3934 @LENGTH@ 21
---------------INS Operator@@> @TO@ InfixExpression@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0 @AT@ 3956 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@URISupport.sanitizeUri(http1.getEndpointUri()).indexOf("authPassword=xxxxxx") > 0 @AT@ 3959 @LENGTH@ 1


UPD IfStatement@@if (nb == 0 && numOfReadBytes.get() > 0) {  return -1;} @TO@ if (nb == 0 && numOfReadMessages.get() > 0) {  return -1;} @AT@ 2976 @LENGTH@ 167
---UPD InfixExpression@@nb == 0 && numOfReadBytes.get() > 0 @TO@ nb == 0 && numOfReadMessages.get() > 0 @AT@ 2980 @LENGTH@ 35
------UPD InfixExpression@@numOfReadBytes.get() > 0 @TO@ numOfReadMessages.get() > 0 @AT@ 2991 @LENGTH@ 24
---------UPD MethodInvocation@@numOfReadBytes.get() @TO@ numOfReadMessages.get() @AT@ 2991 @LENGTH@ 20
------------UPD SimpleName@@Name:numOfReadBytes @TO@ Name:numOfReadMessages @AT@ 2991 @LENGTH@ 14


INS IfStatement@@if (llapIo == null) {  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @TO@ MethodDeclaration@@public, static, InputFormat<WritableComparable,Writable>, MethodName:wrapForLlap, InputFormat<WritableComparable,Writable> inputFormat, Configuration conf,  @AT@ 7423 @LENGTH@ 117
---INS InfixExpression@@llapIo == null @TO@ IfStatement@@if (llapIo == null) {  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @AT@ 7427 @LENGTH@ 14
------INS SimpleName@@llapIo @TO@ InfixExpression@@llapIo == null @AT@ 7427 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@llapIo == null @AT@ 7433 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@llapIo == null @AT@ 7437 @LENGTH@ 4
---INS Block@@ThenBody:{  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @TO@ IfStatement@@if (llapIo == null) {  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @AT@ 7443 @LENGTH@ 97
------INS ExpressionStatement@@MethodInvocation:LOG.info("Not using LLAP because IO is not initialized") @TO@ Block@@ThenBody:{  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @AT@ 7451 @LENGTH@ 57
---------INS MethodInvocation@@LOG.info("Not using LLAP because IO is not initialized") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Not using LLAP because IO is not initialized") @AT@ 7451 @LENGTH@ 56
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Not using LLAP because IO is not initialized") @AT@ 7451 @LENGTH@ 3
------------INS SimpleName@@MethodName:info:["Not using LLAP because IO is not initialized"] @TO@ MethodInvocation@@LOG.info("Not using LLAP because IO is not initialized") @AT@ 7455 @LENGTH@ 52
---------------INS StringLiteral@@"Not using LLAP because IO is not initialized" @TO@ SimpleName@@MethodName:info:["Not using LLAP because IO is not initialized"] @AT@ 7460 @LENGTH@ 46
------INS ReturnStatement@@SimpleName:inputFormat @TO@ Block@@ThenBody:{  LOG.info("Not using LLAP because IO is not initialized");  return inputFormat;} @AT@ 7515 @LENGTH@ 19
---------INS SimpleName@@inputFormat @TO@ ReturnStatement@@SimpleName:inputFormat @AT@ 7522 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:testRequestNoParameter_Null, Exception,  @TO@ public, void, MethodName:testRequestNoParameterNull, Exception,  @AT@ 3655 @LENGTH@ 270
---UPD SimpleName@@MethodName:testRequestNoParameter_Null @TO@ MethodName:testRequestNoParameterNull @AT@ 3667 @LENGTH@ 27


INS FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @TO@ TypeDeclaration@@[public, abstract]RepositoryResolver,  @AT@ 434 @LENGTH@ 46
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @AT@ 434 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @AT@ 444 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @AT@ 451 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @AT@ 457 @LENGTH@ 6
---INS VariableDeclarationFragment@@SEPARATOR="/" @TO@ FieldDeclaration@@protected, static, final, String, [SEPARATOR="/"] @AT@ 464 @LENGTH@ 15
------INS SimpleName@@SEPARATOR @TO@ VariableDeclarationFragment@@SEPARATOR="/" @AT@ 464 @LENGTH@ 9
------INS StringLiteral@@"/" @TO@ VariableDeclarationFragment@@SEPARATOR="/" @AT@ 476 @LENGTH@ 3


INS IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @TO@ MethodDeclaration@@public, HttpResponse, MethodName:toNettyResponse, Message message, NettyHttpConfiguration configuration, Exception,  @AT@ 18617 @LENGTH@ 139
---INS InfixExpression@@connection == null @TO@ IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18621 @LENGTH@ 18
------INS SimpleName@@connection @TO@ InfixExpression@@connection == null @AT@ 18621 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@connection == null @AT@ 18631 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@connection == null @AT@ 18635 @LENGTH@ 4
---INS Block@@ThenBody:{  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @TO@ IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18641 @LENGTH@ 115
------INS ExpressionStatement@@Assignment:connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ Block@@ThenBody:{  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18655 @LENGTH@ 91
---------INS Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ ExpressionStatement@@Assignment:connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18655 @LENGTH@ 90
------------INS SimpleName@@connection @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18655 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18665 @LENGTH@ 1
------------INS MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18668 @LENGTH@ 77
---------------INS MethodInvocation@@MethodName:getExchange:[] @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18668 @LENGTH@ 21
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18668 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18690 @LENGTH@ 55
------------------INS QualifiedName@@HttpHeaders.Names.CONNECTION @TO@ SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @AT@ 18702 @LENGTH@ 28
---------------------INS QualifiedName@@HttpHeaders.Names @TO@ QualifiedName@@HttpHeaders.Names.CONNECTION @AT@ 18702 @LENGTH@ 17
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.Names @AT@ 18702 @LENGTH@ 11
------------------------INS SimpleName@@Names @TO@ QualifiedName@@HttpHeaders.Names @AT@ 18714 @LENGTH@ 5
---------------------INS SimpleName@@CONNECTION @TO@ QualifiedName@@HttpHeaders.Names.CONNECTION @AT@ 18720 @LENGTH@ 10
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @AT@ 18732 @LENGTH@ 12


UPD IfStatement@@if (server.isRegistered(name)) {  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} else {  return null;} @TO@ if (server != null && server.isRegistered(name)) {  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} else {  return null;} @AT@ 10227 @LENGTH@ 178
---INS InfixExpression@@server != null && server.isRegistered(name) @TO@ IfStatement@@if (server.isRegistered(name)) {  return MBeanServerInvocationHandler.newProxyInstance(server,name,mbean,false);} else {  return null;} @AT@ 10297 @LENGTH@ 43
------MOV MethodInvocation@@server.isRegistered(name) @TO@ InfixExpression@@server != null && server.isRegistered(name) @AT@ 10231 @LENGTH@ 25
------INS InfixExpression@@server != null @TO@ InfixExpression@@server != null && server.isRegistered(name) @AT@ 10297 @LENGTH@ 14
---------INS SimpleName@@server @TO@ InfixExpression@@server != null @AT@ 10297 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@server != null @AT@ 10303 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@server != null @AT@ 10307 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@server != null && server.isRegistered(name) @AT@ 10311 @LENGTH@ 2


UPD VariableDeclarationStatement@@long delta=System.currentTimeMillis() - start + 200; @TO@ long delta=System.currentTimeMillis() - start + 750; @AT@ 3678 @LENGTH@ 54
---UPD VariableDeclarationFragment@@delta=System.currentTimeMillis() - start + 200 @TO@ delta=System.currentTimeMillis() - start + 750 @AT@ 3683 @LENGTH@ 48
------UPD InfixExpression@@System.currentTimeMillis() - start + 200 @TO@ System.currentTimeMillis() - start + 750 @AT@ 3691 @LENGTH@ 40
---------UPD NumberLiteral@@200 @TO@ 750 @AT@ 3728 @LENGTH@ 3


UPD IfStatement@@if (fileName != null) {  LOG.trace("Getting object in bucket [{}] with file name [{}]...",bucketName,fileName);  S3Object s3Object=getAmazonS3Client().getObject(new GetObjectRequest(bucketName,fileName));  exchanges=createExchanges(s3Object);} else {  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @TO@ if (fileName != null) {  LOG.trace("Getting object in bucket [{}] with file name [{}]...",bucketName,fileName);  S3Object s3Object=getAmazonS3Client().getObject(new GetObjectRequest(bucketName,fileName));  exchanges=createExchanges(s3Object);} else {  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  if (maxMessagesPerPoll > 0) {    listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  }  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 2541 @LENGTH@ 1399
---UPD Block@@ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @TO@ ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  if (maxMessagesPerPoll > 0) {    listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  }  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 2840 @LENGTH@ 1100
------INS IfStatement@@if (maxMessagesPerPoll > 0) {  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);} @TO@ Block@@ElseBody:{  LOG.trace("Queueing objects in bucket [{}]...",bucketName);  ListObjectsRequest listObjectsRequest=new ListObjectsRequest();  listObjectsRequest.setBucketName(bucketName);  listObjectsRequest.setPrefix(getConfiguration().getPrefix());  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);  if (marker != null && !getConfiguration().isDeleteAfterRead()) {    listObjectsRequest.setMarker(marker);  }  ObjectListing listObjects=getAmazonS3Client().listObjects(listObjectsRequest);  if (!getConfiguration().isDeleteAfterRead()) {    marker=listObjects.getMarker();  }  if (LOG.isTraceEnabled()) {    LOG.trace("Found {} objects in bucket [{}]...",listObjects.getObjectSummaries().size(),bucketName);  }  exchanges=createExchanges(listObjects.getObjectSummaries());} @AT@ 3146 @LENGTH@ 110
---------INS InfixExpression@@maxMessagesPerPoll > 0 @TO@ IfStatement@@if (maxMessagesPerPoll > 0) {  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);} @AT@ 3150 @LENGTH@ 22
------------INS SimpleName@@maxMessagesPerPoll @TO@ InfixExpression@@maxMessagesPerPoll > 0 @AT@ 3150 @LENGTH@ 18
------------INS Operator@@> @TO@ InfixExpression@@maxMessagesPerPoll > 0 @AT@ 3168 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@maxMessagesPerPoll > 0 @AT@ 3171 @LENGTH@ 1
---------INS Block@@ThenBody:{  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);} @TO@ IfStatement@@if (maxMessagesPerPoll > 0) {  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);} @AT@ 3174 @LENGTH@ 82
------------MOV ExpressionStatement@@MethodInvocation:listObjectsRequest.setMaxKeys(maxMessagesPerPoll) @TO@ Block@@ThenBody:{  listObjectsRequest.setMaxKeys(maxMessagesPerPoll);} @AT@ 3146 @LENGTH@ 50


UPD ExpressionStatement@@Assignment:this.digestResponse=DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI) @TO@ Assignment:this.digestResponse=DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true) @AT@ 2392 @LENGTH@ 139
---UPD Assignment@@this.digestResponse=DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI) @TO@ this.digestResponse=DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true) @AT@ 2392 @LENGTH@ 138
------UPD MethodInvocation@@DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI) @TO@ DigestUtil.digestResponse(getMessageDigest(this.algorithm),hA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true) @AT@ 2414 @LENGTH@ 116
---------UPD SimpleName@@MethodName:digestResponse:[getMessageDigest(this.algorithm), hA1, nonce, nonceCount, cnonce, authzid, qop, digestURI] @TO@ MethodName:digestResponse:[getMessageDigest(this.algorithm), hA1, nonce, nonceCount, cnonce, authzid, qop, digestURI, true] @AT@ 2425 @LENGTH@ 105
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:digestResponse:[getMessageDigest(this.algorithm), hA1, nonce, nonceCount, cnonce, authzid, qop, digestURI] @AT@ 2531 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:remove(address1) @AT@ 3102 @LENGTH@ 17


INS FieldDeclaration@@String, [id] @TO@ TypeDeclaration@@[public]MeterData,  @AT@ 850 @LENGTH@ 10
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [id] @AT@ 850 @LENGTH@ 6
---INS VariableDeclarationFragment@@id @TO@ FieldDeclaration@@String, [id] @AT@ 857 @LENGTH@ 2
------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id @AT@ 857 @LENGTH@ 2


UPD ReturnStatement@@MethodInvocation:mappings.getMappingFor(domainType) @TO@ MethodInvocation:mappings.getMetadataFor(domainType) @AT@ 3694 @LENGTH@ 42
---UPD MethodInvocation@@mappings.getMappingFor(domainType) @TO@ mappings.getMetadataFor(domainType) @AT@ 3701 @LENGTH@ 34
------UPD SimpleName@@MethodName:getMappingFor:[domainType] @TO@ MethodName:getMetadataFor:[domainType] @AT@ 3710 @LENGTH@ 25


UPD FieldDeclaration@@protected, boolean, [copyOnExchange=true] @TO@ private, boolean, [copyOnExchange=true] @AT@ 5725 @LENGTH@ 40
---UPD Modifier@@protected @TO@ private @AT@ 5725 @LENGTH@ 9


INS FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @TO@ TypeDeclaration@@[public, final]JsonSchemaHelper,  @AT@ 1256 @LENGTH@ 44
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1256 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1264 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1271 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1277 @LENGTH@ 6
---INS VariableDeclarationFragment@@QUOT="&quot;" @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1284 @LENGTH@ 15
------INS SimpleName@@QUOT @TO@ VariableDeclarationFragment@@QUOT="&quot;" @AT@ 1284 @LENGTH@ 4
------INS StringLiteral@@"&quot;" @TO@ VariableDeclarationFragment@@QUOT="&quot;" @AT@ 1291 @LENGTH@ 8


UPD IfStatement@@if (!(args[0] instanceof WritableConstantIntObjectInspector)) {  throw new UDFArgumentException("The first argument to STACK() must be a constant integer (got " + args[0].getTypeName() + " instead).");} @TO@ if (!(args[0] instanceof ConstantObjectInspector)) {  throw new UDFArgumentException("The first argument to STACK() must be a constant integer (got " + args[0].getTypeName() + " instead).");} @AT@ 2680 @LENGTH@ 233
---UPD PrefixExpression@@!(args[0] instanceof WritableConstantIntObjectInspector) @TO@ !(args[0] instanceof ConstantObjectInspector) @AT@ 2684 @LENGTH@ 56
------UPD ParenthesizedExpression@@(args[0] instanceof WritableConstantIntObjectInspector) @TO@ (args[0] instanceof ConstantObjectInspector) @AT@ 2685 @LENGTH@ 55
---------UPD InstanceofExpression@@args[0] instanceof WritableConstantIntObjectInspector @TO@ args[0] instanceof ConstantObjectInspector @AT@ 2686 @LENGTH@ 53
------------UPD SimpleType@@WritableConstantIntObjectInspector @TO@ ConstantObjectInspector @AT@ 2705 @LENGTH@ 34


MOV MethodDeclaration@@public, ResponseEntity<OAuth2Exception>, MethodName:handleClientRegistrationException, Exception e, Exception,  @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]TokenEndpoint, AbstractEndpoint @AT@ 6217 @LENGTH@ 279


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3196 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 3196 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3196 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3216 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 3221 @LENGTH@ 11


INS MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @TO@ TypeDeclaration@@[public, final]JsonSchemaHelper,  @AT@ 6960 @LENGTH@ 221
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 6960 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 6968 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 6975 @LENGTH@ 6
---INS SimpleName@@MethodName:decodeJson @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 6982 @LENGTH@ 10
---INS SingleVariableDeclaration@@String value @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 6993 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String value @AT@ 6993 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@String value @AT@ 7000 @LENGTH@ 5
---INS IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 7090 @LENGTH@ 63
------INS MethodInvocation@@"\\\\".equals(value) @TO@ IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @AT@ 7094 @LENGTH@ 20
---------INS StringLiteral@@"\\\\" @TO@ MethodInvocation@@"\\\\".equals(value) @AT@ 7094 @LENGTH@ 6
---------INS SimpleName@@MethodName:equals:[value] @TO@ MethodInvocation@@"\\\\".equals(value) @AT@ 7101 @LENGTH@ 13
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:equals:[value] @AT@ 7108 @LENGTH@ 5
------INS Block@@ThenBody:{  value="\\";} @TO@ IfStatement@@if ("\\\\".equals(value)) {  value="\\";} @AT@ 7116 @LENGTH@ 37
---------INS ExpressionStatement@@Assignment:value="\\" @TO@ Block@@ThenBody:{  value="\\";} @AT@ 7130 @LENGTH@ 13
------------INS Assignment@@value="\\" @TO@ ExpressionStatement@@Assignment:value="\\" @AT@ 7130 @LENGTH@ 12
---------------INS SimpleName@@value @TO@ Assignment@@value="\\" @AT@ 7130 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value="\\" @AT@ 7135 @LENGTH@ 1
---------------INS StringLiteral@@"\\" @TO@ Assignment@@value="\\" @AT@ 7138 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:value @TO@ MethodDeclaration@@private, static, String, MethodName:decodeJson, String value,  @AT@ 7162 @LENGTH@ 13
------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 7169 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @TO@ TypeDeclaration@@[@Metadata(label="rest"), @XmlRootElement(name="verb"), @XmlAccessorType(XmlAccessType.FIELD), public]VerbDefinition, OptionalIdentifiedDefinition<VerbDefinition> @AT@ 3210 @LENGTH@ 102
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @AT@ 3210 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @AT@ 3217 @LENGTH@ 4
---INS SimpleName@@MethodName:setParams @TO@ MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @AT@ 3222 @LENGTH@ 9
---INS SingleVariableDeclaration@@List<RestOperationParamDefinition> params @TO@ MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @AT@ 3232 @LENGTH@ 41
------INS ParameterizedType@@List<RestOperationParamDefinition> @TO@ SingleVariableDeclaration@@List<RestOperationParamDefinition> params @AT@ 3232 @LENGTH@ 34
---------INS SimpleType@@List @TO@ ParameterizedType@@List<RestOperationParamDefinition> @AT@ 3232 @LENGTH@ 4
---------INS SimpleType@@RestOperationParamDefinition @TO@ ParameterizedType@@List<RestOperationParamDefinition> @AT@ 3237 @LENGTH@ 28
------INS SimpleName@@params @TO@ SingleVariableDeclaration@@List<RestOperationParamDefinition> params @AT@ 3267 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.params=params @TO@ MethodDeclaration@@public, void, MethodName:setParams, List<RestOperationParamDefinition> params,  @AT@ 3285 @LENGTH@ 21
------INS Assignment@@this.params=params @TO@ ExpressionStatement@@Assignment:this.params=params @AT@ 3285 @LENGTH@ 20
---------INS FieldAccess@@this.params @TO@ Assignment@@this.params=params @AT@ 3285 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.params @AT@ 3285 @LENGTH@ 4
------------INS SimpleName@@params @TO@ FieldAccess@@this.params @AT@ 3290 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.params=params @AT@ 3296 @LENGTH@ 1
---------INS SimpleName@@params @TO@ Assignment@@this.params=params @AT@ 3299 @LENGTH@ 6


INS IfStatement@@if (isPlatform("windows")) {} else {  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @TO@ MethodDeclaration@@public, void, MethodName:consumeMessagesFromQueue, Exception,  @AT@ 1882 @LENGTH@ 491
---INS MethodInvocation@@isPlatform("windows") @TO@ IfStatement@@if (isPlatform("windows")) {} else {  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @AT@ 1886 @LENGTH@ 21
------INS SimpleName@@MethodName:isPlatform:["windows"] @TO@ MethodInvocation@@isPlatform("windows") @AT@ 1886 @LENGTH@ 21
---------INS StringLiteral@@"windows" @TO@ SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1897 @LENGTH@ 9
---INS Block@@ThenBody:{} @TO@ IfStatement@@if (isPlatform("windows")) {} else {  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @AT@ 1909 @LENGTH@ 60
---INS Block@@ElseBody:{  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @TO@ IfStatement@@if (isPlatform("windows")) {} else {  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @AT@ 1975 @LENGTH@ 398
------MOV IfStatement@@if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {  fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));} @TO@ Block@@ElseBody:{  if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {    fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));  }} @AT@ 1991 @LENGTH@ 248


UPD TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  final String encodedRedirectUri=URLEncoder.encode(oAuthParams.getRedirectUri(),"UTF-8");  final OAuthScope[] scopes=oAuthParams.getScopes();  final String url;  if (scopes == null || scopes.length == 0) {    url=String.format(AUTHORIZATION_URL,oAuthParams.getClientId(),csrfId,encodedRedirectUri);  } else {    final int nScopes=scopes.length;    final StringBuilder builder=new StringBuilder();    int i=0;    for (    OAuthScope scope : scopes) {      builder.append(scope.getValue());      if (++i < nScopes) {        builder.append("%20");      }    }    url=String.format(AUTHORIZATION_URL_WITH_SCOPE,oAuthParams.getClientId(),csrfId,builder.toString(),encodedRedirectUri);  }  final HtmlPage authPage=webClient.getPage(url);  final HtmlForm loginForm=authPage.getFormByName("oauth2SAuthorizeForm");  final HtmlTextInput login=loginForm.getInputByName("session_key");  login.setText(oAuthParams.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("session_password");  password.setText(oAuthParams.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("authorize");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=submitInput.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    throw new SecurityException("Invalid CSRF code!");  } else {    return params.get("code");  }} catch (IOException e) {  throw new IllegalArgumentException("Error authorizing application: " + e.getMessage(),e);} @TO@ try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  final String encodedRedirectUri=URLEncoder.encode(oAuthParams.getRedirectUri(),"UTF-8");  final OAuthScope[] scopes=oAuthParams.getScopes();  final String url;  if (scopes == null || scopes.length == 0) {    url=String.format(AUTHORIZATION_URL,oAuthParams.getClientId(),csrfId,encodedRedirectUri);  } else {    final int nScopes=scopes.length;    final StringBuilder builder=new StringBuilder();    int i=0;    for (    OAuthScope scope : scopes) {      builder.append(scope.getValue());      if (++i < nScopes) {        builder.append("%20");      }    }    url=String.format(AUTHORIZATION_URL_WITH_SCOPE,oAuthParams.getClientId(),csrfId,builder.toString(),encodedRedirectUri);  }  final HtmlPage authPage=webClient.getPage(url);  final HtmlDivision div=authPage.getFirstByXPath("//div[@role='alert']");  if (div != null) {    throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());  }  final HtmlForm loginForm=authPage.getFormByName("oauth2SAuthorizeForm");  final HtmlTextInput login=loginForm.getInputByName("session_key");  login.setText(oAuthParams.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("session_password");  password.setText(oAuthParams.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("authorize");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=submitInput.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    throw new SecurityException("Invalid CSRF code!");  } else {    return params.get("code");  }} catch (IOException e) {  throw new IllegalArgumentException("Error authorizing application: " + e.getMessage(),e);} @AT@ 5289 @LENGTH@ 3136
---INS VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[@role='alert']"); @TO@ TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  final String encodedRedirectUri=URLEncoder.encode(oAuthParams.getRedirectUri(),"UTF-8");  final OAuthScope[] scopes=oAuthParams.getScopes();  final String url;  if (scopes == null || scopes.length == 0) {    url=String.format(AUTHORIZATION_URL,oAuthParams.getClientId(),csrfId,encodedRedirectUri);  } else {    final int nScopes=scopes.length;    final StringBuilder builder=new StringBuilder();    int i=0;    for (    OAuthScope scope : scopes) {      builder.append(scope.getValue());      if (++i < nScopes) {        builder.append("%20");      }    }    url=String.format(AUTHORIZATION_URL_WITH_SCOPE,oAuthParams.getClientId(),csrfId,builder.toString(),encodedRedirectUri);  }  final HtmlPage authPage=webClient.getPage(url);  final HtmlForm loginForm=authPage.getFormByName("oauth2SAuthorizeForm");  final HtmlTextInput login=loginForm.getInputByName("session_key");  login.setText(oAuthParams.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("session_password");  password.setText(oAuthParams.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("authorize");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=submitInput.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    throw new SecurityException("Invalid CSRF code!");  } else {    return params.get("code");  }} catch (IOException e) {  throw new IllegalArgumentException("Error authorizing application: " + e.getMessage(),e);} @AT@ 7047 @LENGTH@ 74
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[@role='alert']"); @AT@ 7047 @LENGTH@ 5
------INS SimpleType@@HtmlDivision @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[@role='alert']"); @AT@ 7053 @LENGTH@ 12
------INS VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[@role='alert']") @TO@ VariableDeclarationStatement@@final HtmlDivision div=authPage.getFirstByXPath("//div[@role='alert']"); @AT@ 7066 @LENGTH@ 54
---------INS SimpleName@@div @TO@ VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[@role='alert']") @AT@ 7066 @LENGTH@ 3
---------INS MethodInvocation@@authPage.getFirstByXPath("//div[@role='alert']") @TO@ VariableDeclarationFragment@@div=authPage.getFirstByXPath("//div[@role='alert']") @AT@ 7072 @LENGTH@ 48
------------INS SimpleName@@Name:authPage @TO@ MethodInvocation@@authPage.getFirstByXPath("//div[@role='alert']") @AT@ 7072 @LENGTH@ 8
------------INS SimpleName@@MethodName:getFirstByXPath:["//div[@role='alert']"] @TO@ MethodInvocation@@authPage.getFirstByXPath("//div[@role='alert']") @AT@ 7081 @LENGTH@ 39
---------------INS StringLiteral@@"//div[@role='alert']" @TO@ SimpleName@@MethodName:getFirstByXPath:["//div[@role='alert']"] @AT@ 7097 @LENGTH@ 22
---INS IfStatement@@if (div != null) {  throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());} @TO@ TryStatement@@try {  final String csrfId=String.valueOf(new SecureRandom().nextLong());  final String encodedRedirectUri=URLEncoder.encode(oAuthParams.getRedirectUri(),"UTF-8");  final OAuthScope[] scopes=oAuthParams.getScopes();  final String url;  if (scopes == null || scopes.length == 0) {    url=String.format(AUTHORIZATION_URL,oAuthParams.getClientId(),csrfId,encodedRedirectUri);  } else {    final int nScopes=scopes.length;    final StringBuilder builder=new StringBuilder();    int i=0;    for (    OAuthScope scope : scopes) {      builder.append(scope.getValue());      if (++i < nScopes) {        builder.append("%20");      }    }    url=String.format(AUTHORIZATION_URL_WITH_SCOPE,oAuthParams.getClientId(),csrfId,builder.toString(),encodedRedirectUri);  }  final HtmlPage authPage=webClient.getPage(url);  final HtmlForm loginForm=authPage.getFormByName("oauth2SAuthorizeForm");  final HtmlTextInput login=loginForm.getInputByName("session_key");  login.setText(oAuthParams.getUserName());  final HtmlPasswordInput password=loginForm.getInputByName("session_password");  password.setText(oAuthParams.getUserPassword());  final HtmlSubmitInput submitInput=loginForm.getInputByName("authorize");  webClient.getOptions().setRedirectEnabled(false);  String redirectQuery;  try {    final Page redirectPage=submitInput.click();    redirectQuery=redirectPage.getUrl().getQuery();  } catch (  FailingHttpStatusCodeException e) {    if (e.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {      throw e;    }    final String location=e.getResponse().getResponseHeaderValue("Location");    redirectQuery=location.substring(location.indexOf('?') + 1);  }  final Map<String,String> params=new HashMap<String,String>();  final Matcher matcher=QUERY_PARAM_PATTERN.matcher(redirectQuery);  while (matcher.find()) {    params.put(matcher.group(1),matcher.group(2));  }  final String state=params.get("state");  if (!csrfId.equals(state)) {    throw new SecurityException("Invalid CSRF code!");  } else {    return params.get("code");  }} catch (IOException e) {  throw new IllegalArgumentException("Error authorizing application: " + e.getMessage(),e);} @AT@ 7134 @LENGTH@ 142
------INS InfixExpression@@div != null @TO@ IfStatement@@if (div != null) {  throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());} @AT@ 7138 @LENGTH@ 11
---------INS SimpleName@@div @TO@ InfixExpression@@div != null @AT@ 7138 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@div != null @AT@ 7141 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@div != null @AT@ 7145 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());} @TO@ IfStatement@@if (div != null) {  throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());} @AT@ 7151 @LENGTH@ 125
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Error authorizing application: " + div.getTextContent()) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Error authorizing application: " + div.getTextContent());} @AT@ 7169 @LENGTH@ 93
------------INS ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + div.getTextContent()] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Error authorizing application: " + div.getTextContent()) @AT@ 7175 @LENGTH@ 86
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + div.getTextContent()] @AT@ 7175 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + div.getTextContent()] @AT@ 7179 @LENGTH@ 24
---------------INS InfixExpression@@"Error authorizing application: " + div.getTextContent() @TO@ ClassInstanceCreation@@IllegalArgumentException["Error authorizing application: " + div.getTextContent()] @AT@ 7204 @LENGTH@ 56
------------------INS StringLiteral@@"Error authorizing application: " @TO@ InfixExpression@@"Error authorizing application: " + div.getTextContent() @AT@ 7204 @LENGTH@ 33
------------------INS Operator@@+ @TO@ InfixExpression@@"Error authorizing application: " + div.getTextContent() @AT@ 7237 @LENGTH@ 1
------------------INS MethodInvocation@@div.getTextContent() @TO@ InfixExpression@@"Error authorizing application: " + div.getTextContent() @AT@ 7240 @LENGTH@ 20
---------------------INS SimpleName@@Name:div @TO@ MethodInvocation@@div.getTextContent() @AT@ 7240 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getTextContent:[] @TO@ MethodInvocation@@div.getTextContent() @AT@ 7244 @LENGTH@ 16


UPD TryStatement@@try {synchronized (lock) {    boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();    boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);    ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());    taskWrapper.setIsInWaitQueue(false);    FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);    Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);    if (isInfoEnabled) {      LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);    }    if (enablePreemption) {      if (!canFinish && !stateChanged) {        if (isInfoEnabled) {          LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());        }        addToPreemptionQueue(taskWrapper);      }    }  }  numSlotsAvailable.decrementAndGet();  scheduled=true;} catch (RejectedExecutionException e) {  if (enablePreemption && taskWrapper.getTaskRunnerCallable().canFinish() && !preemptionQueue.isEmpty()) {    if (isDebugEnabled) {      LOG.debug("Preemption Queue: " + preemptionQueue);    }    TaskWrapper pRequest=removeAndGetFromPreemptionQueue();    if (pRequest != null) {      if (pRequest.getTaskRunnerCallable().canFinish()) {        LOG.info("Removed {} from preemption queue, but not preempting since it's now finishable",pRequest.getRequestId());      } else {        if (isInfoEnabled) {          LOG.info("Invoking kill task for {} due to pre-emption to run {}",pRequest.getRequestId(),taskWrapper.getRequestId());        }        pRequest.getTaskRunnerCallable().killTask();      }    }  }} @TO@ try {  boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();  boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);synchronized (lock) {    ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());    taskWrapper.setIsInWaitQueue(false);    FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);    Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);    if (isInfoEnabled) {      LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);    }    if (enablePreemption) {      if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {        if (isInfoEnabled) {          LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());        }        addToPreemptionQueue(taskWrapper);      }    }  }  numSlotsAvailable.decrementAndGet();  scheduled=true;} catch (RejectedExecutionException e) {  if (enablePreemption && taskWrapper.getTaskRunnerCallable().canFinish() && !preemptionQueue.isEmpty()) {    if (isDebugEnabled) {      LOG.debug("Preemption Queue: " + preemptionQueue);    }    TaskWrapper pRequest=removeAndGetFromPreemptionQueue();    if (pRequest != null) {      if (pRequest.getTaskRunnerCallable().canFinish()) {        LOG.info("Removed {} from preemption queue, but not preempting since it's now finishable",pRequest.getRequestId());      } else {        if (isInfoEnabled) {          LOG.info("Invoking kill task for {} due to pre-emption to run {}",pRequest.getRequestId(),taskWrapper.getRequestId());        }        pRequest.getTaskRunnerCallable().killTask();      }    }  }} @AT@ 12069 @LENGTH@ 2716
---UPD SynchronizedStatement@@synchronized (lock) {  boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();  boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);  ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());  taskWrapper.setIsInWaitQueue(false);  FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);  Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);  if (isInfoEnabled) {    LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);  }  if (enablePreemption) {    if (!canFinish && !stateChanged) {      if (isInfoEnabled) {        LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());      }      addToPreemptionQueue(taskWrapper);    }  }} @TO@ synchronized (lock) {  ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());  taskWrapper.setIsInWaitQueue(false);  FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);  Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);  if (isInfoEnabled) {    LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);  }  if (enablePreemption) {    if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {      if (isInfoEnabled) {        LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());      }      addToPreemptionQueue(taskWrapper);    }  }} @AT@ 12081 @LENGTH@ 1391
------UPD Block@@SyncBody:{  boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();  boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);  ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());  taskWrapper.setIsInWaitQueue(false);  FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);  Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);  if (isInfoEnabled) {    LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);  }  if (enablePreemption) {    if (!canFinish && !stateChanged) {      if (isInfoEnabled) {        LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());      }      addToPreemptionQueue(taskWrapper);    }  }} @TO@ SyncBody:{  ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());  taskWrapper.setIsInWaitQueue(false);  FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);  Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);  if (isInfoEnabled) {    LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);  }  if (enablePreemption) {    if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {      if (isInfoEnabled) {        LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());      }      addToPreemptionQueue(taskWrapper);    }  }} @AT@ 12101 @LENGTH@ 1371
---------UPD IfStatement@@if (enablePreemption) {  if (!canFinish && !stateChanged) {    if (isInfoEnabled) {      LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());    }    addToPreemptionQueue(taskWrapper);  }} @TO@ if (enablePreemption) {  if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {    if (isInfoEnabled) {      LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());    }    addToPreemptionQueue(taskWrapper);  }} @AT@ 13172 @LENGTH@ 292
------------UPD Block@@ThenBody:{  if (!canFinish && !stateChanged) {    if (isInfoEnabled) {      LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());    }    addToPreemptionQueue(taskWrapper);  }} @TO@ ThenBody:{  if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {    if (isInfoEnabled) {      LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());    }    addToPreemptionQueue(taskWrapper);  }} @AT@ 13194 @LENGTH@ 270
---------------UPD IfStatement@@if (!canFinish && !stateChanged) {  if (isInfoEnabled) {    LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());  }  addToPreemptionQueue(taskWrapper);} @TO@ if ((!canFinish && !stateChanged) || (canFinish && stateChanged)) {  if (isInfoEnabled) {    LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());  }  addToPreemptionQueue(taskWrapper);} @AT@ 13206 @LENGTH@ 248
------------------INS InfixExpression@@(!canFinish && !stateChanged) || (canFinish && stateChanged) @TO@ IfStatement@@if (!canFinish && !stateChanged) {  if (isInfoEnabled) {    LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());  }  addToPreemptionQueue(taskWrapper);} @AT@ 13358 @LENGTH@ 60
---------------------INS ParenthesizedExpression@@(!canFinish && !stateChanged) @TO@ InfixExpression@@(!canFinish && !stateChanged) || (canFinish && stateChanged) @AT@ 13358 @LENGTH@ 29
------------------------MOV InfixExpression@@!canFinish && !stateChanged @TO@ ParenthesizedExpression@@(!canFinish && !stateChanged) @AT@ 13210 @LENGTH@ 27
---------------------INS Operator@@|| @TO@ InfixExpression@@(!canFinish && !stateChanged) || (canFinish && stateChanged) @AT@ 13387 @LENGTH@ 2
---------------------INS ParenthesizedExpression@@(canFinish && stateChanged) @TO@ InfixExpression@@(!canFinish && !stateChanged) || (canFinish && stateChanged) @AT@ 13391 @LENGTH@ 27
------------------------INS InfixExpression@@canFinish && stateChanged @TO@ ParenthesizedExpression@@(canFinish && stateChanged) @AT@ 13392 @LENGTH@ 25
---------------------------INS SimpleName@@canFinish @TO@ InfixExpression@@canFinish && stateChanged @AT@ 13392 @LENGTH@ 9
---------------------------INS Operator@@&& @TO@ InfixExpression@@canFinish && stateChanged @AT@ 13401 @LENGTH@ 2
---------------------------INS SimpleName@@stateChanged @TO@ InfixExpression@@canFinish && stateChanged @AT@ 13405 @LENGTH@ 12
---MOV VariableDeclarationStatement@@boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish(); @TO@ TryStatement@@try {synchronized (lock) {    boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();    boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);    ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());    taskWrapper.setIsInWaitQueue(false);    FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);    Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);    if (isInfoEnabled) {      LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);    }    if (enablePreemption) {      if (!canFinish && !stateChanged) {        if (isInfoEnabled) {          LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());        }        addToPreemptionQueue(taskWrapper);      }    }  }  numSlotsAvailable.decrementAndGet();  scheduled=true;} catch (RejectedExecutionException e) {  if (enablePreemption && taskWrapper.getTaskRunnerCallable().canFinish() && !preemptionQueue.isEmpty()) {    if (isDebugEnabled) {      LOG.debug("Preemption Queue: " + preemptionQueue);    }    TaskWrapper pRequest=removeAndGetFromPreemptionQueue();    if (pRequest != null) {      if (pRequest.getTaskRunnerCallable().canFinish()) {        LOG.info("Removed {} from preemption queue, but not preempting since it's now finishable",pRequest.getRequestId());      } else {        if (isInfoEnabled) {          LOG.info("Invoking kill task for {} due to pre-emption to run {}",pRequest.getRequestId(),taskWrapper.getRequestId());        }        pRequest.getTaskRunnerCallable().killTask();      }    }  }} @AT@ 12111 @LENGTH@ 68
---MOV VariableDeclarationStatement@@boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish); @TO@ TryStatement@@try {synchronized (lock) {    boolean canFinish=taskWrapper.getTaskRunnerCallable().canFinish();    boolean stateChanged=!taskWrapper.maybeRegisterForFinishedStateNotifications(canFinish);    ListenableFuture<TaskRunner2Result> future=executorService.submit(taskWrapper.getTaskRunnerCallable());    taskWrapper.setIsInWaitQueue(false);    FutureCallback<TaskRunner2Result> wrappedCallback=new InternalCompletionListener(taskWrapper);    Futures.addCallback(future,wrappedCallback,executionCompletionExecutorService);    if (isInfoEnabled) {      LOG.info("{} scheduled for execution. canFinish={}",taskWrapper.getRequestId(),canFinish);    }    if (enablePreemption) {      if (!canFinish && !stateChanged) {        if (isInfoEnabled) {          LOG.info("{} is not finishable. Adding it to pre-emption queue",taskWrapper.getRequestId());        }        addToPreemptionQueue(taskWrapper);      }    }  }  numSlotsAvailable.decrementAndGet();  scheduled=true;} catch (RejectedExecutionException e) {  if (enablePreemption && taskWrapper.getTaskRunnerCallable().canFinish() && !preemptionQueue.isEmpty()) {    if (isDebugEnabled) {      LOG.debug("Preemption Queue: " + preemptionQueue);    }    TaskWrapper pRequest=removeAndGetFromPreemptionQueue();    if (pRequest != null) {      if (pRequest.getTaskRunnerCallable().canFinish()) {        LOG.info("Removed {} from preemption queue, but not preempting since it's now finishable",pRequest.getRequestId());      } else {        if (isInfoEnabled) {          LOG.info("Invoking kill task for {} due to pre-emption to run {}",pRequest.getRequestId(),taskWrapper.getRequestId());        }        pRequest.getTaskRunnerCallable().killTask();      }    }  }} @AT@ 12188 @LENGTH@ 91


INS IfStatement@@if (getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null) {} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 2799 @LENGTH@ 117
---INS ConditionalExpression@@getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null @TO@ IfStatement@@if (getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null) {} @AT@ 2803 @LENGTH@ 86
------INS InfixExpression@@getDetails() != null @TO@ ConditionalExpression@@getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null @AT@ 2803 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getDetails:[] @TO@ InfixExpression@@getDetails() != null @AT@ 2803 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@getDetails() != null @AT@ 2815 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@getDetails() != null @AT@ 2817 @LENGTH@ 4
------INS PrefixExpression@@!getDetails().equals(that.getDetails()) @TO@ ConditionalExpression@@getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null @AT@ 2824 @LENGTH@ 39
---------INS Operator@@! @TO@ PrefixExpression@@!getDetails().equals(that.getDetails()) @AT@ 2824 @LENGTH@ 1
---------INS MethodInvocation@@getDetails().equals(that.getDetails()) @TO@ PrefixExpression@@!getDetails().equals(that.getDetails()) @AT@ 2825 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getDetails:[] @TO@ MethodInvocation@@getDetails().equals(that.getDetails()) @AT@ 2825 @LENGTH@ 12
------------INS SimpleName@@MethodName:equals:[that.getDetails()] @TO@ MethodInvocation@@getDetails().equals(that.getDetails()) @AT@ 2838 @LENGTH@ 25
---------------INS MethodInvocation@@that.getDetails() @TO@ SimpleName@@MethodName:equals:[that.getDetails()] @AT@ 2845 @LENGTH@ 17
------------------INS SimpleName@@Name:that @TO@ MethodInvocation@@that.getDetails() @AT@ 2845 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@that.getDetails() @AT@ 2850 @LENGTH@ 12
------INS InfixExpression@@that.getDetails() != null @TO@ ConditionalExpression@@getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null @AT@ 2866 @LENGTH@ 23
---------INS MethodInvocation@@that.getDetails() @TO@ InfixExpression@@that.getDetails() != null @AT@ 2866 @LENGTH@ 17
------------INS SimpleName@@Name:that @TO@ MethodInvocation@@that.getDetails() @AT@ 2866 @LENGTH@ 4
------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@that.getDetails() @AT@ 2871 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@that.getDetails() != null @AT@ 2883 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@that.getDetails() != null @AT@ 2885 @LENGTH@ 4
---INS Block@@ThenBody:{} @TO@ IfStatement@@if (getDetails() != null ? !getDetails().equals(that.getDetails()) : that.getDetails() != null) {} @AT@ 2891 @LENGTH@ 25


DEL VariableDeclarationStatement@@int ITERATIONS=10; @AT@ 3113 @LENGTH@ 20
---DEL PrimitiveType@@int @AT@ 3113 @LENGTH@ 3
---DEL VariableDeclarationFragment@@ITERATIONS=10 @AT@ 3117 @LENGTH@ 15
------DEL SimpleName@@ITERATIONS @AT@ 3117 @LENGTH@ 10
------DEL NumberLiteral@@10 @AT@ 3130 @LENGTH@ 2


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationDetails, [Serializable] @AT@ 4024 @LENGTH@ 321
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4024 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4031 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4035 @LENGTH@ 8
---INS VariableDeclarationStatement@@final int prime=31; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4050 @LENGTH@ 21
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 4050 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 4056 @LENGTH@ 3
------INS VariableDeclarationFragment@@prime=31 @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 4060 @LENGTH@ 10
---------INS SimpleName@@prime @TO@ VariableDeclarationFragment@@prime=31 @AT@ 4060 @LENGTH@ 5
---------INS NumberLiteral@@31 @TO@ VariableDeclarationFragment@@prime=31 @AT@ 4068 @LENGTH@ 2
---INS VariableDeclarationStatement@@int result=1; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4074 @LENGTH@ 15
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=1; @AT@ 4074 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=1 @TO@ VariableDeclarationStatement@@int result=1; @AT@ 4078 @LENGTH@ 10
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=1 @AT@ 4078 @LENGTH@ 6
---------INS NumberLiteral@@1 @TO@ VariableDeclarationFragment@@result=1 @AT@ 4087 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4092 @LENGTH@ 75
------INS Assignment@@result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @TO@ ExpressionStatement@@Assignment:result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4092 @LENGTH@ 74
---------INS SimpleName@@result @TO@ Assignment@@result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4092 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4098 @LENGTH@ 1
---------INS InfixExpression@@prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @TO@ Assignment@@result=prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4101 @LENGTH@ 65
------------INS InfixExpression@@prime * result @TO@ InfixExpression@@prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4101 @LENGTH@ 14
---------------INS SimpleName@@prime @TO@ InfixExpression@@prime * result @AT@ 4101 @LENGTH@ 5
---------------INS Operator@@* @TO@ InfixExpression@@prime * result @AT@ 4106 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@prime * result @AT@ 4109 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4115 @LENGTH@ 1
------------INS ParenthesizedExpression@@((sessionId == null) ? 0 : sessionId.hashCode()) @TO@ InfixExpression@@prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4118 @LENGTH@ 48
---------------INS ConditionalExpression@@(sessionId == null) ? 0 : sessionId.hashCode() @TO@ ParenthesizedExpression@@((sessionId == null) ? 0 : sessionId.hashCode()) @AT@ 4119 @LENGTH@ 46
------------------INS ParenthesizedExpression@@(sessionId == null) @TO@ ConditionalExpression@@(sessionId == null) ? 0 : sessionId.hashCode() @AT@ 4119 @LENGTH@ 19
---------------------INS InfixExpression@@sessionId == null @TO@ ParenthesizedExpression@@(sessionId == null) @AT@ 4120 @LENGTH@ 17
------------------------INS SimpleName@@sessionId @TO@ InfixExpression@@sessionId == null @AT@ 4120 @LENGTH@ 9
------------------------INS Operator@@== @TO@ InfixExpression@@sessionId == null @AT@ 4129 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@sessionId == null @AT@ 4133 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(sessionId == null) ? 0 : sessionId.hashCode() @AT@ 4141 @LENGTH@ 1
------------------INS MethodInvocation@@sessionId.hashCode() @TO@ ConditionalExpression@@(sessionId == null) ? 0 : sessionId.hashCode() @AT@ 4145 @LENGTH@ 20
---------------------INS SimpleName@@Name:sessionId @TO@ MethodInvocation@@sessionId.hashCode() @AT@ 4145 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@sessionId.hashCode() @AT@ 4155 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4170 @LENGTH@ 75
------INS Assignment@@result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @TO@ ExpressionStatement@@Assignment:result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4170 @LENGTH@ 74
---------INS SimpleName@@result @TO@ Assignment@@result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4170 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4176 @LENGTH@ 1
---------INS InfixExpression@@prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @TO@ Assignment@@result=prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4179 @LENGTH@ 65
------------INS InfixExpression@@prime * result @TO@ InfixExpression@@prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4179 @LENGTH@ 14
---------------INS SimpleName@@prime @TO@ InfixExpression@@prime * result @AT@ 4179 @LENGTH@ 5
---------------INS Operator@@* @TO@ InfixExpression@@prime * result @AT@ 4184 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@prime * result @AT@ 4187 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4193 @LENGTH@ 1
------------INS ParenthesizedExpression@@((tokenType == null) ? 0 : tokenType.hashCode()) @TO@ InfixExpression@@prime * result + ((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4196 @LENGTH@ 48
---------------INS ConditionalExpression@@(tokenType == null) ? 0 : tokenType.hashCode() @TO@ ParenthesizedExpression@@((tokenType == null) ? 0 : tokenType.hashCode()) @AT@ 4197 @LENGTH@ 46
------------------INS ParenthesizedExpression@@(tokenType == null) @TO@ ConditionalExpression@@(tokenType == null) ? 0 : tokenType.hashCode() @AT@ 4197 @LENGTH@ 19
---------------------INS InfixExpression@@tokenType == null @TO@ ParenthesizedExpression@@(tokenType == null) @AT@ 4198 @LENGTH@ 17
------------------------INS SimpleName@@tokenType @TO@ InfixExpression@@tokenType == null @AT@ 4198 @LENGTH@ 9
------------------------INS Operator@@== @TO@ InfixExpression@@tokenType == null @AT@ 4207 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@tokenType == null @AT@ 4211 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(tokenType == null) ? 0 : tokenType.hashCode() @AT@ 4219 @LENGTH@ 1
------------------INS MethodInvocation@@tokenType.hashCode() @TO@ ConditionalExpression@@(tokenType == null) ? 0 : tokenType.hashCode() @AT@ 4223 @LENGTH@ 20
---------------------INS SimpleName@@Name:tokenType @TO@ MethodInvocation@@tokenType.hashCode() @AT@ 4223 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@tokenType.hashCode() @AT@ 4233 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4248 @LENGTH@ 77
------INS Assignment@@result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @TO@ ExpressionStatement@@Assignment:result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4248 @LENGTH@ 76
---------INS SimpleName@@result @TO@ Assignment@@result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4248 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4254 @LENGTH@ 1
---------INS InfixExpression@@prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @TO@ Assignment@@result=prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4257 @LENGTH@ 67
------------INS InfixExpression@@prime * result @TO@ InfixExpression@@prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4257 @LENGTH@ 14
---------------INS SimpleName@@prime @TO@ InfixExpression@@prime * result @AT@ 4257 @LENGTH@ 5
---------------INS Operator@@* @TO@ InfixExpression@@prime * result @AT@ 4262 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@prime * result @AT@ 4265 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4271 @LENGTH@ 1
------------INS ParenthesizedExpression@@((tokenValue == null) ? 0 : tokenValue.hashCode()) @TO@ InfixExpression@@prime * result + ((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4274 @LENGTH@ 50
---------------INS ConditionalExpression@@(tokenValue == null) ? 0 : tokenValue.hashCode() @TO@ ParenthesizedExpression@@((tokenValue == null) ? 0 : tokenValue.hashCode()) @AT@ 4275 @LENGTH@ 48
------------------INS ParenthesizedExpression@@(tokenValue == null) @TO@ ConditionalExpression@@(tokenValue == null) ? 0 : tokenValue.hashCode() @AT@ 4275 @LENGTH@ 20
---------------------INS InfixExpression@@tokenValue == null @TO@ ParenthesizedExpression@@(tokenValue == null) @AT@ 4276 @LENGTH@ 18
------------------------INS SimpleName@@tokenValue @TO@ InfixExpression@@tokenValue == null @AT@ 4276 @LENGTH@ 10
------------------------INS Operator@@== @TO@ InfixExpression@@tokenValue == null @AT@ 4286 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@tokenValue == null @AT@ 4290 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(tokenValue == null) ? 0 : tokenValue.hashCode() @AT@ 4298 @LENGTH@ 1
------------------INS MethodInvocation@@tokenValue.hashCode() @TO@ ConditionalExpression@@(tokenValue == null) ? 0 : tokenValue.hashCode() @AT@ 4302 @LENGTH@ 21
---------------------INS SimpleName@@Name:tokenValue @TO@ MethodInvocation@@tokenValue.hashCode() @AT@ 4302 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@tokenValue.hashCode() @AT@ 4313 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4328 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 4335 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @TO@ TypeDeclaration@@[@WebAppConfiguration, @ContextConfiguration(classes={JpaRepositoryConfig.class,AlpsControllerIntegrationTests.Config.class}), public]AlpsControllerIntegrationTests, AbstractControllerIntegrationTests @AT@ 4888 @LENGTH@ 611
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 4888 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 4895 @LENGTH@ 4
---INS SimpleName@@MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 4900 @LENGTH@ 68
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 4978 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link profileLink=discoverUnique("/","profile"); @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 4993 @LENGTH@ 50
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link profileLink=discoverUnique("/","profile"); @AT@ 4993 @LENGTH@ 4
------INS VariableDeclarationFragment@@profileLink=discoverUnique("/","profile") @TO@ VariableDeclarationStatement@@Link profileLink=discoverUnique("/","profile"); @AT@ 4998 @LENGTH@ 44
---------INS SimpleName@@profileLink @TO@ VariableDeclarationFragment@@profileLink=discoverUnique("/","profile") @AT@ 4998 @LENGTH@ 11
---------INS MethodInvocation@@discoverUnique("/","profile") @TO@ VariableDeclarationFragment@@profileLink=discoverUnique("/","profile") @AT@ 5012 @LENGTH@ 30
------------INS SimpleName@@MethodName:discoverUnique:["/", "profile"] @TO@ MethodInvocation@@discoverUnique("/","profile") @AT@ 5012 @LENGTH@ 30
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:discoverUnique:["/", "profile"] @AT@ 5027 @LENGTH@ 3
---------------INS StringLiteral@@"profile" @TO@ SimpleName@@MethodName:discoverUnique:["/", "profile"] @AT@ 5032 @LENGTH@ 9
---INS VariableDeclarationStatement@@Link usersLink=discoverUnique(profileLink.getHref(),"people"); @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5046 @LENGTH@ 65
------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link usersLink=discoverUnique(profileLink.getHref(),"people"); @AT@ 5046 @LENGTH@ 4
------INS VariableDeclarationFragment@@usersLink=discoverUnique(profileLink.getHref(),"people") @TO@ VariableDeclarationStatement@@Link usersLink=discoverUnique(profileLink.getHref(),"people"); @AT@ 5051 @LENGTH@ 59
---------INS SimpleName@@usersLink @TO@ VariableDeclarationFragment@@usersLink=discoverUnique(profileLink.getHref(),"people") @AT@ 5051 @LENGTH@ 9
---------INS MethodInvocation@@discoverUnique(profileLink.getHref(),"people") @TO@ VariableDeclarationFragment@@usersLink=discoverUnique(profileLink.getHref(),"people") @AT@ 5063 @LENGTH@ 47
------------INS SimpleName@@MethodName:discoverUnique:[profileLink.getHref(), "people"] @TO@ MethodInvocation@@discoverUnique(profileLink.getHref(),"people") @AT@ 5063 @LENGTH@ 47
---------------INS MethodInvocation@@profileLink.getHref() @TO@ SimpleName@@MethodName:discoverUnique:[profileLink.getHref(), "people"] @AT@ 5078 @LENGTH@ 21
------------------INS SimpleName@@Name:profileLink @TO@ MethodInvocation@@profileLink.getHref() @AT@ 5078 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@profileLink.getHref() @AT@ 5090 @LENGTH@ 9
---------------INS StringLiteral@@"people" @TO@ SimpleName@@MethodName:discoverUnique:[profileLink.getHref(), "people"] @AT@ 5101 @LENGTH@ 8
---INS VariableDeclarationStatement@@String jsonPath="$."; @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5115 @LENGTH@ 23
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String jsonPath="$."; @AT@ 5115 @LENGTH@ 6
------INS VariableDeclarationFragment@@jsonPath="$." @TO@ VariableDeclarationStatement@@String jsonPath="$."; @AT@ 5122 @LENGTH@ 15
---------INS SimpleName@@jsonPath @TO@ VariableDeclarationFragment@@jsonPath="$." @AT@ 5122 @LENGTH@ 8
---------INS StringLiteral@@"$." @TO@ VariableDeclarationFragment@@jsonPath="$." @AT@ 5133 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:jsonPath+="descriptors[?(@.id == 'person-representation')]." @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5149 @LENGTH@ 63
------INS Assignment@@jsonPath+="descriptors[?(@.id == 'person-representation')]." @TO@ ExpressionStatement@@Assignment:jsonPath+="descriptors[?(@.id == 'person-representation')]." @AT@ 5149 @LENGTH@ 62
---------INS SimpleName@@jsonPath @TO@ Assignment@@jsonPath+="descriptors[?(@.id == 'person-representation')]." @AT@ 5149 @LENGTH@ 8
---------INS Operator@@+= @TO@ Assignment@@jsonPath+="descriptors[?(@.id == 'person-representation')]." @AT@ 5157 @LENGTH@ 2
---------INS StringLiteral@@"descriptors[?(@.id == 'person-representation')]." @TO@ Assignment@@jsonPath+="descriptors[?(@.id == 'person-representation')]." @AT@ 5161 @LENGTH@ 50
---INS ExpressionStatement@@Assignment:jsonPath+="descriptors[?(@.name == 'father')][0]." @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5244 @LENGTH@ 53
------INS Assignment@@jsonPath+="descriptors[?(@.name == 'father')][0]." @TO@ ExpressionStatement@@Assignment:jsonPath+="descriptors[?(@.name == 'father')][0]." @AT@ 5244 @LENGTH@ 52
---------INS SimpleName@@jsonPath @TO@ Assignment@@jsonPath+="descriptors[?(@.name == 'father')][0]." @AT@ 5244 @LENGTH@ 8
---------INS Operator@@+= @TO@ Assignment@@jsonPath+="descriptors[?(@.name == 'father')][0]." @AT@ 5252 @LENGTH@ 2
---------INS StringLiteral@@"descriptors[?(@.name == 'father')][0]." @TO@ Assignment@@jsonPath+="descriptors[?(@.name == 'father')][0]." @AT@ 5256 @LENGTH@ 40
---INS ExpressionStatement@@Assignment:jsonPath+="rt" @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5327 @LENGTH@ 17
------INS Assignment@@jsonPath+="rt" @TO@ ExpressionStatement@@Assignment:jsonPath+="rt" @AT@ 5327 @LENGTH@ 16
---------INS SimpleName@@jsonPath @TO@ Assignment@@jsonPath+="rt" @AT@ 5327 @LENGTH@ 8
---------INS Operator@@+= @TO@ Assignment@@jsonPath+="rt" @AT@ 5335 @LENGTH@ 2
---------INS StringLiteral@@"rt" @TO@ Assignment@@jsonPath+="rt" @AT@ 5339 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @TO@ MethodDeclaration@@public, void, MethodName:referenceToAssociatedEntityDesciptorPointsToRepresentationDescriptor, Exception,  @AT@ 5363 @LENGTH@ 133
------INS MethodInvocation@@mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @TO@ ExpressionStatement@@MethodInvocation:mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @AT@ 5363 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:perform:[get(usersLink.getHref())] @TO@ MethodInvocation@@mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @AT@ 5363 @LENGTH@ 37
------------INS MethodInvocation@@get(usersLink.getHref()) @TO@ MethodInvocation@@MethodName:perform:[get(usersLink.getHref())] @AT@ 5375 @LENGTH@ 24
---------------INS SimpleName@@MethodName:get:[usersLink.getHref()] @TO@ MethodInvocation@@get(usersLink.getHref()) @AT@ 5375 @LENGTH@ 24
------------------INS MethodInvocation@@usersLink.getHref() @TO@ SimpleName@@MethodName:get:[usersLink.getHref()] @AT@ 5379 @LENGTH@ 19
---------------------INS SimpleName@@Name:usersLink @TO@ MethodInvocation@@usersLink.getHref() @AT@ 5379 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@usersLink.getHref() @AT@ 5389 @LENGTH@ 9
---------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @AT@ 5363 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))] @TO@ MethodInvocation@@mvc.perform(get(usersLink.getHref())).andExpect(jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))) @AT@ 5401 @LENGTH@ 94
------------INS MethodInvocation@@jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation"))) @TO@ SimpleName@@MethodName:andExpect:[jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation")))] @AT@ 5416 @LENGTH@ 78
---------------INS SimpleName@@MethodName:jsonPath:[jsonPath, allOf(containsString("alps"),endsWith("-representation"))] @TO@ MethodInvocation@@jsonPath(jsonPath,allOf(containsString("alps"),endsWith("-representation"))) @AT@ 5416 @LENGTH@ 78
------------------INS SimpleName@@jsonPath @TO@ SimpleName@@MethodName:jsonPath:[jsonPath, allOf(containsString("alps"),endsWith("-representation"))] @AT@ 5425 @LENGTH@ 8
------------------INS MethodInvocation@@allOf(containsString("alps"),endsWith("-representation")) @TO@ SimpleName@@MethodName:jsonPath:[jsonPath, allOf(containsString("alps"),endsWith("-representation"))] @AT@ 5435 @LENGTH@ 58
---------------------INS SimpleName@@MethodName:allOf:[containsString("alps"), endsWith("-representation")] @TO@ MethodInvocation@@allOf(containsString("alps"),endsWith("-representation")) @AT@ 5435 @LENGTH@ 58
------------------------INS MethodInvocation@@containsString("alps") @TO@ SimpleName@@MethodName:allOf:[containsString("alps"), endsWith("-representation")] @AT@ 5441 @LENGTH@ 22
---------------------------INS SimpleName@@MethodName:containsString:["alps"] @TO@ MethodInvocation@@containsString("alps") @AT@ 5441 @LENGTH@ 22
------------------------------INS StringLiteral@@"alps" @TO@ SimpleName@@MethodName:containsString:["alps"] @AT@ 5456 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:containsString:["alps"] @TO@ MethodInvocation@@containsString("alps") @AT@ 5441 @LENGTH@ 22
------------------------------INS StringLiteral@@"alps" @TO@ SimpleName@@MethodName:containsString:["alps"] @AT@ 5456 @LENGTH@ 6
------------------------INS MethodInvocation@@endsWith("-representation") @TO@ SimpleName@@MethodName:allOf:[containsString("alps"), endsWith("-representation")] @AT@ 5465 @LENGTH@ 27
---------------------------INS SimpleName@@MethodName:endsWith:["-representation"] @TO@ MethodInvocation@@endsWith("-representation") @AT@ 5465 @LENGTH@ 27
------------------------------INS StringLiteral@@"-representation" @TO@ SimpleName@@MethodName:endsWith:["-representation"] @AT@ 5474 @LENGTH@ 17
---------------------------INS SimpleName@@MethodName:endsWith:["-representation"] @TO@ MethodInvocation@@endsWith("-representation") @AT@ 5465 @LENGTH@ 27
------------------------------INS StringLiteral@@"-representation" @TO@ SimpleName@@MethodName:endsWith:["-representation"] @AT@ 5474 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:connection.setUseCaches(false) @TO@ MethodDeclaration@@protected, void, MethodName:prepareConnection, HttpURLConnection connection, String httpMethod, IOException,  @AT@ 3676 @LENGTH@ 31
---INS MethodInvocation@@connection.setUseCaches(false) @TO@ ExpressionStatement@@MethodInvocation:connection.setUseCaches(false) @AT@ 3676 @LENGTH@ 30
------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.setUseCaches(false) @AT@ 3676 @LENGTH@ 10
------INS SimpleName@@MethodName:setUseCaches:[false] @TO@ MethodInvocation@@connection.setUseCaches(false) @AT@ 3687 @LENGTH@ 19
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setUseCaches:[false] @AT@ 3700 @LENGTH@ 5


UPD FieldDeclaration@@String, [docHeader="doc"] @TO@ String, [DOC_HEADER="CamelXmppDoc"] @AT@ 1191 @LENGTH@ 25
---UPD VariableDeclarationFragment@@docHeader="doc" @TO@ DOC_HEADER="CamelXmppDoc" @AT@ 1198 @LENGTH@ 17
------UPD SimpleName@@docHeader @TO@ DOC_HEADER @AT@ 1198 @LENGTH@ 9
------UPD StringLiteral@@"doc" @TO@ "CamelXmppDoc" @AT@ 1210 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:sb.append("(" + m.getOptions() + ")") @TO@ MethodInvocation:sb.append("(").append(m.getOptions()).append(")") @AT@ 2460 @LENGTH@ 38
---UPD MethodInvocation@@sb.append("(" + m.getOptions() + ")") @TO@ sb.append("(").append(m.getOptions()).append(")") @AT@ 2460 @LENGTH@ 37
------INS MethodInvocation@@MethodName:append:["("] @TO@ MethodInvocation@@sb.append("(" + m.getOptions() + ")") @AT@ 2460 @LENGTH@ 14
---------INS StringLiteral@@"(" @TO@ MethodInvocation@@MethodName:append:["("] @AT@ 2470 @LENGTH@ 3
------INS MethodInvocation@@MethodName:append:[m.getOptions()] @TO@ MethodInvocation@@sb.append("(" + m.getOptions() + ")") @AT@ 2460 @LENGTH@ 37
---------INS MethodInvocation@@m.getOptions() @TO@ MethodInvocation@@MethodName:append:[m.getOptions()] @AT@ 2482 @LENGTH@ 14
------------MOV SimpleName@@Name:m @TO@ MethodInvocation@@m.getOptions() @AT@ 2476 @LENGTH@ 1
------------MOV SimpleName@@Name:m @TO@ MethodInvocation@@m.getOptions() @AT@ 2476 @LENGTH@ 1
------------MOV SimpleName@@MethodName:getOptions:[] @TO@ MethodInvocation@@m.getOptions() @AT@ 2478 @LENGTH@ 12
------------MOV SimpleName@@MethodName:getOptions:[] @TO@ MethodInvocation@@m.getOptions() @AT@ 2478 @LENGTH@ 12
------DEL SimpleName@@MethodName:append:["(" + m.getOptions() + ")"] @AT@ 2463 @LENGTH@ 34
---------DEL InfixExpression@@"(" + m.getOptions() + ")" @AT@ 2470 @LENGTH@ 26
------------DEL StringLiteral@@"(" @AT@ 2470 @LENGTH@ 3
------------DEL Operator@@+ @AT@ 2473 @LENGTH@ 1
------------DEL MethodInvocation@@m.getOptions() @AT@ 2476 @LENGTH@ 14
------------DEL StringLiteral@@")" @AT@ 2493 @LENGTH@ 3
------INS SimpleName@@MethodName:append:[")"] @TO@ MethodInvocation@@sb.append("(" + m.getOptions() + ")") @AT@ 2498 @LENGTH@ 11
---------INS StringLiteral@@")" @TO@ SimpleName@@MethodName:append:[")"] @AT@ 2505 @LENGTH@ 3


UPD VariableDeclarationStatement@@List<InetSocketTransportAddress> addressesTrAd=new ArrayList<>(addressesStr.size()); @TO@ List<InetSocketTransportAddress> addressesTrAd=new ArrayList(addressesStr.size()); @AT@ 6665 @LENGTH@ 86
---UPD VariableDeclarationFragment@@addressesTrAd=new ArrayList<>(addressesStr.size()) @TO@ addressesTrAd=new ArrayList(addressesStr.size()) @AT@ 6698 @LENGTH@ 52
------UPD ClassInstanceCreation@@ArrayList<>[addressesStr.size()] @TO@ ArrayList[addressesStr.size()] @AT@ 6714 @LENGTH@ 36
---------DEL ParameterizedType@@ArrayList<> @AT@ 6718 @LENGTH@ 11
------------DEL SimpleType@@ArrayList @AT@ 6718 @LENGTH@ 9
---------INS SimpleType@@ArrayList @TO@ ClassInstanceCreation@@ArrayList<>[addressesStr.size()] @AT@ 6718 @LENGTH@ 9


UPD VariableDeclarationStatement@@int before=new File("target/test").list().length; @TO@ String[] beforeFiles=new File("target/test").list(); @AT@ 9413 @LENGTH@ 51
---INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9413 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9413 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 9413 @LENGTH@ 3
---UPD VariableDeclarationFragment@@before=new File("target/test").list().length @TO@ beforeFiles=new File("target/test").list() @AT@ 9417 @LENGTH@ 46
------UPD SimpleName@@before @TO@ beforeFiles @AT@ 9417 @LENGTH@ 6
------DEL FieldAccess@@new File("target/test").list().length @AT@ 9426 @LENGTH@ 37
---------DEL SimpleName@@length @AT@ 9457 @LENGTH@ 6
------MOV MethodInvocation@@new File("target/test").list() @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9426 @LENGTH@ 30


UPD ReturnStatement@@MethodInvocation:factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ MethodInvocation:factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2726 @LENGTH@ 110
---UPD MethodInvocation@@factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2733 @LENGTH@ 102
------UPD SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @TO@ MethodName:createSaslServer:["GSSAPI", "sasl", TEST_SERVER_1, props, new AuthorizeOnlyCallbackHandler()] @AT@ 2741 @LENGTH@ 94
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @AT@ 2774 @LENGTH@ 13
---------DEL StringLiteral@@"test_server_1" @AT@ 2776 @LENGTH@ 15


DEL MethodDeclaration@@public, static, boolean, MethodName:isTraceDataEnabled,  @AT@ 1171 @LENGTH@ 66
---DEL Modifier@@public @AT@ 1171 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1178 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 1185 @LENGTH@ 7
---DEL SimpleName@@MethodName:isTraceDataEnabled @AT@ 1193 @LENGTH@ 18
---DEL ReturnStatement@@BooleanLiteral:false @AT@ 1220 @LENGTH@ 13
------DEL BooleanLiteral@@false @AT@ 1227 @LENGTH@ 5


MOV IfStatement@@if (exchange.hasOut()) {  msg=exchange.getOut();} else {  msg=exchange.getIn();} @TO@ MethodDeclaration@@public, void, MethodName:handleDelivery, String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body, IOException,  @AT@ 6425 @LENGTH@ 140


UPD EnhancedForStatement@@for (AggrColStatsCached candidate : candidates) {  if ((float)Math.abs((candidate.getNumPartsCached() - numPartsRequested) / numPartsRequested) > maxVariance) {    candidateMatchStats.put(candidate,new MatchStats(0,0,true));  }  if (isExpired(candidate)) {    candidateMatchStats.put(candidate,new MatchStats(0,0,true));  }  candidateMatchStats.put(candidate,new MatchStats(0,0,false));} @TO@ for (AggrColStatsCached candidate : candidates) {  if ((float)Math.abs((candidate.getNumPartsCached() - numPartsRequested) / numPartsRequested) > maxVariance) {    candidateMatchStats.put(candidate,new MatchStats(0,0,true));    continue;  }  if (isExpired(candidate)) {    candidateMatchStats.put(candidate,new MatchStats(0,0,true));  } else {    candidateMatchStats.put(candidate,new MatchStats(0,0,false));  }} @AT@ 8189 @LENGTH@ 490
---UPD IfStatement@@if ((float)Math.abs((candidate.getNumPartsCached() - numPartsRequested) / numPartsRequested) > maxVariance) {  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} @TO@ if ((float)Math.abs((candidate.getNumPartsCached() - numPartsRequested) / numPartsRequested) > maxVariance) {  candidateMatchStats.put(candidate,new MatchStats(0,0,true));  continue;} @AT@ 8269 @LENGTH@ 200
------UPD Block@@ThenBody:{  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} @TO@ ThenBody:{  candidateMatchStats.put(candidate,new MatchStats(0,0,true));  continue;} @AT@ 8388 @LENGTH@ 81
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} @AT@ 8470 @LENGTH@ 9
---UPD IfStatement@@if (isExpired(candidate)) {  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} @TO@ if (isExpired(candidate)) {  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} else {  candidateMatchStats.put(candidate,new MatchStats(0,0,false));} @AT@ 8495 @LENGTH@ 107
------INS Block@@ElseBody:{  candidateMatchStats.put(candidate,new MatchStats(0,0,false));} @TO@ IfStatement@@if (isExpired(candidate)) {  candidateMatchStats.put(candidate,new MatchStats(0,0,true));} @AT@ 8632 @LENGTH@ 82
---------MOV ExpressionStatement@@MethodInvocation:candidateMatchStats.put(candidate,new MatchStats(0,0,false)) @TO@ Block@@ElseBody:{  candidateMatchStats.put(candidate,new MatchStats(0,0,false));} @AT@ 8609 @LENGTH@ 64


UPD ExpressionStatement@@MethodInvocation:assertThat(result.get("totalValue"),is(equalTo((Object)42.0))) @TO@ MethodInvocation:assertThat(result.get("totalValue"),is(equalTo((Object)100.0))) @AT@ 38781 @LENGTH@ 65
---UPD MethodInvocation@@assertThat(result.get("totalValue"),is(equalTo((Object)42.0))) @TO@ assertThat(result.get("totalValue"),is(equalTo((Object)100.0))) @AT@ 38781 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertThat:[result.get("totalValue"), is(equalTo((Object)42.0))] @TO@ MethodName:assertThat:[result.get("totalValue"), is(equalTo((Object)100.0))] @AT@ 38781 @LENGTH@ 64
---------UPD MethodInvocation@@is(equalTo((Object)42.0)) @TO@ is(equalTo((Object)100.0)) @AT@ 38818 @LENGTH@ 26
------------UPD SimpleName@@MethodName:is:[equalTo((Object)42.0)] @TO@ MethodName:is:[equalTo((Object)100.0)] @AT@ 38818 @LENGTH@ 26
---------------UPD MethodInvocation@@equalTo((Object)42.0) @TO@ equalTo((Object)100.0) @AT@ 38821 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------UPD SimpleName@@MethodName:is:[equalTo((Object)42.0)] @TO@ MethodName:is:[equalTo((Object)100.0)] @AT@ 38818 @LENGTH@ 26
---------------UPD MethodInvocation@@equalTo((Object)42.0) @TO@ equalTo((Object)100.0) @AT@ 38821 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4
------------------UPD SimpleName@@MethodName:equalTo:[(Object)42.0] @TO@ MethodName:equalTo:[(Object)100.0] @AT@ 38821 @LENGTH@ 22
---------------------UPD CastExpression@@(Object)42.0 @TO@ (Object)100.0 @AT@ 38829 @LENGTH@ 13
------------------------UPD NumberLiteral@@42.0 @TO@ 100.0 @AT@ 38838 @LENGTH@ 4


INS MethodDeclaration@@public, boolean, MethodName:hasContiguousNext,  @TO@ TypeDeclaration@@[public]DiskRangeList, DiskRange @AT@ 3233 @LENGTH@ 87
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:hasContiguousNext,  @AT@ 3233 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:hasContiguousNext,  @AT@ 3240 @LENGTH@ 7
---INS SimpleName@@MethodName:hasContiguousNext @TO@ MethodDeclaration@@public, boolean, MethodName:hasContiguousNext,  @AT@ 3248 @LENGTH@ 17
---INS ReturnStatement@@InfixExpression:next != null && end == next.offset @TO@ MethodDeclaration@@public, boolean, MethodName:hasContiguousNext,  @AT@ 3274 @LENGTH@ 42
------INS InfixExpression@@next != null && end == next.offset @TO@ ReturnStatement@@InfixExpression:next != null && end == next.offset @AT@ 3281 @LENGTH@ 34
---------INS InfixExpression@@next != null @TO@ InfixExpression@@next != null && end == next.offset @AT@ 3281 @LENGTH@ 12
------------INS SimpleName@@next @TO@ InfixExpression@@next != null @AT@ 3281 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@next != null @AT@ 3285 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@next != null @AT@ 3289 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@next != null && end == next.offset @AT@ 3293 @LENGTH@ 2
---------INS InfixExpression@@end == next.offset @TO@ InfixExpression@@next != null && end == next.offset @AT@ 3297 @LENGTH@ 18
------------INS SimpleName@@end @TO@ InfixExpression@@end == next.offset @AT@ 3297 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@end == next.offset @AT@ 3300 @LENGTH@ 2
------------INS QualifiedName@@next.offset @TO@ InfixExpression@@end == next.offset @AT@ 3304 @LENGTH@ 11
---------------INS SimpleName@@next @TO@ QualifiedName@@next.offset @AT@ 3304 @LENGTH@ 4
---------------INS SimpleName@@offset @TO@ QualifiedName@@next.offset @AT@ 3309 @LENGTH@ 6


DEL VariableDeclarationStatement@@int ITERATIONS=200; @AT@ 4094 @LENGTH@ 21
---DEL PrimitiveType@@int @AT@ 4094 @LENGTH@ 3
---DEL VariableDeclarationFragment@@ITERATIONS=200 @AT@ 4098 @LENGTH@ 16
------DEL SimpleName@@ITERATIONS @AT@ 4098 @LENGTH@ 10
------DEL NumberLiteral@@200 @AT@ 4111 @LENGTH@ 3


UPD IfStatement@@if (prop.property.isCollectionLike()) {  Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    coll=(Collection<Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    coll.add(propVal);  }  prop.accessor.setProperty(prop.property,coll);} else if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (incoming.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @TO@ if (prop.property.isCollectionLike()) {  Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    coll=(Collection<Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    coll.add(propVal);  }  prop.accessor.setProperty(prop.property,coll);} else if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (source.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @AT@ 12432 @LENGTH@ 1687
---UPD Block@@ThenBody:{  Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    coll=(Collection<Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    coll.add(propVal);  }  prop.accessor.setProperty(prop.property,coll);} @TO@ ThenBody:{  Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    coll=(Collection<Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    coll.add(propVal);  }  prop.accessor.setProperty(prop.property,coll);} @AT@ 12470 @LENGTH@ 500
------UPD EnhancedForStatement@@for (Link l : incoming.getLinks()) {  Object propVal=loadPropertyValue(prop.propertyType,l);  coll.add(propVal);} @TO@ for (Link l : source.getLinks()) {  Object propVal=loadPropertyValue(prop.propertyType,l);  coll.add(propVal);} @AT@ 12777 @LENGTH@ 132
---------UPD MethodInvocation@@incoming.getLinks() @TO@ source.getLinks() @AT@ 12791 @LENGTH@ 19
------------UPD SimpleName@@Name:incoming @TO@ Name:source @AT@ 12791 @LENGTH@ 8
---UPD Block@@ElseBody:if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (incoming.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @TO@ ElseBody:if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (source.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @AT@ 12976 @LENGTH@ 1143
------UPD IfStatement@@if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (incoming.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @TO@ if (prop.property.isMap()) {  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} else {  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (source.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @AT@ 12976 @LENGTH@ 1143
---------UPD Block@@ThenBody:{  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : incoming.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} @TO@ ThenBody:{  Map<String,Object> m=CollectionFactory.createMap(propertyType,0);  if (HttpMethod.PATCH.equals(requestMethod)) {    m=(Map<String,Object>)prop.propertyValue;  }  for (  Link l : source.getLinks()) {    Object propVal=loadPropertyValue(prop.propertyType,l);    m.put(l.getRel(),propVal);  }  prop.accessor.setProperty(prop.property,m);} @AT@ 13003 @LENGTH@ 495
------------UPD EnhancedForStatement@@for (Link l : incoming.getLinks()) {  Object propVal=loadPropertyValue(prop.propertyType,l);  m.put(l.getRel(),propVal);} @TO@ for (Link l : source.getLinks()) {  Object propVal=loadPropertyValue(prop.propertyType,l);  m.put(l.getRel(),propVal);} @AT@ 13299 @LENGTH@ 141
---------------UPD MethodInvocation@@incoming.getLinks() @TO@ source.getLinks() @AT@ 13313 @LENGTH@ 19
------------------UPD SimpleName@@Name:incoming @TO@ Name:source @AT@ 13313 @LENGTH@ 8
---------UPD Block@@ElseBody:{  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (incoming.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @TO@ ElseBody:{  if (HttpMethod.PATCH.equals(requestMethod)) {    throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");  }  if (source.getLinks().size() != 1) {    throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");  }  Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));  prop.accessor.setProperty(prop.property,propVal);} @AT@ 13504 @LENGTH@ 615
------------UPD IfStatement@@if (incoming.getLinks().size() != 1) {  throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");} @TO@ if (source.getLinks().size() != 1) {  throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");} @AT@ 13788 @LENGTH@ 180
---------------UPD InfixExpression@@incoming.getLinks().size() != 1 @TO@ source.getLinks().size() != 1 @AT@ 13792 @LENGTH@ 31
------------------UPD MethodInvocation@@incoming.getLinks().size() @TO@ source.getLinks().size() @AT@ 13792 @LENGTH@ 26
---------------------UPD SimpleName@@Name:incoming @TO@ Name:source @AT@ 13792 @LENGTH@ 8
------------UPD VariableDeclarationStatement@@Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0)); @TO@ Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0)); @AT@ 13975 @LENGTH@ 82
---------------UPD VariableDeclarationFragment@@propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0)) @TO@ propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0)) @AT@ 13982 @LENGTH@ 74
------------------UPD MethodInvocation@@loadPropertyValue(prop.propertyType,incoming.getLinks().get(0)) @TO@ loadPropertyValue(prop.propertyType,source.getLinks().get(0)) @AT@ 13992 @LENGTH@ 64
---------------------UPD SimpleName@@MethodName:loadPropertyValue:[prop.propertyType, incoming.getLinks().get(0)] @TO@ MethodName:loadPropertyValue:[prop.propertyType, source.getLinks().get(0)] @AT@ 13992 @LENGTH@ 64
------------------------UPD MethodInvocation@@incoming.getLinks().get(0) @TO@ source.getLinks().get(0) @AT@ 14029 @LENGTH@ 26
---------------------------UPD SimpleName@@Name:incoming @TO@ Name:source @AT@ 14029 @LENGTH@ 8
---------------------UPD SimpleName@@MethodName:loadPropertyValue:[prop.propertyType, incoming.getLinks().get(0)] @TO@ MethodName:loadPropertyValue:[prop.propertyType, source.getLinks().get(0)] @AT@ 13992 @LENGTH@ 64
------------------------UPD MethodInvocation@@incoming.getLinks().get(0) @TO@ source.getLinks().get(0) @AT@ 14029 @LENGTH@ 26
---------------------------UPD SimpleName@@Name:incoming @TO@ Name:source @AT@ 14029 @LENGTH@ 8


INS MethodDeclaration@@Person, MethodName:findByAge, Integer age,  @TO@ TypeDeclaration@@Repo, [MongoRepository<Person,Long>] @AT@ 6777 @LENGTH@ 23
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findByAge, Integer age,  @AT@ 6770 @LENGTH@ 6
---INS SimpleName@@MethodName:findByAge @TO@ MethodDeclaration@@Person, MethodName:findByAge, Integer age,  @AT@ 6777 @LENGTH@ 9
---INS SingleVariableDeclaration@@Integer age @TO@ MethodDeclaration@@Person, MethodName:findByAge, Integer age,  @AT@ 6787 @LENGTH@ 11
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer age @AT@ 6787 @LENGTH@ 7
------INS SimpleName@@age @TO@ SingleVariableDeclaration@@Integer age @AT@ 6795 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:endpoints.clientDetailsService(clientDetailsService) @TO@ MethodInvocation:endpoints.setClientDetailsService(clientDetailsService) @AT@ 3682 @LENGTH@ 53
---UPD MethodInvocation@@endpoints.clientDetailsService(clientDetailsService) @TO@ endpoints.setClientDetailsService(clientDetailsService) @AT@ 3682 @LENGTH@ 52
------UPD SimpleName@@MethodName:clientDetailsService:[clientDetailsService] @TO@ MethodName:setClientDetailsService:[clientDetailsService] @AT@ 3692 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:endpoint.setName(remaining) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1486 @LENGTH@ 28
---INS MethodInvocation@@endpoint.setName(remaining) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setName(remaining) @AT@ 1486 @LENGTH@ 27
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setName(remaining) @AT@ 1486 @LENGTH@ 8
------INS SimpleName@@MethodName:setName:[remaining] @TO@ MethodInvocation@@endpoint.setName(remaining) @AT@ 1495 @LENGTH@ 18
---------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:setName:[remaining] @AT@ 1503 @LENGTH@ 9


INS FieldDeclaration@@private, boolean, [skip] @TO@ TypeDeclaration@@[@Mojo(name="shutdown"), public]ShutdownMojo, AbstractServerConnection @AT@ 2196 @LENGTH@ 21
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 2196 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 2204 @LENGTH@ 7
---INS VariableDeclarationFragment@@skip @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 2212 @LENGTH@ 4
------INS SimpleName@@skip @TO@ VariableDeclarationFragment@@skip @AT@ 2212 @LENGTH@ 4


UPD TryStatement@@try {  psSelect.setLong(1,id);  ResultSet rs=psSelect.executeQuery();  if (!rs.next())   throw new IllegalArgumentException("can't find account " + id);  balance=rs.getDouble(1);  PreparedStatement ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");  try {    beginTx();    try {      balance-=a1;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("first update failed");      commitTx();    }  finally {      rollbackTxIfNeeded();    }    beginTx();    try {      balance-=a2;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("second update failed");    }  finally {      rollbackTx();    }  }  finally {    ps.close();  }  return balance;}  finally {  psSelect.close();  conn.close();} @TO@ try {  psSelect.setLong(1,id);  ResultSet rs=psSelect.executeQuery();  if (!rs.next())   throw new IllegalArgumentException("can't find account " + id);  balance=rs.getDouble(1);  rs.close();  psSelect.close();  PreparedStatement ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");  try {    beginTx();    try {      balance-=a1;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("first update failed");      ps.close();      conn.close();      commitTx();    }  finally {      rollbackTxIfNeeded();    }    conn=ds.getConnection();    ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");    beginTx();    try {      balance-=a2;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("second update failed");    }  finally {      rollbackTx();    }  }  finally {    ps.close();  }  return balance;}  finally {  conn.close();} @AT@ 4793 @LENGTH@ 1571
---INS ExpressionStatement@@MethodInvocation:rs.close() @TO@ TryStatement@@try {  psSelect.setLong(1,id);  ResultSet rs=psSelect.executeQuery();  if (!rs.next())   throw new IllegalArgumentException("can't find account " + id);  balance=rs.getDouble(1);  PreparedStatement ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");  try {    beginTx();    try {      balance-=a1;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("first update failed");      commitTx();    }  finally {      rollbackTxIfNeeded();    }    beginTx();    try {      balance-=a2;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("second update failed");    }  finally {      rollbackTx();    }  }  finally {    ps.close();  }  return balance;}  finally {  psSelect.close();  conn.close();} @AT@ 5072 @LENGTH@ 11
------INS MethodInvocation@@rs.close() @TO@ ExpressionStatement@@MethodInvocation:rs.close() @AT@ 5072 @LENGTH@ 10
---------INS SimpleName@@Name:rs @TO@ MethodInvocation@@rs.close() @AT@ 5072 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@rs.close() @AT@ 5075 @LENGTH@ 7
---UPD TryStatement@@try {  beginTx();  try {    balance-=a1;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("first update failed");    commitTx();  }  finally {    rollbackTxIfNeeded();  }  beginTx();  try {    balance-=a2;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("second update failed");  }  finally {    rollbackTx();  }}  finally {  ps.close();} @TO@ try {  beginTx();  try {    balance-=a1;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("first update failed");    ps.close();    conn.close();    commitTx();  }  finally {    rollbackTxIfNeeded();  }  conn=ds.getConnection();  ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");  beginTx();  try {    balance-=a2;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("second update failed");  }  finally {    rollbackTx();  }}  finally {  ps.close();} @AT@ 5181 @LENGTH@ 1048
------UPD TryStatement@@try {  balance-=a1;  ps.setDouble(1,balance);  ps.setLong(2,id);  int rows=ps.executeUpdate();  if (rows != 1)   throw new IllegalStateException("first update failed");  commitTx();}  finally {  rollbackTxIfNeeded();} @TO@ try {  balance-=a1;  ps.setDouble(1,balance);  ps.setLong(2,id);  int rows=ps.executeUpdate();  if (rows != 1)   throw new IllegalStateException("first update failed");  ps.close();  conn.close();  commitTx();}  finally {  rollbackTxIfNeeded();} @AT@ 5238 @LENGTH@ 452
---------INS ExpressionStatement@@MethodInvocation:ps.close() @TO@ TryStatement@@try {  balance-=a1;  ps.setDouble(1,balance);  ps.setLong(2,id);  int rows=ps.executeUpdate();  if (rows != 1)   throw new IllegalStateException("first update failed");  commitTx();}  finally {  rollbackTxIfNeeded();} @AT@ 5642 @LENGTH@ 11
------------INS MethodInvocation@@ps.close() @TO@ ExpressionStatement@@MethodInvocation:ps.close() @AT@ 5642 @LENGTH@ 10
---------------INS SimpleName@@Name:ps @TO@ MethodInvocation@@ps.close() @AT@ 5642 @LENGTH@ 2
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@ps.close() @AT@ 5645 @LENGTH@ 7
---------INS ExpressionStatement@@MethodInvocation:conn.close() @TO@ TryStatement@@try {  balance-=a1;  ps.setDouble(1,balance);  ps.setLong(2,id);  int rows=ps.executeUpdate();  if (rows != 1)   throw new IllegalStateException("first update failed");  commitTx();}  finally {  rollbackTxIfNeeded();} @AT@ 5678 @LENGTH@ 13
------------INS MethodInvocation@@conn.close() @TO@ ExpressionStatement@@MethodInvocation:conn.close() @AT@ 5678 @LENGTH@ 12
---------------INS SimpleName@@Name:conn @TO@ MethodInvocation@@conn.close() @AT@ 5678 @LENGTH@ 4
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@conn.close() @AT@ 5683 @LENGTH@ 7
------INS ExpressionStatement@@Assignment:conn=ds.getConnection() @TO@ TryStatement@@try {  beginTx();  try {    balance-=a1;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("first update failed");    commitTx();  }  finally {    rollbackTxIfNeeded();  }  beginTx();  try {    balance-=a2;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("second update failed");  }  finally {    rollbackTx();  }}  finally {  ps.close();} @AT@ 5850 @LENGTH@ 26
---------INS Assignment@@conn=ds.getConnection() @TO@ ExpressionStatement@@Assignment:conn=ds.getConnection() @AT@ 5850 @LENGTH@ 25
------------INS SimpleName@@conn @TO@ Assignment@@conn=ds.getConnection() @AT@ 5850 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@conn=ds.getConnection() @AT@ 5854 @LENGTH@ 1
------------INS MethodInvocation@@ds.getConnection() @TO@ Assignment@@conn=ds.getConnection() @AT@ 5857 @LENGTH@ 18
---------------INS SimpleName@@Name:ds @TO@ MethodInvocation@@ds.getConnection() @AT@ 5857 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@ds.getConnection() @AT@ 5860 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @TO@ TryStatement@@try {  beginTx();  try {    balance-=a1;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("first update failed");    commitTx();  }  finally {    rollbackTxIfNeeded();  }  beginTx();  try {    balance-=a2;    ps.setDouble(1,balance);    ps.setLong(2,id);    int rows=ps.executeUpdate();    if (rows != 1)     throw new IllegalStateException("second update failed");  }  finally {    rollbackTx();  }}  finally {  ps.close();} @AT@ 5897 @LENGTH@ 74
---------INS Assignment@@ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @TO@ ExpressionStatement@@Assignment:ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5897 @LENGTH@ 73
------------INS SimpleName@@ps @TO@ Assignment@@ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5897 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5899 @LENGTH@ 1
------------INS MethodInvocation@@conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @TO@ Assignment@@ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5902 @LENGTH@ 68
---------------INS SimpleName@@Name:conn @TO@ MethodInvocation@@conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5902 @LENGTH@ 4
---------------INS SimpleName@@MethodName:prepareStatement:["UPDATE account SET balance = ? WHERE id = ?"] @TO@ MethodInvocation@@conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?") @AT@ 5907 @LENGTH@ 63
------------------INS StringLiteral@@"UPDATE account SET balance = ? WHERE id = ?" @TO@ SimpleName@@MethodName:prepareStatement:["UPDATE account SET balance = ? WHERE id = ?"] @AT@ 5924 @LENGTH@ 45
---UPD Block@@FinallyBody:{  psSelect.close();  conn.close();} @TO@ FinallyBody:{  conn.close();} @AT@ 6285 @LENGTH@ 79
---MOV ExpressionStatement@@MethodInvocation:psSelect.close() @TO@ TryStatement@@try {  psSelect.setLong(1,id);  ResultSet rs=psSelect.executeQuery();  if (!rs.next())   throw new IllegalArgumentException("can't find account " + id);  balance=rs.getDouble(1);  PreparedStatement ps=conn.prepareStatement("UPDATE account SET balance = ? WHERE id = ?");  try {    beginTx();    try {      balance-=a1;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("first update failed");      commitTx();    }  finally {      rollbackTxIfNeeded();    }    beginTx();    try {      balance-=a2;      ps.setDouble(1,balance);      ps.setLong(2,id);      int rows=ps.executeUpdate();      if (rows != 1)       throw new IllegalStateException("second update failed");    }  finally {      rollbackTx();    }  }  finally {    ps.close();  }  return balance;}  finally {  psSelect.close();  conn.close();} @AT@ 6303 @LENGTH@ 17


UPD IfStatement@@if (m == Mode.PARTIAL2 || m == Mode.FINAL) {  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector;  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} else {  inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector;  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @TO@ if (m == Mode.PARTIAL2 || m == Mode.FINAL) {  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} else {  inputOI=(PrimitiveObjectInspector)parameters[0];  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @AT@ 4127 @LENGTH@ 747
---UPD Block@@ThenBody:{  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector;  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @TO@ ThenBody:{  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @AT@ 4170 @LENGTH@ 352
------UPD ExpressionStatement@@Assignment:inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @TO@ Assignment:inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector() @AT@ 4251 @LENGTH@ 70
---------UPD Assignment@@inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @TO@ inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector() @AT@ 4251 @LENGTH@ 69
------------INS CastExpression@@(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector() @TO@ Assignment@@inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @AT@ 4261 @LENGTH@ 73
---------------INS SimpleType@@PrimitiveObjectInspector @TO@ CastExpression@@(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector() @AT@ 4262 @LENGTH@ 24
---------------INS MethodInvocation@@internalMergeOI.getListElementObjectInspector() @TO@ CastExpression@@(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector() @AT@ 4287 @LENGTH@ 47
------------------INS SimpleName@@Name:internalMergeOI @TO@ MethodInvocation@@internalMergeOI.getListElementObjectInspector() @AT@ 4287 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getListElementObjectInspector:[] @TO@ MethodInvocation@@internalMergeOI.getListElementObjectInspector() @AT@ 4303 @LENGTH@ 31
------------DEL QualifiedName@@PrimitiveObjectInspectorFactory.writableByteObjectInspector @AT@ 4261 @LENGTH@ 59
---------------DEL SimpleName@@PrimitiveObjectInspectorFactory @AT@ 4261 @LENGTH@ 31
---------------DEL SimpleName@@writableByteObjectInspector @AT@ 4293 @LENGTH@ 27
---UPD Block@@ElseBody:{  inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector;  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @TO@ ElseBody:{  inputOI=(PrimitiveObjectInspector)parameters[0];  loi=(StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(PrimitiveObjectInspectorFactory.writableLongObjectInspector);  return loi;} @AT@ 4528 @LENGTH@ 346
------UPD ExpressionStatement@@Assignment:inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @TO@ Assignment:inputOI=(PrimitiveObjectInspector)parameters[0] @AT@ 4603 @LENGTH@ 70
---------UPD Assignment@@inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @TO@ inputOI=(PrimitiveObjectInspector)parameters[0] @AT@ 4603 @LENGTH@ 69
------------DEL QualifiedName@@PrimitiveObjectInspectorFactory.writableByteObjectInspector @AT@ 4613 @LENGTH@ 59
---------------DEL SimpleName@@PrimitiveObjectInspectorFactory @AT@ 4613 @LENGTH@ 31
---------------DEL SimpleName@@writableByteObjectInspector @AT@ 4645 @LENGTH@ 27
------------INS CastExpression@@(PrimitiveObjectInspector)parameters[0] @TO@ Assignment@@inputOI=PrimitiveObjectInspectorFactory.writableByteObjectInspector @AT@ 4627 @LENGTH@ 39
---------------INS SimpleType@@PrimitiveObjectInspector @TO@ CastExpression@@(PrimitiveObjectInspector)parameters[0] @AT@ 4628 @LENGTH@ 24
---------------INS ArrayAccess@@parameters[0] @TO@ CastExpression@@(PrimitiveObjectInspector)parameters[0] @AT@ 4653 @LENGTH@ 13
------------------INS SimpleName@@parameters @TO@ ArrayAccess@@parameters[0] @AT@ 4653 @LENGTH@ 10
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@parameters[0] @AT@ 4664 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:from("linkedin://" + PATH_PREFIX + "/getConnections").to("mock://GETCONNECTIONS") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 22535 @LENGTH@ 103
---INS MethodInvocation@@from("linkedin://" + PATH_PREFIX + "/getConnections").to("mock://GETCONNECTIONS") @TO@ ExpressionStatement@@MethodInvocation:from("linkedin://" + PATH_PREFIX + "/getConnections").to("mock://GETCONNECTIONS") @AT@ 22535 @LENGTH@ 102
------INS MethodInvocation@@MethodName:from:["linkedin://" + PATH_PREFIX + "/getConnections"] @TO@ MethodInvocation@@from("linkedin://" + PATH_PREFIX + "/getConnections").to("mock://GETCONNECTIONS") @AT@ 22535 @LENGTH@ 53
---------INS InfixExpression@@"linkedin://" + PATH_PREFIX + "/getConnections" @TO@ MethodInvocation@@MethodName:from:["linkedin://" + PATH_PREFIX + "/getConnections"] @AT@ 22540 @LENGTH@ 47
------------INS StringLiteral@@"linkedin://" @TO@ InfixExpression@@"linkedin://" + PATH_PREFIX + "/getConnections" @AT@ 22540 @LENGTH@ 13
------------INS Operator@@+ @TO@ InfixExpression@@"linkedin://" + PATH_PREFIX + "/getConnections" @AT@ 22553 @LENGTH@ 1
------------INS SimpleName@@PATH_PREFIX @TO@ InfixExpression@@"linkedin://" + PATH_PREFIX + "/getConnections" @AT@ 22556 @LENGTH@ 11
------------INS StringLiteral@@"/getConnections" @TO@ InfixExpression@@"linkedin://" + PATH_PREFIX + "/getConnections" @AT@ 22570 @LENGTH@ 17
------INS SimpleName@@MethodName:to:["mock://GETCONNECTIONS"] @TO@ MethodInvocation@@from("linkedin://" + PATH_PREFIX + "/getConnections").to("mock://GETCONNECTIONS") @AT@ 22610 @LENGTH@ 27
---------INS StringLiteral@@"mock://GETCONNECTIONS" @TO@ SimpleName@@MethodName:to:["mock://GETCONNECTIONS"] @AT@ 22613 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().expressionHandler(expressionHandler).and().addFilterBefore(resourcesServerFilter,AbstractPreAuthenticatedProcessingFilter.class).exceptionHandling().accessDeniedHandler(accessDeniedHandler) @TO@ MethodInvocation:http.authorizeRequests().expressionHandler(expressionHandler).and().addFilterBefore(resourcesServerFilter,AbstractPreAuthenticatedProcessingFilter.class).exceptionHandling().accessDeniedHandler(accessDeniedHandler).authenticationEntryPoint(authenticationEntryPoint) @AT@ 7489 @LENGTH@ 231
---UPD MethodInvocation@@http.authorizeRequests().expressionHandler(expressionHandler).and().addFilterBefore(resourcesServerFilter,AbstractPreAuthenticatedProcessingFilter.class).exceptionHandling().accessDeniedHandler(accessDeniedHandler) @TO@ http.authorizeRequests().expressionHandler(expressionHandler).and().addFilterBefore(resourcesServerFilter,AbstractPreAuthenticatedProcessingFilter.class).exceptionHandling().accessDeniedHandler(accessDeniedHandler).authenticationEntryPoint(authenticationEntryPoint) @AT@ 7489 @LENGTH@ 230
------INS MethodInvocation@@MethodName:accessDeniedHandler:[accessDeniedHandler] @TO@ MethodInvocation@@http.authorizeRequests().expressionHandler(expressionHandler).and().addFilterBefore(resourcesServerFilter,AbstractPreAuthenticatedProcessingFilter.class).exceptionHandling().accessDeniedHandler(accessDeniedHandler) @AT@ 7512 @LENGTH@ 235
---------INS SimpleName@@accessDeniedHandler @TO@ MethodInvocation@@MethodName:accessDeniedHandler:[accessDeniedHandler] @AT@ 7727 @LENGTH@ 19
------UPD SimpleName@@MethodName:accessDeniedHandler:[accessDeniedHandler] @TO@ MethodName:authenticationEntryPoint:[authenticationEntryPoint] @AT@ 7679 @LENGTH@ 40
---------UPD SimpleName@@accessDeniedHandler @TO@ authenticationEntryPoint @AT@ 7699 @LENGTH@ 19


UPD TypeDeclaration@@[@Transactional, public]DefaultTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, ConsumerTokenServices, InitializingBean] @TO@ [public]DefaultTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, ConsumerTokenServices, InitializingBean] @AT@ 2835 @LENGTH@ 13862
---DEL MarkerAnnotation@@@Transactional @AT@ 2835 @LENGTH@ 14


UPD VariableDeclarationStatement@@List<TransportAddress> addresses=new ArrayList<>(configuration.getTransportAddresses().size()); @TO@ List<TransportAddress> addresses=new ArrayList(configuration.getTransportAddresses().size()); @AT@ 3431 @LENGTH@ 97
---UPD VariableDeclarationFragment@@addresses=new ArrayList<>(configuration.getTransportAddresses().size()) @TO@ addresses=new ArrayList(configuration.getTransportAddresses().size()) @AT@ 3454 @LENGTH@ 73
------UPD ClassInstanceCreation@@ArrayList<>[configuration.getTransportAddresses().size()] @TO@ ArrayList[configuration.getTransportAddresses().size()] @AT@ 3466 @LENGTH@ 61
---------DEL ParameterizedType@@ArrayList<> @AT@ 3470 @LENGTH@ 11
------------DEL SimpleType@@ArrayList @AT@ 3470 @LENGTH@ 9
---------INS SimpleType@@ArrayList @TO@ ClassInstanceCreation@@ArrayList<>[configuration.getTransportAddresses().size()] @AT@ 3470 @LENGTH@ 9


INS FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @TO@ TypeDeclaration@@[public]HdfsConsumerTest, HdfsTestSupport @AT@ 2495 @LENGTH@ 42
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2495 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2503 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2510 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2516 @LENGTH@ 3
---INS VariableDeclarationFragment@@ITERATIONS=200 @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=200] @AT@ 2520 @LENGTH@ 16
------INS SimpleName@@ITERATIONS @TO@ VariableDeclarationFragment@@ITERATIONS=200 @AT@ 2520 @LENGTH@ 10
------INS NumberLiteral@@200 @TO@ VariableDeclarationFragment@@ITERATIONS=200 @AT@ 2533 @LENGTH@ 3


INS MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @TO@ TypeDeclaration@@[public]DatagramPacketDelimiterDecoder, MessageToMessageDecoder<AddressedEnvelope<Object,InetSocketAddress>> @AT@ 1336 @LENGTH@ 135
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1336 @LENGTH@ 6
---INS SimpleName@@MethodName:DatagramPacketDelimiterDecoder @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1343 @LENGTH@ 30
---INS SingleVariableDeclaration@@int maxFrameLength @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1374 @LENGTH@ 18
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int maxFrameLength @AT@ 1374 @LENGTH@ 3
------INS SimpleName@@maxFrameLength @TO@ SingleVariableDeclaration@@int maxFrameLength @AT@ 1378 @LENGTH@ 14
---MOV SingleVariableDeclaration@@ByteBuf[] delimiters @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1394 @LENGTH@ 20
---INS ConstructorInvocation@@this(maxFrameLength,true,delimiters); @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1426 @LENGTH@ 39
------INS SimpleName@@maxFrameLength @TO@ ConstructorInvocation@@this(maxFrameLength,true,delimiters); @AT@ 1431 @LENGTH@ 14
------INS BooleanLiteral@@true @TO@ ConstructorInvocation@@this(maxFrameLength,true,delimiters); @AT@ 1447 @LENGTH@ 4
------INS SimpleName@@delimiters @TO@ ConstructorInvocation@@this(maxFrameLength,true,delimiters); @AT@ 1453 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:endpoint.createDocument() @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 2683 @LENGTH@ 26
---INS MethodInvocation@@endpoint.createDocument() @TO@ ExpressionStatement@@MethodInvocation:endpoint.createDocument() @AT@ 2683 @LENGTH@ 25
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.createDocument() @AT@ 2683 @LENGTH@ 8
------INS SimpleName@@MethodName:createDocument:[] @TO@ MethodInvocation@@endpoint.createDocument() @AT@ 2692 @LENGTH@ 16


UPD ForStatement@@for (Iterator<String> values=param.getValue().iterator(); values.hasNext(); ) {  authUrl.append('&').append(name).append('=').append(formEncode(values.next()));} @TO@ for (Iterator<String> values=param.getValue().iterator(); values.hasNext(); ) {  authUrl.append('&').append(name);  String value=values.next();  if (StringUtils.hasLength(value)) {    authUrl.append('=').append(formEncode(value));  }} @AT@ 12965 @LENGTH@ 169
---DEL ExpressionStatement@@MethodInvocation:authUrl.append('&').append(name).append('=').append(formEncode(values.next())) @AT@ 13050 @LENGTH@ 79
------DEL MethodInvocation@@authUrl.append('&').append(name).append('=').append(formEncode(values.next())) @AT@ 13050 @LENGTH@ 78
---------DEL MethodInvocation@@MethodName:append:[name] @AT@ 13050 @LENGTH@ 32
------------DEL SimpleName@@name @AT@ 13077 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:authUrl.append('&').append(name) @TO@ ForStatement@@for (Iterator<String> values=param.getValue().iterator(); values.hasNext(); ) {  authUrl.append('&').append(name).append('=').append(formEncode(values.next()));} @AT@ 13060 @LENGTH@ 33
------INS MethodInvocation@@authUrl.append('&').append(name) @TO@ ExpressionStatement@@MethodInvocation:authUrl.append('&').append(name) @AT@ 13060 @LENGTH@ 32
---------MOV MethodInvocation@@MethodName:append:['&'] @TO@ MethodInvocation@@authUrl.append('&').append(name) @AT@ 13050 @LENGTH@ 19
---------MOV SimpleName@@Name:authUrl @TO@ MethodInvocation@@authUrl.append('&').append(name) @AT@ 13050 @LENGTH@ 7
---------INS SimpleName@@MethodName:append:[name] @TO@ MethodInvocation@@authUrl.append('&').append(name) @AT@ 13080 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:append:[name] @AT@ 13087 @LENGTH@ 4
---INS VariableDeclarationStatement@@String value=values.next(); @TO@ ForStatement@@for (Iterator<String> values=param.getValue().iterator(); values.hasNext(); ) {  authUrl.append('&').append(name).append('=').append(formEncode(values.next()));} @AT@ 13098 @LENGTH@ 29
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=values.next(); @AT@ 13098 @LENGTH@ 6
------INS VariableDeclarationFragment@@value=values.next() @TO@ VariableDeclarationStatement@@String value=values.next(); @AT@ 13105 @LENGTH@ 21
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=values.next() @AT@ 13105 @LENGTH@ 5
---------INS MethodInvocation@@values.next() @TO@ VariableDeclarationFragment@@value=values.next() @AT@ 13113 @LENGTH@ 13
------------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.next() @AT@ 13113 @LENGTH@ 6
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@values.next() @AT@ 13120 @LENGTH@ 6
---INS IfStatement@@if (StringUtils.hasLength(value)) {  authUrl.append('=').append(formEncode(value));} @TO@ ForStatement@@for (Iterator<String> values=param.getValue().iterator(); values.hasNext(); ) {  authUrl.append('&').append(name).append('=').append(formEncode(values.next()));} @AT@ 13132 @LENGTH@ 93
------INS MethodInvocation@@StringUtils.hasLength(value) @TO@ IfStatement@@if (StringUtils.hasLength(value)) {  authUrl.append('=').append(formEncode(value));} @AT@ 13136 @LENGTH@ 28
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasLength(value) @AT@ 13136 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasLength:[value] @TO@ MethodInvocation@@StringUtils.hasLength(value) @AT@ 13148 @LENGTH@ 16
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:hasLength:[value] @AT@ 13158 @LENGTH@ 5
------INS Block@@ThenBody:{  authUrl.append('=').append(formEncode(value));} @TO@ IfStatement@@if (StringUtils.hasLength(value)) {  authUrl.append('=').append(formEncode(value));} @AT@ 13166 @LENGTH@ 59
---------INS ExpressionStatement@@MethodInvocation:authUrl.append('=').append(formEncode(value)) @TO@ Block@@ThenBody:{  authUrl.append('=').append(formEncode(value));} @AT@ 13173 @LENGTH@ 46
------------INS MethodInvocation@@authUrl.append('=').append(formEncode(value)) @TO@ ExpressionStatement@@MethodInvocation:authUrl.append('=').append(formEncode(value)) @AT@ 13173 @LENGTH@ 45
---------------MOV MethodInvocation@@MethodName:append:['='] @TO@ MethodInvocation@@authUrl.append('=').append(formEncode(value)) @AT@ 13050 @LENGTH@ 44
---------------MOV SimpleName@@MethodName:append:[formEncode(values.next())] @TO@ MethodInvocation@@authUrl.append('=').append(formEncode(value)) @AT@ 13095 @LENGTH@ 33
------------------UPD MethodInvocation@@formEncode(values.next()) @TO@ formEncode(value) @AT@ 13102 @LENGTH@ 25
---------------------UPD SimpleName@@MethodName:formEncode:[values.next()] @TO@ MethodName:formEncode:[value] @AT@ 13102 @LENGTH@ 25
------------------------DEL MethodInvocation@@values.next() @AT@ 13113 @LENGTH@ 13
---------------------------DEL SimpleName@@Name:values @AT@ 13113 @LENGTH@ 6
---------------------------DEL SimpleName@@MethodName:next:[] @AT@ 13120 @LENGTH@ 6
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:formEncode:[values.next()] @AT@ 13211 @LENGTH@ 5
---------------INS SimpleName@@Name:authUrl @TO@ MethodInvocation@@authUrl.append('=').append(formEncode(value)) @AT@ 13173 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractDefaultTokenServicesTests,  @AT@ 5583 @LENGTH@ 867
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5583 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5590 @LENGTH@ 4
---INS SimpleName@@MethodName:testRefreshTokenRequestHasRefreshFlag @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5595 @LENGTH@ 37
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5642 @LENGTH@ 9
---INS VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5656 @LENGTH@ 171
------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @AT@ 5656 @LENGTH@ 26
------INS VariableDeclarationFragment@@expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @TO@ VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @AT@ 5683 @LENGTH@ 143
---------INS SimpleName@@expectedExpiringRefreshToken @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5683 @LENGTH@ 28
---------INS CastExpression@@(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5714 @LENGTH@ 112
------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5715 @LENGTH@ 26
------------INS MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5743 @LENGTH@ 83
---------------INS MethodInvocation@@MethodName:createAccessToken:[createAuthentication()] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5743 @LENGTH@ 65
------------------INS MethodInvocation@@MethodName:createAuthentication:[] @TO@ MethodInvocation@@MethodName:createAccessToken:[createAuthentication()] @AT@ 5785 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5743 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 5809 @LENGTH@ 17
---INS VariableDeclarationStatement@@TokenRequest tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5830 @LENGTH@ 137
------INS SimpleType@@TokenRequest @TO@ VariableDeclarationStatement@@TokenRequest tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null); @AT@ 5830 @LENGTH@ 12
------INS VariableDeclarationFragment@@tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null) @TO@ VariableDeclarationStatement@@TokenRequest tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null); @AT@ 5843 @LENGTH@ 123
---------INS SimpleName@@tokenRequest @TO@ VariableDeclarationFragment@@tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null) @AT@ 5843 @LENGTH@ 12
---------INS ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @TO@ VariableDeclarationFragment@@tokenRequest=new TokenRequest(Collections.singletonMap("client_id","id"),"id",Collections.singleton("read"),null) @AT@ 5858 @LENGTH@ 108
------------INS New@@new @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5858 @LENGTH@ 3
------------INS SimpleType@@TokenRequest @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5862 @LENGTH@ 12
------------INS MethodInvocation@@Collections.singletonMap("client_id","id") @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5875 @LENGTH@ 43
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("client_id","id") @AT@ 5875 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["client_id", "id"] @TO@ MethodInvocation@@Collections.singletonMap("client_id","id") @AT@ 5887 @LENGTH@ 31
------------------INS StringLiteral@@"client_id" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "id"] @AT@ 5900 @LENGTH@ 11
------------------INS StringLiteral@@"id" @TO@ SimpleName@@MethodName:singletonMap:["client_id", "id"] @AT@ 5913 @LENGTH@ 4
------------INS StringLiteral@@"id" @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5920 @LENGTH@ 4
------------INS MethodInvocation@@Collections.singleton("read") @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5930 @LENGTH@ 29
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 5930 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:["read"] @TO@ MethodInvocation@@Collections.singleton("read") @AT@ 5942 @LENGTH@ 17
------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:singleton:["read"] @AT@ 5952 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@TokenRequest[Collections.singletonMap("client_id","id"), "id", Collections.singleton("read"), null] @AT@ 5961 @LENGTH@ 4
---INS VariableDeclarationStatement@@final AtomicBoolean called=new AtomicBoolean(false); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 5970 @LENGTH@ 54
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final AtomicBoolean called=new AtomicBoolean(false); @AT@ 5970 @LENGTH@ 5
------INS SimpleType@@AtomicBoolean @TO@ VariableDeclarationStatement@@final AtomicBoolean called=new AtomicBoolean(false); @AT@ 5976 @LENGTH@ 13
------INS VariableDeclarationFragment@@called=new AtomicBoolean(false) @TO@ VariableDeclarationStatement@@final AtomicBoolean called=new AtomicBoolean(false); @AT@ 5990 @LENGTH@ 33
---------INS SimpleName@@called @TO@ VariableDeclarationFragment@@called=new AtomicBoolean(false) @AT@ 5990 @LENGTH@ 6
---------INS ClassInstanceCreation@@AtomicBoolean[false] @TO@ VariableDeclarationFragment@@called=new AtomicBoolean(false) @AT@ 5999 @LENGTH@ 24
------------INS New@@new @TO@ ClassInstanceCreation@@AtomicBoolean[false] @AT@ 5999 @LENGTH@ 3
------------INS SimpleType@@AtomicBoolean @TO@ ClassInstanceCreation@@AtomicBoolean[false] @AT@ 6003 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@AtomicBoolean[false] @AT@ 6017 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:getTokenServices().setTokenEnhancer(new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 6027 @LENGTH@ 296
------INS MethodInvocation@@getTokenServices().setTokenEnhancer(new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:getTokenServices().setTokenEnhancer(new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
) @AT@ 6027 @LENGTH@ 295
---------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().setTokenEnhancer(new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
) @AT@ 6027 @LENGTH@ 18
---------INS SimpleName@@MethodName:setTokenEnhancer:[new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
] @TO@ MethodInvocation@@getTokenServices().setTokenEnhancer(new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
) @AT@ 6046 @LENGTH@ 276
------------INS ClassInstanceCreation@@TokenEnhancer[] @TO@ SimpleName@@MethodName:setTokenEnhancer:[new TokenEnhancer(){
  @Override public OAuth2AccessToken enhance(  OAuth2AccessToken accessToken,  OAuth2Authentication authentication){
    assertTrue(authentication.getOAuth2Request().isRefresh());
    called.set(true);
    return accessToken;
  }
}
] @AT@ 6063 @LENGTH@ 258
---------------INS New@@new @TO@ ClassInstanceCreation@@TokenEnhancer[] @AT@ 6063 @LENGTH@ 3
---------------INS SimpleType@@TokenEnhancer @TO@ ClassInstanceCreation@@TokenEnhancer[] @AT@ 6067 @LENGTH@ 13
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@TokenEnhancer[] @AT@ 6083 @LENGTH@ 238
------------------INS MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 6101 @LENGTH@ 216
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6101 @LENGTH@ 6
---------------------INS SimpleType@@OAuth2AccessToken @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6108 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:enhance @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6126 @LENGTH@ 7
---------------------INS SingleVariableDeclaration@@OAuth2AccessToken accessToken @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6134 @LENGTH@ 29
------------------------INS SimpleType@@OAuth2AccessToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken accessToken @AT@ 6134 @LENGTH@ 17
------------------------INS SimpleName@@accessToken @TO@ SingleVariableDeclaration@@OAuth2AccessToken accessToken @AT@ 6152 @LENGTH@ 11
---------------------INS SingleVariableDeclaration@@OAuth2Authentication authentication @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6165 @LENGTH@ 35
------------------------INS SimpleType@@OAuth2Authentication @TO@ SingleVariableDeclaration@@OAuth2Authentication authentication @AT@ 6165 @LENGTH@ 20
------------------------INS SimpleName@@authentication @TO@ SingleVariableDeclaration@@OAuth2Authentication authentication @AT@ 6186 @LENGTH@ 14
---------------------INS ExpressionStatement@@MethodInvocation:assertTrue(authentication.getOAuth2Request().isRefresh()) @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6208 @LENGTH@ 58
------------------------INS MethodInvocation@@assertTrue(authentication.getOAuth2Request().isRefresh()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(authentication.getOAuth2Request().isRefresh()) @AT@ 6208 @LENGTH@ 57
---------------------------INS SimpleName@@MethodName:assertTrue:[authentication.getOAuth2Request().isRefresh()] @TO@ MethodInvocation@@assertTrue(authentication.getOAuth2Request().isRefresh()) @AT@ 6208 @LENGTH@ 57
------------------------------INS MethodInvocation@@authentication.getOAuth2Request().isRefresh() @TO@ SimpleName@@MethodName:assertTrue:[authentication.getOAuth2Request().isRefresh()] @AT@ 6219 @LENGTH@ 45
---------------------------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().isRefresh() @AT@ 6219 @LENGTH@ 33
---------------------------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().isRefresh() @AT@ 6219 @LENGTH@ 14
---------------------------------INS SimpleName@@MethodName:isRefresh:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().isRefresh() @AT@ 6253 @LENGTH@ 11
---------------------INS ExpressionStatement@@MethodInvocation:called.set(true) @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6271 @LENGTH@ 17
------------------------INS MethodInvocation@@called.set(true) @TO@ ExpressionStatement@@MethodInvocation:called.set(true) @AT@ 6271 @LENGTH@ 16
---------------------------INS SimpleName@@Name:called @TO@ MethodInvocation@@called.set(true) @AT@ 6271 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@called.set(true) @AT@ 6278 @LENGTH@ 9
------------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 6282 @LENGTH@ 4
---------------------INS ReturnStatement@@SimpleName:accessToken @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:enhance, OAuth2AccessToken accessToken, OAuth2Authentication authentication,  @AT@ 6293 @LENGTH@ 19
------------------------INS SimpleName@@accessToken @TO@ ReturnStatement@@SimpleName:accessToken @AT@ 6300 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:getTokenServices().refreshAccessToken(expectedExpiringRefreshToken.getValue(),tokenRequest) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 6326 @LENGTH@ 93
------INS MethodInvocation@@getTokenServices().refreshAccessToken(expectedExpiringRefreshToken.getValue(),tokenRequest) @TO@ ExpressionStatement@@MethodInvocation:getTokenServices().refreshAccessToken(expectedExpiringRefreshToken.getValue(),tokenRequest) @AT@ 6326 @LENGTH@ 92
---------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().refreshAccessToken(expectedExpiringRefreshToken.getValue(),tokenRequest) @AT@ 6326 @LENGTH@ 18
---------INS SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), tokenRequest] @TO@ MethodInvocation@@getTokenServices().refreshAccessToken(expectedExpiringRefreshToken.getValue(),tokenRequest) @AT@ 6345 @LENGTH@ 73
------------INS MethodInvocation@@expectedExpiringRefreshToken.getValue() @TO@ SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), tokenRequest] @AT@ 6364 @LENGTH@ 39
---------------INS SimpleName@@Name:expectedExpiringRefreshToken @TO@ MethodInvocation@@expectedExpiringRefreshToken.getValue() @AT@ 6364 @LENGTH@ 28
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@expectedExpiringRefreshToken.getValue() @AT@ 6393 @LENGTH@ 10
------------INS SimpleName@@tokenRequest @TO@ SimpleName@@MethodName:refreshAccessToken:[expectedExpiringRefreshToken.getValue(), tokenRequest] @AT@ 6405 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertTrue(called.get()) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenRequestHasRefreshFlag, Exception,  @AT@ 6422 @LENGTH@ 25
------INS MethodInvocation@@assertTrue(called.get()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(called.get()) @AT@ 6422 @LENGTH@ 24
---------INS SimpleName@@MethodName:assertTrue:[called.get()] @TO@ MethodInvocation@@assertTrue(called.get()) @AT@ 6422 @LENGTH@ 24
------------INS MethodInvocation@@called.get() @TO@ SimpleName@@MethodName:assertTrue:[called.get()] @AT@ 6433 @LENGTH@ 12
---------------INS SimpleName@@Name:called @TO@ MethodInvocation@@called.get() @AT@ 6433 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@called.get() @AT@ 6440 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2121 @LENGTH@ 119
---UPD MethodInvocation@@factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2128 @LENGTH@ 111
------UPD SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @TO@ MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", TEST_SERVER_1, props, new NoCallbackHandler()] @AT@ 2136 @LENGTH@ 103
---------DEL StringLiteral@@"test_server_1" @AT@ 2191 @LENGTH@ 15
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @AT@ 2191 @LENGTH@ 13


UPD ReturnStatement@@ArrayCreation:new byte[][]{segments[0]} @TO@ ArrayCreation:new byte[][]{java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length)} @AT@ 2072 @LENGTH@ 34
---UPD ArrayCreation@@new byte[][]{segments[0]} @TO@ new byte[][]{java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length)} @AT@ 2079 @LENGTH@ 26
------UPD ArrayInitializer@@{segments[0]} @TO@ {java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length)} @AT@ 2092 @LENGTH@ 13
---------INS MethodInvocation@@java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length) @TO@ ArrayInitializer@@{segments[0]} @AT@ 2093 @LENGTH@ 65
------------INS QualifiedName@@Name:java.util.Arrays @TO@ MethodInvocation@@java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length) @AT@ 2093 @LENGTH@ 16
------------INS SimpleName@@MethodName:copyOfRange:[shortMessage, 0, segments[0].length] @TO@ MethodInvocation@@java.util.Arrays.copyOfRange(shortMessage,0,segments[0].length) @AT@ 2110 @LENGTH@ 48
---------------INS SimpleName@@shortMessage @TO@ SimpleName@@MethodName:copyOfRange:[shortMessage, 0, segments[0].length] @AT@ 2122 @LENGTH@ 12
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:copyOfRange:[shortMessage, 0, segments[0].length] @AT@ 2136 @LENGTH@ 1
---------------INS FieldAccess@@segments[0].length @TO@ SimpleName@@MethodName:copyOfRange:[shortMessage, 0, segments[0].length] @AT@ 2139 @LENGTH@ 18
------------------INS ArrayAccess@@segments[0] @TO@ FieldAccess@@segments[0].length @AT@ 2139 @LENGTH@ 11
---------------------MOV SimpleName@@segments @TO@ ArrayAccess@@segments[0] @AT@ 2093 @LENGTH@ 8
---------------------MOV NumberLiteral@@0 @TO@ ArrayAccess@@segments[0] @AT@ 2102 @LENGTH@ 1
------------------INS SimpleName@@length @TO@ FieldAccess@@segments[0].length @AT@ 2151 @LENGTH@ 6
---------DEL ArrayAccess@@segments[0] @AT@ 2093 @LENGTH@ 11


UPD MethodDeclaration@@EncodedDataReader<BatchKey>, MethodName:getReader, InputSplit split, List<Integer> columnIds, SearchArgument sarg, String[] columnNames, Consumer<EncodedColumnBatch<BatchKey>> consumer,  @TO@ EncodedDataReader<BatchKey>, MethodName:createReader, InputSplit split, List<Integer> columnIds, SearchArgument sarg, String[] columnNames, Consumer<EncodedColumnBatch<BatchKey>> consumer,  @AT@ 1169 @LENGTH@ 151
---UPD SimpleName@@MethodName:getReader @TO@ MethodName:createReader @AT@ 1169 @LENGTH@ 9


UPD MethodDeclaration@@protected, void, MethodName:populateHostControllerInfo, LocalHostControllerInfoImpl hostControllerInfo, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @TO@ protected, void, MethodName:populateHostControllerInfo, LocalHostControllerInfoImpl hostControllerInfo, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2987 @LENGTH@ 1909
---DEL SingleVariableDeclaration@@ModelNode model @AT@ 3136 @LENGTH@ 15
------DEL SimpleType@@ModelNode @AT@ 3136 @LENGTH@ 9
------DEL SimpleName@@model @AT@ 3146 @LENGTH@ 5
---UPD VariableDeclarationStatement@@ModelNode codeNode=DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,model); @TO@ ModelNode codeNode=DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,operation); @AT@ 3195 @LENGTH@ 98
------UPD VariableDeclarationFragment@@codeNode=DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,model) @TO@ codeNode=DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,operation) @AT@ 3205 @LENGTH@ 87
---------UPD MethodInvocation@@DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,model) @TO@ DiscoveryOptionResourceDefinition.CODE.resolveModelAttribute(context,operation) @AT@ 3216 @LENGTH@ 76
------------UPD SimpleName@@MethodName:resolveModelAttribute:[context, model] @TO@ MethodName:resolveModelAttribute:[context, operation] @AT@ 3255 @LENGTH@ 37
---------------UPD SimpleName@@model @TO@ operation @AT@ 3286 @LENGTH@ 5
---UPD VariableDeclarationStatement@@ModelNode moduleNode=DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,model); @TO@ ModelNode moduleNode=DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,operation); @AT@ 3396 @LENGTH@ 102
------UPD VariableDeclarationFragment@@moduleNode=DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,model) @TO@ moduleNode=DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,operation) @AT@ 3406 @LENGTH@ 91
---------UPD MethodInvocation@@DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,model) @TO@ DiscoveryOptionResourceDefinition.MODULE.resolveModelAttribute(context,operation) @AT@ 3419 @LENGTH@ 78
------------UPD SimpleName@@MethodName:resolveModelAttribute:[context, model] @TO@ MethodName:resolveModelAttribute:[context, operation] @AT@ 3460 @LENGTH@ 37
---------------UPD SimpleName@@model @TO@ operation @AT@ 3491 @LENGTH@ 5
---UPD IfStatement@@if (operation.hasDefined(DiscoveryOptionResourceDefinition.PROPERTIES.getName())) {  for (  Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,model).entrySet()) {    discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));  }} @TO@ if (operation.hasDefined(DiscoveryOptionResourceDefinition.PROPERTIES.getName())) {  for (  Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,operation).entrySet()) {    discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));  }} @AT@ 3690 @LENGTH@ 390
------UPD Block@@ThenBody:{  for (  Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,model).entrySet()) {    discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));  }} @TO@ ThenBody:{  for (  Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,operation).entrySet()) {    discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));  }} @AT@ 3772 @LENGTH@ 308
---------UPD EnhancedForStatement@@for (Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,model).entrySet()) {  discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));} @TO@ for (Map.Entry<String,String> discoveryOptionProperty : DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,operation).entrySet()) {  discoveryOptionProperties.put(discoveryOptionProperty.getKey(),new ModelNode(discoveryOptionProperty.getValue()));} @AT@ 3786 @LENGTH@ 284
------------UPD MethodInvocation@@DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,model).entrySet() @TO@ DiscoveryOptionResourceDefinition.PROPERTIES.unwrap(context,operation).entrySet() @AT@ 3843 @LENGTH@ 78
---------------UPD MethodInvocation@@MethodName:unwrap:[context, model] @TO@ MethodName:unwrap:[context, operation] @AT@ 3843 @LENGTH@ 67
------------------UPD SimpleName@@model @TO@ operation @AT@ 3904 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong scope: " + result,url.contains("&scope=read")) @TO@ MethodInvocation:assertTrue("Wrong scope: " + result,url.contains("scope=read")) @AT@ 14776 @LENGTH@ 66
---UPD MethodInvocation@@assertTrue("Wrong scope: " + result,url.contains("&scope=read")) @TO@ assertTrue("Wrong scope: " + result,url.contains("scope=read")) @AT@ 14776 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertTrue:["Wrong scope: " + result, url.contains("&scope=read")] @TO@ MethodName:assertTrue:["Wrong scope: " + result, url.contains("scope=read")] @AT@ 14776 @LENGTH@ 65
---------UPD MethodInvocation@@url.contains("&scope=read") @TO@ url.contains("scope=read") @AT@ 14813 @LENGTH@ 27
------------UPD SimpleName@@MethodName:contains:["&scope=read"] @TO@ MethodName:contains:["scope=read"] @AT@ 14817 @LENGTH@ 23
---------------UPD StringLiteral@@"&scope=read" @TO@ "scope=read" @AT@ 14826 @LENGTH@ 13


UPD IfStatement@@if (idleTimeout > 0) {  idleTrigger=new IdleTimeoutTrigger(idleTimeout);  idlePoller=new IdleTimeoutPoller(getTaskScheduler(),getTaskExecutor(),idleTrigger);  idlePoller.setStopWaitResultsTimeout(10000);  idlePoller.init();} @TO@ if (idleTimeout > 0) {  idleTrigger=new IdleTimeoutTrigger(idleTimeout);  idlePoller=new IdleTimeoutPoller(getTaskScheduler(),getTaskExecutor(),idleTrigger);  idlePoller.init();} @AT@ 2592 @LENGTH@ 241
---UPD Block@@ThenBody:{  idleTrigger=new IdleTimeoutTrigger(idleTimeout);  idlePoller=new IdleTimeoutPoller(getTaskScheduler(),getTaskExecutor(),idleTrigger);  idlePoller.setStopWaitResultsTimeout(10000);  idlePoller.init();} @TO@ ThenBody:{  idleTrigger=new IdleTimeoutTrigger(idleTimeout);  idlePoller=new IdleTimeoutPoller(getTaskScheduler(),getTaskExecutor(),idleTrigger);  idlePoller.init();} @AT@ 2613 @LENGTH@ 220
------DEL ExpressionStatement@@MethodInvocation:idlePoller.setStopWaitResultsTimeout(10000) @AT@ 2763 @LENGTH@ 44
---------DEL MethodInvocation@@idlePoller.setStopWaitResultsTimeout(10000) @AT@ 2763 @LENGTH@ 43
------------DEL SimpleName@@Name:idlePoller @AT@ 2763 @LENGTH@ 10
------------DEL SimpleName@@MethodName:setStopWaitResultsTimeout:[10000] @AT@ 2774 @LENGTH@ 32
---------------DEL NumberLiteral@@10000 @AT@ 2800 @LENGTH@ 5


UPD FieldDeclaration@@SimpleAttributeDefinition, [MATCH=SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING).setAllowExpression(false).build()] @TO@ SimpleAttributeDefinition, [MATCH=SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING,true).setAllowExpression(false).build()] @AT@ 9125 @LENGTH@ 161
---UPD VariableDeclarationFragment@@MATCH=SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING).setAllowExpression(false).build() @TO@ MATCH=SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING,true).setAllowExpression(false).build() @AT@ 9151 @LENGTH@ 134
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING).setAllowExpression(false).build() @TO@ SimpleAttributeDefinitionBuilder.create("match",ModelType.STRING,true).setAllowExpression(false).build() @AT@ 9159 @LENGTH@ 126
---------UPD MethodInvocation@@MethodName:create:["match", ModelType.STRING] @TO@ MethodName:create:["match", ModelType.STRING, true] @AT@ 9159 @LENGTH@ 66
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:create:["match", ModelType.STRING] @AT@ 9226 @LENGTH@ 4


UPD IfStatement@@if (authenticationDetailsSource != null) {  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,accessToken.getValue());  result.setDetails(authenticationDetailsSource.buildDetails(request));} @TO@ if (authenticationDetailsSource != null) {  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,accessToken.getValue());  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType());  result.setDetails(authenticationDetailsSource.buildDetails(request));} @AT@ 4002 @LENGTH@ 217
---UPD Block@@ThenBody:{  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,accessToken.getValue());  result.setDetails(authenticationDetailsSource.buildDetails(request));} @TO@ ThenBody:{  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,accessToken.getValue());  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType());  result.setDetails(authenticationDetailsSource.buildDetails(request));} @AT@ 4041 @LENGTH@ 178
------INS ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType()) @TO@ Block@@ThenBody:{  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_VALUE,accessToken.getValue());  result.setDetails(authenticationDetailsSource.buildDetails(request));} @AT@ 4145 @LENGTH@ 96
---------INS MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType()) @TO@ ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType()) @AT@ 4145 @LENGTH@ 95
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType()) @AT@ 4145 @LENGTH@ 7
------------INS SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, accessToken.getTokenType()] @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,accessToken.getTokenType()) @AT@ 4153 @LENGTH@ 87
---------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, accessToken.getTokenType()] @AT@ 4166 @LENGTH@ 45
------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 4166 @LENGTH@ 27
------------------INS SimpleName@@ACCESS_TOKEN_TYPE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 4194 @LENGTH@ 17
---------------INS MethodInvocation@@accessToken.getTokenType() @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, accessToken.getTokenType()] @AT@ 4213 @LENGTH@ 26
------------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getTokenType() @AT@ 4213 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getTokenType:[] @TO@ MethodInvocation@@accessToken.getTokenType() @AT@ 4225 @LENGTH@ 14


INS MethodDeclaration@@private, voidMethodName:DeferServiceFactory,  @TO@ TypeDeclaration@@[public]DeferServiceFactory,  @AT@ 1173 @LENGTH@ 68
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:DeferServiceFactory,  @AT@ 1173 @LENGTH@ 7
---INS SimpleName@@MethodName:DeferServiceFactory @TO@ MethodDeclaration@@private, voidMethodName:DeferServiceFactory,  @AT@ 1181 @LENGTH@ 19


UPD VariableDeclarationStatement@@EndpointOption that=(EndpointOption)o; @TO@ ComponentOption that=(ComponentOption)o; @AT@ 36181 @LENGTH@ 41
---UPD SimpleType@@EndpointOption @TO@ ComponentOption @AT@ 36181 @LENGTH@ 14
---UPD VariableDeclarationFragment@@that=(EndpointOption)o @TO@ that=(ComponentOption)o @AT@ 36196 @LENGTH@ 25
------UPD CastExpression@@(EndpointOption)o @TO@ (ComponentOption)o @AT@ 36203 @LENGTH@ 18
---------UPD SimpleType@@EndpointOption @TO@ ComponentOption @AT@ 36204 @LENGTH@ 14


UPD Block@@ElseBody:if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)));} @TO@ ElseBody:if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code));} @AT@ 5279 @LENGTH@ 169
---UPD IfStatement@@if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)));} @TO@ if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code));} @AT@ 5279 @LENGTH@ 169
------UPD Block@@ThenBody:{  throw new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)));} @TO@ ThenBody:{  throw new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code));} @AT@ 5301 @LENGTH@ 147
---------UPD ThrowStatement@@ClassInstanceCreation:new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code))) @TO@ ClassInstanceCreation:new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code)) @AT@ 5319 @LENGTH@ 115
------------UPD ClassInstanceCreation@@IOException[String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code))] @TO@ IOException[String.format("Invalid %d bit code 0x%x",codeSize,code)] @AT@ 5325 @LENGTH@ 108
---------------UPD MethodInvocation@@String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)) @TO@ String.format("Invalid %d bit code 0x%x",codeSize,code) @AT@ 5341 @LENGTH@ 91
------------------UPD SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @TO@ MethodName:format:["Invalid %d bit code 0x%x", codeSize, code] @AT@ 5348 @LENGTH@ 84
---------------------DEL MethodInvocation@@Integer.valueOf(codeSize) @AT@ 5383 @LENGTH@ 25
------------------------DEL SimpleName@@Name:Integer @AT@ 5383 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:valueOf:[codeSize] @AT@ 5391 @LENGTH@ 17
---------------------MOV SimpleName@@codeSize @TO@ SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @AT@ 5399 @LENGTH@ 8
---------------------DEL MethodInvocation@@Integer.valueOf(code) @AT@ 5410 @LENGTH@ 21
------------------------DEL SimpleName@@Name:Integer @AT@ 5410 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:valueOf:[code] @AT@ 5418 @LENGTH@ 13
---------------------MOV SimpleName@@code @TO@ SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @AT@ 5426 @LENGTH@ 4
---UPD IfStatement@@if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)));} @TO@ if (code > tableSize) {  throw new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code));} @AT@ 5279 @LENGTH@ 169
------UPD Block@@ThenBody:{  throw new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)));} @TO@ ThenBody:{  throw new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code));} @AT@ 5301 @LENGTH@ 147
---------UPD ThrowStatement@@ClassInstanceCreation:new IOException(String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code))) @TO@ ClassInstanceCreation:new IOException(String.format("Invalid %d bit code 0x%x",codeSize,code)) @AT@ 5319 @LENGTH@ 115
------------UPD ClassInstanceCreation@@IOException[String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code))] @TO@ IOException[String.format("Invalid %d bit code 0x%x",codeSize,code)] @AT@ 5325 @LENGTH@ 108
---------------UPD MethodInvocation@@String.format("Invalid %d bit code 0x%x",Integer.valueOf(codeSize),Integer.valueOf(code)) @TO@ String.format("Invalid %d bit code 0x%x",codeSize,code) @AT@ 5341 @LENGTH@ 91
------------------UPD SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @TO@ MethodName:format:["Invalid %d bit code 0x%x", codeSize, code] @AT@ 5348 @LENGTH@ 84
---------------------DEL MethodInvocation@@Integer.valueOf(codeSize) @AT@ 5383 @LENGTH@ 25
------------------------DEL SimpleName@@Name:Integer @AT@ 5383 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:valueOf:[codeSize] @AT@ 5391 @LENGTH@ 17
---------------------MOV SimpleName@@codeSize @TO@ SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @AT@ 5399 @LENGTH@ 8
---------------------DEL MethodInvocation@@Integer.valueOf(code) @AT@ 5410 @LENGTH@ 21
------------------------DEL SimpleName@@Name:Integer @AT@ 5410 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:valueOf:[code] @AT@ 5418 @LENGTH@ 13
---------------------MOV SimpleName@@code @TO@ SimpleName@@MethodName:format:["Invalid %d bit code 0x%x", Integer.valueOf(codeSize), Integer.valueOf(code)] @AT@ 5426 @LENGTH@ 4


UPD MethodDeclaration@@private, void, MethodName:createPath, File file,  @TO@ private, void, MethodName:createPath, File file, ConfigurationException,  @AT@ 7486 @LENGTH@ 402
---UPD IfStatement@@if (file != null) {  if (!file.exists()) {    File parent=file.getParentFile();    if (parent != null && !parent.exists()) {      parent.mkdirs();    }  }} @TO@ if (file != null) {  if (!file.exists()) {    File parent=file.getParentFile();    if (parent != null && !parent.exists()) {      if (!parent.mkdirs()) {        throw new ConfigurationException("Cannot create path: " + parent);      }    }  }} @AT@ 7535 @LENGTH@ 347
------UPD Block@@ThenBody:{  if (!file.exists()) {    File parent=file.getParentFile();    if (parent != null && !parent.exists()) {      parent.mkdirs();    }  }} @TO@ ThenBody:{  if (!file.exists()) {    File parent=file.getParentFile();    if (parent != null && !parent.exists()) {      if (!parent.mkdirs()) {        throw new ConfigurationException("Cannot create path: " + parent);      }    }  }} @AT@ 7561 @LENGTH@ 321
---------UPD IfStatement@@if (!file.exists()) {  File parent=file.getParentFile();  if (parent != null && !parent.exists()) {    parent.mkdirs();  }} @TO@ if (!file.exists()) {  File parent=file.getParentFile();  if (parent != null && !parent.exists()) {    if (!parent.mkdirs()) {      throw new ConfigurationException("Cannot create path: " + parent);    }  }} @AT@ 7644 @LENGTH@ 228
------------UPD Block@@ThenBody:{  File parent=file.getParentFile();  if (parent != null && !parent.exists()) {    parent.mkdirs();  }} @TO@ ThenBody:{  File parent=file.getParentFile();  if (parent != null && !parent.exists()) {    if (!parent.mkdirs()) {      throw new ConfigurationException("Cannot create path: " + parent);    }  }} @AT@ 7676 @LENGTH@ 196
---------------UPD IfStatement@@if (parent != null && !parent.exists()) {  parent.mkdirs();} @TO@ if (parent != null && !parent.exists()) {  if (!parent.mkdirs()) {    throw new ConfigurationException("Cannot create path: " + parent);  }} @AT@ 7746 @LENGTH@ 112
------------------UPD Block@@ThenBody:{  parent.mkdirs();} @TO@ ThenBody:{  if (!parent.mkdirs()) {    throw new ConfigurationException("Cannot create path: " + parent);  }} @AT@ 7802 @LENGTH@ 56
---------------------DEL ExpressionStatement@@MethodInvocation:parent.mkdirs() @AT@ 7824 @LENGTH@ 16
------------------------DEL MethodInvocation@@parent.mkdirs() @AT@ 7824 @LENGTH@ 15
---------------------INS IfStatement@@if (!parent.mkdirs()) {  throw new ConfigurationException("Cannot create path: " + parent);} @TO@ Block@@ThenBody:{  parent.mkdirs();} @AT@ 7922 @LENGTH@ 156
------------------------INS PrefixExpression@@!parent.mkdirs() @TO@ IfStatement@@if (!parent.mkdirs()) {  throw new ConfigurationException("Cannot create path: " + parent);} @AT@ 7926 @LENGTH@ 16
---------------------------INS Operator@@! @TO@ PrefixExpression@@!parent.mkdirs() @AT@ 7926 @LENGTH@ 1
---------------------------INS MethodInvocation@@parent.mkdirs() @TO@ PrefixExpression@@!parent.mkdirs() @AT@ 7927 @LENGTH@ 15
------------------------------MOV SimpleName@@Name:parent @TO@ MethodInvocation@@parent.mkdirs() @AT@ 7824 @LENGTH@ 6
------------------------------MOV SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@parent.mkdirs() @AT@ 7831 @LENGTH@ 8
------------------------INS Block@@ThenBody:{  throw new ConfigurationException("Cannot create path: " + parent);} @TO@ IfStatement@@if (!parent.mkdirs()) {  throw new ConfigurationException("Cannot create path: " + parent);} @AT@ 7964 @LENGTH@ 114
---------------------------INS ThrowStatement@@ClassInstanceCreation:new ConfigurationException("Cannot create path: " + parent) @TO@ Block@@ThenBody:{  throw new ConfigurationException("Cannot create path: " + parent);} @AT@ 7990 @LENGTH@ 66
------------------------------INS ClassInstanceCreation@@ConfigurationException["Cannot create path: " + parent] @TO@ ThrowStatement@@ClassInstanceCreation:new ConfigurationException("Cannot create path: " + parent) @AT@ 7996 @LENGTH@ 59
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@ConfigurationException["Cannot create path: " + parent] @AT@ 7996 @LENGTH@ 3
---------------------------------INS SimpleType@@ConfigurationException @TO@ ClassInstanceCreation@@ConfigurationException["Cannot create path: " + parent] @AT@ 8000 @LENGTH@ 22
---------------------------------INS InfixExpression@@"Cannot create path: " + parent @TO@ ClassInstanceCreation@@ConfigurationException["Cannot create path: " + parent] @AT@ 8023 @LENGTH@ 31
------------------------------------INS StringLiteral@@"Cannot create path: " @TO@ InfixExpression@@"Cannot create path: " + parent @AT@ 8023 @LENGTH@ 22
------------------------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot create path: " + parent @AT@ 8045 @LENGTH@ 1
------------------------------------INS SimpleName@@parent @TO@ InfixExpression@@"Cannot create path: " + parent @AT@ 8048 @LENGTH@ 6
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@private, void, MethodName:createPath, File file,  @AT@ 7596 @LENGTH@ 22


UPD IfStatement@@if ("camel-jetty8".equals(pathname)) {  return false;} @TO@ if ("camel-jetty9".equals(pathname)) {  return false;} @AT@ 3974 @LENGTH@ 82
---UPD MethodInvocation@@"camel-jetty8".equals(pathname) @TO@ "camel-jetty9".equals(pathname) @AT@ 3978 @LENGTH@ 31
------UPD StringLiteral@@"camel-jetty8" @TO@ "camel-jetty9" @AT@ 3978 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(3,tsWrapper.ts.disabledNodes.size()) @TO@ MethodInvocation:assertEquals(3,tsWrapper.ts.disabledNodesQueue.size()) @AT@ 6850 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals(3,tsWrapper.ts.disabledNodes.size()) @TO@ assertEquals(3,tsWrapper.ts.disabledNodesQueue.size()) @AT@ 6850 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:[3, tsWrapper.ts.disabledNodes.size()] @TO@ MethodName:assertEquals:[3, tsWrapper.ts.disabledNodesQueue.size()] @AT@ 6850 @LENGTH@ 50
---------UPD MethodInvocation@@tsWrapper.ts.disabledNodes.size() @TO@ tsWrapper.ts.disabledNodesQueue.size() @AT@ 6866 @LENGTH@ 33
------------UPD QualifiedName@@Name:tsWrapper.ts.disabledNodes @TO@ Name:tsWrapper.ts.disabledNodesQueue @AT@ 6866 @LENGTH@ 26


UPD VariableDeclarationStatement@@Socket socket=createSocket(address,port,localAddress,localPort); @TO@ Socket socket=wrapped.createSocket(address,port,localAddress,localPort); @AT@ 6127 @LENGTH@ 69
---UPD VariableDeclarationFragment@@socket=createSocket(address,port,localAddress,localPort) @TO@ socket=wrapped.createSocket(address,port,localAddress,localPort) @AT@ 6134 @LENGTH@ 61
------UPD MethodInvocation@@createSocket(address,port,localAddress,localPort) @TO@ wrapped.createSocket(address,port,localAddress,localPort) @AT@ 6143 @LENGTH@ 52
---------INS SimpleName@@Name:wrapped @TO@ MethodInvocation@@createSocket(address,port,localAddress,localPort) @AT@ 6143 @LENGTH@ 7


INS MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @TO@ TypeDeclaration@@[@Configuration, protected, static]AuthenticationManagerConfiguration, GlobalAuthenticationConfigurerAdapter @AT@ 5528 @LENGTH@ 120
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @AT@ 5528 @LENGTH@ 6
---INS SimpleType@@AuthenticationManager @TO@ MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @AT@ 5535 @LENGTH@ 21
---INS SimpleName@@MethodName:authenticationManager @TO@ MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @AT@ 5557 @LENGTH@ 21
---INS SingleVariableDeclaration@@AuthenticationManagerBuilder auth @TO@ MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @AT@ 5579 @LENGTH@ 33
------INS SimpleType@@AuthenticationManagerBuilder @TO@ SingleVariableDeclaration@@AuthenticationManagerBuilder auth @AT@ 5579 @LENGTH@ 28
------INS SimpleName@@auth @TO@ SingleVariableDeclaration@@AuthenticationManagerBuilder auth @AT@ 5608 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:auth.getOrBuild() @TO@ MethodDeclaration@@public, AuthenticationManager, MethodName:authenticationManager, AuthenticationManagerBuilder auth,  @AT@ 5619 @LENGTH@ 25
------INS MethodInvocation@@auth.getOrBuild() @TO@ ReturnStatement@@MethodInvocation:auth.getOrBuild() @AT@ 5626 @LENGTH@ 17
---------INS SimpleName@@Name:auth @TO@ MethodInvocation@@auth.getOrBuild() @AT@ 5626 @LENGTH@ 4
---------INS SimpleName@@MethodName:getOrBuild:[] @TO@ MethodInvocation@@auth.getOrBuild() @AT@ 5631 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:channel.close().syncUninterruptibly() @TO@ MethodInvocation:channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.getChannel());
  }
}
) @AT@ 4546 @LENGTH@ 38
---UPD MethodInvocation@@channel.close().syncUninterruptibly() @TO@ channel.close().addListener(new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.getChannel());
  }
}
) @AT@ 4546 @LENGTH@ 37
------INS SimpleName@@MethodName:addListener:[new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.getChannel());
  }
}
] @TO@ MethodInvocation@@channel.close().syncUninterruptibly() @AT@ 4562 @LENGTH@ 218
---------INS ClassInstanceCreation@@ChannelFutureListener[] @TO@ SimpleName@@MethodName:addListener:[new ChannelFutureListener(){
  public void operationComplete(  ChannelFuture future){
    LOG.trace("Channel closed: {}",future.getChannel());
  }
}
] @AT@ 4574 @LENGTH@ 205
------------INS New@@new @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4574 @LENGTH@ 3
------------INS SimpleType@@ChannelFutureListener @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4578 @LENGTH@ 21
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ChannelFutureListener[] @AT@ 4602 @LENGTH@ 177
---------------INS MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4620 @LENGTH@ 145
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4620 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4627 @LENGTH@ 4
------------------INS SimpleName@@MethodName:operationComplete @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4632 @LENGTH@ 17
------------------INS SingleVariableDeclaration@@ChannelFuture future @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4650 @LENGTH@ 20
---------------------INS SimpleType@@ChannelFuture @TO@ SingleVariableDeclaration@@ChannelFuture future @AT@ 4650 @LENGTH@ 13
---------------------INS SimpleName@@future @TO@ SingleVariableDeclaration@@ChannelFuture future @AT@ 4664 @LENGTH@ 6
------------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Channel closed: {}",future.getChannel()) @TO@ MethodDeclaration@@public, void, MethodName:operationComplete, ChannelFuture future,  @AT@ 4694 @LENGTH@ 53
---------------------INS MethodInvocation@@LOG.trace("Channel closed: {}",future.getChannel()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Channel closed: {}",future.getChannel()) @AT@ 4694 @LENGTH@ 52
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Channel closed: {}",future.getChannel()) @AT@ 4694 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:trace:["Channel closed: {}", future.getChannel()] @TO@ MethodInvocation@@LOG.trace("Channel closed: {}",future.getChannel()) @AT@ 4698 @LENGTH@ 48
---------------------------INS StringLiteral@@"Channel closed: {}" @TO@ SimpleName@@MethodName:trace:["Channel closed: {}", future.getChannel()] @AT@ 4704 @LENGTH@ 20
---------------------------INS MethodInvocation@@future.getChannel() @TO@ SimpleName@@MethodName:trace:["Channel closed: {}", future.getChannel()] @AT@ 4726 @LENGTH@ 19
------------------------------MOV SimpleName@@MethodName:syncUninterruptibly:[] @TO@ MethodInvocation@@future.getChannel() @AT@ 4562 @LENGTH@ 21
------------------------------INS SimpleName@@Name:future @TO@ MethodInvocation@@future.getChannel() @AT@ 4726 @LENGTH@ 6
------UPD SimpleName@@MethodName:syncUninterruptibly:[] @TO@ MethodName:getChannel:[] @AT@ 4562 @LENGTH@ 21


UPD CatchClause@@catch (IllegalArgumentException e) {  assertTrue(e.getMessage().endsWith("Unknown parameters=[{doesNotExist=2000}]"));} @TO@ catch (Exception e) {  assertTrue(e.getMessage().endsWith("Unknown parameters=[{doesNotExist=2000}]"));} @AT@ 2235 @LENGTH@ 139
---UPD SingleVariableDeclaration@@IllegalArgumentException e @TO@ Exception e @AT@ 2242 @LENGTH@ 26
------UPD SimpleType@@IllegalArgumentException @TO@ Exception @AT@ 2242 @LENGTH@ 24


UPD TypeDeclaration@@[@UriEndpoint(scheme="sap-idoclist-server",consumerClass=SapTransactionalIDocListConsumer.class,syntax="sap-idoclist-server:server:rfc",consumerOnly=true,title="SAP IDoc List Server"), public]SapTransactionalIDocListServerEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="sap-idoclist-server",consumerClass=SapTransactionalIDocListConsumer.class,syntax="sap-idoclist-server:server:idocType:idocTypeExtension:systemRelease:applicationRelease",consumerOnly=true,title="SAP IDoc List Server"), public]SapTransactionalIDocListServerEndpoint, DefaultEndpoint @AT@ 1452 @LENGTH@ 4712
---UPD NormalAnnotation@@@UriEndpoint(scheme="sap-idoclist-server",consumerClass=SapTransactionalIDocListConsumer.class,syntax="sap-idoclist-server:server:rfc",consumerOnly=true,title="SAP IDoc List Server") @TO@ @UriEndpoint(scheme="sap-idoclist-server",consumerClass=SapTransactionalIDocListConsumer.class,syntax="sap-idoclist-server:server:idocType:idocTypeExtension:systemRelease:applicationRelease",consumerOnly=true,title="SAP IDoc List Server") @AT@ 1452 @LENGTH@ 194


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("A new choice clause should start with a when() or otherwise(). If you intend to end the entire choice and are using endChoice() then use end() instead.") @TO@ ClassInstanceCreation:new IllegalArgumentException("A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead.") @AT@ 6010 @LENGTH@ 190
---UPD ClassInstanceCreation@@IllegalArgumentException["A new choice clause should start with a when() or otherwise(). If you intend to end the entire choice and are using endChoice() then use end() instead."] @TO@ IllegalArgumentException["A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead."] @AT@ 6016 @LENGTH@ 183
------INS InfixExpression@@"A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead." @TO@ ClassInstanceCreation@@IllegalArgumentException["A new choice clause should start with a when() or otherwise(). If you intend to end the entire choice and are using endChoice() then use end() instead."] @AT@ 6045 @LENGTH@ 178
---------INS StringLiteral@@"A new choice clause should start with a when() or otherwise(). " @TO@ InfixExpression@@"A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead." @AT@ 6045 @LENGTH@ 65
---------INS Operator@@+ @TO@ InfixExpression@@"A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead." @AT@ 6110 @LENGTH@ 1
---------INS StringLiteral@@"If you intend to end the entire choice and are using endChoice() then use end() instead." @TO@ InfixExpression@@"A new choice clause should start with a when() or otherwise(). " + "If you intend to end the entire choice and are using endChoice() then use end() instead." @AT@ 6133 @LENGTH@ 90
------DEL StringLiteral@@"A new choice clause should start with a when() or otherwise(). If you intend to end the entire choice and are using endChoice() then use end() instead." @AT@ 6045 @LENGTH@ 153


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(XmppConstants.docHeader,pubsubpacket) @TO@ MethodInvocation:exchange.getIn().setHeader(XmppConstants.DOC_HEADER,pubsubpacket) @AT@ 1802 @LENGTH@ 66
---UPD MethodInvocation@@exchange.getIn().setHeader(XmppConstants.docHeader,pubsubpacket) @TO@ exchange.getIn().setHeader(XmppConstants.DOC_HEADER,pubsubpacket) @AT@ 1802 @LENGTH@ 65
------UPD SimpleName@@MethodName:setHeader:[XmppConstants.docHeader, pubsubpacket] @TO@ MethodName:setHeader:[XmppConstants.DOC_HEADER, pubsubpacket] @AT@ 1819 @LENGTH@ 48
---------UPD QualifiedName@@XmppConstants.docHeader @TO@ XmppConstants.DOC_HEADER @AT@ 1829 @LENGTH@ 23
------------UPD SimpleName@@docHeader @TO@ DOC_HEADER @AT@ 1843 @LENGTH@ 9


INS FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @TO@ TypeDeclaration@@[@Ignore("Must run manual"), public]HdfsProducerConsumerIntegrationTest, CamelTestSupport @AT@ 1677 @LENGTH@ 42
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @AT@ 1677 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @AT@ 1685 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @AT@ 1692 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @AT@ 1698 @LENGTH@ 3
---INS VariableDeclarationFragment@@ITERATIONS=400 @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=400] @AT@ 1702 @LENGTH@ 16
------INS SimpleName@@ITERATIONS @TO@ VariableDeclarationFragment@@ITERATIONS=400 @AT@ 1702 @LENGTH@ 10
------INS NumberLiteral@@400 @TO@ VariableDeclarationFragment@@ITERATIONS=400 @AT@ 1715 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:LOG.info("Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead)) @TO@ MethodInvocation:LOG.info("Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 9990 @LENGTH@ 133
---UPD MethodInvocation@@LOG.info("Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead)) @TO@ LOG.info("Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 9990 @LENGTH@ 132
------UPD SimpleName@@MethodName:info:["Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead)] @TO@ MethodName:info:["Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead.next)] @AT@ 9994 @LENGTH@ 128
---------UPD InfixExpression@@"Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead) @TO@ "Disk ranges after cache (base offset " + stripeOffset + "): "+ RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 9999 @LENGTH@ 122
------------UPD MethodInvocation@@RecordReaderUtils.stringifyDiskRanges(toRead) @TO@ RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 10076 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:stringifyDiskRanges:[toRead] @TO@ MethodName:stringifyDiskRanges:[toRead.next] @AT@ 10094 @LENGTH@ 27
------------------DEL SimpleName@@toRead @AT@ 10114 @LENGTH@ 6
------------------INS QualifiedName@@toRead.next @TO@ SimpleName@@MethodName:stringifyDiskRanges:[toRead] @AT@ 10129 @LENGTH@ 11
---------------------INS SimpleName@@toRead @TO@ QualifiedName@@toRead.next @AT@ 10129 @LENGTH@ 6
---------------------INS SimpleName@@next @TO@ QualifiedName@@toRead.next @AT@ 10136 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:new JsonPathExpectationsHelper("$.startTime").assertValue(json,"1969-12-31T18:00:01.000-06:00") @TO@ MethodInvocation:new JsonPathExpectationsHelper("$.startTime").assertValue(json,"1970-01-01T00:00:01.000Z") @AT@ 2415 @LENGTH@ 97
---UPD MethodInvocation@@new JsonPathExpectationsHelper("$.startTime").assertValue(json,"1969-12-31T18:00:01.000-06:00") @TO@ new JsonPathExpectationsHelper("$.startTime").assertValue(json,"1970-01-01T00:00:01.000Z") @AT@ 2415 @LENGTH@ 96
------UPD SimpleName@@MethodName:assertValue:[json, "1969-12-31T18:00:01.000-06:00"] @TO@ MethodName:assertValue:[json, "1970-01-01T00:00:01.000Z"] @AT@ 2461 @LENGTH@ 50
---------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 2479 @LENGTH@ 31


INS MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @TO@ TypeDeclaration@@[public]SqlWindowingPagingQueryProvider, AbstractSqlPagingQueryProvider @AT@ 5796 @LENGTH@ 160
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 5796 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 5804 @LENGTH@ 6
---INS SimpleName@@MethodName:buildSortClause @TO@ MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 5811 @LENGTH@ 15
---INS SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @TO@ MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 5827 @LENGTH@ 39
------INS SimpleType@@AbstractSqlPagingQueryProvider @TO@ SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @AT@ 5827 @LENGTH@ 30
------INS SimpleName@@provider @TO@ SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @AT@ 5858 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:SqlPagingQueryUtils.buildSortClause(provider.getSortKeysWithoutAliases()) @TO@ MethodDeclaration@@private, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 5872 @LENGTH@ 81
------INS MethodInvocation@@SqlPagingQueryUtils.buildSortClause(provider.getSortKeysWithoutAliases()) @TO@ ReturnStatement@@MethodInvocation:SqlPagingQueryUtils.buildSortClause(provider.getSortKeysWithoutAliases()) @AT@ 5879 @LENGTH@ 73
---------INS SimpleName@@Name:SqlPagingQueryUtils @TO@ MethodInvocation@@SqlPagingQueryUtils.buildSortClause(provider.getSortKeysWithoutAliases()) @AT@ 5879 @LENGTH@ 19
---------INS SimpleName@@MethodName:buildSortClause:[provider.getSortKeysWithoutAliases()] @TO@ MethodInvocation@@SqlPagingQueryUtils.buildSortClause(provider.getSortKeysWithoutAliases()) @AT@ 5899 @LENGTH@ 53
------------INS MethodInvocation@@provider.getSortKeysWithoutAliases() @TO@ SimpleName@@MethodName:buildSortClause:[provider.getSortKeysWithoutAliases()] @AT@ 5915 @LENGTH@ 36
---------------INS SimpleName@@Name:provider @TO@ MethodInvocation@@provider.getSortKeysWithoutAliases() @AT@ 5915 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSortKeysWithoutAliases:[] @TO@ MethodInvocation@@provider.getSortKeysWithoutAliases() @AT@ 5924 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:from(zep).id("election-route-" + candidateName.substring(0,8)).sort(body(),comparator).process(new Processor(){
  @Override public void process(  Exchange e) throws Exception {
    @SuppressWarnings("unchecked") List<String> candidates=e.getIn().getMandatoryBody(List.class);
    int location=findCandidateLocationInCandidatesList(candidates,candidateName);
    if (location != -1) {
      masterNode.set(location <= enabledCount);
      LOG.debug("This node is number '{}' on the candidate list, election is configured for the top '{}'. this node will be {}",new Object[]{location,enabledCount,masterNode.get() ? "enabled" : "disabled"});
    }
    electionComplete.countDown();
    notifyElectionWatchers();
  }
  private int findCandidateLocationInCandidatesList(  List<String> candidates,  String candidateName){
    for (int location=1; location <= candidates.size(); location++) {
      if (candidates.get(location - 1).startsWith(candidateName)) {
        return location;
      }
    }
    return -1;
  }
}
) @TO@ MethodInvocation:from(zep).id("election-route-" + candidateName).sort(body(),comparator).process(new Processor(){
  @Override public void process(  Exchange e) throws Exception {
    @SuppressWarnings("unchecked") List<String> candidates=e.getIn().getMandatoryBody(List.class);
    int location=findCandidateLocationInCandidatesList(candidates,candidateName);
    if (location != -1) {
      masterNode.set(location <= enabledCount);
      LOG.debug("This node is number '{}' on the candidate list, election is configured for the top '{}'. this node will be {}",new Object[]{location,enabledCount,masterNode.get() ? "enabled" : "disabled"});
    }
    electionComplete.countDown();
    notifyElectionWatchers();
  }
  private int findCandidateLocationInCandidatesList(  List<String> candidates,  String candidateName){
    for (int location=1; location <= candidates.size(); location++) {
      if (candidates.get(location - 1).startsWith(candidateName)) {
        return location;
      }
    }
    return -1;
  }
}
) @AT@ 9094 @LENGTH@ 1760
---UPD MethodInvocation@@from(zep).id("election-route-" + candidateName.substring(0,8)).sort(body(),comparator).process(new Processor(){
  @Override public void process(  Exchange e) throws Exception {
    @SuppressWarnings("unchecked") List<String> candidates=e.getIn().getMandatoryBody(List.class);
    int location=findCandidateLocationInCandidatesList(candidates,candidateName);
    if (location != -1) {
      masterNode.set(location <= enabledCount);
      LOG.debug("This node is number '{}' on the candidate list, election is configured for the top '{}'. this node will be {}",new Object[]{location,enabledCount,masterNode.get() ? "enabled" : "disabled"});
    }
    electionComplete.countDown();
    notifyElectionWatchers();
  }
  private int findCandidateLocationInCandidatesList(  List<String> candidates,  String candidateName){
    for (int location=1; location <= candidates.size(); location++) {
      if (candidates.get(location - 1).startsWith(candidateName)) {
        return location;
      }
    }
    return -1;
  }
}
) @TO@ from(zep).id("election-route-" + candidateName).sort(body(),comparator).process(new Processor(){
  @Override public void process(  Exchange e) throws Exception {
    @SuppressWarnings("unchecked") List<String> candidates=e.getIn().getMandatoryBody(List.class);
    int location=findCandidateLocationInCandidatesList(candidates,candidateName);
    if (location != -1) {
      masterNode.set(location <= enabledCount);
      LOG.debug("This node is number '{}' on the candidate list, election is configured for the top '{}'. this node will be {}",new Object[]{location,enabledCount,masterNode.get() ? "enabled" : "disabled"});
    }
    electionComplete.countDown();
    notifyElectionWatchers();
  }
  private int findCandidateLocationInCandidatesList(  List<String> candidates,  String candidateName){
    for (int location=1; location <= candidates.size(); location++) {
      if (candidates.get(location - 1).startsWith(candidateName)) {
        return location;
      }
    }
    return -1;
  }
}
) @AT@ 9094 @LENGTH@ 1759
------UPD MethodInvocation@@MethodName:id:["election-route-" + candidateName.substring(0,8)] @TO@ MethodName:id:["election-route-" + candidateName] @AT@ 9094 @LENGTH@ 63
---------UPD InfixExpression@@"election-route-" + candidateName.substring(0,8) @TO@ "election-route-" + candidateName @AT@ 9107 @LENGTH@ 49
------------DEL MethodInvocation@@candidateName.substring(0,8) @AT@ 9127 @LENGTH@ 29
---------------DEL SimpleName@@Name:candidateName @AT@ 9127 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:substring:[0, 8] @AT@ 9141 @LENGTH@ 15
------------------DEL NumberLiteral@@0 @AT@ 9151 @LENGTH@ 1
------------------DEL NumberLiteral@@8 @AT@ 9154 @LENGTH@ 1
------------INS SimpleName@@candidateName @TO@ InfixExpression@@"election-route-" + candidateName.substring(0,8) @AT@ 9127 @LENGTH@ 13


INS IfStatement@@if (authentication == null) {  throw new InvalidTokenException("Invalid token (token not found)");} @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3398 @LENGTH@ 104
---INS InfixExpression@@authentication == null @TO@ IfStatement@@if (authentication == null) {  throw new InvalidTokenException("Invalid token (token not found)");} @AT@ 3402 @LENGTH@ 22
------INS SimpleName@@authentication @TO@ InfixExpression@@authentication == null @AT@ 3402 @LENGTH@ 14
------INS Operator@@== @TO@ InfixExpression@@authentication == null @AT@ 3416 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@authentication == null @AT@ 3420 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new InvalidTokenException("Invalid token (token not found)");} @TO@ IfStatement@@if (authentication == null) {  throw new InvalidTokenException("Invalid token (token not found)");} @AT@ 3426 @LENGTH@ 76
------INS ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Invalid token (token not found)") @TO@ Block@@ThenBody:{  throw new InvalidTokenException("Invalid token (token not found)");} @AT@ 3431 @LENGTH@ 67
---------INS ClassInstanceCreation@@InvalidTokenException["Invalid token (token not found)"] @TO@ ThrowStatement@@ClassInstanceCreation:new InvalidTokenException("Invalid token (token not found)") @AT@ 3437 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid token (token not found)"] @AT@ 3437 @LENGTH@ 3
------------INS SimpleType@@InvalidTokenException @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid token (token not found)"] @AT@ 3441 @LENGTH@ 21
------------INS StringLiteral@@"Invalid token (token not found)" @TO@ ClassInstanceCreation@@InvalidTokenException["Invalid token (token not found)"] @AT@ 3463 @LENGTH@ 33


UPD VariableDeclarationStatement@@byte[] decodedDigest=Base64.base64DecodeStandard(base64Digest,0); @TO@ byte[] decodedDigest=CodePointIterator.ofChars(base64Digest).base64Decode(Alphabet.STANDARD,false).drain(); @AT@ 7885 @LENGTH@ 68
---UPD VariableDeclarationFragment@@decodedDigest=Base64.base64DecodeStandard(base64Digest,0) @TO@ decodedDigest=CodePointIterator.ofChars(base64Digest).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 7892 @LENGTH@ 60
------UPD MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @TO@ CodePointIterator.ofChars(base64Digest).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 7908 @LENGTH@ 44
---------UPD SimpleName@@Name:Base64 @TO@ Name:CodePointIterator @AT@ 7908 @LENGTH@ 6
---------DEL SimpleName@@MethodName:base64DecodeStandard:[base64Digest, 0] @AT@ 7915 @LENGTH@ 37
------------DEL SimpleName@@base64Digest @AT@ 7936 @LENGTH@ 12
------------DEL NumberLiteral@@0 @AT@ 7950 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 7962 @LENGTH@ 78
------------INS QualifiedName@@Alphabet.STANDARD @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 8015 @LENGTH@ 17
---------------INS SimpleName@@Alphabet @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 8015 @LENGTH@ 8
---------------INS SimpleName@@STANDARD @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 8024 @LENGTH@ 8
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 8034 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:ofChars:[base64Digest] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 7962 @LENGTH@ 39
------------INS SimpleName@@base64Digest @TO@ MethodInvocation@@MethodName:ofChars:[base64Digest] @AT@ 7988 @LENGTH@ 12
---------INS SimpleName@@MethodName:drain:[] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 8041 @LENGTH@ 7


UPD VariableDeclarationStatement@@Map<String,String> result=new LinkedHashMap<>(keyValues.length / 2); @TO@ Map<String,String> result=new LinkedHashMap<String,String>(keyValues.length / 2); @AT@ 1570 @LENGTH@ 71
---UPD VariableDeclarationFragment@@result=new LinkedHashMap<>(keyValues.length / 2) @TO@ result=new LinkedHashMap<String,String>(keyValues.length / 2) @AT@ 1590 @LENGTH@ 50
------UPD ClassInstanceCreation@@LinkedHashMap<>[keyValues.length / 2] @TO@ LinkedHashMap<String,String>[keyValues.length / 2] @AT@ 1599 @LENGTH@ 41
---------UPD ParameterizedType@@LinkedHashMap<> @TO@ LinkedHashMap<String,String> @AT@ 1603 @LENGTH@ 15
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 1614 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 1622 @LENGTH@ 6


INS FieldDeclaration@@final, String, [ATI="ati"] @TO@ TypeDeclaration@@[public]AccessTokenConverter,  @AT@ 1050 @LENGTH@ 25
---INS Modifier@@final @TO@ FieldDeclaration@@final, String, [ATI="ati"] @AT@ 1050 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@final, String, [ATI="ati"] @AT@ 1056 @LENGTH@ 6
---INS VariableDeclarationFragment@@ATI="ati" @TO@ FieldDeclaration@@final, String, [ATI="ati"] @AT@ 1063 @LENGTH@ 11
------INS SimpleName@@ATI @TO@ VariableDeclarationFragment@@ATI="ati" @AT@ 1063 @LENGTH@ 3
------INS StringLiteral@@"ati" @TO@ VariableDeclarationFragment@@ATI="ati" @AT@ 1069 @LENGTH@ 5


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 5892 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 5922 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 5930 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 5934 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 5940 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 5948 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new IOException(String.format("Unsupported 7z version (%d,%d)",Byte.valueOf(archiveVersionMajor),Byte.valueOf(archiveVersionMinor))) @TO@ ClassInstanceCreation:new IOException(String.format("Unsupported 7z version (%d,%d)",archiveVersionMajor,archiveVersionMinor)) @AT@ 5653 @LENGTH@ 161
---UPD ClassInstanceCreation@@IOException[String.format("Unsupported 7z version (%d,%d)",Byte.valueOf(archiveVersionMajor),Byte.valueOf(archiveVersionMinor))] @TO@ IOException[String.format("Unsupported 7z version (%d,%d)",archiveVersionMajor,archiveVersionMinor)] @AT@ 5659 @LENGTH@ 154
------UPD MethodInvocation@@String.format("Unsupported 7z version (%d,%d)",Byte.valueOf(archiveVersionMajor),Byte.valueOf(archiveVersionMinor)) @TO@ String.format("Unsupported 7z version (%d,%d)",archiveVersionMajor,archiveVersionMinor) @AT@ 5675 @LENGTH@ 137
---------UPD SimpleName@@MethodName:format:["Unsupported 7z version (%d,%d)", Byte.valueOf(archiveVersionMajor), Byte.valueOf(archiveVersionMinor)] @TO@ MethodName:format:["Unsupported 7z version (%d,%d)", archiveVersionMajor, archiveVersionMinor] @AT@ 5682 @LENGTH@ 130
------------DEL MethodInvocation@@Byte.valueOf(archiveVersionMajor) @AT@ 5743 @LENGTH@ 33
---------------DEL SimpleName@@Name:Byte @AT@ 5743 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:valueOf:[archiveVersionMajor] @AT@ 5748 @LENGTH@ 28
------------MOV SimpleName@@archiveVersionMajor @TO@ SimpleName@@MethodName:format:["Unsupported 7z version (%d,%d)", Byte.valueOf(archiveVersionMajor), Byte.valueOf(archiveVersionMinor)] @AT@ 5756 @LENGTH@ 19
------------DEL MethodInvocation@@Byte.valueOf(archiveVersionMinor) @AT@ 5778 @LENGTH@ 33
---------------DEL SimpleName@@Name:Byte @AT@ 5778 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:valueOf:[archiveVersionMinor] @AT@ 5783 @LENGTH@ 28
------------MOV SimpleName@@archiveVersionMinor @TO@ SimpleName@@MethodName:format:["Unsupported 7z version (%d,%d)", Byte.valueOf(archiveVersionMajor), Byte.valueOf(archiveVersionMinor)] @AT@ 5791 @LENGTH@ 19


UPD TypeDeclaration@@[@UriEndpoint(scheme="pdf",title="Pdf",syntax="pdf:operation",producerOnly=true,label="pdf"), public]PdfEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="pdf",title="PDF",syntax="pdf:operation",producerOnly=true,label="pdf,printing"), public]PdfEndpoint, DefaultEndpoint @AT@ 1109 @LENGTH@ 1045
---UPD NormalAnnotation@@@UriEndpoint(scheme="pdf",title="Pdf",syntax="pdf:operation",producerOnly=true,label="pdf") @TO@ @UriEndpoint(scheme="pdf",title="PDF",syntax="pdf:operation",producerOnly=true,label="pdf,printing") @AT@ 1109 @LENGTH@ 105


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1916 @LENGTH@ 82
---UPD MethodInvocation@@assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1916 @LENGTH@ 81
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\"")] @AT@ 1916 @LENGTH@ 81
---------UPD MethodInvocation@@json.contains("\"host\": { \"kind\": \"path\", \"type\": \"string\"") @TO@ json.contains("\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\"") @AT@ 1927 @LENGTH@ 69
------------UPD SimpleName@@MethodName:contains:["\"host\": { \"kind\": \"path\", \"type\": \"string\""] @TO@ MethodName:contains:["\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\""] @AT@ 1932 @LENGTH@ 64
---------------UPD StringLiteral@@"\"host\": { \"kind\": \"path\", \"type\": \"string\"" @TO@ "\"host\": { \"kind\": \"path\", \"required\": \"true\", \"type\": \"string\"" @AT@ 1941 @LENGTH@ 54


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 4684 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 4714 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 4722 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 4726 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 4732 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 4740 @LENGTH@ 10


UPD VariableDeclarationStatement@@LlapTaskSchedulerService.NodeInfo disabledNodeInfo=tsWrapper.ts.disabledNodes.peek(); @TO@ LlapTaskSchedulerService.NodeInfo disabledNodeInfo=tsWrapper.ts.disabledNodesQueue.peek(); @AT@ 4461 @LENGTH@ 87
---UPD VariableDeclarationFragment@@disabledNodeInfo=tsWrapper.ts.disabledNodes.peek() @TO@ disabledNodeInfo=tsWrapper.ts.disabledNodesQueue.peek() @AT@ 4495 @LENGTH@ 52
------UPD MethodInvocation@@tsWrapper.ts.disabledNodes.peek() @TO@ tsWrapper.ts.disabledNodesQueue.peek() @AT@ 4514 @LENGTH@ 33
---------UPD QualifiedName@@Name:tsWrapper.ts.disabledNodes @TO@ Name:tsWrapper.ts.disabledNodesQueue @AT@ 4514 @LENGTH@ 26


UPD VariableDeclarationStatement@@RowIndex[] indices=rows.readRowIndex(stripeIx); @TO@ RowIndex[] indices=rows.readRowIndex(stripeIx,null); @AT@ 6233 @LENGTH@ 49
---UPD VariableDeclarationFragment@@indices=rows.readRowIndex(stripeIx) @TO@ indices=rows.readRowIndex(stripeIx,null) @AT@ 6244 @LENGTH@ 37
------UPD MethodInvocation@@rows.readRowIndex(stripeIx) @TO@ rows.readRowIndex(stripeIx,null) @AT@ 6254 @LENGTH@ 27
---------UPD SimpleName@@MethodName:readRowIndex:[stripeIx] @TO@ MethodName:readRowIndex:[stripeIx, null] @AT@ 6259 @LENGTH@ 22
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:readRowIndex:[stripeIx] @AT@ 6282 @LENGTH@ 4


INS IfStatement@@if (isPlatform("windows")) {  Thread.sleep(1000);} @TO@ MethodDeclaration@@public, void, MethodName:testPropertyInject, Exception,  @AT@ 1155 @LENGTH@ 102
---INS MethodInvocation@@isPlatform("windows") @TO@ IfStatement@@if (isPlatform("windows")) {  Thread.sleep(1000);} @AT@ 1159 @LENGTH@ 21
------INS SimpleName@@MethodName:isPlatform:["windows"] @TO@ MethodInvocation@@isPlatform("windows") @AT@ 1159 @LENGTH@ 21
---------INS StringLiteral@@"windows" @TO@ SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1170 @LENGTH@ 9
---INS Block@@ThenBody:{  Thread.sleep(1000);} @TO@ IfStatement@@if (isPlatform("windows")) {  Thread.sleep(1000);} @AT@ 1182 @LENGTH@ 75
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ Block@@ThenBody:{  Thread.sleep(1000);} @AT@ 1228 @LENGTH@ 19
---------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 1228 @LENGTH@ 18
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1228 @LENGTH@ 6
------------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1235 @LENGTH@ 11
---------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 1241 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:decodeBatch, OrcBatchKey batchKey, EncodedColumnBatch batch, Consumer<ColumnVectorBatch> downstreamConsumer,  @TO@ protected, void, MethodName:decodeBatch, EncodedColumnBatch<OrcBatchKey> batch, Consumer<ColumnVectorBatch> downstreamConsumer,  @AT@ 1662 @LENGTH@ 639
---DEL SingleVariableDeclaration@@OrcBatchKey batchKey @AT@ 1689 @LENGTH@ 20
------DEL SimpleType@@OrcBatchKey @AT@ 1689 @LENGTH@ 11
------DEL SimpleName@@batchKey @AT@ 1701 @LENGTH@ 8
---UPD SingleVariableDeclaration@@EncodedColumnBatch batch @TO@ EncodedColumnBatch<OrcBatchKey> batch @AT@ 1717 @LENGTH@ 24
------DEL SimpleType@@EncodedColumnBatch @AT@ 1717 @LENGTH@ 18
------INS ParameterizedType@@EncodedColumnBatch<OrcBatchKey> @TO@ SingleVariableDeclaration@@EncodedColumnBatch batch @AT@ 1751 @LENGTH@ 31
---------INS SimpleType@@EncodedColumnBatch @TO@ ParameterizedType@@EncodedColumnBatch<OrcBatchKey> @AT@ 1751 @LENGTH@ 18
---------INS SimpleType@@OrcBatchKey @TO@ ParameterizedType@@EncodedColumnBatch<OrcBatchKey> @AT@ 1770 @LENGTH@ 11


INS TryStatement@@try {  new URL("http://localhost:" + port).openStream();} catch (ConnectException ex) {  return false;} @TO@ MethodDeclaration@@public, Boolean, MethodName:call, Exception,  @AT@ 1737 @LENGTH@ 175
---MOV ExpressionStatement@@ClassInstanceCreation:new URL("http://localhost:" + port) @TO@ TryStatement@@try {  new URL("http://localhost:" + port).openStream();} catch (ConnectException ex) {  return false;} @AT@ 1620 @LENGTH@ 36
------INS MethodInvocation@@new URL("http://localhost:" + port).openStream() @TO@ ExpressionStatement@@ClassInstanceCreation:new URL("http://localhost:" + port) @AT@ 1763 @LENGTH@ 48
---------MOV ClassInstanceCreation@@URL["http://localhost:" + port] @TO@ MethodInvocation@@new URL("http://localhost:" + port).openStream() @AT@ 1620 @LENGTH@ 35
---------MOV ClassInstanceCreation@@URL["http://localhost:" + port] @TO@ MethodInvocation@@new URL("http://localhost:" + port).openStream() @AT@ 1620 @LENGTH@ 35
---------INS SimpleName@@MethodName:openStream:[] @TO@ MethodInvocation@@new URL("http://localhost:" + port).openStream() @AT@ 1799 @LENGTH@ 12
---INS CatchClause@@catch (ConnectException ex) {  return false;} @TO@ TryStatement@@try {  new URL("http://localhost:" + port).openStream();} catch (ConnectException ex) {  return false;} @AT@ 1831 @LENGTH@ 81
------INS SingleVariableDeclaration@@ConnectException ex @TO@ CatchClause@@catch (ConnectException ex) {  return false;} @AT@ 1838 @LENGTH@ 19
---------INS SimpleType@@ConnectException @TO@ SingleVariableDeclaration@@ConnectException ex @AT@ 1838 @LENGTH@ 16
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@ConnectException ex @AT@ 1855 @LENGTH@ 2
------INS ReturnStatement@@BooleanLiteral:false @TO@ CatchClause@@catch (ConnectException ex) {  return false;} @AT@ 1881 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1888 @LENGTH@ 5


UPD TypeDeclaration@@[public]ResourceUtils,  @TO@ [public, final]ResourceUtils,  @AT@ 859 @LENGTH@ 246
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ResourceUtils,  @AT@ 866 @LENGTH@ 5


INS VariableDeclarationStatement@@int refCount=this.refCount.get(); @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 4264 @LENGTH@ 35
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int refCount=this.refCount.get(); @AT@ 4264 @LENGTH@ 3
---INS VariableDeclarationFragment@@refCount=this.refCount.get() @TO@ VariableDeclarationStatement@@int refCount=this.refCount.get(); @AT@ 4268 @LENGTH@ 30
------INS SimpleName@@refCount @TO@ VariableDeclarationFragment@@refCount=this.refCount.get() @AT@ 4268 @LENGTH@ 8
------INS MethodInvocation@@this.refCount.get() @TO@ VariableDeclarationFragment@@refCount=this.refCount.get() @AT@ 4279 @LENGTH@ 19
---------INS FieldAccess@@this.refCount @TO@ MethodInvocation@@this.refCount.get() @AT@ 4279 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.refCount @AT@ 4279 @LENGTH@ 4
------------INS SimpleName@@refCount @TO@ FieldAccess@@this.refCount @AT@ 4284 @LENGTH@ 8
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.refCount.get() @AT@ 4293 @LENGTH@ 5


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=false"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=false"] @AT@ 1242 @LENGTH@ 87
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=false" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=false" @AT@ 1257 @LENGTH@ 71
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=false" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=false" @AT@ 1263 @LENGTH@ 65
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1263 @LENGTH@ 25


DEL ExpressionStatement@@MethodInvocation:setMessageId(exchange) @AT@ 11282 @LENGTH@ 23
---DEL MethodInvocation@@setMessageId(exchange) @AT@ 11282 @LENGTH@ 22
------DEL SimpleName@@MethodName:setMessageId:[exchange] @AT@ 11282 @LENGTH@ 22
---------DEL SimpleName@@exchange @AT@ 11295 @LENGTH@ 8


INS IfStatement@@if (accessToken == null) {  throw new AccessTokenRequiredException(resource);} @TO@ MethodDeclaration@@public, void, MethodName:authenticate, OAuth2ProtectedResourceDetails resource, OAuth2ClientContext clientContext, ClientHttpRequest request,  @AT@ 1343 @LENGTH@ 83
---INS InfixExpression@@accessToken == null @TO@ IfStatement@@if (accessToken == null) {  throw new AccessTokenRequiredException(resource);} @AT@ 1347 @LENGTH@ 19
------INS SimpleName@@accessToken @TO@ InfixExpression@@accessToken == null @AT@ 1347 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@accessToken == null @AT@ 1358 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@accessToken == null @AT@ 1362 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new AccessTokenRequiredException(resource);} @TO@ IfStatement@@if (accessToken == null) {  throw new AccessTokenRequiredException(resource);} @AT@ 1368 @LENGTH@ 58
------INS ThrowStatement@@ClassInstanceCreation:new AccessTokenRequiredException(resource) @TO@ Block@@ThenBody:{  throw new AccessTokenRequiredException(resource);} @AT@ 1373 @LENGTH@ 49
---------INS ClassInstanceCreation@@AccessTokenRequiredException[resource] @TO@ ThrowStatement@@ClassInstanceCreation:new AccessTokenRequiredException(resource) @AT@ 1379 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@AccessTokenRequiredException[resource] @AT@ 1379 @LENGTH@ 3
------------INS SimpleType@@AccessTokenRequiredException @TO@ ClassInstanceCreation@@AccessTokenRequiredException[resource] @AT@ 1383 @LENGTH@ 28
------------INS SimpleName@@resource @TO@ ClassInstanceCreation@@AccessTokenRequiredException[resource] @AT@ 1412 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:nonce.getBytes() @TO@ MethodInvocation:nonce.getBytes(StandardCharsets.UTF_8) @AT@ 2226 @LENGTH@ 24
---UPD MethodInvocation@@nonce.getBytes() @TO@ nonce.getBytes(StandardCharsets.UTF_8) @AT@ 2233 @LENGTH@ 16
------UPD SimpleName@@MethodName:getBytes:[] @TO@ MethodName:getBytes:[StandardCharsets.UTF_8] @AT@ 2239 @LENGTH@ 10
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:getBytes:[] @AT@ 2223 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2223 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 2240 @LENGTH@ 5


UPD MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @TO@ public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias, boolean allowNull,  @AT@ 2488 @LENGTH@ 612
---INS SingleVariableDeclaration@@boolean allowNull @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 2850 @LENGTH@ 17
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean allowNull @AT@ 2850 @LENGTH@ 7
------INS SimpleName@@allowNull @TO@ SingleVariableDeclaration@@boolean allowNull @AT@ 2858 @LENGTH@ 9
---INS IfStatement@@if (allowNull) {  attribute.setAllowNull(true);} @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createAttribute, String name, ModelType type, String groupName, boolean runtimeOnly, boolean alias,  @AT@ 3317 @LENGTH@ 68
------INS SimpleName@@allowNull @TO@ IfStatement@@if (allowNull) {  attribute.setAllowNull(true);} @AT@ 3321 @LENGTH@ 9
------INS Block@@ThenBody:{  attribute.setAllowNull(true);} @TO@ IfStatement@@if (allowNull) {  attribute.setAllowNull(true);} @AT@ 3332 @LENGTH@ 53
---------INS ExpressionStatement@@MethodInvocation:attribute.setAllowNull(true) @TO@ Block@@ThenBody:{  attribute.setAllowNull(true);} @AT@ 3346 @LENGTH@ 29
------------INS MethodInvocation@@attribute.setAllowNull(true) @TO@ ExpressionStatement@@MethodInvocation:attribute.setAllowNull(true) @AT@ 3346 @LENGTH@ 28
---------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.setAllowNull(true) @AT@ 3346 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@attribute.setAllowNull(true) @AT@ 3356 @LENGTH@ 18
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAllowNull:[true] @AT@ 3369 @LENGTH@ 4


UPD TypeDeclaration@@[public]StringHelper,  @TO@ [public, final]StringHelper,  @AT@ 847 @LENGTH@ 655
---INS Modifier@@final @TO@ TypeDeclaration@@[public]StringHelper,  @AT@ 854 @LENGTH@ 5


UPD MethodDeclaration@@private, long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @TO@ public, long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 25279 @LENGTH@ 519
---UPD Modifier@@private @TO@ public @AT@ 25279 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:mvc.perform(get("/")).andExpect(status().isOk()).andExpect(doesNotHaveLinkWithRel(mappings.getMappingFor(CreditCard.class).getRel())) @TO@ MethodInvocation:mvc.perform(get("/")).andExpect(status().isOk()).andExpect(doesNotHaveLinkWithRel(mappings.getMetadataFor(CreditCard.class).getRel())) @AT@ 3887 @LENGTH@ 150
---UPD MethodInvocation@@mvc.perform(get("/")).andExpect(status().isOk()).andExpect(doesNotHaveLinkWithRel(mappings.getMappingFor(CreditCard.class).getRel())) @TO@ mvc.perform(get("/")).andExpect(status().isOk()).andExpect(doesNotHaveLinkWithRel(mappings.getMetadataFor(CreditCard.class).getRel())) @AT@ 3887 @LENGTH@ 149
------UPD SimpleName@@MethodName:andExpect:[doesNotHaveLinkWithRel(mappings.getMappingFor(CreditCard.class).getRel())] @TO@ MethodName:andExpect:[doesNotHaveLinkWithRel(mappings.getMetadataFor(CreditCard.class).getRel())] @AT@ 3952 @LENGTH@ 84
---------UPD MethodInvocation@@doesNotHaveLinkWithRel(mappings.getMappingFor(CreditCard.class).getRel()) @TO@ doesNotHaveLinkWithRel(mappings.getMetadataFor(CreditCard.class).getRel()) @AT@ 3962 @LENGTH@ 73
------------UPD SimpleName@@MethodName:doesNotHaveLinkWithRel:[mappings.getMappingFor(CreditCard.class).getRel()] @TO@ MethodName:doesNotHaveLinkWithRel:[mappings.getMetadataFor(CreditCard.class).getRel()] @AT@ 3962 @LENGTH@ 73
---------------UPD MethodInvocation@@mappings.getMappingFor(CreditCard.class).getRel() @TO@ mappings.getMetadataFor(CreditCard.class).getRel() @AT@ 3985 @LENGTH@ 49
------------------UPD MethodInvocation@@MethodName:getMappingFor:[CreditCard.class] @TO@ MethodName:getMetadataFor:[CreditCard.class] @AT@ 3985 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Recevied ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names") @TO@ MethodInvocation:LOG.warn("Received ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names") @AT@ 19257 @LENGTH@ 224
---UPD MethodInvocation@@LOG.warn("Recevied ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names") @TO@ LOG.warn("Received ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names") @AT@ 19257 @LENGTH@ 223
------UPD SimpleName@@MethodName:warn:["Recevied ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names"] @TO@ MethodName:warn:["Received ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names"] @AT@ 19261 @LENGTH@ 219
---------UPD InfixExpression@@"Recevied ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names" @TO@ "Received ping from unknown node: " + hostname + ":"+ port+ ". Could be caused by pre-emption by the AM,"+ " or a mismatched hostname. Enable debug logging for mismatched host names" @AT@ 19266 @LENGTH@ 213
------------UPD StringLiteral@@"Recevied ping from unknown node: " @TO@ "Received ping from unknown node: " @AT@ 19266 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @TO@ MethodInvocation:assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @AT@ 17964 @LENGTH@ 201
---UPD MethodInvocation@@assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @TO@ assertTrue(json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")) @AT@ 17964 @LENGTH@ 200
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")] @TO@ MethodName:assertTrue:[json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",")] @AT@ 17964 @LENGTH@ 200
---------UPD MethodInvocation@@json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",") @TO@ json.contains("\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\",") @AT@ 17975 @LENGTH@ 188
------------UPD SimpleName@@MethodName:contains:["\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\","] @TO@ MethodName:contains:["\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\","] @AT@ 17980 @LENGTH@ 183
---------------INS InfixExpression@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @TO@ SimpleName@@MethodName:contains:["\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\","] @AT@ 17895 @LENGTH@ 190
------------------INS StringLiteral@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" @TO@ InfixExpression@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17895 @LENGTH@ 88
------------------INS Operator@@+ @TO@ InfixExpression@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17983 @LENGTH@ 1
------------------INS StringLiteral@@" \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @TO@ InfixExpression@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\":" + " \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17998 @LENGTH@ 87
---------------DEL StringLiteral@@"\"defaultQueueFactory\": { \"kind\": \"property\", \"type\": \"object\", \"javaType\": \"org.apache.camel.component.seda.BlockingQueueFactory<org.apache.camel.Exchange>\"," @AT@ 17989 @LENGTH@ 173


UPD VariableDeclarationStatement@@Class<?> domainType=RepositoriesUtils.getDomainType(repositoryType); @TO@ Class<?> domainType=metadata.getDomainType(); @AT@ 3342 @LENGTH@ 70
---UPD VariableDeclarationFragment@@domainType=RepositoriesUtils.getDomainType(repositoryType) @TO@ domainType=metadata.getDomainType() @AT@ 3351 @LENGTH@ 60
------UPD MethodInvocation@@RepositoriesUtils.getDomainType(repositoryType) @TO@ metadata.getDomainType() @AT@ 3364 @LENGTH@ 47
---------UPD SimpleName@@Name:RepositoriesUtils @TO@ Name:metadata @AT@ 3364 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getDomainType:[repositoryType] @TO@ MethodName:getDomainType:[] @AT@ 3382 @LENGTH@ 29
------------DEL SimpleName@@repositoryType @AT@ 3396 @LENGTH@ 14


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @TO@ TypeDeclaration@@[public]EventType,  @AT@ 1980 @LENGTH@ 55
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @AT@ 1980 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @AT@ 1988 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @AT@ 1995 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @AT@ 2001 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=20150416L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=20150416L] @AT@ 2006 @LENGTH@ 28
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=20150416L @AT@ 2006 @LENGTH@ 16
------INS NumberLiteral@@20150416L @TO@ VariableDeclarationFragment@@serialVersionUID=20150416L @AT@ 2025 @LENGTH@ 9


UPD MethodDeclaration@@protected, abstract, SalesforceException, MethodName:createRestException, ContentExchange httpExchange,  @TO@ protected, abstract, SalesforceException, MethodName:createRestException, ContentExchange httpExchange, String reason,  @AT@ 7446 @LENGTH@ 89
---INS SingleVariableDeclaration@@String reason @TO@ MethodDeclaration@@protected, abstract, SalesforceException, MethodName:createRestException, ContentExchange httpExchange,  @AT@ 7543 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String reason @AT@ 7543 @LENGTH@ 6
------INS SimpleName@@reason @TO@ SingleVariableDeclaration@@String reason @AT@ 7550 @LENGTH@ 6


MOV IfStatement@@if (accessTokenProvider != null) {  client.setAccessTokenProvider(accessTokenProvider);} @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:getAccessToken,  @AT@ 8314 @LENGTH@ 95


UPD Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  if (count == 0) {    throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);  }  if (directBuf.position() != pos) {    RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());  }  pos+=count;  if (pos > endPos) {    throw new AssertionError("Position " + pos + " length "+ len+ "/"+ endPos+ " after reading "+ count);  }  directBuf.position(pos);} @TO@ WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  if (count == 0) {    throw new IOException("0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);  }  pos+=count;  if (pos > endPos) {    throw new AssertionError("Position " + pos + " length "+ len+ "/"+ endPos+ " after reading "+ count);  }  directBuf.position(pos);} @AT@ 10115 @LENGTH@ 801
---UPD IfStatement@@if (count == 0) {  throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);} @TO@ if (count == 0) {  throw new IOException("0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);} @AT@ 10228 @LENGTH@ 183
------UPD Block@@ThenBody:{  throw new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);} @TO@ ThenBody:{  throw new IOException("0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos);} @AT@ 10244 @LENGTH@ 167
---------UPD ThrowStatement@@ClassInstanceCreation:new AssertionError("HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos) @TO@ ClassInstanceCreation:new IOException("0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos) @AT@ 10260 @LENGTH@ 137
------------UPD ClassInstanceCreation@@AssertionError["HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos] @TO@ IOException["0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos] @AT@ 10266 @LENGTH@ 130
---------------UPD SimpleType@@AssertionError @TO@ IOException @AT@ 10270 @LENGTH@ 14
---------------UPD InfixExpression@@"HDFS won't read any bloody data " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos @TO@ "0-length read: " + (endPos - pos) + "@"+ (pos - startPos)+ " and "+ pos @AT@ 10285 @LENGTH@ 110
------------------UPD StringLiteral@@"HDFS won't read any bloody data " @TO@ "0-length read: " @AT@ 10285 @LENGTH@ 34
---DEL IfStatement@@if (directBuf.position() != pos) {  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @AT@ 10424 @LENGTH@ 250
------DEL InfixExpression@@directBuf.position() != pos @AT@ 10428 @LENGTH@ 27
---------DEL MethodInvocation@@directBuf.position() @AT@ 10428 @LENGTH@ 20
------------DEL SimpleName@@Name:directBuf @AT@ 10428 @LENGTH@ 9
------------DEL SimpleName@@MethodName:position:[] @AT@ 10438 @LENGTH@ 10
---------DEL Operator@@!= @AT@ 10448 @LENGTH@ 2
---------DEL SimpleName@@pos @AT@ 10452 @LENGTH@ 3
------DEL Block@@ThenBody:{  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @AT@ 10457 @LENGTH@ 217
---------DEL ExpressionStatement@@MethodInvocation:RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @AT@ 10473 @LENGTH@ 187
------------DEL MethodInvocation@@RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @AT@ 10473 @LENGTH@ 186
---------------DEL QualifiedName@@Name:RecordReaderImpl.LOG @AT@ 10473 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:info:["Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()] @AT@ 10494 @LENGTH@ 165
------------------DEL InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10499 @LENGTH@ 159
---------------------DEL StringLiteral@@"Warning - position mismatch from " @AT@ 10499 @LENGTH@ 35
---------------------DEL Operator@@+ @AT@ 10534 @LENGTH@ 1
---------------------DEL MethodInvocation@@file.getClass() @AT@ 10537 @LENGTH@ 15
------------------------DEL SimpleName@@Name:file @AT@ 10537 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 10542 @LENGTH@ 10
---------------------DEL StringLiteral@@": after reading " @AT@ 10573 @LENGTH@ 18
---------------------DEL SimpleName@@count @AT@ 10594 @LENGTH@ 5
---------------------DEL StringLiteral@@", expected " @AT@ 10602 @LENGTH@ 13
---------------------DEL SimpleName@@pos @AT@ 10618 @LENGTH@ 3
---------------------DEL StringLiteral@@" but got " @AT@ 10624 @LENGTH@ 11
---------------------DEL MethodInvocation@@directBuf.position() @AT@ 10638 @LENGTH@ 20
------------------------DEL SimpleName@@Name:directBuf @AT@ 10638 @LENGTH@ 9
------------------------DEL SimpleName@@MethodName:position:[] @AT@ 10648 @LENGTH@ 10


INS FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @TO@ TypeDeclaration@@[@RunWith(JMockit.class), public, abstract]AbstractTest,  @AT@ 2423 @LENGTH@ 62
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @AT@ 2423 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @AT@ 2433 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @AT@ 2440 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @AT@ 2446 @LENGTH@ 6
---INS VariableDeclarationFragment@@TEST_SERVER_1="test_server_1" @TO@ FieldDeclaration@@protected, static, final, String, [TEST_SERVER_1="test_server_1"] @AT@ 2453 @LENGTH@ 31
------INS SimpleName@@TEST_SERVER_1 @TO@ VariableDeclarationFragment@@TEST_SERVER_1="test_server_1" @AT@ 2453 @LENGTH@ 13
------INS StringLiteral@@"test_server_1" @TO@ VariableDeclarationFragment@@TEST_SERVER_1="test_server_1" @AT@ 2469 @LENGTH@ 15


UPD FieldDeclaration@@private, long, [minAge=0] @TO@ private, long, [minAge] @AT@ 1822 @LENGTH@ 24
---UPD VariableDeclarationFragment@@minAge=0 @TO@ minAge @AT@ 1835 @LENGTH@ 10
------DEL NumberLiteral@@0 @AT@ 1844 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:context.getProperties().put(Exchange.COMPILE_SCRIPT,"true") @TO@ MethodInvocation:context.getProperties().put(Exchange.COMPILE_SCRIPT,"false") @AT@ 2166 @LENGTH@ 61
---UPD MethodInvocation@@context.getProperties().put(Exchange.COMPILE_SCRIPT,"true") @TO@ context.getProperties().put(Exchange.COMPILE_SCRIPT,"false") @AT@ 2166 @LENGTH@ 60
------UPD SimpleName@@MethodName:put:[Exchange.COMPILE_SCRIPT, "true"] @TO@ MethodName:put:[Exchange.COMPILE_SCRIPT, "false"] @AT@ 2190 @LENGTH@ 36
---------UPD StringLiteral@@"true" @TO@ "false" @AT@ 2219 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @TO@ TypeDeclaration@@[public]DiskRange,  @AT@ 2004 @LENGTH@ 91
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2004 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2011 @LENGTH@ 4
---INS SimpleName@@MethodName:shiftBy @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2016 @LENGTH@ 7
---INS SingleVariableDeclaration@@long baseOffset @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2024 @LENGTH@ 15
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long baseOffset @AT@ 2024 @LENGTH@ 4
------INS SimpleName@@baseOffset @TO@ SingleVariableDeclaration@@long baseOffset @AT@ 2029 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:offset-=baseOffset @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2047 @LENGTH@ 21
------INS Assignment@@offset-=baseOffset @TO@ ExpressionStatement@@Assignment:offset-=baseOffset @AT@ 2047 @LENGTH@ 20
---------INS SimpleName@@offset @TO@ Assignment@@offset-=baseOffset @AT@ 2047 @LENGTH@ 6
---------INS Operator@@-= @TO@ Assignment@@offset-=baseOffset @AT@ 2053 @LENGTH@ 2
---------INS SimpleName@@baseOffset @TO@ Assignment@@offset-=baseOffset @AT@ 2057 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:end-=baseOffset @TO@ MethodDeclaration@@public, void, MethodName:shiftBy, long baseOffset,  @AT@ 2073 @LENGTH@ 18
------INS Assignment@@end-=baseOffset @TO@ ExpressionStatement@@Assignment:end-=baseOffset @AT@ 2073 @LENGTH@ 17
---------INS SimpleName@@end @TO@ Assignment@@end-=baseOffset @AT@ 2073 @LENGTH@ 3
---------INS Operator@@-= @TO@ Assignment@@end-=baseOffset @AT@ 2076 @LENGTH@ 2
---------INS SimpleName@@baseOffset @TO@ Assignment@@end-=baseOffset @AT@ 2080 @LENGTH@ 10


UPD VariableDeclarationStatement@@String input=((StringObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()); @TO@ Object input=((PrimitiveObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()); @AT@ 1866 @LENGTH@ 99
---UPD SimpleType@@String @TO@ Object @AT@ 1866 @LENGTH@ 6
---UPD VariableDeclarationFragment@@input=((StringObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()) @TO@ input=((PrimitiveObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()) @AT@ 1873 @LENGTH@ 91
------UPD MethodInvocation@@((StringObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()) @TO@ ((PrimitiveObjectInspector)argumentOIs[0]).getPrimitiveJavaObject(arguments[0].get()) @AT@ 1881 @LENGTH@ 83
---------UPD ParenthesizedExpression@@((StringObjectInspector)argumentOIs[0]) @TO@ ((PrimitiveObjectInspector)argumentOIs[0]) @AT@ 1881 @LENGTH@ 40
------------UPD CastExpression@@(StringObjectInspector)argumentOIs[0] @TO@ (PrimitiveObjectInspector)argumentOIs[0] @AT@ 1882 @LENGTH@ 38
---------------UPD SimpleType@@StringObjectInspector @TO@ PrimitiveObjectInspector @AT@ 1883 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals("charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth",new String(message2,"UTF-8")) @TO@ MethodInvocation:assertEquals("charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth",new String(message2,StandardCharsets.UTF_8)) @AT@ 31753 @LENGTH@ 370
---UPD MethodInvocation@@assertEquals("charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth",new String(message2,"UTF-8")) @TO@ assertEquals("charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth",new String(message2,StandardCharsets.UTF_8)) @AT@ 31753 @LENGTH@ 369
------UPD SimpleName@@MethodName:assertEquals:["charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth", new String(message2,"UTF-8")] @TO@ MethodName:assertEquals:["charset=utf-8,username=\"\u0438\u4F60\uD83C\uDCA1\",realm=\"realm.\u0438\u4F60\uD83C\uDCA1.com\",nonce=\"sn\u0438\u4F60\uD83C\uDCA1\",nc=00000001,cnonce=\"cn\u0438\u4F60\uD83C\uDCA1\",digest-uri=\"\u0438\u4F60\uD83C\uDCA1/realm.\u0438\u4F60\uD83C\uDCA1.com\",maxbuf=65536,response=420939e06d2d748c157c5e33499b41a9,qop=auth", new String(message2,StandardCharsets.UTF_8)] @AT@ 31753 @LENGTH@ 369
---------UPD ClassInstanceCreation@@String[message2, "UTF-8"] @TO@ String[message2, StandardCharsets.UTF_8] @AT@ 32092 @LENGTH@ 29
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[message2, "UTF-8"] @AT@ 32062 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 32062 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 32079 @LENGTH@ 5
------------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ ClassInstanceCreation@@String[message2, "UTF-8"] @AT@ 32062 @LENGTH@ 22
---------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 32062 @LENGTH@ 16
---------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 32079 @LENGTH@ 5
------------DEL StringLiteral@@"UTF-8" @AT@ 32113 @LENGTH@ 7


UPD IfStatement@@if (token == null) {  logger.debug("Token not found in request parameters.  Not an OAuth2 request.");} @TO@ if (token == null) {  logger.debug("Token not found in request parameters.  Not an OAuth2 request.");} else {  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE);} @AT@ 2201 @LENGTH@ 109
---INS Block@@ElseBody:{  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE);} @TO@ IfStatement@@if (token == null) {  logger.debug("Token not found in request parameters.  Not an OAuth2 request.");} @AT@ 2319 @LENGTH@ 110
------INS ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE) @TO@ Block@@ElseBody:{  request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE);} @AT@ 2325 @LENGTH@ 99
---------INS MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE) @TO@ ExpressionStatement@@MethodInvocation:request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE) @AT@ 2325 @LENGTH@ 98
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE) @AT@ 2325 @LENGTH@ 7
------------INS SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, OAuth2AccessToken.BEARER_TYPE] @TO@ MethodInvocation@@request.setAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE,OAuth2AccessToken.BEARER_TYPE) @AT@ 2333 @LENGTH@ 90
---------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, OAuth2AccessToken.BEARER_TYPE] @AT@ 2346 @LENGTH@ 45
------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 2346 @LENGTH@ 27
------------------INS SimpleName@@ACCESS_TOKEN_TYPE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 2374 @LENGTH@ 17
---------------INS QualifiedName@@OAuth2AccessToken.BEARER_TYPE @TO@ SimpleName@@MethodName:setAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE, OAuth2AccessToken.BEARER_TYPE] @AT@ 2393 @LENGTH@ 29
------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 2393 @LENGTH@ 17
------------------INS SimpleName@@BEARER_TYPE @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 2411 @LENGTH@ 11


MOV MethodDeclaration@@private, synchronized, void, MethodName:initEncryptor,  @TO@ TypeDeclaration@@[public]JasyptPropertiesParser, DefaultPropertiesParser @AT@ 2025 @LENGTH@ 691


UPD MethodDeclaration@@private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, Set<String> scope,  @TO@ private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, TokenRequest request,  @AT@ 7336 @LENGTH@ 696
---INS SingleVariableDeclaration@@TokenRequest request @TO@ MethodDeclaration@@private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, Set<String> scope,  @AT@ 7421 @LENGTH@ 20
------INS SimpleType@@TokenRequest @TO@ SingleVariableDeclaration@@TokenRequest request @AT@ 7421 @LENGTH@ 12
------INS SimpleName@@request @TO@ SingleVariableDeclaration@@TokenRequest request @AT@ 7434 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Set<String> scope @AT@ 7432 @LENGTH@ 17
------DEL ParameterizedType@@Set<String> @AT@ 7432 @LENGTH@ 11
------DEL SimpleName@@scope @AT@ 7444 @LENGTH@ 5
---INS VariableDeclarationStatement@@Set<String> scope=request.getScope(); @TO@ MethodDeclaration@@private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, Set<String> scope,  @AT@ 7497 @LENGTH@ 39
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> scope=request.getScope(); @AT@ 7497 @LENGTH@ 11
---------MOV SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 7432 @LENGTH@ 3
---------MOV SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 7436 @LENGTH@ 6
------INS VariableDeclarationFragment@@scope=request.getScope() @TO@ VariableDeclarationStatement@@Set<String> scope=request.getScope(); @AT@ 7509 @LENGTH@ 26
---------INS SimpleName@@scope @TO@ VariableDeclarationFragment@@scope=request.getScope() @AT@ 7509 @LENGTH@ 5
---------INS MethodInvocation@@request.getScope() @TO@ VariableDeclarationFragment@@scope=request.getScope() @AT@ 7517 @LENGTH@ 18
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getScope() @AT@ 7517 @LENGTH@ 7
------------INS SimpleName@@MethodName:getScope:[] @TO@ MethodInvocation@@request.getScope() @AT@ 7525 @LENGTH@ 10
---UPD IfStatement@@if (scope != null && !scope.isEmpty()) {  OAuth2Request clientAuth=authentication.getOAuth2Request();  Set<String> originalScope=clientAuth.getScope();  if (originalScope == null || !originalScope.containsAll(scope)) {    throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);  } else {    narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication());  }} @TO@ if (scope != null && !scope.isEmpty()) {  Set<String> originalScope=clientAuth.getScope();  if (originalScope == null || !originalScope.containsAll(scope)) {    throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);  } else {    clientAuth=clientAuth.narrowScope(scope);  }} @AT@ 7505 @LENGTH@ 505
------UPD Block@@ThenBody:{  OAuth2Request clientAuth=authentication.getOAuth2Request();  Set<String> originalScope=clientAuth.getScope();  if (originalScope == null || !originalScope.containsAll(scope)) {    throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);  } else {    narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication());  }} @TO@ ThenBody:{  Set<String> originalScope=clientAuth.getScope();  if (originalScope == null || !originalScope.containsAll(scope)) {    throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);  } else {    clientAuth=clientAuth.narrowScope(scope);  }} @AT@ 7544 @LENGTH@ 466
---------DEL VariableDeclarationStatement@@OAuth2Request clientAuth=authentication.getOAuth2Request(); @AT@ 7549 @LENGTH@ 61
------------DEL SimpleType@@OAuth2Request @AT@ 7549 @LENGTH@ 13
------------DEL VariableDeclarationFragment@@clientAuth=authentication.getOAuth2Request() @AT@ 7563 @LENGTH@ 46
---------------DEL SimpleName@@clientAuth @AT@ 7563 @LENGTH@ 10
---------------DEL MethodInvocation@@authentication.getOAuth2Request() @AT@ 7576 @LENGTH@ 33
------------------DEL SimpleName@@Name:authentication @AT@ 7576 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getOAuth2Request:[] @AT@ 7591 @LENGTH@ 18
---------UPD IfStatement@@if (originalScope == null || !originalScope.containsAll(scope)) {  throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);} else {  narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication());} @TO@ if (originalScope == null || !originalScope.containsAll(scope)) {  throw new InvalidScopeException("Unable to narrow the scope of the client authentication to " + scope + ".",originalScope);} else {  clientAuth=clientAuth.narrowScope(scope);} @AT@ 7668 @LENGTH@ 338
------------UPD Block@@ElseBody:{  narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication());} @TO@ ElseBody:{  clientAuth=clientAuth.narrowScope(scope);} @AT@ 7882 @LENGTH@ 124
---------------UPD ExpressionStatement@@Assignment:narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication()) @TO@ Assignment:clientAuth=clientAuth.narrowScope(scope) @AT@ 7888 @LENGTH@ 113
------------------UPD Assignment@@narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication()) @TO@ clientAuth=clientAuth.narrowScope(scope) @AT@ 7888 @LENGTH@ 112
---------------------UPD SimpleName@@narrowed @TO@ clientAuth @AT@ 7888 @LENGTH@ 8
---------------------DEL ClassInstanceCreation@@OAuth2Authentication[clientAuth.narrowScope(scope), authentication.getUserAuthentication()] @AT@ 7899 @LENGTH@ 101
------------------------DEL New@@new @AT@ 7899 @LENGTH@ 3
------------------------DEL SimpleType@@OAuth2Authentication @AT@ 7903 @LENGTH@ 20
------------------------DEL MethodInvocation@@authentication.getUserAuthentication() @AT@ 7961 @LENGTH@ 38
---------------------------DEL SimpleName@@Name:authentication @AT@ 7961 @LENGTH@ 14
---------------------------DEL SimpleName@@MethodName:getUserAuthentication:[] @AT@ 7976 @LENGTH@ 23
---------------------MOV MethodInvocation@@clientAuth.narrowScope(scope) @TO@ Assignment@@narrowed=new OAuth2Authentication(clientAuth.narrowScope(scope),authentication.getUserAuthentication()) @AT@ 7924 @LENGTH@ 29
---INS VariableDeclarationStatement@@OAuth2Request clientAuth=authentication.getOAuth2Request().refresh(request); @TO@ MethodDeclaration@@private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, Set<String> scope,  @AT@ 7539 @LENGTH@ 78
------INS SimpleType@@OAuth2Request @TO@ VariableDeclarationStatement@@OAuth2Request clientAuth=authentication.getOAuth2Request().refresh(request); @AT@ 7539 @LENGTH@ 13
------INS VariableDeclarationFragment@@clientAuth=authentication.getOAuth2Request().refresh(request) @TO@ VariableDeclarationStatement@@OAuth2Request clientAuth=authentication.getOAuth2Request().refresh(request); @AT@ 7553 @LENGTH@ 63
---------INS SimpleName@@clientAuth @TO@ VariableDeclarationFragment@@clientAuth=authentication.getOAuth2Request().refresh(request) @AT@ 7553 @LENGTH@ 10
---------INS MethodInvocation@@authentication.getOAuth2Request().refresh(request) @TO@ VariableDeclarationFragment@@clientAuth=authentication.getOAuth2Request().refresh(request) @AT@ 7566 @LENGTH@ 50
------------INS MethodInvocation@@MethodName:getOAuth2Request:[] @TO@ MethodInvocation@@authentication.getOAuth2Request().refresh(request) @AT@ 7566 @LENGTH@ 33
------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getOAuth2Request().refresh(request) @AT@ 7566 @LENGTH@ 14
------------INS SimpleName@@MethodName:refresh:[request] @TO@ MethodInvocation@@authentication.getOAuth2Request().refresh(request) @AT@ 7600 @LENGTH@ 16
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:refresh:[request] @AT@ 7608 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @TO@ MethodDeclaration@@private, OAuth2Authentication, MethodName:createRefreshedAuthentication, OAuth2Authentication authentication, Set<String> scope,  @AT@ 7993 @LENGTH@ 88
------INS Assignment@@narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @TO@ ExpressionStatement@@Assignment:narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @AT@ 7993 @LENGTH@ 87
---------INS SimpleName@@narrowed @TO@ Assignment@@narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @AT@ 7993 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @AT@ 8001 @LENGTH@ 1
---------INS ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @TO@ Assignment@@narrowed=new OAuth2Authentication(clientAuth,authentication.getUserAuthentication()) @AT@ 8004 @LENGTH@ 76
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @AT@ 8004 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @AT@ 8008 @LENGTH@ 20
------------INS SimpleName@@clientAuth @TO@ ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @AT@ 8029 @LENGTH@ 10
------------INS MethodInvocation@@authentication.getUserAuthentication() @TO@ ClassInstanceCreation@@OAuth2Authentication[clientAuth, authentication.getUserAuthentication()] @AT@ 8041 @LENGTH@ 38
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 8041 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication() @AT@ 8056 @LENGTH@ 23


INS ExpressionStatement@@ClassInstanceCreation:new WebConnectionWrapper(webClient){
  @Override public WebResponse getResponse(  WebRequest request) throws IOException {
    request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity");
    return super.getResponse(request);
  }
}
 @TO@ MethodDeclaration@@public, voidMethodName:LinkedInOAuthRequestFilter, OAuthParams oAuthParams, Map<String,Object> httpParams, boolean lazyAuth, String[] enabledProtocols,  @AT@ 5066 @LENGTH@ 305
---INS ClassInstanceCreation@@WebConnectionWrapper[webClient] @TO@ ExpressionStatement@@ClassInstanceCreation:new WebConnectionWrapper(webClient){
  @Override public WebResponse getResponse(  WebRequest request) throws IOException {
    request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity");
    return super.getResponse(request);
  }
}
 @AT@ 5066 @LENGTH@ 304
------INS New@@new @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 5066 @LENGTH@ 3
------INS SimpleType@@WebConnectionWrapper @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 5070 @LENGTH@ 20
------INS SimpleName@@webClient @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 5091 @LENGTH@ 9
------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@WebConnectionWrapper[webClient] @AT@ 5102 @LENGTH@ 268
---------INS MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5138 @LENGTH@ 222
------------INS Modifier@@public @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5138 @LENGTH@ 6
------------INS SimpleType@@WebResponse @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5145 @LENGTH@ 11
------------INS SimpleName@@MethodName:getResponse @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5157 @LENGTH@ 11
------------INS SingleVariableDeclaration@@WebRequest request @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5169 @LENGTH@ 18
---------------INS SimpleType@@WebRequest @TO@ SingleVariableDeclaration@@WebRequest request @AT@ 5169 @LENGTH@ 10
---------------INS SimpleName@@request @TO@ SingleVariableDeclaration@@WebRequest request @AT@ 5180 @LENGTH@ 7
------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5196 @LENGTH@ 11
------------INS ExpressionStatement@@MethodInvocation:request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5226 @LENGTH@ 69
---------------INS MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @TO@ ExpressionStatement@@MethodInvocation:request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 5226 @LENGTH@ 68
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 5226 @LENGTH@ 7
------------------INS SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @TO@ MethodInvocation@@request.setAdditionalHeader(HttpHeaders.ACCEPT_ENCODING,"identity") @AT@ 5234 @LENGTH@ 60
---------------------INS QualifiedName@@HttpHeaders.ACCEPT_ENCODING @TO@ SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @AT@ 5254 @LENGTH@ 27
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.ACCEPT_ENCODING @AT@ 5254 @LENGTH@ 11
------------------------INS SimpleName@@ACCEPT_ENCODING @TO@ QualifiedName@@HttpHeaders.ACCEPT_ENCODING @AT@ 5266 @LENGTH@ 15
---------------------INS StringLiteral@@"identity" @TO@ SimpleName@@MethodName:setAdditionalHeader:[HttpHeaders.ACCEPT_ENCODING, "identity"] @AT@ 5283 @LENGTH@ 10
------------INS ReturnStatement@@SuperMethodInvocation:super.getResponse(request) @TO@ MethodDeclaration@@public, WebResponse, MethodName:getResponse, WebRequest request, IOException,  @AT@ 5312 @LENGTH@ 34
---------------INS SuperMethodInvocation@@super.getResponse(request) @TO@ ReturnStatement@@SuperMethodInvocation:super.getResponse(request) @AT@ 5319 @LENGTH@ 26
------------------INS SimpleName@@MethodName:getResponse:[request] @TO@ SuperMethodInvocation@@super.getResponse(request) @AT@ 5325 @LENGTH@ 11
------------------INS SimpleName@@request @TO@ SuperMethodInvocation@@super.getResponse(request) @AT@ 5337 @LENGTH@ 7


UPD MethodDeclaration@@long[], MethodName:putFileData, String file, DiskRange[] ranges, LlapMemoryBuffer[] chunks,  @TO@ long[], MethodName:putFileData, String file, DiskRange[] ranges, LlapMemoryBuffer[] chunks, long base,  @AT@ 1468 @LENGTH@ 72
---INS SingleVariableDeclaration@@long base @TO@ MethodDeclaration@@long[], MethodName:putFileData, String file, DiskRange[] ranges, LlapMemoryBuffer[] chunks,  @AT@ 1627 @LENGTH@ 9
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long base @AT@ 1627 @LENGTH@ 4
------INS SimpleName@@base @TO@ SingleVariableDeclaration@@long base @AT@ 1632 @LENGTH@ 4


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 4702 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 4732 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 4740 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 4744 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 4750 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 4758 @LENGTH@ 10


INS IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @TO@ MethodDeclaration@@public, HttpResponse, MethodName:toNettyResponse, Message message, NettyHttpConfiguration configuration, Exception,  @AT@ 18799 @LENGTH@ 139
---INS InfixExpression@@connection == null @TO@ IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18803 @LENGTH@ 18
------INS SimpleName@@connection @TO@ InfixExpression@@connection == null @AT@ 18803 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@connection == null @AT@ 18813 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@connection == null @AT@ 18817 @LENGTH@ 4
---INS Block@@ThenBody:{  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @TO@ IfStatement@@if (connection == null) {  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18823 @LENGTH@ 115
------INS ExpressionStatement@@Assignment:connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ Block@@ThenBody:{  connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class);} @AT@ 18837 @LENGTH@ 91
---------INS Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ ExpressionStatement@@Assignment:connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18837 @LENGTH@ 90
------------INS SimpleName@@connection @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18837 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18847 @LENGTH@ 1
------------INS MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @TO@ Assignment@@connection=message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18850 @LENGTH@ 77
---------------INS MethodInvocation@@MethodName:getExchange:[] @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18850 @LENGTH@ 21
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18850 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @TO@ MethodInvocation@@message.getExchange().getProperty(HttpHeaders.Names.CONNECTION,String.class) @AT@ 18872 @LENGTH@ 55
------------------INS QualifiedName@@HttpHeaders.Names.CONNECTION @TO@ SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @AT@ 18884 @LENGTH@ 28
---------------------INS QualifiedName@@HttpHeaders.Names @TO@ QualifiedName@@HttpHeaders.Names.CONNECTION @AT@ 18884 @LENGTH@ 17
------------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.Names @AT@ 18884 @LENGTH@ 11
------------------------INS SimpleName@@Names @TO@ QualifiedName@@HttpHeaders.Names @AT@ 18896 @LENGTH@ 5
---------------------INS SimpleName@@CONNECTION @TO@ QualifiedName@@HttpHeaders.Names.CONNECTION @AT@ 18902 @LENGTH@ 10
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getProperty:[HttpHeaders.Names.CONNECTION, String.class] @AT@ 18914 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:stop() @TO@ MethodDeclaration@@public, synchronized, void, MethodName:close, IOException,  @AT@ 2303 @LENGTH@ 7
---INS MethodInvocation@@MethodName:stop:[] @TO@ ExpressionStatement@@MethodInvocation:stop() @AT@ 2303 @LENGTH@ 6


INS MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @TO@ TypeDeclaration@@[public, static]ReturnObjectInspectorResolver,  @AT@ 7735 @LENGTH@ 116
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7735 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7742 @LENGTH@ 6
---INS SimpleName@@MethodName:convertIfNecessary @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7749 @LENGTH@ 18
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7768 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 7768 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 7775 @LENGTH@ 1
---INS SingleVariableDeclaration@@ObjectInspector oi @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7778 @LENGTH@ 18
------INS SimpleType@@ObjectInspector @TO@ SingleVariableDeclaration@@ObjectInspector oi @AT@ 7778 @LENGTH@ 15
------INS SimpleName@@oi @TO@ SingleVariableDeclaration@@ObjectInspector oi @AT@ 7794 @LENGTH@ 2
---INS ReturnStatement@@MethodInvocation:convertIfNecessary(o,oi,true) @TO@ MethodDeclaration@@public, Object, MethodName:convertIfNecessary, Object o, ObjectInspector oi,  @AT@ 7806 @LENGTH@ 39
------INS MethodInvocation@@convertIfNecessary(o,oi,true) @TO@ ReturnStatement@@MethodInvocation:convertIfNecessary(o,oi,true) @AT@ 7813 @LENGTH@ 31
---------INS SimpleName@@MethodName:convertIfNecessary:[o, oi, true] @TO@ MethodInvocation@@convertIfNecessary(o,oi,true) @AT@ 7813 @LENGTH@ 31
------------INS SimpleName@@o @TO@ SimpleName@@MethodName:convertIfNecessary:[o, oi, true] @AT@ 7832 @LENGTH@ 1
------------INS SimpleName@@oi @TO@ SimpleName@@MethodName:convertIfNecessary:[o, oi, true] @AT@ 7835 @LENGTH@ 2
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:convertIfNecessary:[o, oi, true] @AT@ 7839 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3009 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 3009 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3009 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3029 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 3034 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @TO@ MethodInvocation:response.put(UserAuthenticationConverter.AUTHORITIES,AuthorityUtils.authorityListToSet(clientToken.getAuthorities())) @AT@ 2173 @LENGTH@ 84
---UPD MethodInvocation@@response.put(UserAuthenticationConverter.AUTHORITIES,clientToken.getAuthorities()) @TO@ response.put(UserAuthenticationConverter.AUTHORITIES,AuthorityUtils.authorityListToSet(clientToken.getAuthorities())) @AT@ 2173 @LENGTH@ 83
------UPD SimpleName@@MethodName:put:[UserAuthenticationConverter.AUTHORITIES, clientToken.getAuthorities()] @TO@ MethodName:put:[UserAuthenticationConverter.AUTHORITIES, AuthorityUtils.authorityListToSet(clientToken.getAuthorities())] @AT@ 2182 @LENGTH@ 74
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(clientToken.getAuthorities()) @TO@ SimpleName@@MethodName:put:[UserAuthenticationConverter.AUTHORITIES, clientToken.getAuthorities()] @AT@ 2302 @LENGTH@ 63
------------INS SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(clientToken.getAuthorities()) @AT@ 2302 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[clientToken.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(clientToken.getAuthorities()) @AT@ 2317 @LENGTH@ 48
---------------MOV MethodInvocation@@clientToken.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[clientToken.getAuthorities()] @AT@ 2227 @LENGTH@ 28


UPD ReturnStatement@@ConditionalExpression:(getHeader(XmppConstants.docHeader) == null) ? binding.extractBodyFromXmpp(getExchange(),xmppPacket) : getHeader(XmppConstants.docHeader) @TO@ ConditionalExpression:(getHeader(XmppConstants.DOC_HEADER) == null) ? binding.extractBodyFromXmpp(getExchange(),xmppPacket) : getHeader(XmppConstants.DOC_HEADER) @AT@ 2521 @LENGTH@ 145
---UPD ConditionalExpression@@(getHeader(XmppConstants.docHeader) == null) ? binding.extractBodyFromXmpp(getExchange(),xmppPacket) : getHeader(XmppConstants.docHeader) @TO@ (getHeader(XmppConstants.DOC_HEADER) == null) ? binding.extractBodyFromXmpp(getExchange(),xmppPacket) : getHeader(XmppConstants.DOC_HEADER) @AT@ 2528 @LENGTH@ 137
------UPD ParenthesizedExpression@@(getHeader(XmppConstants.docHeader) == null) @TO@ (getHeader(XmppConstants.DOC_HEADER) == null) @AT@ 2528 @LENGTH@ 44
---------UPD InfixExpression@@getHeader(XmppConstants.docHeader) == null @TO@ getHeader(XmppConstants.DOC_HEADER) == null @AT@ 2529 @LENGTH@ 42
------------UPD MethodInvocation@@getHeader(XmppConstants.docHeader) @TO@ getHeader(XmppConstants.DOC_HEADER) @AT@ 2529 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:getHeader:[XmppConstants.docHeader] @TO@ MethodName:getHeader:[XmppConstants.DOC_HEADER] @AT@ 2529 @LENGTH@ 34
------------------UPD QualifiedName@@XmppConstants.docHeader @TO@ XmppConstants.DOC_HEADER @AT@ 2539 @LENGTH@ 23
---------------------UPD SimpleName@@docHeader @TO@ DOC_HEADER @AT@ 2553 @LENGTH@ 9
------UPD MethodInvocation@@getHeader(XmppConstants.docHeader) @TO@ getHeader(XmppConstants.DOC_HEADER) @AT@ 2631 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getHeader:[XmppConstants.docHeader] @TO@ MethodName:getHeader:[XmppConstants.DOC_HEADER] @AT@ 2631 @LENGTH@ 34
------------UPD QualifiedName@@XmppConstants.docHeader @TO@ XmppConstants.DOC_HEADER @AT@ 2641 @LENGTH@ 23
---------------UPD SimpleName@@docHeader @TO@ DOC_HEADER @AT@ 2655 @LENGTH@ 9


UPD IfStatement@@if (properties.containsKey(PropertyIds.OBJECT_TYPE_ID)) objectTypeName=(String)properties.get(PropertyIds.OBJECT_TYPE_ID); @TO@ if (properties.containsKey(PropertyIds.OBJECT_TYPE_ID)) {  objectTypeName=(String)properties.get(PropertyIds.OBJECT_TYPE_ID);} @AT@ 2666 @LENGTH@ 136
---UPD Block@@ThenBody:objectTypeName=(String)properties.get(PropertyIds.OBJECT_TYPE_ID); @TO@ ThenBody:{  objectTypeName=(String)properties.get(PropertyIds.OBJECT_TYPE_ID);} @AT@ 2734 @LENGTH@ 68


INS MethodDeclaration@@String, MethodName:getOldestInflightExchangeId,  @TO@ TypeDeclaration@@[public]ManagedRouteMBean, [ManagedPerformanceCounterMBean] @AT@ 4522 @LENGTH@ 30
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:getOldestInflightExchangeId,  @AT@ 4515 @LENGTH@ 6
---INS SimpleName@@MethodName:getOldestInflightExchangeId @TO@ MethodDeclaration@@String, MethodName:getOldestInflightExchangeId,  @AT@ 4522 @LENGTH@ 27


INS FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @TO@ TypeDeclaration@@[public, final]JSonSchemaHelper,  @AT@ 1144 @LENGTH@ 44
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1144 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1152 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1159 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1165 @LENGTH@ 6
---INS VariableDeclarationFragment@@QUOT="&quot;" @TO@ FieldDeclaration@@private, static, final, String, [QUOT="&quot;"] @AT@ 1172 @LENGTH@ 15
------INS SimpleName@@QUOT @TO@ VariableDeclarationFragment@@QUOT="&quot;" @AT@ 1172 @LENGTH@ 4
------INS StringLiteral@@"&quot;" @TO@ VariableDeclarationFragment@@QUOT="&quot;" @AT@ 1179 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:message+=i + "|\"" + i+ "\n"+ i+ "\"\n" @TO@ Assignment:message+=i + "|\"" + i+ System.lineSeparator()+ i+ "\"\n" @AT@ 1787 @LENGTH@ 45
---UPD Assignment@@message+=i + "|\"" + i+ "\n"+ i+ "\"\n" @TO@ message+=i + "|\"" + i+ System.lineSeparator()+ i+ "\"\n" @AT@ 1787 @LENGTH@ 44
------UPD InfixExpression@@i + "|\"" + i+ "\n"+ i+ "\"\n" @TO@ i + "|\"" + i+ System.lineSeparator()+ i+ "\"\n" @AT@ 1798 @LENGTH@ 33
---------INS MethodInvocation@@System.lineSeparator() @TO@ InfixExpression@@i + "|\"" + i+ "\n"+ i+ "\"\n" @AT@ 1814 @LENGTH@ 22
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 1814 @LENGTH@ 6
------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 1821 @LENGTH@ 15
---------DEL StringLiteral@@"\n" @AT@ 1814 @LENGTH@ 4


UPD Block@@ThenBody:{  final Set<Method> methods=methodSet();  Class<?> clazz=this.moduleClass;  final ClassReflectionIndex<?> classIndex=deploymentReflectionIndex.getClassIndex(clazz);  while (clazz != null) {    methods.addAll(classIndex.getMethods());    clazz=clazz.getSuperclass();  }  final Map<Class<?>,Set<Method>> defaultMethodsByInterface=new IdentityHashMap<Class<?>,Set<Method>>();  clazz=this.moduleClass;  final Set<MethodIdentifier> foundMethods=new HashSet<MethodIdentifier>();  while (clazz != null) {    addDefaultMethods(this.moduleClass,foundMethods,defaultMethodsByInterface,clazz.getInterfaces());    clazz=clazz.getSuperclass();  }  for (  Set<Method> methodSet : defaultMethodsByInterface.values()) {    methods.addAll(methodSet);  }  this.classMethods=methods;} @TO@ ThenBody:{  final Set<Method> methods=methodSet();  Class<?> clazz=this.moduleClass;  while (clazz != null) {    methods.addAll(deploymentReflectionIndex.getClassIndex(clazz).getMethods());    clazz=clazz.getSuperclass();  }  final Map<Class<?>,Set<Method>> defaultMethodsByInterface=new IdentityHashMap<Class<?>,Set<Method>>();  clazz=this.moduleClass;  final Set<MethodIdentifier> foundMethods=new HashSet<MethodIdentifier>();  while (clazz != null) {    addDefaultMethods(this.moduleClass,foundMethods,defaultMethodsByInterface,clazz.getInterfaces());    clazz=clazz.getSuperclass();  }  for (  Set<Method> methodSet : defaultMethodsByInterface.values()) {    methods.addAll(methodSet);  }  this.classMethods=methods;} @AT@ 1974 @LENGTH@ 1156
---DEL VariableDeclarationStatement@@final ClassReflectionIndex<?> classIndex=deploymentReflectionIndex.getClassIndex(clazz); @AT@ 2112 @LENGTH@ 90
------DEL Modifier@@final @AT@ 2112 @LENGTH@ 5
------DEL ParameterizedType@@ClassReflectionIndex<?> @AT@ 2118 @LENGTH@ 23
---------DEL SimpleType@@ClassReflectionIndex @AT@ 2118 @LENGTH@ 20
---------DEL WildcardType@@? @AT@ 2139 @LENGTH@ 1
------DEL VariableDeclarationFragment@@classIndex=deploymentReflectionIndex.getClassIndex(clazz) @AT@ 2142 @LENGTH@ 59
---------DEL SimpleName@@classIndex @AT@ 2142 @LENGTH@ 10
---------DEL MethodInvocation@@deploymentReflectionIndex.getClassIndex(clazz) @AT@ 2155 @LENGTH@ 46
------------DEL SimpleName@@Name:deploymentReflectionIndex @AT@ 2155 @LENGTH@ 25
------------DEL SimpleName@@MethodName:getClassIndex:[clazz] @AT@ 2181 @LENGTH@ 20
---------------DEL SimpleName@@clazz @AT@ 2195 @LENGTH@ 5
---UPD WhileStatement@@while (clazz != null) {  methods.addAll(classIndex.getMethods());  clazz=clazz.getSuperclass();} @TO@ while (clazz != null) {  methods.addAll(deploymentReflectionIndex.getClassIndex(clazz).getMethods());  clazz=clazz.getSuperclass();} @AT@ 2223 @LENGTH@ 165
------UPD Block@@WhileBody:{  methods.addAll(classIndex.getMethods());  clazz=clazz.getSuperclass();} @TO@ WhileBody:{  methods.addAll(deploymentReflectionIndex.getClassIndex(clazz).getMethods());  clazz=clazz.getSuperclass();} @AT@ 2245 @LENGTH@ 143
---------UPD ExpressionStatement@@MethodInvocation:methods.addAll(classIndex.getMethods()) @TO@ MethodInvocation:methods.addAll(deploymentReflectionIndex.getClassIndex(clazz).getMethods()) @AT@ 2271 @LENGTH@ 40
------------UPD MethodInvocation@@methods.addAll(classIndex.getMethods()) @TO@ methods.addAll(deploymentReflectionIndex.getClassIndex(clazz).getMethods()) @AT@ 2271 @LENGTH@ 39
---------------UPD SimpleName@@MethodName:addAll:[classIndex.getMethods()] @TO@ MethodName:addAll:[deploymentReflectionIndex.getClassIndex(clazz).getMethods()] @AT@ 2279 @LENGTH@ 31
------------------UPD MethodInvocation@@classIndex.getMethods() @TO@ deploymentReflectionIndex.getClassIndex(clazz).getMethods() @AT@ 2286 @LENGTH@ 23
---------------------INS MethodInvocation@@MethodName:getClassIndex:[clazz] @TO@ MethodInvocation@@classIndex.getMethods() @AT@ 2175 @LENGTH@ 46
------------------------INS SimpleName@@clazz @TO@ MethodInvocation@@MethodName:getClassIndex:[clazz] @AT@ 2215 @LENGTH@ 5
---------------------UPD SimpleName@@Name:classIndex @TO@ Name:deploymentReflectionIndex @AT@ 2286 @LENGTH@ 10


UPD MethodDeclaration@@private, ExpiringOAuth2RefreshToken, MethodName:createRefreshToken, OAuth2Authentication authentication,  @TO@ private, OAuth2RefreshToken, MethodName:createRefreshToken, OAuth2Authentication authentication,  @AT@ 10145 @LENGTH@ 479
---UPD SimpleType@@ExpiringOAuth2RefreshToken @TO@ OAuth2RefreshToken @AT@ 10153 @LENGTH@ 26
---UPD VariableDeclarationStatement@@ExpiringOAuth2RefreshToken refreshToken=new DefaultExpiringOAuth2RefreshToken(UUID.randomUUID().toString(),new Date(System.currentTimeMillis() + (validitySeconds * 1000L))); @TO@ String value=UUID.randomUUID().toString(); @AT@ 10418 @LENGTH@ 180
------UPD SimpleType@@ExpiringOAuth2RefreshToken @TO@ String @AT@ 10418 @LENGTH@ 26
------UPD VariableDeclarationFragment@@refreshToken=new DefaultExpiringOAuth2RefreshToken(UUID.randomUUID().toString(),new Date(System.currentTimeMillis() + (validitySeconds * 1000L))) @TO@ value=UUID.randomUUID().toString() @AT@ 10445 @LENGTH@ 152
---------UPD SimpleName@@refreshToken @TO@ value @AT@ 10445 @LENGTH@ 12
---------UPD ClassInstanceCreation@@DefaultExpiringOAuth2RefreshToken[UUID.randomUUID().toString(), new Date(System.currentTimeMillis() + (validitySeconds * 1000L))] @TO@ DefaultExpiringOAuth2RefreshToken[value, new Date(System.currentTimeMillis() + (validitySeconds * 1000L))] @AT@ 10460 @LENGTH@ 137
---------INS MethodInvocation@@UUID.randomUUID().toString() @TO@ VariableDeclarationFragment@@refreshToken=new DefaultExpiringOAuth2RefreshToken(UUID.randomUUID().toString(),new Date(System.currentTimeMillis() + (validitySeconds * 1000L))) @AT@ 10505 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 10505 @LENGTH@ 17
------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 10505 @LENGTH@ 4
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@UUID.randomUUID().toString() @AT@ 10523 @LENGTH@ 10
---INS IfStatement@@if (validitySeconds > 0) {  return new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L)));} @TO@ MethodDeclaration@@private, ExpiringOAuth2RefreshToken, MethodName:createRefreshToken, OAuth2Authentication authentication,  @AT@ 10537 @LENGTH@ 157
------INS InfixExpression@@validitySeconds > 0 @TO@ IfStatement@@if (validitySeconds > 0) {  return new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L)));} @AT@ 10541 @LENGTH@ 19
---------INS SimpleName@@validitySeconds @TO@ InfixExpression@@validitySeconds > 0 @AT@ 10541 @LENGTH@ 15
---------INS Operator@@> @TO@ InfixExpression@@validitySeconds > 0 @AT@ 10556 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@validitySeconds > 0 @AT@ 10559 @LENGTH@ 1
------INS Block@@ThenBody:{  return new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L)));} @TO@ IfStatement@@if (validitySeconds > 0) {  return new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L)));} @AT@ 10562 @LENGTH@ 132
---------INS ReturnStatement@@ClassInstanceCreation:new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L))) @TO@ Block@@ThenBody:{  return new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L)));} @AT@ 10567 @LENGTH@ 123
------------MOV ClassInstanceCreation@@DefaultExpiringOAuth2RefreshToken[UUID.randomUUID().toString(), new Date(System.currentTimeMillis() + (validitySeconds * 1000L))] @TO@ ReturnStatement@@ClassInstanceCreation:new DefaultExpiringOAuth2RefreshToken(value,new Date(System.currentTimeMillis() + (validitySeconds * 1000L))) @AT@ 10460 @LENGTH@ 137
---------------DEL MethodInvocation@@UUID.randomUUID().toString() @AT@ 10498 @LENGTH@ 28
------------------DEL MethodInvocation@@MethodName:randomUUID:[] @AT@ 10498 @LENGTH@ 17
------------------DEL SimpleName@@Name:UUID @AT@ 10498 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 10516 @LENGTH@ 10
---------------INS SimpleName@@value @TO@ ClassInstanceCreation@@DefaultExpiringOAuth2RefreshToken[UUID.randomUUID().toString(), new Date(System.currentTimeMillis() + (validitySeconds * 1000L))] @AT@ 10612 @LENGTH@ 5
---UPD ReturnStatement@@SimpleName:refreshToken @TO@ ClassInstanceCreation:new DefaultOAuth2RefreshToken(value) @AT@ 10601 @LENGTH@ 20
------DEL SimpleName@@refreshToken @AT@ 10608 @LENGTH@ 12
------INS ClassInstanceCreation@@DefaultOAuth2RefreshToken[value] @TO@ ReturnStatement@@SimpleName:refreshToken @AT@ 10704 @LENGTH@ 36
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[value] @AT@ 10704 @LENGTH@ 3
---------INS SimpleType@@DefaultOAuth2RefreshToken @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[value] @AT@ 10708 @LENGTH@ 25
---------INS SimpleName@@value @TO@ ClassInstanceCreation@@DefaultOAuth2RefreshToken[value] @AT@ 10734 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:contextLoads,  @TO@ public, void, MethodName:tokenStoreIsJwt,  @AT@ 830 @LENGTH@ 123
---UPD SimpleName@@MethodName:contextLoads @TO@ MethodName:tokenStoreIsJwt @AT@ 842 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong token store type: " + tokenStore,tokenStore instanceof JwtTokenStore) @TO@ MethodInvocation:assertTrue("Wrong token store type: " + tokenServices,ReflectionTestUtils.getField(tokenServices,"tokenStore") instanceof JwtTokenStore) @AT@ 861 @LENGTH@ 89
------UPD MethodInvocation@@assertTrue("Wrong token store type: " + tokenStore,tokenStore instanceof JwtTokenStore) @TO@ assertTrue("Wrong token store type: " + tokenServices,ReflectionTestUtils.getField(tokenServices,"tokenStore") instanceof JwtTokenStore) @AT@ 861 @LENGTH@ 88
---------UPD SimpleName@@MethodName:assertTrue:["Wrong token store type: " + tokenStore, tokenStore instanceof JwtTokenStore] @TO@ MethodName:assertTrue:["Wrong token store type: " + tokenServices, ReflectionTestUtils.getField(tokenServices,"tokenStore") instanceof JwtTokenStore] @AT@ 861 @LENGTH@ 88
------------UPD InfixExpression@@"Wrong token store type: " + tokenStore @TO@ "Wrong token store type: " + tokenServices @AT@ 872 @LENGTH@ 39
---------------UPD SimpleName@@tokenStore @TO@ tokenServices @AT@ 901 @LENGTH@ 10
------------UPD InstanceofExpression@@tokenStore instanceof JwtTokenStore @TO@ ReflectionTestUtils.getField(tokenServices,"tokenStore") instanceof JwtTokenStore @AT@ 913 @LENGTH@ 35
---------------DEL SimpleName@@tokenStore @AT@ 913 @LENGTH@ 10
---------------INS MethodInvocation@@ReflectionTestUtils.getField(tokenServices,"tokenStore") @TO@ InstanceofExpression@@tokenStore instanceof JwtTokenStore @AT@ 1122 @LENGTH@ 57
------------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(tokenServices,"tokenStore") @AT@ 1122 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getField:[tokenServices, "tokenStore"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(tokenServices,"tokenStore") @AT@ 1142 @LENGTH@ 37
---------------------INS SimpleName@@tokenServices @TO@ SimpleName@@MethodName:getField:[tokenServices, "tokenStore"] @AT@ 1151 @LENGTH@ 13
---------------------INS StringLiteral@@"tokenStore" @TO@ SimpleName@@MethodName:getField:[tokenServices, "tokenStore"] @AT@ 1166 @LENGTH@ 12


UPD IfStatement@@if (ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]),compareOI) == 0) {  bw.set(true);  return bw;} @TO@ if (ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i],false),compareOI) == 0) {  bw.set(true);  return bw;} @AT@ 6852 @LENGTH@ 322
---UPD InfixExpression@@ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]),compareOI) == 0 @TO@ ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i],false),compareOI) == 0 @AT@ 6856 @LENGTH@ 260
------UPD MethodInvocation@@ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]),compareOI) @TO@ ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i],false),compareOI) @AT@ 6856 @LENGTH@ 255
---------UPD SimpleName@@MethodName:compare:[conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]), compareOI, conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]), compareOI] @TO@ MethodName:compare:[conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]), compareOI, conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i],false), compareOI] @AT@ 6877 @LENGTH@ 234
------------UPD MethodInvocation@@conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]) @TO@ conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i],false) @AT@ 7011 @LENGTH@ 88
---------------UPD SimpleName@@MethodName:convertIfNecessary:[arguments[i].get(), argumentOIs[i]] @TO@ MethodName:convertIfNecessary:[arguments[i].get(), argumentOIs[i], false] @AT@ 7028 @LENGTH@ 71
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:convertIfNecessary:[arguments[i].get(), argumentOIs[i]] @AT@ 7100 @LENGTH@ 5


UPD IfStatement@@if (nb == 0 && numOfReadBytes.get() > 0) {  return -1;} @TO@ if (nb == 0 && numOfReadMessages.get() > 0) {  return -1;} @AT@ 3202 @LENGTH@ 167
---UPD InfixExpression@@nb == 0 && numOfReadBytes.get() > 0 @TO@ nb == 0 && numOfReadMessages.get() > 0 @AT@ 3206 @LENGTH@ 35
------UPD InfixExpression@@numOfReadBytes.get() > 0 @TO@ numOfReadMessages.get() > 0 @AT@ 3217 @LENGTH@ 24
---------UPD MethodInvocation@@numOfReadBytes.get() @TO@ numOfReadMessages.get() @AT@ 3217 @LENGTH@ 20
------------UPD SimpleName@@Name:numOfReadBytes @TO@ Name:numOfReadMessages @AT@ 3217 @LENGTH@ 14


UPD FieldDeclaration@@private, boolean, [reuseRefreshToken] @TO@ private, boolean, [reuseRefreshToken=true] @AT@ 5191 @LENGTH@ 34
---UPD VariableDeclarationFragment@@reuseRefreshToken @TO@ reuseRefreshToken=true @AT@ 5207 @LENGTH@ 17
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@reuseRefreshToken @AT@ 5227 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, Map<String,PDRectangle>, [PAGE_MAP=new HashMap<>()] @TO@ private, static, final, Map<String,PDRectangle>, [PAGE_MAP=new HashMap<String,PDRectangle>()] @AT@ 1409 @LENGTH@ 73
---UPD VariableDeclarationFragment@@PAGE_MAP=new HashMap<>() @TO@ PAGE_MAP=new HashMap<String,PDRectangle>() @AT@ 1455 @LENGTH@ 26
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,PDRectangle>[] @AT@ 1466 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,PDRectangle> @AT@ 1470 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 1478 @LENGTH@ 6
------------INS SimpleType@@PDRectangle @TO@ ParameterizedType@@HashMap<> @AT@ 1486 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(10,data.size()) @TO@ MethodInvocation:assertEquals(9,data.size()) @AT@ 2253 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(10,data.size()) @TO@ assertEquals(9,data.size()) @AT@ 2253 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[10, data.size()] @TO@ MethodName:assertEquals:[9, data.size()] @AT@ 2253 @LENGTH@ 29
---------UPD NumberLiteral@@10 @TO@ 9 @AT@ 2266 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:prev1=t2 @TO@ Assignment:prev2=t2 @AT@ 7012 @LENGTH@ 11
---UPD Assignment@@prev1=t2 @TO@ prev2=t2 @AT@ 7012 @LENGTH@ 10
------UPD SimpleName@@prev1 @TO@ prev2 @AT@ 7012 @LENGTH@ 5


DEL MethodDeclaration@@public, void, MethodName:init,  @AT@ 1474 @LENGTH@ 135
---DEL Modifier@@public @AT@ 1474 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1481 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 1486 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:assumeThat(false,Is.is(Boolean.TRUE)) @AT@ 1567 @LENGTH@ 39
------DEL MethodInvocation@@assumeThat(false,Is.is(Boolean.TRUE)) @AT@ 1567 @LENGTH@ 38
---------DEL SimpleName@@MethodName:assumeThat:[false, Is.is(Boolean.TRUE)] @AT@ 1567 @LENGTH@ 38
------------DEL BooleanLiteral@@false @AT@ 1578 @LENGTH@ 5
------------DEL MethodInvocation@@Is.is(Boolean.TRUE) @AT@ 1585 @LENGTH@ 19
---------------DEL SimpleName@@Name:Is @AT@ 1585 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:is:[Boolean.TRUE] @AT@ 1588 @LENGTH@ 16
------------------DEL QualifiedName@@Boolean.TRUE @AT@ 1591 @LENGTH@ 12
---------------------DEL SimpleName@@Boolean @AT@ 1591 @LENGTH@ 7
---------------------DEL SimpleName@@TRUE @AT@ 1599 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:bar").routeId("bar").to("log:bar").id("d").to("mock:bar").id("e") @TO@ MethodInvocation:from("direct:bar").routeId("bar").to("log:bar").to("mock:bar") @AT@ 2627 @LENGTH@ 129
---UPD MethodInvocation@@from("direct:bar").routeId("bar").to("log:bar").id("d").to("mock:bar").id("e") @TO@ from("direct:bar").routeId("bar").to("log:bar").to("mock:bar") @AT@ 2627 @LENGTH@ 128
------DEL MethodInvocation@@MethodName:to:["mock:bar"] @AT@ 2627 @LENGTH@ 120
---------DEL StringLiteral@@"mock:bar" @AT@ 2736 @LENGTH@ 10
------DEL MethodInvocation@@MethodName:id:["d"] @AT@ 2627 @LENGTH@ 80
---------DEL StringLiteral@@"d" @AT@ 2703 @LENGTH@ 3
------UPD SimpleName@@MethodName:id:["e"] @TO@ MethodName:to:["mock:bar"] @AT@ 2748 @LENGTH@ 7
---------UPD StringLiteral@@"e" @TO@ "mock:bar" @AT@ 2751 @LENGTH@ 3


DEL IfStatement@@if (DebugUtils.isTraceEnabled()) {  LlapIoImpl.LOG.info("setError called; closed " + isClosed + ", done "+ isDone+ ", err "+ pendingError+ ", pending "+ pendingData.size());} @AT@ 4937 @LENGTH@ 197
---DEL MethodInvocation@@DebugUtils.isTraceEnabled() @AT@ 4941 @LENGTH@ 27
------DEL SimpleName@@Name:DebugUtils @AT@ 4941 @LENGTH@ 10
------DEL SimpleName@@MethodName:isTraceEnabled:[] @AT@ 4952 @LENGTH@ 16
---DEL Block@@ThenBody:{  LlapIoImpl.LOG.info("setError called; closed " + isClosed + ", done "+ isDone+ ", err "+ pendingError+ ", pending "+ pendingData.size());} @AT@ 4970 @LENGTH@ 164


DEL ExpressionStatement@@MethodInvocation:setOrder(Ordered.LOWEST_PRECEDENCE - 100) @AT@ 2708 @LENGTH@ 42
---DEL MethodInvocation@@setOrder(Ordered.LOWEST_PRECEDENCE - 100) @AT@ 2708 @LENGTH@ 41
------DEL SimpleName@@MethodName:setOrder:[Ordered.LOWEST_PRECEDENCE - 100] @AT@ 2708 @LENGTH@ 41
---------DEL InfixExpression@@Ordered.LOWEST_PRECEDENCE - 100 @AT@ 2717 @LENGTH@ 31
------------DEL QualifiedName@@Ordered.LOWEST_PRECEDENCE @AT@ 2717 @LENGTH@ 25
---------------DEL SimpleName@@Ordered @AT@ 2717 @LENGTH@ 7
---------------DEL SimpleName@@LOWEST_PRECEDENCE @AT@ 2725 @LENGTH@ 17
------------DEL Operator@@- @AT@ 2742 @LENGTH@ 1
------------DEL NumberLiteral@@100 @AT@ 2745 @LENGTH@ 3


UPD MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @TO@ public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, boolean stripDelimiter, ByteBuf[] delimiters,  @AT@ 1336 @LENGTH@ 179
---UPD ExpressionStatement@@Assignment:delegateDecoder=new DelimiterBasedFrameDecoder(maxFrameLength,true,delimiters) @TO@ Assignment:delegateDecoder=new DelimiterBasedFrameDecoder(maxFrameLength,stripDelimiter,delimiters) @AT@ 1426 @LENGTH@ 83
------UPD Assignment@@delegateDecoder=new DelimiterBasedFrameDecoder(maxFrameLength,true,delimiters) @TO@ delegateDecoder=new DelimiterBasedFrameDecoder(maxFrameLength,stripDelimiter,delimiters) @AT@ 1426 @LENGTH@ 82
---------UPD ClassInstanceCreation@@DelimiterBasedFrameDecoder[maxFrameLength, true, delimiters] @TO@ DelimiterBasedFrameDecoder[maxFrameLength, stripDelimiter, delimiters] @AT@ 1444 @LENGTH@ 64
------------DEL BooleanLiteral@@true @AT@ 1491 @LENGTH@ 4
------------INS SimpleName@@stripDelimiter @TO@ ClassInstanceCreation@@DelimiterBasedFrameDecoder[maxFrameLength, true, delimiters] @AT@ 1661 @LENGTH@ 14
---INS SingleVariableDeclaration@@boolean stripDelimiter @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1539 @LENGTH@ 22
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean stripDelimiter @AT@ 1539 @LENGTH@ 7
------INS SimpleName@@stripDelimiter @TO@ SingleVariableDeclaration@@boolean stripDelimiter @AT@ 1547 @LENGTH@ 14
---INS SingleVariableDeclaration@@ByteBuf[] delimiters @TO@ MethodDeclaration@@public, voidMethodName:DatagramPacketDelimiterDecoder, int maxFrameLength, ByteBuf[] delimiters,  @AT@ 1564 @LENGTH@ 20
------INS ArrayType@@ByteBuf[] @TO@ SingleVariableDeclaration@@ByteBuf[] delimiters @AT@ 1564 @LENGTH@ 9
---------INS SimpleType@@ByteBuf @TO@ ArrayType@@ByteBuf[] @AT@ 1564 @LENGTH@ 7
------INS SimpleName@@delimiters @TO@ SingleVariableDeclaration@@ByteBuf[] delimiters @AT@ 1574 @LENGTH@ 10


UPD TypeDeclaration@@[@UriEndpoint(scheme="ganglia",label="monitoring"), public]GangliaEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="ganglia",producerOnly=true,label="monitoring"), public]GangliaEndpoint, DefaultEndpoint @AT@ 1322 @LENGTH@ 1323
---UPD NormalAnnotation@@@UriEndpoint(scheme="ganglia",label="monitoring") @TO@ @UriEndpoint(scheme="ganglia",producerOnly=true,label="monitoring") @AT@ 1322 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:acceptor.getFilterChain().addFirst("sslFilter",filter) @TO@ MethodInvocation:connector.getFilterChain().addFirst("sslFilter",filter) @AT@ 12780 @LENGTH@ 56
---UPD MethodInvocation@@acceptor.getFilterChain().addFirst("sslFilter",filter) @TO@ connector.getFilterChain().addFirst("sslFilter",filter) @AT@ 12780 @LENGTH@ 55
------UPD SimpleName@@Name:acceptor @TO@ Name:connector @AT@ 12780 @LENGTH@ 8


INS IfStatement@@if (!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language")) {  return;} @TO@ MethodDeclaration@@public, static, void, MethodName:prepareLanguage, Log log, MavenProject project, MavenProjectHelper projectHelper, File languageOutDir, File schemaOutDir, BuildContext buildContext, MojoExecutionException,  @AT@ 3709 @LENGTH@ 147
---INS PrefixExpression@@!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @TO@ IfStatement@@if (!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language")) {  return;} @AT@ 3713 @LENGTH@ 110
------INS Operator@@! @TO@ PrefixExpression@@!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @AT@ 3713 @LENGTH@ 1
------INS MethodInvocation@@PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @TO@ PrefixExpression@@!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @AT@ 3714 @LENGTH@ 109
---------INS SimpleName@@Name:PackageHelper @TO@ MethodInvocation@@PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @AT@ 3714 @LENGTH@ 13
---------INS SimpleName@@MethodName:haveResourcesChanged:[log, project, buildContext, "META-INF/services/org/apache/camel/language"] @TO@ MethodInvocation@@PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language") @AT@ 3728 @LENGTH@ 95
------------INS SimpleName@@log @TO@ SimpleName@@MethodName:haveResourcesChanged:[log, project, buildContext, "META-INF/services/org/apache/camel/language"] @AT@ 3749 @LENGTH@ 3
------------INS SimpleName@@project @TO@ SimpleName@@MethodName:haveResourcesChanged:[log, project, buildContext, "META-INF/services/org/apache/camel/language"] @AT@ 3754 @LENGTH@ 7
------------INS SimpleName@@buildContext @TO@ SimpleName@@MethodName:haveResourcesChanged:[log, project, buildContext, "META-INF/services/org/apache/camel/language"] @AT@ 3763 @LENGTH@ 12
------------INS StringLiteral@@"META-INF/services/org/apache/camel/language" @TO@ SimpleName@@MethodName:haveResourcesChanged:[log, project, buildContext, "META-INF/services/org/apache/camel/language"] @AT@ 3777 @LENGTH@ 45
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!PackageHelper.haveResourcesChanged(log,project,buildContext,"META-INF/services/org/apache/camel/language")) {  return;} @AT@ 3825 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3839 @LENGTH@ 7


UPD VariableDeclarationStatement@@Promise[] promises=asPromiseArray(input); @TO@ Promise<?>[] promises=asPromiseArray(input); @AT@ 1687 @LENGTH@ 43
---UPD ArrayType@@Promise[] @TO@ Promise<?>[] @AT@ 1687 @LENGTH@ 9
------DEL SimpleType@@Promise @AT@ 1687 @LENGTH@ 7
------INS ParameterizedType@@Promise<?> @TO@ ArrayType@@Promise[] @AT@ 1687 @LENGTH@ 10
---------INS SimpleType@@Promise @TO@ ParameterizedType@@Promise<?> @AT@ 1687 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Promise<?> @AT@ 1695 @LENGTH@ 1


INS MethodDeclaration@@private, voidMethodName:RouteCoverageXmlParser,  @TO@ TypeDeclaration@@[public, final]RouteCoverageXmlParser,  @AT@ 1817 @LENGTH@ 40
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:RouteCoverageXmlParser,  @AT@ 1817 @LENGTH@ 7
---INS SimpleName@@MethodName:RouteCoverageXmlParser @TO@ MethodDeclaration@@private, voidMethodName:RouteCoverageXmlParser,  @AT@ 1825 @LENGTH@ 22


INS MethodDeclaration@@void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @TO@ TypeDeclaration@@[public]LowLevelCache,  @AT@ 1910 @LENGTH@ 38
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 1905 @LENGTH@ 4
---INS SimpleName@@MethodName:notifyReused @TO@ MethodDeclaration@@void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 1910 @LENGTH@ 12
---INS SingleVariableDeclaration@@LlapMemoryBuffer buffer @TO@ MethodDeclaration@@void, MethodName:notifyReused, LlapMemoryBuffer buffer,  @AT@ 1923 @LENGTH@ 23
------INS SimpleType@@LlapMemoryBuffer @TO@ SingleVariableDeclaration@@LlapMemoryBuffer buffer @AT@ 1923 @LENGTH@ 16
------INS SimpleName@@buffer @TO@ SingleVariableDeclaration@@LlapMemoryBuffer buffer @AT@ 1940 @LENGTH@ 6


UPD ForStatement@@for (int i=minPart; i <= maxPart; i++) {  String partName=tabParts.get(i);  if (i < maxPart / 2) {    partNames.add(partName);  }  bloomFilter.addToFilter(partName.getBytes());} @TO@ for (int i=minPart - 1; i <= maxPart - 1; i++) {  String partName=tabParts.get(i);  if (i < maxPart / 2) {    partNames.add(partName);  }  bloomFilter.addToFilter(partName.getBytes());} @AT@ 5523 @LENGTH@ 297
---UPD VariableDeclarationExpression@@int i=minPart @TO@ int i=minPart - 1 @AT@ 5528 @LENGTH@ 15
------UPD VariableDeclarationFragment@@i=minPart @TO@ i=minPart - 1 @AT@ 5532 @LENGTH@ 11
---------INS InfixExpression@@minPart - 1 @TO@ VariableDeclarationFragment@@i=minPart @AT@ 5488 @LENGTH@ 9
------------INS SimpleName@@minPart @TO@ InfixExpression@@minPart - 1 @AT@ 5488 @LENGTH@ 7
------------INS Operator@@- @TO@ InfixExpression@@minPart - 1 @AT@ 5495 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@minPart - 1 @AT@ 5496 @LENGTH@ 1
---------DEL SimpleName@@minPart @AT@ 5536 @LENGTH@ 7
---UPD InfixExpression@@i <= maxPart @TO@ i <= maxPart - 1 @AT@ 5545 @LENGTH@ 12
------INS InfixExpression@@maxPart - 1 @TO@ InfixExpression@@i <= maxPart @AT@ 5504 @LENGTH@ 9
---------INS Operator@@- @TO@ InfixExpression@@maxPart - 1 @AT@ 5511 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@maxPart - 1 @AT@ 5512 @LENGTH@ 1
---------MOV SimpleName@@maxPart @TO@ InfixExpression@@maxPart - 1 @AT@ 5550 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:HttpHelper.readResponseBodyFromServletRequest(request,httpMessage.getExchange()) @TO@ MethodInvocation:HttpHelper.readRequestBodyFromServletRequest(request,httpMessage.getExchange()) @AT@ 18506 @LENGTH@ 89
---UPD MethodInvocation@@HttpHelper.readResponseBodyFromServletRequest(request,httpMessage.getExchange()) @TO@ HttpHelper.readRequestBodyFromServletRequest(request,httpMessage.getExchange()) @AT@ 18513 @LENGTH@ 81
------UPD SimpleName@@MethodName:readResponseBodyFromServletRequest:[request, httpMessage.getExchange()] @TO@ MethodName:readRequestBodyFromServletRequest:[request, httpMessage.getExchange()] @AT@ 18524 @LENGTH@ 70


UPD IfStatement@@if (!(parameters[0] instanceof StandardListObjectInspector)) {  inputOI=(PrimitiveObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(parameters[0]);  return (StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(inputOI);} else {  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(internalMergeOI);  return loi;} @TO@ if (!(parameters[0] instanceof ListObjectInspector)) {  inputOI=(PrimitiveObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(parameters[0]);  return (StandardListObjectInspector)ObjectInspectorFactory.getStandardListObjectInspector(inputOI);} else {  internalMergeOI=(ListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(internalMergeOI);  return loi;} @AT@ 2687 @LENGTH@ 651
---UPD PrefixExpression@@!(parameters[0] instanceof StandardListObjectInspector) @TO@ !(parameters[0] instanceof ListObjectInspector) @AT@ 2691 @LENGTH@ 55
------UPD ParenthesizedExpression@@(parameters[0] instanceof StandardListObjectInspector) @TO@ (parameters[0] instanceof ListObjectInspector) @AT@ 2692 @LENGTH@ 54
---------UPD InstanceofExpression@@parameters[0] instanceof StandardListObjectInspector @TO@ parameters[0] instanceof ListObjectInspector @AT@ 2693 @LENGTH@ 52
------------UPD SimpleType@@StandardListObjectInspector @TO@ ListObjectInspector @AT@ 2718 @LENGTH@ 27
---UPD Block@@ElseBody:{  internalMergeOI=(StandardListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(internalMergeOI);  return loi;} @TO@ ElseBody:{  internalMergeOI=(ListObjectInspector)parameters[0];  inputOI=(PrimitiveObjectInspector)internalMergeOI.getListElementObjectInspector();  loi=(StandardListObjectInspector)ObjectInspectorUtils.getStandardObjectInspector(internalMergeOI);  return loi;} @AT@ 3034 @LENGTH@ 304
------UPD ExpressionStatement@@Assignment:internalMergeOI=(StandardListObjectInspector)parameters[0] @TO@ Assignment:internalMergeOI=(ListObjectInspector)parameters[0] @AT@ 3044 @LENGTH@ 62
---------UPD Assignment@@internalMergeOI=(StandardListObjectInspector)parameters[0] @TO@ internalMergeOI=(ListObjectInspector)parameters[0] @AT@ 3044 @LENGTH@ 61
------------UPD CastExpression@@(StandardListObjectInspector)parameters[0] @TO@ (ListObjectInspector)parameters[0] @AT@ 3062 @LENGTH@ 43
---------------UPD SimpleType@@StandardListObjectInspector @TO@ ListObjectInspector @AT@ 3063 @LENGTH@ 27


UPD TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  if (out) {    exchange.setOut(msg);  } else {    exchange.setIn(msg);  }} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,false);  } else {    old.setBody(newBody);  }} catch (Exception e) {  exchange.setException(e);} @AT@ 1747 @LENGTH@ 621
---UPD IfStatement@@if (out) {  exchange.setOut(msg);} else {  exchange.setIn(msg);} @TO@ if (copyNeeded) {  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,false);} else {  old.setBody(newBody);} @AT@ 2168 @LENGTH@ 120
------UPD SimpleName@@out @TO@ copyNeeded @AT@ 2172 @LENGTH@ 3
------UPD Block@@ThenBody:{  exchange.setOut(msg);} @TO@ ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,false);} @AT@ 2177 @LENGTH@ 53
---------MOV VariableDeclarationStatement@@Message msg=new DefaultMessage(); @TO@ Block@@ThenBody:{  exchange.setOut(msg);} @AT@ 2054 @LENGTH@ 35
---------MOV ExpressionStatement@@MethodInvocation:msg.copyFrom(old) @TO@ Block@@ThenBody:{  exchange.setOut(msg);} @AT@ 2102 @LENGTH@ 18
---------MOV ExpressionStatement@@MethodInvocation:msg.setBody(newBody) @TO@ Block@@ThenBody:{  exchange.setOut(msg);} @AT@ 2133 @LENGTH@ 21
---------UPD ExpressionStatement@@MethodInvocation:exchange.setOut(msg) @TO@ MethodInvocation:ExchangeHelper.replaceMessage(exchange,msg,false) @AT@ 2195 @LENGTH@ 21
------------UPD MethodInvocation@@exchange.setOut(msg) @TO@ ExchangeHelper.replaceMessage(exchange,msg,false) @AT@ 2195 @LENGTH@ 20
---------------UPD SimpleName@@Name:exchange @TO@ Name:ExchangeHelper @AT@ 2195 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:setOut:[msg] @TO@ MethodName:replaceMessage:[exchange, msg, false] @AT@ 2204 @LENGTH@ 11
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:setOut:[msg] @AT@ 2501 @LENGTH@ 8
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setOut:[msg] @AT@ 2516 @LENGTH@ 5
------UPD Block@@ElseBody:{  exchange.setIn(msg);} @TO@ ElseBody:{  old.setBody(newBody);} @AT@ 2236 @LENGTH@ 52
---------UPD ExpressionStatement@@MethodInvocation:exchange.setIn(msg) @TO@ MethodInvocation:old.setBody(newBody) @AT@ 2254 @LENGTH@ 20
------------UPD MethodInvocation@@exchange.setIn(msg) @TO@ old.setBody(newBody) @AT@ 2254 @LENGTH@ 19
---------------UPD SimpleName@@Name:exchange @TO@ Name:old @AT@ 2254 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:setIn:[msg] @TO@ MethodName:setBody:[newBody] @AT@ 2263 @LENGTH@ 10
------------------UPD SimpleName@@msg @TO@ newBody @AT@ 2269 @LENGTH@ 3
---INS VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  if (out) {    exchange.setOut(msg);  } else {    exchange.setIn(msg);  }} catch (Exception e) {  exchange.setException(e);} @AT@ 2182 @LENGTH@ 68
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @AT@ 2182 @LENGTH@ 7
------INS VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @TO@ VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @AT@ 2190 @LENGTH@ 59
---------INS SimpleName@@copyNeeded @TO@ VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @AT@ 2190 @LENGTH@ 10
---------INS PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @TO@ VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @AT@ 2203 @LENGTH@ 46
------------INS Operator@@! @TO@ PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @AT@ 2203 @LENGTH@ 1
------------INS ParenthesizedExpression@@(old.getClass().equals(DefaultMessage.class)) @TO@ PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @AT@ 2204 @LENGTH@ 45
---------------INS MethodInvocation@@old.getClass().equals(DefaultMessage.class) @TO@ ParenthesizedExpression@@(old.getClass().equals(DefaultMessage.class)) @AT@ 2205 @LENGTH@ 43
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2205 @LENGTH@ 14
------------------INS SimpleName@@Name:old @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2205 @LENGTH@ 3
------------------INS SimpleName@@MethodName:equals:[DefaultMessage.class] @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2220 @LENGTH@ 28
---------------------INS TypeLiteral@@DefaultMessage.class @TO@ SimpleName@@MethodName:equals:[DefaultMessage.class] @AT@ 2227 @LENGTH@ 20


DEL VariableDeclarationStatement@@s tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null); @AT@ 9563 @LENGTH@ 364
---DEL SimpleType@@s @AT@ 9563 @LENGTH@ 1
---DEL VariableDeclarationFragment@@tezChild=new TezChild(conf,request.getAmHost(),request.getAmPort(),request.getContainerIdString(),request.getTokenIdentifier(),request.getAppAttemptNumber(),workingDir,localDirs,envMap,objectRegistry,pid,executionContext,credentials,memoryAvailable,request.getUser(),null) @AT@ 9571 @LENGTH@ 355
------DEL SimpleName@@tezChild @AT@ 9571 @LENGTH@ 8


UPD VariableDeclarationStatement@@RelTraitSet desiredTraits=cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollationImpl.EMPTY); @TO@ RelTraitSet desiredTraits=cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollations.EMPTY); @AT@ 30330 @LENGTH@ 106
---UPD VariableDeclarationFragment@@desiredTraits=cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollationImpl.EMPTY) @TO@ desiredTraits=cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollations.EMPTY) @AT@ 30342 @LENGTH@ 93
------UPD MethodInvocation@@cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollationImpl.EMPTY) @TO@ cluster.traitSetOf(HiveRelNode.CONVENTION,RelCollations.EMPTY) @AT@ 30358 @LENGTH@ 77
---------UPD SimpleName@@MethodName:traitSetOf:[HiveRelNode.CONVENTION, RelCollationImpl.EMPTY] @TO@ MethodName:traitSetOf:[HiveRelNode.CONVENTION, RelCollations.EMPTY] @AT@ 30377 @LENGTH@ 58
------------UPD QualifiedName@@RelCollationImpl.EMPTY @TO@ RelCollations.EMPTY @AT@ 30412 @LENGTH@ 22
---------------UPD SimpleName@@RelCollationImpl @TO@ RelCollations @AT@ 30412 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:assertEquals("Bearer",request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @TO@ MethodDeclaration@@public, void, MethodName:testDetailsAdded, Exception,  @AT@ 2907 @LENGTH@ 92
---INS MethodInvocation@@assertEquals("Bearer",request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bearer",request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @AT@ 2907 @LENGTH@ 91
------INS SimpleName@@MethodName:assertEquals:["Bearer", request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @TO@ MethodInvocation@@assertEquals("Bearer",request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)) @AT@ 2907 @LENGTH@ 91
---------INS StringLiteral@@"Bearer" @TO@ SimpleName@@MethodName:assertEquals:["Bearer", request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @AT@ 2920 @LENGTH@ 8
---------INS MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @TO@ SimpleName@@MethodName:assertEquals:["Bearer", request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE)] @AT@ 2930 @LENGTH@ 67
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @AT@ 2930 @LENGTH@ 7
------------INS SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE] @TO@ MethodInvocation@@request.getAttribute(OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE) @AT@ 2938 @LENGTH@ 59
---------------INS QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @TO@ SimpleName@@MethodName:getAttribute:[OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE] @AT@ 2951 @LENGTH@ 45
------------------INS SimpleName@@OAuth2AuthenticationDetails @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 2951 @LENGTH@ 27
------------------INS SimpleName@@ACCESS_TOKEN_TYPE @TO@ QualifiedName@@OAuth2AuthenticationDetails.ACCESS_TOKEN_TYPE @AT@ 2979 @LENGTH@ 17


UPD IfStatement@@if (threadNumbers.size() != NUM_CONCURRENT) {  fail(String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));} @TO@ if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {  fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));} @AT@ 2027 @LENGTH@ 229
---UPD InfixExpression@@threadNumbers.size() != NUM_CONCURRENT @TO@ threadNumbers.size() < (NUM_CONCURRENT / 2) @AT@ 2031 @LENGTH@ 38
------INS ParenthesizedExpression@@(NUM_CONCURRENT / 2) @TO@ InfixExpression@@threadNumbers.size() != NUM_CONCURRENT @AT@ 2018 @LENGTH@ 20
---------INS InfixExpression@@NUM_CONCURRENT / 2 @TO@ ParenthesizedExpression@@(NUM_CONCURRENT / 2) @AT@ 2019 @LENGTH@ 18
------------INS Operator@@/ @TO@ InfixExpression@@NUM_CONCURRENT / 2 @AT@ 2033 @LENGTH@ 1
------------INS NumberLiteral@@2 @TO@ InfixExpression@@NUM_CONCURRENT / 2 @AT@ 2036 @LENGTH@ 1
------------MOV SimpleName@@NUM_CONCURRENT @TO@ InfixExpression@@NUM_CONCURRENT / 2 @AT@ 2055 @LENGTH@ 14
------UPD Operator@@!= @TO@ < @AT@ 2051 @LENGTH@ 2
---UPD Block@@ThenBody:{  fail(String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));} @TO@ ThenBody:{  fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()));} @AT@ 2071 @LENGTH@ 185
------UPD ExpressionStatement@@MethodInvocation:fail(String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())) @TO@ MethodInvocation:fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())) @AT@ 2085 @LENGTH@ 161
---------UPD MethodInvocation@@fail(String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())) @TO@ fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())) @AT@ 2085 @LENGTH@ 160
------------UPD SimpleName@@MethodName:fail:[String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())] @TO@ MethodName:fail:[String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size())] @AT@ 2085 @LENGTH@ 160
---------------UPD MethodInvocation@@String.format("We were expecting to have %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()) @TO@ String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d",NUM_CONCURRENT,threadNumbers.size()) @AT@ 2090 @LENGTH@ 154
------------------UPD SimpleName@@MethodName:format:["We were expecting to have %d numbers of concurrent consumers, but only found %d", NUM_CONCURRENT, threadNumbers.size()] @TO@ MethodName:format:["We were expecting to have about half of %d numbers of concurrent consumers, but only found %d", NUM_CONCURRENT, threadNumbers.size()] @AT@ 2097 @LENGTH@ 147
---------------------UPD StringLiteral@@"We were expecting to have %d numbers of concurrent consumers, but only found %d" @TO@ "We were expecting to have about half of %d numbers of concurrent consumers, but only found %d" @AT@ 2104 @LENGTH@ 81


UPD TypeDeclaration@@[@UriEndpoint(scheme="salesforce",title="Salesforce",syntax="salesforce:operationName:topicName",consumerClass=SalesforceConsumer.class), public]SalesforceEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(scheme="salesforce",title="Salesforce",syntax="salesforce:operationName:topicName",label="api,cloud,crm",consumerClass=SalesforceConsumer.class), public]SalesforceEndpoint, DefaultEndpoint @AT@ 1391 @LENGTH@ 3790
---UPD NormalAnnotation@@@UriEndpoint(scheme="salesforce",title="Salesforce",syntax="salesforce:operationName:topicName",consumerClass=SalesforceConsumer.class) @TO@ @UriEndpoint(scheme="salesforce",title="Salesforce",syntax="salesforce:operationName:topicName",label="api,cloud,crm",consumerClass=SalesforceConsumer.class) @AT@ 1391 @LENGTH@ 146


UPD IfStatement@@if (ObjectHelper.isNotEmpty(newUrl) && newUrl != url) {  if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {    answer=newUrl;  } else   if (baseUrl != null) {    if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {      answer=baseUrl + newUrl.substring(1);    } else {      answer=baseUrl + newUrl;    }  } else {    answer=newUrl;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});  }} @TO@ if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {  if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {    answer=newUrl;  } else   if (baseUrl != null) {    if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {      answer=baseUrl + newUrl.substring(1);    } else {      answer=baseUrl + newUrl;    }  } else {    answer=newUrl;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});  }} @AT@ 17408 @LENGTH@ 1028
---UPD InfixExpression@@ObjectHelper.isNotEmpty(newUrl) && newUrl != url @TO@ ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url) @AT@ 17412 @LENGTH@ 48
------INS PrefixExpression@@!newUrl.equals(url) @TO@ InfixExpression@@ObjectHelper.isNotEmpty(newUrl) && newUrl != url @AT@ 17447 @LENGTH@ 19
---------INS Operator@@! @TO@ PrefixExpression@@!newUrl.equals(url) @AT@ 17447 @LENGTH@ 1
---------INS MethodInvocation@@newUrl.equals(url) @TO@ PrefixExpression@@!newUrl.equals(url) @AT@ 17448 @LENGTH@ 18
------------INS SimpleName@@Name:newUrl @TO@ MethodInvocation@@newUrl.equals(url) @AT@ 17448 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[url] @TO@ MethodInvocation@@newUrl.equals(url) @AT@ 17455 @LENGTH@ 11
---------------INS SimpleName@@url @TO@ SimpleName@@MethodName:equals:[url] @AT@ 17462 @LENGTH@ 3
------DEL InfixExpression@@newUrl != url @AT@ 17447 @LENGTH@ 13
---------DEL SimpleName@@newUrl @AT@ 17447 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 17453 @LENGTH@ 2
---------DEL SimpleName@@url @AT@ 17457 @LENGTH@ 3


INS VariableDeclarationStatement@@int before=new File("target/test").list().length; @TO@ MethodDeclaration@@public, void, MethodName:testReadWithReadSuffix, Exception,  @AT@ 9368 @LENGTH@ 51
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9368 @LENGTH@ 3
---INS VariableDeclarationFragment@@before=new File("target/test").list().length @TO@ VariableDeclarationStatement@@int before=new File("target/test").list().length; @AT@ 9372 @LENGTH@ 46
------INS SimpleName@@before @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9372 @LENGTH@ 6
------INS FieldAccess@@new File("target/test").list().length @TO@ VariableDeclarationFragment@@before=new File("target/test").list().length @AT@ 9381 @LENGTH@ 37
---------INS MethodInvocation@@new File("target/test").list() @TO@ FieldAccess@@new File("target/test").list().length @AT@ 9381 @LENGTH@ 30
------------INS ClassInstanceCreation@@File["target/test"] @TO@ MethodInvocation@@new File("target/test").list() @AT@ 9381 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9381 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9385 @LENGTH@ 4
---------------INS StringLiteral@@"target/test" @TO@ ClassInstanceCreation@@File["target/test"] @AT@ 9390 @LENGTH@ 13
------------INS SimpleName@@MethodName:list:[] @TO@ MethodInvocation@@new File("target/test").list() @AT@ 9405 @LENGTH@ 6
---------INS SimpleName@@length @TO@ FieldAccess@@new File("target/test").list().length @AT@ 9412 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:person, @PathVariable String id,  @TO@ TypeDeclaration@@[@BasePathAwareController, static]BooksHtmlController,  @AT@ 1823 @LENGTH@ 34
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:person, @PathVariable String id,  @AT@ 1818 @LENGTH@ 4
---INS SimpleName@@MethodName:person @TO@ MethodDeclaration@@void, MethodName:person, @PathVariable String id,  @AT@ 1823 @LENGTH@ 6
---INS SingleVariableDeclaration@@@PathVariable String id @TO@ MethodDeclaration@@void, MethodName:person, @PathVariable String id,  @AT@ 1830 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@PathVariable String id @AT@ 1844 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@@PathVariable String id @AT@ 1851 @LENGTH@ 2


UPD VariableDeclarationStatement@@File tmp=File.createTempFile(gav,".jar"); @TO@ File tmp=File.createTempFile(gav.replace(':','~'),".jar"); @AT@ 1200 @LENGTH@ 44
---UPD VariableDeclarationFragment@@tmp=File.createTempFile(gav,".jar") @TO@ tmp=File.createTempFile(gav.replace(':','~'),".jar") @AT@ 1205 @LENGTH@ 38
------UPD MethodInvocation@@File.createTempFile(gav,".jar") @TO@ File.createTempFile(gav.replace(':','~'),".jar") @AT@ 1211 @LENGTH@ 32
---------UPD SimpleName@@MethodName:createTempFile:[gav, ".jar"] @TO@ MethodName:createTempFile:[gav.replace(':','~'), ".jar"] @AT@ 1216 @LENGTH@ 27
------------INS MethodInvocation@@gav.replace(':','~') @TO@ SimpleName@@MethodName:createTempFile:[gav, ".jar"] @AT@ 1231 @LENGTH@ 21
---------------INS SimpleName@@Name:gav @TO@ MethodInvocation@@gav.replace(':','~') @AT@ 1231 @LENGTH@ 3
---------------INS SimpleName@@MethodName:replace:[':', '~'] @TO@ MethodInvocation@@gav.replace(':','~') @AT@ 1235 @LENGTH@ 17
------------------INS CharacterLiteral@@':' @TO@ SimpleName@@MethodName:replace:[':', '~'] @AT@ 1243 @LENGTH@ 3
------------------INS CharacterLiteral@@'~' @TO@ SimpleName@@MethodName:replace:[':', '~'] @AT@ 1248 @LENGTH@ 3
------------DEL SimpleName@@gav @AT@ 1231 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:brokerService.addConnector("mqtt://localhost:1883") @TO@ MethodInvocation:brokerService.addConnector("mqtt://127.0.0.1:1883") @AT@ 1703 @LENGTH@ 52
---UPD MethodInvocation@@brokerService.addConnector("mqtt://localhost:1883") @TO@ brokerService.addConnector("mqtt://127.0.0.1:1883") @AT@ 1703 @LENGTH@ 51
------UPD SimpleName@@MethodName:addConnector:["mqtt://localhost:1883"] @TO@ MethodName:addConnector:["mqtt://127.0.0.1:1883"] @AT@ 1717 @LENGTH@ 37
---------UPD StringLiteral@@"mqtt://localhost:1883" @TO@ "mqtt://127.0.0.1:1883" @AT@ 1730 @LENGTH@ 23


INS ExpressionStatement@@SuperMethodInvocation:super.setConfiguration(configuration) @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, GenericFileConfiguration configuration,  @AT@ 2097 @LENGTH@ 38
---INS SuperMethodInvocation@@super.setConfiguration(configuration) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setConfiguration(configuration) @AT@ 2097 @LENGTH@ 37
------INS SimpleName@@MethodName:setConfiguration:[configuration] @TO@ SuperMethodInvocation@@super.setConfiguration(configuration) @AT@ 2103 @LENGTH@ 16
------INS SimpleName@@configuration @TO@ SuperMethodInvocation@@super.setConfiguration(configuration) @AT@ 2120 @LENGTH@ 13


INS SuperConstructorInvocation@@super(uri);
 @TO@ MethodDeclaration@@voidMethodName:MyEndpoint, String uri, Endpoint childEndpoint,  @AT@ 3565 @LENGTH@ 11
---INS SimpleName@@uri @TO@ SuperConstructorInvocation@@super(uri);
 @AT@ 3571 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("179",order.getPrice().toString()) @TO@ MethodInvocation:assertEquals("179.00",order.getPrice().toString()) @AT@ 1295 @LENGTH@ 49
---UPD MethodInvocation@@assertEquals("179",order.getPrice().toString()) @TO@ assertEquals("179.00",order.getPrice().toString()) @AT@ 1295 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertEquals:["179", order.getPrice().toString()] @TO@ MethodName:assertEquals:["179.00", order.getPrice().toString()] @AT@ 1295 @LENGTH@ 48
---------UPD StringLiteral@@"179" @TO@ "179.00" @AT@ 1308 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:keyInfo.add(((PublicKey)keyEncryptionKey)) @TO@ MethodInvocation:keyInfo.add((PublicKey)keyEncryptionKey) @AT@ 33346 @LENGTH@ 43
---UPD MethodInvocation@@keyInfo.add(((PublicKey)keyEncryptionKey)) @TO@ keyInfo.add((PublicKey)keyEncryptionKey) @AT@ 33346 @LENGTH@ 42
------UPD SimpleName@@MethodName:add:[((PublicKey)keyEncryptionKey)] @TO@ MethodName:add:[(PublicKey)keyEncryptionKey] @AT@ 33354 @LENGTH@ 34
---------DEL ParenthesizedExpression@@((PublicKey)keyEncryptionKey) @AT@ 33358 @LENGTH@ 29
------------DEL CastExpression@@(PublicKey)keyEncryptionKey @AT@ 33359 @LENGTH@ 27
---------INS CastExpression@@(PublicKey)keyEncryptionKey @TO@ SimpleName@@MethodName:add:[((PublicKey)keyEncryptionKey)] @AT@ 33358 @LENGTH@ 27
------------MOV SimpleType@@PublicKey @TO@ CastExpression@@(PublicKey)keyEncryptionKey @AT@ 33360 @LENGTH@ 9
------------MOV SimpleName@@keyEncryptionKey @TO@ CastExpression@@(PublicKey)keyEncryptionKey @AT@ 33370 @LENGTH@ 16


INS FieldDeclaration@@private, Person, [father] @TO@ TypeDeclaration@@[@Entity, public]Person,  @AT@ 1381 @LENGTH@ 71
---INS Modifier@@private @TO@ FieldDeclaration@@private, Person, [father] @AT@ 1381 @LENGTH@ 7
---INS SimpleType@@Person @TO@ FieldDeclaration@@private, Person, [father] @AT@ 1438 @LENGTH@ 6
---INS VariableDeclarationFragment@@father @TO@ FieldDeclaration@@private, Person, [father] @AT@ 1445 @LENGTH@ 6
------INS SimpleName@@father @TO@ VariableDeclarationFragment@@father @AT@ 1445 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ MethodInvocation:http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED).and().requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3418 @LENGTH@ 1199
---UPD MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @TO@ http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED).and().requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3418 @LENGTH@ 1198
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3489 @LENGTH@ 259
------INS MethodInvocation@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.IF_REQUIRED] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3489 @LENGTH@ 249
---------INS QualifiedName@@SessionCreationPolicy.IF_REQUIRED @TO@ MethodInvocation@@MethodName:sessionCreationPolicy:[SessionCreationPolicy.IF_REQUIRED] @AT@ 3704 @LENGTH@ 33
------------INS SimpleName@@SessionCreationPolicy @TO@ QualifiedName@@SessionCreationPolicy.IF_REQUIRED @AT@ 3704 @LENGTH@ 21
------------INS SimpleName@@IF_REQUIRED @TO@ QualifiedName@@SessionCreationPolicy.IF_REQUIRED @AT@ 3726 @LENGTH@ 11
------INS MethodInvocation@@MethodName:sessionManagement:[] @TO@ MethodInvocation@@http.requestMatchers().antMatchers("/photos/**","/oauth/users/**","/oauth/clients/**","/me").and().authorizeRequests().antMatchers("/me").access("#oauth2.hasScope('read')").antMatchers("/photos").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").antMatchers("/photos/trusted/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/user/**").access("#oauth2.hasScope('trust')").antMatchers("/photos/**").access("#oauth2.hasScope('read') or (!#oauth2.isOAuth() and hasRole('ROLE_USER'))").regexMatchers(HttpMethod.DELETE,"/oauth/users/([^/].*?)/tokens/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('write')").regexMatchers(HttpMethod.GET,"/oauth/clients/([^/].*?)/users/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and (hasRole('ROLE_USER') or #oauth2.isClient()) and #oauth2.hasScope('read')").regexMatchers(HttpMethod.GET,"/oauth/clients/.*").access("#oauth2.clientHasRole('ROLE_CLIENT') and #oauth2.isClient() and #oauth2.hasScope('read')") @AT@ 3489 @LENGTH@ 192


UPD ExpressionStatement@@MethodInvocation:LOG.info("ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsed(TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:LOG.info("ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsedMillis()) @AT@ 9502 @LENGTH@ 144
---UPD MethodInvocation@@LOG.info("ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsed(TimeUnit.MILLISECONDS)) @TO@ LOG.info("ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsedMillis()) @AT@ 9502 @LENGTH@ 143
------UPD SimpleName@@MethodName:info:["ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsed(TimeUnit.MILLISECONDS)] @TO@ MethodName:info:["ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsedMillis()] @AT@ 9506 @LENGTH@ 139
---------UPD InfixExpression@@"ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsed(TimeUnit.MILLISECONDS) @TO@ "ExecutionTime for Container: " + request.getContainerIdString() + "="+ runtimeWatch.stop().elapsedMillis() @AT@ 9511 @LENGTH@ 133
------------UPD MethodInvocation@@runtimeWatch.stop().elapsed(TimeUnit.MILLISECONDS) @TO@ runtimeWatch.stop().elapsedMillis() @AT@ 9594 @LENGTH@ 50
---------------UPD SimpleName@@MethodName:elapsed:[TimeUnit.MILLISECONDS] @TO@ MethodName:elapsedMillis:[] @AT@ 9614 @LENGTH@ 30
------------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 9622 @LENGTH@ 21
---------------------DEL SimpleName@@TimeUnit @AT@ 9622 @LENGTH@ 8
---------------------DEL SimpleName@@MILLISECONDS @AT@ 9631 @LENGTH@ 12


UPD IfStatement@@if (distance.getMetric() != null) {  criteria.nearSphere(point);} else {  criteria.near(point);} @TO@ if (!Metrics.NEUTRAL.equals(distance.getMetric())) {  criteria.nearSphere(point);} else {  criteria.near(point);} @AT@ 7258 @LENGTH@ 118
---DEL InfixExpression@@distance.getMetric() != null @AT@ 7262 @LENGTH@ 28
------DEL MethodInvocation@@distance.getMetric() @AT@ 7262 @LENGTH@ 20
------DEL Operator@@!= @AT@ 7282 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 7286 @LENGTH@ 4
---INS PrefixExpression@@!Metrics.NEUTRAL.equals(distance.getMetric()) @TO@ IfStatement@@if (distance.getMetric() != null) {  criteria.nearSphere(point);} else {  criteria.near(point);} @AT@ 7307 @LENGTH@ 45
------INS Operator@@! @TO@ PrefixExpression@@!Metrics.NEUTRAL.equals(distance.getMetric()) @AT@ 7307 @LENGTH@ 1
------INS MethodInvocation@@Metrics.NEUTRAL.equals(distance.getMetric()) @TO@ PrefixExpression@@!Metrics.NEUTRAL.equals(distance.getMetric()) @AT@ 7308 @LENGTH@ 44
---------INS QualifiedName@@Name:Metrics.NEUTRAL @TO@ MethodInvocation@@Metrics.NEUTRAL.equals(distance.getMetric()) @AT@ 7308 @LENGTH@ 15
---------INS SimpleName@@MethodName:equals:[distance.getMetric()] @TO@ MethodInvocation@@Metrics.NEUTRAL.equals(distance.getMetric()) @AT@ 7324 @LENGTH@ 28
------------INS MethodInvocation@@distance.getMetric() @TO@ SimpleName@@MethodName:equals:[distance.getMetric()] @AT@ 7331 @LENGTH@ 20
---------------MOV SimpleName@@Name:distance @TO@ MethodInvocation@@distance.getMetric() @AT@ 7262 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getMetric:[] @TO@ MethodInvocation@@distance.getMetric() @AT@ 7271 @LENGTH@ 11


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 4682 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 4712 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 4720 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 4724 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 4730 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 4738 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ MethodInvocation:factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2692 @LENGTH@ 110
---UPD MethodInvocation@@factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2699 @LENGTH@ 102
------UPD SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @TO@ MethodName:createSaslServer:["GSSAPI", "sasl", TEST_SERVER_1, props, new AuthorizeOnlyCallbackHandler()] @AT@ 2707 @LENGTH@ 94
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @AT@ 2740 @LENGTH@ 13
---------DEL StringLiteral@@"test_server_1" @AT@ 2742 @LENGTH@ 15


UPD ReturnStatement@@InfixExpression:(s1 == null && s2 == null) || s1.equals(s2) @TO@ InfixExpression:(s1 == null && s2 == null) || (s1 != null && s1.equals(s2)) @AT@ 42141 @LENGTH@ 51
---UPD InfixExpression@@(s1 == null && s2 == null) || s1.equals(s2) @TO@ (s1 == null && s2 == null) || (s1 != null && s1.equals(s2)) @AT@ 42148 @LENGTH@ 43
------INS ParenthesizedExpression@@(s1 != null && s1.equals(s2)) @TO@ InfixExpression@@(s1 == null && s2 == null) || s1.equals(s2) @AT@ 42178 @LENGTH@ 29
---------INS InfixExpression@@s1 != null && s1.equals(s2) @TO@ ParenthesizedExpression@@(s1 != null && s1.equals(s2)) @AT@ 42179 @LENGTH@ 27
------------MOV MethodInvocation@@s1.equals(s2) @TO@ InfixExpression@@s1 != null && s1.equals(s2) @AT@ 42178 @LENGTH@ 13
------------INS InfixExpression@@s1 != null @TO@ InfixExpression@@s1 != null && s1.equals(s2) @AT@ 42179 @LENGTH@ 10
---------------INS SimpleName@@s1 @TO@ InfixExpression@@s1 != null @AT@ 42179 @LENGTH@ 2
---------------INS Operator@@!= @TO@ InfixExpression@@s1 != null @AT@ 42181 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@s1 != null @AT@ 42185 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@s1 != null && s1.equals(s2) @AT@ 42189 @LENGTH@ 2


UPD FieldDeclaration@@private, static, final, String, [FIELDS_OPTION="fields"] @TO@ protected, static, final, String, [FIELDS_OPTION="fields"] @AT@ 2444 @LENGTH@ 53
---UPD Modifier@@private @TO@ protected @AT@ 2444 @LENGTH@ 7


INS IfStatement@@if (DebugUtils.isTraceOrcEnabled()) {  LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next));} @TO@ MethodDeclaration@@public, void, MethodName:readEncodedColumns, int stripeIx, StripeInformation stripe, RowIndex[] indexes, List<ColumnEncoding> encodings, List<Stream> streamList, boolean[] included, boolean[][] colRgs, IOException,  @AT@ 14880 @LENGTH@ 168
---INS MethodInvocation@@DebugUtils.isTraceOrcEnabled() @TO@ IfStatement@@if (DebugUtils.isTraceOrcEnabled()) {  LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next));} @AT@ 14884 @LENGTH@ 30
------INS SimpleName@@Name:DebugUtils @TO@ MethodInvocation@@DebugUtils.isTraceOrcEnabled() @AT@ 14884 @LENGTH@ 10
------INS SimpleName@@MethodName:isTraceOrcEnabled:[] @TO@ MethodInvocation@@DebugUtils.isTraceOrcEnabled() @AT@ 14895 @LENGTH@ 19
---INS Block@@ThenBody:{  LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next));} @TO@ IfStatement@@if (DebugUtils.isTraceOrcEnabled()) {  LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next));} @AT@ 14916 @LENGTH@ 132
------INS ExpressionStatement@@MethodInvocation:LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @TO@ Block@@ThenBody:{  LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next));} @AT@ 14924 @LENGTH@ 118
---------INS MethodInvocation@@LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 14924 @LENGTH@ 117
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 14924 @LENGTH@ 3
------------INS SimpleName@@MethodName:info:["Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)] @TO@ MethodInvocation@@LOG.info("Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)) @AT@ 14928 @LENGTH@ 113
---------------INS InfixExpression@@"Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next) @TO@ SimpleName@@MethodName:info:["Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next)] @AT@ 14933 @LENGTH@ 107
------------------INS StringLiteral@@"Disk ranges after processing all the data " @TO@ InfixExpression@@"Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 14933 @LENGTH@ 44
------------------INS Operator@@+ @TO@ InfixExpression@@"Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 14977 @LENGTH@ 1
------------------INS MethodInvocation@@RecordReaderUtils.stringifyDiskRanges(toRead.next) @TO@ InfixExpression@@"Disk ranges after processing all the data " + RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 14990 @LENGTH@ 50
---------------------INS SimpleName@@Name:RecordReaderUtils @TO@ MethodInvocation@@RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 14990 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:stringifyDiskRanges:[toRead.next] @TO@ MethodInvocation@@RecordReaderUtils.stringifyDiskRanges(toRead.next) @AT@ 15008 @LENGTH@ 32
------------------------INS QualifiedName@@toRead.next @TO@ SimpleName@@MethodName:stringifyDiskRanges:[toRead.next] @AT@ 15028 @LENGTH@ 11
---------------------------INS SimpleName@@toRead @TO@ QualifiedName@@toRead.next @AT@ 15028 @LENGTH@ 6
---------------------------INS SimpleName@@next @TO@ QualifiedName@@toRead.next @AT@ 15035 @LENGTH@ 4


UPD EnhancedForStatement@@for (ProcessorDefinition out : outputs) {  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    for (    WhenDefinition when : choice.getWhenClauses()) {      if (type.isInstance(when)) {        found.add((T)when);      }      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }    continue;  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  if (out instanceof OutputDefinition) {    OutputDefinition outDef=(OutputDefinition)out;    List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();    doFindType(outDefOut,type,found);    continue;  }  if (type.isInstance(out)) {    found.add((T)out);  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @TO@ for (ProcessorDefinition out : outputs) {  if (out instanceof SendDefinition) {    SendDefinition send=(SendDefinition)out;    List<ProcessorDefinition<?>> children=send.getOutputs();    doFindType(children,type,found);  }  if (out instanceof ChoiceDefinition) {    ChoiceDefinition choice=(ChoiceDefinition)out;    if (type.isInstance(choice)) {      found.add((T)choice);    }    for (    WhenDefinition when : choice.getWhenClauses()) {      if (type.isInstance(when)) {        found.add((T)when);      }      List<ProcessorDefinition<?>> children=when.getOutputs();      doFindType(children,type,found);    }    if (choice.getOtherwise() != null) {      List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();      doFindType(children,type,found);    }    continue;  }  if (out instanceof TryDefinition) {    TryDefinition doTry=(TryDefinition)out;    if (type.isInstance(doTry)) {      found.add((T)doTry);    }    List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();    doFindType(doTryOut,type,found);    List<CatchDefinition> doTryCatch=doTry.getCatchClauses();    for (    CatchDefinition doCatch : doTryCatch) {      doFindType(doCatch.getOutputs(),type,found);    }    if (doTry.getFinallyClause() != null) {      doFindType(doTry.getFinallyClause().getOutputs(),type,found);    }    continue;  }  if (out instanceof OutputDefinition) {    OutputDefinition outDef=(OutputDefinition)out;    if (type.isInstance(outDef)) {      found.add((T)outDef);    }    List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();    doFindType(outDefOut,type,found);    continue;  }  if (type.isInstance(out)) {    found.add((T)out);  }  List<ProcessorDefinition<?>> children=out.getOutputs();  doFindType(children,type,found);} @AT@ 7376 @LENGTH@ 2647
---UPD IfStatement@@if (out instanceof ChoiceDefinition) {  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    if (type.isInstance(when)) {      found.add((T)when);    }    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @TO@ if (out instanceof ChoiceDefinition) {  ChoiceDefinition choice=(ChoiceDefinition)out;  if (type.isInstance(choice)) {    found.add((T)choice);  }  for (  WhenDefinition when : choice.getWhenClauses()) {    if (type.isInstance(when)) {      found.add((T)when);    }    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @AT@ 7750 @LENGTH@ 813
------UPD Block@@ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    if (type.isInstance(when)) {      found.add((T)when);    }    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @TO@ ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  if (type.isInstance(choice)) {    found.add((T)choice);  }  for (  WhenDefinition when : choice.getWhenClauses()) {    if (type.isInstance(when)) {      found.add((T)when);    }    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @AT@ 7787 @LENGTH@ 776
---------INS IfStatement@@if (type.isInstance(choice)) {  found.add((T)choice);} @TO@ Block@@ThenBody:{  ChoiceDefinition choice=(ChoiceDefinition)out;  for (  WhenDefinition when : choice.getWhenClauses()) {    if (type.isInstance(when)) {      found.add((T)when);    }    List<ProcessorDefinition<?>> children=when.getOutputs();    doFindType(children,type,found);  }  if (choice.getOtherwise() != null) {    List<ProcessorDefinition<?>> children=choice.getOtherwise().getOutputs();    doFindType(children,type,found);  }  continue;} @AT@ 7930 @LENGTH@ 90
------------INS MethodInvocation@@type.isInstance(choice) @TO@ IfStatement@@if (type.isInstance(choice)) {  found.add((T)choice);} @AT@ 7934 @LENGTH@ 23
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isInstance(choice) @AT@ 7934 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isInstance:[choice] @TO@ MethodInvocation@@type.isInstance(choice) @AT@ 7939 @LENGTH@ 18
------------------INS SimpleName@@choice @TO@ SimpleName@@MethodName:isInstance:[choice] @AT@ 7950 @LENGTH@ 6
------------INS Block@@ThenBody:{  found.add((T)choice);} @TO@ IfStatement@@if (type.isInstance(choice)) {  found.add((T)choice);} @AT@ 7959 @LENGTH@ 61
---------------INS ExpressionStatement@@MethodInvocation:found.add((T)choice) @TO@ Block@@ThenBody:{  found.add((T)choice);} @AT@ 7981 @LENGTH@ 21
------------------INS MethodInvocation@@found.add((T)choice) @TO@ ExpressionStatement@@MethodInvocation:found.add((T)choice) @AT@ 7981 @LENGTH@ 20
---------------------INS SimpleName@@Name:found @TO@ MethodInvocation@@found.add((T)choice) @AT@ 7981 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:add:[(T)choice] @TO@ MethodInvocation@@found.add((T)choice) @AT@ 7987 @LENGTH@ 14
------------------------INS CastExpression@@(T)choice @TO@ SimpleName@@MethodName:add:[(T)choice] @AT@ 7991 @LENGTH@ 9
---------------------------INS SimpleType@@T @TO@ CastExpression@@(T)choice @AT@ 7992 @LENGTH@ 1
---------------------------INS SimpleName@@choice @TO@ CastExpression@@(T)choice @AT@ 7994 @LENGTH@ 6
---UPD IfStatement@@if (out instanceof TryDefinition) {  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @TO@ if (out instanceof TryDefinition) {  TryDefinition doTry=(TryDefinition)out;  if (type.isInstance(doTry)) {    found.add((T)doTry);  }  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8630 @LENGTH@ 722
------UPD Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @TO@ ThenBody:{  TryDefinition doTry=(TryDefinition)out;  if (type.isInstance(doTry)) {    found.add((T)doTry);  }  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8664 @LENGTH@ 688
---------INS IfStatement@@if (type.isInstance(doTry)) {  found.add((T)doTry);} @TO@ Block@@ThenBody:{  TryDefinition doTry=(TryDefinition)out;  List<ProcessorDefinition<?>> doTryOut=doTry.getOutputsWithoutCatches();  doFindType(doTryOut,type,found);  List<CatchDefinition> doTryCatch=doTry.getCatchClauses();  for (  CatchDefinition doCatch : doTryCatch) {    doFindType(doCatch.getOutputs(),type,found);  }  if (doTry.getFinallyClause() != null) {    doFindType(doTry.getFinallyClause().getOutputs(),type,found);  }  continue;} @AT@ 8967 @LENGTH@ 88
------------INS MethodInvocation@@type.isInstance(doTry) @TO@ IfStatement@@if (type.isInstance(doTry)) {  found.add((T)doTry);} @AT@ 8971 @LENGTH@ 22
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isInstance(doTry) @AT@ 8971 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isInstance:[doTry] @TO@ MethodInvocation@@type.isInstance(doTry) @AT@ 8976 @LENGTH@ 17
------------------INS SimpleName@@doTry @TO@ SimpleName@@MethodName:isInstance:[doTry] @AT@ 8987 @LENGTH@ 5
------------INS Block@@ThenBody:{  found.add((T)doTry);} @TO@ IfStatement@@if (type.isInstance(doTry)) {  found.add((T)doTry);} @AT@ 8995 @LENGTH@ 60
---------------INS ExpressionStatement@@MethodInvocation:found.add((T)doTry) @TO@ Block@@ThenBody:{  found.add((T)doTry);} @AT@ 9017 @LENGTH@ 20
------------------INS MethodInvocation@@found.add((T)doTry) @TO@ ExpressionStatement@@MethodInvocation:found.add((T)doTry) @AT@ 9017 @LENGTH@ 19
---------------------INS SimpleName@@Name:found @TO@ MethodInvocation@@found.add((T)doTry) @AT@ 9017 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:add:[(T)doTry] @TO@ MethodInvocation@@found.add((T)doTry) @AT@ 9023 @LENGTH@ 13
------------------------INS CastExpression@@(T)doTry @TO@ SimpleName@@MethodName:add:[(T)doTry] @AT@ 9027 @LENGTH@ 8
---------------------------INS SimpleType@@T @TO@ CastExpression@@(T)doTry @AT@ 9028 @LENGTH@ 1
---------------------------INS SimpleName@@doTry @TO@ CastExpression@@(T)doTry @AT@ 9030 @LENGTH@ 5
---UPD IfStatement@@if (out instanceof OutputDefinition) {  OutputDefinition outDef=(OutputDefinition)out;  List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();  doFindType(outDefOut,type,found);  continue;} @TO@ if (out instanceof OutputDefinition) {  OutputDefinition outDef=(OutputDefinition)out;  if (type.isInstance(outDef)) {    found.add((T)outDef);  }  List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();  doFindType(outDefOut,type,found);  continue;} @AT@ 9430 @LENGTH@ 339
------UPD Block@@ThenBody:{  OutputDefinition outDef=(OutputDefinition)out;  List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();  doFindType(outDefOut,type,found);  continue;} @TO@ ThenBody:{  OutputDefinition outDef=(OutputDefinition)out;  if (type.isInstance(outDef)) {    found.add((T)outDef);  }  List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();  doFindType(outDefOut,type,found);  continue;} @AT@ 9467 @LENGTH@ 302
---------INS IfStatement@@if (type.isInstance(outDef)) {  found.add((T)outDef);} @TO@ Block@@ThenBody:{  OutputDefinition outDef=(OutputDefinition)out;  List<ProcessorDefinition<?>> outDefOut=outDef.getOutputs();  doFindType(outDefOut,type,found);  continue;} @AT@ 9942 @LENGTH@ 90
------------INS MethodInvocation@@type.isInstance(outDef) @TO@ IfStatement@@if (type.isInstance(outDef)) {  found.add((T)outDef);} @AT@ 9946 @LENGTH@ 23
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isInstance(outDef) @AT@ 9946 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isInstance:[outDef] @TO@ MethodInvocation@@type.isInstance(outDef) @AT@ 9951 @LENGTH@ 18
------------------INS SimpleName@@outDef @TO@ SimpleName@@MethodName:isInstance:[outDef] @AT@ 9962 @LENGTH@ 6
------------INS Block@@ThenBody:{  found.add((T)outDef);} @TO@ IfStatement@@if (type.isInstance(outDef)) {  found.add((T)outDef);} @AT@ 9971 @LENGTH@ 61
---------------INS ExpressionStatement@@MethodInvocation:found.add((T)outDef) @TO@ Block@@ThenBody:{  found.add((T)outDef);} @AT@ 9993 @LENGTH@ 21
------------------INS MethodInvocation@@found.add((T)outDef) @TO@ ExpressionStatement@@MethodInvocation:found.add((T)outDef) @AT@ 9993 @LENGTH@ 20
---------------------INS SimpleName@@Name:found @TO@ MethodInvocation@@found.add((T)outDef) @AT@ 9993 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:add:[(T)outDef] @TO@ MethodInvocation@@found.add((T)outDef) @AT@ 9999 @LENGTH@ 14
------------------------INS CastExpression@@(T)outDef @TO@ SimpleName@@MethodName:add:[(T)outDef] @AT@ 10003 @LENGTH@ 9
---------------------------INS SimpleType@@T @TO@ CastExpression@@(T)outDef @AT@ 10004 @LENGTH@ 1
---------------------------INS SimpleName@@outDef @TO@ CastExpression@@(T)outDef @AT@ 10006 @LENGTH@ 6


INS AssertStatement@@InfixExpression:delegate != null, Msg-StringLiteral:"delegate is null" @TO@ MethodDeclaration@@voidMethodName:DiscoveryOptionsResource, Resource delegate,  @AT@ 1739 @LENGTH@ 45
---INS InfixExpression@@delegate != null @TO@ AssertStatement@@InfixExpression:delegate != null, Msg-StringLiteral:"delegate is null" @AT@ 1746 @LENGTH@ 16
------MOV SimpleName@@delegate @TO@ InfixExpression@@delegate != null @AT@ 1809 @LENGTH@ 8
------MOV Operator@@== @TO@ InfixExpression@@delegate != null @AT@ 1817 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@delegate != null @AT@ 1821 @LENGTH@ 4
---INS StringLiteral@@"delegate is null" @TO@ AssertStatement@@InfixExpression:delegate != null, Msg-StringLiteral:"delegate is null" @AT@ 1765 @LENGTH@ 18


UPD IfStatement@@if (annotation != null) {  this.field=field;} @TO@ if (annotation != null) {  this.field=field;  ReflectionUtils.makeAccessible(this.field);} @AT@ 1930 @LENGTH@ 54
---UPD Block@@ThenBody:{  this.field=field;} @TO@ ThenBody:{  this.field=field;  ReflectionUtils.makeAccessible(this.field);} @AT@ 1954 @LENGTH@ 30
------INS ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(this.field) @TO@ Block@@ThenBody:{  this.field=field;} @AT@ 1994 @LENGTH@ 43
---------INS MethodInvocation@@ReflectionUtils.makeAccessible(this.field) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(this.field) @AT@ 1994 @LENGTH@ 42
------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(this.field) @AT@ 1994 @LENGTH@ 15
------------INS SimpleName@@MethodName:makeAccessible:[this.field] @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(this.field) @AT@ 2010 @LENGTH@ 26
---------------INS FieldAccess@@this.field @TO@ SimpleName@@MethodName:makeAccessible:[this.field] @AT@ 2025 @LENGTH@ 10
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.field @AT@ 2025 @LENGTH@ 4
------------------INS SimpleName@@field @TO@ FieldAccess@@this.field @AT@ 2030 @LENGTH@ 5


UPD Block@@ThenBody:{  Rfc5424SyslogMessage rfc5424SyslogMessage=(Rfc5424SyslogMessage)syslogMessage;  StringBuilder appName=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    appName.append(charFound);  }  rfc5424SyslogMessage.setAppName(appName.toString());  StringBuilder procId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    procId.append(charFound);  }  rfc5424SyslogMessage.setProcId(procId.toString());  StringBuilder msgId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    msgId.append(charFound);  }  rfc5424SyslogMessage.setMsgId(msgId.toString());  StringBuilder structuredData=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    structuredData.append(charFound);  }  rfc5424SyslogMessage.setStructuredData(structuredData.toString());} @TO@ ThenBody:{  Rfc5424SyslogMessage rfc5424SyslogMessage=(Rfc5424SyslogMessage)syslogMessage;  StringBuilder appName=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    appName.append(charFound);  }  rfc5424SyslogMessage.setAppName(appName.toString());  StringBuilder procId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    procId.append(charFound);  }  rfc5424SyslogMessage.setProcId(procId.toString());  StringBuilder msgId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    msgId.append(charFound);  }  rfc5424SyslogMessage.setMsgId(msgId.toString());  StringBuilder structuredData=new StringBuilder();  boolean inblock=false;  while (((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock) {    if (charFound == '[') {      inblock=true;    }    if (charFound == ']') {      inblock=false;    }    structuredData.append(charFound);  }  rfc5424SyslogMessage.setStructuredData(structuredData.toString());} @AT@ 6895 @LENGTH@ 1144
---UPD WhileStatement@@while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {  structuredData.append(charFound);} @TO@ while (((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock) {  if (charFound == '[') {    inblock=true;  }  if (charFound == ']') {    inblock=false;  }  structuredData.append(charFound);} @AT@ 7823 @LENGTH@ 127
------INS InfixExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock @TO@ WhileStatement@@while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {  structuredData.append(charFound);} @AT@ 7867 @LENGTH@ 66
---------INS ParenthesizedExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') @TO@ InfixExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock @AT@ 7867 @LENGTH@ 55
------------MOV InfixExpression@@(charFound=(char)(byteBuffer.get() & 0xff)) != ' ' @TO@ ParenthesizedExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') @AT@ 7830 @LENGTH@ 53
---------INS Operator@@|| @TO@ InfixExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock @AT@ 7922 @LENGTH@ 2
---------INS SimpleName@@inblock @TO@ InfixExpression@@((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') || inblock @AT@ 7926 @LENGTH@ 7
------UPD Block@@WhileBody:{  structuredData.append(charFound);} @TO@ WhileBody:{  if (charFound == '[') {    inblock=true;  }  if (charFound == ']') {    inblock=false;  }  structuredData.append(charFound);} @AT@ 7885 @LENGTH@ 65
---------INS IfStatement@@if (charFound == '[') {  inblock=true;} @TO@ Block@@WhileBody:{  structuredData.append(charFound);} @AT@ 7953 @LENGTH@ 77
------------INS InfixExpression@@charFound == '[' @TO@ IfStatement@@if (charFound == '[') {  inblock=true;} @AT@ 7957 @LENGTH@ 16
---------------INS SimpleName@@charFound @TO@ InfixExpression@@charFound == '[' @AT@ 7957 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@charFound == '[' @AT@ 7966 @LENGTH@ 2
---------------INS CharacterLiteral@@'[' @TO@ InfixExpression@@charFound == '[' @AT@ 7970 @LENGTH@ 3
------------INS Block@@ThenBody:{  inblock=true;} @TO@ IfStatement@@if (charFound == '[') {  inblock=true;} @AT@ 7975 @LENGTH@ 55
---------------INS ExpressionStatement@@Assignment:inblock=true @TO@ Block@@ThenBody:{  inblock=true;} @AT@ 7997 @LENGTH@ 15
------------------INS Assignment@@inblock=true @TO@ ExpressionStatement@@Assignment:inblock=true @AT@ 7997 @LENGTH@ 14
---------------------INS SimpleName@@inblock @TO@ Assignment@@inblock=true @AT@ 7997 @LENGTH@ 7
---------------------INS Operator@@= @TO@ Assignment@@inblock=true @AT@ 8004 @LENGTH@ 1
---------------------INS BooleanLiteral@@true @TO@ Assignment@@inblock=true @AT@ 8007 @LENGTH@ 4
---------INS IfStatement@@if (charFound == ']') {  inblock=false;} @TO@ Block@@WhileBody:{  structuredData.append(charFound);} @AT@ 8048 @LENGTH@ 78
------------INS InfixExpression@@charFound == ']' @TO@ IfStatement@@if (charFound == ']') {  inblock=false;} @AT@ 8052 @LENGTH@ 16
---------------INS SimpleName@@charFound @TO@ InfixExpression@@charFound == ']' @AT@ 8052 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@charFound == ']' @AT@ 8061 @LENGTH@ 2
---------------INS CharacterLiteral@@']' @TO@ InfixExpression@@charFound == ']' @AT@ 8065 @LENGTH@ 3
------------INS Block@@ThenBody:{  inblock=false;} @TO@ IfStatement@@if (charFound == ']') {  inblock=false;} @AT@ 8070 @LENGTH@ 56
---------------INS ExpressionStatement@@Assignment:inblock=false @TO@ Block@@ThenBody:{  inblock=false;} @AT@ 8092 @LENGTH@ 16
------------------INS Assignment@@inblock=false @TO@ ExpressionStatement@@Assignment:inblock=false @AT@ 8092 @LENGTH@ 15
---------------------INS SimpleName@@inblock @TO@ Assignment@@inblock=false @AT@ 8092 @LENGTH@ 7
---------------------INS Operator@@= @TO@ Assignment@@inblock=false @AT@ 8099 @LENGTH@ 1
---------------------INS BooleanLiteral@@false @TO@ Assignment@@inblock=false @AT@ 8102 @LENGTH@ 5
---INS VariableDeclarationStatement@@boolean inblock=false; @TO@ Block@@ThenBody:{  Rfc5424SyslogMessage rfc5424SyslogMessage=(Rfc5424SyslogMessage)syslogMessage;  StringBuilder appName=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    appName.append(charFound);  }  rfc5424SyslogMessage.setAppName(appName.toString());  StringBuilder procId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    procId.append(charFound);  }  rfc5424SyslogMessage.setProcId(procId.toString());  StringBuilder msgId=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    msgId.append(charFound);  }  rfc5424SyslogMessage.setMsgId(msgId.toString());  StringBuilder structuredData=new StringBuilder();  while ((charFound=(char)(byteBuffer.get() & 0xff)) != ' ') {    structuredData.append(charFound);  }  rfc5424SyslogMessage.setStructuredData(structuredData.toString());} @AT@ 7823 @LENGTH@ 24
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean inblock=false; @AT@ 7823 @LENGTH@ 7
------INS VariableDeclarationFragment@@inblock=false @TO@ VariableDeclarationStatement@@boolean inblock=false; @AT@ 7831 @LENGTH@ 15
---------INS SimpleName@@inblock @TO@ VariableDeclarationFragment@@inblock=false @AT@ 7831 @LENGTH@ 7
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@inblock=false @AT@ 7841 @LENGTH@ 5


UPD ForStatement@@for (int i=0; i < p1.getValues().size(); ++i) {  String v1=p1.getValues().get(i), v2=p2.getValues().get(i);  if ((v1 == null && v2 != null) || !v1.equals(v2))   return false;} @TO@ for (int i=0; i < p1.getValues().size(); ++i) {  String v1=p1.getValues().get(i);  String v2=p2.getValues().get(i);  if (v1 == null && v2 == null) {    continue;  }  if (v1 == null || !v1.equals(v2)) {    return false;  }} @AT@ 76061 @LENGTH@ 206
---UPD VariableDeclarationStatement@@String v1=p1.getValues().get(i), v2=p2.getValues().get(i); @TO@ String v1=p1.getValues().get(i); @AT@ 76121 @LENGTH@ 62
---INS VariableDeclarationStatement@@String v2=p2.getValues().get(i); @TO@ ForStatement@@for (int i=0; i < p1.getValues().size(); ++i) {  String v1=p1.getValues().get(i), v2=p2.getValues().get(i);  if ((v1 == null && v2 != null) || !v1.equals(v2))   return false;} @AT@ 76166 @LENGTH@ 34
------MOV VariableDeclarationFragment@@v2=p2.getValues().get(i) @TO@ VariableDeclarationStatement@@String v2=p2.getValues().get(i); @AT@ 76156 @LENGTH@ 26
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String v2=p2.getValues().get(i); @AT@ 76166 @LENGTH@ 6
---DEL IfStatement@@if ((v1 == null && v2 != null) || !v1.equals(v2)) return false; @AT@ 76194 @LENGTH@ 63
------DEL InfixExpression@@(v1 == null && v2 != null) || !v1.equals(v2) @AT@ 76198 @LENGTH@ 44
---------DEL ParenthesizedExpression@@(v1 == null && v2 != null) @AT@ 76198 @LENGTH@ 26
------------DEL InfixExpression@@v1 == null && v2 != null @AT@ 76199 @LENGTH@ 24
---INS IfStatement@@if (v1 == null && v2 == null) {  continue;} @TO@ ForStatement@@for (int i=0; i < p1.getValues().size(); ++i) {  String v1=p1.getValues().get(i), v2=p2.getValues().get(i);  if ((v1 == null && v2 != null) || !v1.equals(v2))   return false;} @AT@ 76211 @LENGTH@ 65
------INS InfixExpression@@v1 == null && v2 == null @TO@ IfStatement@@if (v1 == null && v2 == null) {  continue;} @AT@ 76215 @LENGTH@ 24
---------MOV InfixExpression@@v1 == null @TO@ InfixExpression@@v1 == null && v2 == null @AT@ 76199 @LENGTH@ 10
---------MOV Operator@@&& @TO@ InfixExpression@@v1 == null && v2 == null @AT@ 76209 @LENGTH@ 2
---------MOV InfixExpression@@v2 != null @TO@ InfixExpression@@v1 == null && v2 == null @AT@ 76213 @LENGTH@ 10
------------UPD Operator@@!= @TO@ == @AT@ 76215 @LENGTH@ 2
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (v1 == null && v2 == null) {  continue;} @AT@ 76241 @LENGTH@ 35
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 76255 @LENGTH@ 9
---INS IfStatement@@if (v1 == null || !v1.equals(v2)) {  return false;} @TO@ ForStatement@@for (int i=0; i < p1.getValues().size(); ++i) {  String v1=p1.getValues().get(i), v2=p2.getValues().get(i);  if ((v1 == null && v2 != null) || !v1.equals(v2))   return false;} @AT@ 76287 @LENGTH@ 73
------MOV Block@@ThenBody:return false; @TO@ IfStatement@@if (v1 == null || !v1.equals(v2)) {  return false;} @AT@ 76244 @LENGTH@ 13
------INS InfixExpression@@v1 == null || !v1.equals(v2) @TO@ IfStatement@@if (v1 == null || !v1.equals(v2)) {  return false;} @AT@ 76291 @LENGTH@ 28
---------MOV Operator@@|| @TO@ InfixExpression@@v1 == null || !v1.equals(v2) @AT@ 76224 @LENGTH@ 2
---------MOV PrefixExpression@@!v1.equals(v2) @TO@ InfixExpression@@v1 == null || !v1.equals(v2) @AT@ 76228 @LENGTH@ 14
---------INS InfixExpression@@v1 == null @TO@ InfixExpression@@v1 == null || !v1.equals(v2) @AT@ 76291 @LENGTH@ 10
------------INS SimpleName@@v1 @TO@ InfixExpression@@v1 == null @AT@ 76291 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@v1 == null @AT@ 76293 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@v1 == null @AT@ 76297 @LENGTH@ 4


UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(in)); @TO@ BufferedReader reader=new BufferedReader(new InputStreamReader(in,"UTF-8")); @AT@ 1469 @LENGTH@ 70
---UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(in)) @TO@ reader=new BufferedReader(new InputStreamReader(in,"UTF-8")) @AT@ 1484 @LENGTH@ 54
------UPD ClassInstanceCreation@@BufferedReader[new InputStreamReader(in)] @TO@ BufferedReader[new InputStreamReader(in,"UTF-8")] @AT@ 1493 @LENGTH@ 45
---------UPD ClassInstanceCreation@@InputStreamReader[in] @TO@ InputStreamReader[in, "UTF-8"] @AT@ 1512 @LENGTH@ 25
------------INS StringLiteral@@"UTF-8" @TO@ ClassInstanceCreation@@InputStreamReader[in] @AT@ 1604 @LENGTH@ 7


UPD VariableDeclarationStatement@@RelCollation canonizedCollation=traitSet.canonize(RelCollationImpl.EMPTY); @TO@ RelCollation canonizedCollation=traitSet.canonize(RelCollations.EMPTY); @AT@ 90333 @LENGTH@ 76
---UPD VariableDeclarationFragment@@canonizedCollation=traitSet.canonize(RelCollationImpl.EMPTY) @TO@ canonizedCollation=traitSet.canonize(RelCollations.EMPTY) @AT@ 90346 @LENGTH@ 62
------UPD MethodInvocation@@traitSet.canonize(RelCollationImpl.EMPTY) @TO@ traitSet.canonize(RelCollations.EMPTY) @AT@ 90367 @LENGTH@ 41
---------UPD SimpleName@@MethodName:canonize:[RelCollationImpl.EMPTY] @TO@ MethodName:canonize:[RelCollations.EMPTY] @AT@ 90376 @LENGTH@ 32
------------UPD QualifiedName@@RelCollationImpl.EMPTY @TO@ RelCollations.EMPTY @AT@ 90385 @LENGTH@ 22
---------------UPD SimpleName@@RelCollationImpl @TO@ RelCollations @AT@ 90385 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @TO@ TypeDeclaration@@[public]AuthorizationEndpointTests,  @AT@ 9553 @LENGTH@ 597
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9553 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9560 @LENGTH@ 4
---INS SimpleName@@MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9565 @LENGTH@ 49
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9624 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:endpoint.setAuthorizationCodeServices(new StubAuthorizationCodeServices()) @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9638 @LENGTH@ 75
------INS MethodInvocation@@endpoint.setAuthorizationCodeServices(new StubAuthorizationCodeServices()) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setAuthorizationCodeServices(new StubAuthorizationCodeServices()) @AT@ 9638 @LENGTH@ 74
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setAuthorizationCodeServices(new StubAuthorizationCodeServices()) @AT@ 9638 @LENGTH@ 8
---------INS SimpleName@@MethodName:setAuthorizationCodeServices:[new StubAuthorizationCodeServices()] @TO@ MethodInvocation@@endpoint.setAuthorizationCodeServices(new StubAuthorizationCodeServices()) @AT@ 9647 @LENGTH@ 65
------------INS ClassInstanceCreation@@StubAuthorizationCodeServices[] @TO@ SimpleName@@MethodName:setAuthorizationCodeServices:[new StubAuthorizationCodeServices()] @AT@ 9676 @LENGTH@ 35
---------------INS New@@new @TO@ ClassInstanceCreation@@StubAuthorizationCodeServices[] @AT@ 9676 @LENGTH@ 3
---------------INS SimpleType@@StubAuthorizationCodeServices @TO@ ClassInstanceCreation@@StubAuthorizationCodeServices[] @AT@ 9680 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:model.put("authorizationRequest",getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))) @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9716 @LENGTH@ 174
------INS MethodInvocation@@model.put("authorizationRequest",getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))) @TO@ ExpressionStatement@@MethodInvocation:model.put("authorizationRequest",getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))) @AT@ 9716 @LENGTH@ 173
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.put("authorizationRequest",getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))) @AT@ 9716 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["authorizationRequest", getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))] @TO@ MethodInvocation@@model.put("authorizationRequest",getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))) @AT@ 9722 @LENGTH@ 167
------------INS StringLiteral@@"authorizationRequest" @TO@ SimpleName@@MethodName:put:["authorizationRequest", getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))] @AT@ 9731 @LENGTH@ 22
------------INS MethodInvocation@@getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code")) @TO@ SimpleName@@MethodName:put:["authorizationRequest", getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code"))] @AT@ 9759 @LENGTH@ 129
---------------INS SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @TO@ MethodInvocation@@getAuthorizationRequest("foo","http://anywhere.com/path?foo=b%20%3D&bar=f%20$",null,null,Collections.singleton("code")) @AT@ 9759 @LENGTH@ 129
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @AT@ 9783 @LENGTH@ 5
------------------INS StringLiteral@@"http://anywhere.com/path?foo=b%20%3D&bar=f%20$" @TO@ SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @AT@ 9790 @LENGTH@ 48
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @AT@ 9840 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @AT@ 9846 @LENGTH@ 4
------------------INS MethodInvocation@@Collections.singleton("code") @TO@ SimpleName@@MethodName:getAuthorizationRequest:["foo", "http://anywhere.com/path?foo=b%20%3D&bar=f%20$", null, null, Collections.singleton("code")] @AT@ 9858 @LENGTH@ 29
---------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton("code") @AT@ 9858 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:singleton:["code"] @TO@ MethodInvocation@@Collections.singleton("code") @AT@ 9870 @LENGTH@ 17
------------------------INS StringLiteral@@"code" @TO@ SimpleName@@MethodName:singleton:["code"] @AT@ 9880 @LENGTH@ 6
---INS VariableDeclarationStatement@@View result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal); @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 9893 @LENGTH@ 141
------INS SimpleType@@View @TO@ VariableDeclarationStatement@@View result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal); @AT@ 9893 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @TO@ VariableDeclarationStatement@@View result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal); @AT@ 9898 @LENGTH@ 135
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @AT@ 9898 @LENGTH@ 6
---------INS MethodInvocation@@endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @TO@ VariableDeclarationFragment@@result=endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @AT@ 9907 @LENGTH@ 126
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @AT@ 9907 @LENGTH@ 8
------------INS SimpleName@@MethodName:approveOrDeny:[Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"), model, sessionStatus, principal] @TO@ MethodInvocation@@endpoint.approveOrDeny(Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"),model,sessionStatus,principal) @AT@ 9916 @LENGTH@ 117
---------------INS MethodInvocation@@Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true") @TO@ SimpleName@@MethodName:approveOrDeny:[Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"), model, sessionStatus, principal] @AT@ 9930 @LENGTH@ 65
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true") @AT@ 9930 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singletonMap:[OAuth2Utils.USER_OAUTH_APPROVAL, "true"] @TO@ MethodInvocation@@Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true") @AT@ 9942 @LENGTH@ 53
---------------------INS QualifiedName@@OAuth2Utils.USER_OAUTH_APPROVAL @TO@ SimpleName@@MethodName:singletonMap:[OAuth2Utils.USER_OAUTH_APPROVAL, "true"] @AT@ 9955 @LENGTH@ 31
------------------------INS SimpleName@@OAuth2Utils @TO@ QualifiedName@@OAuth2Utils.USER_OAUTH_APPROVAL @AT@ 9955 @LENGTH@ 11
------------------------INS SimpleName@@USER_OAUTH_APPROVAL @TO@ QualifiedName@@OAuth2Utils.USER_OAUTH_APPROVAL @AT@ 9967 @LENGTH@ 19
---------------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:singletonMap:[OAuth2Utils.USER_OAUTH_APPROVAL, "true"] @AT@ 9988 @LENGTH@ 6
---------------INS SimpleName@@model @TO@ SimpleName@@MethodName:approveOrDeny:[Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"), model, sessionStatus, principal] @AT@ 9997 @LENGTH@ 5
---------------INS SimpleName@@sessionStatus @TO@ SimpleName@@MethodName:approveOrDeny:[Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"), model, sessionStatus, principal] @AT@ 10008 @LENGTH@ 13
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:approveOrDeny:[Collections.singletonMap(OAuth2Utils.USER_OAUTH_APPROVAL,"true"), model, sessionStatus, principal] @AT@ 10023 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode",((RedirectView)result).getUrl()) @TO@ MethodDeclaration@@public, void, MethodName:testAuthorizationCodeWithTrickyEncodedQueryParams, Exception,  @AT@ 10037 @LENGTH@ 110
------INS MethodInvocation@@assertEquals("http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode",((RedirectView)result).getUrl()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode",((RedirectView)result).getUrl()) @AT@ 10037 @LENGTH@ 109
---------INS SimpleName@@MethodName:assertEquals:["http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode", ((RedirectView)result).getUrl()] @TO@ MethodInvocation@@assertEquals("http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode",((RedirectView)result).getUrl()) @AT@ 10037 @LENGTH@ 109
------------INS StringLiteral@@"http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode" @TO@ SimpleName@@MethodName:assertEquals:["http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode", ((RedirectView)result).getUrl()] @AT@ 10050 @LENGTH@ 61
------------INS MethodInvocation@@((RedirectView)result).getUrl() @TO@ SimpleName@@MethodName:assertEquals:["http://anywhere.com/path?foo=b%20%3D&bar=f%20$&code=thecode", ((RedirectView)result).getUrl()] @AT@ 10113 @LENGTH@ 32
---------------INS ParenthesizedExpression@@((RedirectView)result) @TO@ MethodInvocation@@((RedirectView)result).getUrl() @AT@ 10113 @LENGTH@ 23
------------------INS CastExpression@@(RedirectView)result @TO@ ParenthesizedExpression@@((RedirectView)result) @AT@ 10114 @LENGTH@ 21
---------------------INS SimpleType@@RedirectView @TO@ CastExpression@@(RedirectView)result @AT@ 10115 @LENGTH@ 12
---------------------INS SimpleName@@result @TO@ CastExpression@@(RedirectView)result @AT@ 10129 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getUrl:[] @TO@ MethodInvocation@@((RedirectView)result).getUrl() @AT@ 10137 @LENGTH@ 8


UPD MethodDeclaration@@public, ResponseEntity<OAuth2AccessToken>, MethodName:getAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpMethod requestMethod, HttpRequestMethodNotSupportedException,  @TO@ public, ResponseEntity<OAuth2AccessToken>, MethodName:postAccessToken, Principal principal, @RequestParam Map<String,String> parameters, HttpRequestMethodNotSupportedException,  @AT@ 3556 @LENGTH@ 2397
---UPD SimpleName@@MethodName:getAccessToken @TO@ MethodName:postAccessToken @AT@ 3597 @LENGTH@ 14
---DEL SingleVariableDeclaration@@HttpMethod requestMethod @AT@ 3680 @LENGTH@ 24
------DEL SimpleType@@HttpMethod @AT@ 3680 @LENGTH@ 10
------DEL SimpleName@@requestMethod @AT@ 3691 @LENGTH@ 13
---DEL IfStatement@@if (!allowedRequestMethods.contains(requestMethod)) {  throw new HttpRequestMethodNotSupportedException(requestMethod.toString());} @AT@ 3757 @LENGTH@ 136
------DEL PrefixExpression@@!allowedRequestMethods.contains(requestMethod) @AT@ 3761 @LENGTH@ 46
---------DEL Operator@@! @AT@ 3761 @LENGTH@ 1
---------DEL MethodInvocation@@allowedRequestMethods.contains(requestMethod) @AT@ 3762 @LENGTH@ 45
------------DEL SimpleName@@Name:allowedRequestMethods @AT@ 3762 @LENGTH@ 21
------------DEL SimpleName@@MethodName:contains:[requestMethod] @AT@ 3784 @LENGTH@ 23
---------------DEL SimpleName@@requestMethod @AT@ 3793 @LENGTH@ 13
------DEL Block@@ThenBody:{  throw new HttpRequestMethodNotSupportedException(requestMethod.toString());} @AT@ 3809 @LENGTH@ 84
---------DEL ThrowStatement@@ClassInstanceCreation:new HttpRequestMethodNotSupportedException(requestMethod.toString()) @AT@ 3814 @LENGTH@ 75
------------DEL ClassInstanceCreation@@HttpRequestMethodNotSupportedException[requestMethod.toString()] @AT@ 3820 @LENGTH@ 68
---------------DEL New@@new @AT@ 3820 @LENGTH@ 3
---------------DEL SimpleType@@HttpRequestMethodNotSupportedException @AT@ 3824 @LENGTH@ 38
---------------DEL MethodInvocation@@requestMethod.toString() @AT@ 3863 @LENGTH@ 24
------------------DEL SimpleName@@Name:requestMethod @AT@ 3863 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 3877 @LENGTH@ 10


DEL FieldDeclaration@@private, static, final, String, [LOGGED_OUT_REVOKATION="The authorization has been revoked. Reason: Error validating access token: The session is invalid because the user logged out."] @AT@ 1818 @LENGTH@ 181
---DEL Modifier@@private @AT@ 1818 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1826 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1833 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1839 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOGGED_OUT_REVOKATION="The authorization has been revoked. Reason: Error validating access token: The session is invalid because the user logged out." @AT@ 1846 @LENGTH@ 152
------DEL SimpleName@@LOGGED_OUT_REVOKATION @AT@ 1846 @LENGTH@ 21
------DEL StringLiteral@@"The authorization has been revoked. Reason: Error validating access token: The session is invalid because the user logged out." @AT@ 1870 @LENGTH@ 128


INS EnhancedForStatement@@for (byte b : buffer) {  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @TO@ MethodDeclaration@@public, String, MethodName:decode, byte[] buffer,  @AT@ 2384 @LENGTH@ 227
---INS SingleVariableDeclaration@@byte b @TO@ EnhancedForStatement@@for (byte b : buffer) {  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 2389 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ SingleVariableDeclaration@@byte b @AT@ 2389 @LENGTH@ 4
------INS SimpleName@@b @TO@ SingleVariableDeclaration@@byte b @AT@ 2394 @LENGTH@ 1
---INS SimpleName@@buffer @TO@ EnhancedForStatement@@for (byte b : buffer) {  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 2398 @LENGTH@ 6
---MOV IfStatement@@if (b == 0) {  break;} @TO@ EnhancedForStatement@@for (byte b : buffer) {  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 2479 @LENGTH@ 83
---MOV ExpressionStatement@@MethodInvocation:result.append((char)(b & 0xFF)) @TO@ EnhancedForStatement@@for (byte b : buffer) {  if (b == 0) {    break;  }  result.append((char)(b & 0xFF));} @AT@ 2583 @LENGTH@ 33


UPD ReturnStatement@@InfixExpression:userid + "_" + String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%5$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND))+ "_"+ UUID.randomUUID().toString() @TO@ InfixExpression:userid + "_" + String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%6$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND))+ "_"+ UUID.randomUUID().toString() @AT@ 5569 @LENGTH@ 333
---UPD InfixExpression@@userid + "_" + String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%5$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND))+ "_"+ UUID.randomUUID().toString() @TO@ userid + "_" + String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%6$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND))+ "_"+ UUID.randomUUID().toString() @AT@ 5576 @LENGTH@ 325
------UPD MethodInvocation@@String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%5$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND)) @TO@ String.format("%1$4d%2$02d%3$02d%4$02d%5$02d%6$02d",gc.get(Calendar.YEAR),gc.get(Calendar.MONTH) + 1,gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND)) @AT@ 5607 @LENGTH@ 241
---------UPD SimpleName@@MethodName:format:["%1$4d%2$02d%3$02d%4$02d%5$02d%5$02d", gc.get(Calendar.YEAR), gc.get(Calendar.MONTH) + 1, gc.get(Calendar.DAY_OF_MONTH), gc.get(Calendar.HOUR_OF_DAY), gc.get(Calendar.MINUTE), gc.get(Calendar.SECOND)] @TO@ MethodName:format:["%1$4d%2$02d%3$02d%4$02d%5$02d%6$02d", gc.get(Calendar.YEAR), gc.get(Calendar.MONTH) + 1, gc.get(Calendar.DAY_OF_MONTH), gc.get(Calendar.HOUR_OF_DAY), gc.get(Calendar.MINUTE), gc.get(Calendar.SECOND)] @AT@ 5614 @LENGTH@ 234
------------UPD StringLiteral@@"%1$4d%2$02d%3$02d%4$02d%5$02d%5$02d" @TO@ "%1$4d%2$02d%3$02d%4$02d%5$02d%6$02d" @AT@ 5621 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @TO@ TypeDeclaration@@[public]JwtTokenStoreTests,  @AT@ 3314 @LENGTH@ 397
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3314 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3321 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadExpiringRefreshToken @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3326 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3364 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultOAuth2AccessToken original=new DefaultOAuth2AccessToken("FOO"); @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3378 @LENGTH@ 72
------INS SimpleType@@DefaultOAuth2AccessToken @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken original=new DefaultOAuth2AccessToken("FOO"); @AT@ 3378 @LENGTH@ 24
------INS VariableDeclarationFragment@@original=new DefaultOAuth2AccessToken("FOO") @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken original=new DefaultOAuth2AccessToken("FOO"); @AT@ 3403 @LENGTH@ 46
---------INS SimpleName@@original @TO@ VariableDeclarationFragment@@original=new DefaultOAuth2AccessToken("FOO") @AT@ 3403 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @TO@ VariableDeclarationFragment@@original=new DefaultOAuth2AccessToken("FOO") @AT@ 3414 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 3414 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 3418 @LENGTH@ 24
------------INS StringLiteral@@"FOO" @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["FOO"] @AT@ 3443 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:original.setExpiration(new Date()) @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3453 @LENGTH@ 35
------INS MethodInvocation@@original.setExpiration(new Date()) @TO@ ExpressionStatement@@MethodInvocation:original.setExpiration(new Date()) @AT@ 3453 @LENGTH@ 34
---------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.setExpiration(new Date()) @AT@ 3453 @LENGTH@ 8
---------INS SimpleName@@MethodName:setExpiration:[new Date()] @TO@ MethodInvocation@@original.setExpiration(new Date()) @AT@ 3462 @LENGTH@ 25
------------INS ClassInstanceCreation@@Date[] @TO@ SimpleName@@MethodName:setExpiration:[new Date()] @AT@ 3476 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 3476 @LENGTH@ 3
---------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 3480 @LENGTH@ 4
---INS VariableDeclarationStatement@@DefaultOAuth2AccessToken token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3491 @LENGTH@ 111
------INS SimpleType@@DefaultOAuth2AccessToken @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication); @AT@ 3491 @LENGTH@ 24
------INS VariableDeclarationFragment@@token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication); @AT@ 3516 @LENGTH@ 85
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @AT@ 3516 @LENGTH@ 5
---------INS CastExpression@@(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @TO@ VariableDeclarationFragment@@token=(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @AT@ 3524 @LENGTH@ 77
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ CastExpression@@(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @AT@ 3525 @LENGTH@ 24
------------INS MethodInvocation@@enhancer.enhance(original,expectedAuthentication) @TO@ CastExpression@@(DefaultOAuth2AccessToken)enhancer.enhance(original,expectedAuthentication) @AT@ 3551 @LENGTH@ 50
---------------INS SimpleName@@Name:enhancer @TO@ MethodInvocation@@enhancer.enhance(original,expectedAuthentication) @AT@ 3551 @LENGTH@ 8
---------------INS SimpleName@@MethodName:enhance:[original, expectedAuthentication] @TO@ MethodInvocation@@enhancer.enhance(original,expectedAuthentication) @AT@ 3560 @LENGTH@ 41
------------------INS SimpleName@@original @TO@ SimpleName@@MethodName:enhance:[original, expectedAuthentication] @AT@ 3568 @LENGTH@ 8
------------------INS SimpleName@@expectedAuthentication @TO@ SimpleName@@MethodName:enhance:[original, expectedAuthentication] @AT@ 3578 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:assertTrue(tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @TO@ MethodDeclaration@@public, void, MethodName:testReadExpiringRefreshToken, Exception,  @AT@ 3605 @LENGTH@ 103
------INS MethodInvocation@@assertTrue(tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 3605 @LENGTH@ 102
---------INS SimpleName@@MethodName:assertTrue:[tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken] @TO@ MethodInvocation@@assertTrue(tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 3605 @LENGTH@ 102
------------INS InstanceofExpression@@tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @TO@ SimpleName@@MethodName:assertTrue:[tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken] @AT@ 3616 @LENGTH@ 90
---------------INS MethodInvocation@@tokenStore.readRefreshToken(token.getValue()) @TO@ InstanceofExpression@@tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3616 @LENGTH@ 45
------------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.readRefreshToken(token.getValue()) @AT@ 3616 @LENGTH@ 10
------------------INS SimpleName@@MethodName:readRefreshToken:[token.getValue()] @TO@ MethodInvocation@@tokenStore.readRefreshToken(token.getValue()) @AT@ 3627 @LENGTH@ 34
---------------------INS MethodInvocation@@token.getValue() @TO@ SimpleName@@MethodName:readRefreshToken:[token.getValue()] @AT@ 3644 @LENGTH@ 16
------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getValue() @AT@ 3644 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getValue() @AT@ 3650 @LENGTH@ 10
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3662 @LENGTH@ 10
---------------INS SimpleType@@DefaultExpiringOAuth2RefreshToken @TO@ InstanceofExpression@@tokenStore.readRefreshToken(token.getValue()) instanceof DefaultExpiringOAuth2RefreshToken @AT@ 3673 @LENGTH@ 33


INS MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @TO@ TypeDeclaration@@[public]TraceHandlerTest, TracingTestBase @AT@ 1778 @LENGTH@ 323
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @AT@ 1778 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @AT@ 1788 @LENGTH@ 4
---INS SimpleName@@MethodName:validateTestTracerInOut @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @AT@ 1793 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertEquals(6,tracedMessages.size()) @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @AT@ 1829 @LENGTH@ 39
------INS MethodInvocation@@assertEquals(6,tracedMessages.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(6,tracedMessages.size()) @AT@ 1829 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @TO@ MethodInvocation@@assertEquals(6,tracedMessages.size()) @AT@ 1829 @LENGTH@ 38
------------INS NumberLiteral@@6 @TO@ SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @AT@ 1842 @LENGTH@ 1
------------INS MethodInvocation@@tracedMessages.size() @TO@ SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @AT@ 1845 @LENGTH@ 21
---------------INS SimpleName@@Name:tracedMessages @TO@ MethodInvocation@@tracedMessages.size() @AT@ 1845 @LENGTH@ 14
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@tracedMessages.size() @AT@ 1860 @LENGTH@ 6
---INS EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOut,  @AT@ 1877 @LENGTH@ 218
------INS SingleVariableDeclaration@@StringBuilder tracedMessage @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @AT@ 1882 @LENGTH@ 27
---------INS SimpleType@@StringBuilder @TO@ SingleVariableDeclaration@@StringBuilder tracedMessage @AT@ 1882 @LENGTH@ 13
---------INS SimpleName@@tracedMessage @TO@ SingleVariableDeclaration@@StringBuilder tracedMessage @AT@ 1896 @LENGTH@ 13
------INS SimpleName@@tracedMessages @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @AT@ 1912 @LENGTH@ 14
------INS VariableDeclarationStatement@@String message=tracedMessage.toString(); @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @AT@ 1942 @LENGTH@ 42
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=tracedMessage.toString(); @AT@ 1942 @LENGTH@ 6
---------INS VariableDeclarationFragment@@message=tracedMessage.toString() @TO@ VariableDeclarationStatement@@String message=tracedMessage.toString(); @AT@ 1949 @LENGTH@ 34
------------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=tracedMessage.toString() @AT@ 1949 @LENGTH@ 7
------------INS MethodInvocation@@tracedMessage.toString() @TO@ VariableDeclarationFragment@@message=tracedMessage.toString() @AT@ 1959 @LENGTH@ 24
---------------INS SimpleName@@Name:tracedMessage @TO@ MethodInvocation@@tracedMessage.toString() @AT@ 1959 @LENGTH@ 13
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@tracedMessage.toString() @AT@ 1973 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:assertTrue(message.startsWith("In:")) @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @AT@ 1997 @LENGTH@ 38
---------INS MethodInvocation@@assertTrue(message.startsWith("In:")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(message.startsWith("In:")) @AT@ 1997 @LENGTH@ 37
------------INS SimpleName@@MethodName:assertTrue:[message.startsWith("In:")] @TO@ MethodInvocation@@assertTrue(message.startsWith("In:")) @AT@ 1997 @LENGTH@ 37
---------------INS MethodInvocation@@message.startsWith("In:") @TO@ SimpleName@@MethodName:assertTrue:[message.startsWith("In:")] @AT@ 2008 @LENGTH@ 25
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.startsWith("In:") @AT@ 2008 @LENGTH@ 7
------------------INS SimpleName@@MethodName:startsWith:["In:"] @TO@ MethodInvocation@@message.startsWith("In:") @AT@ 2016 @LENGTH@ 17
---------------------INS StringLiteral@@"In:" @TO@ SimpleName@@MethodName:startsWith:["In:"] @AT@ 2027 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:assertTrue(message.contains("Out:")) @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("In:"));  assertTrue(message.contains("Out:"));} @AT@ 2048 @LENGTH@ 37
---------INS MethodInvocation@@assertTrue(message.contains("Out:")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(message.contains("Out:")) @AT@ 2048 @LENGTH@ 36
------------INS SimpleName@@MethodName:assertTrue:[message.contains("Out:")] @TO@ MethodInvocation@@assertTrue(message.contains("Out:")) @AT@ 2048 @LENGTH@ 36
---------------INS MethodInvocation@@message.contains("Out:") @TO@ SimpleName@@MethodName:assertTrue:[message.contains("Out:")] @AT@ 2059 @LENGTH@ 24
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.contains("Out:") @AT@ 2059 @LENGTH@ 7
------------------INS SimpleName@@MethodName:contains:["Out:"] @TO@ MethodInvocation@@message.contains("Out:") @AT@ 2067 @LENGTH@ 16
---------------------INS StringLiteral@@"Out:" @TO@ SimpleName@@MethodName:contains:["Out:"] @AT@ 2076 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:(d2 << 2 | d3 >> 4) & 0xff @TO@ InfixExpression:(d2 >> 4 | d3 << 2) & 0xff @AT@ 12876 @LENGTH@ 34
---UPD InfixExpression@@(d2 << 2 | d3 >> 4) & 0xff @TO@ (d2 >> 4 | d3 << 2) & 0xff @AT@ 12883 @LENGTH@ 26
------UPD ParenthesizedExpression@@(d2 << 2 | d3 >> 4) @TO@ (d2 >> 4 | d3 << 2) @AT@ 12883 @LENGTH@ 19
---------UPD InfixExpression@@d2 << 2 | d3 >> 4 @TO@ d2 >> 4 | d3 << 2 @AT@ 12884 @LENGTH@ 17
------------UPD InfixExpression@@d2 << 2 @TO@ d2 >> 4 @AT@ 12884 @LENGTH@ 7
---------------UPD Operator@@<< @TO@ >> @AT@ 12886 @LENGTH@ 2
---------------UPD NumberLiteral@@2 @TO@ 4 @AT@ 12890 @LENGTH@ 1
------------UPD InfixExpression@@d3 >> 4 @TO@ d3 << 2 @AT@ 12894 @LENGTH@ 7
---------------UPD Operator@@>> @TO@ << @AT@ 12896 @LENGTH@ 2
---------------UPD NumberLiteral@@4 @TO@ 2 @AT@ 12900 @LENGTH@ 1


UPD VariableDeclarationStatement@@final Map<String,DataFormat> tests=new HashMap<>(); @TO@ final Map<String,DataFormat> tests=new HashMap<String,DataFormat>(); @AT@ 5893 @LENGTH@ 54
---UPD VariableDeclarationFragment@@tests=new HashMap<>() @TO@ tests=new HashMap<String,DataFormat>() @AT@ 5923 @LENGTH@ 23
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,DataFormat>[] @AT@ 5931 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,DataFormat> @AT@ 5935 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 5941 @LENGTH@ 6
------------INS SimpleType@@DataFormat @TO@ ParameterizedType@@HashMap<> @AT@ 5949 @LENGTH@ 10


INS MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @TO@ TypeDeclaration@@[public]MongoOperations,  @AT@ 29733 @LENGTH@ 64
---INS PrimitiveType@@long @TO@ MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 29728 @LENGTH@ 4
---INS SimpleName@@MethodName:count @TO@ MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 29733 @LENGTH@ 5
---INS SingleVariableDeclaration@@Query query @TO@ MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 29739 @LENGTH@ 11
------INS SimpleType@@Query @TO@ SingleVariableDeclaration@@Query query @AT@ 29739 @LENGTH@ 5
------INS SimpleName@@query @TO@ SingleVariableDeclaration@@Query query @AT@ 29745 @LENGTH@ 5
---INS SingleVariableDeclaration@@Class<?> entityClass @TO@ MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 29752 @LENGTH@ 20
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> entityClass @AT@ 29752 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 29752 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 29758 @LENGTH@ 1
------INS SimpleName@@entityClass @TO@ SingleVariableDeclaration@@Class<?> entityClass @AT@ 29761 @LENGTH@ 11
---INS SingleVariableDeclaration@@String collectionName @TO@ MethodDeclaration@@long, MethodName:count, Query query, Class<?> entityClass, String collectionName,  @AT@ 29774 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String collectionName @AT@ 29774 @LENGTH@ 6
------INS SimpleName@@collectionName @TO@ SingleVariableDeclaration@@String collectionName @AT@ 29781 @LENGTH@ 14


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000"] @AT@ 1134 @LENGTH@ 96
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000" @AT@ 1149 @LENGTH@ 80
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/timeout?httpClient.timeout=2000" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/timeout?httpClient.timeout=2000" @AT@ 1155 @LENGTH@ 74
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1155 @LENGTH@ 25


UPD VariableDeclarationStatement@@ResourceMetadata metadata=mappings.getMappingFor(type); @TO@ ResourceMetadata metadata=mappings.getMetadataFor(type); @AT@ 3399 @LENGTH@ 57
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(type) @TO@ metadata=mappings.getMetadataFor(type) @AT@ 3416 @LENGTH@ 39
------UPD MethodInvocation@@mappings.getMappingFor(type) @TO@ mappings.getMetadataFor(type) @AT@ 3427 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getMappingFor:[type] @TO@ MethodName:getMetadataFor:[type] @AT@ 3436 @LENGTH@ 19


UPD IfStatement@@if (operation == SolrConstants.OPERATION_INSERT_STREAMING) {  return this.concSolrServer;} else {  return this.httpServer;} @TO@ if (SolrConstants.OPERATION_INSERT_STREAMING.equals(operation)) {  return this.concSolrServer;} else {  return this.httpServer;} @AT@ 2095 @LENGTH@ 163
---INS MethodInvocation@@SolrConstants.OPERATION_INSERT_STREAMING.equals(operation) @TO@ IfStatement@@if (operation == SolrConstants.OPERATION_INSERT_STREAMING) {  return this.concSolrServer;} else {  return this.httpServer;} @AT@ 2099 @LENGTH@ 58
------INS QualifiedName@@Name:SolrConstants.OPERATION_INSERT_STREAMING @TO@ MethodInvocation@@SolrConstants.OPERATION_INSERT_STREAMING.equals(operation) @AT@ 2099 @LENGTH@ 40
------INS SimpleName@@MethodName:equals:[operation] @TO@ MethodInvocation@@SolrConstants.OPERATION_INSERT_STREAMING.equals(operation) @AT@ 2140 @LENGTH@ 17
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:equals:[operation] @AT@ 2147 @LENGTH@ 9
---DEL InfixExpression@@operation == SolrConstants.OPERATION_INSERT_STREAMING @AT@ 2099 @LENGTH@ 53
------DEL SimpleName@@operation @AT@ 2099 @LENGTH@ 9
------DEL Operator@@== @AT@ 2108 @LENGTH@ 2
------DEL QualifiedName@@SolrConstants.OPERATION_INSERT_STREAMING @AT@ 2112 @LENGTH@ 40
---------DEL SimpleName@@SolrConstants @AT@ 2112 @LENGTH@ 13
---------DEL SimpleName@@OPERATION_INSERT_STREAMING @AT@ 2126 @LENGTH@ 26


INS MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @TO@ TypeDeclaration@@[public]NonBlockingOpDeDupProc, [Transform] @AT@ 7913 @LENGTH@ 515
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7913 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7921 @LENGTH@ 4
---INS SimpleName@@MethodName:fixContextReferences @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7926 @LENGTH@ 20
---INS SingleVariableDeclaration@@SelectOperator cSEL @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7947 @LENGTH@ 19
------INS SimpleType@@SelectOperator @TO@ SingleVariableDeclaration@@SelectOperator cSEL @AT@ 7947 @LENGTH@ 14
------INS SimpleName@@cSEL @TO@ SingleVariableDeclaration@@SelectOperator cSEL @AT@ 7962 @LENGTH@ 4
---INS SingleVariableDeclaration@@SelectOperator pSEL @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7968 @LENGTH@ 19
------INS SimpleType@@SelectOperator @TO@ SingleVariableDeclaration@@SelectOperator pSEL @AT@ 7968 @LENGTH@ 14
------INS SimpleName@@pSEL @TO@ SingleVariableDeclaration@@SelectOperator pSEL @AT@ 7983 @LENGTH@ 4
---INS VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 7995 @LENGTH@ 68
------INS ParameterizedType@@Collection<QBJoinTree> @TO@ VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @AT@ 7995 @LENGTH@ 22
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<QBJoinTree> @AT@ 7995 @LENGTH@ 10
---------INS SimpleType@@QBJoinTree @TO@ ParameterizedType@@Collection<QBJoinTree> @AT@ 8006 @LENGTH@ 10
------INS VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @TO@ VariableDeclarationStatement@@Collection<QBJoinTree> qbJoinTrees=pctx.getJoinContext().values(); @AT@ 8018 @LENGTH@ 44
---------INS SimpleName@@qbJoinTrees @TO@ VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @AT@ 8018 @LENGTH@ 11
---------INS MethodInvocation@@pctx.getJoinContext().values() @TO@ VariableDeclarationFragment@@qbJoinTrees=pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getJoinContext:[] @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 21
------------INS SimpleName@@Name:pctx @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8032 @LENGTH@ 4
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@pctx.getJoinContext().values() @AT@ 8054 @LENGTH@ 8
---INS EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @TO@ MethodDeclaration@@private, void, MethodName:fixContextReferences, SelectOperator cSEL, SelectOperator pSEL,  @AT@ 8068 @LENGTH@ 356
------INS SingleVariableDeclaration@@QBJoinTree qbJoinTree @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8073 @LENGTH@ 21
---------INS SimpleType@@QBJoinTree @TO@ SingleVariableDeclaration@@QBJoinTree qbJoinTree @AT@ 8073 @LENGTH@ 10
---------INS SimpleName@@qbJoinTree @TO@ SingleVariableDeclaration@@QBJoinTree qbJoinTree @AT@ 8084 @LENGTH@ 10
------INS SimpleName@@qbJoinTrees @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8097 @LENGTH@ 11
------INS VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8118 @LENGTH@ 92
---------INS ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @TO@ VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @AT@ 8118 @LENGTH@ 45
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8118 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8122 @LENGTH@ 6
------------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@Map<String,Operator<? extends OperatorDesc>> @AT@ 8130 @LENGTH@ 32
---------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8130 @LENGTH@ 8
---------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8139 @LENGTH@ 22
---------INS VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @TO@ VariableDeclarationStatement@@Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo(); @AT@ 8164 @LENGTH@ 45
------------INS SimpleName@@aliasToOpInfo @TO@ VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @AT@ 8164 @LENGTH@ 13
------------INS MethodInvocation@@qbJoinTree.getAliasToOpInfo() @TO@ VariableDeclarationFragment@@aliasToOpInfo=qbJoinTree.getAliasToOpInfo() @AT@ 8180 @LENGTH@ 29
---------------INS SimpleName@@Name:qbJoinTree @TO@ MethodInvocation@@qbJoinTree.getAliasToOpInfo() @AT@ 8180 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getAliasToOpInfo:[] @TO@ MethodInvocation@@qbJoinTree.getAliasToOpInfo() @AT@ 8191 @LENGTH@ 18
------INS EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @TO@ EnhancedForStatement@@for (QBJoinTree qbJoinTree : qbJoinTrees) {  Map<String,Operator<? extends OperatorDesc>> aliasToOpInfo=qbJoinTree.getAliasToOpInfo();  for (  Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {    if (entry.getValue() == cSEL) {      aliasToOpInfo.put(entry.getKey(),pSEL);    }  }} @AT@ 8217 @LENGTH@ 201
---------INS SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8222 @LENGTH@ 57
------------INS ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @TO@ SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @AT@ 8222 @LENGTH@ 51
---------------INS SimpleType@@Map.Entry @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8222 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8232 @LENGTH@ 6
---------------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@Map.Entry<String,Operator<? extends OperatorDesc>> @AT@ 8240 @LENGTH@ 32
------------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8240 @LENGTH@ 8
------------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 8249 @LENGTH@ 22
------------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Map.Entry<String,Operator<? extends OperatorDesc>> entry @AT@ 8274 @LENGTH@ 5
---------INS MethodInvocation@@aliasToOpInfo.entrySet() @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8282 @LENGTH@ 24
------------INS SimpleName@@Name:aliasToOpInfo @TO@ MethodInvocation@@aliasToOpInfo.entrySet() @AT@ 8282 @LENGTH@ 13
------------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@aliasToOpInfo.entrySet() @AT@ 8296 @LENGTH@ 10
---------INS IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @TO@ EnhancedForStatement@@for (Map.Entry<String,Operator<? extends OperatorDesc>> entry : aliasToOpInfo.entrySet()) {  if (entry.getValue() == cSEL) {    aliasToOpInfo.put(entry.getKey(),pSEL);  }} @AT@ 8318 @LENGTH@ 92
------------INS InfixExpression@@entry.getValue() == cSEL @TO@ IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8322 @LENGTH@ 24
---------------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8322 @LENGTH@ 16
------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 8322 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 8328 @LENGTH@ 10
---------------INS Operator@@== @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8338 @LENGTH@ 2
---------------INS SimpleName@@cSEL @TO@ InfixExpression@@entry.getValue() == cSEL @AT@ 8342 @LENGTH@ 4
------------INS Block@@ThenBody:{  aliasToOpInfo.put(entry.getKey(),pSEL);} @TO@ IfStatement@@if (entry.getValue() == cSEL) {  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8348 @LENGTH@ 62
---------------INS ExpressionStatement@@MethodInvocation:aliasToOpInfo.put(entry.getKey(),pSEL) @TO@ Block@@ThenBody:{  aliasToOpInfo.put(entry.getKey(),pSEL);} @AT@ 8360 @LENGTH@ 40
------------------INS MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @TO@ ExpressionStatement@@MethodInvocation:aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8360 @LENGTH@ 39
---------------------INS SimpleName@@Name:aliasToOpInfo @TO@ MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8360 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:put:[entry.getKey(), pSEL] @TO@ MethodInvocation@@aliasToOpInfo.put(entry.getKey(),pSEL) @AT@ 8374 @LENGTH@ 25
------------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[entry.getKey(), pSEL] @AT@ 8378 @LENGTH@ 14
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 8378 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 8384 @LENGTH@ 8
------------------------INS SimpleName@@pSEL @TO@ SimpleName@@MethodName:put:[entry.getKey(), pSEL] @AT@ 8394 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @TO@ TypeDeclaration@@[public]AccessTokenProviderChainTests,  @AT@ 4668 @LENGTH@ 571
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4668 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4675 @LENGTH@ 4
---INS SimpleName@@MethodName:testSunnyDayClientCredentialsWithTokenServicesSave @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4680 @LENGTH@ 50
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4740 @LENGTH@ 9
---INS VariableDeclarationStatement@@AccessTokenProviderChain chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())); @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4754 @LENGTH@ 108
------INS SimpleType@@AccessTokenProviderChain @TO@ VariableDeclarationStatement@@AccessTokenProviderChain chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())); @AT@ 4754 @LENGTH@ 24
------INS VariableDeclarationFragment@@chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())) @TO@ VariableDeclarationStatement@@AccessTokenProviderChain chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())); @AT@ 4779 @LENGTH@ 82
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())) @AT@ 4779 @LENGTH@ 5
---------INS ClassInstanceCreation@@AccessTokenProviderChain[Arrays.asList(new StubAccessTokenProvider())] @TO@ VariableDeclarationFragment@@chain=new AccessTokenProviderChain(Arrays.asList(new StubAccessTokenProvider())) @AT@ 4787 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@AccessTokenProviderChain[Arrays.asList(new StubAccessTokenProvider())] @AT@ 4787 @LENGTH@ 3
------------INS SimpleType@@AccessTokenProviderChain @TO@ ClassInstanceCreation@@AccessTokenProviderChain[Arrays.asList(new StubAccessTokenProvider())] @AT@ 4791 @LENGTH@ 24
------------INS MethodInvocation@@Arrays.asList(new StubAccessTokenProvider()) @TO@ ClassInstanceCreation@@AccessTokenProviderChain[Arrays.asList(new StubAccessTokenProvider())] @AT@ 4816 @LENGTH@ 44
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new StubAccessTokenProvider()) @AT@ 4816 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new StubAccessTokenProvider()] @TO@ MethodInvocation@@Arrays.asList(new StubAccessTokenProvider()) @AT@ 4823 @LENGTH@ 37
------------------INS ClassInstanceCreation@@StubAccessTokenProvider[] @TO@ SimpleName@@MethodName:asList:[new StubAccessTokenProvider()] @AT@ 4830 @LENGTH@ 29
---------------------INS New@@new @TO@ ClassInstanceCreation@@StubAccessTokenProvider[] @AT@ 4830 @LENGTH@ 3
---------------------INS SimpleType@@StubAccessTokenProvider @TO@ ClassInstanceCreation@@StubAccessTokenProvider[] @AT@ 4834 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:chain.setClientTokenServices(clientTokenServices) @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4865 @LENGTH@ 50
------INS MethodInvocation@@chain.setClientTokenServices(clientTokenServices) @TO@ ExpressionStatement@@MethodInvocation:chain.setClientTokenServices(clientTokenServices) @AT@ 4865 @LENGTH@ 49
---------INS SimpleName@@Name:chain @TO@ MethodInvocation@@chain.setClientTokenServices(clientTokenServices) @AT@ 4865 @LENGTH@ 5
---------INS SimpleName@@MethodName:setClientTokenServices:[clientTokenServices] @TO@ MethodInvocation@@chain.setClientTokenServices(clientTokenServices) @AT@ 4871 @LENGTH@ 43
------------INS SimpleName@@clientTokenServices @TO@ SimpleName@@MethodName:setClientTokenServices:[clientTokenServices] @AT@ 4894 @LENGTH@ 19
---INS VariableDeclarationStatement@@AccessTokenRequest request=new DefaultAccessTokenRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4918 @LENGTH@ 61
------INS SimpleType@@AccessTokenRequest @TO@ VariableDeclarationStatement@@AccessTokenRequest request=new DefaultAccessTokenRequest(); @AT@ 4918 @LENGTH@ 18
------INS VariableDeclarationFragment@@request=new DefaultAccessTokenRequest() @TO@ VariableDeclarationStatement@@AccessTokenRequest request=new DefaultAccessTokenRequest(); @AT@ 4937 @LENGTH@ 41
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new DefaultAccessTokenRequest() @AT@ 4937 @LENGTH@ 7
---------INS ClassInstanceCreation@@DefaultAccessTokenRequest[] @TO@ VariableDeclarationFragment@@request=new DefaultAccessTokenRequest() @AT@ 4947 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultAccessTokenRequest[] @AT@ 4947 @LENGTH@ 3
------------INS SimpleType@@DefaultAccessTokenRequest @TO@ ClassInstanceCreation@@DefaultAccessTokenRequest[] @AT@ 4951 @LENGTH@ 25
---INS ExpressionStatement@@Assignment:resource=new ClientCredentialsResourceDetails() @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 4982 @LENGTH@ 50
------INS Assignment@@resource=new ClientCredentialsResourceDetails() @TO@ ExpressionStatement@@Assignment:resource=new ClientCredentialsResourceDetails() @AT@ 4982 @LENGTH@ 49
---------INS SimpleName@@resource @TO@ Assignment@@resource=new ClientCredentialsResourceDetails() @AT@ 4982 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@resource=new ClientCredentialsResourceDetails() @AT@ 4990 @LENGTH@ 1
---------INS ClassInstanceCreation@@ClientCredentialsResourceDetails[] @TO@ Assignment@@resource=new ClientCredentialsResourceDetails() @AT@ 4993 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@ClientCredentialsResourceDetails[] @AT@ 4993 @LENGTH@ 3
------------INS SimpleType@@ClientCredentialsResourceDetails @TO@ ClassInstanceCreation@@ClientCredentialsResourceDetails[] @AT@ 4997 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:resource.setId("resource") @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 5035 @LENGTH@ 27
------INS MethodInvocation@@resource.setId("resource") @TO@ ExpressionStatement@@MethodInvocation:resource.setId("resource") @AT@ 5035 @LENGTH@ 26
---------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.setId("resource") @AT@ 5035 @LENGTH@ 8
---------INS SimpleName@@MethodName:setId:["resource"] @TO@ MethodInvocation@@resource.setId("resource") @AT@ 5044 @LENGTH@ 17
------------INS StringLiteral@@"resource" @TO@ SimpleName@@MethodName:setId:["resource"] @AT@ 5050 @LENGTH@ 10
---INS VariableDeclarationStatement@@OAuth2AccessToken token=chain.obtainAccessToken(resource,request); @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 5065 @LENGTH@ 69
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken token=chain.obtainAccessToken(resource,request); @AT@ 5065 @LENGTH@ 17
------INS VariableDeclarationFragment@@token=chain.obtainAccessToken(resource,request) @TO@ VariableDeclarationStatement@@OAuth2AccessToken token=chain.obtainAccessToken(resource,request); @AT@ 5083 @LENGTH@ 50
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=chain.obtainAccessToken(resource,request) @AT@ 5083 @LENGTH@ 5
---------INS MethodInvocation@@chain.obtainAccessToken(resource,request) @TO@ VariableDeclarationFragment@@token=chain.obtainAccessToken(resource,request) @AT@ 5091 @LENGTH@ 42
------------INS SimpleName@@Name:chain @TO@ MethodInvocation@@chain.obtainAccessToken(resource,request) @AT@ 5091 @LENGTH@ 5
------------INS SimpleName@@MethodName:obtainAccessToken:[resource, request] @TO@ MethodInvocation@@chain.obtainAccessToken(resource,request) @AT@ 5097 @LENGTH@ 36
---------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:obtainAccessToken:[resource, request] @AT@ 5115 @LENGTH@ 8
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:obtainAccessToken:[resource, request] @AT@ 5125 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNotNull(token) @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 5137 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(token) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(token) @AT@ 5137 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[token] @TO@ MethodInvocation@@assertNotNull(token) @AT@ 5137 @LENGTH@ 20
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:assertNotNull:[token] @AT@ 5151 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @TO@ MethodDeclaration@@public, void, MethodName:testSunnyDayClientCredentialsWithTokenServicesSave, Exception,  @AT@ 5161 @LENGTH@ 75
------INS MethodInvocation@@Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @TO@ ExpressionStatement@@MethodInvocation:Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @AT@ 5161 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:verify:[clientTokenServices] @TO@ MethodInvocation@@Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @AT@ 5161 @LENGTH@ 35
------------INS SimpleName@@clientTokenServices @TO@ MethodInvocation@@MethodName:verify:[clientTokenServices] @AT@ 5176 @LENGTH@ 19
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @AT@ 5161 @LENGTH@ 7
---------INS SimpleName@@MethodName:saveAccessToken:[resource, null, token] @TO@ MethodInvocation@@Mockito.verify(clientTokenServices).saveAccessToken(resource,null,token) @AT@ 5197 @LENGTH@ 38
------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, token] @AT@ 5213 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, token] @AT@ 5223 @LENGTH@ 4
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:saveAccessToken:[resource, null, token] @AT@ 5229 @LENGTH@ 5


UPD MethodDeclaration@@public, ResponseEntity<? extends ResourceSupport>, MethodName:createPropertyReference, final RootResourceInformation resourceInformation, final HttpMethod requestMethod, final @RequestBody Resources<Object> incoming, @BackendId Serializable id, @PathVariable String property, Exception,  @TO@ public, ResponseEntity<? extends ResourceSupport>, MethodName:createPropertyReference, final RootResourceInformation resourceInformation, final HttpMethod requestMethod, final @RequestBody(required=false) Resources<Object> incoming, @BackendId Serializable id, @PathVariable String property, Exception,  @AT@ 11779 @LENGTH@ 2769
---UPD SingleVariableDeclaration@@final @RequestBody Resources<Object> incoming @TO@ final @RequestBody(required=false) Resources<Object> incoming @AT@ 11942 @LENGTH@ 45
---INS VariableDeclarationStatement@@final Resources<Object> source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming; @TO@ MethodDeclaration@@public, ResponseEntity<? extends ResourceSupport>, MethodName:createPropertyReference, final RootResourceInformation resourceInformation, final HttpMethod requestMethod, final @RequestBody Resources<Object> incoming, @BackendId Serializable id, @PathVariable String property, Exception,  @AT@ 12124 @LENGTH@ 110
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Resources<Object> source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming; @AT@ 12124 @LENGTH@ 5
------INS ParameterizedType@@Resources<Object> @TO@ VariableDeclarationStatement@@final Resources<Object> source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming; @AT@ 12130 @LENGTH@ 17
---------INS SimpleType@@Resources @TO@ ParameterizedType@@Resources<Object> @AT@ 12130 @LENGTH@ 9
---------INS SimpleType@@Object @TO@ ParameterizedType@@Resources<Object> @AT@ 12140 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @TO@ VariableDeclarationStatement@@final Resources<Object> source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming; @AT@ 12148 @LENGTH@ 85
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @AT@ 12148 @LENGTH@ 6
---------INS ConditionalExpression@@incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @TO@ VariableDeclarationFragment@@source=incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @AT@ 12157 @LENGTH@ 76
------------INS InfixExpression@@incoming == null @TO@ ConditionalExpression@@incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @AT@ 12157 @LENGTH@ 16
---------------INS SimpleName@@incoming @TO@ InfixExpression@@incoming == null @AT@ 12157 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@incoming == null @AT@ 12165 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@incoming == null @AT@ 12169 @LENGTH@ 4
------------INS ClassInstanceCreation@@Resources<Object>[Collections.emptyList()] @TO@ ConditionalExpression@@incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @AT@ 12176 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@Resources<Object>[Collections.emptyList()] @AT@ 12176 @LENGTH@ 3
---------------INS ParameterizedType@@Resources<Object> @TO@ ClassInstanceCreation@@Resources<Object>[Collections.emptyList()] @AT@ 12180 @LENGTH@ 17
------------------INS SimpleType@@Resources @TO@ ParameterizedType@@Resources<Object> @AT@ 12180 @LENGTH@ 9
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Resources<Object> @AT@ 12190 @LENGTH@ 6
---------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@Resources<Object>[Collections.emptyList()] @AT@ 12198 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 12198 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 12210 @LENGTH@ 11
------------INS SimpleName@@incoming @TO@ ConditionalExpression@@incoming == null ? new Resources<Object>(Collections.emptyList()) : incoming @AT@ 12225 @LENGTH@ 8
---UPD VariableDeclarationStatement@@Function<ReferencedProperty,ResourceSupport> handler=new Function<ReferencedProperty,ResourceSupport>(){
  @Override public ResourceSupport apply(  ReferencedProperty prop) throws HttpRequestMethodNotSupportedException {
    Class<?> propertyType=prop.property.getType();
    if (prop.property.isCollectionLike()) {
      Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        coll=(Collection<Object>)prop.propertyValue;
      }
      for (      Link l : incoming.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        coll.add(propVal);
      }
      prop.accessor.setProperty(prop.property,coll);
    }
 else     if (prop.property.isMap()) {
      Map<String,Object> m=CollectionFactory.createMap(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        m=(Map<String,Object>)prop.propertyValue;
      }
      for (      Link l : incoming.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        m.put(l.getRel(),propVal);
      }
      prop.accessor.setProperty(prop.property,m);
    }
 else {
      if (HttpMethod.PATCH.equals(requestMethod)) {
        throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");
      }
      if (incoming.getLinks().size() != 1) {
        throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");
      }
      Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));
      prop.accessor.setProperty(prop.property,propVal);
    }
    publisher.publishEvent(new BeforeLinkSaveEvent(prop.accessor.getBean(),prop.propertyValue));
    Object result=invoker.invokeSave(prop.accessor.getBean());
    publisher.publishEvent(new AfterLinkSaveEvent(result,prop.propertyValue));
    return null;
  }
}
; @TO@ Function<ReferencedProperty,ResourceSupport> handler=new Function<ReferencedProperty,ResourceSupport>(){
  @Override public ResourceSupport apply(  ReferencedProperty prop) throws HttpRequestMethodNotSupportedException {
    Class<?> propertyType=prop.property.getType();
    if (prop.property.isCollectionLike()) {
      Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        coll=(Collection<Object>)prop.propertyValue;
      }
      for (      Link l : source.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        coll.add(propVal);
      }
      prop.accessor.setProperty(prop.property,coll);
    }
 else     if (prop.property.isMap()) {
      Map<String,Object> m=CollectionFactory.createMap(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        m=(Map<String,Object>)prop.propertyValue;
      }
      for (      Link l : source.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        m.put(l.getRel(),propVal);
      }
      prop.accessor.setProperty(prop.property,m);
    }
 else {
      if (HttpMethod.PATCH.equals(requestMethod)) {
        throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");
      }
      if (source.getLinks().size() != 1) {
        throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");
      }
      Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));
      prop.accessor.setProperty(prop.property,propVal);
    }
    publisher.publishEvent(new BeforeLinkSaveEvent(prop.accessor.getBean(),prop.propertyValue));
    Object result=invoker.invokeSave(prop.accessor.getBean());
    publisher.publishEvent(new AfterLinkSaveEvent(result,prop.propertyValue));
    return null;
  }
}
; @AT@ 12144 @LENGTH@ 2247
------UPD VariableDeclarationFragment@@handler=new Function<ReferencedProperty,ResourceSupport>(){
  @Override public ResourceSupport apply(  ReferencedProperty prop) throws HttpRequestMethodNotSupportedException {
    Class<?> propertyType=prop.property.getType();
    if (prop.property.isCollectionLike()) {
      Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        coll=(Collection<Object>)prop.propertyValue;
      }
      for (      Link l : incoming.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        coll.add(propVal);
      }
      prop.accessor.setProperty(prop.property,coll);
    }
 else     if (prop.property.isMap()) {
      Map<String,Object> m=CollectionFactory.createMap(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        m=(Map<String,Object>)prop.propertyValue;
      }
      for (      Link l : incoming.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        m.put(l.getRel(),propVal);
      }
      prop.accessor.setProperty(prop.property,m);
    }
 else {
      if (HttpMethod.PATCH.equals(requestMethod)) {
        throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");
      }
      if (incoming.getLinks().size() != 1) {
        throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");
      }
      Object propVal=loadPropertyValue(prop.propertyType,incoming.getLinks().get(0));
      prop.accessor.setProperty(prop.property,propVal);
    }
    publisher.publishEvent(new BeforeLinkSaveEvent(prop.accessor.getBean(),prop.propertyValue));
    Object result=invoker.invokeSave(prop.accessor.getBean());
    publisher.publishEvent(new AfterLinkSaveEvent(result,prop.propertyValue));
    return null;
  }
}
 @TO@ handler=new Function<ReferencedProperty,ResourceSupport>(){
  @Override public ResourceSupport apply(  ReferencedProperty prop) throws HttpRequestMethodNotSupportedException {
    Class<?> propertyType=prop.property.getType();
    if (prop.property.isCollectionLike()) {
      Collection<Object> coll=CollectionFactory.createCollection(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        coll=(Collection<Object>)prop.propertyValue;
      }
      for (      Link l : source.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        coll.add(propVal);
      }
      prop.accessor.setProperty(prop.property,coll);
    }
 else     if (prop.property.isMap()) {
      Map<String,Object> m=CollectionFactory.createMap(propertyType,0);
      if (HttpMethod.PATCH.equals(requestMethod)) {
        m=(Map<String,Object>)prop.propertyValue;
      }
      for (      Link l : source.getLinks()) {
        Object propVal=loadPropertyValue(prop.propertyType,l);
        m.put(l.getRel(),propVal);
      }
      prop.accessor.setProperty(prop.property,m);
    }
 else {
      if (HttpMethod.PATCH.equals(requestMethod)) {
        throw new HttpRequestMethodNotSupportedException(HttpMethod.PATCH.name(),new String[]{"PATCH"},"Cannot PATCH a reference to this singular property since the property type is not a List or a Map.");
      }
      if (source.getLinks().size() != 1) {
        throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");
      }
      Object propVal=loadPropertyValue(prop.propertyType,source.getLinks().get(0));
      prop.accessor.setProperty(prop.property,propVal);
    }
    publisher.publishEvent(new BeforeLinkSaveEvent(prop.accessor.getBean(),prop.propertyValue));
    Object result=invoker.invokeSave(prop.accessor.getBean());
    publisher.publishEvent(new AfterLinkSaveEvent(result,prop.propertyValue));
    return null;
  }
}
 @AT@ 12190 @LENGTH@ 2200


UPD TryStatement@@try {  connection=cf.createConnection();  connection.start();  Session session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);  TemporaryQueue replyQueue=session.createTemporaryQueue();  MessageProducer producer=session.createProducer(destination);  Message message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  MessageConsumer consumer=session.createConsumer(replyQueue);  Message reply=consumer.receive(TIMEOUT);  assertNull(reply);  executeMDBOperation(mdbName,"start-delivery");  assertMDBDeliveryIsActive(mdbName,true);  reply=consumer.receive(TIMEOUT);  assertNotNull(reply);  assertEquals(message.getJMSMessageID(),reply.getJMSCorrelationID());  executeMDBOperation(mdbName,"stop-delivery");  assertMDBDeliveryIsActive(mdbName,false);  message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  reply=consumer.receive(TIMEOUT);  assertNull(reply);}  finally {  if (connection != null) {    connection.close();  }} @TO@ try {  connection=cf.createConnection();  connection.start();  Session session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);  TemporaryQueue replyQueue=session.createTemporaryQueue();  MessageProducer producer=session.createProducer(destination);  Message message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  MessageConsumer consumer=session.createConsumer(replyQueue);  Message reply=consumer.receive(TIMEOUT);  assertNull(reply);  executeMDBOperation(mdbName,"start-delivery");  assertMDBDeliveryIsActive(mdbName,true);  executeMDBOperation(mdbName,"start-delivery");  reply=consumer.receive(TIMEOUT);  assertNotNull(reply);  assertEquals(message.getJMSMessageID(),reply.getJMSCorrelationID());  executeMDBOperation(mdbName,"stop-delivery");  assertMDBDeliveryIsActive(mdbName,false);  message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  reply=consumer.receive(TIMEOUT);  assertNull(reply);}  finally {  if (connection != null) {    connection.close();  }} @AT@ 6491 @LENGTH@ 1674
---INS ExpressionStatement@@MethodInvocation:executeMDBOperation(mdbName,"start-delivery") @TO@ TryStatement@@try {  connection=cf.createConnection();  connection.start();  Session session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);  TemporaryQueue replyQueue=session.createTemporaryQueue();  MessageProducer producer=session.createProducer(destination);  Message message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  MessageConsumer consumer=session.createConsumer(replyQueue);  Message reply=consumer.receive(TIMEOUT);  assertNull(reply);  executeMDBOperation(mdbName,"start-delivery");  assertMDBDeliveryIsActive(mdbName,true);  reply=consumer.receive(TIMEOUT);  assertNotNull(reply);  assertEquals(message.getJMSMessageID(),reply.getJMSCorrelationID());  executeMDBOperation(mdbName,"stop-delivery");  assertMDBDeliveryIsActive(mdbName,false);  message=session.createMessage();  message.setJMSReplyTo(replyQueue);  producer.send(message);  reply=consumer.receive(TIMEOUT);  assertNull(reply);}  finally {  if (connection != null) {    connection.close();  }} @AT@ 7492 @LENGTH@ 47
------INS MethodInvocation@@executeMDBOperation(mdbName,"start-delivery") @TO@ ExpressionStatement@@MethodInvocation:executeMDBOperation(mdbName,"start-delivery") @AT@ 7492 @LENGTH@ 46
---------INS SimpleName@@MethodName:executeMDBOperation:[mdbName, "start-delivery"] @TO@ MethodInvocation@@executeMDBOperation(mdbName,"start-delivery") @AT@ 7492 @LENGTH@ 46
------------INS SimpleName@@mdbName @TO@ SimpleName@@MethodName:executeMDBOperation:[mdbName, "start-delivery"] @AT@ 7512 @LENGTH@ 7
------------INS StringLiteral@@"start-delivery" @TO@ SimpleName@@MethodName:executeMDBOperation:[mdbName, "start-delivery"] @AT@ 7521 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @TO@ TypeDeclaration@@[public, abstract]AbstractDefaultTokenServicesTests,  @AT@ 7697 @LENGTH@ 348
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7697 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7704 @LENGTH@ 4
---INS SimpleName@@MethodName:testRefreshedTokenNotExpiring @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7709 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7748 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getTokenServices().setRefreshTokenValiditySeconds(0) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7762 @LENGTH@ 53
------INS MethodInvocation@@getTokenServices().setRefreshTokenValiditySeconds(0) @TO@ ExpressionStatement@@MethodInvocation:getTokenServices().setRefreshTokenValiditySeconds(0) @AT@ 7762 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().setRefreshTokenValiditySeconds(0) @AT@ 7762 @LENGTH@ 18
---------INS SimpleName@@MethodName:setRefreshTokenValiditySeconds:[0] @TO@ MethodInvocation@@getTokenServices().setRefreshTokenValiditySeconds(0) @AT@ 7781 @LENGTH@ 33
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setRefreshTokenValiditySeconds:[0] @AT@ 7812 @LENGTH@ 1
---INS VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7818 @LENGTH@ 134
------INS SimpleType@@OAuth2RefreshToken @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @AT@ 7818 @LENGTH@ 18
------INS VariableDeclarationFragment@@expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @TO@ VariableDeclarationStatement@@OAuth2RefreshToken expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken(); @AT@ 7837 @LENGTH@ 114
---------INS SimpleName@@expectedExpiringRefreshToken @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 7837 @LENGTH@ 28
---------INS MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @TO@ VariableDeclarationFragment@@expectedExpiringRefreshToken=getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 7868 @LENGTH@ 83
------------INS MethodInvocation@@MethodName:createAccessToken:[createAuthentication()] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 7868 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:createAuthentication:[] @TO@ MethodInvocation@@MethodName:createAccessToken:[createAuthentication()] @AT@ 7910 @LENGTH@ 22
------------INS MethodInvocation@@MethodName:getTokenServices:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 7868 @LENGTH@ 18
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@getTokenServices().createAccessToken(createAuthentication()).getRefreshToken() @AT@ 7934 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertFalse(expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshedTokenNotExpiring, Exception,  @AT@ 7955 @LENGTH@ 87
------INS MethodInvocation@@assertFalse(expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 7955 @LENGTH@ 86
---------INS SimpleName@@MethodName:assertFalse:[expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken] @TO@ MethodInvocation@@assertFalse(expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken) @AT@ 7955 @LENGTH@ 86
------------INS InstanceofExpression@@expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken @TO@ SimpleName@@MethodName:assertFalse:[expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken] @AT@ 7967 @LENGTH@ 73
---------------INS SimpleName@@expectedExpiringRefreshToken @TO@ InstanceofExpression@@expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken @AT@ 7967 @LENGTH@ 28
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken @AT@ 7996 @LENGTH@ 10
---------------INS SimpleType@@DefaultExpiringOAuth2RefreshToken @TO@ InstanceofExpression@@expectedExpiringRefreshToken instanceof DefaultExpiringOAuth2RefreshToken @AT@ 8007 @LENGTH@ 33


UPD VariableDeclarationStatement@@AmazonServiceException ex=new AmazonServiceException("Unknow bucket"); @TO@ AmazonServiceException ex=new AmazonServiceException("Unknown bucket"); @AT@ 6028 @LENGTH@ 72
---UPD VariableDeclarationFragment@@ex=new AmazonServiceException("Unknow bucket") @TO@ ex=new AmazonServiceException("Unknown bucket") @AT@ 6051 @LENGTH@ 48
------UPD ClassInstanceCreation@@AmazonServiceException["Unknow bucket"] @TO@ AmazonServiceException["Unknown bucket"] @AT@ 6056 @LENGTH@ 43
---------UPD StringLiteral@@"Unknow bucket" @TO@ "Unknown bucket" @AT@ 6083 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:rowID=JDBCStatsUtils.truncateRowId(rowID) @TO@ MethodInvocation:JDBCStatsUtils.validateRowId(rowID) @AT@ 7925 @LENGTH@ 44
---INS MethodInvocation@@JDBCStatsUtils.validateRowId(rowID) @TO@ ExpressionStatement@@Assignment:rowID=JDBCStatsUtils.truncateRowId(rowID) @AT@ 7916 @LENGTH@ 35
------MOV SimpleName@@Name:JDBCStatsUtils @TO@ MethodInvocation@@JDBCStatsUtils.validateRowId(rowID) @AT@ 7933 @LENGTH@ 14
------MOV SimpleName@@MethodName:truncateRowId:[rowID] @TO@ MethodInvocation@@JDBCStatsUtils.validateRowId(rowID) @AT@ 7948 @LENGTH@ 20
---DEL Assignment@@rowID=JDBCStatsUtils.truncateRowId(rowID) @AT@ 7925 @LENGTH@ 43
------DEL SimpleName@@rowID @AT@ 7925 @LENGTH@ 5
------DEL Operator@@= @AT@ 7930 @LENGTH@ 1
------DEL MethodInvocation@@JDBCStatsUtils.truncateRowId(rowID) @AT@ 7933 @LENGTH@ 35


INS IfStatement@@if (lastFinishableState != fragmentInfo.canFinish()) {  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} else {  return true;} @TO@ MethodDeclaration@@synchronized, boolean, MethodName:registerForUpdates, FinishableStateUpdateHandler handler, List<String> sources, QueryFragmentInfo fragmentInfo, boolean lastFinishableState,  @AT@ 6583 @LENGTH@ 189
---INS InfixExpression@@lastFinishableState != fragmentInfo.canFinish() @TO@ IfStatement@@if (lastFinishableState != fragmentInfo.canFinish()) {  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} else {  return true;} @AT@ 6587 @LENGTH@ 47
------MOV SimpleName@@lastFinishableState @TO@ InfixExpression@@lastFinishableState != fragmentInfo.canFinish() @AT@ 6590 @LENGTH@ 19
------MOV Operator@@== @TO@ InfixExpression@@lastFinishableState != fragmentInfo.canFinish() @AT@ 6609 @LENGTH@ 2
------MOV MethodInvocation@@fragmentInfo.canFinish() @TO@ InfixExpression@@lastFinishableState != fragmentInfo.canFinish() @AT@ 6613 @LENGTH@ 24
---INS Block@@ThenBody:{  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} @TO@ IfStatement@@if (lastFinishableState != fragmentInfo.canFinish()) {  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} else {  return true;} @AT@ 6636 @LENGTH@ 100
------INS ExpressionStatement@@MethodInvocation:entityInfo.setLastFinishableState(fragmentInfo.canFinish()) @TO@ Block@@ThenBody:{  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} @AT@ 6646 @LENGTH@ 60
---------INS MethodInvocation@@entityInfo.setLastFinishableState(fragmentInfo.canFinish()) @TO@ ExpressionStatement@@MethodInvocation:entityInfo.setLastFinishableState(fragmentInfo.canFinish()) @AT@ 6646 @LENGTH@ 59
------------INS SimpleName@@Name:entityInfo @TO@ MethodInvocation@@entityInfo.setLastFinishableState(fragmentInfo.canFinish()) @AT@ 6646 @LENGTH@ 10
------------INS SimpleName@@MethodName:setLastFinishableState:[fragmentInfo.canFinish()] @TO@ MethodInvocation@@entityInfo.setLastFinishableState(fragmentInfo.canFinish()) @AT@ 6657 @LENGTH@ 48
---------------INS MethodInvocation@@fragmentInfo.canFinish() @TO@ SimpleName@@MethodName:setLastFinishableState:[fragmentInfo.canFinish()] @AT@ 6680 @LENGTH@ 24
------------------INS SimpleName@@Name:fragmentInfo @TO@ MethodInvocation@@fragmentInfo.canFinish() @AT@ 6680 @LENGTH@ 12
------------------INS SimpleName@@MethodName:canFinish:[] @TO@ MethodInvocation@@fragmentInfo.canFinish() @AT@ 6693 @LENGTH@ 11
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} @AT@ 6715 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 6722 @LENGTH@ 5
---INS Block@@ElseBody:{  return true;} @TO@ IfStatement@@if (lastFinishableState != fragmentInfo.canFinish()) {  entityInfo.setLastFinishableState(fragmentInfo.canFinish());  return false;} else {  return true;} @AT@ 6742 @LENGTH@ 30
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ElseBody:{  return true;} @AT@ 6752 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 6759 @LENGTH@ 4


MOV ExpressionStatement@@Assignment:executor=endpoint.getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"PaxLoggingEventTask") @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 3868 @LENGTH@ 119


UPD ExpressionStatement@@MethodInvocation:log.info("Idle timeout detected for this writer, closing stream") @TO@ MethodInvocation:log.info("Idle timeout detected for this writer=[" + this + "], closing stream") @AT@ 4279 @LENGTH@ 66
---UPD MethodInvocation@@log.info("Idle timeout detected for this writer, closing stream") @TO@ log.info("Idle timeout detected for this writer=[" + this + "], closing stream") @AT@ 4279 @LENGTH@ 65
------UPD SimpleName@@MethodName:info:["Idle timeout detected for this writer, closing stream"] @TO@ MethodName:info:["Idle timeout detected for this writer=[" + this + "], closing stream"] @AT@ 4283 @LENGTH@ 61
---------INS InfixExpression@@"Idle timeout detected for this writer=[" + this + "], closing stream" @TO@ SimpleName@@MethodName:info:["Idle timeout detected for this writer, closing stream"] @AT@ 4288 @LENGTH@ 71
------------INS StringLiteral@@"Idle timeout detected for this writer=[" @TO@ InfixExpression@@"Idle timeout detected for this writer=[" + this + "], closing stream" @AT@ 4288 @LENGTH@ 41
------------INS Operator@@+ @TO@ InfixExpression@@"Idle timeout detected for this writer=[" + this + "], closing stream" @AT@ 4329 @LENGTH@ 1
------------INS ThisExpression@@this @TO@ InfixExpression@@"Idle timeout detected for this writer=[" + this + "], closing stream" @AT@ 4332 @LENGTH@ 4
------------INS StringLiteral@@"], closing stream" @TO@ InfixExpression@@"Idle timeout detected for this writer=[" + this + "], closing stream" @AT@ 4340 @LENGTH@ 19
---------DEL StringLiteral@@"Idle timeout detected for this writer, closing stream" @AT@ 4288 @LENGTH@ 55


UPD MethodDeclaration@@public, String, MethodName:echo, String word,  @TO@ String, MethodName:echo, String word,  @AT@ 3267 @LENGTH@ 32
---DEL Modifier@@public @AT@ 3267 @LENGTH@ 6


INS VariableDeclarationStatement@@final ModelNode configNode=model.get(Constants.CONFIGURATION); @TO@ MethodDeclaration@@protected, void, MethodName:launchServices, final OperationContext context, final ModelNode model, final ServiceVerificationHandler verificationHandler, final List<ServiceController<?>> newControllers, OperationFailedException,  @AT@ 12057 @LENGTH@ 64
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode configNode=model.get(Constants.CONFIGURATION); @AT@ 12057 @LENGTH@ 5
---INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode configNode=model.get(Constants.CONFIGURATION); @AT@ 12063 @LENGTH@ 9
---INS VariableDeclarationFragment@@configNode=model.get(Constants.CONFIGURATION) @TO@ VariableDeclarationStatement@@final ModelNode configNode=model.get(Constants.CONFIGURATION); @AT@ 12073 @LENGTH@ 47
------INS SimpleName@@configNode @TO@ VariableDeclarationFragment@@configNode=model.get(Constants.CONFIGURATION) @AT@ 12073 @LENGTH@ 10
------INS MethodInvocation@@model.get(Constants.CONFIGURATION) @TO@ VariableDeclarationFragment@@configNode=model.get(Constants.CONFIGURATION) @AT@ 12086 @LENGTH@ 34
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.get(Constants.CONFIGURATION) @AT@ 12086 @LENGTH@ 5
---------INS SimpleName@@MethodName:get:[Constants.CONFIGURATION] @TO@ MethodInvocation@@model.get(Constants.CONFIGURATION) @AT@ 12092 @LENGTH@ 28
------------INS QualifiedName@@Constants.CONFIGURATION @TO@ SimpleName@@MethodName:get:[Constants.CONFIGURATION] @AT@ 12096 @LENGTH@ 23
---------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.CONFIGURATION @AT@ 12096 @LENGTH@ 9
---------------INS SimpleName@@CONFIGURATION @TO@ QualifiedName@@Constants.CONFIGURATION @AT@ 12106 @LENGTH@ 13


DEL FieldDeclaration@@private, final, Exchange, [exchange] @AT@ 2198 @LENGTH@ 32
---DEL Modifier@@private @AT@ 2198 @LENGTH@ 7
---DEL Modifier@@final @AT@ 2206 @LENGTH@ 5
---DEL SimpleType@@Exchange @AT@ 2212 @LENGTH@ 8
---DEL VariableDeclarationFragment@@exchange @AT@ 2221 @LENGTH@ 8
------DEL SimpleName@@exchange @AT@ 2221 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:remove(address1) @AT@ 3256 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:factory.createSaslServer(GSSAPI,"sasl","test_server",props,new AuthorizeOnlyCallbackHandler()) @TO@ MethodInvocation:factory.createSaslServer(GSSAPI,"sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 9401 @LENGTH@ 106
---UPD MethodInvocation@@factory.createSaslServer(GSSAPI,"sasl","test_server",props,new AuthorizeOnlyCallbackHandler()) @TO@ factory.createSaslServer(GSSAPI,"sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 9408 @LENGTH@ 98
------UPD SimpleName@@MethodName:createSaslServer:[GSSAPI, "sasl", "test_server", props, new AuthorizeOnlyCallbackHandler()] @TO@ MethodName:createSaslServer:[GSSAPI, "sasl", TEST_SERVER_1, props, new AuthorizeOnlyCallbackHandler()] @AT@ 9416 @LENGTH@ 90
---------DEL StringLiteral@@"test_server" @AT@ 9449 @LENGTH@ 13
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslServer:[GSSAPI, "sasl", "test_server", props, new AuthorizeOnlyCallbackHandler()] @AT@ 9449 @LENGTH@ 13


UPD ReturnStatement@@ClassInstanceCreation:new TabularType("explainEndpoint","Explain how this endpoint is configured",ct,new String[]{"option","kind","type","java type","value","default value","description"}) @TO@ ClassInstanceCreation:new TabularType("explainEndpoint","Explain how this endpoint is configured",ct,new String[]{"option"}) @AT@ 3621 @LENGTH@ 183
---UPD ClassInstanceCreation@@TabularType["explainEndpoint", "Explain how this endpoint is configured", ct, new String[]{"option","kind","type","java type","value","default value","description"}] @TO@ TabularType["explainEndpoint", "Explain how this endpoint is configured", ct, new String[]{"option"}] @AT@ 3628 @LENGTH@ 175
------UPD ArrayCreation@@new String[]{"option","kind","type","java type","value","default value","description"} @TO@ new String[]{"option"} @AT@ 3710 @LENGTH@ 92
---------UPD ArrayInitializer@@{"option","kind","type","java type","value","default value","description"} @TO@ {"option"} @AT@ 3722 @LENGTH@ 80
------------DEL StringLiteral@@"kind" @AT@ 3733 @LENGTH@ 6
------------DEL StringLiteral@@"type" @AT@ 3741 @LENGTH@ 6
------------DEL StringLiteral@@"java type" @AT@ 3749 @LENGTH@ 11
------------DEL StringLiteral@@"value" @AT@ 3762 @LENGTH@ 7
------------DEL StringLiteral@@"default value" @AT@ 3771 @LENGTH@ 15
------------DEL StringLiteral@@"description" @AT@ 3788 @LENGTH@ 13


INS FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @TO@ TypeDeclaration@@[@Ignore("Must run manual"), public]HdfsAppendTest, CamelTestSupport @AT@ 1342 @LENGTH@ 41
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @AT@ 1342 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @AT@ 1350 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @AT@ 1357 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @AT@ 1363 @LENGTH@ 3
---INS VariableDeclarationFragment@@ITERATIONS=10 @TO@ FieldDeclaration@@private, static, final, int, [ITERATIONS=10] @AT@ 1367 @LENGTH@ 15
------INS SimpleName@@ITERATIONS @TO@ VariableDeclarationFragment@@ITERATIONS=10 @AT@ 1367 @LENGTH@ 10
------INS NumberLiteral@@10 @TO@ VariableDeclarationFragment@@ITERATIONS=10 @AT@ 1380 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Cannot put the message header key={0}, value={1} into Sqs MessageAttribute",entry.getKey(),entry.getValue()) @TO@ MethodInvocation:LOG.warn("Cannot put the message header key={}, value={} into Sqs MessageAttribute",entry.getKey(),entry.getValue()) @AT@ 5409 @LENGTH@ 121
---UPD MethodInvocation@@LOG.warn("Cannot put the message header key={0}, value={1} into Sqs MessageAttribute",entry.getKey(),entry.getValue()) @TO@ LOG.warn("Cannot put the message header key={}, value={} into Sqs MessageAttribute",entry.getKey(),entry.getValue()) @AT@ 5409 @LENGTH@ 120
------UPD SimpleName@@MethodName:warn:["Cannot put the message header key={0}, value={1} into Sqs MessageAttribute", entry.getKey(), entry.getValue()] @TO@ MethodName:warn:["Cannot put the message header key={}, value={} into Sqs MessageAttribute", entry.getKey(), entry.getValue()] @AT@ 5413 @LENGTH@ 116
---------UPD StringLiteral@@"Cannot put the message header key={0}, value={1} into Sqs MessageAttribute" @TO@ "Cannot put the message header key={}, value={} into Sqs MessageAttribute" @AT@ 5418 @LENGTH@ 76


INS ReturnStatement@@SimpleName:buffers @TO@ MethodDeclaration@@static, List<DiskRange>, MethodName:getStreamBuffers, DiskRangeList range, long offset, long length,  @AT@ 13334 @LENGTH@ 15
---INS SimpleName@@buffers @TO@ ReturnStatement@@SimpleName:buffers @AT@ 13341 @LENGTH@ 7


INS FieldDeclaration@@private, String, [marker] @TO@ TypeDeclaration@@[public]S3Consumer, ScheduledBatchPollingConsumer @AT@ 2029 @LENGTH@ 22
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [marker] @AT@ 2029 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [marker] @AT@ 2037 @LENGTH@ 6
---INS VariableDeclarationFragment@@marker @TO@ FieldDeclaration@@private, String, [marker] @AT@ 2044 @LENGTH@ 6
------INS SimpleName@@marker @TO@ VariableDeclarationFragment@@marker @AT@ 2044 @LENGTH@ 6


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/foo"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/foo"] @AT@ 1324 @LENGTH@ 68
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/foo" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/foo" @AT@ 1339 @LENGTH@ 52
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/foo" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/foo" @AT@ 1345 @LENGTH@ 46
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1345 @LENGTH@ 25


UPD ReturnStatement@@ClassInstanceCreation:new RootResourceInformation(mappings.getMappingFor(domainType),entity,invokerFactory.getInvokerFor(domainType)) @TO@ ClassInstanceCreation:new RootResourceInformation(mappings.getMetadataFor(domainType),entity,invokerFactory.getInvokerFor(domainType)) @AT@ 3126 @LENGTH@ 125
---UPD ClassInstanceCreation@@RootResourceInformation[mappings.getMappingFor(domainType), entity, invokerFactory.getInvokerFor(domainType)] @TO@ RootResourceInformation[mappings.getMetadataFor(domainType), entity, invokerFactory.getInvokerFor(domainType)] @AT@ 3133 @LENGTH@ 117
------UPD MethodInvocation@@mappings.getMappingFor(domainType) @TO@ mappings.getMetadataFor(domainType) @AT@ 3161 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getMappingFor:[domainType] @TO@ MethodName:getMetadataFor:[domainType] @AT@ 3170 @LENGTH@ 25


DEL ReturnStatement@@SimpleName:list @AT@ 2684 @LENGTH@ 12


UPD IfStatement@@if (nested != null) {  doMerge((ObjectNode)child,nested,mapper);} @TO@ if (nested != null && property.isEntity()) {  doMerge((ObjectNode)child,nested,mapper);} @AT@ 6575 @LENGTH@ 77
---INS InfixExpression@@nested != null && property.isEntity() @TO@ IfStatement@@if (nested != null) {  doMerge((ObjectNode)child,nested,mapper);} @AT@ 6579 @LENGTH@ 37
------INS InfixExpression@@nested != null @TO@ InfixExpression@@nested != null && property.isEntity() @AT@ 6579 @LENGTH@ 14
---------MOV SimpleName@@nested @TO@ InfixExpression@@nested != null @AT@ 6579 @LENGTH@ 6
---------MOV Operator@@!= @TO@ InfixExpression@@nested != null @AT@ 6585 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@nested != null @AT@ 6589 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@nested != null && property.isEntity() @AT@ 6593 @LENGTH@ 2
------INS MethodInvocation@@property.isEntity() @TO@ InfixExpression@@nested != null && property.isEntity() @AT@ 6597 @LENGTH@ 19
---------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isEntity() @AT@ 6597 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEntity:[] @TO@ MethodInvocation@@property.isEntity() @AT@ 6606 @LENGTH@ 10
---DEL InfixExpression@@nested != null @AT@ 6579 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ MethodInvocation:factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2635 @LENGTH@ 110
---UPD MethodInvocation@@factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2642 @LENGTH@ 102
------UPD SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @TO@ MethodName:createSaslServer:["GSSAPI", "sasl", TEST_SERVER_1, props, new AuthorizeOnlyCallbackHandler()] @AT@ 2650 @LENGTH@ 94
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @AT@ 2683 @LENGTH@ 13
---------DEL StringLiteral@@"test_server_1" @AT@ 2685 @LENGTH@ 15


INS MethodDeclaration@@public, boolean, MethodName:canTest,  @TO@ TypeDeclaration@@[public]BeanstalkMockTestSupport, CamelTestSupport @AT@ 1205 @LENGTH@ 105
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:canTest,  @AT@ 1205 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:canTest,  @AT@ 1212 @LENGTH@ 7
---INS SimpleName@@MethodName:canTest @TO@ MethodDeclaration@@public, boolean, MethodName:canTest,  @AT@ 1220 @LENGTH@ 7
---INS ReturnStatement@@PrefixExpression:!isPlatform("windows") @TO@ MethodDeclaration@@public, boolean, MethodName:canTest,  @AT@ 1274 @LENGTH@ 30
------INS PrefixExpression@@!isPlatform("windows") @TO@ ReturnStatement@@PrefixExpression:!isPlatform("windows") @AT@ 1281 @LENGTH@ 22
---------INS Operator@@! @TO@ PrefixExpression@@!isPlatform("windows") @AT@ 1281 @LENGTH@ 1
---------INS MethodInvocation@@isPlatform("windows") @TO@ PrefixExpression@@!isPlatform("windows") @AT@ 1282 @LENGTH@ 21
------------INS SimpleName@@MethodName:isPlatform:["windows"] @TO@ MethodInvocation@@isPlatform("windows") @AT@ 1282 @LENGTH@ 21
---------------INS StringLiteral@@"windows" @TO@ SimpleName@@MethodName:isPlatform:["windows"] @AT@ 1293 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:canary,  @AT@ 2164 @LENGTH@ 25
---DEL Modifier@@public @AT@ 2164 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2171 @LENGTH@ 4
---DEL SimpleName@@MethodName:canary @AT@ 2176 @LENGTH@ 6


UPD TryStatement@@try (FileWriter fw=new FileWriter(script);PrintWriter pw=new PrintWriter(fw)){  String s="echo \" world\" >> $1";  pw.print(s);}  @TO@ try {  PrintWriter pw=new PrintWriter(fw);  String s="echo \" world\" >> $1";  pw.print(s);}  finally {  fw.close();} @AT@ 3664 @LENGTH@ 180
---DEL VariableDeclarationExpression@@FileWriter fw=new FileWriter(script) @AT@ 3669 @LENGTH@ 38
------DEL SimpleType@@FileWriter @AT@ 3669 @LENGTH@ 10
---DEL VariableDeclarationExpression@@PrintWriter pw=new PrintWriter(fw) @AT@ 3722 @LENGTH@ 36
------DEL SimpleType@@PrintWriter @AT@ 3722 @LENGTH@ 11
---INS VariableDeclarationStatement@@PrintWriter pw=new PrintWriter(fw); @TO@ TryStatement@@try (FileWriter fw=new FileWriter(script);PrintWriter pw=new PrintWriter(fw)){  String s="echo \" world\" >> $1";  pw.print(s);}  @AT@ 3730 @LENGTH@ 37
------INS SimpleType@@PrintWriter @TO@ VariableDeclarationStatement@@PrintWriter pw=new PrintWriter(fw); @AT@ 3730 @LENGTH@ 11
------MOV VariableDeclarationFragment@@pw=new PrintWriter(fw) @TO@ VariableDeclarationStatement@@PrintWriter pw=new PrintWriter(fw); @AT@ 3734 @LENGTH@ 24
---INS Block@@FinallyBody:{  fw.close();} @TO@ TryStatement@@try (FileWriter fw=new FileWriter(script);PrintWriter pw=new PrintWriter(fw)){  String s="echo \" world\" >> $1";  pw.print(s);}  @AT@ 3859 @LENGTH@ 35
------INS ExpressionStatement@@MethodInvocation:fw.close() @TO@ Block@@FinallyBody:{  fw.close();} @AT@ 3873 @LENGTH@ 11
---------INS MethodInvocation@@fw.close() @TO@ ExpressionStatement@@MethodInvocation:fw.close() @AT@ 3873 @LENGTH@ 10
------------INS SimpleName@@Name:fw @TO@ MethodInvocation@@fw.close() @AT@ 3873 @LENGTH@ 2
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@fw.close() @AT@ 3876 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]CheckTokenEndpoint,  @AT@ 2701 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @AT@ 2701 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @AT@ 2708 @LENGTH@ 4
---INS SimpleName@@MethodName:setExceptionTranslator @TO@ MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @AT@ 2713 @LENGTH@ 22
---INS SingleVariableDeclaration@@WebResponseExceptionTranslator exceptionTranslator @TO@ MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @AT@ 2736 @LENGTH@ 50
------INS SimpleType@@WebResponseExceptionTranslator @TO@ SingleVariableDeclaration@@WebResponseExceptionTranslator exceptionTranslator @AT@ 2736 @LENGTH@ 30
------INS SimpleName@@exceptionTranslator @TO@ SingleVariableDeclaration@@WebResponseExceptionTranslator exceptionTranslator @AT@ 2767 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:this.exceptionTranslator=exceptionTranslator @TO@ MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @AT@ 2792 @LENGTH@ 47
------INS Assignment@@this.exceptionTranslator=exceptionTranslator @TO@ ExpressionStatement@@Assignment:this.exceptionTranslator=exceptionTranslator @AT@ 2792 @LENGTH@ 46
---------INS FieldAccess@@this.exceptionTranslator @TO@ Assignment@@this.exceptionTranslator=exceptionTranslator @AT@ 2792 @LENGTH@ 24
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exceptionTranslator @AT@ 2792 @LENGTH@ 4
------------INS SimpleName@@exceptionTranslator @TO@ FieldAccess@@this.exceptionTranslator @AT@ 2797 @LENGTH@ 19
---------INS Operator@@= @TO@ Assignment@@this.exceptionTranslator=exceptionTranslator @AT@ 2816 @LENGTH@ 1
---------INS SimpleName@@exceptionTranslator @TO@ Assignment@@this.exceptionTranslator=exceptionTranslator @AT@ 2819 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:assertEquals("choice1",it.next().getId()) @TO@ MethodDeclaration@@public, void, MethodName:testFilterTypeInOutputs, Exception,  @AT@ 1334 @LENGTH@ 43
---INS MethodInvocation@@assertEquals("choice1",it.next().getId()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("choice1",it.next().getId()) @AT@ 1334 @LENGTH@ 42
------INS SimpleName@@MethodName:assertEquals:["choice1", it.next().getId()] @TO@ MethodInvocation@@assertEquals("choice1",it.next().getId()) @AT@ 1334 @LENGTH@ 42
---------INS StringLiteral@@"choice1" @TO@ SimpleName@@MethodName:assertEquals:["choice1", it.next().getId()] @AT@ 1347 @LENGTH@ 9
---------INS MethodInvocation@@it.next().getId() @TO@ SimpleName@@MethodName:assertEquals:["choice1", it.next().getId()] @AT@ 1358 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@it.next().getId() @AT@ 1358 @LENGTH@ 9
------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.next().getId() @AT@ 1358 @LENGTH@ 2
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@it.next().getId() @AT@ 1368 @LENGTH@ 7


UPD FieldDeclaration@@private, String, [url="jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=true"] @TO@ private, String, [url="jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=true"] @AT@ 1238 @LENGTH@ 86
---UPD VariableDeclarationFragment@@url="jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=true" @TO@ url="jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=true" @AT@ 1253 @LENGTH@ 70
------UPD InfixExpression@@"jetty://http://0.0.0.0:" + getPort() + "/sync?synchronous=true" @TO@ "jetty://http://127.0.0.1:" + getPort() + "/sync?synchronous=true" @AT@ 1259 @LENGTH@ 64
---------UPD StringLiteral@@"jetty://http://0.0.0.0:" @TO@ "jetty://http://127.0.0.1:" @AT@ 1259 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertTrue("Wrong scope: " + result,url.contains("&scope=read%20write")) @TO@ MethodInvocation:assertTrue("Wrong scope: " + result,url.contains("scope=read%20write")) @AT@ 18124 @LENGTH@ 74
---UPD MethodInvocation@@assertTrue("Wrong scope: " + result,url.contains("&scope=read%20write")) @TO@ assertTrue("Wrong scope: " + result,url.contains("scope=read%20write")) @AT@ 18124 @LENGTH@ 73
------UPD SimpleName@@MethodName:assertTrue:["Wrong scope: " + result, url.contains("&scope=read%20write")] @TO@ MethodName:assertTrue:["Wrong scope: " + result, url.contains("scope=read%20write")] @AT@ 18124 @LENGTH@ 73
---------UPD MethodInvocation@@url.contains("&scope=read%20write") @TO@ url.contains("scope=read%20write") @AT@ 18161 @LENGTH@ 35
------------UPD SimpleName@@MethodName:contains:["&scope=read%20write"] @TO@ MethodName:contains:["scope=read%20write"] @AT@ 18165 @LENGTH@ 31
---------------UPD StringLiteral@@"&scope=read%20write" @TO@ "scope=read%20write" @AT@ 18174 @LENGTH@ 21


INS TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @TO@ MethodDeclaration@@public, void, MethodName:tearDown, ManagementClient managementClient, String containerId, Exception,  @AT@ 2889 @LENGTH@ 158
---MOV ExpressionStatement@@SuperMethodInvocation:super.tearDown(managementClient,containerId) @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @AT@ 2919 @LENGTH@ 46
---INS Block@@FinallyBody:{  remove(address1,managementClient);} @TO@ TryStatement@@try {  super.tearDown(managementClient,containerId);}  finally {  remove(address1,managementClient);} @AT@ 2980 @LENGTH@ 67
------INS ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @TO@ Block@@FinallyBody:{  remove(address1,managementClient);} @AT@ 2998 @LENGTH@ 35
---------MOV MethodInvocation@@remove(address1) @TO@ ExpressionStatement@@MethodInvocation:remove(address1,managementClient) @AT@ 2889 @LENGTH@ 16
------------UPD SimpleName@@MethodName:remove:[address1] @TO@ MethodName:remove:[address1, managementClient] @AT@ 2889 @LENGTH@ 16
---------------INS SimpleName@@managementClient @TO@ SimpleName@@MethodName:remove:[address1] @AT@ 3015 @LENGTH@ 16


UPD SwitchStatement@@switch (result.getEndReason()) {case SUCCESS:  LOG.info("Successfully finished {}",requestId);metrics.incrExecutorTotalSuccess();break;case CONTAINER_STOP_REQUESTED:LOG.warn("Unexpected CONTAINER_STOP_REQUEST for {}",requestId);break;case KILL_REQUESTED:LOG.info("Killed task {}",requestId);if (killtimerWatch.isRunning()) {killtimerWatch.stop();long elapsed=killtimerWatch.elapsed(TimeUnit.MILLISECONDS);LOG.info("Time to die for task {}",elapsed);}metrics.incrPreemptionTimeLost(runtimeWatch.elapsed(TimeUnit.MILLISECONDS));metrics.incrExecutorTotalKilled();break;case COMMUNICATION_FAILURE:LOG.info("Failed to run {} due to communication failure",requestId);metrics.incrExecutorTotalExecutionFailed();break;case TASK_ERROR:LOG.info("Failed to run {} due to task error",requestId);metrics.incrExecutorTotalExecutionFailed();break;} @TO@ switch (result.getEndReason()) {case SUCCESS:  LOG.info("Successfully finished {}",requestId);metrics.incrExecutorTotalSuccess();break;case CONTAINER_STOP_REQUESTED:LOG.warn("Unexpected CONTAINER_STOP_REQUEST for {}",requestId);break;case KILL_REQUESTED:LOG.info("Killed task {}",requestId);if (killtimerWatch.isRunning()) {killtimerWatch.stop();long elapsed=killtimerWatch.elapsedMillis();LOG.info("Time to die for task {}",elapsed);}metrics.incrPreemptionTimeLost(runtimeWatch.elapsedMillis());metrics.incrExecutorTotalKilled();break;case COMMUNICATION_FAILURE:LOG.info("Failed to run {} due to communication failure",requestId);metrics.incrExecutorTotalExecutionFailed();break;case TASK_ERROR:LOG.info("Failed to run {} due to task error",requestId);metrics.incrExecutorTotalExecutionFailed();break;} @AT@ 14616 @LENGTH@ 1193
---UPD IfStatement@@if (killtimerWatch.isRunning()) {  killtimerWatch.stop();  long elapsed=killtimerWatch.elapsed(TimeUnit.MILLISECONDS);  LOG.info("Time to die for task {}",elapsed);} @TO@ if (killtimerWatch.isRunning()) {  killtimerWatch.stop();  long elapsed=killtimerWatch.elapsedMillis();  LOG.info("Time to die for task {}",elapsed);} @AT@ 15088 @LENGTH@ 212
------UPD Block@@ThenBody:{  killtimerWatch.stop();  long elapsed=killtimerWatch.elapsed(TimeUnit.MILLISECONDS);  LOG.info("Time to die for task {}",elapsed);} @TO@ ThenBody:{  killtimerWatch.stop();  long elapsed=killtimerWatch.elapsedMillis();  LOG.info("Time to die for task {}",elapsed);} @AT@ 15120 @LENGTH@ 180
---------UPD VariableDeclarationStatement@@long elapsed=killtimerWatch.elapsed(TimeUnit.MILLISECONDS); @TO@ long elapsed=killtimerWatch.elapsedMillis(); @AT@ 15169 @LENGTH@ 61
------------UPD VariableDeclarationFragment@@elapsed=killtimerWatch.elapsed(TimeUnit.MILLISECONDS) @TO@ elapsed=killtimerWatch.elapsedMillis() @AT@ 15174 @LENGTH@ 55
---------------UPD MethodInvocation@@killtimerWatch.elapsed(TimeUnit.MILLISECONDS) @TO@ killtimerWatch.elapsedMillis() @AT@ 15184 @LENGTH@ 45
------------------UPD SimpleName@@MethodName:elapsed:[TimeUnit.MILLISECONDS] @TO@ MethodName:elapsedMillis:[] @AT@ 15199 @LENGTH@ 30
---------------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 15207 @LENGTH@ 21
------------------------DEL SimpleName@@TimeUnit @AT@ 15207 @LENGTH@ 8
------------------------DEL SimpleName@@MILLISECONDS @AT@ 15216 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:metrics.incrPreemptionTimeLost(runtimeWatch.elapsed(TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:metrics.incrPreemptionTimeLost(runtimeWatch.elapsedMillis()) @AT@ 15311 @LENGTH@ 76
------UPD MethodInvocation@@metrics.incrPreemptionTimeLost(runtimeWatch.elapsed(TimeUnit.MILLISECONDS)) @TO@ metrics.incrPreemptionTimeLost(runtimeWatch.elapsedMillis()) @AT@ 15311 @LENGTH@ 75
---------UPD SimpleName@@MethodName:incrPreemptionTimeLost:[runtimeWatch.elapsed(TimeUnit.MILLISECONDS)] @TO@ MethodName:incrPreemptionTimeLost:[runtimeWatch.elapsedMillis()] @AT@ 15319 @LENGTH@ 67
------------UPD MethodInvocation@@runtimeWatch.elapsed(TimeUnit.MILLISECONDS) @TO@ runtimeWatch.elapsedMillis() @AT@ 15342 @LENGTH@ 43
---------------UPD SimpleName@@MethodName:elapsed:[TimeUnit.MILLISECONDS] @TO@ MethodName:elapsedMillis:[] @AT@ 15355 @LENGTH@ 30
------------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 15363 @LENGTH@ 21
---------------------DEL SimpleName@@TimeUnit @AT@ 15363 @LENGTH@ 8
---------------------DEL SimpleName@@MILLISECONDS @AT@ 15372 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:fileID=JDBCStatsUtils.truncateRowId(fileID) @TO@ MethodInvocation:JDBCStatsUtils.validateRowId(fileID) @AT@ 5169 @LENGTH@ 46
---DEL Assignment@@fileID=JDBCStatsUtils.truncateRowId(fileID) @AT@ 5169 @LENGTH@ 45
------DEL SimpleName@@fileID @AT@ 5169 @LENGTH@ 6
------DEL Operator@@= @AT@ 5175 @LENGTH@ 1
------DEL MethodInvocation@@JDBCStatsUtils.truncateRowId(fileID) @AT@ 5178 @LENGTH@ 36
---INS MethodInvocation@@JDBCStatsUtils.validateRowId(fileID) @TO@ ExpressionStatement@@Assignment:fileID=JDBCStatsUtils.truncateRowId(fileID) @AT@ 5169 @LENGTH@ 36
------MOV SimpleName@@Name:JDBCStatsUtils @TO@ MethodInvocation@@JDBCStatsUtils.validateRowId(fileID) @AT@ 5178 @LENGTH@ 14
------MOV SimpleName@@MethodName:truncateRowId:[fileID] @TO@ MethodInvocation@@JDBCStatsUtils.validateRowId(fileID) @AT@ 5193 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @TO@ TypeDeclaration@@[@XmlRootElement(name="rest"), @XmlAccessorType(XmlAccessType.FIELD), public]RestDefinition, OptionalIdentifiedDefinition<RestDefinition> @AT@ 3024 @LENGTH@ 139
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @AT@ 3024 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @AT@ 3031 @LENGTH@ 4
---INS SimpleName@@MethodName:setSkipBindingOnErrorCode @TO@ MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @AT@ 3036 @LENGTH@ 25
---INS SingleVariableDeclaration@@Boolean skipBindingOnErrorCode @TO@ MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @AT@ 3062 @LENGTH@ 30
------INS SimpleType@@Boolean @TO@ SingleVariableDeclaration@@Boolean skipBindingOnErrorCode @AT@ 3062 @LENGTH@ 7
------INS SimpleName@@skipBindingOnErrorCode @TO@ SingleVariableDeclaration@@Boolean skipBindingOnErrorCode @AT@ 3070 @LENGTH@ 22
---INS ExpressionStatement@@Assignment:this.skipBindingOnErrorCode=skipBindingOnErrorCode @TO@ MethodDeclaration@@public, void, MethodName:setSkipBindingOnErrorCode, Boolean skipBindingOnErrorCode,  @AT@ 3104 @LENGTH@ 53
------INS Assignment@@this.skipBindingOnErrorCode=skipBindingOnErrorCode @TO@ ExpressionStatement@@Assignment:this.skipBindingOnErrorCode=skipBindingOnErrorCode @AT@ 3104 @LENGTH@ 52
---------INS FieldAccess@@this.skipBindingOnErrorCode @TO@ Assignment@@this.skipBindingOnErrorCode=skipBindingOnErrorCode @AT@ 3104 @LENGTH@ 27
------------INS ThisExpression@@this @TO@ FieldAccess@@this.skipBindingOnErrorCode @AT@ 3104 @LENGTH@ 4
------------INS SimpleName@@skipBindingOnErrorCode @TO@ FieldAccess@@this.skipBindingOnErrorCode @AT@ 3109 @LENGTH@ 22
---------INS Operator@@= @TO@ Assignment@@this.skipBindingOnErrorCode=skipBindingOnErrorCode @AT@ 3131 @LENGTH@ 1
---------INS SimpleName@@skipBindingOnErrorCode @TO@ Assignment@@this.skipBindingOnErrorCode=skipBindingOnErrorCode @AT@ 3134 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:Integer.valueOf(getDictionarySize(coder)) @TO@ MethodInvocation:getDictionarySize(coder) @AT@ 2349 @LENGTH@ 49
---DEL MethodInvocation@@Integer.valueOf(getDictionarySize(coder)) @AT@ 2356 @LENGTH@ 41
------DEL SimpleName@@Name:Integer @AT@ 2356 @LENGTH@ 7
------DEL SimpleName@@MethodName:valueOf:[getDictionarySize(coder)] @AT@ 2364 @LENGTH@ 33
---MOV MethodInvocation@@getDictionarySize(coder) @TO@ ReturnStatement@@MethodInvocation:Integer.valueOf(getDictionarySize(coder)) @AT@ 2372 @LENGTH@ 24


UPD IfStatement@@if ("dict".equals(qName)) {  PListNodeBuilder builder=pop();  if (peek() instanceof ArrayNodeBuilder) {    XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(builder.createNode());    ArrayNodeBuilder node=(ArrayNodeBuilder)peekNE();    node.addValue(config);  }} else {  if ("string".equals(qName)) {    peekNE().addValue(buffer.toString());  } else   if ("integer".equals(qName)) {    peekNE().addIntegerValue(buffer.toString());  } else   if ("real".equals(qName)) {    peekNE().addRealValue(buffer.toString());  } else   if ("true".equals(qName)) {    peekNE().addTrueValue();  } else   if ("false".equals(qName)) {    peekNE().addFalseValue();  } else   if ("data".equals(qName)) {    peekNE().addDataValue(buffer.toString());  } else   if ("date".equals(qName)) {    try {      peekNE().addDateValue(buffer.toString());    } catch (    IllegalArgumentException iex) {      getLogger().warn("Ignoring invalid date property " + buffer);    }  } else   if ("array".equals(qName)) {    ArrayNodeBuilder array=(ArrayNodeBuilder)pop();    peekNE().addList(array);  }  if (!(peek() instanceof ArrayNodeBuilder)) {    pop();  }} @TO@ if ("dict".equals(qName)) {  PListNodeBuilder builder=pop();  assert builder != null : "Stack was empty!";  if (peek() instanceof ArrayNodeBuilder) {    XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(builder.createNode());    ArrayNodeBuilder node=(ArrayNodeBuilder)peekNE();    node.addValue(config);  }} else {  if ("string".equals(qName)) {    peekNE().addValue(buffer.toString());  } else   if ("integer".equals(qName)) {    peekNE().addIntegerValue(buffer.toString());  } else   if ("real".equals(qName)) {    peekNE().addRealValue(buffer.toString());  } else   if ("true".equals(qName)) {    peekNE().addTrueValue();  } else   if ("false".equals(qName)) {    peekNE().addFalseValue();  } else   if ("data".equals(qName)) {    peekNE().addDataValue(buffer.toString());  } else   if ("date".equals(qName)) {    try {      peekNE().addDateValue(buffer.toString());    } catch (    IllegalArgumentException iex) {      getLogger().warn("Ignoring invalid date property " + buffer);    }  } else   if ("array".equals(qName)) {    ArrayNodeBuilder array=(ArrayNodeBuilder)pop();    peekNE().addList(array);  }  if (!(peek() instanceof ArrayNodeBuilder)) {    pop();  }} @AT@ 18039 @LENGTH@ 2442
---UPD Block@@ThenBody:{  PListNodeBuilder builder=pop();  if (peek() instanceof ArrayNodeBuilder) {    XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(builder.createNode());    ArrayNodeBuilder node=(ArrayNodeBuilder)peekNE();    node.addValue(config);  }} @TO@ ThenBody:{  PListNodeBuilder builder=pop();  assert builder != null : "Stack was empty!";  if (peek() instanceof ArrayNodeBuilder) {    XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(builder.createNode());    ArrayNodeBuilder node=(ArrayNodeBuilder)peekNE();    node.addValue(config);  }} @AT@ 18077 @LENGTH@ 592
------INS AssertStatement@@InfixExpression:builder != null, Msg-StringLiteral:"Stack was empty!" @TO@ Block@@ThenBody:{  PListNodeBuilder builder=pop();  if (peek() instanceof ArrayNodeBuilder) {    XMLPropertyListConfiguration config=new XMLPropertyListConfiguration(builder.createNode());    ArrayNodeBuilder node=(ArrayNodeBuilder)peekNE();    node.addValue(config);  }} @AT@ 18247 @LENGTH@ 44
---------INS InfixExpression@@builder != null @TO@ AssertStatement@@InfixExpression:builder != null, Msg-StringLiteral:"Stack was empty!" @AT@ 18254 @LENGTH@ 15
------------INS SimpleName@@builder @TO@ InfixExpression@@builder != null @AT@ 18254 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@builder != null @AT@ 18261 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@builder != null @AT@ 18265 @LENGTH@ 4
---------INS StringLiteral@@"Stack was empty!" @TO@ AssertStatement@@InfixExpression:builder != null, Msg-StringLiteral:"Stack was empty!" @AT@ 18272 @LENGTH@ 18


UPD TryStatement@@try {  try {    if (SimpleMessageListenerContainer.this.autoDeclare) {      SimpleMessageListenerContainer.this.redeclareElementsIfNecessary();    }    this.consumer.start();    this.start.countDown();  } catch (  QueuesNotAvailableException e) {    if (SimpleMessageListenerContainer.this.missingQueuesFatal) {      throw e;    } else {      this.start.countDown();      handleStartupFailure(this.consumer.getBackOffExecution());      throw e;    }  }catch (  FatalListenerStartupException ex) {    throw ex;  }catch (  Throwable t) {    this.start.countDown();    handleStartupFailure(this.consumer.getBackOffExecution());    throw t;  }  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory());  }  boolean continuable=false;  while (isActive(this.consumer) || this.consumer.hasDelivery() || continuable) {    try {      continuable=receiveAndExecute(this.consumer) && !isChannelTransacted();      if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {        if (continuable) {          if (isActive(this.consumer)) {            consecutiveIdles=0;            if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {              considerAddingAConsumer();              consecutiveMessages=0;            }          }        } else {          consecutiveMessages=0;          if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {            considerStoppingAConsumer(this.consumer);            consecutiveIdles=0;          }        }      }    } catch (    ListenerExecutionFailedException ex) {      if (ex.getCause() instanceof NoSuchMethodException) {        throw new FatalListenerExecutionException("Invalid listener",ex);      }    }catch (    AmqpRejectAndDontRequeueException rejectEx) {    }  }} catch (InterruptedException e) {  logger.debug("Consumer thread interrupted, processing stopped.");  Thread.currentThread().interrupt();  aborted=true;}catch (QueuesNotAvailableException ex) {  if (SimpleMessageListenerContainer.this.missingQueuesFatal) {    logger.error("Consumer received fatal exception on startup",ex);    this.startupException=ex;    aborted=true;  }}catch (FatalListenerStartupException ex) {  logger.error("Consumer received fatal exception on startup",ex);  this.startupException=ex;  aborted=true;}catch (FatalListenerExecutionException ex) {  logger.error("Consumer received fatal exception during processing",ex);  aborted=true;}catch (ShutdownSignalException e) {  if (RabbitUtils.isNormalShutdown(e)) {    if (logger.isDebugEnabled()) {      logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage());    }  } else {    this.logConsumerException(e);  }}catch (AmqpIOException e) {  if (e.getCause() instanceof IOException && e.getCause().getCause() instanceof ShutdownSignalException && e.getCause().getCause().getMessage().contains("in exclusive use")) {    logger.warn(e.getCause().getCause().toString());  } else {    this.logConsumerException(e);  }}catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;}catch (Throwable t) {  if (isActive()) {    this.logConsumerException(t);  }} finally {  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.unRegisterConsumerChannel();  }} @TO@ try {  try {    if (SimpleMessageListenerContainer.this.autoDeclare) {      SimpleMessageListenerContainer.this.redeclareElementsIfNecessary();    }    this.consumer.start();    this.start.countDown();  } catch (  QueuesNotAvailableException e) {    if (SimpleMessageListenerContainer.this.missingQueuesFatal) {      throw e;    } else {      this.start.countDown();      handleStartupFailure(this.consumer.getBackOffExecution());      throw e;    }  }catch (  FatalListenerStartupException ex) {    throw ex;  }catch (  Throwable t) {    this.start.countDown();    handleStartupFailure(this.consumer.getBackOffExecution());    throw t;  }  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory());  }  while (isActive(this.consumer) || this.consumer.hasDelivery()) {    try {      boolean receivedOk=receiveAndExecute(this.consumer);      if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {        if (receivedOk) {          if (isActive(this.consumer)) {            consecutiveIdles=0;            if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {              considerAddingAConsumer();              consecutiveMessages=0;            }          }        } else {          consecutiveMessages=0;          if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {            considerStoppingAConsumer(this.consumer);            consecutiveIdles=0;          }        }      }    } catch (    ListenerExecutionFailedException ex) {      if (ex.getCause() instanceof NoSuchMethodException) {        throw new FatalListenerExecutionException("Invalid listener",ex);      }    }catch (    AmqpRejectAndDontRequeueException rejectEx) {    }  }} catch (InterruptedException e) {  logger.debug("Consumer thread interrupted, processing stopped.");  Thread.currentThread().interrupt();  aborted=true;}catch (QueuesNotAvailableException ex) {  if (SimpleMessageListenerContainer.this.missingQueuesFatal) {    logger.error("Consumer received fatal exception on startup",ex);    this.startupException=ex;    aborted=true;  }}catch (FatalListenerStartupException ex) {  logger.error("Consumer received fatal exception on startup",ex);  this.startupException=ex;  aborted=true;}catch (FatalListenerExecutionException ex) {  logger.error("Consumer received fatal exception during processing",ex);  aborted=true;}catch (ShutdownSignalException e) {  if (RabbitUtils.isNormalShutdown(e)) {    if (logger.isDebugEnabled()) {      logger.debug("Consumer received Shutdown Signal, processing stopped: " + e.getMessage());    }  } else {    this.logConsumerException(e);  }}catch (AmqpIOException e) {  if (e.getCause() instanceof IOException && e.getCause().getCause() instanceof ShutdownSignalException && e.getCause().getCause().getMessage().contains("in exclusive use")) {    logger.warn(e.getCause().getCause().toString());  } else {    this.logConsumerException(e);  }}catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;}catch (Throwable t) {  if (isActive()) {    this.logConsumerException(t);  }} finally {  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.unRegisterConsumerChannel();  }} @AT@ 40479 @LENGTH@ 4517
---DEL VariableDeclarationStatement@@boolean continuable=false; @AT@ 41614 @LENGTH@ 28
------DEL PrimitiveType@@boolean @AT@ 41614 @LENGTH@ 7
------DEL VariableDeclarationFragment@@continuable=false @AT@ 41622 @LENGTH@ 19
---------DEL SimpleName@@continuable @AT@ 41622 @LENGTH@ 11
---------DEL BooleanLiteral@@false @AT@ 41636 @LENGTH@ 5
---UPD WhileStatement@@while (isActive(this.consumer) || this.consumer.hasDelivery() || continuable) {  try {    continuable=receiveAndExecute(this.consumer) && !isChannelTransacted();    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (continuable) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @TO@ while (isActive(this.consumer) || this.consumer.hasDelivery()) {  try {    boolean receivedOk=receiveAndExecute(this.consumer);    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (receivedOk) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @AT@ 41647 @LENGTH@ 1358
------UPD InfixExpression@@isActive(this.consumer) || this.consumer.hasDelivery() || continuable @TO@ isActive(this.consumer) || this.consumer.hasDelivery() @AT@ 41654 @LENGTH@ 69
---------DEL SimpleName@@continuable @AT@ 41712 @LENGTH@ 11
------UPD Block@@WhileBody:{  try {    continuable=receiveAndExecute(this.consumer) && !isChannelTransacted();    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (continuable) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @TO@ WhileBody:{  try {    boolean receivedOk=receiveAndExecute(this.consumer);    if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {      if (receivedOk) {        if (isActive(this.consumer)) {          consecutiveIdles=0;          if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {            considerAddingAConsumer();            consecutiveMessages=0;          }        }      } else {        consecutiveMessages=0;        if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {          considerStoppingAConsumer(this.consumer);          consecutiveIdles=0;        }      }    }  } catch (  ListenerExecutionFailedException ex) {    if (ex.getCause() instanceof NoSuchMethodException) {      throw new FatalListenerExecutionException("Invalid listener",ex);    }  }catch (  AmqpRejectAndDontRequeueException rejectEx) {  }} @AT@ 41725 @LENGTH@ 1280
---------UPD TryStatement@@try {  continuable=receiveAndExecute(this.consumer) && !isChannelTransacted();  if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {    if (continuable) {      if (isActive(this.consumer)) {        consecutiveIdles=0;        if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {          considerAddingAConsumer();          consecutiveMessages=0;        }      }    } else {      consecutiveMessages=0;      if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {        considerStoppingAConsumer(this.consumer);        consecutiveIdles=0;      }    }  }} catch (ListenerExecutionFailedException ex) {  if (ex.getCause() instanceof NoSuchMethodException) {    throw new FatalListenerExecutionException("Invalid listener",ex);  }}catch (AmqpRejectAndDontRequeueException rejectEx) {} @TO@ try {  boolean receivedOk=receiveAndExecute(this.consumer);  if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {    if (receivedOk) {      if (isActive(this.consumer)) {        consecutiveIdles=0;        if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {          considerAddingAConsumer();          consecutiveMessages=0;        }      }    } else {      consecutiveMessages=0;      if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {        considerStoppingAConsumer(this.consumer);        consecutiveIdles=0;      }    }  }} catch (ListenerExecutionFailedException ex) {  if (ex.getCause() instanceof NoSuchMethodException) {    throw new FatalListenerExecutionException("Invalid listener",ex);  }}catch (AmqpRejectAndDontRequeueException rejectEx) {} @AT@ 41732 @LENGTH@ 1267
------------INS VariableDeclarationStatement@@boolean receivedOk=receiveAndExecute(this.consumer); @TO@ TryStatement@@try {  continuable=receiveAndExecute(this.consumer) && !isChannelTransacted();  if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {    if (continuable) {      if (isActive(this.consumer)) {        consecutiveIdles=0;        if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {          considerAddingAConsumer();          consecutiveMessages=0;        }      }    } else {      consecutiveMessages=0;      if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {        considerStoppingAConsumer(this.consumer);        consecutiveIdles=0;      }    }  }} catch (ListenerExecutionFailedException ex) {  if (ex.getCause() instanceof NoSuchMethodException) {    throw new FatalListenerExecutionException("Invalid listener",ex);  }}catch (AmqpRejectAndDontRequeueException rejectEx) {} @AT@ 41613 @LENGTH@ 54
---------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean receivedOk=receiveAndExecute(this.consumer); @AT@ 41613 @LENGTH@ 7
---------------INS VariableDeclarationFragment@@receivedOk=receiveAndExecute(this.consumer) @TO@ VariableDeclarationStatement@@boolean receivedOk=receiveAndExecute(this.consumer); @AT@ 41621 @LENGTH@ 45
------------------INS SimpleName@@receivedOk @TO@ VariableDeclarationFragment@@receivedOk=receiveAndExecute(this.consumer) @AT@ 41621 @LENGTH@ 10
------------------MOV MethodInvocation@@receiveAndExecute(this.consumer) @TO@ VariableDeclarationFragment@@receivedOk=receiveAndExecute(this.consumer) @AT@ 41814 @LENGTH@ 32
------------DEL ExpressionStatement@@Assignment:continuable=receiveAndExecute(this.consumer) && !isChannelTransacted() @AT@ 41800 @LENGTH@ 73
---------------DEL Assignment@@continuable=receiveAndExecute(this.consumer) && !isChannelTransacted() @AT@ 41800 @LENGTH@ 72
------------------DEL SimpleName@@continuable @AT@ 41800 @LENGTH@ 11
------------------DEL Operator@@= @AT@ 41811 @LENGTH@ 1
------------------DEL InfixExpression@@receiveAndExecute(this.consumer) && !isChannelTransacted() @AT@ 41814 @LENGTH@ 58
---------------------DEL Operator@@&& @AT@ 41846 @LENGTH@ 2
---------------------DEL PrefixExpression@@!isChannelTransacted() @AT@ 41850 @LENGTH@ 22
------------------------DEL Operator@@! @AT@ 41850 @LENGTH@ 1
------------------------DEL MethodInvocation@@MethodName:isChannelTransacted:[] @AT@ 41851 @LENGTH@ 21
------------UPD IfStatement@@if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {  if (continuable) {    if (isActive(this.consumer)) {      consecutiveIdles=0;      if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {        considerAddingAConsumer();        consecutiveMessages=0;      }    }  } else {    consecutiveMessages=0;    if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {      considerStoppingAConsumer(this.consumer);      consecutiveIdles=0;    }  }} @TO@ if (SimpleMessageListenerContainer.this.maxConcurrentConsumers != null) {  if (receivedOk) {    if (isActive(this.consumer)) {      consecutiveIdles=0;      if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {        considerAddingAConsumer();        consecutiveMessages=0;      }    }  } else {    consecutiveMessages=0;    if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {      considerStoppingAConsumer(this.consumer);      consecutiveIdles=0;    }  }} @AT@ 41880 @LENGTH@ 623
---------------UPD Block@@ThenBody:{  if (continuable) {    if (isActive(this.consumer)) {      consecutiveIdles=0;      if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {        considerAddingAConsumer();        consecutiveMessages=0;      }    }  } else {    consecutiveMessages=0;    if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {      considerStoppingAConsumer(this.consumer);      consecutiveIdles=0;    }  }} @TO@ ThenBody:{  if (receivedOk) {    if (isActive(this.consumer)) {      consecutiveIdles=0;      if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {        considerAddingAConsumer();        consecutiveMessages=0;      }    }  } else {    consecutiveMessages=0;    if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {      considerStoppingAConsumer(this.consumer);      consecutiveIdles=0;    }  }} @AT@ 41952 @LENGTH@ 551
------------------UPD IfStatement@@if (continuable) {  if (isActive(this.consumer)) {    consecutiveIdles=0;    if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {      considerAddingAConsumer();      consecutiveMessages=0;    }  }} else {  consecutiveMessages=0;  if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {    considerStoppingAConsumer(this.consumer);    consecutiveIdles=0;  }} @TO@ if (receivedOk) {  if (isActive(this.consumer)) {    consecutiveIdles=0;    if (consecutiveMessages++ > SimpleMessageListenerContainer.this.consecutiveActiveTrigger) {      considerAddingAConsumer();      consecutiveMessages=0;    }  }} else {  consecutiveMessages=0;  if (consecutiveIdles++ > SimpleMessageListenerContainer.this.consecutiveIdleTrigger) {    considerStoppingAConsumer(this.consumer);    consecutiveIdles=0;  }} @AT@ 41961 @LENGTH@ 534
---------------------UPD SimpleName@@continuable @TO@ receivedOk @AT@ 41965 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("#choice7##log5##to6#",ids) @TO@ MethodInvocation:assertEquals("#choice7##log4##to6#",ids) @AT@ 3838 @LENGTH@ 42
---UPD MethodInvocation@@assertEquals("#choice7##log5##to6#",ids) @TO@ assertEquals("#choice7##log4##to6#",ids) @AT@ 3838 @LENGTH@ 41
------UPD SimpleName@@MethodName:assertEquals:["#choice7##log5##to6#", ids] @TO@ MethodName:assertEquals:["#choice7##log4##to6#", ids] @AT@ 3838 @LENGTH@ 41
---------UPD StringLiteral@@"#choice7##log5##to6#" @TO@ "#choice7##log4##to6#" @AT@ 3851 @LENGTH@ 22


MOV FieldDeclaration@@private, int, [maxCacheSize=10000] @TO@ TypeDeclaration@@[public]LRUCache, [Map<K,V>, EvictionListener<K,V>, Serializable] @AT@ 1707 @LENGTH@ 33


UPD ReturnStatement@@MethodInvocation:HttpHelper.readResponseBodyFromServletRequest(request,httpMessage.getExchange()) @TO@ MethodInvocation:HttpHelper.readRequestBodyFromServletRequest(request,httpMessage.getExchange()) @AT@ 20811 @LENGTH@ 89
---UPD MethodInvocation@@HttpHelper.readResponseBodyFromServletRequest(request,httpMessage.getExchange()) @TO@ HttpHelper.readRequestBodyFromServletRequest(request,httpMessage.getExchange()) @AT@ 20818 @LENGTH@ 81
------UPD SimpleName@@MethodName:readResponseBodyFromServletRequest:[request, httpMessage.getExchange()] @TO@ MethodName:readRequestBodyFromServletRequest:[request, httpMessage.getExchange()] @AT@ 20829 @LENGTH@ 70


MOV FieldDeclaration@@protected, String, [resourceUri] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="flatpack",consumerClass=FlatpackConsumer.class,label="transformation"), public]FlatpackEndpoint, DefaultPollingEndpoint @AT@ 2276 @LENGTH@ 29


INS MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @TO@ TypeDeclaration@@[@SpringApplicationConfiguration(classes=Application.class), public]AuthorizationCodeProviderTests, AbstractAuthorizationCodeProviderTests @AT@ 1420 @LENGTH@ 315
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1420 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1427 @LENGTH@ 4
---INS SimpleName@@MethodName:testPostToProtectedResource @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1432 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1469 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:approveAccessTokenGrant("http://anywhere",true) @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1483 @LENGTH@ 49
------INS MethodInvocation@@approveAccessTokenGrant("http://anywhere",true) @TO@ ExpressionStatement@@MethodInvocation:approveAccessTokenGrant("http://anywhere",true) @AT@ 1483 @LENGTH@ 48
---------INS SimpleName@@MethodName:approveAccessTokenGrant:["http://anywhere", true] @TO@ MethodInvocation@@approveAccessTokenGrant("http://anywhere",true) @AT@ 1483 @LENGTH@ 48
------------INS StringLiteral@@"http://anywhere" @TO@ SimpleName@@MethodName:approveAccessTokenGrant:["http://anywhere", true] @AT@ 1507 @LENGTH@ 17
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:approveAccessTokenGrant:["http://anywhere", true] @AT@ 1526 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotNull(context.getAccessToken()) @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1535 @LENGTH@ 40
------INS MethodInvocation@@assertNotNull(context.getAccessToken()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(context.getAccessToken()) @AT@ 1535 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertNotNull:[context.getAccessToken()] @TO@ MethodInvocation@@assertNotNull(context.getAccessToken()) @AT@ 1535 @LENGTH@ 39
------------INS MethodInvocation@@context.getAccessToken() @TO@ SimpleName@@MethodName:assertNotNull:[context.getAccessToken()] @AT@ 1549 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getAccessToken() @AT@ 1549 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@context.getAccessToken() @AT@ 1557 @LENGTH@ 16
---INS VariableDeclarationStatement@@LinkedMultiValueMap<String,String> form=new LinkedMultiValueMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1578 @LENGTH@ 71
------INS ParameterizedType@@LinkedMultiValueMap<String,String> @TO@ VariableDeclarationStatement@@LinkedMultiValueMap<String,String> form=new LinkedMultiValueMap<>(); @AT@ 1578 @LENGTH@ 35
---------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 1578 @LENGTH@ 19
---------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 1598 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 1606 @LENGTH@ 6
------INS VariableDeclarationFragment@@form=new LinkedMultiValueMap<>() @TO@ VariableDeclarationStatement@@LinkedMultiValueMap<String,String> form=new LinkedMultiValueMap<>(); @AT@ 1614 @LENGTH@ 34
---------INS SimpleName@@form @TO@ VariableDeclarationFragment@@form=new LinkedMultiValueMap<>() @AT@ 1614 @LENGTH@ 4
---------INS ClassInstanceCreation@@LinkedMultiValueMap<>[] @TO@ VariableDeclarationFragment@@form=new LinkedMultiValueMap<>() @AT@ 1621 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1621 @LENGTH@ 3
------------INS ParameterizedType@@LinkedMultiValueMap<> @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1625 @LENGTH@ 21
---------------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<> @AT@ 1625 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.CREATED,http.postForStatus("/",form).getStatusCode()) @TO@ MethodDeclaration@@public, void, MethodName:testPostToProtectedResource, Exception,  @AT@ 1652 @LENGTH@ 80
------INS MethodInvocation@@assertEquals(HttpStatus.CREATED,http.postForStatus("/",form).getStatusCode()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.CREATED,http.postForStatus("/",form).getStatusCode()) @AT@ 1652 @LENGTH@ 79
---------INS SimpleName@@MethodName:assertEquals:[HttpStatus.CREATED, http.postForStatus("/",form).getStatusCode()] @TO@ MethodInvocation@@assertEquals(HttpStatus.CREATED,http.postForStatus("/",form).getStatusCode()) @AT@ 1652 @LENGTH@ 79
------------INS QualifiedName@@HttpStatus.CREATED @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.CREATED, http.postForStatus("/",form).getStatusCode()] @AT@ 1665 @LENGTH@ 18
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.CREATED @AT@ 1665 @LENGTH@ 10
---------------INS SimpleName@@CREATED @TO@ QualifiedName@@HttpStatus.CREATED @AT@ 1676 @LENGTH@ 7
------------INS MethodInvocation@@http.postForStatus("/",form).getStatusCode() @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.CREATED, http.postForStatus("/",form).getStatusCode()] @AT@ 1685 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:postForStatus:["/", form] @TO@ MethodInvocation@@http.postForStatus("/",form).getStatusCode() @AT@ 1685 @LENGTH@ 29
------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:postForStatus:["/", form] @AT@ 1704 @LENGTH@ 3
------------------INS SimpleName@@form @TO@ MethodInvocation@@MethodName:postForStatus:["/", form] @AT@ 1709 @LENGTH@ 4
---------------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.postForStatus("/",form).getStatusCode() @AT@ 1685 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@http.postForStatus("/",form).getStatusCode() @AT@ 1715 @LENGTH@ 15


UPD VariableDeclarationStatement@@String expected="{\n" + "  \"name\" : \"Camel\"" + "\n}"; @TO@ String expected=String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()); @AT@ 2550 @LENGTH@ 107
---UPD VariableDeclarationFragment@@expected="{\n" + "  \"name\" : \"Camel\"" + "\n}" @TO@ expected=String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2557 @LENGTH@ 99
------INS MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @TO@ VariableDeclarationFragment@@expected="{\n" + "  \"name\" : \"Camel\"" + "\n}" @AT@ 2568 @LENGTH@ 93
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2568 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @TO@ MethodInvocation@@String.format("{%s  \"name\" : \"Camel\"%s}",System.lineSeparator(),System.lineSeparator()) @AT@ 2575 @LENGTH@ 86
------------INS StringLiteral@@"{%s  \"name\" : \"Camel\"%s}" @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2582 @LENGTH@ 30
------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2614 @LENGTH@ 22
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2614 @LENGTH@ 6
---------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2621 @LENGTH@ 15
------------INS MethodInvocation@@System.lineSeparator() @TO@ SimpleName@@MethodName:format:["{%s  \"name\" : \"Camel\"%s}", System.lineSeparator(), System.lineSeparator()] @AT@ 2638 @LENGTH@ 22
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2638 @LENGTH@ 6
---------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 2645 @LENGTH@ 15
------DEL InfixExpression@@"{\n" + "  \"name\" : \"Camel\"" + "\n}" @AT@ 2568 @LENGTH@ 88
---------DEL StringLiteral@@"{\n" @AT@ 2568 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 2573 @LENGTH@ 1
---------DEL StringLiteral@@"  \"name\" : \"Camel\"" @AT@ 2600 @LENGTH@ 24
---------DEL StringLiteral@@"\n}" @AT@ 2651 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new SemanticException("Operator " + operator.getName() + " (ID: "+ operator.getIdentifier()+ ") is null.") @TO@ ClassInstanceCreation:new SemanticException("Operator is null.") @AT@ 17589 @LENGTH@ 125
---UPD ClassInstanceCreation@@SemanticException["Operator " + operator.getName() + " (ID: "+ operator.getIdentifier()+ ") is null."] @TO@ SemanticException["Operator is null."] @AT@ 17595 @LENGTH@ 118
------DEL InfixExpression@@"Operator " + operator.getName() + " (ID: "+ operator.getIdentifier()+ ") is null." @AT@ 17617 @LENGTH@ 95
---------DEL StringLiteral@@"Operator " @AT@ 17617 @LENGTH@ 11
---------DEL Operator@@+ @AT@ 17628 @LENGTH@ 1
---------DEL MethodInvocation@@operator.getName() @AT@ 17631 @LENGTH@ 18
------------DEL SimpleName@@Name:operator @AT@ 17631 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getName:[] @AT@ 17640 @LENGTH@ 9
---------DEL StringLiteral@@" (ID: " @AT@ 17652 @LENGTH@ 8
---------DEL MethodInvocation@@operator.getIdentifier() @AT@ 17673 @LENGTH@ 24
------------DEL SimpleName@@Name:operator @AT@ 17673 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getIdentifier:[] @AT@ 17682 @LENGTH@ 15
---------DEL StringLiteral@@") is null." @AT@ 17700 @LENGTH@ 12
------INS StringLiteral@@"Operator is null." @TO@ ClassInstanceCreation@@SemanticException["Operator " + operator.getName() + " (ID: "+ operator.getIdentifier()+ ") is null."] @AT@ 17663 @LENGTH@ 19


UPD FieldDeclaration@@private, long, [minAge=0] @TO@ private, long, [minAge] @AT@ 1804 @LENGTH@ 24
---UPD VariableDeclarationFragment@@minAge=0 @TO@ minAge @AT@ 1817 @LENGTH@ 10
------DEL NumberLiteral@@0 @AT@ 1826 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new UDFArgumentTypeException(1,"Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments") @TO@ ClassInstanceCreation:new UDFArgumentTypeException(1,"Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments") @AT@ 4385 @LENGTH@ 170
---UPD ClassInstanceCreation@@UDFArgumentTypeException[1, "Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments"] @TO@ UDFArgumentTypeException[1, "Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments"] @AT@ 4391 @LENGTH@ 163
------UPD InfixExpression@@"Only primitive type arguments are accepted but " + arguments[2].getTypeName() + " is passed. as second arguments" @TO@ "Only primitive type arguments are accepted but " + arguments[1].getTypeName() + " is passed. as second arguments" @AT@ 4431 @LENGTH@ 122
---------UPD MethodInvocation@@arguments[2].getTypeName() @TO@ arguments[1].getTypeName() @AT@ 4491 @LENGTH@ 26
------------UPD ArrayAccess@@arguments[2] @TO@ arguments[1] @AT@ 4491 @LENGTH@ 12
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 4501 @LENGTH@ 1


INS TryStatement@@try {  sliceBuf.position(newPos);  sliceBuf.limit(newLimit);} catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @TO@ MethodDeclaration@@public, DiskRange, MethodName:slice, long offset, long end,  @AT@ 105006 @LENGTH@ 446
---MOV ExpressionStatement@@MethodInvocation:sliceBuf.position(newPos) @TO@ TryStatement@@try {  sliceBuf.position(newPos);  sliceBuf.limit(newLimit);} catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 104981 @LENGTH@ 26
---MOV ExpressionStatement@@MethodInvocation:sliceBuf.limit(newLimit) @TO@ TryStatement@@try {  sliceBuf.position(newPos);  sliceBuf.limit(newLimit);} catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 105014 @LENGTH@ 25
---INS CatchClause@@catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @TO@ TryStatement@@try {  sliceBuf.position(newPos);  sliceBuf.limit(newLimit);} catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 105089 @LENGTH@ 363
------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 105096 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 105096 @LENGTH@ 9
---------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 105106 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()) @TO@ CatchClause@@catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 105119 @LENGTH@ 286
---------INS MethodInvocation@@LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()) @AT@ 105119 @LENGTH@ 285
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()) @AT@ 105119 @LENGTH@ 3
------------INS SimpleName@@MethodName:error:["Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()] @TO@ MethodInvocation@@LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()) @AT@ 105123 @LENGTH@ 281
---------------INS InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @TO@ SimpleName@@MethodName:error:["Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass()] @AT@ 105129 @LENGTH@ 274
------------------INS InfixExpression@@"Failed to slice buffer chunk with range" + " [" @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105129 @LENGTH@ 48
---------------------INS StringLiteral@@"Failed to slice buffer chunk with range" @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" @AT@ 105129 @LENGTH@ 41
---------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" @AT@ 105170 @LENGTH@ 1
---------------------INS StringLiteral@@" [" @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" @AT@ 105173 @LENGTH@ 4
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105177 @LENGTH@ 1
------------------INS FieldAccess@@this.offset @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105180 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.offset @AT@ 105180 @LENGTH@ 4
---------------------INS SimpleName@@offset @TO@ FieldAccess@@this.offset @AT@ 105185 @LENGTH@ 6
------------------INS StringLiteral@@", " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105194 @LENGTH@ 4
------------------INS FieldAccess@@this.end @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105201 @LENGTH@ 8
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.end @AT@ 105201 @LENGTH@ 4
---------------------INS SimpleName@@end @TO@ FieldAccess@@this.end @AT@ 105206 @LENGTH@ 3
------------------INS StringLiteral@@"), position: " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105224 @LENGTH@ 15
------------------INS MethodInvocation@@chunk.position() @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105242 @LENGTH@ 16
---------------------INS SimpleName@@Name:chunk @TO@ MethodInvocation@@chunk.position() @AT@ 105242 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:position:[] @TO@ MethodInvocation@@chunk.position() @AT@ 105248 @LENGTH@ 10
------------------INS StringLiteral@@" limit: " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105261 @LENGTH@ 10
------------------INS MethodInvocation@@chunk.limit() @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105274 @LENGTH@ 13
---------------------INS SimpleName@@Name:chunk @TO@ MethodInvocation@@chunk.limit() @AT@ 105274 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:limit:[] @TO@ MethodInvocation@@chunk.limit() @AT@ 105280 @LENGTH@ 7
------------------INS StringLiteral@@", " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105290 @LENGTH@ 4
------------------INS ParenthesizedExpression@@(chunk.isDirect() ? "direct" : "array") @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105309 @LENGTH@ 39
---------------------INS ConditionalExpression@@chunk.isDirect() ? "direct" : "array" @TO@ ParenthesizedExpression@@(chunk.isDirect() ? "direct" : "array") @AT@ 105310 @LENGTH@ 37
------------------------INS MethodInvocation@@chunk.isDirect() @TO@ ConditionalExpression@@chunk.isDirect() ? "direct" : "array" @AT@ 105310 @LENGTH@ 16
---------------------------INS SimpleName@@Name:chunk @TO@ MethodInvocation@@chunk.isDirect() @AT@ 105310 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:isDirect:[] @TO@ MethodInvocation@@chunk.isDirect() @AT@ 105316 @LENGTH@ 10
------------------------INS StringLiteral@@"direct" @TO@ ConditionalExpression@@chunk.isDirect() ? "direct" : "array" @AT@ 105329 @LENGTH@ 8
------------------------INS StringLiteral@@"array" @TO@ ConditionalExpression@@chunk.isDirect() ? "direct" : "array" @AT@ 105340 @LENGTH@ 7
------------------INS StringLiteral@@"; to [" @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105351 @LENGTH@ 8
------------------INS SimpleName@@offset @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105362 @LENGTH@ 6
------------------INS StringLiteral@@", " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105371 @LENGTH@ 4
------------------INS SimpleName@@end @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105378 @LENGTH@ 3
------------------INS StringLiteral@@") " @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105384 @LENGTH@ 4
------------------INS MethodInvocation@@t.getClass() @TO@ InfixExpression@@"Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass() @AT@ 105391 @LENGTH@ 12
---------------------INS SimpleName@@Name:t @TO@ MethodInvocation@@t.getClass() @AT@ 105391 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@t.getClass() @AT@ 105393 @LENGTH@ 10
------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(t) @TO@ CatchClause@@catch (Throwable t) {  LOG.error("Failed to slice buffer chunk with range" + " [" + this.offset + ", "+ this.end+ "), position: "+ chunk.position()+ " limit: "+ chunk.limit()+ ", "+ (chunk.isDirect() ? "direct" : "array")+ "; to ["+ offset+ ", "+ end+ ") "+ t.getClass());  throw new RuntimeException(t);} @AT@ 105414 @LENGTH@ 30
---------INS ClassInstanceCreation@@RuntimeException[t] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(t) @AT@ 105420 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[t] @AT@ 105420 @LENGTH@ 3
------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[t] @AT@ 105424 @LENGTH@ 16
------------INS SimpleName@@t @TO@ ClassInstanceCreation@@RuntimeException[t] @AT@ 105441 @LENGTH@ 1


UPD SwitchStatement@@switch (messageType) {case Bytes:  BytesMessage bytesMessage=session.createBytesMessage();byte[] bytesToWrite=typeConverter.convertTo(byte[].class,payload);bytesMessage.writeBytes(bytesToWrite);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map objMap=(Map)payload;for (final Map.Entry entry : (Set<Map.Entry>)objMap.entrySet()) {mapMessage.setObject(entry.getKey().toString(),entry.getValue());}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();String convertedText=typeConverter.convertTo(String.class,payload);textMessage.setText(convertedText);answer=textMessage;break;case Stream:StreamMessage streamMessage=session.createStreamMessage();Collection collection=(Collection)payload;for (final Object obj : collection) {streamMessage.writeObject(obj);}answer=streamMessage;break;case Message:if (allowNullBody && payload == null) {answer=session.createMessage();} else if (payload != null) {throw new JMSException("Unsupported message body type " + ObjectHelper.classCanonicalName(payload));} else {throw new JMSException("Null body is not allowed");}default :break;} @TO@ switch (messageType) {case Bytes:  BytesMessage bytesMessage=session.createBytesMessage();byte[] bytesToWrite=typeConverter.convertTo(byte[].class,payload);bytesMessage.writeBytes(bytesToWrite);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map objMap=(Map)payload;for (final Map.Entry entry : (Set<Map.Entry>)objMap.entrySet()) {mapMessage.setObject(entry.getKey().toString(),entry.getValue());}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();String convertedText=typeConverter.convertTo(String.class,payload);textMessage.setText(convertedText);answer=textMessage;break;case Stream:StreamMessage streamMessage=session.createStreamMessage();Collection collection=(Collection)payload;for (final Object obj : collection) {streamMessage.writeObject(obj);}answer=streamMessage;break;case Message:if (allowNullBody && payload == null) {answer=session.createMessage();} else if (payload != null) {throw new JMSException("Unsupported message body type " + ObjectHelper.classCanonicalName(payload));} else {throw new JMSException("Null body is not allowed");}break;default :break;} @AT@ 7186 @LENGTH@ 1878
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (messageType) {case Bytes:  BytesMessage bytesMessage=session.createBytesMessage();byte[] bytesToWrite=typeConverter.convertTo(byte[].class,payload);bytesMessage.writeBytes(bytesToWrite);answer=bytesMessage;break;case Map:MapMessage mapMessage=session.createMapMessage();Map objMap=(Map)payload;for (final Map.Entry entry : (Set<Map.Entry>)objMap.entrySet()) {mapMessage.setObject(entry.getKey().toString(),entry.getValue());}answer=mapMessage;break;case Object:ObjectMessage objectMessage=session.createObjectMessage();objectMessage.setObject((Serializable)payload);answer=objectMessage;break;case Text:TextMessage textMessage=session.createTextMessage();String convertedText=typeConverter.convertTo(String.class,payload);textMessage.setText(convertedText);answer=textMessage;break;case Stream:StreamMessage streamMessage=session.createStreamMessage();Collection collection=(Collection)payload;for (final Object obj : collection) {streamMessage.writeObject(obj);}answer=streamMessage;break;case Message:if (allowNullBody && payload == null) {answer=session.createMessage();} else if (payload != null) {throw new JMSException("Unsupported message body type " + ObjectHelper.classCanonicalName(payload));} else {throw new JMSException("Null body is not allowed");}default :break;} @AT@ 9031 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:props.put("metadata.broker.list","localhost:9092") @TO@ MethodInvocation:props.put("metadata.broker.list","localhost:" + getKarfkaPort()) @AT@ 1787 @LENGTH@ 52
---UPD MethodInvocation@@props.put("metadata.broker.list","localhost:9092") @TO@ props.put("metadata.broker.list","localhost:" + getKarfkaPort()) @AT@ 1787 @LENGTH@ 51
------UPD SimpleName@@MethodName:put:["metadata.broker.list", "localhost:9092"] @TO@ MethodName:put:["metadata.broker.list", "localhost:" + getKarfkaPort()] @AT@ 1793 @LENGTH@ 45
---------DEL StringLiteral@@"localhost:9092" @AT@ 1821 @LENGTH@ 16
---------INS InfixExpression@@"localhost:" + getKarfkaPort() @TO@ SimpleName@@MethodName:put:["metadata.broker.list", "localhost:9092"] @AT@ 1844 @LENGTH@ 30
------------INS StringLiteral@@"localhost:" @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1844 @LENGTH@ 12
------------INS Operator@@+ @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1856 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getKarfkaPort:[] @TO@ InfixExpression@@"localhost:" + getKarfkaPort() @AT@ 1859 @LENGTH@ 15


DEL ExpressionStatement@@MethodInvocation:System.out.println(partNames) @AT@ 5962 @LENGTH@ 30
---DEL MethodInvocation@@System.out.println(partNames) @AT@ 5962 @LENGTH@ 29
------DEL QualifiedName@@Name:System.out @AT@ 5962 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[partNames] @AT@ 5973 @LENGTH@ 18
---------DEL SimpleName@@partNames @AT@ 5981 @LENGTH@ 9


UPD TypeDeclaration@@TestUtils,  @TO@ [final]TestUtils,  @AT@ 1005 @LENGTH@ 1268
---INS Modifier@@final @TO@ TypeDeclaration@@TestUtils,  @AT@ 999 @LENGTH@ 5


UPD TryStatement@@try {  return new RedirectView(connectSupport.buildOAuthUrl(connectionFactory,request,parameters));} catch (Exception e) {  logger.error("Exception while building authorization URL: ",e);  return redirect(URIBuilder.fromUri(signInUrl).queryParam("error","provider").build().toString());} @TO@ try {  ConnectionFactory<?> connectionFactory=connectionFactoryLocator.getConnectionFactory(providerId);  MultiValueMap<String,String> parameters=new LinkedMultiValueMap<String,String>();  preSignIn(connectionFactory,parameters,request);  return new RedirectView(connectSupport.buildOAuthUrl(connectionFactory,request,parameters));} catch (Exception e) {  logger.error("Exception while building authorization URL: ",e);  return redirect(URIBuilder.fromUri(signInUrl).queryParam("error","provider").build().toString());} @AT@ 8178 @LENGTH@ 303
---MOV VariableDeclarationStatement@@ConnectionFactory<?> connectionFactory=connectionFactoryLocator.getConnectionFactory(providerId); @TO@ TryStatement@@try {  return new RedirectView(connectSupport.buildOAuthUrl(connectionFactory,request,parameters));} catch (Exception e) {  logger.error("Exception while building authorization URL: ",e);  return redirect(URIBuilder.fromUri(signInUrl).queryParam("error","provider").build().toString());} @AT@ 7935 @LENGTH@ 99
---MOV VariableDeclarationStatement@@MultiValueMap<String,String> parameters=new LinkedMultiValueMap<String,String>(); @TO@ TryStatement@@try {  return new RedirectView(connectSupport.buildOAuthUrl(connectionFactory,request,parameters));} catch (Exception e) {  logger.error("Exception while building authorization URL: ",e);  return redirect(URIBuilder.fromUri(signInUrl).queryParam("error","provider").build().toString());} @AT@ 8037 @LENGTH@ 85
---MOV ExpressionStatement@@MethodInvocation:preSignIn(connectionFactory,parameters,request) @TO@ TryStatement@@try {  return new RedirectView(connectSupport.buildOAuthUrl(connectionFactory,request,parameters));} catch (Exception e) {  logger.error("Exception while building authorization URL: ",e);  return redirect(URIBuilder.fromUri(signInUrl).queryParam("error","provider").build().toString());} @AT@ 8125 @LENGTH@ 50


INS FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @TO@ TypeDeclaration@@[public]AxiomHandlerTest,  @AT@ 2685 @LENGTH@ 195
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @AT@ 2685 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @AT@ 2693 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @AT@ 2700 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @AT@ 2706 @LENGTH@ 6
---INS VariableDeclarationFragment@@XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @TO@ FieldDeclaration@@private, static, final, String, [XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>"] @AT@ 2713 @LENGTH@ 166
------INS SimpleName@@XML_6_SNIPPET @TO@ VariableDeclarationFragment@@XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @AT@ 2713 @LENGTH@ 13
------INS InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @TO@ VariableDeclarationFragment@@XML_6_SNIPPET="<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @AT@ 2729 @LENGTH@ 150
---------INS StringLiteral@@"<?xml version='1.0' encoding='UTF-8'?>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @AT@ 2729 @LENGTH@ 40
---------INS Operator@@+ @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @AT@ 2769 @LENGTH@ 1
---------INS StringLiteral@@"<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @TO@ InfixExpression@@"<?xml version='1.0' encoding='UTF-8'?>" + "<parent xmlns='parent-namespace'><c:first-sibling xmlns:c='child-namespace' /><second-sibling /></parent>" @AT@ 2772 @LENGTH@ 107


UPD TypeDeclaration@@[private]BridgePropertiesParser, [PropertiesParser] @TO@ [private, final]BridgePropertiesParser, [PropertiesParser] @AT@ 9917 @LENGTH@ 1264
---INS Modifier@@final @TO@ TypeDeclaration@@[private]BridgePropertiesParser, [PropertiesParser] @AT@ 9925 @LENGTH@ 5


INS MethodDeclaration@@private, voidMethodName:StringHelper,  @TO@ TypeDeclaration@@[public]StringHelper,  @AT@ 885 @LENGTH@ 53
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:StringHelper,  @AT@ 885 @LENGTH@ 7
---INS SimpleName@@MethodName:StringHelper @TO@ MethodDeclaration@@private, voidMethodName:StringHelper,  @AT@ 893 @LENGTH@ 12


DEL VariableDeclarationStatement@@int ITERATIONS=200; @AT@ 4111 @LENGTH@ 21
---DEL PrimitiveType@@int @AT@ 4111 @LENGTH@ 3
---DEL VariableDeclarationFragment@@ITERATIONS=200 @AT@ 4115 @LENGTH@ 16
------DEL SimpleName@@ITERATIONS @AT@ 4115 @LENGTH@ 10
------DEL NumberLiteral@@200 @AT@ 4128 @LENGTH@ 3


UPD IfStatement@@if (buf != null) {  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }} @TO@ if (buf != null) {  try {    int pos=buf.bytesBefore((byte)config.getStartByte());    if (pos >= 0) {      ByteBuf msg=buf.readerIndex(pos + 1).slice();      LOG.debug("Message ends with length {}",msg.readableBytes());      return config.isProduceString() ? asString(msg) : asByteArray(msg);    } else {      throw new DecoderException("Did not find start byte " + (int)config.getStartByte());    }  }  finally {    buf.release();  }} @AT@ 2233 @LENGTH@ 489
---UPD Block@@ThenBody:{  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }} @TO@ ThenBody:{  try {    int pos=buf.bytesBefore((byte)config.getStartByte());    if (pos >= 0) {      ByteBuf msg=buf.readerIndex(pos + 1).slice();      LOG.debug("Message ends with length {}",msg.readableBytes());      return config.isProduceString() ? asString(msg) : asByteArray(msg);    } else {      throw new DecoderException("Did not find start byte " + (int)config.getStartByte());    }  }  finally {    buf.release();  }} @AT@ 2250 @LENGTH@ 472
------INS TryStatement@@try {  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }}  finally {  buf.release();} @TO@ Block@@ThenBody:{  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }} @AT@ 2264 @LENGTH@ 567
---------MOV VariableDeclarationStatement@@int pos=buf.bytesBefore((byte)config.getStartByte()); @TO@ TryStatement@@try {  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }}  finally {  buf.release();} @AT@ 2264 @LENGTH@ 56
---------MOV IfStatement@@if (pos >= 0) {  ByteBuf msg=buf.readerIndex(pos + 1).slice();  LOG.debug("Message ends with length {}",msg.readableBytes());  return config.isProduceString() ? asString(msg) : asByteArray(msg);} else {  throw new DecoderException("Did not find start byte " + (int)config.getStartByte());} @TO@ TryStatement@@try {  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }}  finally {  buf.release();} @AT@ 2333 @LENGTH@ 379
---------INS Block@@FinallyBody:{  buf.release();} @TO@ TryStatement@@try {  int pos=buf.bytesBefore((byte)config.getStartByte());  if (pos >= 0) {    ByteBuf msg=buf.readerIndex(pos + 1).slice();    LOG.debug("Message ends with length {}",msg.readableBytes());    return config.isProduceString() ? asString(msg) : asByteArray(msg);  } else {    throw new DecoderException("Did not find start byte " + (int)config.getStartByte());  }}  finally {  buf.release();} @AT@ 2785 @LENGTH@ 46
------------INS ExpressionStatement@@MethodInvocation:buf.release() @TO@ Block@@FinallyBody:{  buf.release();} @AT@ 2803 @LENGTH@ 14
---------------INS MethodInvocation@@buf.release() @TO@ ExpressionStatement@@MethodInvocation:buf.release() @AT@ 2803 @LENGTH@ 13
------------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.release() @AT@ 2803 @LENGTH@ 3
------------------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@buf.release() @AT@ 2807 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @TO@ TypeDeclaration@@[public]RepositoryCollectionResourceMappingUnitTests,  @AT@ 3258 @LENGTH@ 390
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3258 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3265 @LENGTH@ 4
---INS SimpleName@@MethodName:usesDomainTypeFromRepositoryMetadata @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3270 @LENGTH@ 36
---INS VariableDeclarationStatement@@RepositoryMetadata metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
; @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3314 @LENGTH@ 171
------INS SimpleType@@RepositoryMetadata @TO@ VariableDeclarationStatement@@RepositoryMetadata metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
; @AT@ 3314 @LENGTH@ 18
------INS VariableDeclarationFragment@@metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
 @TO@ VariableDeclarationStatement@@RepositoryMetadata metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
; @AT@ 3333 @LENGTH@ 151
---------INS SimpleName@@metadata @TO@ VariableDeclarationFragment@@metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
 @AT@ 3333 @LENGTH@ 8
---------INS ClassInstanceCreation@@DefaultRepositoryMetadata[PersonRepository.class] @TO@ VariableDeclarationFragment@@metadata=new DefaultRepositoryMetadata(PersonRepository.class){
  @Override public Class<?> getDomainType(){
    return Object.class;
  }
}
 @AT@ 3344 @LENGTH@ 140
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[PersonRepository.class] @AT@ 3344 @LENGTH@ 3
------------INS SimpleType@@DefaultRepositoryMetadata @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[PersonRepository.class] @AT@ 3348 @LENGTH@ 25
------------INS TypeLiteral@@PersonRepository.class @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[PersonRepository.class] @AT@ 3374 @LENGTH@ 22
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DefaultRepositoryMetadata[PersonRepository.class] @AT@ 3398 @LENGTH@ 86
---------------INS MethodDeclaration@@public, Class<?>, MethodName:getDomainType,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3417 @LENGTH@ 63
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDomainType,  @AT@ 3417 @LENGTH@ 6
------------------INS ParameterizedType@@Class<?> @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDomainType,  @AT@ 3424 @LENGTH@ 8
---------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3424 @LENGTH@ 5
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3430 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getDomainType @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDomainType,  @AT@ 3433 @LENGTH@ 13
------------------INS ReturnStatement@@TypeLiteral:Object.class @TO@ MethodDeclaration@@public, Class<?>, MethodName:getDomainType,  @AT@ 3455 @LENGTH@ 20
---------------------INS TypeLiteral@@Object.class @TO@ ReturnStatement@@TypeLiteral:Object.class @AT@ 3462 @LENGTH@ 12
---INS VariableDeclarationStatement@@RepositoryCollectionResourceMapping mapping=new RepositoryCollectionResourceMapping(metadata); @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3489 @LENGTH@ 96
------INS SimpleType@@RepositoryCollectionResourceMapping @TO@ VariableDeclarationStatement@@RepositoryCollectionResourceMapping mapping=new RepositoryCollectionResourceMapping(metadata); @AT@ 3489 @LENGTH@ 35
------INS VariableDeclarationFragment@@mapping=new RepositoryCollectionResourceMapping(metadata) @TO@ VariableDeclarationStatement@@RepositoryCollectionResourceMapping mapping=new RepositoryCollectionResourceMapping(metadata); @AT@ 3525 @LENGTH@ 59
---------INS SimpleName@@mapping @TO@ VariableDeclarationFragment@@mapping=new RepositoryCollectionResourceMapping(metadata) @AT@ 3525 @LENGTH@ 7
---------INS ClassInstanceCreation@@RepositoryCollectionResourceMapping[metadata] @TO@ VariableDeclarationFragment@@mapping=new RepositoryCollectionResourceMapping(metadata) @AT@ 3535 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@RepositoryCollectionResourceMapping[metadata] @AT@ 3535 @LENGTH@ 3
------------INS SimpleType@@RepositoryCollectionResourceMapping @TO@ ClassInstanceCreation@@RepositoryCollectionResourceMapping[metadata] @AT@ 3539 @LENGTH@ 35
------------INS SimpleName@@metadata @TO@ ClassInstanceCreation@@RepositoryCollectionResourceMapping[metadata] @AT@ 3575 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(mapping.getPath(),is(new Path("/objects"))) @TO@ MethodDeclaration@@public, void, MethodName:usesDomainTypeFromRepositoryMetadata,  @AT@ 3589 @LENGTH@ 56
------INS MethodInvocation@@assertThat(mapping.getPath(),is(new Path("/objects"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(mapping.getPath(),is(new Path("/objects"))) @AT@ 3589 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[mapping.getPath(), is(new Path("/objects"))] @TO@ MethodInvocation@@assertThat(mapping.getPath(),is(new Path("/objects"))) @AT@ 3589 @LENGTH@ 55
------------INS MethodInvocation@@mapping.getPath() @TO@ SimpleName@@MethodName:assertThat:[mapping.getPath(), is(new Path("/objects"))] @AT@ 3600 @LENGTH@ 17
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.getPath() @AT@ 3600 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@mapping.getPath() @AT@ 3608 @LENGTH@ 9
------------INS MethodInvocation@@is(new Path("/objects")) @TO@ SimpleName@@MethodName:assertThat:[mapping.getPath(), is(new Path("/objects"))] @AT@ 3619 @LENGTH@ 24
---------------INS SimpleName@@MethodName:is:[new Path("/objects")] @TO@ MethodInvocation@@is(new Path("/objects")) @AT@ 3619 @LENGTH@ 24
------------------INS ClassInstanceCreation@@Path["/objects"] @TO@ SimpleName@@MethodName:is:[new Path("/objects")] @AT@ 3622 @LENGTH@ 20
---------------------INS New@@new @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3622 @LENGTH@ 3
---------------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3626 @LENGTH@ 4
---------------------INS StringLiteral@@"/objects" @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3631 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[new Path("/objects")] @TO@ MethodInvocation@@is(new Path("/objects")) @AT@ 3619 @LENGTH@ 24
------------------INS ClassInstanceCreation@@Path["/objects"] @TO@ SimpleName@@MethodName:is:[new Path("/objects")] @AT@ 3622 @LENGTH@ 20
---------------------INS New@@new @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3622 @LENGTH@ 3
---------------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3626 @LENGTH@ 4
---------------------INS StringLiteral@@"/objects" @TO@ ClassInstanceCreation@@Path["/objects"] @AT@ 3631 @LENGTH@ 10


UPD TypeDeclaration@@[public]CassandraUtils,  @TO@ [public, final]CassandraUtils,  @AT@ 1186 @LENGTH@ 4388
---INS Modifier@@final @TO@ TypeDeclaration@@[public]CassandraUtils,  @AT@ 1554 @LENGTH@ 5


INS MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @TO@ TypeDeclaration@@[public]TestWebHCatE2e,  @AT@ 3710 @LENGTH@ 404
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3710 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3718 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3725 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3725 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3729 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3737 @LENGTH@ 6
---INS SimpleName@@MethodName:jsonStringToSortedMap @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3745 @LENGTH@ 21
---INS SingleVariableDeclaration@@String jsonStr @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3767 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String jsonStr @AT@ 3767 @LENGTH@ 6
------INS SimpleName@@jsonStr @TO@ SingleVariableDeclaration@@String jsonStr @AT@ 3774 @LENGTH@ 7
---INS VariableDeclarationStatement@@Map<String,String> sortedMap; @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3789 @LENGTH@ 30
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> sortedMap; @AT@ 3789 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3789 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3793 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3801 @LENGTH@ 6
------INS VariableDeclarationFragment@@sortedMap @TO@ VariableDeclarationStatement@@Map<String,String> sortedMap; @AT@ 3809 @LENGTH@ 9
---------INS SimpleName@@sortedMap @TO@ VariableDeclarationFragment@@sortedMap @AT@ 3809 @LENGTH@ 9
---INS TryStatement@@try {  sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){  });} catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 3824 @LENGTH@ 263
------INS ExpressionStatement@@Assignment:sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @TO@ TryStatement@@try {  sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){  });} catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @AT@ 3836 @LENGTH@ 111
---------INS Assignment@@sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @TO@ ExpressionStatement@@Assignment:sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3836 @LENGTH@ 110
------------INS SimpleName@@sortedMap @TO@ Assignment@@sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3836 @LENGTH@ 9
------------INS Operator@@= @TO@ Assignment@@sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3845 @LENGTH@ 1
------------INS MethodInvocation@@(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @TO@ Assignment@@sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3848 @LENGTH@ 98
---------------INS ParenthesizedExpression@@(new ObjectMapper()) @TO@ MethodInvocation@@(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3848 @LENGTH@ 20
------------------INS ClassInstanceCreation@@ObjectMapper[] @TO@ ParenthesizedExpression@@(new ObjectMapper()) @AT@ 3849 @LENGTH@ 18
---------------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3849 @LENGTH@ 3
---------------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3853 @LENGTH@ 12
---------------INS SimpleName@@MethodName:readValue:[jsonStr, new TypeReference<TreeMap<String,String>>(){
}
] @TO@ MethodInvocation@@(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){
}
) @AT@ 3869 @LENGTH@ 77
------------------INS SimpleName@@jsonStr @TO@ SimpleName@@MethodName:readValue:[jsonStr, new TypeReference<TreeMap<String,String>>(){
}
] @AT@ 3879 @LENGTH@ 7
------------------INS ClassInstanceCreation@@TypeReference<TreeMap<String,String>>[] @TO@ SimpleName@@MethodName:readValue:[jsonStr, new TypeReference<TreeMap<String,String>>(){
}
] @AT@ 3898 @LENGTH@ 47
---------------------INS New@@new @TO@ ClassInstanceCreation@@TypeReference<TreeMap<String,String>>[] @AT@ 3898 @LENGTH@ 3
---------------------INS ParameterizedType@@TypeReference<TreeMap<String,String>> @TO@ ClassInstanceCreation@@TypeReference<TreeMap<String,String>>[] @AT@ 3902 @LENGTH@ 38
------------------------INS SimpleType@@TypeReference @TO@ ParameterizedType@@TypeReference<TreeMap<String,String>> @AT@ 3902 @LENGTH@ 13
------------------------INS ParameterizedType@@TreeMap<String,String> @TO@ ParameterizedType@@TypeReference<TreeMap<String,String>> @AT@ 3916 @LENGTH@ 23
---------------------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 3916 @LENGTH@ 7
---------------------------INS SimpleType@@String @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 3924 @LENGTH@ 6
---------------------------INS SimpleType@@String @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 3932 @LENGTH@ 6
---------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@TypeReference<TreeMap<String,String>>[] @AT@ 3943 @LENGTH@ 2
------INS CatchClause@@catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @TO@ TryStatement@@try {  sortedMap=(new ObjectMapper()).readValue(jsonStr,new TypeReference<TreeMap<String,String>>(){  });} catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @AT@ 3954 @LENGTH@ 133
---------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @AT@ 3961 @LENGTH@ 12
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3961 @LENGTH@ 9
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3971 @LENGTH@ 2
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Exception converting json string to sorted map " + ex,ex) @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeException("Exception converting json string to sorted map " + ex,ex);} @AT@ 3983 @LENGTH@ 98
------------INS ClassInstanceCreation@@RuntimeException["Exception converting json string to sorted map " + ex, ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Exception converting json string to sorted map " + ex,ex) @AT@ 3989 @LENGTH@ 91
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Exception converting json string to sorted map " + ex, ex] @AT@ 3989 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Exception converting json string to sorted map " + ex, ex] @AT@ 3993 @LENGTH@ 16
---------------INS InfixExpression@@"Exception converting json string to sorted map " + ex @TO@ ClassInstanceCreation@@RuntimeException["Exception converting json string to sorted map " + ex, ex] @AT@ 4021 @LENGTH@ 54
------------------INS StringLiteral@@"Exception converting json string to sorted map " @TO@ InfixExpression@@"Exception converting json string to sorted map " + ex @AT@ 4021 @LENGTH@ 49
------------------INS Operator@@+ @TO@ InfixExpression@@"Exception converting json string to sorted map " + ex @AT@ 4070 @LENGTH@ 1
------------------INS SimpleName@@ex @TO@ InfixExpression@@"Exception converting json string to sorted map " + ex @AT@ 4073 @LENGTH@ 2
---------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeException["Exception converting json string to sorted map " + ex, ex] @AT@ 4077 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:sortedMap @TO@ MethodDeclaration@@private, static, Map<String,String>, MethodName:jsonStringToSortedMap, String jsonStr,  @AT@ 4093 @LENGTH@ 17
------INS SimpleName@@sortedMap @TO@ ReturnStatement@@SimpleName:sortedMap @AT@ 4100 @LENGTH@ 9


UPD IfStatement@@if (dataFormatName != null) {  return routeContext.getCamelContext().resolveDataFormat(dataFormatName);} @TO@ if (getDataFormatName() != null) {  return routeContext.getCamelContext().resolveDataFormat(getDataFormatName());} @AT@ 4251 @LENGTH@ 124
---UPD InfixExpression@@dataFormatName != null @TO@ getDataFormatName() != null @AT@ 4255 @LENGTH@ 22
------DEL SimpleName@@dataFormatName @AT@ 4255 @LENGTH@ 14
------INS MethodInvocation@@MethodName:getDataFormatName:[] @TO@ InfixExpression@@dataFormatName != null @AT@ 4339 @LENGTH@ 19
---UPD Block@@ThenBody:{  return routeContext.getCamelContext().resolveDataFormat(dataFormatName);} @TO@ ThenBody:{  return routeContext.getCamelContext().resolveDataFormat(getDataFormatName());} @AT@ 4279 @LENGTH@ 96
------UPD ReturnStatement@@MethodInvocation:routeContext.getCamelContext().resolveDataFormat(dataFormatName) @TO@ MethodInvocation:routeContext.getCamelContext().resolveDataFormat(getDataFormatName()) @AT@ 4293 @LENGTH@ 72
---------UPD MethodInvocation@@routeContext.getCamelContext().resolveDataFormat(dataFormatName) @TO@ routeContext.getCamelContext().resolveDataFormat(getDataFormatName()) @AT@ 4300 @LENGTH@ 64
------------UPD SimpleName@@MethodName:resolveDataFormat:[dataFormatName] @TO@ MethodName:resolveDataFormat:[getDataFormatName()] @AT@ 4331 @LENGTH@ 33
---------------DEL SimpleName@@dataFormatName @AT@ 4349 @LENGTH@ 14
---------------INS MethodInvocation@@MethodName:getDataFormatName:[] @TO@ SimpleName@@MethodName:resolveDataFormat:[dataFormatName] @AT@ 4438 @LENGTH@ 19


UPD MethodDeclaration@@protected, SalesforceException, MethodName:createRestException, ContentExchange request,  @TO@ protected, SalesforceException, MethodName:createRestException, ContentExchange request, String reason,  @AT@ 15227 @LENGTH@ 759
---INS SingleVariableDeclaration@@String reason @TO@ MethodDeclaration@@protected, SalesforceException, MethodName:createRestException, ContentExchange request,  @AT@ 15302 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String reason @AT@ 15302 @LENGTH@ 6
------INS SimpleName@@reason @TO@ SingleVariableDeclaration@@String reason @AT@ 15309 @LENGTH@ 6


UPD TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  Message old=exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  exchange.setOut(msg);} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,true);  } else {    old.setBody(newBody);    if (!exchange.hasOut()) {      exchange.setOut(exchange.getIn());    }  }} catch (Exception e) {  exchange.setException(e);} @AT@ 1836 @LENGTH@ 450
---UPD VariableDeclarationStatement@@Message old=exchange.getIn(); @TO@ Message old=out ? exchange.getOut() : exchange.getIn(); @AT@ 1929 @LENGTH@ 31
------UPD VariableDeclarationFragment@@old=exchange.getIn() @TO@ old=out ? exchange.getOut() : exchange.getIn() @AT@ 1937 @LENGTH@ 22
---------DEL MethodInvocation@@exchange.getIn() @AT@ 1943 @LENGTH@ 16
---------INS ConditionalExpression@@out ? exchange.getOut() : exchange.getIn() @TO@ VariableDeclarationFragment@@old=exchange.getIn() @AT@ 2033 @LENGTH@ 42
------------INS SimpleName@@out @TO@ ConditionalExpression@@out ? exchange.getOut() : exchange.getIn() @AT@ 2033 @LENGTH@ 3
------------INS MethodInvocation@@exchange.getOut() @TO@ ConditionalExpression@@out ? exchange.getOut() : exchange.getIn() @AT@ 2039 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 2039 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 2048 @LENGTH@ 8
------------INS MethodInvocation@@exchange.getIn() @TO@ ConditionalExpression@@out ? exchange.getOut() : exchange.getIn() @AT@ 2059 @LENGTH@ 16
---------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 1943 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 1952 @LENGTH@ 7
---INS VariableDeclarationStatement@@boolean out=exchange.hasOut(); @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  Message old=exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  exchange.setOut(msg);} catch (Exception e) {  exchange.setException(e);} @AT@ 1974 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean out=exchange.hasOut(); @AT@ 1974 @LENGTH@ 7
------INS VariableDeclarationFragment@@out=exchange.hasOut() @TO@ VariableDeclarationStatement@@boolean out=exchange.hasOut(); @AT@ 1982 @LENGTH@ 23
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=exchange.hasOut() @AT@ 1982 @LENGTH@ 3
---------INS MethodInvocation@@exchange.hasOut() @TO@ VariableDeclarationFragment@@out=exchange.hasOut() @AT@ 1988 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 1988 @LENGTH@ 8
------------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 1997 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:exchange.setOut(msg) @AT@ 2185 @LENGTH@ 21
---INS VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  Message old=exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  exchange.setOut(msg);} catch (Exception e) {  exchange.setException(e);} @AT@ 2271 @LENGTH@ 68
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @AT@ 2271 @LENGTH@ 7
------INS VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @TO@ VariableDeclarationStatement@@boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class)); @AT@ 2279 @LENGTH@ 59
---------INS SimpleName@@copyNeeded @TO@ VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @AT@ 2279 @LENGTH@ 10
---------INS PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @TO@ VariableDeclarationFragment@@copyNeeded=!(old.getClass().equals(DefaultMessage.class)) @AT@ 2292 @LENGTH@ 46
------------INS Operator@@! @TO@ PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @AT@ 2292 @LENGTH@ 1
------------INS ParenthesizedExpression@@(old.getClass().equals(DefaultMessage.class)) @TO@ PrefixExpression@@!(old.getClass().equals(DefaultMessage.class)) @AT@ 2293 @LENGTH@ 45
---------------INS MethodInvocation@@old.getClass().equals(DefaultMessage.class) @TO@ ParenthesizedExpression@@(old.getClass().equals(DefaultMessage.class)) @AT@ 2294 @LENGTH@ 43
------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2294 @LENGTH@ 14
------------------INS SimpleName@@Name:old @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2294 @LENGTH@ 3
------------------INS SimpleName@@MethodName:equals:[DefaultMessage.class] @TO@ MethodInvocation@@old.getClass().equals(DefaultMessage.class) @AT@ 2309 @LENGTH@ 28
---------------------INS TypeLiteral@@DefaultMessage.class @TO@ SimpleName@@MethodName:equals:[DefaultMessage.class] @AT@ 2316 @LENGTH@ 20
---INS IfStatement@@if (copyNeeded) {  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} else {  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  Message old=exchange.getIn();  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  exchange.setOut(msg);} catch (Exception e) {  exchange.setException(e);} @AT@ 2353 @LENGTH@ 579
------INS SimpleName@@copyNeeded @TO@ IfStatement@@if (copyNeeded) {  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} else {  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @AT@ 2357 @LENGTH@ 10
------INS Block@@ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} @TO@ IfStatement@@if (copyNeeded) {  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} else {  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @AT@ 2369 @LENGTH@ 274
---------MOV VariableDeclarationStatement@@Message msg=new DefaultMessage(); @TO@ Block@@ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} @AT@ 2072 @LENGTH@ 35
---------MOV ExpressionStatement@@MethodInvocation:msg.copyFrom(old) @TO@ Block@@ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} @AT@ 2120 @LENGTH@ 18
---------MOV ExpressionStatement@@MethodInvocation:msg.setBody(newBody) @TO@ Block@@ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} @AT@ 2151 @LENGTH@ 21
---------INS ExpressionStatement@@MethodInvocation:ExchangeHelper.replaceMessage(exchange,msg,true) @TO@ Block@@ThenBody:{  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} @AT@ 2578 @LENGTH@ 51
------------INS MethodInvocation@@ExchangeHelper.replaceMessage(exchange,msg,true) @TO@ ExpressionStatement@@MethodInvocation:ExchangeHelper.replaceMessage(exchange,msg,true) @AT@ 2578 @LENGTH@ 50
---------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.replaceMessage(exchange,msg,true) @AT@ 2578 @LENGTH@ 14
---------------INS SimpleName@@MethodName:replaceMessage:[exchange, msg, true] @TO@ MethodInvocation@@ExchangeHelper.replaceMessage(exchange,msg,true) @AT@ 2593 @LENGTH@ 35
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:replaceMessage:[exchange, msg, true] @AT@ 2608 @LENGTH@ 8
------------------INS SimpleName@@msg @TO@ SimpleName@@MethodName:replaceMessage:[exchange, msg, true] @AT@ 2618 @LENGTH@ 3
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:replaceMessage:[exchange, msg, true] @AT@ 2623 @LENGTH@ 4
------INS Block@@ElseBody:{  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @TO@ IfStatement@@if (copyNeeded) {  Message msg=new DefaultMessage();  msg.copyFrom(old);  msg.setBody(newBody);  ExchangeHelper.replaceMessage(exchange,msg,true);} else {  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @AT@ 2649 @LENGTH@ 283
---------INS ExpressionStatement@@MethodInvocation:old.setBody(newBody) @TO@ Block@@ElseBody:{  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @AT@ 2731 @LENGTH@ 21
------------INS MethodInvocation@@old.setBody(newBody) @TO@ ExpressionStatement@@MethodInvocation:old.setBody(newBody) @AT@ 2731 @LENGTH@ 20
---------------INS SimpleName@@Name:old @TO@ MethodInvocation@@old.setBody(newBody) @AT@ 2731 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setBody:[newBody] @TO@ MethodInvocation@@old.setBody(newBody) @AT@ 2735 @LENGTH@ 16
------------------INS SimpleName@@newBody @TO@ SimpleName@@MethodName:setBody:[newBody] @AT@ 2743 @LENGTH@ 7
---------INS IfStatement@@if (!exchange.hasOut()) {  exchange.setOut(exchange.getIn());} @TO@ Block@@ElseBody:{  old.setBody(newBody);  if (!exchange.hasOut()) {    exchange.setOut(exchange.getIn());  }} @AT@ 2820 @LENGTH@ 98
------------INS PrefixExpression@@!exchange.hasOut() @TO@ IfStatement@@if (!exchange.hasOut()) {  exchange.setOut(exchange.getIn());} @AT@ 2824 @LENGTH@ 18
---------------INS Operator@@! @TO@ PrefixExpression@@!exchange.hasOut() @AT@ 2824 @LENGTH@ 1
---------------INS MethodInvocation@@exchange.hasOut() @TO@ PrefixExpression@@!exchange.hasOut() @AT@ 2825 @LENGTH@ 17
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 2825 @LENGTH@ 8
------------------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 2834 @LENGTH@ 8
------------INS Block@@ThenBody:{  exchange.setOut(exchange.getIn());} @TO@ IfStatement@@if (!exchange.hasOut()) {  exchange.setOut(exchange.getIn());} @AT@ 2844 @LENGTH@ 74
---------------INS ExpressionStatement@@MethodInvocation:exchange.setOut(exchange.getIn()) @TO@ Block@@ThenBody:{  exchange.setOut(exchange.getIn());} @AT@ 2866 @LENGTH@ 34
------------------MOV MethodInvocation@@exchange.setOut(msg) @TO@ ExpressionStatement@@MethodInvocation:exchange.setOut(exchange.getIn()) @AT@ 2185 @LENGTH@ 20
---------------------UPD SimpleName@@MethodName:setOut:[msg] @TO@ MethodName:setOut:[exchange.getIn()] @AT@ 2194 @LENGTH@ 11
------------------------DEL SimpleName@@msg @AT@ 2201 @LENGTH@ 3
------------------------INS MethodInvocation@@exchange.getIn() @TO@ SimpleName@@MethodName:setOut:[msg] @AT@ 2882 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 2882 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 2891 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:b").delay(3000).setBody(constant("B")) @TO@ MethodInvocation:from("direct:b").delay(4000).setBody(constant("B")) @AT@ 2664 @LENGTH@ 52
---UPD MethodInvocation@@from("direct:b").delay(3000).setBody(constant("B")) @TO@ from("direct:b").delay(4000).setBody(constant("B")) @AT@ 2664 @LENGTH@ 51
------UPD MethodInvocation@@MethodName:delay:[3000] @TO@ MethodName:delay:[4000] @AT@ 2664 @LENGTH@ 28
---------UPD NumberLiteral@@3000 @TO@ 4000 @AT@ 2687 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:config.setDirectoryName(remaining) @AT@ 2088 @LENGTH@ 35
---DEL MethodInvocation@@config.setDirectoryName(remaining) @AT@ 2088 @LENGTH@ 34
------DEL SimpleName@@Name:config @AT@ 2088 @LENGTH@ 6
------DEL SimpleName@@MethodName:setDirectoryName:[remaining] @AT@ 2095 @LENGTH@ 27
---------DEL SimpleName@@remaining @AT@ 2112 @LENGTH@ 9


UPD IfStatement@@if (jaxb != null) {  Class<?> clazz=null;  if (type != null) {    String typeName=type.endsWith("[]") ? type.substring(0,type.length() - 2) : type;    clazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),jaxb,"context",jc);  }  if (context.getRestConfiguration().getDataFormatProperties() != null) {    IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties());  }  setAdditionalConfiguration(context,jaxb);  context.addService(jaxb);  Class<?> outClazz=null;  if (outType != null) {    String typeName=outType.endsWith("[]") ? outType.substring(0,outType.length() - 2) : outType;    outClazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (outClazz != null) {    JAXBContext jc=JAXBContext.newInstance(outClazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  } else   if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  }  setAdditionalConfiguration(context,outJaxb);  context.addService(outJaxb);} @TO@ if (jaxb != null) {  Class<?> clazz=null;  if (type != null) {    String typeName=type.endsWith("[]") ? type.substring(0,type.length() - 2) : type;    clazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),jaxb,"context",jc);  }  setAdditionalConfiguration(context,jaxb);  context.addService(jaxb);  Class<?> outClazz=null;  if (outType != null) {    String typeName=outType.endsWith("[]") ? outType.substring(0,outType.length() - 2) : outType;    outClazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (outClazz != null) {    JAXBContext jc=JAXBContext.newInstance(outClazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  } else   if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  }  setAdditionalConfiguration(context,outJaxb);  context.addService(outJaxb);} @AT@ 6406 @LENGTH@ 1718
---UPD Block@@ThenBody:{  Class<?> clazz=null;  if (type != null) {    String typeName=type.endsWith("[]") ? type.substring(0,type.length() - 2) : type;    clazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),jaxb,"context",jc);  }  if (context.getRestConfiguration().getDataFormatProperties() != null) {    IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties());  }  setAdditionalConfiguration(context,jaxb);  context.addService(jaxb);  Class<?> outClazz=null;  if (outType != null) {    String typeName=outType.endsWith("[]") ? outType.substring(0,outType.length() - 2) : outType;    outClazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (outClazz != null) {    JAXBContext jc=JAXBContext.newInstance(outClazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  } else   if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  }  setAdditionalConfiguration(context,outJaxb);  context.addService(outJaxb);} @TO@ ThenBody:{  Class<?> clazz=null;  if (type != null) {    String typeName=type.endsWith("[]") ? type.substring(0,type.length() - 2) : type;    clazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),jaxb,"context",jc);  }  setAdditionalConfiguration(context,jaxb);  context.addService(jaxb);  Class<?> outClazz=null;  if (outType != null) {    String typeName=outType.endsWith("[]") ? outType.substring(0,outType.length() - 2) : outType;    outClazz=context.getClassResolver().resolveMandatoryClass(typeName);  }  if (outClazz != null) {    JAXBContext jc=JAXBContext.newInstance(outClazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  } else   if (clazz != null) {    JAXBContext jc=JAXBContext.newInstance(clazz);    IntrospectionSupport.setProperty(context.getTypeConverter(),outJaxb,"context",jc);  }  setAdditionalConfiguration(context,outJaxb);  context.addService(outJaxb);} @AT@ 6424 @LENGTH@ 1700
------DEL IfStatement@@if (context.getRestConfiguration().getDataFormatProperties() != null) {  IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties());} @AT@ 6915 @LENGTH@ 229
---------DEL InfixExpression@@context.getRestConfiguration().getDataFormatProperties() != null @AT@ 6919 @LENGTH@ 64
------------DEL MethodInvocation@@context.getRestConfiguration().getDataFormatProperties() @AT@ 6919 @LENGTH@ 56
---------------DEL MethodInvocation@@MethodName:getRestConfiguration:[] @AT@ 6919 @LENGTH@ 30
---------------DEL SimpleName@@Name:context @AT@ 6919 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getDataFormatProperties:[] @AT@ 6950 @LENGTH@ 25
------------DEL Operator@@!= @AT@ 6975 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6979 @LENGTH@ 4
---------DEL Block@@ThenBody:{  IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties());} @AT@ 6985 @LENGTH@ 159
------------DEL ExpressionStatement@@MethodInvocation:IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties()) @AT@ 7003 @LENGTH@ 127
---------------DEL MethodInvocation@@IntrospectionSupport.setProperties(context.getTypeConverter(),jaxb,context.getRestConfiguration().getDataFormatProperties()) @AT@ 7003 @LENGTH@ 126
------------------DEL SimpleName@@Name:IntrospectionSupport @AT@ 7003 @LENGTH@ 20
------------------DEL SimpleName@@MethodName:setProperties:[context.getTypeConverter(), jaxb, context.getRestConfiguration().getDataFormatProperties()] @AT@ 7024 @LENGTH@ 105
---------------------DEL MethodInvocation@@context.getTypeConverter() @AT@ 7038 @LENGTH@ 26
------------------------DEL SimpleName@@Name:context @AT@ 7038 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getTypeConverter:[] @AT@ 7046 @LENGTH@ 18
---------------------DEL SimpleName@@jaxb @AT@ 7066 @LENGTH@ 4
---------------------DEL MethodInvocation@@context.getRestConfiguration().getDataFormatProperties() @AT@ 7072 @LENGTH@ 56
------------------------DEL MethodInvocation@@MethodName:getRestConfiguration:[] @AT@ 7072 @LENGTH@ 30
------------------------DEL SimpleName@@Name:context @AT@ 7072 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getDataFormatProperties:[] @AT@ 7103 @LENGTH@ 25


INS IfStatement@@if (!canTest()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOnSuccess, Exception,  @AT@ 1807 @LENGTH@ 47
---INS PrefixExpression@@!canTest() @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1811 @LENGTH@ 10
------INS Operator@@! @TO@ PrefixExpression@@!canTest() @AT@ 1811 @LENGTH@ 1
------INS MethodInvocation@@MethodName:canTest:[] @TO@ PrefixExpression@@!canTest() @AT@ 1812 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!canTest()) {  return;} @AT@ 1823 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1837 @LENGTH@ 7


INS MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @TO@ TypeDeclaration@@[public]TraceHandlerTest, TracingTestBase @AT@ 1492 @LENGTH@ 280
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @AT@ 1492 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @AT@ 1502 @LENGTH@ 4
---INS SimpleName@@MethodName:validateTestTracerInOnly @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @AT@ 1507 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertEquals(6,tracedMessages.size()) @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @AT@ 1544 @LENGTH@ 39
------INS MethodInvocation@@assertEquals(6,tracedMessages.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(6,tracedMessages.size()) @AT@ 1544 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @TO@ MethodInvocation@@assertEquals(6,tracedMessages.size()) @AT@ 1544 @LENGTH@ 38
------------INS NumberLiteral@@6 @TO@ SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @AT@ 1557 @LENGTH@ 1
------------INS MethodInvocation@@tracedMessages.size() @TO@ SimpleName@@MethodName:assertEquals:[6, tracedMessages.size()] @AT@ 1560 @LENGTH@ 21
---------------INS SimpleName@@Name:tracedMessages @TO@ MethodInvocation@@tracedMessages.size() @AT@ 1560 @LENGTH@ 14
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@tracedMessages.size() @AT@ 1575 @LENGTH@ 6
---INS EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("Complete:"));} @TO@ MethodDeclaration@@protected, void, MethodName:validateTestTracerInOnly,  @AT@ 1592 @LENGTH@ 174
------INS SingleVariableDeclaration@@StringBuilder tracedMessage @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("Complete:"));} @AT@ 1597 @LENGTH@ 27
---------INS SimpleType@@StringBuilder @TO@ SingleVariableDeclaration@@StringBuilder tracedMessage @AT@ 1597 @LENGTH@ 13
---------INS SimpleName@@tracedMessage @TO@ SingleVariableDeclaration@@StringBuilder tracedMessage @AT@ 1611 @LENGTH@ 13
------INS SimpleName@@tracedMessages @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("Complete:"));} @AT@ 1627 @LENGTH@ 14
------INS VariableDeclarationStatement@@String message=tracedMessage.toString(); @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("Complete:"));} @AT@ 1657 @LENGTH@ 42
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message=tracedMessage.toString(); @AT@ 1657 @LENGTH@ 6
---------INS VariableDeclarationFragment@@message=tracedMessage.toString() @TO@ VariableDeclarationStatement@@String message=tracedMessage.toString(); @AT@ 1664 @LENGTH@ 34
------------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=tracedMessage.toString() @AT@ 1664 @LENGTH@ 7
------------INS MethodInvocation@@tracedMessage.toString() @TO@ VariableDeclarationFragment@@message=tracedMessage.toString() @AT@ 1674 @LENGTH@ 24
---------------INS SimpleName@@Name:tracedMessage @TO@ MethodInvocation@@tracedMessage.toString() @AT@ 1674 @LENGTH@ 13
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@tracedMessage.toString() @AT@ 1688 @LENGTH@ 10
------INS ExpressionStatement@@MethodInvocation:assertTrue(message.startsWith("Complete:")) @TO@ EnhancedForStatement@@for (StringBuilder tracedMessage : tracedMessages) {  String message=tracedMessage.toString();  assertTrue(message.startsWith("Complete:"));} @AT@ 1712 @LENGTH@ 44
---------INS MethodInvocation@@assertTrue(message.startsWith("Complete:")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(message.startsWith("Complete:")) @AT@ 1712 @LENGTH@ 43
------------INS SimpleName@@MethodName:assertTrue:[message.startsWith("Complete:")] @TO@ MethodInvocation@@assertTrue(message.startsWith("Complete:")) @AT@ 1712 @LENGTH@ 43
---------------INS MethodInvocation@@message.startsWith("Complete:") @TO@ SimpleName@@MethodName:assertTrue:[message.startsWith("Complete:")] @AT@ 1723 @LENGTH@ 31
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.startsWith("Complete:") @AT@ 1723 @LENGTH@ 7
------------------INS SimpleName@@MethodName:startsWith:["Complete:"] @TO@ MethodInvocation@@message.startsWith("Complete:") @AT@ 1731 @LENGTH@ 23
---------------------INS StringLiteral@@"Complete:" @TO@ SimpleName@@MethodName:startsWith:["Complete:"] @AT@ 1742 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:template.stop() @TO@ MethodDeclaration@@public, void, MethodName:testRemoveRouteAndThenAddAgain, Exception,  @AT@ 1763 @LENGTH@ 16
---INS MethodInvocation@@template.stop() @TO@ ExpressionStatement@@MethodInvocation:template.stop() @AT@ 1763 @LENGTH@ 15
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.stop() @AT@ 1763 @LENGTH@ 8
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@template.stop() @AT@ 1772 @LENGTH@ 6


UPD IfStatement@@if (endpoint.isDoc() == true) {  exchange.getIn().setHeader(XmppConstants.docHeader,message);} @TO@ if (endpoint.isDoc()) {  exchange.getIn().setHeader(XmppConstants.DOC_HEADER,message);} @AT@ 9212 @LENGTH@ 111
---INS MethodInvocation@@endpoint.isDoc() @TO@ IfStatement@@if (endpoint.isDoc() == true) {  exchange.getIn().setHeader(XmppConstants.docHeader,message);} @AT@ 9192 @LENGTH@ 16
------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isDoc() @AT@ 9215 @LENGTH@ 8
------MOV SimpleName@@MethodName:isDoc:[] @TO@ MethodInvocation@@endpoint.isDoc() @AT@ 9224 @LENGTH@ 7
---DEL InfixExpression@@endpoint.isDoc() == true @AT@ 9215 @LENGTH@ 24
------DEL MethodInvocation@@endpoint.isDoc() @AT@ 9215 @LENGTH@ 16
------DEL Operator@@== @AT@ 9231 @LENGTH@ 2
------DEL BooleanLiteral@@true @AT@ 9235 @LENGTH@ 4
---UPD Block@@ThenBody:{  exchange.getIn().setHeader(XmppConstants.docHeader,message);} @TO@ ThenBody:{  exchange.getIn().setHeader(XmppConstants.DOC_HEADER,message);} @AT@ 9241 @LENGTH@ 82
------UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(XmppConstants.docHeader,message) @TO@ MethodInvocation:exchange.getIn().setHeader(XmppConstants.DOC_HEADER,message) @AT@ 9252 @LENGTH@ 61
---------UPD MethodInvocation@@exchange.getIn().setHeader(XmppConstants.docHeader,message) @TO@ exchange.getIn().setHeader(XmppConstants.DOC_HEADER,message) @AT@ 9252 @LENGTH@ 60
------------UPD SimpleName@@MethodName:setHeader:[XmppConstants.docHeader, message] @TO@ MethodName:setHeader:[XmppConstants.DOC_HEADER, message] @AT@ 9269 @LENGTH@ 43
---------------UPD QualifiedName@@XmppConstants.docHeader @TO@ XmppConstants.DOC_HEADER @AT@ 9279 @LENGTH@ 23
------------------UPD SimpleName@@docHeader @TO@ DOC_HEADER @AT@ 9293 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @TO@ TypeDeclaration@@[public]ApprovalStoreUserApprovalHandlerTests,  @AT@ 1921 @LENGTH@ 480
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 1921 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 1928 @LENGTH@ 4
---INS SimpleName@@MethodName:testApprovalLongExpiry @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 1933 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 1965 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:handler.setApprovalExpiryInSeconds(365 * 24 * 60* 60) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 1979 @LENGTH@ 49
------INS MethodInvocation@@handler.setApprovalExpiryInSeconds(365 * 24 * 60* 60) @TO@ ExpressionStatement@@MethodInvocation:handler.setApprovalExpiryInSeconds(365 * 24 * 60* 60) @AT@ 1979 @LENGTH@ 48
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.setApprovalExpiryInSeconds(365 * 24 * 60* 60) @AT@ 1979 @LENGTH@ 7
---------INS SimpleName@@MethodName:setApprovalExpiryInSeconds:[365 * 24 * 60* 60] @TO@ MethodInvocation@@handler.setApprovalExpiryInSeconds(365 * 24 * 60* 60) @AT@ 1987 @LENGTH@ 40
------------INS InfixExpression@@365 * 24 * 60* 60 @TO@ SimpleName@@MethodName:setApprovalExpiryInSeconds:[365 * 24 * 60* 60] @AT@ 2014 @LENGTH@ 12
---------------INS NumberLiteral@@365 @TO@ InfixExpression@@365 * 24 * 60* 60 @AT@ 2014 @LENGTH@ 3
---------------INS Operator@@* @TO@ InfixExpression@@365 * 24 * 60* 60 @AT@ 2017 @LENGTH@ 1
---------------INS NumberLiteral@@24 @TO@ InfixExpression@@365 * 24 * 60* 60 @AT@ 2018 @LENGTH@ 2
---------------INS NumberLiteral@@60 @TO@ InfixExpression@@365 * 24 * 60* 60 @AT@ 2021 @LENGTH@ 2
---------------INS NumberLiteral@@60 @TO@ InfixExpression@@365 * 24 * 60* 60 @AT@ 2024 @LENGTH@ 2
---INS VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 2031 @LENGTH@ 102
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 2031 @LENGTH@ 20
------INS VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 2052 @LENGTH@ 80
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 2052 @LENGTH@ 20
---------INS ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 2075 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2075 @LENGTH@ 3
------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2079 @LENGTH@ 20
------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2100 @LENGTH@ 8
------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2110 @LENGTH@ 21
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2110 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2117 @LENGTH@ 14
------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 2124 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:authorizationRequest.setApprovalParameters(Collections.singletonMap("scope.read","approved")) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 2136 @LENGTH@ 95
------INS MethodInvocation@@authorizationRequest.setApprovalParameters(Collections.singletonMap("scope.read","approved")) @TO@ ExpressionStatement@@MethodInvocation:authorizationRequest.setApprovalParameters(Collections.singletonMap("scope.read","approved")) @AT@ 2136 @LENGTH@ 94
---------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.setApprovalParameters(Collections.singletonMap("scope.read","approved")) @AT@ 2136 @LENGTH@ 20
---------INS SimpleName@@MethodName:setApprovalParameters:[Collections.singletonMap("scope.read","approved")] @TO@ MethodInvocation@@authorizationRequest.setApprovalParameters(Collections.singletonMap("scope.read","approved")) @AT@ 2157 @LENGTH@ 73
------------INS MethodInvocation@@Collections.singletonMap("scope.read","approved") @TO@ SimpleName@@MethodName:setApprovalParameters:[Collections.singletonMap("scope.read","approved")] @AT@ 2179 @LENGTH@ 50
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("scope.read","approved") @AT@ 2179 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["scope.read", "approved"] @TO@ MethodInvocation@@Collections.singletonMap("scope.read","approved") @AT@ 2191 @LENGTH@ 38
------------------INS StringLiteral@@"scope.read" @TO@ SimpleName@@MethodName:singletonMap:["scope.read", "approved"] @AT@ 2204 @LENGTH@ 12
------------------INS StringLiteral@@"approved" @TO@ SimpleName@@MethodName:singletonMap:["scope.read", "approved"] @AT@ 2218 @LENGTH@ 10
---INS VariableDeclarationStatement@@AuthorizationRequest result=handler.updateAfterApproval(authorizationRequest,userAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 2234 @LENGTH@ 100
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.updateAfterApproval(authorizationRequest,userAuthentication); @AT@ 2234 @LENGTH@ 20
------INS VariableDeclarationFragment@@result=handler.updateAfterApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.updateAfterApproval(authorizationRequest,userAuthentication); @AT@ 2255 @LENGTH@ 78
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=handler.updateAfterApproval(authorizationRequest,userAuthentication) @AT@ 2255 @LENGTH@ 6
---------INS MethodInvocation@@handler.updateAfterApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationFragment@@result=handler.updateAfterApproval(authorizationRequest,userAuthentication) @AT@ 2264 @LENGTH@ 69
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.updateAfterApproval(authorizationRequest,userAuthentication) @AT@ 2264 @LENGTH@ 7
------------INS SimpleName@@MethodName:updateAfterApproval:[authorizationRequest, userAuthentication] @TO@ MethodInvocation@@handler.updateAfterApproval(authorizationRequest,userAuthentication) @AT@ 2272 @LENGTH@ 61
---------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:updateAfterApproval:[authorizationRequest, userAuthentication] @AT@ 2292 @LENGTH@ 20
---------------INS SimpleName@@userAuthentication @TO@ SimpleName@@MethodName:updateAfterApproval:[authorizationRequest, userAuthentication] @AT@ 2314 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertTrue(handler.isApproved(result,userAuthentication)) @TO@ MethodDeclaration@@public, void, MethodName:testApprovalLongExpiry, Exception,  @AT@ 2337 @LENGTH@ 59
------INS MethodInvocation@@assertTrue(handler.isApproved(result,userAuthentication)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(handler.isApproved(result,userAuthentication)) @AT@ 2337 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertTrue:[handler.isApproved(result,userAuthentication)] @TO@ MethodInvocation@@assertTrue(handler.isApproved(result,userAuthentication)) @AT@ 2337 @LENGTH@ 58
------------INS MethodInvocation@@handler.isApproved(result,userAuthentication) @TO@ SimpleName@@MethodName:assertTrue:[handler.isApproved(result,userAuthentication)] @AT@ 2348 @LENGTH@ 46
---------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.isApproved(result,userAuthentication) @AT@ 2348 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isApproved:[result, userAuthentication] @TO@ MethodInvocation@@handler.isApproved(result,userAuthentication) @AT@ 2356 @LENGTH@ 38
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:isApproved:[result, userAuthentication] @AT@ 2367 @LENGTH@ 6
------------------INS SimpleName@@userAuthentication @TO@ SimpleName@@MethodName:isApproved:[result, userAuthentication] @AT@ 2375 @LENGTH@ 18


UPD VariableDeclarationStatement@@Collection<String> lines=new ArrayList<>(); @TO@ Collection<String> lines=new ArrayList<String>(); @AT@ 2205 @LENGTH@ 45
---UPD VariableDeclarationFragment@@lines=new ArrayList<>() @TO@ lines=new ArrayList<String>() @AT@ 2224 @LENGTH@ 25
------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<String>[] @AT@ 2232 @LENGTH@ 17
---------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<String> @AT@ 2236 @LENGTH@ 11
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<> @AT@ 2252 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MongoQueryCreatorUnitTests,  @AT@ 15623 @LENGTH@ 445
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15623 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15630 @LENGTH@ 4
---INS SimpleName@@MethodName:createsNonShericalNearForDistanceWithDefaultMetric @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15635 @LENGTH@ 50
---INS VariableDeclarationStatement@@Point point=new Point(1.0,1.0); @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15693 @LENGTH@ 34
------INS SimpleType@@Point @TO@ VariableDeclarationStatement@@Point point=new Point(1.0,1.0); @AT@ 15693 @LENGTH@ 5
------INS VariableDeclarationFragment@@point=new Point(1.0,1.0) @TO@ VariableDeclarationStatement@@Point point=new Point(1.0,1.0); @AT@ 15699 @LENGTH@ 27
---------INS SimpleName@@point @TO@ VariableDeclarationFragment@@point=new Point(1.0,1.0) @AT@ 15699 @LENGTH@ 5
---------INS ClassInstanceCreation@@Point[1.0, 1.0] @TO@ VariableDeclarationFragment@@point=new Point(1.0,1.0) @AT@ 15707 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@Point[1.0, 1.0] @AT@ 15707 @LENGTH@ 3
------------INS SimpleType@@Point @TO@ ClassInstanceCreation@@Point[1.0, 1.0] @AT@ 15711 @LENGTH@ 5
------------INS NumberLiteral@@1.0 @TO@ ClassInstanceCreation@@Point[1.0, 1.0] @AT@ 15717 @LENGTH@ 3
------------INS NumberLiteral@@1.0 @TO@ ClassInstanceCreation@@Point[1.0, 1.0] @AT@ 15722 @LENGTH@ 3
---INS VariableDeclarationStatement@@Distance distance=new Distance(1.0); @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15730 @LENGTH@ 38
------INS SimpleType@@Distance @TO@ VariableDeclarationStatement@@Distance distance=new Distance(1.0); @AT@ 15730 @LENGTH@ 8
------INS VariableDeclarationFragment@@distance=new Distance(1.0) @TO@ VariableDeclarationStatement@@Distance distance=new Distance(1.0); @AT@ 15739 @LENGTH@ 28
---------INS SimpleName@@distance @TO@ VariableDeclarationFragment@@distance=new Distance(1.0) @AT@ 15739 @LENGTH@ 8
---------INS ClassInstanceCreation@@Distance[1.0] @TO@ VariableDeclarationFragment@@distance=new Distance(1.0) @AT@ 15750 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@Distance[1.0] @AT@ 15750 @LENGTH@ 3
------------INS SimpleType@@Distance @TO@ ClassInstanceCreation@@Distance[1.0] @AT@ 15754 @LENGTH@ 8
------------INS NumberLiteral@@1.0 @TO@ ClassInstanceCreation@@Distance[1.0] @AT@ 15763 @LENGTH@ 3
---INS VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",Venue.class); @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15772 @LENGTH@ 64
------INS SimpleType@@PartTree @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",Venue.class); @AT@ 15772 @LENGTH@ 8
------INS VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",Venue.class) @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",Venue.class); @AT@ 15781 @LENGTH@ 54
---------INS SimpleName@@tree @TO@ VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",Venue.class) @AT@ 15781 @LENGTH@ 4
---------INS ClassInstanceCreation@@PartTree["findByLocationNear", Venue.class] @TO@ VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",Venue.class) @AT@ 15788 @LENGTH@ 47
------------INS New@@new @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", Venue.class] @AT@ 15788 @LENGTH@ 3
------------INS SimpleType@@PartTree @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", Venue.class] @AT@ 15792 @LENGTH@ 8
------------INS StringLiteral@@"findByLocationNear" @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", Venue.class] @AT@ 15801 @LENGTH@ 20
------------INS TypeLiteral@@Venue.class @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", Venue.class] @AT@ 15823 @LENGTH@ 11
---INS VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context); @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15839 @LENGTH@ 106
------INS SimpleType@@MongoQueryCreator @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context); @AT@ 15839 @LENGTH@ 17
------INS VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context) @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context); @AT@ 15857 @LENGTH@ 87
---------INS SimpleName@@creator @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context) @AT@ 15857 @LENGTH@ 7
---------INS ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,distance),context) @AT@ 15867 @LENGTH@ 77
------------INS New@@new @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @AT@ 15867 @LENGTH@ 3
------------INS SimpleType@@MongoQueryCreator @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @AT@ 15871 @LENGTH@ 17
------------INS SimpleName@@tree @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @AT@ 15889 @LENGTH@ 4
------------INS MethodInvocation@@getAccessor(converter,point,distance) @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @AT@ 15895 @LENGTH@ 39
---------------INS SimpleName@@MethodName:getAccessor:[converter, point, distance] @TO@ MethodInvocation@@getAccessor(converter,point,distance) @AT@ 15895 @LENGTH@ 39
------------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, point, distance] @AT@ 15907 @LENGTH@ 9
------------------INS SimpleName@@point @TO@ SimpleName@@MethodName:getAccessor:[converter, point, distance] @AT@ 15918 @LENGTH@ 5
------------------INS SimpleName@@distance @TO@ SimpleName@@MethodName:getAccessor:[converter, point, distance] @AT@ 15925 @LENGTH@ 8
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,distance), context] @AT@ 15936 @LENGTH@ 7
---INS VariableDeclarationStatement@@Query query=creator.createQuery(); @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15948 @LENGTH@ 36
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=creator.createQuery(); @AT@ 15948 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=creator.createQuery() @TO@ VariableDeclarationStatement@@Query query=creator.createQuery(); @AT@ 15954 @LENGTH@ 29
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=creator.createQuery() @AT@ 15954 @LENGTH@ 5
---------INS MethodInvocation@@creator.createQuery() @TO@ VariableDeclarationFragment@@query=creator.createQuery() @AT@ 15962 @LENGTH@ 21
------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.createQuery() @AT@ 15962 @LENGTH@ 7
------------INS SimpleName@@MethodName:createQuery:[] @TO@ MethodInvocation@@creator.createQuery() @AT@ 15970 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(query,is(query(where("location").near(point).maxDistance(1.0)))) @TO@ MethodDeclaration@@public, void, MethodName:createsNonShericalNearForDistanceWithDefaultMetric,  @AT@ 15988 @LENGTH@ 77
------INS MethodInvocation@@assertThat(query,is(query(where("location").near(point).maxDistance(1.0)))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query,is(query(where("location").near(point).maxDistance(1.0)))) @AT@ 15988 @LENGTH@ 76
---------INS SimpleName@@MethodName:assertThat:[query, is(query(where("location").near(point).maxDistance(1.0)))] @TO@ MethodInvocation@@assertThat(query,is(query(where("location").near(point).maxDistance(1.0)))) @AT@ 15988 @LENGTH@ 76
------------INS SimpleName@@query @TO@ SimpleName@@MethodName:assertThat:[query, is(query(where("location").near(point).maxDistance(1.0)))] @AT@ 15999 @LENGTH@ 5
------------INS MethodInvocation@@is(query(where("location").near(point).maxDistance(1.0))) @TO@ SimpleName@@MethodName:assertThat:[query, is(query(where("location").near(point).maxDistance(1.0)))] @AT@ 16006 @LENGTH@ 57
---------------INS SimpleName@@MethodName:is:[query(where("location").near(point).maxDistance(1.0))] @TO@ MethodInvocation@@is(query(where("location").near(point).maxDistance(1.0))) @AT@ 16006 @LENGTH@ 57
------------------INS MethodInvocation@@query(where("location").near(point).maxDistance(1.0)) @TO@ SimpleName@@MethodName:is:[query(where("location").near(point).maxDistance(1.0))] @AT@ 16009 @LENGTH@ 53
---------------------INS SimpleName@@MethodName:query:[where("location").near(point).maxDistance(1.0)] @TO@ MethodInvocation@@query(where("location").near(point).maxDistance(1.0)) @AT@ 16009 @LENGTH@ 53
------------------------INS MethodInvocation@@where("location").near(point).maxDistance(1.0) @TO@ SimpleName@@MethodName:query:[where("location").near(point).maxDistance(1.0)] @AT@ 16015 @LENGTH@ 46
---------------------------INS MethodInvocation@@MethodName:near:[point] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16015 @LENGTH@ 29
------------------------------INS SimpleName@@point @TO@ MethodInvocation@@MethodName:near:[point] @AT@ 16038 @LENGTH@ 5
---------------------------INS MethodInvocation@@MethodName:where:["location"] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16015 @LENGTH@ 17
------------------------------INS StringLiteral@@"location" @TO@ MethodInvocation@@MethodName:where:["location"] @AT@ 16021 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:maxDistance:[1.0] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16045 @LENGTH@ 16
------------------------------INS NumberLiteral@@1.0 @TO@ SimpleName@@MethodName:maxDistance:[1.0] @AT@ 16057 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:query:[where("location").near(point).maxDistance(1.0)] @TO@ MethodInvocation@@query(where("location").near(point).maxDistance(1.0)) @AT@ 16009 @LENGTH@ 53
------------------------INS MethodInvocation@@where("location").near(point).maxDistance(1.0) @TO@ SimpleName@@MethodName:query:[where("location").near(point).maxDistance(1.0)] @AT@ 16015 @LENGTH@ 46
---------------------------INS MethodInvocation@@MethodName:near:[point] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16015 @LENGTH@ 29
------------------------------INS SimpleName@@point @TO@ MethodInvocation@@MethodName:near:[point] @AT@ 16038 @LENGTH@ 5
---------------------------INS MethodInvocation@@MethodName:where:["location"] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16015 @LENGTH@ 17
------------------------------INS StringLiteral@@"location" @TO@ MethodInvocation@@MethodName:where:["location"] @AT@ 16021 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:maxDistance:[1.0] @TO@ MethodInvocation@@where("location").near(point).maxDistance(1.0) @AT@ 16045 @LENGTH@ 16
------------------------------INS NumberLiteral@@1.0 @TO@ SimpleName@@MethodName:maxDistance:[1.0] @AT@ 16057 @LENGTH@ 3


UPD VariableDeclarationStatement@@byte[] preDigested=Base64.base64DecodeStandard(base64Digest,0); @TO@ byte[] preDigested=CodePointIterator.ofChars(base64Digest,0).base64Decode(Alphabet.STANDARD,false).drain(); @AT@ 5561 @LENGTH@ 66
---UPD VariableDeclarationFragment@@preDigested=Base64.base64DecodeStandard(base64Digest,0) @TO@ preDigested=CodePointIterator.ofChars(base64Digest,0).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 5568 @LENGTH@ 58
------UPD MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @TO@ CodePointIterator.ofChars(base64Digest,0).base64Decode(Alphabet.STANDARD,false).drain() @AT@ 5582 @LENGTH@ 44
---------UPD SimpleName@@Name:Base64 @TO@ Name:CodePointIterator @AT@ 5582 @LENGTH@ 6
---------DEL SimpleName@@MethodName:base64DecodeStandard:[base64Digest, 0] @AT@ 5589 @LENGTH@ 37
------------DEL SimpleName@@base64Digest @AT@ 5610 @LENGTH@ 12
------------DEL NumberLiteral@@0 @AT@ 5624 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 5636 @LENGTH@ 81
------------INS QualifiedName@@Alphabet.STANDARD @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 5692 @LENGTH@ 17
---------------INS SimpleName@@Alphabet @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 5692 @LENGTH@ 8
---------------INS SimpleName@@STANDARD @TO@ QualifiedName@@Alphabet.STANDARD @AT@ 5701 @LENGTH@ 8
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:base64Decode:[Alphabet.STANDARD, false] @AT@ 5711 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:ofChars:[base64Digest, 0] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 5636 @LENGTH@ 42
------------INS SimpleName@@base64Digest @TO@ MethodInvocation@@MethodName:ofChars:[base64Digest, 0] @AT@ 5662 @LENGTH@ 12
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:ofChars:[base64Digest, 0] @AT@ 5676 @LENGTH@ 1
---------INS SimpleName@@MethodName:drain:[] @TO@ MethodInvocation@@Base64.base64DecodeStandard(base64Digest,0) @AT@ 5718 @LENGTH@ 7


UPD Block@@WhileBody:{  Entry<Long,PendingConfirm> entry=iterator.next();  iterator.remove();  doHandleConfirm(ack,involvedListener,entry.getValue());} @TO@ WhileBody:{  Entry<Long,PendingConfirm> entry=iterator.next();  PendingConfirm value=entry.getValue();  iterator.remove();  doHandleConfirm(ack,involvedListener,value);} @AT@ 25317 @LENGTH@ 160
---INS VariableDeclarationStatement@@PendingConfirm value=entry.getValue(); @TO@ Block@@WhileBody:{  Entry<Long,PendingConfirm> entry=iterator.next();  iterator.remove();  doHandleConfirm(ack,involvedListener,entry.getValue());} @AT@ 25386 @LENGTH@ 40
------INS SimpleType@@PendingConfirm @TO@ VariableDeclarationStatement@@PendingConfirm value=entry.getValue(); @AT@ 25386 @LENGTH@ 14
------INS VariableDeclarationFragment@@value=entry.getValue() @TO@ VariableDeclarationStatement@@PendingConfirm value=entry.getValue(); @AT@ 25401 @LENGTH@ 24
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 25401 @LENGTH@ 5
---------INS MethodInvocation@@entry.getValue() @TO@ VariableDeclarationFragment@@value=entry.getValue() @AT@ 25409 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 25409 @LENGTH@ 5
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 25415 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:doHandleConfirm(ack,involvedListener,entry.getValue()) @TO@ MethodInvocation:doHandleConfirm(ack,involvedListener,value) @AT@ 25412 @LENGTH@ 57
------UPD MethodInvocation@@doHandleConfirm(ack,involvedListener,entry.getValue()) @TO@ doHandleConfirm(ack,involvedListener,value) @AT@ 25412 @LENGTH@ 56
---------UPD SimpleName@@MethodName:doHandleConfirm:[ack, involvedListener, entry.getValue()] @TO@ MethodName:doHandleConfirm:[ack, involvedListener, value] @AT@ 25412 @LENGTH@ 56
------------DEL MethodInvocation@@entry.getValue() @AT@ 25451 @LENGTH@ 16
---------------DEL SimpleName@@Name:entry @AT@ 25451 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getValue:[] @AT@ 25457 @LENGTH@ 10
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:doHandleConfirm:[ack, involvedListener, entry.getValue()] @AT@ 25499 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, boolean, [ON_WINDOWS=System.getProperty("os.name").toLowerCase(Locale.ENGLISH).indexOf("windows") > -1] @TO@ private, static, final, boolean, [ON_WINDOWS=System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows")] @AT@ 3971 @LENGTH@ 141
---UPD VariableDeclarationFragment@@ON_WINDOWS=System.getProperty("os.name").toLowerCase(Locale.ENGLISH).indexOf("windows") > -1 @TO@ ON_WINDOWS=System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 4000 @LENGTH@ 111
------DEL InfixExpression@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).indexOf("windows") > -1 @AT@ 4021 @LENGTH@ 90
---------DEL MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).indexOf("windows") @AT@ 4021 @LENGTH@ 85
---------DEL Operator@@> @AT@ 4106 @LENGTH@ 1
---------DEL PrefixExpression@@-1 @AT@ 4109 @LENGTH@ 2
------------DEL Operator@@- @AT@ 4109 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 4110 @LENGTH@ 1
------INS MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @TO@ VariableDeclarationFragment@@ON_WINDOWS=System.getProperty("os.name").toLowerCase(Locale.ENGLISH).indexOf("windows") > -1 @AT@ 4025 @LENGTH@ 77
---------MOV MethodInvocation@@MethodName:toLowerCase:[Locale.ENGLISH] @TO@ MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 4021 @LENGTH@ 57
---------MOV MethodInvocation@@MethodName:getProperty:["os.name"] @TO@ MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 4021 @LENGTH@ 29
---------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 4021 @LENGTH@ 6
---------MOV SimpleName@@MethodName:indexOf:["windows"] @TO@ MethodInvocation@@System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 4088 @LENGTH@ 18


UPD ForStatement@@for (int f=0; f < numFields; f+=2) {  if (!(arguments[f] instanceof WritableConstantStringObjectInspector)) {    throw new UDFArgumentTypeException(f,"Even arguments" + " to NAMED_STRUCT must be a constant STRING." + arguments[f].toString());  }  WritableConstantStringObjectInspector constantOI=(WritableConstantStringObjectInspector)arguments[f];  fname.add(constantOI.getWritableConstantValue().toString());  retOIs.add(arguments[f + 1]);} @TO@ for (int f=0; f < numFields; f+=2) {  if (!(arguments[f] instanceof ConstantObjectInspector)) {    throw new UDFArgumentTypeException(f,"Even arguments" + " to NAMED_STRUCT must be a constant STRING." + arguments[f].toString());  }  ConstantObjectInspector constantOI=(ConstantObjectInspector)arguments[f];  fname.add(constantOI.getWritableConstantValue().toString());  retOIs.add(arguments[f + 1]);} @AT@ 2281 @LENGTH@ 502
---UPD IfStatement@@if (!(arguments[f] instanceof WritableConstantStringObjectInspector)) {  throw new UDFArgumentTypeException(f,"Even arguments" + " to NAMED_STRUCT must be a constant STRING." + arguments[f].toString());} @TO@ if (!(arguments[f] instanceof ConstantObjectInspector)) {  throw new UDFArgumentTypeException(f,"Even arguments" + " to NAMED_STRUCT must be a constant STRING." + arguments[f].toString());} @AT@ 2326 @LENGTH@ 230
------UPD PrefixExpression@@!(arguments[f] instanceof WritableConstantStringObjectInspector) @TO@ !(arguments[f] instanceof ConstantObjectInspector) @AT@ 2330 @LENGTH@ 64
---------UPD ParenthesizedExpression@@(arguments[f] instanceof WritableConstantStringObjectInspector) @TO@ (arguments[f] instanceof ConstantObjectInspector) @AT@ 2331 @LENGTH@ 63
------------UPD InstanceofExpression@@arguments[f] instanceof WritableConstantStringObjectInspector @TO@ arguments[f] instanceof ConstantObjectInspector @AT@ 2332 @LENGTH@ 61
---------------UPD SimpleType@@WritableConstantStringObjectInspector @TO@ ConstantObjectInspector @AT@ 2356 @LENGTH@ 37
---UPD VariableDeclarationStatement@@WritableConstantStringObjectInspector constantOI=(WritableConstantStringObjectInspector)arguments[f]; @TO@ ConstantObjectInspector constantOI=(ConstantObjectInspector)arguments[f]; @AT@ 2563 @LENGTH@ 111
------UPD SimpleType@@WritableConstantStringObjectInspector @TO@ ConstantObjectInspector @AT@ 2563 @LENGTH@ 37
------UPD VariableDeclarationFragment@@constantOI=(WritableConstantStringObjectInspector)arguments[f] @TO@ constantOI=(ConstantObjectInspector)arguments[f] @AT@ 2601 @LENGTH@ 72
---------UPD CastExpression@@(WritableConstantStringObjectInspector)arguments[f] @TO@ (ConstantObjectInspector)arguments[f] @AT@ 2622 @LENGTH@ 51
------------UPD SimpleType@@WritableConstantStringObjectInspector @TO@ ConstantObjectInspector @AT@ 2623 @LENGTH@ 37


INS MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @TO@ TypeDeclaration@@[public, final]ExchangeHelper,  @AT@ 33078 @LENGTH@ 509
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33078 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33085 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33092 @LENGTH@ 4
---INS SimpleName@@MethodName:replaceMessage @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33097 @LENGTH@ 14
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33112 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 33112 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 33121 @LENGTH@ 8
---INS SingleVariableDeclaration@@Message newMessage @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33131 @LENGTH@ 18
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message newMessage @AT@ 33131 @LENGTH@ 7
------INS SimpleName@@newMessage @TO@ SingleVariableDeclaration@@Message newMessage @AT@ 33139 @LENGTH@ 10
---INS SingleVariableDeclaration@@boolean outOnly @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33151 @LENGTH@ 15
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean outOnly @AT@ 33151 @LENGTH@ 7
------INS SimpleName@@outOnly @TO@ SingleVariableDeclaration@@boolean outOnly @AT@ 33159 @LENGTH@ 7
---INS VariableDeclarationStatement@@Message old=exchange.hasOut() ? exchange.getOut() : exchange.getIn(); @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33178 @LENGTH@ 71
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message old=exchange.hasOut() ? exchange.getOut() : exchange.getIn(); @AT@ 33178 @LENGTH@ 7
------INS VariableDeclarationFragment@@old=exchange.hasOut() ? exchange.getOut() : exchange.getIn() @TO@ VariableDeclarationStatement@@Message old=exchange.hasOut() ? exchange.getOut() : exchange.getIn(); @AT@ 33186 @LENGTH@ 62
---------INS SimpleName@@old @TO@ VariableDeclarationFragment@@old=exchange.hasOut() ? exchange.getOut() : exchange.getIn() @AT@ 33186 @LENGTH@ 3
---------INS ConditionalExpression@@exchange.hasOut() ? exchange.getOut() : exchange.getIn() @TO@ VariableDeclarationFragment@@old=exchange.hasOut() ? exchange.getOut() : exchange.getIn() @AT@ 33192 @LENGTH@ 56
------------INS MethodInvocation@@exchange.hasOut() @TO@ ConditionalExpression@@exchange.hasOut() ? exchange.getOut() : exchange.getIn() @AT@ 33192 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 33192 @LENGTH@ 8
---------------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 33201 @LENGTH@ 8
------------INS MethodInvocation@@exchange.getOut() @TO@ ConditionalExpression@@exchange.hasOut() ? exchange.getOut() : exchange.getIn() @AT@ 33212 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 33212 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 33221 @LENGTH@ 8
------------INS MethodInvocation@@exchange.getIn() @TO@ ConditionalExpression@@exchange.hasOut() ? exchange.getOut() : exchange.getIn() @AT@ 33232 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 33232 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 33241 @LENGTH@ 7
---INS IfStatement@@if (outOnly || exchange.hasOut()) {  exchange.setOut(newMessage);} else {  exchange.setIn(newMessage);} @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33258 @LENGTH@ 143
------INS InfixExpression@@outOnly || exchange.hasOut() @TO@ IfStatement@@if (outOnly || exchange.hasOut()) {  exchange.setOut(newMessage);} else {  exchange.setIn(newMessage);} @AT@ 33262 @LENGTH@ 28
---------INS SimpleName@@outOnly @TO@ InfixExpression@@outOnly || exchange.hasOut() @AT@ 33262 @LENGTH@ 7
---------INS Operator@@|| @TO@ InfixExpression@@outOnly || exchange.hasOut() @AT@ 33269 @LENGTH@ 2
---------INS MethodInvocation@@exchange.hasOut() @TO@ InfixExpression@@outOnly || exchange.hasOut() @AT@ 33273 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 33273 @LENGTH@ 8
------------INS SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 33282 @LENGTH@ 8
------INS Block@@ThenBody:{  exchange.setOut(newMessage);} @TO@ IfStatement@@if (outOnly || exchange.hasOut()) {  exchange.setOut(newMessage);} else {  exchange.setIn(newMessage);} @AT@ 33292 @LENGTH@ 52
---------INS ExpressionStatement@@MethodInvocation:exchange.setOut(newMessage) @TO@ Block@@ThenBody:{  exchange.setOut(newMessage);} @AT@ 33306 @LENGTH@ 28
------------INS MethodInvocation@@exchange.setOut(newMessage) @TO@ ExpressionStatement@@MethodInvocation:exchange.setOut(newMessage) @AT@ 33306 @LENGTH@ 27
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setOut(newMessage) @AT@ 33306 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setOut:[newMessage] @TO@ MethodInvocation@@exchange.setOut(newMessage) @AT@ 33315 @LENGTH@ 18
------------------INS SimpleName@@newMessage @TO@ SimpleName@@MethodName:setOut:[newMessage] @AT@ 33322 @LENGTH@ 10
------INS Block@@ElseBody:{  exchange.setIn(newMessage);} @TO@ IfStatement@@if (outOnly || exchange.hasOut()) {  exchange.setOut(newMessage);} else {  exchange.setIn(newMessage);} @AT@ 33350 @LENGTH@ 51
---------INS ExpressionStatement@@MethodInvocation:exchange.setIn(newMessage) @TO@ Block@@ElseBody:{  exchange.setIn(newMessage);} @AT@ 33364 @LENGTH@ 27
------------INS MethodInvocation@@exchange.setIn(newMessage) @TO@ ExpressionStatement@@MethodInvocation:exchange.setIn(newMessage) @AT@ 33364 @LENGTH@ 26
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setIn(newMessage) @AT@ 33364 @LENGTH@ 8
---------------INS SimpleName@@MethodName:setIn:[newMessage] @TO@ MethodInvocation@@exchange.setIn(newMessage) @AT@ 33373 @LENGTH@ 17
------------------INS SimpleName@@newMessage @TO@ SimpleName@@MethodName:setIn:[newMessage] @AT@ 33379 @LENGTH@ 10
---INS IfStatement@@if (old instanceof MessageSupport) {  ((MessageSupport)old).setExchange(null);} @TO@ MethodDeclaration@@public, static, void, MethodName:replaceMessage, Exchange exchange, Message newMessage, boolean outOnly,  @AT@ 33481 @LENGTH@ 100
------INS InstanceofExpression@@old instanceof MessageSupport @TO@ IfStatement@@if (old instanceof MessageSupport) {  ((MessageSupport)old).setExchange(null);} @AT@ 33485 @LENGTH@ 29
---------INS SimpleName@@old @TO@ InstanceofExpression@@old instanceof MessageSupport @AT@ 33485 @LENGTH@ 3
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@old instanceof MessageSupport @AT@ 33489 @LENGTH@ 10
---------INS SimpleType@@MessageSupport @TO@ InstanceofExpression@@old instanceof MessageSupport @AT@ 33500 @LENGTH@ 14
------INS Block@@ThenBody:{  ((MessageSupport)old).setExchange(null);} @TO@ IfStatement@@if (old instanceof MessageSupport) {  ((MessageSupport)old).setExchange(null);} @AT@ 33516 @LENGTH@ 65
---------INS ExpressionStatement@@MethodInvocation:((MessageSupport)old).setExchange(null) @TO@ Block@@ThenBody:{  ((MessageSupport)old).setExchange(null);} @AT@ 33530 @LENGTH@ 41
------------INS MethodInvocation@@((MessageSupport)old).setExchange(null) @TO@ ExpressionStatement@@MethodInvocation:((MessageSupport)old).setExchange(null) @AT@ 33530 @LENGTH@ 40
---------------INS ParenthesizedExpression@@((MessageSupport)old) @TO@ MethodInvocation@@((MessageSupport)old).setExchange(null) @AT@ 33530 @LENGTH@ 22
------------------INS CastExpression@@(MessageSupport)old @TO@ ParenthesizedExpression@@((MessageSupport)old) @AT@ 33531 @LENGTH@ 20
---------------------INS SimpleType@@MessageSupport @TO@ CastExpression@@(MessageSupport)old @AT@ 33532 @LENGTH@ 14
---------------------INS SimpleName@@old @TO@ CastExpression@@(MessageSupport)old @AT@ 33548 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setExchange:[null] @TO@ MethodInvocation@@((MessageSupport)old).setExchange(null) @AT@ 33553 @LENGTH@ 17
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setExchange:[null] @AT@ 33565 @LENGTH@ 4


INS FieldDeclaration@@private, AuthenticationEventPublisher, [eventPublisher] @TO@ TypeDeclaration@@[@Configuration, public]ResourceServerConfiguration, WebSecurityConfigurerAdapter[Ordered] @AT@ 2420 @LENGTH@ 52
---INS Modifier@@private @TO@ FieldDeclaration@@private, AuthenticationEventPublisher, [eventPublisher] @AT@ 2420 @LENGTH@ 7
---INS SimpleType@@AuthenticationEventPublisher @TO@ FieldDeclaration@@private, AuthenticationEventPublisher, [eventPublisher] @AT@ 2428 @LENGTH@ 28
---INS VariableDeclarationFragment@@eventPublisher @TO@ FieldDeclaration@@private, AuthenticationEventPublisher, [eventPublisher] @AT@ 2457 @LENGTH@ 14
------INS SimpleName@@eventPublisher @TO@ VariableDeclarationFragment@@eventPublisher @AT@ 2457 @LENGTH@ 14


UPD VariableDeclarationStatement@@ResourceMetadata metadata=mappings.getMappingFor(domainType); @TO@ ResourceMetadata metadata=mappings.getMetadataFor(domainType); @AT@ 3925 @LENGTH@ 63
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(domainType) @TO@ metadata=mappings.getMetadataFor(domainType) @AT@ 3942 @LENGTH@ 45
------UPD MethodInvocation@@mappings.getMappingFor(domainType) @TO@ mappings.getMetadataFor(domainType) @AT@ 3953 @LENGTH@ 34
---------UPD SimpleName@@MethodName:getMappingFor:[domainType] @TO@ MethodName:getMetadataFor:[domainType] @AT@ 3962 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2ErrorHandlerTests,  @AT@ 5067 @LENGTH@ 373
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5067 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5074 @LENGTH@ 4
---INS SimpleName@@MethodName:testHandleGeneric403ErrorWithBody @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5079 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5122 @LENGTH@ 9
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5136 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 5136 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 5148 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 5148 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 5158 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 5158 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 5162 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5179 @LENGTH@ 51
------INS MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @TO@ ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 5179 @LENGTH@ 50
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 5179 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_JSON) @AT@ 5187 @LENGTH@ 42
------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_JSON] @AT@ 5202 @LENGTH@ 26
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 5202 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 5212 @LENGTH@ 16
---INS VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())); @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5233 @LENGTH@ 119
------INS SimpleType@@ClientHttpResponse @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())); @AT@ 5233 @LENGTH@ 18
------INS VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())) @TO@ VariableDeclarationStatement@@ClientHttpResponse response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())); @AT@ 5252 @LENGTH@ 99
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())) @AT@ 5252 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @TO@ VariableDeclarationFragment@@response=new TestClientHttpResponse(headers,403,new ByteArrayInputStream("{}".getBytes())) @AT@ 5263 @LENGTH@ 88
------------INS New@@new @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @AT@ 5263 @LENGTH@ 3
------------INS SimpleType@@TestClientHttpResponse @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @AT@ 5267 @LENGTH@ 22
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @AT@ 5290 @LENGTH@ 7
------------INS NumberLiteral@@403 @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @AT@ 5299 @LENGTH@ 3
------------INS ClassInstanceCreation@@ByteArrayInputStream["{}".getBytes()] @TO@ ClassInstanceCreation@@TestClientHttpResponse[headers, 403, new ByteArrayInputStream("{}".getBytes())] @AT@ 5304 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@ByteArrayInputStream["{}".getBytes()] @AT@ 5304 @LENGTH@ 3
---------------INS SimpleType@@ByteArrayInputStream @TO@ ClassInstanceCreation@@ByteArrayInputStream["{}".getBytes()] @AT@ 5308 @LENGTH@ 20
---------------INS MethodInvocation@@"{}".getBytes() @TO@ ClassInstanceCreation@@ByteArrayInputStream["{}".getBytes()] @AT@ 5334 @LENGTH@ 15
------------------INS StringLiteral@@"{}" @TO@ MethodInvocation@@"{}".getBytes() @AT@ 5334 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"{}".getBytes() @AT@ 5339 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:expected.expect(HttpClientErrorException.class) @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5356 @LENGTH@ 48
------INS MethodInvocation@@expected.expect(HttpClientErrorException.class) @TO@ ExpressionStatement@@MethodInvocation:expected.expect(HttpClientErrorException.class) @AT@ 5356 @LENGTH@ 47
---------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.expect(HttpClientErrorException.class) @AT@ 5356 @LENGTH@ 8
---------INS SimpleName@@MethodName:expect:[HttpClientErrorException.class] @TO@ MethodInvocation@@expected.expect(HttpClientErrorException.class) @AT@ 5365 @LENGTH@ 38
------------INS TypeLiteral@@HttpClientErrorException.class @TO@ SimpleName@@MethodName:expect:[HttpClientErrorException.class] @AT@ 5372 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:handler.handleError(response) @TO@ MethodDeclaration@@public, void, MethodName:testHandleGeneric403ErrorWithBody, Exception,  @AT@ 5407 @LENGTH@ 30
------INS MethodInvocation@@handler.handleError(response) @TO@ ExpressionStatement@@MethodInvocation:handler.handleError(response) @AT@ 5407 @LENGTH@ 29
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.handleError(response) @AT@ 5407 @LENGTH@ 7
---------INS SimpleName@@MethodName:handleError:[response] @TO@ MethodInvocation@@handler.handleError(response) @AT@ 5415 @LENGTH@ 21
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:handleError:[response] @AT@ 5427 @LENGTH@ 8


UPD VariableDeclarationStatement@@byte[] guessBasedResponse=DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI); @TO@ byte[] guessBasedResponse=DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true); @AT@ 4069 @LENGTH@ 136
---UPD VariableDeclarationFragment@@guessBasedResponse=DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI) @TO@ guessBasedResponse=DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true) @AT@ 4076 @LENGTH@ 128
------UPD MethodInvocation@@DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI) @TO@ DigestUtil.digestResponse(messageDigest,guessedHashA1,nonce,nonceCount,cnonce,authzid,qop,digestURI,true) @AT@ 4097 @LENGTH@ 107
---------UPD SimpleName@@MethodName:digestResponse:[messageDigest, guessedHashA1, nonce, nonceCount, cnonce, authzid, qop, digestURI] @TO@ MethodName:digestResponse:[messageDigest, guessedHashA1, nonce, nonceCount, cnonce, authzid, qop, digestURI, true] @AT@ 4108 @LENGTH@ 96
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:digestResponse:[messageDigest, guessedHashA1, nonce, nonceCount, cnonce, authzid, qop, digestURI] @AT@ 4211 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testRefreshTokenAdded,  @TO@ public, void, MethodName:testRefreshTokenAdded, Exception,  @AT@ 3154 @LENGTH@ 735
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenAdded,  @AT@ 3196 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:tokenEnhancer.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenAdded,  @AT@ 3905 @LENGTH@ 35
------INS MethodInvocation@@tokenEnhancer.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:tokenEnhancer.afterPropertiesSet() @AT@ 3905 @LENGTH@ 34
---------INS SimpleName@@Name:tokenEnhancer @TO@ MethodInvocation@@tokenEnhancer.afterPropertiesSet() @AT@ 3905 @LENGTH@ 13
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@tokenEnhancer.afterPropertiesSet() @AT@ 3919 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertTrue(tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))) @TO@ MethodDeclaration@@public, void, MethodName:testRefreshTokenAdded,  @AT@ 3943 @LENGTH@ 173
------INS MethodInvocation@@assertTrue(tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))) @AT@ 3943 @LENGTH@ 172
---------INS SimpleName@@MethodName:assertTrue:[tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))] @TO@ MethodInvocation@@assertTrue(tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))) @AT@ 3943 @LENGTH@ 172
------------INS MethodInvocation@@tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue()))) @TO@ SimpleName@@MethodName:assertTrue:[tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())))] @AT@ 3954 @LENGTH@ 160
---------------INS SimpleName@@Name:tokenEnhancer @TO@ MethodInvocation@@tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue()))) @AT@ 3954 @LENGTH@ 13
---------------INS SimpleName@@MethodName:isRefreshToken:[tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue()))] @TO@ MethodInvocation@@tokenEnhancer.isRefreshToken(tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue()))) @AT@ 3968 @LENGTH@ 146
------------------INS MethodInvocation@@tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())) @TO@ SimpleName@@MethodName:isRefreshToken:[tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue()))] @AT@ 3983 @LENGTH@ 130
---------------------INS SimpleName@@Name:tokenEnhancer @TO@ MethodInvocation@@tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())) @AT@ 3983 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:extractAccessToken:[token.getRefreshToken().getValue(), tokenEnhancer.decode(token.getRefreshToken().getValue())] @TO@ MethodInvocation@@tokenEnhancer.extractAccessToken(token.getRefreshToken().getValue(),tokenEnhancer.decode(token.getRefreshToken().getValue())) @AT@ 3997 @LENGTH@ 116
------------------------INS MethodInvocation@@token.getRefreshToken().getValue() @TO@ SimpleName@@MethodName:extractAccessToken:[token.getRefreshToken().getValue(), tokenEnhancer.decode(token.getRefreshToken().getValue())] @AT@ 4016 @LENGTH@ 34
---------------------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4016 @LENGTH@ 23
---------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4016 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4040 @LENGTH@ 10
------------------------INS MethodInvocation@@tokenEnhancer.decode(token.getRefreshToken().getValue()) @TO@ SimpleName@@MethodName:extractAccessToken:[token.getRefreshToken().getValue(), tokenEnhancer.decode(token.getRefreshToken().getValue())] @AT@ 4056 @LENGTH@ 56
---------------------------INS SimpleName@@Name:tokenEnhancer @TO@ MethodInvocation@@tokenEnhancer.decode(token.getRefreshToken().getValue()) @AT@ 4056 @LENGTH@ 13
---------------------------INS SimpleName@@MethodName:decode:[token.getRefreshToken().getValue()] @TO@ MethodInvocation@@tokenEnhancer.decode(token.getRefreshToken().getValue()) @AT@ 4070 @LENGTH@ 42
------------------------------INS MethodInvocation@@token.getRefreshToken().getValue() @TO@ SimpleName@@MethodName:decode:[token.getRefreshToken().getValue()] @AT@ 4077 @LENGTH@ 34
---------------------------------INS MethodInvocation@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4077 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4077 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@token.getRefreshToken().getValue() @AT@ 4101 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @TO@ TypeDeclaration@@[public]SimpleParserExpressionTest, ExchangeTestSupport @AT@ 1622 @LENGTH@ 291
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1622 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1629 @LENGTH@ 4
---INS SimpleName@@MethodName:testSimpleStringList @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1634 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1664 @LENGTH@ 9
---INS VariableDeclarationStatement@@SimpleExpressionParser parser=new SimpleExpressionParser("\"Hello\" \"World\"",true); @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1684 @LENGTH@ 88
------INS SimpleType@@SimpleExpressionParser @TO@ VariableDeclarationStatement@@SimpleExpressionParser parser=new SimpleExpressionParser("\"Hello\" \"World\"",true); @AT@ 1684 @LENGTH@ 22
------INS VariableDeclarationFragment@@parser=new SimpleExpressionParser("\"Hello\" \"World\"",true) @TO@ VariableDeclarationStatement@@SimpleExpressionParser parser=new SimpleExpressionParser("\"Hello\" \"World\"",true); @AT@ 1707 @LENGTH@ 64
---------INS SimpleName@@parser @TO@ VariableDeclarationFragment@@parser=new SimpleExpressionParser("\"Hello\" \"World\"",true) @AT@ 1707 @LENGTH@ 6
---------INS ClassInstanceCreation@@SimpleExpressionParser["\"Hello\" \"World\"", true] @TO@ VariableDeclarationFragment@@parser=new SimpleExpressionParser("\"Hello\" \"World\"",true) @AT@ 1716 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleExpressionParser["\"Hello\" \"World\"", true] @AT@ 1716 @LENGTH@ 3
------------INS SimpleType@@SimpleExpressionParser @TO@ ClassInstanceCreation@@SimpleExpressionParser["\"Hello\" \"World\"", true] @AT@ 1720 @LENGTH@ 22
------------INS StringLiteral@@"\"Hello\" \"World\"" @TO@ ClassInstanceCreation@@SimpleExpressionParser["\"Hello\" \"World\"", true] @AT@ 1743 @LENGTH@ 21
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@SimpleExpressionParser["\"Hello\" \"World\"", true] @AT@ 1766 @LENGTH@ 4
---INS VariableDeclarationStatement@@Expression exp=parser.parseExpression(); @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1781 @LENGTH@ 42
------INS SimpleType@@Expression @TO@ VariableDeclarationStatement@@Expression exp=parser.parseExpression(); @AT@ 1781 @LENGTH@ 10
------INS VariableDeclarationFragment@@exp=parser.parseExpression() @TO@ VariableDeclarationStatement@@Expression exp=parser.parseExpression(); @AT@ 1792 @LENGTH@ 30
---------INS SimpleName@@exp @TO@ VariableDeclarationFragment@@exp=parser.parseExpression() @AT@ 1792 @LENGTH@ 3
---------INS MethodInvocation@@parser.parseExpression() @TO@ VariableDeclarationFragment@@exp=parser.parseExpression() @AT@ 1798 @LENGTH@ 24
------------INS SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression() @AT@ 1798 @LENGTH@ 6
------------INS SimpleName@@MethodName:parseExpression:[] @TO@ MethodInvocation@@parser.parseExpression() @AT@ 1805 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals("\"Hello\" \"World\"",exp.evaluate(exchange,String.class)) @TO@ MethodDeclaration@@public, void, MethodName:testSimpleStringList, Exception,  @AT@ 1833 @LENGTH@ 74
------INS MethodInvocation@@assertEquals("\"Hello\" \"World\"",exp.evaluate(exchange,String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("\"Hello\" \"World\"",exp.evaluate(exchange,String.class)) @AT@ 1833 @LENGTH@ 73
---------INS SimpleName@@MethodName:assertEquals:["\"Hello\" \"World\"", exp.evaluate(exchange,String.class)] @TO@ MethodInvocation@@assertEquals("\"Hello\" \"World\"",exp.evaluate(exchange,String.class)) @AT@ 1833 @LENGTH@ 73
------------INS StringLiteral@@"\"Hello\" \"World\"" @TO@ SimpleName@@MethodName:assertEquals:["\"Hello\" \"World\"", exp.evaluate(exchange,String.class)] @AT@ 1846 @LENGTH@ 21
------------INS MethodInvocation@@exp.evaluate(exchange,String.class) @TO@ SimpleName@@MethodName:assertEquals:["\"Hello\" \"World\"", exp.evaluate(exchange,String.class)] @AT@ 1869 @LENGTH@ 36
---------------INS SimpleName@@Name:exp @TO@ MethodInvocation@@exp.evaluate(exchange,String.class) @AT@ 1869 @LENGTH@ 3
---------------INS SimpleName@@MethodName:evaluate:[exchange, String.class] @TO@ MethodInvocation@@exp.evaluate(exchange,String.class) @AT@ 1873 @LENGTH@ 32
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 1882 @LENGTH@ 8
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 1892 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:endpointConfiguration.setApiName(apiName) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String methodName, GoogleMailApiName apiName, GoogleMailConfiguration endpointConfiguration,  @AT@ 2983 @LENGTH@ 42
---INS MethodInvocation@@endpointConfiguration.setApiName(apiName) @TO@ ExpressionStatement@@MethodInvocation:endpointConfiguration.setApiName(apiName) @AT@ 2983 @LENGTH@ 41
------INS SimpleName@@Name:endpointConfiguration @TO@ MethodInvocation@@endpointConfiguration.setApiName(apiName) @AT@ 2983 @LENGTH@ 21
------INS SimpleName@@MethodName:setApiName:[apiName] @TO@ MethodInvocation@@endpointConfiguration.setApiName(apiName) @AT@ 3005 @LENGTH@ 19
---------INS SimpleName@@apiName @TO@ SimpleName@@MethodName:setApiName:[apiName] @AT@ 3016 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:numRows=((WritableConstantIntObjectInspector)args[0]).getWritableConstantValue() @TO@ Assignment:numRows=(IntWritable)((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 2918 @LENGTH@ 91
---UPD Assignment@@numRows=((WritableConstantIntObjectInspector)args[0]).getWritableConstantValue() @TO@ numRows=(IntWritable)((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 2918 @LENGTH@ 90
------DEL MethodInvocation@@((WritableConstantIntObjectInspector)args[0]).getWritableConstantValue() @AT@ 2936 @LENGTH@ 72
------INS CastExpression@@(IntWritable)((ConstantObjectInspector)args[0]).getWritableConstantValue() @TO@ Assignment@@numRows=((WritableConstantIntObjectInspector)args[0]).getWritableConstantValue() @AT@ 2995 @LENGTH@ 83
---------INS SimpleType@@IntWritable @TO@ CastExpression@@(IntWritable)((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 2996 @LENGTH@ 11
---------INS MethodInvocation@@((ConstantObjectInspector)args[0]).getWritableConstantValue() @TO@ CastExpression@@(IntWritable)((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 3017 @LENGTH@ 61
------------MOV ParenthesizedExpression@@((WritableConstantIntObjectInspector)args[0]) @TO@ MethodInvocation@@((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 2936 @LENGTH@ 45
---------------UPD CastExpression@@(WritableConstantIntObjectInspector)args[0] @TO@ (ConstantObjectInspector)args[0] @AT@ 2937 @LENGTH@ 43
------------------UPD SimpleType@@WritableConstantIntObjectInspector @TO@ ConstantObjectInspector @AT@ 2938 @LENGTH@ 34
------------MOV SimpleName@@MethodName:getWritableConstantValue:[] @TO@ MethodInvocation@@((ConstantObjectInspector)args[0]).getWritableConstantValue() @AT@ 2982 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:cancelToken(newAccessToken.getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testHappyDay, Exception,  @AT@ 1393 @LENGTH@ 39
---INS MethodInvocation@@cancelToken(newAccessToken.getValue()) @TO@ ExpressionStatement@@MethodInvocation:cancelToken(newAccessToken.getValue()) @AT@ 1393 @LENGTH@ 38
------INS SimpleName@@MethodName:cancelToken:[newAccessToken.getValue()] @TO@ MethodInvocation@@cancelToken(newAccessToken.getValue()) @AT@ 1393 @LENGTH@ 38
---------INS MethodInvocation@@newAccessToken.getValue() @TO@ SimpleName@@MethodName:cancelToken:[newAccessToken.getValue()] @AT@ 1405 @LENGTH@ 25
------------INS SimpleName@@Name:newAccessToken @TO@ MethodInvocation@@newAccessToken.getValue() @AT@ 1405 @LENGTH@ 14
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@newAccessToken.getValue() @AT@ 1420 @LENGTH@ 10


UPD Block@@ThenBody:{  sb.append(", \"defaultValue\": ");  sb.append(Strings.doubleQuote(defaultValue));} @TO@ ThenBody:{  sb.append(", \"defaultValue\": ");  String text=safeDefaultValue(defaultValue);  sb.append(Strings.doubleQuote(text));} @AT@ 3281 @LENGTH@ 116
---UPD ExpressionStatement@@MethodInvocation:sb.append(Strings.doubleQuote(defaultValue)) @TO@ MethodInvocation:sb.append(Strings.doubleQuote(text)) @AT@ 3342 @LENGTH@ 45
------UPD MethodInvocation@@sb.append(Strings.doubleQuote(defaultValue)) @TO@ sb.append(Strings.doubleQuote(text)) @AT@ 3342 @LENGTH@ 44
---------UPD SimpleName@@MethodName:append:[Strings.doubleQuote(defaultValue)] @TO@ MethodName:append:[Strings.doubleQuote(text)] @AT@ 3345 @LENGTH@ 41
------------UPD MethodInvocation@@Strings.doubleQuote(defaultValue) @TO@ Strings.doubleQuote(text) @AT@ 3352 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:doubleQuote:[defaultValue] @TO@ MethodName:doubleQuote:[text] @AT@ 3360 @LENGTH@ 25
------------------UPD SimpleName@@defaultValue @TO@ text @AT@ 3372 @LENGTH@ 12
---INS VariableDeclarationStatement@@String text=safeDefaultValue(defaultValue); @TO@ Block@@ThenBody:{  sb.append(", \"defaultValue\": ");  sb.append(Strings.doubleQuote(defaultValue));} @AT@ 3342 @LENGTH@ 45
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String text=safeDefaultValue(defaultValue); @AT@ 3342 @LENGTH@ 6
------INS VariableDeclarationFragment@@text=safeDefaultValue(defaultValue) @TO@ VariableDeclarationStatement@@String text=safeDefaultValue(defaultValue); @AT@ 3349 @LENGTH@ 37
---------INS SimpleName@@text @TO@ VariableDeclarationFragment@@text=safeDefaultValue(defaultValue) @AT@ 3349 @LENGTH@ 4
---------INS MethodInvocation@@safeDefaultValue(defaultValue) @TO@ VariableDeclarationFragment@@text=safeDefaultValue(defaultValue) @AT@ 3356 @LENGTH@ 30
------------INS SimpleName@@MethodName:safeDefaultValue:[defaultValue] @TO@ MethodInvocation@@safeDefaultValue(defaultValue) @AT@ 3356 @LENGTH@ 30
---------------INS SimpleName@@defaultValue @TO@ SimpleName@@MethodName:safeDefaultValue:[defaultValue] @AT@ 3373 @LENGTH@ 12


INS MethodDeclaration@@protected, String, MethodName:createEndpointUri,  @TO@ TypeDeclaration@@MyEndpoint, DefaultEndpoint[DelegateEndpoint] @AT@ 4167 @LENGTH@ 107
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, String, MethodName:createEndpointUri,  @AT@ 4167 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@protected, String, MethodName:createEndpointUri,  @AT@ 4177 @LENGTH@ 6
---INS SimpleName@@MethodName:createEndpointUri @TO@ MethodDeclaration@@protected, String, MethodName:createEndpointUri,  @AT@ 4184 @LENGTH@ 17
---INS ReturnStatement@@InfixExpression:"my:" + childEndpoint.getEndpointUri() @TO@ MethodDeclaration@@protected, String, MethodName:createEndpointUri,  @AT@ 4218 @LENGTH@ 46
------INS InfixExpression@@"my:" + childEndpoint.getEndpointUri() @TO@ ReturnStatement@@InfixExpression:"my:" + childEndpoint.getEndpointUri() @AT@ 4225 @LENGTH@ 38
---------INS StringLiteral@@"my:" @TO@ InfixExpression@@"my:" + childEndpoint.getEndpointUri() @AT@ 4225 @LENGTH@ 5
---------INS Operator@@+ @TO@ InfixExpression@@"my:" + childEndpoint.getEndpointUri() @AT@ 4230 @LENGTH@ 1
---------INS MethodInvocation@@childEndpoint.getEndpointUri() @TO@ InfixExpression@@"my:" + childEndpoint.getEndpointUri() @AT@ 4233 @LENGTH@ 30
------------INS SimpleName@@Name:childEndpoint @TO@ MethodInvocation@@childEndpoint.getEndpointUri() @AT@ 4233 @LENGTH@ 13
------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@childEndpoint.getEndpointUri() @AT@ 4247 @LENGTH@ 16


UPD SwitchStatement@@switch (ParameterBindingType.of(typeSource)) {case LIKE:  Type likeType=LikeParameterBinding.getLikeTypeFrom(matcher.group(2));replacement=replacement != null ? replacement : matcher.group(3);if (parameterIndex != null) {checkAndRegister(new LikeParameterBinding(parameterIndex,likeType,expression),bindings);} else {checkAndRegister(new LikeParameterBinding(parameterName,likeType,expression),bindings);replacement=expression != null ? ":" + parameterName : matcher.group(5);}break;case IN:if (parameterIndex != null) {checkAndRegister(new InParameterBinding(parameterIndex,expression),bindings);} else {checkAndRegister(new InParameterBinding(parameterName,expression),bindings);}result=query;break;case AS_IS:default :bindings.add(parameterIndex != null ? new ParameterBinding(null,parameterIndex,expression) : new ParameterBinding(parameterName,null,expression));} @TO@ switch (ParameterBindingType.of(typeSource)) {case LIKE:  Type likeType=LikeParameterBinding.getLikeTypeFrom(matcher.group(2));replacement=replacement != null ? replacement : matcher.group(3);if (parameterIndex != null) {checkAndRegister(new LikeParameterBinding(parameterIndex,likeType,expression),bindings);} else {checkAndRegister(new LikeParameterBinding(parameterName,likeType,expression),bindings);replacement=expression != null ? ":" + parameterName : matcher.group(5);}break;case IN:if (parameterIndex != null) {checkAndRegister(new InParameterBinding(parameterIndex,expression),bindings);} else {checkAndRegister(new InParameterBinding(parameterName,expression),bindings);}break;case AS_IS:default :bindings.add(parameterIndex != null ? new ParameterBinding(null,parameterIndex,expression) : new ParameterBinding(parameterName,null,expression));} @AT@ 7183 @LENGTH@ 1141
---DEL ExpressionStatement@@Assignment:result=query @AT@ 8009 @LENGTH@ 15
------DEL Assignment@@result=query @AT@ 8009 @LENGTH@ 14
---------DEL SimpleName@@result @AT@ 8009 @LENGTH@ 6
---------DEL Operator@@= @AT@ 8015 @LENGTH@ 1
---------DEL SimpleName@@query @AT@ 8018 @LENGTH@ 5


UPD IfStatement@@if ((!ObjectHelper.isEmpty(environmentVariables) && environmentVariables != null)) {  Map<String,IEnvironmentVariable> result=app.addEnvironmentVariables(environmentVariables);  exchange.getIn().setBody(result);} else {  throw new CamelExchangeException("Environment variables not correctly specified",exchange);} @TO@ if (!ObjectHelper.isEmpty(environmentVariables) && environmentVariables != null) {  Map<String,IEnvironmentVariable> result=app.addEnvironmentVariables(environmentVariables);  exchange.getIn().setBody(result);} else {  throw new CamelExchangeException("Environment variables not correctly specified",exchange);} @AT@ 22196 @LENGTH@ 388
---DEL ParenthesizedExpression@@(!ObjectHelper.isEmpty(environmentVariables) && environmentVariables != null) @AT@ 22200 @LENGTH@ 77
---MOV InfixExpression@@!ObjectHelper.isEmpty(environmentVariables) && environmentVariables != null @TO@ IfStatement@@if ((!ObjectHelper.isEmpty(environmentVariables) && environmentVariables != null)) {  Map<String,IEnvironmentVariable> result=app.addEnvironmentVariables(environmentVariables);  exchange.getIn().setBody(result);} else {  throw new CamelExchangeException("Environment variables not correctly specified",exchange);} @AT@ 22201 @LENGTH@ 75


UPD ExpressionStatement@@Assignment:next=next.next @TO@ Assignment:next=next.hasContiguousNext() ? next.next : null @AT@ 29749 @LENGTH@ 17
---UPD Assignment@@next=next.next @TO@ next=next.hasContiguousNext() ? next.next : null @AT@ 29749 @LENGTH@ 16
------DEL QualifiedName@@next.next @AT@ 29756 @LENGTH@ 9
------INS ConditionalExpression@@next.hasContiguousNext() ? next.next : null @TO@ Assignment@@next=next.next @AT@ 29764 @LENGTH@ 43
---------INS MethodInvocation@@next.hasContiguousNext() @TO@ ConditionalExpression@@next.hasContiguousNext() ? next.next : null @AT@ 29764 @LENGTH@ 24
------------INS SimpleName@@Name:next @TO@ MethodInvocation@@next.hasContiguousNext() @AT@ 29764 @LENGTH@ 4
------------INS SimpleName@@MethodName:hasContiguousNext:[] @TO@ MethodInvocation@@next.hasContiguousNext() @AT@ 29769 @LENGTH@ 19
---------INS QualifiedName@@next.next @TO@ ConditionalExpression@@next.hasContiguousNext() ? next.next : null @AT@ 29791 @LENGTH@ 9
------------MOV SimpleName@@next @TO@ QualifiedName@@next.next @AT@ 29756 @LENGTH@ 4
------------MOV SimpleName@@next @TO@ QualifiedName@@next.next @AT@ 29761 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@next.hasContiguousNext() ? next.next : null @AT@ 29803 @LENGTH@ 4


UPD IfStatement@@if (inline) {  DataOutputStream dout=new DataOutputStream(outputStream);  dout.writeInt(iv.length);  outputStream.write(iv);  outputStream.flush();} @TO@ if (inline) {  if (iv == null) {    throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");  }  DataOutputStream dout=new DataOutputStream(outputStream);  dout.writeInt(iv.length);  outputStream.write(iv);  outputStream.flush();} @AT@ 7623 @LENGTH@ 203
---UPD Block@@ThenBody:{  DataOutputStream dout=new DataOutputStream(outputStream);  dout.writeInt(iv.length);  outputStream.write(iv);  outputStream.flush();} @TO@ ThenBody:{  if (iv == null) {    throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");  }  DataOutputStream dout=new DataOutputStream(outputStream);  dout.writeInt(iv.length);  outputStream.write(iv);  outputStream.flush();} @AT@ 7635 @LENGTH@ 191
------INS IfStatement@@if (iv == null) {  throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");} @TO@ Block@@ThenBody:{  DataOutputStream dout=new DataOutputStream(outputStream);  dout.writeInt(iv.length);  outputStream.write(iv);  outputStream.flush();} @AT@ 7649 @LENGTH@ 155
---------INS InfixExpression@@iv == null @TO@ IfStatement@@if (iv == null) {  throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");} @AT@ 7653 @LENGTH@ 10
------------INS SimpleName@@iv @TO@ InfixExpression@@iv == null @AT@ 7653 @LENGTH@ 2
------------INS Operator@@== @TO@ InfixExpression@@iv == null @AT@ 7655 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@iv == null @AT@ 7659 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");} @TO@ IfStatement@@if (iv == null) {  throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");} @AT@ 7665 @LENGTH@ 139
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified") @TO@ Block@@ThenBody:{  throw new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified");} @AT@ 7683 @LENGTH@ 107
---------------INS ClassInstanceCreation@@IllegalStateException["Inlining cannot be performed, as no initialization vector was specified"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Inlining cannot be performed, as no initialization vector was specified") @AT@ 7689 @LENGTH@ 100
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Inlining cannot be performed, as no initialization vector was specified"] @AT@ 7689 @LENGTH@ 3
------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Inlining cannot be performed, as no initialization vector was specified"] @AT@ 7693 @LENGTH@ 21
------------------INS StringLiteral@@"Inlining cannot be performed, as no initialization vector was specified" @TO@ ClassInstanceCreation@@IllegalStateException["Inlining cannot be performed, as no initialization vector was specified"] @AT@ 7715 @LENGTH@ 73


UPD IfStatement@@if (tokenStore != null) {  resources.tokenStore(tokenStore);} @TO@ if (tokenStore != null) {  resources.tokenStore(tokenStore);} else if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @AT@ 5433 @LENGTH@ 68
---INS Block@@ElseBody:if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @TO@ IfStatement@@if (tokenStore != null) {  resources.tokenStore(tokenStore);} @AT@ 5505 @LENGTH@ 105
------INS IfStatement@@if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @TO@ Block@@ElseBody:if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @AT@ 5505 @LENGTH@ 105
---------INS InfixExpression@@endpoints != null @TO@ IfStatement@@if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @AT@ 5509 @LENGTH@ 15
------------INS SimpleName@@endpoints @TO@ InfixExpression@@endpoints != null @AT@ 5509 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@endpoints != null @AT@ 5518 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@endpoints != null @AT@ 5520 @LENGTH@ 4
---------INS Block@@ThenBody:{  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @TO@ IfStatement@@if (endpoints != null) {  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @AT@ 5526 @LENGTH@ 84
------------INS ExpressionStatement@@MethodInvocation:resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore()) @TO@ Block@@ThenBody:{  resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore());} @AT@ 5532 @LENGTH@ 73
---------------INS MethodInvocation@@resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore()) @TO@ ExpressionStatement@@MethodInvocation:resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore()) @AT@ 5532 @LENGTH@ 72
------------------INS SimpleName@@Name:resources @TO@ MethodInvocation@@resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore()) @AT@ 5532 @LENGTH@ 9
------------------INS SimpleName@@MethodName:tokenStore:[endpoints.getEndpointsConfigurer().getTokenStore()] @TO@ MethodInvocation@@resources.tokenStore(endpoints.getEndpointsConfigurer().getTokenStore()) @AT@ 5542 @LENGTH@ 62
---------------------INS MethodInvocation@@endpoints.getEndpointsConfigurer().getTokenStore() @TO@ SimpleName@@MethodName:tokenStore:[endpoints.getEndpointsConfigurer().getTokenStore()] @AT@ 5553 @LENGTH@ 50
------------------------INS MethodInvocation@@MethodName:getEndpointsConfigurer:[] @TO@ MethodInvocation@@endpoints.getEndpointsConfigurer().getTokenStore() @AT@ 5553 @LENGTH@ 34
------------------------INS SimpleName@@Name:endpoints @TO@ MethodInvocation@@endpoints.getEndpointsConfigurer().getTokenStore() @AT@ 5553 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getTokenStore:[] @TO@ MethodInvocation@@endpoints.getEndpointsConfigurer().getTokenStore() @AT@ 5588 @LENGTH@ 15


UPD ReturnStatement@@MethodInvocation:getEndpointInvocationChain(endpoint,version,requestMap) @TO@ MethodInvocation:getEndpointInvocationChain(endpoint,version,requestMap,messageContext) @AT@ 11007 @LENGTH@ 65
---UPD MethodInvocation@@getEndpointInvocationChain(endpoint,version,requestMap) @TO@ getEndpointInvocationChain(endpoint,version,requestMap,messageContext) @AT@ 11014 @LENGTH@ 57
------UPD SimpleName@@MethodName:getEndpointInvocationChain:[endpoint, version, requestMap] @TO@ MethodName:getEndpointInvocationChain:[endpoint, version, requestMap, messageContext] @AT@ 11014 @LENGTH@ 57
---------INS SimpleName@@messageContext @TO@ SimpleName@@MethodName:getEndpointInvocationChain:[endpoint, version, requestMap] @AT@ 10967 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:assertFalse(result) @TO@ MethodDeclaration@@public, void, MethodName:testRemoveNotExists,  @AT@ 3919 @LENGTH@ 20
---INS MethodInvocation@@assertFalse(result) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(result) @AT@ 3919 @LENGTH@ 19
------INS SimpleName@@MethodName:assertFalse:[result] @TO@ MethodInvocation@@assertFalse(result) @AT@ 3919 @LENGTH@ 19
---------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertFalse:[result] @AT@ 3931 @LENGTH@ 6


UPD EnhancedForStatement@@for (Map.Entry<String,String> entry : maxConnectionsPerHost.entrySet()) {  URI uri=new URI(entry.getKey());  HttpHost host=new HttpHost(uri.getHost(),uri.getPort(),uri.getScheme());  HttpRoute route=new HttpRoute(host);  int max=Integer.parseInt(entry.getValue());  poolingConnectionManager.setMaxPerRoute(route,max);} @TO@ for (Map.Entry<String,String> entry : maxConnectionsPerHost.entrySet()) {  URI uri=new URI(entry.getKey());  HttpHost host=new HttpHost(uri.getHost(),uri.getPort(),uri.getScheme());  final HttpRoute route;  if (uri.getScheme().equals("https")) {    route=new HttpRoute(host,null,true);  } else {    route=new HttpRoute(host);  }  int max=Integer.parseInt(entry.getValue());  poolingConnectionManager.setMaxPerRoute(route,max);} @AT@ 7842 @LENGTH@ 345
---DEL VariableDeclarationStatement@@HttpRoute route=new HttpRoute(host); @AT@ 8038 @LENGTH@ 38
------DEL VariableDeclarationFragment@@route=new HttpRoute(host) @AT@ 8048 @LENGTH@ 27
---------DEL ClassInstanceCreation@@HttpRoute[host] @AT@ 8056 @LENGTH@ 19
---INS VariableDeclarationStatement@@final HttpRoute route; @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : maxConnectionsPerHost.entrySet()) {  URI uri=new URI(entry.getKey());  HttpHost host=new HttpHost(uri.getHost(),uri.getPort(),uri.getScheme());  HttpRoute route=new HttpRoute(host);  int max=Integer.parseInt(entry.getValue());  poolingConnectionManager.setMaxPerRoute(route,max);} @AT@ 8064 @LENGTH@ 22
------MOV SimpleType@@HttpRoute @TO@ VariableDeclarationStatement@@final HttpRoute route; @AT@ 8038 @LENGTH@ 9
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HttpRoute route; @AT@ 8064 @LENGTH@ 5
------INS VariableDeclarationFragment@@route @TO@ VariableDeclarationStatement@@final HttpRoute route; @AT@ 8080 @LENGTH@ 5
---------MOV SimpleName@@route @TO@ VariableDeclarationFragment@@route @AT@ 8048 @LENGTH@ 5
---INS IfStatement@@if (uri.getScheme().equals("https")) {  route=new HttpRoute(host,null,true);} else {  route=new HttpRoute(host);} @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : maxConnectionsPerHost.entrySet()) {  URI uri=new URI(entry.getKey());  HttpHost host=new HttpHost(uri.getHost(),uri.getPort(),uri.getScheme());  HttpRoute route=new HttpRoute(host);  int max=Integer.parseInt(entry.getValue());  poolingConnectionManager.setMaxPerRoute(route,max);} @AT@ 8091 @LENGTH@ 133
------INS MethodInvocation@@uri.getScheme().equals("https") @TO@ IfStatement@@if (uri.getScheme().equals("https")) {  route=new HttpRoute(host,null,true);} else {  route=new HttpRoute(host);} @AT@ 8095 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:getScheme:[] @TO@ MethodInvocation@@uri.getScheme().equals("https") @AT@ 8095 @LENGTH@ 15
---------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getScheme().equals("https") @AT@ 8095 @LENGTH@ 3
---------INS SimpleName@@MethodName:equals:["https"] @TO@ MethodInvocation@@uri.getScheme().equals("https") @AT@ 8111 @LENGTH@ 15
------------INS StringLiteral@@"https" @TO@ SimpleName@@MethodName:equals:["https"] @AT@ 8118 @LENGTH@ 7
------INS Block@@ThenBody:{  route=new HttpRoute(host,null,true);} @TO@ IfStatement@@if (uri.getScheme().equals("https")) {  route=new HttpRoute(host,null,true);} else {  route=new HttpRoute(host);} @AT@ 8128 @LENGTH@ 51
---------INS ExpressionStatement@@Assignment:route=new HttpRoute(host,null,true) @TO@ Block@@ThenBody:{  route=new HttpRoute(host,null,true);} @AT@ 8134 @LENGTH@ 40
------------INS Assignment@@route=new HttpRoute(host,null,true) @TO@ ExpressionStatement@@Assignment:route=new HttpRoute(host,null,true) @AT@ 8134 @LENGTH@ 39
---------------INS SimpleName@@route @TO@ Assignment@@route=new HttpRoute(host,null,true) @AT@ 8134 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@route=new HttpRoute(host,null,true) @AT@ 8139 @LENGTH@ 1
---------------INS ClassInstanceCreation@@HttpRoute[host, null, true] @TO@ Assignment@@route=new HttpRoute(host,null,true) @AT@ 8142 @LENGTH@ 31
------------------INS New@@new @TO@ ClassInstanceCreation@@HttpRoute[host, null, true] @AT@ 8142 @LENGTH@ 3
------------------INS SimpleType@@HttpRoute @TO@ ClassInstanceCreation@@HttpRoute[host, null, true] @AT@ 8146 @LENGTH@ 9
------------------INS SimpleName@@host @TO@ ClassInstanceCreation@@HttpRoute[host, null, true] @AT@ 8156 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@HttpRoute[host, null, true] @AT@ 8162 @LENGTH@ 4
------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@HttpRoute[host, null, true] @AT@ 8168 @LENGTH@ 4
------INS Block@@ElseBody:{  route=new HttpRoute(host);} @TO@ IfStatement@@if (uri.getScheme().equals("https")) {  route=new HttpRoute(host,null,true);} else {  route=new HttpRoute(host);} @AT@ 8185 @LENGTH@ 39
---------INS ExpressionStatement@@Assignment:route=new HttpRoute(host) @TO@ Block@@ElseBody:{  route=new HttpRoute(host);} @AT@ 8191 @LENGTH@ 28
------------INS Assignment@@route=new HttpRoute(host) @TO@ ExpressionStatement@@Assignment:route=new HttpRoute(host) @AT@ 8191 @LENGTH@ 27
---------------INS SimpleName@@route @TO@ Assignment@@route=new HttpRoute(host) @AT@ 8191 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@route=new HttpRoute(host) @AT@ 8196 @LENGTH@ 1
---------------INS ClassInstanceCreation@@HttpRoute[host] @TO@ Assignment@@route=new HttpRoute(host) @AT@ 8199 @LENGTH@ 19
------------------MOV New@@new @TO@ ClassInstanceCreation@@HttpRoute[host] @AT@ 8056 @LENGTH@ 3
------------------MOV SimpleType@@HttpRoute @TO@ ClassInstanceCreation@@HttpRoute[host] @AT@ 8060 @LENGTH@ 9
------------------MOV SimpleName@@host @TO@ ClassInstanceCreation@@HttpRoute[host] @AT@ 8070 @LENGTH@ 4


UPD TypeDeclaration@@[public]AbstractResourceIntegrationTest, Assert @TO@ [public, abstract]AbstractResourceIntegrationTest, Assert @AT@ 1377 @LENGTH@ 3481
---INS Modifier@@abstract @TO@ TypeDeclaration@@[public]AbstractResourceIntegrationTest, Assert @AT@ 1384 @LENGTH@ 8


UPD FieldDeclaration@@private, long, [minAge=0] @TO@ private, long, [minAge] @AT@ 1797 @LENGTH@ 24
---UPD VariableDeclarationFragment@@minAge=0 @TO@ minAge @AT@ 1810 @LENGTH@ 10
------DEL NumberLiteral@@0 @AT@ 1819 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ MethodInvocation:factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2672 @LENGTH@ 110
---UPD MethodInvocation@@factory.createSaslServer("GSSAPI","sasl","test_server_1",props,new AuthorizeOnlyCallbackHandler()) @TO@ factory.createSaslServer("GSSAPI","sasl",TEST_SERVER_1,props,new AuthorizeOnlyCallbackHandler()) @AT@ 2679 @LENGTH@ 102
------UPD SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @TO@ MethodName:createSaslServer:["GSSAPI", "sasl", TEST_SERVER_1, props, new AuthorizeOnlyCallbackHandler()] @AT@ 2687 @LENGTH@ 94
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslServer:["GSSAPI", "sasl", "test_server_1", props, new AuthorizeOnlyCallbackHandler()] @AT@ 2720 @LENGTH@ 13
---------DEL StringLiteral@@"test_server_1" @AT@ 2722 @LENGTH@ 15


UPD IfStatement@@if (!HiveConf.getBoolVar(conf,ConfVars.LLAP_ENABLED)) {  return inputFormat;} @TO@ if (!HiveConf.getBoolVar(conf,ConfVars.LLAP_IO_ENABLED)) {  return inputFormat;} @AT@ 6869 @LENGTH@ 116
---UPD PrefixExpression@@!HiveConf.getBoolVar(conf,ConfVars.LLAP_ENABLED) @TO@ !HiveConf.getBoolVar(conf,ConfVars.LLAP_IO_ENABLED) @AT@ 6873 @LENGTH@ 49
------UPD MethodInvocation@@HiveConf.getBoolVar(conf,ConfVars.LLAP_ENABLED) @TO@ HiveConf.getBoolVar(conf,ConfVars.LLAP_IO_ENABLED) @AT@ 6874 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getBoolVar:[conf, ConfVars.LLAP_ENABLED] @TO@ MethodName:getBoolVar:[conf, ConfVars.LLAP_IO_ENABLED] @AT@ 6883 @LENGTH@ 39
------------UPD QualifiedName@@ConfVars.LLAP_ENABLED @TO@ ConfVars.LLAP_IO_ENABLED @AT@ 6900 @LENGTH@ 21
---------------UPD SimpleName@@LLAP_ENABLED @TO@ LLAP_IO_ENABLED @AT@ 6909 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @TO@ TypeDeclaration@@[public]MockComponentConfigurationAndDocumentationTest, ContextTestSupport @AT@ 2070 @LENGTH@ 621
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2070 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2077 @LENGTH@ 4
---INS SimpleName@@MethodName:testEndpointExplain @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2082 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2111 @LENGTH@ 9
---INS VariableDeclarationStatement@@String json=context.explainEndpointJson("mock:foo?retainFirst=10",true); @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2131 @LENGTH@ 75
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String json=context.explainEndpointJson("mock:foo?retainFirst=10",true); @AT@ 2131 @LENGTH@ 6
------INS VariableDeclarationFragment@@json=context.explainEndpointJson("mock:foo?retainFirst=10",true) @TO@ VariableDeclarationStatement@@String json=context.explainEndpointJson("mock:foo?retainFirst=10",true); @AT@ 2138 @LENGTH@ 67
---------INS SimpleName@@json @TO@ VariableDeclarationFragment@@json=context.explainEndpointJson("mock:foo?retainFirst=10",true) @AT@ 2138 @LENGTH@ 4
---------INS MethodInvocation@@context.explainEndpointJson("mock:foo?retainFirst=10",true) @TO@ VariableDeclarationFragment@@json=context.explainEndpointJson("mock:foo?retainFirst=10",true) @AT@ 2145 @LENGTH@ 60
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.explainEndpointJson("mock:foo?retainFirst=10",true) @AT@ 2145 @LENGTH@ 7
------------INS SimpleName@@MethodName:explainEndpointJson:["mock:foo?retainFirst=10", true] @TO@ MethodInvocation@@context.explainEndpointJson("mock:foo?retainFirst=10",true) @AT@ 2153 @LENGTH@ 52
---------------INS StringLiteral@@"mock:foo?retainFirst=10" @TO@ SimpleName@@MethodName:explainEndpointJson:["mock:foo?retainFirst=10", true] @AT@ 2173 @LENGTH@ 25
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:explainEndpointJson:["mock:foo?retainFirst=10", true] @AT@ 2200 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertNotNull(json) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2215 @LENGTH@ 20
------INS MethodInvocation@@assertNotNull(json) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(json) @AT@ 2215 @LENGTH@ 19
---------INS SimpleName@@MethodName:assertNotNull:[json] @TO@ MethodInvocation@@assertNotNull(json) @AT@ 2215 @LENGTH@ 19
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:assertNotNull:[json] @AT@ 2229 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2245 @LENGTH@ 230
------INS MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")) @AT@ 2245 @LENGTH@ 229
---------INS SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")) @AT@ 2245 @LENGTH@ 229
------------INS MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"")] @AT@ 2256 @LENGTH@ 217
---------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"") @AT@ 2256 @LENGTH@ 4
---------------INS SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\""] @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"") @AT@ 2261 @LENGTH@ 212
------------------INS InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"" @TO@ SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\""] @AT@ 2270 @LENGTH@ 202
---------------------INS StringLiteral@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"" @AT@ 2270 @LENGTH@ 91
---------------------INS Operator@@+ @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"" @AT@ 2361 @LENGTH@ 1
---------------------INS StringLiteral@@" \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"" @TO@ InfixExpression@@"\"name\": { \"kind\": \"path\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"foo\", \"description\": \"Name of mock endpoint\"" @AT@ 2380 @LENGTH@ 92
---INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2484 @LENGTH@ 97
------INS MethodInvocation@@assertTrue(json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 2484 @LENGTH@ 96
---------INS SimpleName@@MethodName:assertTrue:[json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 2484 @LENGTH@ 96
------------INS MethodInvocation@@json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @AT@ 2495 @LENGTH@ 84
---------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"") @AT@ 2495 @LENGTH@ 4
---------------INS SimpleName@@MethodName:contains:["\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\""] @TO@ MethodInvocation@@json.contains("\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"") @AT@ 2500 @LENGTH@ 79
------------------INS StringLiteral@@"\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\"" @TO@ SimpleName@@MethodName:contains:["\"expectedCount\": { \"kind\": \"parameter\", \"type\": \"integer\""] @AT@ 2509 @LENGTH@ 69
---INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointExplain, Exception,  @AT@ 2590 @LENGTH@ 95
------INS MethodInvocation@@assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 2590 @LENGTH@ 94
---------INS SimpleName@@MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @AT@ 2590 @LENGTH@ 94
------------INS MethodInvocation@@json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @AT@ 2601 @LENGTH@ 82
---------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"") @AT@ 2601 @LENGTH@ 4
---------------INS SimpleName@@MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\""] @TO@ MethodInvocation@@json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"") @AT@ 2606 @LENGTH@ 77
------------------INS StringLiteral@@"\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"" @TO@ SimpleName@@MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\""] @AT@ 2615 @LENGTH@ 67


UPD ReturnStatement@@MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ MethodInvocation:factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2094 @LENGTH@ 119
---UPD MethodInvocation@@factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl","test_server_1",props,new NoCallbackHandler()) @TO@ factory.createSaslClient(new String[]{"GSSAPI"},null,"sasl",TEST_SERVER_1,props,new NoCallbackHandler()) @AT@ 2101 @LENGTH@ 111
------UPD SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @TO@ MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", TEST_SERVER_1, props, new NoCallbackHandler()] @AT@ 2109 @LENGTH@ 103
---------DEL StringLiteral@@"test_server_1" @AT@ 2164 @LENGTH@ 15
---------INS SimpleName@@TEST_SERVER_1 @TO@ SimpleName@@MethodName:createSaslClient:[new String[]{"GSSAPI"}, null, "sasl", "test_server_1", props, new NoCallbackHandler()] @AT@ 2164 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals("1969-12-31T18:00:01.000-06:00",detailedJobInfoResource.getStartTime()) @TO@ MethodInvocation:assertEquals("1970-01-01T00:00:01.000Z",detailedJobInfoResource.getStartTime()) @AT@ 2896 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals("1969-12-31T18:00:01.000-06:00",detailedJobInfoResource.getStartTime()) @TO@ assertEquals("1970-01-01T00:00:01.000Z",detailedJobInfoResource.getStartTime()) @AT@ 2896 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:["1969-12-31T18:00:01.000-06:00", detailedJobInfoResource.getStartTime()] @TO@ MethodName:assertEquals:["1970-01-01T00:00:01.000Z", detailedJobInfoResource.getStartTime()] @AT@ 2896 @LENGTH@ 85
---------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 2909 @LENGTH@ 31


UPD TypeDeclaration@@[private, static]ChannelCallback,  @TO@ [private]ChannelCallback,  @AT@ 1961 @LENGTH@ 110
---DEL Modifier@@static @AT@ 1969 @LENGTH@ 6


UPD FieldDeclaration@@private, Map<Integer,boolean[]>, [socketAudits=new HashMap<>()] @TO@ private, Map<Integer,boolean[]>, [socketAudits=new HashMap<Integer,boolean[]>()] @AT@ 1384 @LENGTH@ 63
---UPD VariableDeclarationFragment@@socketAudits=new HashMap<>() @TO@ socketAudits=new HashMap<Integer,boolean[]>() @AT@ 1416 @LENGTH@ 30
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<Integer,boolean[]>[] @AT@ 1431 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<Integer,boolean[]> @AT@ 1435 @LENGTH@ 9
------------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<> @AT@ 1443 @LENGTH@ 7
------------INS ArrayType@@boolean[] @TO@ ParameterizedType@@HashMap<> @AT@ 1452 @LENGTH@ 9
---------------INS PrimitiveType@@boolean @TO@ ArrayType@@boolean[] @AT@ 1452 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:String.format("[%d]: %s",Integer.valueOf(ino),name) @TO@ MethodInvocation:String.format("[%d]: %s",ino,name) @AT@ 1933 @LENGTH@ 61
---UPD MethodInvocation@@String.format("[%d]: %s",Integer.valueOf(ino),name) @TO@ String.format("[%d]: %s",ino,name) @AT@ 1940 @LENGTH@ 53
------UPD SimpleName@@MethodName:format:["[%d]: %s", Integer.valueOf(ino), name] @TO@ MethodName:format:["[%d]: %s", ino, name] @AT@ 1947 @LENGTH@ 46
---------DEL MethodInvocation@@Integer.valueOf(ino) @AT@ 1966 @LENGTH@ 20
------------DEL SimpleName@@Name:Integer @AT@ 1966 @LENGTH@ 7
------------DEL SimpleName@@MethodName:valueOf:[ino] @AT@ 1974 @LENGTH@ 12
---------MOV SimpleName@@ino @TO@ SimpleName@@MethodName:format:["[%d]: %s", Integer.valueOf(ino), name] @AT@ 1982 @LENGTH@ 3


UPD VariableDeclarationStatement@@ResourceMetadata metadata=mappings.getMappingFor(source.getClass()); @TO@ ResourceMetadata metadata=mappings.getMetadataFor(source.getClass()); @AT@ 2897 @LENGTH@ 70
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(source.getClass()) @TO@ metadata=mappings.getMetadataFor(source.getClass()) @AT@ 2914 @LENGTH@ 52
------UPD MethodInvocation@@mappings.getMappingFor(source.getClass()) @TO@ mappings.getMetadataFor(source.getClass()) @AT@ 2925 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getMappingFor:[source.getClass()] @TO@ MethodName:getMetadataFor:[source.getClass()] @AT@ 2934 @LENGTH@ 32


UPD ExpressionStatement@@Assignment:authentication=createRefreshedAuthentication(authentication,tokenRequest.getScope()) @TO@ Assignment:authentication=createRefreshedAuthentication(authentication,tokenRequest) @AT@ 6414 @LENGTH@ 88
---UPD Assignment@@authentication=createRefreshedAuthentication(authentication,tokenRequest.getScope()) @TO@ authentication=createRefreshedAuthentication(authentication,tokenRequest) @AT@ 6414 @LENGTH@ 87
------UPD MethodInvocation@@createRefreshedAuthentication(authentication,tokenRequest.getScope()) @TO@ createRefreshedAuthentication(authentication,tokenRequest) @AT@ 6431 @LENGTH@ 70
---------UPD SimpleName@@MethodName:createRefreshedAuthentication:[authentication, tokenRequest.getScope()] @TO@ MethodName:createRefreshedAuthentication:[authentication, tokenRequest] @AT@ 6431 @LENGTH@ 70
------------DEL MethodInvocation@@tokenRequest.getScope() @AT@ 6477 @LENGTH@ 23
---------------DEL SimpleName@@Name:tokenRequest @AT@ 6477 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getScope:[] @AT@ 6490 @LENGTH@ 10
------------INS SimpleName@@tokenRequest @TO@ SimpleName@@MethodName:createRefreshedAuthentication:[authentication, tokenRequest.getScope()] @AT@ 6477 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 3116 @LENGTH@ 38
---INS MethodInvocation@@restConfiguration().host("localhost") @TO@ ExpressionStatement@@MethodInvocation:restConfiguration().host("localhost") @AT@ 3116 @LENGTH@ 37
------INS MethodInvocation@@MethodName:restConfiguration:[] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3116 @LENGTH@ 19
------INS SimpleName@@MethodName:host:["localhost"] @TO@ MethodInvocation@@restConfiguration().host("localhost") @AT@ 3136 @LENGTH@ 17
---------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:host:["localhost"] @AT@ 3141 @LENGTH@ 11


INS IfStatement@@if (len == 0) {  return NO_BYTES;} @TO@ MethodDeclaration@@public, byte[], MethodName:wrap, final byte[] outgoing, final int offset, final int len, SaslException,  @AT@ 6506 @LENGTH@ 53
---INS InfixExpression@@len == 0 @TO@ IfStatement@@if (len == 0) {  return NO_BYTES;} @AT@ 6509 @LENGTH@ 8
------INS SimpleName@@len @TO@ InfixExpression@@len == 0 @AT@ 6509 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@len == 0 @AT@ 6512 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@len == 0 @AT@ 6516 @LENGTH@ 1
---INS Block@@ThenBody:{  return NO_BYTES;} @TO@ IfStatement@@if (len == 0) {  return NO_BYTES;} @AT@ 6519 @LENGTH@ 40
------INS ReturnStatement@@SimpleName:NO_BYTES @TO@ Block@@ThenBody:{  return NO_BYTES;} @AT@ 6533 @LENGTH@ 16
---------INS SimpleName@@NO_BYTES @TO@ ReturnStatement@@SimpleName:NO_BYTES @AT@ 6540 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:mockMvc.perform(get("/batch/configurations").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(2))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2,1))).andExpect(jsonPath("$.content[1][*].launchable",contains(false,true))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false,true))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue(),nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00",null))).andExpect(jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00",null))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount(),0))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][1].name",equalTo("job2"))).andExpect(jsonPath("$.content[1][1].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))).andExpect(jsonPath("$.content[1][1].exitStatus",nullValue())) @TO@ MethodInvocation:mockMvc.perform(get("/batch/configurations").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(2))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2,1))).andExpect(jsonPath("$.content[1][*].launchable",contains(false,true))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false,true))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue(),nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z",null))).andExpect(jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z",null))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount(),0))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][1].name",equalTo("job2"))).andExpect(jsonPath("$.content[1][1].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))).andExpect(jsonPath("$.content[1][1].exitStatus",nullValue())) @AT@ 3519 @LENGTH@ 1754
---UPD MethodInvocation@@mockMvc.perform(get("/batch/configurations").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(2))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2,1))).andExpect(jsonPath("$.content[1][*].launchable",contains(false,true))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false,true))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue(),nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00",null))).andExpect(jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00",null))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount(),0))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][1].name",equalTo("job2"))).andExpect(jsonPath("$.content[1][1].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))).andExpect(jsonPath("$.content[1][1].exitStatus",nullValue())) @TO@ mockMvc.perform(get("/batch/configurations").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(jsonPath("$.content[1]",Matchers.hasSize(2))).andExpect(jsonPath("$.content[1][*].executionCount",contains(2,1))).andExpect(jsonPath("$.content[1][*].launchable",contains(false,true))).andExpect(jsonPath("$.content[1][*].incrementable",contains(false,true))).andExpect(jsonPath("$.content[1][*].jobInstanceId",contains(nullValue(),nullValue()))).andExpect(jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z",null))).andExpect(jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z",null))).andExpect(jsonPath("$.content[1][*].stepExecutionCount",contains(info.getStepExecutionCount(),0))).andExpect(jsonPath("$.content[1][*].jobParameters.parameters['foo'].value",contains("bar"))).andExpect(jsonPath("$.content[1][0].name",equalTo("job1"))).andExpect(jsonPath("$.content[1][0].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][1].name",equalTo("job2"))).andExpect(jsonPath("$.content[1][1].jobInstanceId",nullValue())).andExpect(jsonPath("$.content[1][0].exitStatus.exitDescription",equalTo(execution.getExitStatus().getExitDescription()))).andExpect(jsonPath("$.content[1][0].exitStatus.exitCode",equalTo(execution.getExitStatus().getExitCode()))).andExpect(jsonPath("$.content[1][0].exitStatus.running",equalTo(false))).andExpect(jsonPath("$.content[1][1].exitStatus",nullValue())) @AT@ 3519 @LENGTH@ 1753
------UPD MethodInvocation@@MethodName:andExpect:[jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00",null))] @TO@ MethodName:andExpect:[jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z",null))] @AT@ 3519 @LENGTH@ 728
---------UPD MethodInvocation@@jsonPath("$.content[1][*].endTime",contains("1969-12-31T18:00:02.000-06:00",null)) @TO@ jsonPath("$.content[1][*].endTime",contains("1970-01-01T00:00:02.000Z",null)) @AT@ 4162 @LENGTH@ 84
------------UPD SimpleName@@MethodName:jsonPath:["$.content[1][*].endTime", contains("1969-12-31T18:00:02.000-06:00",null)] @TO@ MethodName:jsonPath:["$.content[1][*].endTime", contains("1970-01-01T00:00:02.000Z",null)] @AT@ 4162 @LENGTH@ 84
---------------UPD MethodInvocation@@contains("1969-12-31T18:00:02.000-06:00",null) @TO@ contains("1970-01-01T00:00:02.000Z",null) @AT@ 4198 @LENGTH@ 47
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:02.000-06:00", null] @TO@ MethodName:contains:["1970-01-01T00:00:02.000Z", null] @AT@ 4198 @LENGTH@ 47
---------------------UPD StringLiteral@@"1969-12-31T18:00:02.000-06:00" @TO@ "1970-01-01T00:00:02.000Z" @AT@ 4207 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:02.000-06:00", null] @TO@ MethodName:contains:["1970-01-01T00:00:02.000Z", null] @AT@ 4198 @LENGTH@ 47
---------------------UPD StringLiteral@@"1969-12-31T18:00:02.000-06:00" @TO@ "1970-01-01T00:00:02.000Z" @AT@ 4207 @LENGTH@ 31
------UPD MethodInvocation@@MethodName:andExpect:[jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00",null))] @TO@ MethodName:andExpect:[jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z",null))] @AT@ 3519 @LENGTH@ 627
---------UPD MethodInvocation@@jsonPath("$.content[1][*].startTime",contains("1969-12-31T18:00:01.000-06:00",null)) @TO@ jsonPath("$.content[1][*].startTime",contains("1970-01-01T00:00:01.000Z",null)) @AT@ 4059 @LENGTH@ 86
------------UPD SimpleName@@MethodName:jsonPath:["$.content[1][*].startTime", contains("1969-12-31T18:00:01.000-06:00",null)] @TO@ MethodName:jsonPath:["$.content[1][*].startTime", contains("1970-01-01T00:00:01.000Z",null)] @AT@ 4059 @LENGTH@ 86
---------------UPD MethodInvocation@@contains("1969-12-31T18:00:01.000-06:00",null) @TO@ contains("1970-01-01T00:00:01.000Z",null) @AT@ 4097 @LENGTH@ 47
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:01.000-06:00", null] @TO@ MethodName:contains:["1970-01-01T00:00:01.000Z", null] @AT@ 4097 @LENGTH@ 47
---------------------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 4106 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:contains:["1969-12-31T18:00:01.000-06:00", null] @TO@ MethodName:contains:["1970-01-01T00:00:01.000Z", null] @AT@ 4097 @LENGTH@ 47
---------------------UPD StringLiteral@@"1969-12-31T18:00:01.000-06:00" @TO@ "1970-01-01T00:00:01.000Z" @AT@ 4106 @LENGTH@ 31


UPD VariableDeclarationStatement@@OrcProto.RowIndex[] index=recordReader.readRowIndex(0); @TO@ OrcProto.RowIndex[] index=recordReader.readRowIndex(0,null); @AT@ 29322 @LENGTH@ 57
---UPD VariableDeclarationFragment@@index=recordReader.readRowIndex(0) @TO@ index=recordReader.readRowIndex(0,null) @AT@ 29342 @LENGTH@ 36
------UPD MethodInvocation@@recordReader.readRowIndex(0) @TO@ recordReader.readRowIndex(0,null) @AT@ 29350 @LENGTH@ 28
---------UPD SimpleName@@MethodName:readRowIndex:[0] @TO@ MethodName:readRowIndex:[0, null] @AT@ 29363 @LENGTH@ 15
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:readRowIndex:[0] @AT@ 29379 @LENGTH@ 4


UPD Block@@ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  try {    while (directBuf.remaining() > 0) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      directBuf.position(directBuf.position() + count);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(0);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @TO@ ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  int pos=directBuf.position();  try {    while (directBuf.remaining() >= 0) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      if (directBuf.position() != pos) {        RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());      }      pos+=count;      if (pos > len) {        throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);      }      directBuf.position(pos);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(0);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @AT@ 9863 @LENGTH@ 698
---UPD TryStatement@@try {  while (directBuf.remaining() > 0) {    int count=file.read(directBuf);    if (count < 0)     throw new EOFException();    directBuf.position(directBuf.position() + count);  }} catch (UnsupportedOperationException ex) {  RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");  byte[] buffer=new byte[len];  file.readFully(buffer,0,buffer.length);  directBuf.put(buffer);} @TO@ try {  while (directBuf.remaining() >= 0) {    int count=file.read(directBuf);    if (count < 0)     throw new EOFException();    if (directBuf.position() != pos) {      RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());    }    pos+=count;    if (pos > len) {      throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);    }    directBuf.position(pos);  }} catch (UnsupportedOperationException ex) {  RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");  byte[] buffer=new byte[len];  file.readFully(buffer,0,buffer.length);  directBuf.put(buffer);} @AT@ 9936 @LENGTH@ 505
------UPD WhileStatement@@while (directBuf.remaining() > 0) {  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @TO@ while (directBuf.remaining() >= 0) {  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  if (directBuf.position() != pos) {    RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());  }  pos+=count;  if (pos > len) {    throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);  }  directBuf.position(pos);} @AT@ 9952 @LENGTH@ 208
---------UPD InfixExpression@@directBuf.remaining() > 0 @TO@ directBuf.remaining() >= 0 @AT@ 9959 @LENGTH@ 25
------------UPD Operator@@> @TO@ >= @AT@ 9980 @LENGTH@ 1
---------UPD Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @TO@ WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  if (directBuf.position() != pos) {    RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());  }  pos+=count;  if (pos > len) {    throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);  }  directBuf.position(pos);} @AT@ 9986 @LENGTH@ 174
------------DEL ExpressionStatement@@MethodInvocation:directBuf.position(directBuf.position() + count) @AT@ 10099 @LENGTH@ 49
---------------DEL MethodInvocation@@directBuf.position(directBuf.position() + count) @AT@ 10099 @LENGTH@ 48
------------------DEL SimpleName@@MethodName:position:[directBuf.position() + count] @AT@ 10109 @LENGTH@ 38
---------------------DEL InfixExpression@@directBuf.position() + count @AT@ 10118 @LENGTH@ 28
------------INS IfStatement@@if (directBuf.position() != pos) {  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @TO@ Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @AT@ 10140 @LENGTH@ 250
---------------INS InfixExpression@@directBuf.position() != pos @TO@ IfStatement@@if (directBuf.position() != pos) {  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @AT@ 10144 @LENGTH@ 27
------------------INS MethodInvocation@@directBuf.position() @TO@ InfixExpression@@directBuf.position() != pos @AT@ 10144 @LENGTH@ 20
---------------------MOV SimpleName@@Name:directBuf @TO@ MethodInvocation@@directBuf.position() @AT@ 10099 @LENGTH@ 9
---------------------MOV SimpleName@@Name:directBuf @TO@ MethodInvocation@@directBuf.position() @AT@ 10099 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:position:[] @TO@ MethodInvocation@@directBuf.position() @AT@ 10154 @LENGTH@ 10
------------------INS Operator@@!= @TO@ InfixExpression@@directBuf.position() != pos @AT@ 10164 @LENGTH@ 2
------------------INS SimpleName@@pos @TO@ InfixExpression@@directBuf.position() != pos @AT@ 10168 @LENGTH@ 3
---------------INS Block@@ThenBody:{  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @TO@ IfStatement@@if (directBuf.position() != pos) {  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @AT@ 10173 @LENGTH@ 217
------------------INS ExpressionStatement@@MethodInvocation:RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @TO@ Block@@ThenBody:{  RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position());} @AT@ 10189 @LENGTH@ 187
---------------------INS MethodInvocation@@RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @TO@ ExpressionStatement@@MethodInvocation:RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @AT@ 10189 @LENGTH@ 186
------------------------INS QualifiedName@@Name:RecordReaderImpl.LOG @TO@ MethodInvocation@@RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @AT@ 10189 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:info:["Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()] @TO@ MethodInvocation@@RecordReaderImpl.LOG.info("Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()) @AT@ 10210 @LENGTH@ 165
---------------------------INS InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @TO@ SimpleName@@MethodName:info:["Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position()] @AT@ 10215 @LENGTH@ 159
------------------------------MOV MethodInvocation@@directBuf.position() @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10118 @LENGTH@ 20
------------------------------MOV MethodInvocation@@directBuf.position() @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10118 @LENGTH@ 20
------------------------------INS StringLiteral@@"Warning - position mismatch from " @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10215 @LENGTH@ 35
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10250 @LENGTH@ 1
------------------------------INS MethodInvocation@@file.getClass() @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10253 @LENGTH@ 15
---------------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getClass() @AT@ 10253 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@file.getClass() @AT@ 10258 @LENGTH@ 10
------------------------------INS StringLiteral@@": after reading " @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10289 @LENGTH@ 18
------------------------------INS SimpleName@@count @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10310 @LENGTH@ 5
------------------------------INS StringLiteral@@", expected " @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10318 @LENGTH@ 13
------------------------------INS SimpleName@@pos @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10334 @LENGTH@ 3
------------------------------INS StringLiteral@@" but got " @TO@ InfixExpression@@"Warning - position mismatch from " + file.getClass() + ": after reading "+ count+ ", expected "+ pos+ " but got "+ directBuf.position() @AT@ 10340 @LENGTH@ 11
------------INS ExpressionStatement@@Assignment:pos+=count @TO@ Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @AT@ 10403 @LENGTH@ 13
---------------INS Assignment@@pos+=count @TO@ ExpressionStatement@@Assignment:pos+=count @AT@ 10403 @LENGTH@ 12
------------------INS SimpleName@@pos @TO@ Assignment@@pos+=count @AT@ 10403 @LENGTH@ 3
------------------INS Operator@@+= @TO@ Assignment@@pos+=count @AT@ 10406 @LENGTH@ 2
------------------INS SimpleName@@count @TO@ Assignment@@pos+=count @AT@ 10410 @LENGTH@ 5
------------INS IfStatement@@if (pos > len) {  throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);} @TO@ Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @AT@ 10429 @LENGTH@ 136
---------------INS InfixExpression@@pos > len @TO@ IfStatement@@if (pos > len) {  throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);} @AT@ 10433 @LENGTH@ 9
------------------INS SimpleName@@pos @TO@ InfixExpression@@pos > len @AT@ 10433 @LENGTH@ 3
------------------INS Operator@@> @TO@ InfixExpression@@pos > len @AT@ 10436 @LENGTH@ 1
------------------INS SimpleName@@len @TO@ InfixExpression@@pos > len @AT@ 10439 @LENGTH@ 3
---------------INS Block@@ThenBody:{  throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);} @TO@ IfStatement@@if (pos > len) {  throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);} @AT@ 10444 @LENGTH@ 121
------------------INS ThrowStatement@@ClassInstanceCreation:new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count) @TO@ Block@@ThenBody:{  throw new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count);} @AT@ 10460 @LENGTH@ 91
---------------------INS ClassInstanceCreation@@AssertionError["Position " + pos + " length "+ len+ " after reading "+ count] @TO@ ThrowStatement@@ClassInstanceCreation:new AssertionError("Position " + pos + " length "+ len+ " after reading "+ count) @AT@ 10466 @LENGTH@ 84
------------------------INS New@@new @TO@ ClassInstanceCreation@@AssertionError["Position " + pos + " length "+ len+ " after reading "+ count] @AT@ 10466 @LENGTH@ 3
------------------------INS SimpleType@@AssertionError @TO@ ClassInstanceCreation@@AssertionError["Position " + pos + " length "+ len+ " after reading "+ count] @AT@ 10470 @LENGTH@ 14
------------------------INS InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @TO@ ClassInstanceCreation@@AssertionError["Position " + pos + " length "+ len+ " after reading "+ count] @AT@ 10485 @LENGTH@ 64
---------------------------MOV Operator@@+ @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10138 @LENGTH@ 1
---------------------------MOV Operator@@+ @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10138 @LENGTH@ 1
---------------------------MOV SimpleName@@count @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10141 @LENGTH@ 5
---------------------------MOV SimpleName@@count @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10141 @LENGTH@ 5
---------------------------INS StringLiteral@@"Position " @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10485 @LENGTH@ 11
---------------------------INS SimpleName@@pos @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10499 @LENGTH@ 3
---------------------------INS StringLiteral@@" length " @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10505 @LENGTH@ 10
---------------------------INS SimpleName@@len @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10518 @LENGTH@ 3
---------------------------INS StringLiteral@@" after reading " @TO@ InfixExpression@@"Position " + pos + " length "+ len+ " after reading "+ count @AT@ 10524 @LENGTH@ 17
------------INS ExpressionStatement@@MethodInvocation:directBuf.position(pos) @TO@ Block@@WhileBody:{  int count=file.read(directBuf);  if (count < 0)   throw new EOFException();  directBuf.position(directBuf.position() + count);} @AT@ 10578 @LENGTH@ 24
---------------INS MethodInvocation@@directBuf.position(pos) @TO@ ExpressionStatement@@MethodInvocation:directBuf.position(pos) @AT@ 10578 @LENGTH@ 23
------------------INS SimpleName@@Name:directBuf @TO@ MethodInvocation@@directBuf.position(pos) @AT@ 10578 @LENGTH@ 9
------------------INS SimpleName@@MethodName:position:[pos] @TO@ MethodInvocation@@directBuf.position(pos) @AT@ 10588 @LENGTH@ 13
---------------------INS SimpleName@@pos @TO@ SimpleName@@MethodName:position:[pos] @AT@ 10597 @LENGTH@ 3
---INS VariableDeclarationStatement@@int pos=directBuf.position(); @TO@ Block@@ThenBody:{  ByteBuffer directBuf=ByteBuffer.allocateDirect(len);  try {    while (directBuf.remaining() > 0) {      int count=file.read(directBuf);      if (count < 0)       throw new EOFException();      directBuf.position(directBuf.position() + count);    }  } catch (  UnsupportedOperationException ex) {    RecordReaderImpl.LOG.error("Stream does not support direct read; we will copy.");    byte[] buffer=new byte[len];    file.readFully(buffer,0,buffer.length);    directBuf.put(buffer);  }  directBuf.position(0);  range=range.replaceSelfWith(new BufferChunk(directBuf,range.offset));} @AT@ 9936 @LENGTH@ 31
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int pos=directBuf.position(); @AT@ 9936 @LENGTH@ 3
------INS VariableDeclarationFragment@@pos=directBuf.position() @TO@ VariableDeclarationStatement@@int pos=directBuf.position(); @AT@ 9940 @LENGTH@ 26
---------INS SimpleName@@pos @TO@ VariableDeclarationFragment@@pos=directBuf.position() @AT@ 9940 @LENGTH@ 3
---------INS MethodInvocation@@directBuf.position() @TO@ VariableDeclarationFragment@@pos=directBuf.position() @AT@ 9946 @LENGTH@ 20
------------INS SimpleName@@Name:directBuf @TO@ MethodInvocation@@directBuf.position() @AT@ 9946 @LENGTH@ 9
------------INS SimpleName@@MethodName:position:[] @TO@ MethodInvocation@@directBuf.position() @AT@ 9956 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testCopyTo, Exception,  @AT@ 1629 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 1629 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 1629 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 1636 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 1642 @LENGTH@ 3

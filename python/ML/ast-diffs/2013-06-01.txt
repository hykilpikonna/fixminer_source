INS MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @TO@ TypeDeclaration@@[public]BlueprintCamelContext, DefaultCamelContext[ServiceListener, BlueprintListener] @AT@ 4634 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4634 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Properties> @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4641 @LENGTH@ 23
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Properties> @AT@ 4641 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Properties> @AT@ 4645 @LENGTH@ 6
------INS SimpleType@@Properties @TO@ ParameterizedType@@Map<String,Properties> @AT@ 4653 @LENGTH@ 10
---INS SimpleName@@MethodName:findComponents @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4665 @LENGTH@ 14
---INS SimpleType@@LoadPropertiesException @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4689 @LENGTH@ 23
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4714 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:BundleContextUtils.findComponents(bundleContext,this) @TO@ MethodDeclaration@@public, Map<String,Properties>, MethodName:findComponents, LoadPropertiesException, IOException,  @AT@ 4736 @LENGTH@ 62
------INS MethodInvocation@@BundleContextUtils.findComponents(bundleContext,this) @TO@ ReturnStatement@@MethodInvocation:BundleContextUtils.findComponents(bundleContext,this) @AT@ 4743 @LENGTH@ 54
---------INS SimpleName@@Name:BundleContextUtils @TO@ MethodInvocation@@BundleContextUtils.findComponents(bundleContext,this) @AT@ 4743 @LENGTH@ 18
---------INS SimpleName@@MethodName:findComponents:[bundleContext, this] @TO@ MethodInvocation@@BundleContextUtils.findComponents(bundleContext,this) @AT@ 4762 @LENGTH@ 35
------------INS SimpleName@@bundleContext @TO@ SimpleName@@MethodName:findComponents:[bundleContext, this] @AT@ 4777 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:findComponents:[bundleContext, this] @AT@ 4792 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:treeCache.start(TreeCache.StartMode.BUILD_INITIAL_CACHE) @TO@ MethodInvocation:treeCache.start(TreeCache.StartMode.NORMAL) @AT@ 4697 @LENGTH@ 57
---UPD MethodInvocation@@treeCache.start(TreeCache.StartMode.BUILD_INITIAL_CACHE) @TO@ treeCache.start(TreeCache.StartMode.NORMAL) @AT@ 4697 @LENGTH@ 56
------UPD SimpleName@@MethodName:start:[TreeCache.StartMode.BUILD_INITIAL_CACHE] @TO@ MethodName:start:[TreeCache.StartMode.NORMAL] @AT@ 4707 @LENGTH@ 46
---------UPD QualifiedName@@TreeCache.StartMode.BUILD_INITIAL_CACHE @TO@ TreeCache.StartMode.NORMAL @AT@ 4713 @LENGTH@ 39
------------UPD SimpleName@@BUILD_INITIAL_CACHE @TO@ NORMAL @AT@ 4733 @LENGTH@ 19


UPD VariableDeclarationStatement@@EcaEndpoint answer=new EcaEndpoint(uri,this,getOrCreateQueue(uri,size),consumers); @TO@ EcaEndpoint answer=new EcaEndpoint(uri,this,null,consumers); @AT@ 1626 @LENGTH@ 88
---UPD VariableDeclarationFragment@@answer=new EcaEndpoint(uri,this,getOrCreateQueue(uri,size),consumers) @TO@ answer=new EcaEndpoint(uri,this,null,consumers) @AT@ 1638 @LENGTH@ 75
------UPD ClassInstanceCreation@@EcaEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @TO@ EcaEndpoint[uri, this, null, consumers] @AT@ 1647 @LENGTH@ 66
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@EcaEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @AT@ 1670 @LENGTH@ 4
---------DEL MethodInvocation@@getOrCreateQueue(uri,size) @AT@ 1674 @LENGTH@ 27
------------DEL SimpleName@@MethodName:getOrCreateQueue:[uri, size] @AT@ 1674 @LENGTH@ 27
---------------DEL SimpleName@@uri @AT@ 1691 @LENGTH@ 3
---------------DEL SimpleName@@size @AT@ 1696 @LENGTH@ 4


INS MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @TO@ TypeDeclaration@@[public]BeanUtils,  @AT@ 1852 @LENGTH@ 340
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1852 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1859 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1866 @LENGTH@ 6
---INS SimpleName@@MethodName:getValue @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1873 @LENGTH@ 8
---INS SingleVariableDeclaration@@Object instance @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1882 @LENGTH@ 15
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object instance @AT@ 1882 @LENGTH@ 6
------INS SimpleName@@instance @TO@ SingleVariableDeclaration@@Object instance @AT@ 1889 @LENGTH@ 8
---INS SingleVariableDeclaration@@String property @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1899 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String property @AT@ 1899 @LENGTH@ 6
------INS SimpleName@@property @TO@ SingleVariableDeclaration@@String property @AT@ 1906 @LENGTH@ 8
---INS TryStatement@@try {  return org.apache.commons.beanutils.BeanUtils.getProperty(instance,property);} catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @TO@ MethodDeclaration@@public, static, Object, MethodName:getValue, Object instance, String property,  @AT@ 1926 @LENGTH@ 260
------INS ReturnStatement@@MethodInvocation:org.apache.commons.beanutils.BeanUtils.getProperty(instance,property) @TO@ TryStatement@@try {  return org.apache.commons.beanutils.BeanUtils.getProperty(instance,property);} catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @AT@ 1944 @LENGTH@ 78
---------INS MethodInvocation@@org.apache.commons.beanutils.BeanUtils.getProperty(instance,property) @TO@ ReturnStatement@@MethodInvocation:org.apache.commons.beanutils.BeanUtils.getProperty(instance,property) @AT@ 1951 @LENGTH@ 70
------------INS QualifiedName@@Name:org.apache.commons.beanutils.BeanUtils @TO@ MethodInvocation@@org.apache.commons.beanutils.BeanUtils.getProperty(instance,property) @AT@ 1951 @LENGTH@ 38
------------INS SimpleName@@MethodName:getProperty:[instance, property] @TO@ MethodInvocation@@org.apache.commons.beanutils.BeanUtils.getProperty(instance,property) @AT@ 1990 @LENGTH@ 31
---------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:getProperty:[instance, property] @AT@ 2002 @LENGTH@ 8
---------------INS SimpleName@@property @TO@ SimpleName@@MethodName:getProperty:[instance, property] @AT@ 2012 @LENGTH@ 8
------INS CatchClause@@catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @TO@ TryStatement@@try {  return org.apache.commons.beanutils.BeanUtils.getProperty(instance,property);} catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @AT@ 2033 @LENGTH@ 153
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @AT@ 2040 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 2040 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 2050 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t) @TO@ CatchClause@@catch (Throwable t) {  throw new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t);} @AT@ 2067 @LENGTH@ 109
------------INS ClassInstanceCreation@@RuntimeException["Failed to set property " + property + " on "+ instance.getClass().getName(), t] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Failed to set property " + property + " on "+ instance.getClass().getName(),t) @AT@ 2073 @LENGTH@ 102
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Failed to set property " + property + " on "+ instance.getClass().getName(), t] @AT@ 2073 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Failed to set property " + property + " on "+ instance.getClass().getName(), t] @AT@ 2077 @LENGTH@ 16
---------------INS InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @TO@ ClassInstanceCreation@@RuntimeException["Failed to set property " + property + " on "+ instance.getClass().getName(), t] @AT@ 2094 @LENGTH@ 77
------------------INS StringLiteral@@"Failed to set property " @TO@ InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @AT@ 2094 @LENGTH@ 25
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @AT@ 2119 @LENGTH@ 1
------------------INS SimpleName@@property @TO@ InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @AT@ 2122 @LENGTH@ 8
------------------INS StringLiteral@@" on " @TO@ InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @AT@ 2133 @LENGTH@ 6
------------------INS MethodInvocation@@instance.getClass().getName() @TO@ InfixExpression@@"Failed to set property " + property + " on "+ instance.getClass().getName() @AT@ 2142 @LENGTH@ 29
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@instance.getClass().getName() @AT@ 2142 @LENGTH@ 19
---------------------INS SimpleName@@Name:instance @TO@ MethodInvocation@@instance.getClass().getName() @AT@ 2142 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@instance.getClass().getName() @AT@ 2162 @LENGTH@ 9
---------------INS SimpleName@@t @TO@ ClassInstanceCreation@@RuntimeException["Failed to set property " + property + " on "+ instance.getClass().getName(), t] @AT@ 2173 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @TO@ public, void, MethodName:testStartMultipleTimesSameParameters, Exception,  @AT@ 11001 @LENGTH@ 671
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @AT@ 11296 @LENGTH@ 9
---INS VariableDeclarationStatement@@int jobInstanceCountBefore=0; @TO@ MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @AT@ 11361 @LENGTH@ 31
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int jobInstanceCountBefore=0; @AT@ 11361 @LENGTH@ 3
------INS VariableDeclarationFragment@@jobInstanceCountBefore=0 @TO@ VariableDeclarationStatement@@int jobInstanceCountBefore=0; @AT@ 11365 @LENGTH@ 26
---------INS SimpleName@@jobInstanceCountBefore @TO@ VariableDeclarationFragment@@jobInstanceCountBefore=0 @AT@ 11365 @LENGTH@ 22
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@jobInstanceCountBefore=0 @AT@ 11390 @LENGTH@ 1
---INS TryStatement@@try {  jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3");} catch (NoSuchJobException ignore) {} @TO@ MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @AT@ 11396 @LENGTH@ 123
------INS ExpressionStatement@@Assignment:jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @TO@ TryStatement@@try {  jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3");} catch (NoSuchJobException ignore) {} @AT@ 11405 @LENGTH@ 70
---------INS Assignment@@jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @TO@ ExpressionStatement@@Assignment:jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11405 @LENGTH@ 69
------------INS SimpleName@@jobInstanceCountBefore @TO@ Assignment@@jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11405 @LENGTH@ 22
------------INS Operator@@= @TO@ Assignment@@jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11427 @LENGTH@ 1
------------INS MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @TO@ Assignment@@jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11430 @LENGTH@ 44
---------------MOV SimpleName@@Name:jsrJobOperator @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11608 @LENGTH@ 14
---------------MOV SimpleName@@MethodName:getJobInstanceCount:["jsrJobOperatorTestJob"] @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 11623 @LENGTH@ 44
------INS CatchClause@@catch (NoSuchJobException ignore) {} @TO@ TryStatement@@try {  jobInstanceCountBefore=jsrJobOperator.getJobInstanceCount("myJob3");} catch (NoSuchJobException ignore) {} @AT@ 11480 @LENGTH@ 39
---------INS SingleVariableDeclaration@@NoSuchJobException ignore @TO@ CatchClause@@catch (NoSuchJobException ignore) {} @AT@ 11487 @LENGTH@ 25
------------INS SimpleType@@NoSuchJobException @TO@ SingleVariableDeclaration@@NoSuchJobException ignore @AT@ 11487 @LENGTH@ 18
------------INS SimpleName@@ignore @TO@ SingleVariableDeclaration@@NoSuchJobException ignore @AT@ 11506 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:assertTrue(3 >= jsrJobOperator.getJobInstanceCount("jsrJobOperatorTestJob")) @AT@ 11592 @LENGTH@ 77
------DEL MethodInvocation@@assertTrue(3 >= jsrJobOperator.getJobInstanceCount("jsrJobOperatorTestJob")) @AT@ 11592 @LENGTH@ 76
---------DEL SimpleName@@MethodName:assertTrue:[3 >= jsrJobOperator.getJobInstanceCount("jsrJobOperatorTestJob")] @AT@ 11592 @LENGTH@ 76
------------DEL InfixExpression@@3 >= jsrJobOperator.getJobInstanceCount("jsrJobOperatorTestJob") @AT@ 11603 @LENGTH@ 64
---------------DEL NumberLiteral@@3 @AT@ 11603 @LENGTH@ 1
---------------DEL Operator@@>= @AT@ 11604 @LENGTH@ 2
---------------DEL MethodInvocation@@jsrJobOperator.getJobInstanceCount("jsrJobOperatorTestJob") @AT@ 11608 @LENGTH@ 59
---INS VariableDeclarationStatement@@int jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3"); @TO@ MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @AT@ 12008 @LENGTH@ 73
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3"); @AT@ 12008 @LENGTH@ 3
------INS VariableDeclarationFragment@@jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3") @TO@ VariableDeclarationStatement@@int jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3"); @AT@ 12012 @LENGTH@ 68
---------INS SimpleName@@jobInstanceCountAfter @TO@ VariableDeclarationFragment@@jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 12012 @LENGTH@ 21
---------INS MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @TO@ VariableDeclarationFragment@@jobInstanceCountAfter=jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 12036 @LENGTH@ 44
------------INS SimpleName@@Name:jsrJobOperator @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 12036 @LENGTH@ 14
------------INS SimpleName@@MethodName:getJobInstanceCount:["myJob3"] @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob3") @AT@ 12051 @LENGTH@ 29
---------------INS StringLiteral@@"myJob3" @TO@ SimpleName@@MethodName:getJobInstanceCount:["myJob3"] @AT@ 12071 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertTrue((jobInstanceCountAfter - jobInstanceCountBefore) == 3) @TO@ MethodDeclaration@@public, void, MethodName:testStartMultipleTimesSameParameters,  @AT@ 12085 @LENGTH@ 66
------INS MethodInvocation@@assertTrue((jobInstanceCountAfter - jobInstanceCountBefore) == 3) @TO@ ExpressionStatement@@MethodInvocation:assertTrue((jobInstanceCountAfter - jobInstanceCountBefore) == 3) @AT@ 12085 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertTrue:[(jobInstanceCountAfter - jobInstanceCountBefore) == 3] @TO@ MethodInvocation@@assertTrue((jobInstanceCountAfter - jobInstanceCountBefore) == 3) @AT@ 12085 @LENGTH@ 65
------------INS InfixExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) == 3 @TO@ SimpleName@@MethodName:assertTrue:[(jobInstanceCountAfter - jobInstanceCountBefore) == 3] @AT@ 12096 @LENGTH@ 53
---------------INS ParenthesizedExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) @TO@ InfixExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) == 3 @AT@ 12096 @LENGTH@ 48
------------------INS InfixExpression@@jobInstanceCountAfter - jobInstanceCountBefore @TO@ ParenthesizedExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) @AT@ 12097 @LENGTH@ 46
---------------------INS SimpleName@@jobInstanceCountAfter @TO@ InfixExpression@@jobInstanceCountAfter - jobInstanceCountBefore @AT@ 12097 @LENGTH@ 21
---------------------INS Operator@@- @TO@ InfixExpression@@jobInstanceCountAfter - jobInstanceCountBefore @AT@ 12118 @LENGTH@ 1
---------------------INS SimpleName@@jobInstanceCountBefore @TO@ InfixExpression@@jobInstanceCountAfter - jobInstanceCountBefore @AT@ 12121 @LENGTH@ 22
---------------INS Operator@@== @TO@ InfixExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) == 3 @AT@ 12144 @LENGTH@ 2
---------------INS NumberLiteral@@3 @TO@ InfixExpression@@(jobInstanceCountAfter - jobInstanceCountBefore) == 3 @AT@ 12148 @LENGTH@ 1


UPD IfStatement@@if (service.requiresReload()) {  throw MESSAGES.serverRequiresReload();} @TO@ if (service.requiresRestart()) {  throw MESSAGES.serverRequiresRestart();} @AT@ 2795 @LENGTH@ 92
---UPD MethodInvocation@@service.requiresReload() @TO@ service.requiresRestart() @AT@ 2799 @LENGTH@ 24
------UPD SimpleName@@MethodName:requiresReload:[] @TO@ MethodName:requiresRestart:[] @AT@ 2807 @LENGTH@ 16
---UPD Block@@ThenBody:{  throw MESSAGES.serverRequiresReload();} @TO@ ThenBody:{  throw MESSAGES.serverRequiresRestart();} @AT@ 2825 @LENGTH@ 62
------UPD ThrowStatement@@MethodInvocation:MESSAGES.serverRequiresReload() @TO@ MethodInvocation:MESSAGES.serverRequiresRestart() @AT@ 2839 @LENGTH@ 38
---------UPD MethodInvocation@@MESSAGES.serverRequiresReload() @TO@ MESSAGES.serverRequiresRestart() @AT@ 2845 @LENGTH@ 31
------------UPD SimpleName@@MethodName:serverRequiresReload:[] @TO@ MethodName:serverRequiresRestart:[] @AT@ 2854 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:endpoint.onListenerContainerStarting(listenerContainer) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 10254 @LENGTH@ 56
---INS MethodInvocation@@endpoint.onListenerContainerStarting(listenerContainer) @TO@ ExpressionStatement@@MethodInvocation:endpoint.onListenerContainerStarting(listenerContainer) @AT@ 10254 @LENGTH@ 55
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.onListenerContainerStarting(listenerContainer) @AT@ 10254 @LENGTH@ 8
------INS SimpleName@@MethodName:onListenerContainerStarting:[listenerContainer] @TO@ MethodInvocation@@endpoint.onListenerContainerStarting(listenerContainer) @AT@ 10263 @LENGTH@ 46
---------INS SimpleName@@listenerContainer @TO@ SimpleName@@MethodName:onListenerContainerStarting:[listenerContainer] @AT@ 10291 @LENGTH@ 17


UPD ReturnStatement@@ClassInstanceCreation:new NamingContext(name != null ? name : new CompositeName(""),(Hashtable<String,Object>)environment) @TO@ ClassInstanceCreation:new NamingContext(name != null ? name : new CompositeName(""),environment) @AT@ 1652 @LENGTH@ 111
---UPD ClassInstanceCreation@@NamingContext[name != null ? name : new CompositeName(""), (Hashtable<String,Object>)environment] @TO@ NamingContext[name != null ? name : new CompositeName(""), environment] @AT@ 1659 @LENGTH@ 103
------DEL CastExpression@@(Hashtable<String,Object>)environment @AT@ 1722 @LENGTH@ 39
---------DEL ParameterizedType@@Hashtable<String,Object> @AT@ 1723 @LENGTH@ 25
------------DEL SimpleType@@Hashtable @AT@ 1723 @LENGTH@ 9
------------DEL SimpleType@@String @AT@ 1733 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 1741 @LENGTH@ 6
---------DEL SimpleName@@environment @AT@ 1750 @LENGTH@ 11
------INS SimpleName@@environment @TO@ ClassInstanceCreation@@NamingContext[name != null ? name : new CompositeName(""), (Hashtable<String,Object>)environment] @AT@ 1722 @LENGTH@ 11


UPD IfStatement@@if (consumer.endpoint.isAutoAck()) {  log.trace("Acknowledging receipt [delivery_tag={}]",deliveryTag);  channel.basicAck(deliveryTag,false);} @TO@ if (!consumer.endpoint.isAutoAck()) {  log.trace("Acknowledging receipt [delivery_tag={}]",deliveryTag);  channel.basicAck(deliveryTag,false);} @AT@ 4462 @LENGTH@ 199
---INS PrefixExpression@@!consumer.endpoint.isAutoAck() @TO@ IfStatement@@if (consumer.endpoint.isAutoAck()) {  log.trace("Acknowledging receipt [delivery_tag={}]",deliveryTag);  channel.basicAck(deliveryTag,false);} @AT@ 4466 @LENGTH@ 30
------INS Operator@@! @TO@ PrefixExpression@@!consumer.endpoint.isAutoAck() @AT@ 4466 @LENGTH@ 1
------INS MethodInvocation@@consumer.endpoint.isAutoAck() @TO@ PrefixExpression@@!consumer.endpoint.isAutoAck() @AT@ 4467 @LENGTH@ 29
---------MOV QualifiedName@@Name:consumer.endpoint @TO@ MethodInvocation@@consumer.endpoint.isAutoAck() @AT@ 4466 @LENGTH@ 17
---------MOV SimpleName@@MethodName:isAutoAck:[] @TO@ MethodInvocation@@consumer.endpoint.isAutoAck() @AT@ 4484 @LENGTH@ 11
---DEL MethodInvocation@@consumer.endpoint.isAutoAck() @AT@ 4466 @LENGTH@ 29


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3324 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 3324 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3324 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3332 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 3351 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @TO@ MethodDeclaration@@public, void, MethodName:afterRun, Exception,  @AT@ 2109 @LENGTH@ 41
---INS MethodInvocation@@ServiceHelper.stopServices(camelContext) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @AT@ 2109 @LENGTH@ 40
------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 2109 @LENGTH@ 13
------INS SimpleName@@MethodName:stopServices:[camelContext] @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 2123 @LENGTH@ 26
---------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:stopServices:[camelContext] @AT@ 2136 @LENGTH@ 12


UPD VariableDeclarationStatement@@int rank=jdbcTemplate.queryForInt("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",userId,data.getProviderId()); @TO@ int rank=jdbcTemplate.queryForObject("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",new Object[]{userId,data.getProviderId()},Integer.class); @AT@ 7421 @LENGTH@ 186
---UPD VariableDeclarationFragment@@rank=jdbcTemplate.queryForInt("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",userId,data.getProviderId()) @TO@ rank=jdbcTemplate.queryForObject("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",new Object[]{userId,data.getProviderId()},Integer.class) @AT@ 7425 @LENGTH@ 181
------UPD MethodInvocation@@jdbcTemplate.queryForInt("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",userId,data.getProviderId()) @TO@ jdbcTemplate.queryForObject("select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?",new Object[]{userId,data.getProviderId()},Integer.class) @AT@ 7432 @LENGTH@ 174
---------UPD SimpleName@@MethodName:queryForInt:["select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?", userId, data.getProviderId()] @TO@ MethodName:queryForObject:["select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?", new Object[]{userId,data.getProviderId()}, Integer.class] @AT@ 7445 @LENGTH@ 161
------------DEL SimpleName@@userId @AT@ 7577 @LENGTH@ 6
------------INS ArrayCreation@@new Object[]{userId,data.getProviderId()} @TO@ SimpleName@@MethodName:queryForInt:["select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?", userId, data.getProviderId()] @AT@ 7580 @LENGTH@ 44
---------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{userId,data.getProviderId()} @AT@ 7584 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 7584 @LENGTH@ 6
---------------INS ArrayInitializer@@{userId,data.getProviderId()} @TO@ ArrayCreation@@new Object[]{userId,data.getProviderId()} @AT@ 7592 @LENGTH@ 32
------------------INS SimpleName@@userId @TO@ ArrayInitializer@@{userId,data.getProviderId()} @AT@ 7594 @LENGTH@ 6
------------------INS MethodInvocation@@data.getProviderId() @TO@ ArrayInitializer@@{userId,data.getProviderId()} @AT@ 7602 @LENGTH@ 20
---------------------MOV SimpleName@@Name:data @TO@ MethodInvocation@@data.getProviderId() @AT@ 7585 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:getProviderId:[] @TO@ MethodInvocation@@data.getProviderId() @AT@ 7590 @LENGTH@ 15
------------DEL MethodInvocation@@data.getProviderId() @AT@ 7585 @LENGTH@ 20
------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:queryForInt:["select coalesce(max(rank) + 1, 1) as rank from " + tablePrefix + "UserConnection where userId = ? and providerId = ?", userId, data.getProviderId()] @AT@ 7626 @LENGTH@ 13


INS ReturnStatement@@MethodInvocation:createUserDetails(token,authorities) @TO@ MethodDeclaration@@public, final, UserDetails, MethodName:loadUserDetails, PreAuthenticatedAuthenticationToken token, AuthenticationException,  @AT@ 2206 @LENGTH@ 45
---INS MethodInvocation@@createUserDetails(token,authorities) @TO@ ReturnStatement@@MethodInvocation:createUserDetails(token,authorities) @AT@ 2213 @LENGTH@ 37
------INS SimpleName@@MethodName:createUserDetails:[token, authorities] @TO@ MethodInvocation@@createUserDetails(token,authorities) @AT@ 2213 @LENGTH@ 37
---------INS SimpleName@@token @TO@ SimpleName@@MethodName:createUserDetails:[token, authorities] @AT@ 2231 @LENGTH@ 5
---------INS SimpleName@@authorities @TO@ SimpleName@@MethodName:createUserDetails:[token, authorities] @AT@ 2238 @LENGTH@ 11


UPD TypeDeclaration@@[@RestResource(rel="people",exported=false), public]AnnotatedPersonRepository, [CrudRepository<Person,Long>] @TO@ [@RestResource(rel="people",exported=false), @NoRepositoryBean, public]AnnotatedPersonRepository, [CrudRepository<Person,Long>] @AT@ 324 @LENGTH@ 131
---INS MarkerAnnotation@@@NoRepositoryBean @TO@ TypeDeclaration@@[@RestResource(rel="people",exported=false), public]AnnotatedPersonRepository, [CrudRepository<Person,Long>] @AT@ 433 @LENGTH@ 17


UPD IfStatement@@if (clazz.getSimpleName().equals("Container")) {  answer.add("parentId");  answer.add("versionId");  answer.add("profileIds");  answer.add("childrenIds");} else if (clazz.getSimpleName().equals("Profile")) {  answer.add("id");  answer.add("parentIds");  answer.add("childIds");  answer.add("containerCount");  answer.add("containers");  answer.add("fileConfigurations");} else if (clazz.getSimpleName().equals("Version")) {  answer.add("id");  answer.add("defaultVersion");} @TO@ if (clazz.getSimpleName().equals("Container")) {  answer.add("parentId");  answer.add("versionId");  answer.add("profileIds");  answer.add("childrenIds");  answer.remove("fabricService");} else if (clazz.getSimpleName().equals("Profile")) {  answer.add("id");  answer.add("parentIds");  answer.add("childIds");  answer.add("containerCount");  answer.add("containers");  answer.add("fileConfigurations");} else if (clazz.getSimpleName().equals("Version")) {  answer.add("id");  answer.add("defaultVersion");} @AT@ 825 @LENGTH@ 633
---UPD Block@@ThenBody:{  answer.add("parentId");  answer.add("versionId");  answer.add("profileIds");  answer.add("childrenIds");} @TO@ ThenBody:{  answer.add("parentId");  answer.add("versionId");  answer.add("profileIds");  answer.add("childrenIds");  answer.remove("fabricService");} @AT@ 872 @LENGTH@ 161
------INS ExpressionStatement@@MethodInvocation:answer.remove("fabricService") @TO@ Block@@ThenBody:{  answer.add("parentId");  answer.add("versionId");  answer.add("profileIds");  answer.add("childrenIds");} @AT@ 1036 @LENGTH@ 31
---------INS MethodInvocation@@answer.remove("fabricService") @TO@ ExpressionStatement@@MethodInvocation:answer.remove("fabricService") @AT@ 1036 @LENGTH@ 30
------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.remove("fabricService") @AT@ 1036 @LENGTH@ 6
------------INS SimpleName@@MethodName:remove:["fabricService"] @TO@ MethodInvocation@@answer.remove("fabricService") @AT@ 1043 @LENGTH@ 23
---------------INS StringLiteral@@"fabricService" @TO@ SimpleName@@MethodName:remove:["fabricService"] @AT@ 1050 @LENGTH@ 15


INS FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @TO@ TypeDeclaration@@[public]Constants,  @AT@ 3580 @LENGTH@ 45
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3580 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3587 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3594 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3600 @LENGTH@ 6
---INS VariableDeclarationFragment@@SYSTEM="system" @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3607 @LENGTH@ 17
------INS SimpleName@@SYSTEM @TO@ VariableDeclarationFragment@@SYSTEM="system" @AT@ 3607 @LENGTH@ 6
------INS StringLiteral@@"system" @TO@ VariableDeclarationFragment@@SYSTEM="system" @AT@ 3616 @LENGTH@ 8


UPD SwitchStatement@@switch (expectedOutcome) {case SUCCESS:  if (!SUCCESS.equals(outcome)) {    System.out.println("Failed: " + operation);    System.out.print("Result: " + result);    fail(result.get(FAILURE_DESCRIPTION).asString());  }break;case UNAUTHORIZED:{if (!FAILED.equals(outcome)) {  fail("Didn't fail: " + result.asString());}if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456")) {  fail("Incorrect failure type: " + result.asString());}break;}case HIDDEN:{if (!FAILED.equals(outcome)) {fail("Didn't fail: " + result.asString());}String failureDesc=result.get(FAILURE_DESCRIPTION).asString();if (!failureDesc.contains("14807") && !failureDesc.contains("14883")) {fail("Incorrect failure type: " + result.asString());}break;}case FAILED:{if (!FAILED.equals(outcome)) {fail("Didn't fail: " + result.asString());}String failureDesc=result.get(FAILURE_DESCRIPTION).asString();if (failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")) {fail("Incorrect failure type: " + result.asString());}break;}default :throw new IllegalStateException();} @TO@ switch (expectedOutcome) {case SUCCESS:  if (!SUCCESS.equals(outcome)) {    System.out.println("Failed: " + operation);    System.out.print("Result: " + result);    fail(result.get(FAILURE_DESCRIPTION).asString());  }break;case UNAUTHORIZED:{if (!FAILED.equals(outcome)) {  fail("Didn't fail: " + result.asString());}if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456")) {  fail("Incorrect failure type: " + result.asString());}break;}case HIDDEN:{if (!FAILED.equals(outcome)) {fail("Didn't fail: " + result.asString());}String failureDesc=result.get(FAILURE_DESCRIPTION).asString();if (!failureDesc.contains("14807") && !failureDesc.contains("14883") && !failureDesc.contains("11340")) {fail("Incorrect failure type: " + result.asString());}break;}case FAILED:{if (!FAILED.equals(outcome)) {fail("Didn't fail: " + result.asString());}String failureDesc=result.get(FAILURE_DESCRIPTION).asString();if (failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")|| failureDesc.contains("11340")) {fail("Incorrect failure type: " + result.asString());}break;}default :throw new IllegalStateException();} @AT@ 4506 @LENGTH@ 1752
---UPD IfStatement@@if (!failureDesc.contains("14807") && !failureDesc.contains("14883")) {  fail("Incorrect failure type: " + result.asString());} @TO@ if (!failureDesc.contains("14807") && !failureDesc.contains("14883") && !failureDesc.contains("11340")) {  fail("Incorrect failure type: " + result.asString());} @AT@ 5468 @LENGTH@ 163
------UPD InfixExpression@@!failureDesc.contains("14807") && !failureDesc.contains("14883") @TO@ !failureDesc.contains("14807") && !failureDesc.contains("14883") && !failureDesc.contains("11340") @AT@ 5472 @LENGTH@ 64
---------INS PrefixExpression@@!failureDesc.contains("11340") @TO@ InfixExpression@@!failureDesc.contains("14807") && !failureDesc.contains("14883") @AT@ 5540 @LENGTH@ 30
------------INS Operator@@! @TO@ PrefixExpression@@!failureDesc.contains("11340") @AT@ 5540 @LENGTH@ 1
------------INS MethodInvocation@@failureDesc.contains("11340") @TO@ PrefixExpression@@!failureDesc.contains("11340") @AT@ 5541 @LENGTH@ 29
---------------INS SimpleName@@Name:failureDesc @TO@ MethodInvocation@@failureDesc.contains("11340") @AT@ 5541 @LENGTH@ 11
---------------INS SimpleName@@MethodName:contains:["11340"] @TO@ MethodInvocation@@failureDesc.contains("11340") @AT@ 5553 @LENGTH@ 17
------------------INS StringLiteral@@"11340" @TO@ SimpleName@@MethodName:contains:["11340"] @AT@ 5562 @LENGTH@ 7
---UPD IfStatement@@if (failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")) {  fail("Incorrect failure type: " + result.asString());} @TO@ if (failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")|| failureDesc.contains("11340")) {  fail("Incorrect failure type: " + result.asString());} @AT@ 5921 @LENGTH@ 218
------UPD InfixExpression@@failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456") @TO@ failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")|| failureDesc.contains("11340") @AT@ 5925 @LENGTH@ 119
---------INS MethodInvocation@@failureDesc.contains("11340") @TO@ InfixExpression@@failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456") @AT@ 6082 @LENGTH@ 29
------------INS SimpleName@@Name:failureDesc @TO@ MethodInvocation@@failureDesc.contains("11340") @AT@ 6082 @LENGTH@ 11
------------INS SimpleName@@MethodName:contains:["11340"] @TO@ MethodInvocation@@failureDesc.contains("11340") @AT@ 6094 @LENGTH@ 17
---------------INS StringLiteral@@"11340" @TO@ SimpleName@@MethodName:contains:["11340"] @AT@ 6103 @LENGTH@ 7


UPD VariableDeclarationStatement@@OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()); @TO@ OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()); @AT@ 2145 @LENGTH@ 290
---UPD VariableDeclarationFragment@@clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 2159 @LENGTH@ 275
------UPD MethodInvocation@@RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 2182 @LENGTH@ 252
---------UPD SimpleName@@MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensionProperties()] @TO@ MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensions()] @AT@ 2202 @LENGTH@ 232
------------UPD MethodInvocation@@request.getExtensionProperties() @TO@ request.getExtensions() @AT@ 2401 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getExtensionProperties:[] @TO@ MethodName:getExtensions:[] @AT@ 2409 @LENGTH@ 24


INS MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2689 @LENGTH@ 84
---INS Modifier@@public @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2689 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2696 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2701 @LENGTH@ 22
---INS ReturnStatement@@SimpleName:workDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2744 @LENGTH@ 15
------INS SimpleName@@workDir @TO@ ReturnStatement@@SimpleName:workDir @AT@ 2751 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new File(getInstallationMetadata(),patchId) @TO@ MethodInvocation:newFile(getInstallationMetadata(),PATCHES,patchId) @AT@ 9730 @LENGTH@ 52
---DEL ClassInstanceCreation@@File[getInstallationMetadata(), patchId] @AT@ 9737 @LENGTH@ 44
------DEL New@@new @AT@ 9737 @LENGTH@ 3
------DEL SimpleType@@File @AT@ 9741 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:getInstallationMetadata:[] @AT@ 9746 @LENGTH@ 25
------DEL SimpleName@@patchId @AT@ 9773 @LENGTH@ 7
---INS MethodInvocation@@newFile(getInstallationMetadata(),PATCHES,patchId) @TO@ ReturnStatement@@ClassInstanceCreation:new File(getInstallationMetadata(),patchId) @AT@ 9744 @LENGTH@ 52
------INS SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @TO@ MethodInvocation@@newFile(getInstallationMetadata(),PATCHES,patchId) @AT@ 9744 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getInstallationMetadata:[] @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9752 @LENGTH@ 25
---------INS SimpleName@@PATCHES @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9779 @LENGTH@ 7
---------INS SimpleName@@patchId @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9788 @LENGTH@ 7


INS MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @TO@ TypeDeclaration@@[@Component(name="org.fusesource.datastore.git",description="Fabric Git DataStore"), @References({@Reference(cardinality=ReferenceCardinality.OPTIONAL_MULTIPLE,referenceInterface=PlaceholderResolver.class,bind="bindPlaceholderResolver",unbind="unbindPlaceholderResolver",policy=ReferencePolicy.DYNAMIC),@Reference(referenceInterface=CuratorFramework.class,bind="bindCurator",unbind="unbindCurator",cardinality=org.apache.felix.scr.annotations.ReferenceCardinality.MANDATORY_UNARY),@Reference(referenceInterface=GitService.class,bind="bindGitService",unbind="unbindGitService",cardinality=org.apache.felix.scr.annotations.ReferenceCardinality.MANDATORY_UNARY)}), @Service(DataStorePlugin.class), public]GitDataStore, DataStoreSupport[DataStorePlugin<GitDataStore>] @AT@ 48074 @LENGTH@ 428
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48074 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48084 @LENGTH@ 7
---INS SimpleName@@MethodName:isProfileDirectory @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48092 @LENGTH@ 18
---INS SingleVariableDeclaration@@File profileDir @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48111 @LENGTH@ 15
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File profileDir @AT@ 48111 @LENGTH@ 4
------INS SimpleName@@profileDir @TO@ SingleVariableDeclaration@@File profileDir @AT@ 48116 @LENGTH@ 10
---INS IfStatement@@if (profileDir.isDirectory()) {  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48138 @LENGTH@ 336
------INS MethodInvocation@@profileDir.isDirectory() @TO@ IfStatement@@if (profileDir.isDirectory()) {  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @AT@ 48142 @LENGTH@ 24
---------INS SimpleName@@Name:profileDir @TO@ MethodInvocation@@profileDir.isDirectory() @AT@ 48142 @LENGTH@ 10
---------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@profileDir.isDirectory() @AT@ 48153 @LENGTH@ 13
------INS Block@@ThenBody:{  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @TO@ IfStatement@@if (profileDir.isDirectory()) {  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @AT@ 48168 @LENGTH@ 306
---------INS VariableDeclarationStatement@@String[] list=profileDir.list(); @TO@ Block@@ThenBody:{  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @AT@ 48182 @LENGTH@ 34
------------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] list=profileDir.list(); @AT@ 48182 @LENGTH@ 8
---------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 48182 @LENGTH@ 6
------------INS VariableDeclarationFragment@@list=profileDir.list() @TO@ VariableDeclarationStatement@@String[] list=profileDir.list(); @AT@ 48191 @LENGTH@ 24
---------------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=profileDir.list() @AT@ 48191 @LENGTH@ 4
---------------INS MethodInvocation@@profileDir.list() @TO@ VariableDeclarationFragment@@list=profileDir.list() @AT@ 48198 @LENGTH@ 17
------------------INS SimpleName@@Name:profileDir @TO@ MethodInvocation@@profileDir.list() @AT@ 48198 @LENGTH@ 10
------------------INS SimpleName@@MethodName:list:[] @TO@ MethodInvocation@@profileDir.list() @AT@ 48209 @LENGTH@ 6
---------INS IfStatement@@if (list != null) {  for (  String file : list) {    if (file.endsWith(".properties") || file.endsWith(".mvel")) {      return true;    }  }} @TO@ Block@@ThenBody:{  String[] list=profileDir.list();  if (list != null) {    for (    String file : list) {      if (file.endsWith(".properties") || file.endsWith(".mvel")) {        return true;      }    }  }} @AT@ 48229 @LENGTH@ 235
------------INS InfixExpression@@list != null @TO@ IfStatement@@if (list != null) {  for (  String file : list) {    if (file.endsWith(".properties") || file.endsWith(".mvel")) {      return true;    }  }} @AT@ 48233 @LENGTH@ 12
---------------INS SimpleName@@list @TO@ InfixExpression@@list != null @AT@ 48233 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@list != null @AT@ 48237 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@list != null @AT@ 48241 @LENGTH@ 4
------------INS Block@@ThenBody:{  for (  String file : list) {    if (file.endsWith(".properties") || file.endsWith(".mvel")) {      return true;    }  }} @TO@ IfStatement@@if (list != null) {  for (  String file : list) {    if (file.endsWith(".properties") || file.endsWith(".mvel")) {      return true;    }  }} @AT@ 48247 @LENGTH@ 217
---------------INS EnhancedForStatement@@for (String file : list) {  if (file.endsWith(".properties") || file.endsWith(".mvel")) {    return true;  }} @TO@ Block@@ThenBody:{  for (  String file : list) {    if (file.endsWith(".properties") || file.endsWith(".mvel")) {      return true;    }  }} @AT@ 48265 @LENGTH@ 185
------------------INS SingleVariableDeclaration@@String file @TO@ EnhancedForStatement@@for (String file : list) {  if (file.endsWith(".properties") || file.endsWith(".mvel")) {    return true;  }} @AT@ 48270 @LENGTH@ 11
---------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String file @AT@ 48270 @LENGTH@ 6
---------------------INS SimpleName@@file @TO@ SingleVariableDeclaration@@String file @AT@ 48277 @LENGTH@ 4
------------------INS SimpleName@@list @TO@ EnhancedForStatement@@for (String file : list) {  if (file.endsWith(".properties") || file.endsWith(".mvel")) {    return true;  }} @AT@ 48284 @LENGTH@ 4
------------------INS IfStatement@@if (file.endsWith(".properties") || file.endsWith(".mvel")) {  return true;} @TO@ EnhancedForStatement@@for (String file : list) {  if (file.endsWith(".properties") || file.endsWith(".mvel")) {    return true;  }} @AT@ 48312 @LENGTH@ 120
---------------------INS InfixExpression@@file.endsWith(".properties") || file.endsWith(".mvel") @TO@ IfStatement@@if (file.endsWith(".properties") || file.endsWith(".mvel")) {  return true;} @AT@ 48316 @LENGTH@ 54
------------------------INS MethodInvocation@@file.endsWith(".properties") @TO@ InfixExpression@@file.endsWith(".properties") || file.endsWith(".mvel") @AT@ 48316 @LENGTH@ 28
---------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.endsWith(".properties") @AT@ 48316 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:endsWith:[".properties"] @TO@ MethodInvocation@@file.endsWith(".properties") @AT@ 48321 @LENGTH@ 23
------------------------------INS StringLiteral@@".properties" @TO@ SimpleName@@MethodName:endsWith:[".properties"] @AT@ 48330 @LENGTH@ 13
------------------------INS Operator@@|| @TO@ InfixExpression@@file.endsWith(".properties") || file.endsWith(".mvel") @AT@ 48344 @LENGTH@ 2
------------------------INS MethodInvocation@@file.endsWith(".mvel") @TO@ InfixExpression@@file.endsWith(".properties") || file.endsWith(".mvel") @AT@ 48348 @LENGTH@ 22
---------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.endsWith(".mvel") @AT@ 48348 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:endsWith:[".mvel"] @TO@ MethodInvocation@@file.endsWith(".mvel") @AT@ 48353 @LENGTH@ 17
------------------------------INS StringLiteral@@".mvel" @TO@ SimpleName@@MethodName:endsWith:[".mvel"] @AT@ 48362 @LENGTH@ 7
---------------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (file.endsWith(".properties") || file.endsWith(".mvel")) {  return true;} @AT@ 48372 @LENGTH@ 60
------------------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 48398 @LENGTH@ 12
---------------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 48405 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:isProfileDirectory, File profileDir,  @AT@ 48483 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 48490 @LENGTH@ 5


UPD FieldDeclaration@@private, final, ValidatingReference<DynamicCompiler>, [compiler=new ValidatingReference<DynamicCompiler>()] @TO@ private, DynamicCompiler, [compiler] @AT@ 1591 @LENGTH@ 105
---INS SimpleType@@DynamicCompiler @TO@ FieldDeclaration@@private, final, ValidatingReference<DynamicCompiler>, [compiler=new ValidatingReference<DynamicCompiler>()] @AT@ 1599 @LENGTH@ 15
---DEL Modifier@@final @AT@ 1599 @LENGTH@ 5
---DEL ParameterizedType@@ValidatingReference<DynamicCompiler> @AT@ 1605 @LENGTH@ 36
------DEL SimpleType@@ValidatingReference @AT@ 1605 @LENGTH@ 19
------DEL SimpleType@@DynamicCompiler @AT@ 1625 @LENGTH@ 15
---UPD VariableDeclarationFragment@@compiler=new ValidatingReference<DynamicCompiler>() @TO@ compiler @AT@ 1642 @LENGTH@ 53
------DEL ClassInstanceCreation@@ValidatingReference<DynamicCompiler>[] @AT@ 1653 @LENGTH@ 42
---------DEL New@@new @AT@ 1653 @LENGTH@ 3
---------DEL ParameterizedType@@ValidatingReference<DynamicCompiler> @AT@ 1657 @LENGTH@ 36
------------DEL SimpleType@@ValidatingReference @AT@ 1657 @LENGTH@ 19
------------DEL SimpleType@@DynamicCompiler @AT@ 1677 @LENGTH@ 15


DEL ExpressionStatement@@MethodInvocation:System.out.println("==== bound a compiler " + value) @AT@ 1777 @LENGTH@ 53
---DEL MethodInvocation@@System.out.println("==== bound a compiler " + value) @AT@ 1777 @LENGTH@ 52
------DEL QualifiedName@@Name:System.out @AT@ 1777 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["==== bound a compiler " + value] @AT@ 1788 @LENGTH@ 41
---------DEL InfixExpression@@"==== bound a compiler " + value @AT@ 1796 @LENGTH@ 32
------------DEL StringLiteral@@"==== bound a compiler " @AT@ 1796 @LENGTH@ 24
------------DEL Operator@@+ @AT@ 1820 @LENGTH@ 1
------------DEL SimpleName@@value @AT@ 1823 @LENGTH@ 5


UPD VariableDeclarationStatement@@DatagramPacket packet=new DatagramPacket(data,data.length,address,10111); @TO@ DatagramPacket packet=new DatagramPacket(data,data.length,address,getPort()); @AT@ 2062 @LENGTH@ 78
---UPD VariableDeclarationFragment@@packet=new DatagramPacket(data,data.length,address,10111) @TO@ packet=new DatagramPacket(data,data.length,address,getPort()) @AT@ 2077 @LENGTH@ 62
------UPD ClassInstanceCreation@@DatagramPacket[data, data.length, address, 10111] @TO@ DatagramPacket[data, data.length, address, getPort()] @AT@ 2086 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ ClassInstanceCreation@@DatagramPacket[data, data.length, address, 10111] @AT@ 1993 @LENGTH@ 9
---------DEL NumberLiteral@@10111 @AT@ 2133 @LENGTH@ 5


INS IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @TO@ MethodDeclaration@@public, void, MethodName:execute, final PatchingTaskContext context, IOException,  @AT@ 4581 @LENGTH@ 97
---INS InfixExpression@@rollbackAction != null @TO@ IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @AT@ 4585 @LENGTH@ 22
------INS SimpleName@@rollbackAction @TO@ InfixExpression@@rollbackAction != null @AT@ 4585 @LENGTH@ 14
------INS Operator@@!= @TO@ InfixExpression@@rollbackAction != null @AT@ 4599 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@rollbackAction != null @AT@ 4603 @LENGTH@ 4
---INS Block@@ThenBody:{  context.recordRollbackAction(rollbackAction);} @TO@ IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @AT@ 4609 @LENGTH@ 69
------MOV ExpressionStatement@@MethodInvocation:context.recordRollbackAction(rollbackAction) @TO@ Block@@ThenBody:{  context.recordRollbackAction(rollbackAction);} @AT@ 4581 @LENGTH@ 45


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build(); @AT@ 3667 @LENGTH@ 297
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 3673 @LENGTH@ 290
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 3681 @LENGTH@ 282
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 3681 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 3681 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 3818 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 3818 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 3828 @LENGTH@ 7


UPD VariableDeclarationStatement@@AuditLogger auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true); @TO@ ManagedAuditLogger auditLogger=(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true); @AT@ 6611 @LENGTH@ 86
---UPD SimpleType@@AuditLogger @TO@ ManagedAuditLogger @AT@ 6611 @LENGTH@ 11
---UPD VariableDeclarationFragment@@auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ auditLogger=(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6623 @LENGTH@ 73
------INS CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ VariableDeclarationFragment@@auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6651 @LENGTH@ 79
---------MOV MethodInvocation@@((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6637 @LENGTH@ 59
---------INS SimpleType@@ManagedAuditLogger @TO@ CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6652 @LENGTH@ 18


UPD VariableDeclarationStatement@@PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME); @TO@ final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1957 @LENGTH@ 122
---INS Modifier@@final @TO@ VariableDeclarationStatement@@PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME); @AT@ 1957 @LENGTH@ 5
---UPD VariableDeclarationFragment@@service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1974 @LENGTH@ 104
------UPD CastExpression@@(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ (PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1984 @LENGTH@ 94
---------UPD MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 2003 @LENGTH@ 75
------------INS MethodInvocation@@MethodName:getRequiredService:[PatchInfoService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @AT@ 2009 @LENGTH@ 75
---------------INS QualifiedName@@PatchInfoService.NAME @TO@ MethodInvocation@@MethodName:getRequiredService:[PatchInfoService.NAME] @AT@ 2062 @LENGTH@ 21
------------------MOV SimpleName@@PatchInfoService @TO@ QualifiedName@@PatchInfoService.NAME @AT@ 2056 @LENGTH@ 16
------------------MOV SimpleName@@NAME @TO@ QualifiedName@@PatchInfoService.NAME @AT@ 2073 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getRequiredService:[PatchInfoService.NAME] @AT@ 2037 @LENGTH@ 41
---------------DEL QualifiedName@@PatchInfoService.NAME @AT@ 2056 @LENGTH@ 21
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @AT@ 2085 @LENGTH@ 10


UPD VariableDeclarationStatement@@final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @TO@ final PatchInfo info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1515 @LENGTH@ 139
---UPD SimpleType@@PatchInfoService @TO@ PatchInfo @AT@ 1521 @LENGTH@ 16
---UPD VariableDeclarationFragment@@service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1538 @LENGTH@ 115
------UPD SimpleName@@service @TO@ info @AT@ 1538 @LENGTH@ 7
------UPD CastExpression@@(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ (PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1548 @LENGTH@ 105
---------UPD SimpleType@@PatchInfoService @TO@ PatchInfo @AT@ 1549 @LENGTH@ 16


MOV FieldDeclaration@@BeanManager, [beanManager] @TO@ TypeDeclaration@@[public]BeanAdapter,  @AT@ 1738 @LENGTH@ 24


INS MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @TO@ TypeDeclaration@@[public]IoUtils,  @AT@ 6727 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6727 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6734 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6741 @LENGTH@ 4
---INS SimpleName@@MethodName:newFile @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6746 @LENGTH@ 7
---INS SingleVariableDeclaration@@File baseDir @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6754 @LENGTH@ 12
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File baseDir @AT@ 6754 @LENGTH@ 4
------INS SimpleName@@baseDir @TO@ SingleVariableDeclaration@@File baseDir @AT@ 6759 @LENGTH@ 7
---INS SingleVariableDeclaration@@String... segments @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6768 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... segments @AT@ 6768 @LENGTH@ 6
------INS SimpleName@@segments @TO@ SingleVariableDeclaration@@String... segments @AT@ 6778 @LENGTH@ 8
---INS VariableDeclarationStatement@@File f=baseDir; @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6798 @LENGTH@ 17
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File f=baseDir; @AT@ 6798 @LENGTH@ 4
------INS VariableDeclarationFragment@@f=baseDir @TO@ VariableDeclarationStatement@@File f=baseDir; @AT@ 6803 @LENGTH@ 11
---------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=baseDir @AT@ 6803 @LENGTH@ 1
---------INS SimpleName@@baseDir @TO@ VariableDeclarationFragment@@f=baseDir @AT@ 6807 @LENGTH@ 7
---INS EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6824 @LENGTH@ 81
------INS SingleVariableDeclaration@@String segment @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6829 @LENGTH@ 14
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String segment @AT@ 6829 @LENGTH@ 6
---------INS SimpleName@@segment @TO@ SingleVariableDeclaration@@String segment @AT@ 6836 @LENGTH@ 7
------INS SimpleName@@segments @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6846 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:f=new File(f,segment) @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6870 @LENGTH@ 25
---------INS Assignment@@f=new File(f,segment) @TO@ ExpressionStatement@@Assignment:f=new File(f,segment) @AT@ 6870 @LENGTH@ 24
------------INS SimpleName@@f @TO@ Assignment@@f=new File(f,segment) @AT@ 6870 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@f=new File(f,segment) @AT@ 6871 @LENGTH@ 1
------------INS ClassInstanceCreation@@File[f, segment] @TO@ Assignment@@f=new File(f,segment) @AT@ 6874 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6874 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6878 @LENGTH@ 4
---------------INS SimpleName@@f @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6883 @LENGTH@ 1
---------------INS SimpleName@@segment @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6886 @LENGTH@ 7
---INS ReturnStatement@@SimpleName:f @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6914 @LENGTH@ 9
------INS SimpleName@@f @TO@ ReturnStatement@@SimpleName:f @AT@ 6921 @LENGTH@ 1


UPD FieldDeclaration@@private, AnnotatedPersonRepository, [people] @TO@ PersonRepository, [people] @AT@ 348 @LENGTH@ 41
---DEL Modifier@@private @AT@ 348 @LENGTH@ 7
---UPD SimpleType@@AnnotatedPersonRepository @TO@ PersonRepository @AT@ 356 @LENGTH@ 25


INS MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3353 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3353 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3360 @LENGTH@ 6
---INS SimpleName@@MethodName:lookup @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3367 @LENGTH@ 6
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3374 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 3374 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 3381 @LENGTH@ 4
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3394 @LENGTH@ 15
---INS ReturnStatement@@InfixExpression:"TestObject: " + name @TO@ MethodDeclaration@@public, Object, MethodName:lookup, String name, NamingException,  @AT@ 3432 @LENGTH@ 29
------INS InfixExpression@@"TestObject: " + name @TO@ ReturnStatement@@InfixExpression:"TestObject: " + name @AT@ 3439 @LENGTH@ 21
---------INS StringLiteral@@"TestObject: " @TO@ InfixExpression@@"TestObject: " + name @AT@ 3439 @LENGTH@ 14
---------INS Operator@@+ @TO@ InfixExpression@@"TestObject: " + name @AT@ 3453 @LENGTH@ 1
---------INS SimpleName@@name @TO@ InfixExpression@@"TestObject: " + name @AT@ 3456 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:delegate.bitCount(serialize(key)) @TO@ MethodInvocation:delegate.bitCount(serialize(key),begin,end) @AT@ 26452 @LENGTH@ 41
---UPD MethodInvocation@@delegate.bitCount(serialize(key)) @TO@ delegate.bitCount(serialize(key),begin,end) @AT@ 26459 @LENGTH@ 33
------UPD SimpleName@@MethodName:bitCount:[serialize(key)] @TO@ MethodName:bitCount:[serialize(key), begin, end] @AT@ 26468 @LENGTH@ 24
---------INS SimpleName@@begin @TO@ SimpleName@@MethodName:bitCount:[serialize(key)] @AT@ 26493 @LENGTH@ 5
---------INS SimpleName@@end @TO@ SimpleName@@MethodName:bitCount:[serialize(key)] @AT@ 26500 @LENGTH@ 3


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@RangeOption, [Comparable<RangeOption>] @AT@ 4671 @LENGTH@ 314
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4671 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4678 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4686 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4693 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 4693 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 4700 @LENGTH@ 1
---INS IfStatement@@if (this == o) return true; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4713 @LENGTH@ 27
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) return true; @AT@ 4717 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 4717 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 4721 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 4725 @LENGTH@ 1
------INS Block@@ThenBody:return true; @TO@ IfStatement@@if (this == o) return true; @AT@ 4728 @LENGTH@ 12
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:return true; @AT@ 4728 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4735 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4749 @LENGTH@ 58
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 4753 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 4753 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 4753 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 4754 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 4758 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 4762 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 4766 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 4766 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 4776 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 4780 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 4780 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 4782 @LENGTH@ 10
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) return false; @AT@ 4794 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 4794 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4801 @LENGTH@ 5
---INS VariableDeclarationStatement@@RangeOption that=(RangeOption)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4817 @LENGTH@ 35
------INS SimpleType@@RangeOption @TO@ VariableDeclarationStatement@@RangeOption that=(RangeOption)o; @AT@ 4817 @LENGTH@ 11
------INS VariableDeclarationFragment@@that=(RangeOption)o @TO@ VariableDeclarationStatement@@RangeOption that=(RangeOption)o; @AT@ 4829 @LENGTH@ 22
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(RangeOption)o @AT@ 4829 @LENGTH@ 4
---------INS CastExpression@@(RangeOption)o @TO@ VariableDeclarationFragment@@that=(RangeOption)o @AT@ 4836 @LENGTH@ 15
------------INS SimpleType@@RangeOption @TO@ CastExpression@@(RangeOption)o @AT@ 4837 @LENGTH@ 11
------------INS SimpleName@@o @TO@ CastExpression@@(RangeOption)o @AT@ 4850 @LENGTH@ 1
---INS IfStatement@@if (initial != that.initial) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4862 @LENGTH@ 42
------INS InfixExpression@@initial != that.initial @TO@ IfStatement@@if (initial != that.initial) return false; @AT@ 4866 @LENGTH@ 23
---------INS SimpleName@@initial @TO@ InfixExpression@@initial != that.initial @AT@ 4866 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@initial != that.initial @AT@ 4873 @LENGTH@ 2
---------INS QualifiedName@@that.initial @TO@ InfixExpression@@initial != that.initial @AT@ 4877 @LENGTH@ 12
------------INS SimpleName@@that @TO@ QualifiedName@@that.initial @AT@ 4877 @LENGTH@ 4
------------INS SimpleName@@initial @TO@ QualifiedName@@that.initial @AT@ 4882 @LENGTH@ 7
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (initial != that.initial) return false; @AT@ 4891 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 4891 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4898 @LENGTH@ 5
---INS IfStatement@@if (terminal != that.terminal) return false; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4913 @LENGTH@ 44
------INS InfixExpression@@terminal != that.terminal @TO@ IfStatement@@if (terminal != that.terminal) return false; @AT@ 4917 @LENGTH@ 25
---------INS SimpleName@@terminal @TO@ InfixExpression@@terminal != that.terminal @AT@ 4917 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@terminal != that.terminal @AT@ 4925 @LENGTH@ 2
---------INS QualifiedName@@that.terminal @TO@ InfixExpression@@terminal != that.terminal @AT@ 4929 @LENGTH@ 13
------------INS SimpleName@@that @TO@ QualifiedName@@that.terminal @AT@ 4929 @LENGTH@ 4
------------INS SimpleName@@terminal @TO@ QualifiedName@@that.terminal @AT@ 4934 @LENGTH@ 8
------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (terminal != that.terminal) return false; @AT@ 4944 @LENGTH@ 13
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 4944 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4951 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 4967 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4974 @LENGTH@ 4


UPD EnhancedForStatement@@for (final Map.Entry<ServletContainerInitializer,Set<Class<?>>> sci : scisMetaData.getHandlesTypes().entrySet()) {  final ImmediateInstanceFactory<ServletContainerInitializer> instanceFactory=new ImmediateInstanceFactory<>(sci.getKey());  d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getKey().getClass(),instanceFactory,sci.getValue()));} @TO@ for (final ServletContainerInitializer sci : scisMetaData.getScis()) {  final ImmediateInstanceFactory<ServletContainerInitializer> instanceFactory=new ImmediateInstanceFactory<>(sci);  d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(),instanceFactory,scisMetaData.getHandlesTypes().get(sci)));} @AT@ 27372 @LENGTH@ 425
---UPD SingleVariableDeclaration@@final Map.Entry<ServletContainerInitializer,Set<Class<?>>> sci @TO@ final ServletContainerInitializer sci @AT@ 27377 @LENGTH@ 63
------DEL ParameterizedType@@Map.Entry<ServletContainerInitializer,Set<Class<?>>> @AT@ 27383 @LENGTH@ 53
---------DEL SimpleType@@Map.Entry @AT@ 27383 @LENGTH@ 9
---------DEL SimpleType@@ServletContainerInitializer @AT@ 27393 @LENGTH@ 27
---------DEL ParameterizedType@@Set<Class<?>> @AT@ 27422 @LENGTH@ 13
------------DEL SimpleType@@Set @AT@ 27422 @LENGTH@ 3
------------DEL ParameterizedType@@Class<?> @AT@ 27426 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 27426 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 27432 @LENGTH@ 1
------INS SimpleType@@ServletContainerInitializer @TO@ SingleVariableDeclaration@@final Map.Entry<ServletContainerInitializer,Set<Class<?>>> sci @AT@ 27383 @LENGTH@ 27
---UPD MethodInvocation@@scisMetaData.getHandlesTypes().entrySet() @TO@ scisMetaData.getScis() @AT@ 27443 @LENGTH@ 41
------DEL MethodInvocation@@MethodName:getHandlesTypes:[] @AT@ 27443 @LENGTH@ 30
------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:getScis:[] @AT@ 27474 @LENGTH@ 10
---UPD VariableDeclarationStatement@@final ImmediateInstanceFactory<ServletContainerInitializer> instanceFactory=new ImmediateInstanceFactory<>(sci.getKey()); @TO@ final ImmediateInstanceFactory<ServletContainerInitializer> instanceFactory=new ImmediateInstanceFactory<>(sci); @AT@ 27508 @LENGTH@ 123
------UPD VariableDeclarationFragment@@instanceFactory=new ImmediateInstanceFactory<>(sci.getKey()) @TO@ instanceFactory=new ImmediateInstanceFactory<>(sci) @AT@ 27568 @LENGTH@ 62
---------UPD ClassInstanceCreation@@ImmediateInstanceFactory<>[sci.getKey()] @TO@ ImmediateInstanceFactory<>[sci] @AT@ 27586 @LENGTH@ 44
------------INS SimpleName@@sci @TO@ ClassInstanceCreation@@ImmediateInstanceFactory<>[sci.getKey()] @AT@ 27572 @LENGTH@ 3
------------DEL MethodInvocation@@sci.getKey() @AT@ 27617 @LENGTH@ 12
---------------DEL SimpleName@@Name:sci @AT@ 27617 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:getKey:[] @AT@ 27621 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getKey().getClass(),instanceFactory,sci.getValue())) @TO@ MethodInvocation:d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(),instanceFactory,scisMetaData.getHandlesTypes().get(sci))) @AT@ 27652 @LENGTH@ 127
------UPD MethodInvocation@@d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getKey().getClass(),instanceFactory,sci.getValue())) @TO@ d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(),instanceFactory,scisMetaData.getHandlesTypes().get(sci))) @AT@ 27652 @LENGTH@ 126
---------UPD SimpleName@@MethodName:addServletContainerInitalizer:[new ServletContainerInitializerInfo(sci.getKey().getClass(),instanceFactory,sci.getValue())] @TO@ MethodName:addServletContainerInitalizer:[new ServletContainerInitializerInfo(sci.getClass(),instanceFactory,scisMetaData.getHandlesTypes().get(sci))] @AT@ 27654 @LENGTH@ 124
------------UPD ClassInstanceCreation@@ServletContainerInitializerInfo[sci.getKey().getClass(), instanceFactory, sci.getValue()] @TO@ ServletContainerInitializerInfo[sci.getClass(), instanceFactory, scisMetaData.getHandlesTypes().get(sci)] @AT@ 27684 @LENGTH@ 93
---------------UPD MethodInvocation@@sci.getKey().getClass() @TO@ sci.getClass() @AT@ 27720 @LENGTH@ 23
------------------DEL MethodInvocation@@MethodName:getKey:[] @AT@ 27720 @LENGTH@ 12
---------------UPD MethodInvocation@@sci.getValue() @TO@ scisMetaData.getHandlesTypes().get(sci) @AT@ 27762 @LENGTH@ 14
------------------INS MethodInvocation@@MethodName:getHandlesTypes:[] @TO@ MethodInvocation@@sci.getValue() @AT@ 27699 @LENGTH@ 30
------------------UPD SimpleName@@Name:sci @TO@ Name:scisMetaData @AT@ 27762 @LENGTH@ 3
------------------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:get:[sci] @AT@ 27766 @LENGTH@ 10
---------------------INS SimpleName@@sci @TO@ SimpleName@@MethodName:getValue:[] @AT@ 27734 @LENGTH@ 3


UPD VariableDeclarationStatement@@AuditLogger auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true); @TO@ ManagedAuditLogger auditLogger=(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true); @AT@ 6611 @LENGTH@ 86
---UPD SimpleType@@AuditLogger @TO@ ManagedAuditLogger @AT@ 6611 @LENGTH@ 11
---UPD VariableDeclarationFragment@@auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ auditLogger=(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6623 @LENGTH@ 73
------INS CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ VariableDeclarationFragment@@auditLogger=((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6651 @LENGTH@ 79
---------MOV MethodInvocation@@((ExtensionContextImpl)context).getAuditLogger(false,true) @TO@ CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6637 @LENGTH@ 59
---------INS SimpleType@@ManagedAuditLogger @TO@ CastExpression@@(ManagedAuditLogger)((ExtensionContextImpl)context).getAuditLogger(false,true) @AT@ 6652 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:contentType=ContentType.parse(contentTypeString) @TO@ Assignment:contentType=ContentType.create(contentTypeString) @AT@ 18420 @LENGTH@ 51
---UPD Assignment@@contentType=ContentType.parse(contentTypeString) @TO@ contentType=ContentType.create(contentTypeString) @AT@ 18420 @LENGTH@ 50
------UPD MethodInvocation@@ContentType.parse(contentTypeString) @TO@ ContentType.create(contentTypeString) @AT@ 18434 @LENGTH@ 36
---------UPD SimpleName@@MethodName:parse:[contentTypeString] @TO@ MethodName:create:[contentTypeString] @AT@ 18446 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:escaped.append('0').append(c >> 3).append(c & 0b111) @TO@ MethodInvocation:escaped.append('0').append(c >> 3).append(c & 0x07) @AT@ 5924 @LENGTH@ 53
---UPD MethodInvocation@@escaped.append('0').append(c >> 3).append(c & 0b111) @TO@ escaped.append('0').append(c >> 3).append(c & 0x07) @AT@ 5924 @LENGTH@ 52
------UPD SimpleName@@MethodName:append:[c & 0b111] @TO@ MethodName:append:[c & 0x07] @AT@ 5959 @LENGTH@ 17
---------UPD InfixExpression@@c & 0b111 @TO@ c & 0x07 @AT@ 5966 @LENGTH@ 9
------------UPD NumberLiteral@@0b111 @TO@ 0x07 @AT@ 5970 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testSelect,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 5942 @LENGTH@ 51
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 5942 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 5949 @LENGTH@ 4
---INS SimpleName@@MethodName:testSelect @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 5954 @LENGTH@ 10
---INS ExpressionStatement@@SuperMethodInvocation:super.testSelect() @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 5971 @LENGTH@ 19
------INS SuperMethodInvocation@@super.testSelect() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testSelect() @AT@ 5971 @LENGTH@ 18
---------INS SimpleName@@MethodName:testSelect:[] @TO@ SuperMethodInvocation@@super.testSelect() @AT@ 5977 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findByActiveTrue().size(),is((int)0)) @TO@ MethodInvocation:assertThat(repository.findByActiveTrue().size(),is(0)) @AT@ 30157 @LENGTH@ 62
---UPD MethodInvocation@@assertThat(repository.findByActiveTrue().size(),is((int)0)) @TO@ assertThat(repository.findByActiveTrue().size(),is(0)) @AT@ 30157 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertThat:[repository.findByActiveTrue().size(), is((int)0)] @TO@ MethodName:assertThat:[repository.findByActiveTrue().size(), is(0)] @AT@ 30157 @LENGTH@ 61
---------UPD MethodInvocation@@is((int)0) @TO@ is(0) @AT@ 30206 @LENGTH@ 11
------------UPD SimpleName@@MethodName:is:[(int)0] @TO@ MethodName:is:[0] @AT@ 30206 @LENGTH@ 11
---------------DEL CastExpression@@(int)0 @AT@ 30209 @LENGTH@ 7
------------------DEL PrimitiveType@@int @AT@ 30210 @LENGTH@ 3
------------------DEL NumberLiteral@@0 @AT@ 30215 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:is:[(int)0] @AT@ 30541 @LENGTH@ 1
------------UPD SimpleName@@MethodName:is:[(int)0] @TO@ MethodName:is:[0] @AT@ 30206 @LENGTH@ 11
---------------DEL CastExpression@@(int)0 @AT@ 30209 @LENGTH@ 7
------------------DEL PrimitiveType@@int @AT@ 30210 @LENGTH@ 3
------------------DEL NumberLiteral@@0 @AT@ 30215 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:is:[(int)0] @AT@ 30541 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:InetSocketAddress.class.cast(getLocalAddress()) @TO@ ClassInstanceCreation:new InetSocketAddress(getLocalAddress(),getPort()) @AT@ 1893 @LENGTH@ 55
---INS ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @TO@ ReturnStatement@@MethodInvocation:InetSocketAddress.class.cast(getLocalAddress()) @AT@ 1900 @LENGTH@ 51
------INS New@@new @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1900 @LENGTH@ 3
------INS SimpleType@@InetSocketAddress @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1904 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getLocalAddress:[] @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1922 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getPort:[] @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1941 @LENGTH@ 9
---DEL MethodInvocation@@InetSocketAddress.class.cast(getLocalAddress()) @AT@ 1900 @LENGTH@ 47
------DEL TypeLiteral@@InetSocketAddress.class @AT@ 1900 @LENGTH@ 23
------DEL SimpleName@@MethodName:cast:[getLocalAddress()] @AT@ 1924 @LENGTH@ 23
---------DEL MethodInvocation@@MethodName:getLocalAddress:[] @AT@ 1929 @LENGTH@ 17


INS MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @TO@ TypeDeclaration@@[public]StandaloneHadoopCluster, [HadoopCluster] @AT@ 6155 @LENGTH@ 308
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6155 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6163 @LENGTH@ 6
---INS SimpleName@@MethodName:getCurrentUmask @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6170 @LENGTH@ 15
---INS SingleVariableDeclaration@@String tmpDir @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6186 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String tmpDir @AT@ 6186 @LENGTH@ 6
------INS SimpleName@@tmpDir @TO@ SingleVariableDeclaration@@String tmpDir @AT@ 6193 @LENGTH@ 6
---INS SingleVariableDeclaration@@Configuration config @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6201 @LENGTH@ 20
------INS SimpleType@@Configuration @TO@ SingleVariableDeclaration@@Configuration config @AT@ 6201 @LENGTH@ 13
------INS SimpleName@@config @TO@ SingleVariableDeclaration@@Configuration config @AT@ 6215 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6230 @LENGTH@ 11
---INS TryStatement@@try {  LocalFileSystem localFS=FileSystem.getLocal(config);  return Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort());} catch (Exception e) {  return null;} @TO@ MethodDeclaration@@private, String, MethodName:getCurrentUmask, String tmpDir, Configuration config, IOException,  @AT@ 6246 @LENGTH@ 214
------INS VariableDeclarationStatement@@LocalFileSystem localFS=FileSystem.getLocal(config); @TO@ TryStatement@@try {  LocalFileSystem localFS=FileSystem.getLocal(config);  return Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort());} catch (Exception e) {  return null;} @AT@ 6255 @LENGTH@ 54
---------INS SimpleType@@LocalFileSystem @TO@ VariableDeclarationStatement@@LocalFileSystem localFS=FileSystem.getLocal(config); @AT@ 6255 @LENGTH@ 15
---------INS VariableDeclarationFragment@@localFS=FileSystem.getLocal(config) @TO@ VariableDeclarationStatement@@LocalFileSystem localFS=FileSystem.getLocal(config); @AT@ 6271 @LENGTH@ 37
------------INS SimpleName@@localFS @TO@ VariableDeclarationFragment@@localFS=FileSystem.getLocal(config) @AT@ 6271 @LENGTH@ 7
------------INS MethodInvocation@@FileSystem.getLocal(config) @TO@ VariableDeclarationFragment@@localFS=FileSystem.getLocal(config) @AT@ 6281 @LENGTH@ 27
---------------INS SimpleName@@Name:FileSystem @TO@ MethodInvocation@@FileSystem.getLocal(config) @AT@ 6281 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getLocal:[config] @TO@ MethodInvocation@@FileSystem.getLocal(config) @AT@ 6292 @LENGTH@ 16
------------------INS SimpleName@@config @TO@ SimpleName@@MethodName:getLocal:[config] @AT@ 6301 @LENGTH@ 6
------INS ReturnStatement@@MethodInvocation:Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()) @TO@ TryStatement@@try {  LocalFileSystem localFS=FileSystem.getLocal(config);  return Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort());} catch (Exception e) {  return null;} @AT@ 6313 @LENGTH@ 101
---------INS MethodInvocation@@Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()) @TO@ ReturnStatement@@MethodInvocation:Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()) @AT@ 6320 @LENGTH@ 93
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()) @AT@ 6320 @LENGTH@ 7
------------INS SimpleName@@MethodName:toOctalString:[localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()] @TO@ MethodInvocation@@Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()) @AT@ 6328 @LENGTH@ 85
---------------INS MethodInvocation@@localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort() @TO@ SimpleName@@MethodName:toOctalString:[localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort()] @AT@ 6342 @LENGTH@ 70
------------------INS MethodInvocation@@MethodName:getPermission:[] @TO@ MethodInvocation@@localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort() @AT@ 6342 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:getFileStatus:[new Path(getTmpDir())] @TO@ MethodInvocation@@localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort() @AT@ 6342 @LENGTH@ 44
---------------------INS ClassInstanceCreation@@Path[getTmpDir()] @TO@ MethodInvocation@@MethodName:getFileStatus:[new Path(getTmpDir())] @AT@ 6364 @LENGTH@ 21
------------------------INS New@@new @TO@ ClassInstanceCreation@@Path[getTmpDir()] @AT@ 6364 @LENGTH@ 3
------------------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[getTmpDir()] @AT@ 6368 @LENGTH@ 4
------------------------INS MethodInvocation@@MethodName:getTmpDir:[] @TO@ ClassInstanceCreation@@Path[getTmpDir()] @AT@ 6373 @LENGTH@ 11
------------------INS SimpleName@@Name:localFS @TO@ MethodInvocation@@localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort() @AT@ 6342 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toShort:[] @TO@ MethodInvocation@@localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort() @AT@ 6403 @LENGTH@ 9
------INS CatchClause@@catch (Exception e) {  return null;} @TO@ TryStatement@@try {  LocalFileSystem localFS=FileSystem.getLocal(config);  return Integer.toOctalString(localFS.getFileStatus(new Path(getTmpDir())).getPermission().toShort());} catch (Exception e) {  return null;} @AT@ 6419 @LENGTH@ 41
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 6426 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 6426 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 6436 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Exception e) {  return null;} @AT@ 6444 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6451 @LENGTH@ 4


UPD IfStatement@@if (isPipelined()) {  pipeline(new LettuceStatusResult(getAsyncConnection().setbit(key,offset,LettuceConverters.toInt(value))));} @TO@ if (isPipelined()) {  pipeline(new LettuceStatusResult(getAsyncConnection().setbit(key,offset,LettuceConverters.toInt(value))));  return;} @AT@ 27365 @LENGTH@ 138
---UPD Block@@ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setbit(key,offset,LettuceConverters.toInt(value))));} @TO@ ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setbit(key,offset,LettuceConverters.toInt(value))));  return;} @AT@ 27384 @LENGTH@ 119
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setbit(key,offset,LettuceConverters.toInt(value))));} @AT@ 27503 @LENGTH@ 7


UPD IfStatement@@if (registered == null) {  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @TO@ if (registered == null) {  if (!context.isNormalServer())   return;  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7066 @LENGTH@ 149
---UPD Block@@ThenBody:{  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @TO@ ThenBody:{  if (!context.isNormalServer())   return;  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7090 @LENGTH@ 125
------INS IfStatement@@if (!context.isNormalServer()) return; @TO@ Block@@ThenBody:{  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7147 @LENGTH@ 38
---------INS PrefixExpression@@!context.isNormalServer() @TO@ IfStatement@@if (!context.isNormalServer()) return; @AT@ 7151 @LENGTH@ 25
------------INS Operator@@! @TO@ PrefixExpression@@!context.isNormalServer() @AT@ 7151 @LENGTH@ 1
------------INS MethodInvocation@@context.isNormalServer() @TO@ PrefixExpression@@!context.isNormalServer() @AT@ 7152 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 7152 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 7160 @LENGTH@ 16
---------INS Block@@ThenBody:return; @TO@ IfStatement@@if (!context.isNormalServer()) return; @AT@ 7178 @LENGTH@ 7
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:return; @AT@ 7178 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:onListenerConstainerStopped, AbstractMessageListenerContainer container,  @TO@ public, void, MethodName:onListenerContainerStopped, AbstractMessageListenerContainer container,  @AT@ 18253 @LENGTH@ 142
---UPD SimpleName@@MethodName:onListenerConstainerStopped @TO@ MethodName:onListenerContainerStopped @AT@ 18265 @LENGTH@ 27


UPD TryStatement@@try {  if (PayloadFormat.JSON.equals(format)) {    List<RestError> restErrors=objectMapper.readValue(httpExchange.getResponseContent(),new TypeReference<List<RestError>>(){    });    return new SalesforceException(restErrors,httpExchange.getResponseStatus());  } else {    RestErrors errors=new RestErrors();    xStream.fromXML(httpExchange.getResponseContent(),errors);    return new SalesforceException(errors.getErrors(),httpExchange.getResponseStatus());  }} catch (IOException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  LOG.warn(msg,e);}catch (RuntimeException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  LOG.warn(msg,e);} @TO@ try {  if (PayloadFormat.JSON.equals(format)) {    List<RestError> restErrors=objectMapper.readValue(httpExchange.getResponseContent(),new TypeReference<List<RestError>>(){    });    return new SalesforceException(restErrors,httpExchange.getResponseStatus());  } else {    RestErrors errors=new RestErrors();    xStream.fromXML(httpExchange.getResponseContent(),errors);    return new SalesforceException(errors.getErrors(),httpExchange.getResponseStatus());  }} catch (IOException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  log.warn(msg,e);}catch (RuntimeException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  log.warn(msg,e);} @AT@ 3310 @LENGTH@ 1013
---UPD CatchClause@@catch (IOException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  LOG.warn(msg,e);} @TO@ catch (IOException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  log.warn(msg,e);} @AT@ 3927 @LENGTH@ 195
------UPD ExpressionStatement@@MethodInvocation:LOG.warn(msg,e) @TO@ MethodInvocation:log.warn(msg,e) @AT@ 4095 @LENGTH@ 17
---------UPD MethodInvocation@@LOG.warn(msg,e) @TO@ log.warn(msg,e) @AT@ 4095 @LENGTH@ 16
------------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 4095 @LENGTH@ 3
---UPD CatchClause@@catch (RuntimeException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  LOG.warn(msg,e);} @TO@ catch (RuntimeException e) {  String msg="Unexpected Error parsing " + format + " error response: "+ e.getMessage();  log.warn(msg,e);} @AT@ 4123 @LENGTH@ 200
------UPD ExpressionStatement@@MethodInvocation:LOG.warn(msg,e) @TO@ MethodInvocation:log.warn(msg,e) @AT@ 4296 @LENGTH@ 17
---------UPD MethodInvocation@@LOG.warn(msg,e) @TO@ log.warn(msg,e) @AT@ 4296 @LENGTH@ 16
------------UPD SimpleName@@Name:LOG @TO@ Name:log @AT@ 4296 @LENGTH@ 3


UPD FieldDeclaration@@private, BlockingQueue<String>, [queue=new LinkedBlockingQueue<String>()] @TO@ private, BlockingQueue<String>, [queue] @AT@ 568 @LENGTH@ 72
---UPD VariableDeclarationFragment@@queue=new LinkedBlockingQueue<String>() @TO@ queue @AT@ 598 @LENGTH@ 41
------DEL ClassInstanceCreation@@LinkedBlockingQueue<String>[] @AT@ 606 @LENGTH@ 33
---------DEL New@@new @AT@ 606 @LENGTH@ 3
---------DEL ParameterizedType@@LinkedBlockingQueue<String> @AT@ 610 @LENGTH@ 27
------------DEL SimpleType@@LinkedBlockingQueue @AT@ 610 @LENGTH@ 19
------------DEL SimpleType@@String @AT@ 630 @LENGTH@ 6


UPD VariableDeclarationStatement@@final File timestamp=new File(backup,CommonAttributes.TIMESTAMP); @TO@ final File timestamp=new File(backup,Constants.TIMESTAMP); @AT@ 8809 @LENGTH@ 68
---UPD VariableDeclarationFragment@@timestamp=new File(backup,CommonAttributes.TIMESTAMP) @TO@ timestamp=new File(backup,Constants.TIMESTAMP) @AT@ 8820 @LENGTH@ 56
------UPD ClassInstanceCreation@@File[backup, CommonAttributes.TIMESTAMP] @TO@ File[backup, Constants.TIMESTAMP] @AT@ 8832 @LENGTH@ 44
---------UPD QualifiedName@@CommonAttributes.TIMESTAMP @TO@ Constants.TIMESTAMP @AT@ 8849 @LENGTH@ 26
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 8849 @LENGTH@ 16


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=requestFactory.createStoredAuthorizationRequest(authorizationRequest); @TO@ OAuth2Request storedOAuth2Request=requestFactory.createOAuth2Request(authorizationRequest); @AT@ 3250 @LENGTH@ 106
---UPD VariableDeclarationFragment@@storedOAuth2Request=requestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ storedOAuth2Request=requestFactory.createOAuth2Request(authorizationRequest) @AT@ 3264 @LENGTH@ 91
------UPD MethodInvocation@@requestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ requestFactory.createOAuth2Request(authorizationRequest) @AT@ 3286 @LENGTH@ 69
---------UPD SimpleName@@MethodName:createStoredAuthorizationRequest:[authorizationRequest] @TO@ MethodName:createOAuth2Request:[authorizationRequest] @AT@ 3301 @LENGTH@ 54


UPD EnhancedForStatement@@for (final PatchElement patchElement : rollbackPatch.getElements()) {  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(patchID);} @TO@ for (final PatchElement patchElement : rollbackPatch.getElements()) {  final String elementPatchId=patchElement.getId();  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(elementPatchId);} @AT@ 10108 @LENGTH@ 1403
---INS VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @TO@ EnhancedForStatement@@for (final PatchElement patchElement : rollbackPatch.getElements()) {  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(patchID);} @AT@ 10227 @LENGTH@ 51
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10227 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10233 @LENGTH@ 6
------INS VariableDeclarationFragment@@elementPatchId=patchElement.getId() @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10240 @LENGTH@ 37
---------INS SimpleName@@elementPatchId @TO@ VariableDeclarationFragment@@elementPatchId=patchElement.getId() @AT@ 10240 @LENGTH@ 14
---------INS MethodInvocation@@patchElement.getId() @TO@ VariableDeclarationFragment@@elementPatchId=patchElement.getId() @AT@ 10257 @LENGTH@ 20
------------INS SimpleName@@Name:patchElement @TO@ MethodInvocation@@patchElement.getId() @AT@ 10257 @LENGTH@ 12
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@patchElement.getId() @AT@ 10270 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @TO@ MethodInvocation:PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @AT@ 11315 @LENGTH@ 141
------UPD MethodInvocation@@PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @TO@ PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @AT@ 11315 @LENGTH@ 140
---------UPD SimpleName@@MethodName:rollback:[patchID, original.getModifications(), patchElement.getModifications(), modifications, ContentItemFilter.ALL_BUT_MISC] @TO@ MethodName:rollback:[elementPatchId, original.getModifications(), patchElement.getModifications(), modifications, ContentItemFilter.ALL_BUT_MISC] @AT@ 11329 @LENGTH@ 126
------------UPD SimpleName@@patchID @TO@ elementPatchId @AT@ 11338 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:entry.rollback(patchID) @TO@ MethodInvocation:entry.rollback(elementPatchId) @AT@ 11473 @LENGTH@ 24
------UPD MethodInvocation@@entry.rollback(patchID) @TO@ entry.rollback(elementPatchId) @AT@ 11473 @LENGTH@ 23
---------UPD SimpleName@@MethodName:rollback:[patchID] @TO@ MethodName:rollback:[elementPatchId] @AT@ 11479 @LENGTH@ 17
------------UPD SimpleName@@patchID @TO@ elementPatchId @AT@ 11488 @LENGTH@ 7


UPD VariableDeclarationStatement@@final Iterator<Map.Entry<K,V>> it=entrySet().iterator(); @TO@ final Iterator<Map.Entry<K,V>> it=super.entrySet().iterator(); @AT@ 68550 @LENGTH@ 59
---UPD VariableDeclarationFragment@@it=entrySet().iterator() @TO@ it=super.entrySet().iterator() @AT@ 68582 @LENGTH@ 26
------UPD MethodInvocation@@entrySet().iterator() @TO@ super.entrySet().iterator() @AT@ 68587 @LENGTH@ 21
---------INS SuperMethodInvocation@@super.entrySet() @TO@ MethodInvocation@@entrySet().iterator() @AT@ 68587 @LENGTH@ 16
------------INS SimpleName@@MethodName:entrySet:[] @TO@ SuperMethodInvocation@@super.entrySet() @AT@ 68593 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 68587 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(Constants.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_APPLICATION_CLIENT,new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters.toArray(EMPTY_STRING))) @TO@ MethodInvocation:processorTarget.addDeploymentProcessor(Constants.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_APPLICATION_CLIENT,new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING))) @AT@ 5726 @LENGTH@ 219
---UPD MethodInvocation@@processorTarget.addDeploymentProcessor(Constants.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_APPLICATION_CLIENT,new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters.toArray(EMPTY_STRING))) @TO@ processorTarget.addDeploymentProcessor(Constants.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_APPLICATION_CLIENT,new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING))) @AT@ 5726 @LENGTH@ 218
------UPD SimpleName@@MethodName:addDeploymentProcessor:[Constants.SUBSYSTEM_NAME, Phase.INSTALL, Phase.INSTALL_APPLICATION_CLIENT, new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters.toArray(EMPTY_STRING))] @TO@ MethodName:addDeploymentProcessor:[Constants.SUBSYSTEM_NAME, Phase.INSTALL, Phase.INSTALL_APPLICATION_CLIENT, new ApplicationClientStartProcessor(hostUrl,connectionPropertiesUrl,parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING))] @AT@ 5742 @LENGTH@ 202
---------UPD ClassInstanceCreation@@ApplicationClientStartProcessor[hostUrl, connectionPropertiesUrl, parameters.toArray(EMPTY_STRING)] @TO@ ApplicationClientStartProcessor[hostUrl, connectionPropertiesUrl, parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING)] @AT@ 5840 @LENGTH@ 103
------------INS ConditionalExpression@@parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING) @TO@ ClassInstanceCreation@@ApplicationClientStartProcessor[hostUrl, connectionPropertiesUrl, parameters.toArray(EMPTY_STRING)] @AT@ 5910 @LENGTH@ 69
---------------MOV MethodInvocation@@parameters.toArray(EMPTY_STRING) @TO@ ConditionalExpression@@parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING) @AT@ 5910 @LENGTH@ 32
---------------INS InfixExpression@@parameters == null @TO@ ConditionalExpression@@parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING) @AT@ 5910 @LENGTH@ 18
------------------INS SimpleName@@parameters @TO@ InfixExpression@@parameters == null @AT@ 5910 @LENGTH@ 10
------------------INS Operator@@== @TO@ InfixExpression@@parameters == null @AT@ 5920 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@parameters == null @AT@ 5924 @LENGTH@ 4
---------------INS ArrayCreation@@new String[0] @TO@ ConditionalExpression@@parameters == null ? new String[0] : parameters.toArray(EMPTY_STRING) @AT@ 5931 @LENGTH@ 13
------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[0] @AT@ 5935 @LENGTH@ 9
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5935 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new String[0] @AT@ 5942 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:System.out.println(out) @TO@ MethodInvocation:logger.info(out) @AT@ 4746 @LENGTH@ 24
---UPD MethodInvocation@@System.out.println(out) @TO@ logger.info(out) @AT@ 4746 @LENGTH@ 23
------DEL QualifiedName@@Name:System.out @AT@ 4746 @LENGTH@ 10
------UPD SimpleName@@MethodName:println:[out] @TO@ MethodName:info:[out] @AT@ 4757 @LENGTH@ 12
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@System.out.println(out) @AT@ 4926 @LENGTH@ 6


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]MQBrokerConfigDTO,  @AT@ 1437 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1437 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1444 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1451 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 1472 @LENGTH@ 199
------INS InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @TO@ ReturnStatement@@InfixExpression:"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1479 @LENGTH@ 191
---------INS InfixExpression@@"MQBrokerConfigDTO{" + "group='" @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1479 @LENGTH@ 48
------------INS StringLiteral@@"MQBrokerConfigDTO{" @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" @AT@ 1479 @LENGTH@ 20
------------INS Operator@@+ @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" @AT@ 1499 @LENGTH@ 1
------------INS StringLiteral@@"group='" @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" @AT@ 1518 @LENGTH@ 9
---------INS Operator@@+ @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1527 @LENGTH@ 1
---------INS SimpleName@@group @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1530 @LENGTH@ 5
---------INS CharacterLiteral@@'\'' @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1538 @LENGTH@ 4
---------INS StringLiteral@@", profile='" @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1561 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:profile:[] @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1577 @LENGTH@ 9
---------INS CharacterLiteral@@'\'' @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1589 @LENGTH@ 4
---------INS StringLiteral@@", brokerName='" @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1612 @LENGTH@ 16
---------INS SimpleName@@brokerName @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1631 @LENGTH@ 10
---------INS CharacterLiteral@@'\'' @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1644 @LENGTH@ 4
---------INS CharacterLiteral@@'}' @TO@ InfixExpression@@"MQBrokerConfigDTO{" + "group='" + group + '\''+ ", profile='"+ profile()+ '\''+ ", brokerName='"+ brokerName+ '\''+ '}' @AT@ 1667 @LENGTH@ 3


UPD TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 4980 @LENGTH@ 650
---UPD VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @TO@ File miscRoot=newFile(getPatchContentRootDir(),elementId,MISC); @AT@ 5006 @LENGTH@ 102
------UPD VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ miscRoot=newFile(getPatchContentRootDir(),elementId,MISC) @AT@ 5011 @LENGTH@ 96
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ newFile(getPatchContentRootDir(),elementId,MISC) @AT@ 5022 @LENGTH@ 85
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, MISC] @AT@ 5022 @LENGTH@ 85
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5067 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5067 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5077 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5091 @LENGTH@ 9
---UPD VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @TO@ File moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES); @AT@ 5129 @LENGTH@ 107
------UPD VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES) @AT@ 5134 @LENGTH@ 101
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ newFile(getPatchContentRootDir(),elementId,MODULES) @AT@ 5147 @LENGTH@ 88
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, MODULES] @AT@ 5147 @LENGTH@ 88
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5192 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5192 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5202 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5216 @LENGTH@ 9
---UPD VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @TO@ File bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES); @AT@ 5257 @LENGTH@ 107
------UPD VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES) @AT@ 5262 @LENGTH@ 101
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ newFile(getPatchContentRootDir(),elementId,BUNDLES) @AT@ 5275 @LENGTH@ 88
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, BUNDLES] @AT@ 5275 @LENGTH@ 88
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5320 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5320 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5330 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5344 @LENGTH@ 9


UPD TypeDeclaration@@[public, static]Input,  @TO@ [public]Input,  @AT@ 1870 @LENGTH@ 500
---DEL Modifier@@static @AT@ 1877 @LENGTH@ 6


UPD MethodDeclaration@@RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address,  @TO@ RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address, String s,  @AT@ 5939 @LENGTH@ 68
---INS SingleVariableDeclaration@@String s @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address,  @AT@ 6045 @LENGTH@ 8
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 6045 @LENGTH@ 6
------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 6052 @LENGTH@ 1


UPD VariableDeclarationStatement@@CreateOpenshiftContainerOptions.Builder builder=CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).application(name).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()); @TO@ CreateOpenshiftContainerOptions.Builder builder=CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()); @AT@ 1780 @LENGTH@ 681
---UPD VariableDeclarationFragment@@builder=CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).application(name).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()) @TO@ builder=CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()) @AT@ 1820 @LENGTH@ 640
------UPD MethodInvocation@@CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).application(name).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()) @TO@ CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).version(version).ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()) @AT@ 1830 @LENGTH@ 630
---------DEL MethodInvocation@@MethodName:application:[name] @AT@ 1830 @LENGTH@ 208
------------DEL SimpleName@@name @AT@ 2033 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertIsSatisfied(1000,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:assertIsSatisfied(2000,TimeUnit.MILLISECONDS) @AT@ 4950 @LENGTH@ 47
---UPD MethodInvocation@@assertIsSatisfied(1000,TimeUnit.MILLISECONDS) @TO@ assertIsSatisfied(2000,TimeUnit.MILLISECONDS) @AT@ 4950 @LENGTH@ 46
------UPD SimpleName@@MethodName:assertIsSatisfied:[1000, TimeUnit.MILLISECONDS] @TO@ MethodName:assertIsSatisfied:[2000, TimeUnit.MILLISECONDS] @AT@ 4950 @LENGTH@ 46
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 4968 @LENGTH@ 4


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build(); @AT@ 4835 @LENGTH@ 364
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build() @AT@ 4841 @LENGTH@ 357
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build() @AT@ 4849 @LENGTH@ 349
---------DEL MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @AT@ 4849 @LENGTH@ 271
------------DEL MethodInvocation@@info.getVersion() @AT@ 5102 @LENGTH@ 17
---------------DEL SimpleName@@Name:info @AT@ 5102 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getVersion:[] @AT@ 5107 @LENGTH@ 12
---------UPD MethodInvocation@@MethodName:setResultingVersion:[info.getVersion() + "-CP"] @TO@ MethodName:setCumulativeType:[info.getVersion(), info.getVersion() + "-CP"] @AT@ 4849 @LENGTH@ 222
------------INS MethodInvocation@@info.getVersion() @TO@ MethodInvocation@@MethodName:setResultingVersion:[info.getVersion() + "-CP"] @AT@ 4980 @LENGTH@ 17
---------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getVersion() @AT@ 4980 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@info.getVersion() @AT@ 4985 @LENGTH@ 12
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.CUMULATIVE] @AT@ 4849 @LENGTH@ 158
------------DEL QualifiedName@@PatchType.CUMULATIVE @AT@ 4986 @LENGTH@ 20
---------------DEL SimpleName@@PatchType @AT@ 4986 @LENGTH@ 9
---------------DEL SimpleName@@CUMULATIVE @AT@ 4996 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testMove,  @TO@ TypeDeclaration@@[abstract, public]AbstractConnectionPipelineIntegrationTests, AbstractConnectionIntegrationTests @AT@ 34784 @LENGTH@ 323
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34784 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34791 @LENGTH@ 4
---INS SimpleName@@MethodName:testMove @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34796 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34811 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 34811 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 34811 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 34822 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 34826 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 34833 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34843 @LENGTH@ 38
------INS MethodInvocation@@actual.add(connection.move("foo",1)) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @AT@ 34843 @LENGTH@ 37
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 34843 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.move("foo",1)] @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 34850 @LENGTH@ 30
------------INS MethodInvocation@@connection.move("foo",1) @TO@ SimpleName@@MethodName:add:[connection.move("foo",1)] @AT@ 34854 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 34854 @LENGTH@ 10
---------------INS SimpleName@@MethodName:move:["foo", 1] @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 34865 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 34870 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 34877 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{1l}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34884 @LENGTH@ 58
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{1l}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{1l}),actual) @AT@ 34884 @LENGTH@ 57
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{1l}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{1l}),actual) @AT@ 34884 @LENGTH@ 57
------------INS MethodInvocation@@Arrays.asList(new Object[]{1l}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{1l}), actual] @AT@ 34898 @LENGTH@ 34
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{1l}) @AT@ 34898 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{1l}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{1l}) @AT@ 34905 @LENGTH@ 27
------------------INS ArrayCreation@@new Object[]{1l} @TO@ SimpleName@@MethodName:asList:[new Object[]{1l}] @AT@ 34912 @LENGTH@ 19
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{1l} @AT@ 34916 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 34916 @LENGTH@ 6
---------------------INS ArrayInitializer@@{1l} @TO@ ArrayCreation@@new Object[]{1l} @AT@ 34925 @LENGTH@ 6
------------------------INS NumberLiteral@@1l @TO@ ArrayInitializer@@{1l} @AT@ 34927 @LENGTH@ 2
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{1l}), actual] @AT@ 34934 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:connection.select(1) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34945 @LENGTH@ 21
------INS MethodInvocation@@connection.select(1) @TO@ ExpressionStatement@@MethodInvocation:connection.select(1) @AT@ 34945 @LENGTH@ 20
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.select(1) @AT@ 34945 @LENGTH@ 10
---------INS SimpleName@@MethodName:select:[1] @TO@ MethodInvocation@@connection.select(1) @AT@ 34956 @LENGTH@ 9
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:select:[1] @AT@ 34963 @LENGTH@ 1
---INS TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 34969 @LENGTH@ 135
------INS ExpressionStatement@@MethodInvocation:assertEquals("bar",connection.get("foo")) @TO@ TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 34978 @LENGTH@ 42
---------INS MethodInvocation@@assertEquals("bar",connection.get("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",connection.get("foo")) @AT@ 34978 @LENGTH@ 41
------------INS SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @TO@ MethodInvocation@@assertEquals("bar",connection.get("foo")) @AT@ 34978 @LENGTH@ 41
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @AT@ 34991 @LENGTH@ 5
---------------INS MethodInvocation@@connection.get("foo") @TO@ SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @AT@ 34997 @LENGTH@ 21
------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.get("foo") @AT@ 34997 @LENGTH@ 10
------------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@connection.get("foo") @AT@ 35008 @LENGTH@ 10
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 35012 @LENGTH@ 5
------INS Block@@FinallyBody:{  if (connection.exists("foo")) {    connection.del("foo");  }} @TO@ TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 35033 @LENGTH@ 71
---------INS IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @TO@ Block@@FinallyBody:{  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 35038 @LENGTH@ 62
------------INS MethodInvocation@@connection.exists("foo") @TO@ IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @AT@ 35041 @LENGTH@ 24
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.exists("foo") @AT@ 35041 @LENGTH@ 10
---------------INS SimpleName@@MethodName:exists:["foo"] @TO@ MethodInvocation@@connection.exists("foo") @AT@ 35052 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:exists:["foo"] @AT@ 35059 @LENGTH@ 5
------------INS Block@@ThenBody:{  connection.del("foo");} @TO@ IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @AT@ 35067 @LENGTH@ 33
---------------INS ExpressionStatement@@MethodInvocation:connection.del("foo") @TO@ Block@@ThenBody:{  connection.del("foo");} @AT@ 35073 @LENGTH@ 22
------------------INS MethodInvocation@@connection.del("foo") @TO@ ExpressionStatement@@MethodInvocation:connection.del("foo") @AT@ 35073 @LENGTH@ 21
---------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.del("foo") @AT@ 35073 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:del:["foo"] @TO@ MethodInvocation@@connection.del("foo") @AT@ 35084 @LENGTH@ 10
------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:del:["foo"] @AT@ 35088 @LENGTH@ 5


INS FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @TO@ TypeDeclaration@@[public]PatchingTestUtil,  @AT@ 2632 @LENGTH@ 78
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @AT@ 2632 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @AT@ 2640 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @AT@ 2647 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @AT@ 2653 @LENGTH@ 6
---INS VariableDeclarationFragment@@logger=Logger.getLogger(PatchingTestUtil.class) @TO@ FieldDeclaration@@private, static, final, Logger, [logger=Logger.getLogger(PatchingTestUtil.class)] @AT@ 2660 @LENGTH@ 49
------INS SimpleName@@logger @TO@ VariableDeclarationFragment@@logger=Logger.getLogger(PatchingTestUtil.class) @AT@ 2660 @LENGTH@ 6
------INS MethodInvocation@@Logger.getLogger(PatchingTestUtil.class) @TO@ VariableDeclarationFragment@@logger=Logger.getLogger(PatchingTestUtil.class) @AT@ 2669 @LENGTH@ 40
---------INS SimpleName@@Name:Logger @TO@ MethodInvocation@@Logger.getLogger(PatchingTestUtil.class) @AT@ 2669 @LENGTH@ 6
---------INS SimpleName@@MethodName:getLogger:[PatchingTestUtil.class] @TO@ MethodInvocation@@Logger.getLogger(PatchingTestUtil.class) @AT@ 2676 @LENGTH@ 33
------------INS TypeLiteral@@PatchingTestUtil.class @TO@ SimpleName@@MethodName:getLogger:[PatchingTestUtil.class] @AT@ 2686 @LENGTH@ 22


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ResolverTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ResolverTest, FabricTestSupport @AT@ 1800 @LENGTH@ 5882
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ResolverTest, FabricTestSupport @AT@ 1919 @LENGTH@ 49


UPD TypeDeclaration@@[@ContextConfiguration, public]FabricPublisherEndpointTest, AbstractJUnit4SpringContextTests @TO@ [@ContextConfiguration, @Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]FabricPublisherEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1187 @LENGTH@ 1430
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @TO@ TypeDeclaration@@[@ContextConfiguration, public]FabricPublisherEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1235 @LENGTH@ 53


UPD MethodDeclaration@@public, void, MethodName:testGetRecordWithMultiiLineValues, Exception,  @TO@ public, void, MethodName:testGetRecordWithMultiLineValues, Exception,  @AT@ 25942 @LENGTH@ 1197
---UPD SimpleName@@MethodName:testGetRecordWithMultiiLineValues @TO@ MethodName:testGetRecordWithMultiLineValues @AT@ 25954 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:assertMockEndpointsSatisfied(20,TimeUnit.SECONDS) @TO@ MethodInvocation:assertMockEndpointsSatisfied(30,TimeUnit.SECONDS) @AT@ 2510 @LENGTH@ 51
---UPD MethodInvocation@@assertMockEndpointsSatisfied(20,TimeUnit.SECONDS) @TO@ assertMockEndpointsSatisfied(30,TimeUnit.SECONDS) @AT@ 2510 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertMockEndpointsSatisfied:[20, TimeUnit.SECONDS] @TO@ MethodName:assertMockEndpointsSatisfied:[30, TimeUnit.SECONDS] @AT@ 2510 @LENGTH@ 50
---------UPD NumberLiteral@@20 @TO@ 30 @AT@ 2539 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:builder.preserveItem(preserve.toString()) @TO@ MethodInvocation:builder.preserveItem(preserve.asString()) @AT@ 5068 @LENGTH@ 42
---UPD MethodInvocation@@builder.preserveItem(preserve.toString()) @TO@ builder.preserveItem(preserve.asString()) @AT@ 5068 @LENGTH@ 41
------UPD SimpleName@@MethodName:preserveItem:[preserve.toString()] @TO@ MethodName:preserveItem:[preserve.asString()] @AT@ 5076 @LENGTH@ 33
---------UPD MethodInvocation@@preserve.toString() @TO@ preserve.asString() @AT@ 5089 @LENGTH@ 19
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:asString:[] @AT@ 5098 @LENGTH@ 10


UPD IfStatement@@if (current.getParentOperators() == null) {  return correlatedReduceSinkOperators;} @TO@ if ((current.getParentOperators() == null) || (current.getParentOperators().isEmpty())) {  return correlatedReduceSinkOperators;} @AT@ 14008 @LENGTH@ 97
---INS InfixExpression@@(current.getParentOperators() == null) || (current.getParentOperators().isEmpty()) @TO@ IfStatement@@if (current.getParentOperators() == null) {  return correlatedReduceSinkOperators;} @AT@ 14012 @LENGTH@ 82
------INS ParenthesizedExpression@@(current.getParentOperators() == null) @TO@ InfixExpression@@(current.getParentOperators() == null) || (current.getParentOperators().isEmpty()) @AT@ 14012 @LENGTH@ 38
---------MOV InfixExpression@@current.getParentOperators() == null @TO@ ParenthesizedExpression@@(current.getParentOperators() == null) @AT@ 14012 @LENGTH@ 36
------INS Operator@@|| @TO@ InfixExpression@@(current.getParentOperators() == null) || (current.getParentOperators().isEmpty()) @AT@ 14050 @LENGTH@ 2
------INS ParenthesizedExpression@@(current.getParentOperators().isEmpty()) @TO@ InfixExpression@@(current.getParentOperators() == null) || (current.getParentOperators().isEmpty()) @AT@ 14054 @LENGTH@ 40
---------INS MethodInvocation@@current.getParentOperators().isEmpty() @TO@ ParenthesizedExpression@@(current.getParentOperators().isEmpty()) @AT@ 14055 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getParentOperators:[] @TO@ MethodInvocation@@current.getParentOperators().isEmpty() @AT@ 14055 @LENGTH@ 28
------------INS SimpleName@@Name:current @TO@ MethodInvocation@@current.getParentOperators().isEmpty() @AT@ 14055 @LENGTH@ 7
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@current.getParentOperators().isEmpty() @AT@ 14084 @LENGTH@ 9


INS IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:commonChecks, HttpServerExchange exchange, Exception,  @AT@ 4728 @LENGTH@ 144
---INS MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @TO@ IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @AT@ 4732 @LENGTH@ 64
------INS MethodInvocation@@MethodName:getQueryParameters:[] @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4732 @LENGTH@ 29
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4732 @LENGTH@ 8
------INS SimpleName@@MethodName:containsKey:[LogoutHandler.CONTEXT] @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4762 @LENGTH@ 34
---------INS QualifiedName@@LogoutHandler.CONTEXT @TO@ SimpleName@@MethodName:containsKey:[LogoutHandler.CONTEXT] @AT@ 4774 @LENGTH@ 21
------------INS SimpleName@@LogoutHandler @TO@ QualifiedName@@LogoutHandler.CONTEXT @AT@ 4774 @LENGTH@ 13
------------INS SimpleName@@CONTEXT @TO@ QualifiedName@@LogoutHandler.CONTEXT @AT@ 4788 @LENGTH@ 7
---INS Block@@ThenBody:{  contextLogout(exchange);  return false;} @TO@ IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @AT@ 4798 @LENGTH@ 74
------INS ExpressionStatement@@MethodInvocation:contextLogout(exchange) @TO@ Block@@ThenBody:{  contextLogout(exchange);  return false;} @AT@ 4812 @LENGTH@ 24
---------INS MethodInvocation@@contextLogout(exchange) @TO@ ExpressionStatement@@MethodInvocation:contextLogout(exchange) @AT@ 4812 @LENGTH@ 23
------------INS SimpleName@@MethodName:contextLogout:[exchange] @TO@ MethodInvocation@@contextLogout(exchange) @AT@ 4812 @LENGTH@ 23
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:contextLogout:[exchange] @AT@ 4826 @LENGTH@ 8
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  contextLogout(exchange);  return false;} @AT@ 4849 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4856 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, UUID, [uniqueId=UUID.randomUUID()] @TO@ private, static, final, UUID, [UNIQUE_ID=UUID.randomUUID()] @AT@ 1779 @LENGTH@ 55
---UPD VariableDeclarationFragment@@uniqueId=UUID.randomUUID() @TO@ UNIQUE_ID=UUID.randomUUID() @AT@ 1805 @LENGTH@ 28
------UPD SimpleName@@uniqueId @TO@ UNIQUE_ID @AT@ 1805 @LENGTH@ 8


UPD MethodDeclaration@@private, JobParameters, MethodName:getJobParameters, Long executionId,  @TO@ protected, JobParameters, MethodName:getJobParameters, Long executionId,  @AT@ 14804 @LENGTH@ 1149
---UPD Modifier@@private @TO@ protected @AT@ 14804 @LENGTH@ 7


UPD VariableDeclarationStatement@@final File timestamp=new File(backup,CommonAttributes.TIMESTAMP); @TO@ final File timestamp=new File(backup,Constants.TIMESTAMP); @AT@ 8809 @LENGTH@ 68
---UPD VariableDeclarationFragment@@timestamp=new File(backup,CommonAttributes.TIMESTAMP) @TO@ timestamp=new File(backup,Constants.TIMESTAMP) @AT@ 8820 @LENGTH@ 56
------UPD ClassInstanceCreation@@File[backup, CommonAttributes.TIMESTAMP] @TO@ File[backup, Constants.TIMESTAMP] @AT@ 8832 @LENGTH@ 44
---------UPD QualifiedName@@CommonAttributes.TIMESTAMP @TO@ Constants.TIMESTAMP @AT@ 8849 @LENGTH@ 26
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 8849 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:setConfiguredApplication, boolean configuredApplication,  @TO@ public, void, MethodName:setConfiguredApplication, Boolean configuredApplication,  @AT@ 2881 @LENGTH@ 135
---UPD SingleVariableDeclaration@@boolean configuredApplication @TO@ Boolean configuredApplication @AT@ 2918 @LENGTH@ 29
------DEL PrimitiveType@@boolean @AT@ 2918 @LENGTH@ 7
------INS SimpleType@@Boolean @TO@ SingleVariableDeclaration@@boolean configuredApplication @AT@ 2918 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatLoader.class.getCanonicalName()] @TO@ private, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatLoader.class.getCanonicalName()] @AT@ 1957 @LENGTH@ 147
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatLoader.class.getCanonicalName() @TO@ TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatLoader.class.getCanonicalName() @AT@ 1985 @LENGTH@ 118
------UPD InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatLoader.class.getCanonicalName() @TO@ "/tmp/build/test/data/" + TestHCatLoader.class.getCanonicalName() @AT@ 2001 @LENGTH@ 102
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 2001 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 2001 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 2008 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 2020 @LENGTH@ 10
---------INS StringLiteral@@"/tmp/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatLoader.class.getCanonicalName() @AT@ 2009 @LENGTH@ 23
---------DEL StringLiteral@@"/build/test/data/" @AT@ 2042 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]JsonMessageConverterTests,  @AT@ 4581 @LENGTH@ 235
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4581 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4588 @LENGTH@ 4
---INS SimpleName@@MethodName:testAmqp330ObjectArray @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4593 @LENGTH@ 22
---INS VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4624 @LENGTH@ 33
------INS ArrayType@@SimpleTrade[] @TO@ VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @AT@ 4624 @LENGTH@ 13
---------INS SimpleType@@SimpleTrade @TO@ ArrayType@@SimpleTrade[] @AT@ 4624 @LENGTH@ 11
------INS VariableDeclarationFragment@@testData={trade} @TO@ VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @AT@ 4638 @LENGTH@ 18
---------INS SimpleName@@testData @TO@ VariableDeclarationFragment@@testData={trade} @AT@ 4638 @LENGTH@ 8
---------INS ArrayInitializer@@{trade} @TO@ VariableDeclarationFragment@@testData={trade} @AT@ 4649 @LENGTH@ 7
------------INS SimpleName@@trade @TO@ ArrayInitializer@@{trade} @AT@ 4650 @LENGTH@ 5
---INS VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4662 @LENGTH@ 73
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4662 @LENGTH@ 7
------INS VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4670 @LENGTH@ 64
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4670 @LENGTH@ 7
---------INS MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4680 @LENGTH@ 54
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4680 @LENGTH@ 9
------------INS SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4690 @LENGTH@ 44
---------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4700 @LENGTH@ 8
---------------INS ClassInstanceCreation@@MessageProperties[] @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4710 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4710 @LENGTH@ 3
------------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4714 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4740 @LENGTH@ 71
------INS MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4740 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @TO@ MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4740 @LENGTH@ 70
------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4758 @LENGTH@ 8
------------INS CastExpression@@(Object[])converter.fromMessage(message) @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4768 @LENGTH@ 41
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4769 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4769 @LENGTH@ 6
---------------INS MethodInvocation@@converter.fromMessage(message) @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4779 @LENGTH@ 30
------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4779 @LENGTH@ 9
------------------INS SimpleName@@MethodName:fromMessage:[message] @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4789 @LENGTH@ 20
---------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:fromMessage:[message] @AT@ 4801 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:authorizerConfiguration.setRoleMappingIncludeAll(roleName,resolvedValue.asBoolean()) @TO@ MethodInvocation:authorizerConfiguration.setRoleMappingIncludeAll(roleName.toUpperCase(Locale.ENGLISH),resolvedValue.asBoolean()) @AT@ 2595 @LENGTH@ 86
---UPD MethodInvocation@@authorizerConfiguration.setRoleMappingIncludeAll(roleName,resolvedValue.asBoolean()) @TO@ authorizerConfiguration.setRoleMappingIncludeAll(roleName.toUpperCase(Locale.ENGLISH),resolvedValue.asBoolean()) @AT@ 2595 @LENGTH@ 85
------UPD SimpleName@@MethodName:setRoleMappingIncludeAll:[roleName, resolvedValue.asBoolean()] @TO@ MethodName:setRoleMappingIncludeAll:[roleName.toUpperCase(Locale.ENGLISH), resolvedValue.asBoolean()] @AT@ 2619 @LENGTH@ 61
---------DEL SimpleName@@roleName @AT@ 2644 @LENGTH@ 8
---------INS MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @TO@ SimpleName@@MethodName:setRoleMappingIncludeAll:[roleName, resolvedValue.asBoolean()] @AT@ 2670 @LENGTH@ 36
------------INS SimpleName@@Name:roleName @TO@ MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @AT@ 2670 @LENGTH@ 8
------------INS SimpleName@@MethodName:toUpperCase:[Locale.ENGLISH] @TO@ MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @AT@ 2679 @LENGTH@ 27
---------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 2691 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2691 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2698 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:listeners.addAll(getSkipListeners()) @TO@ MethodDeclaration@@protected, ChunkProcessor<I>, MethodName:createChunkProcessor,  @AT@ 2929 @LENGTH@ 37
---INS MethodInvocation@@listeners.addAll(getSkipListeners()) @TO@ ExpressionStatement@@MethodInvocation:listeners.addAll(getSkipListeners()) @AT@ 2929 @LENGTH@ 36
------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.addAll(getSkipListeners()) @AT@ 2929 @LENGTH@ 9
------INS SimpleName@@MethodName:addAll:[getSkipListeners()] @TO@ MethodInvocation@@listeners.addAll(getSkipListeners()) @AT@ 2939 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getSkipListeners:[] @TO@ SimpleName@@MethodName:addAll:[getSkipListeners()] @AT@ 2946 @LENGTH@ 18


INS MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @TO@ TypeDeclaration@@[static]AggregationField, [Field] @AT@ 5715 @LENGTH@ 301
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5715 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5722 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5730 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5737 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 5737 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 5744 @LENGTH@ 3
---INS IfStatement@@if (this == obj) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5755 @LENGTH@ 40
------INS InfixExpression@@this == obj @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 5759 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ InfixExpression@@this == obj @AT@ 5759 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == obj @AT@ 5763 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@this == obj @AT@ 5767 @LENGTH@ 3
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 5772 @LENGTH@ 23
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 5778 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 5785 @LENGTH@ 4
---INS IfStatement@@if (!(obj instanceof AggregationField)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5800 @LENGTH@ 64
------INS PrefixExpression@@!(obj instanceof AggregationField) @TO@ IfStatement@@if (!(obj instanceof AggregationField)) {  return false;} @AT@ 5804 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!(obj instanceof AggregationField) @AT@ 5804 @LENGTH@ 1
---------INS ParenthesizedExpression@@(obj instanceof AggregationField) @TO@ PrefixExpression@@!(obj instanceof AggregationField) @AT@ 5805 @LENGTH@ 33
------------INS InstanceofExpression@@obj instanceof AggregationField @TO@ ParenthesizedExpression@@(obj instanceof AggregationField) @AT@ 5806 @LENGTH@ 31
---------------INS SimpleName@@obj @TO@ InstanceofExpression@@obj instanceof AggregationField @AT@ 5806 @LENGTH@ 3
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@obj instanceof AggregationField @AT@ 5810 @LENGTH@ 10
---------------INS SimpleType@@AggregationField @TO@ InstanceofExpression@@obj instanceof AggregationField @AT@ 5821 @LENGTH@ 16
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!(obj instanceof AggregationField)) {  return false;} @AT@ 5840 @LENGTH@ 24
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 5846 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5853 @LENGTH@ 5
---INS VariableDeclarationStatement@@AggregationField that=(AggregationField)obj; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5869 @LENGTH@ 47
------INS SimpleType@@AggregationField @TO@ VariableDeclarationStatement@@AggregationField that=(AggregationField)obj; @AT@ 5869 @LENGTH@ 16
------INS VariableDeclarationFragment@@that=(AggregationField)obj @TO@ VariableDeclarationStatement@@AggregationField that=(AggregationField)obj; @AT@ 5886 @LENGTH@ 29
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(AggregationField)obj @AT@ 5886 @LENGTH@ 4
---------INS CastExpression@@(AggregationField)obj @TO@ VariableDeclarationFragment@@that=(AggregationField)obj @AT@ 5893 @LENGTH@ 22
------------INS SimpleType@@AggregationField @TO@ CastExpression@@(AggregationField)obj @AT@ 5894 @LENGTH@ 16
------------INS SimpleName@@obj @TO@ CastExpression@@(AggregationField)obj @AT@ 5912 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 5921 @LENGTH@ 91
------INS InfixExpression@@this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @TO@ ReturnStatement@@InfixExpression:this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5928 @LENGTH@ 83
---------INS MethodInvocation@@this.name.equals(that.name) @TO@ InfixExpression@@this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5928 @LENGTH@ 27
------------INS FieldAccess@@this.name @TO@ MethodInvocation@@this.name.equals(that.name) @AT@ 5928 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 5928 @LENGTH@ 4
---------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 5933 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:[that.name] @TO@ MethodInvocation@@this.name.equals(that.name) @AT@ 5938 @LENGTH@ 17
---------------INS QualifiedName@@that.name @TO@ SimpleName@@MethodName:equals:[that.name] @AT@ 5945 @LENGTH@ 9
------------------INS SimpleName@@that @TO@ QualifiedName@@that.name @AT@ 5945 @LENGTH@ 4
------------------INS SimpleName@@name @TO@ QualifiedName@@that.name @AT@ 5950 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5955 @LENGTH@ 2
---------INS MethodInvocation@@ObjectUtils.nullSafeEquals(this.target,that.target) @TO@ InfixExpression@@this.name.equals(that.name) && ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5959 @LENGTH@ 52
------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5959 @LENGTH@ 11
------------INS SimpleName@@MethodName:nullSafeEquals:[this.target, that.target] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(this.target,that.target) @AT@ 5971 @LENGTH@ 40
---------------INS FieldAccess@@this.target @TO@ SimpleName@@MethodName:nullSafeEquals:[this.target, that.target] @AT@ 5986 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 5986 @LENGTH@ 4
------------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 5991 @LENGTH@ 6
---------------INS QualifiedName@@that.target @TO@ SimpleName@@MethodName:nullSafeEquals:[this.target, that.target] @AT@ 5999 @LENGTH@ 11
------------------INS SimpleName@@that @TO@ QualifiedName@@that.target @AT@ 5999 @LENGTH@ 4
------------------INS SimpleName@@target @TO@ QualifiedName@@that.target @AT@ 6004 @LENGTH@ 6


UPD EnhancedForStatement@@for (ServerApplicationConfig config : configInstances) {  allAnnotatedEndpoints=config.getAnnotatedEndpointClasses(allAnnotatedEndpoints);  serverEndpointConfigurations.addAll(config.getEndpointConfigs(allScannedEndpointImplementations));} @TO@ for (ServerApplicationConfig config : configInstances) {  allAnnotatedEndpoints=config.getAnnotatedEndpointClasses(allAnnotatedEndpoints);  Set<ServerEndpointConfig> endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations);  if (endpointConfigs != null) {    serverEndpointConfigurations.addAll(endpointConfigs);  }} @AT@ 13194 @LENGTH@ 272
---INS VariableDeclarationStatement@@Set<ServerEndpointConfig> endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations); @TO@ EnhancedForStatement@@for (ServerApplicationConfig config : configInstances) {  allAnnotatedEndpoints=config.getAnnotatedEndpointClasses(allAnnotatedEndpoints);  serverEndpointConfigurations.addAll(config.getEndpointConfigs(allScannedEndpointImplementations));} @AT@ 13358 @LENGTH@ 105
------INS ParameterizedType@@Set<ServerEndpointConfig> @TO@ VariableDeclarationStatement@@Set<ServerEndpointConfig> endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations); @AT@ 13358 @LENGTH@ 25
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<ServerEndpointConfig> @AT@ 13358 @LENGTH@ 3
---------INS SimpleType@@ServerEndpointConfig @TO@ ParameterizedType@@Set<ServerEndpointConfig> @AT@ 13362 @LENGTH@ 20
------INS VariableDeclarationFragment@@endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations) @TO@ VariableDeclarationStatement@@Set<ServerEndpointConfig> endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations); @AT@ 13384 @LENGTH@ 78
---------INS SimpleName@@endpointConfigs @TO@ VariableDeclarationFragment@@endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations) @AT@ 13384 @LENGTH@ 15
---------MOV MethodInvocation@@config.getEndpointConfigs(allScannedEndpointImplementations) @TO@ VariableDeclarationFragment@@endpointConfigs=config.getEndpointConfigs(allScannedEndpointImplementations) @AT@ 13394 @LENGTH@ 60
---DEL ExpressionStatement@@MethodInvocation:serverEndpointConfigurations.addAll(config.getEndpointConfigs(allScannedEndpointImplementations)) @AT@ 13358 @LENGTH@ 98
---INS IfStatement@@if (endpointConfigs != null) {  serverEndpointConfigurations.addAll(endpointConfigs);} @TO@ EnhancedForStatement@@for (ServerApplicationConfig config : configInstances) {  allAnnotatedEndpoints=config.getAnnotatedEndpointClasses(allAnnotatedEndpoints);  serverEndpointConfigurations.addAll(config.getEndpointConfigs(allScannedEndpointImplementations));} @AT@ 13476 @LENGTH@ 113
------INS InfixExpression@@endpointConfigs != null @TO@ IfStatement@@if (endpointConfigs != null) {  serverEndpointConfigurations.addAll(endpointConfigs);} @AT@ 13479 @LENGTH@ 23
---------INS SimpleName@@endpointConfigs @TO@ InfixExpression@@endpointConfigs != null @AT@ 13479 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@endpointConfigs != null @AT@ 13494 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@endpointConfigs != null @AT@ 13498 @LENGTH@ 4
------INS Block@@ThenBody:{  serverEndpointConfigurations.addAll(endpointConfigs);} @TO@ IfStatement@@if (endpointConfigs != null) {  serverEndpointConfigurations.addAll(endpointConfigs);} @AT@ 13504 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:serverEndpointConfigurations.addAll(endpointConfigs) @TO@ Block@@ThenBody:{  serverEndpointConfigurations.addAll(endpointConfigs);} @AT@ 13522 @LENGTH@ 53
------------MOV MethodInvocation@@serverEndpointConfigurations.addAll(config.getEndpointConfigs(allScannedEndpointImplementations)) @TO@ ExpressionStatement@@MethodInvocation:serverEndpointConfigurations.addAll(endpointConfigs) @AT@ 13358 @LENGTH@ 97
---------------UPD SimpleName@@MethodName:addAll:[config.getEndpointConfigs(allScannedEndpointImplementations)] @TO@ MethodName:addAll:[endpointConfigs] @AT@ 13387 @LENGTH@ 68
------------------INS SimpleName@@endpointConfigs @TO@ SimpleName@@MethodName:addAll:[config.getEndpointConfigs(allScannedEndpointImplementations)] @AT@ 13558 @LENGTH@ 15


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]SelfUpdateTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]SelfUpdateTest, FabricTestSupport @AT@ 1863 @LENGTH@ 2919
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]SelfUpdateTest, FabricTestSupport @AT@ 1956 @LENGTH@ 49


UPD VariableDeclarationStatement@@final Closeable closable=file.isFile() ? mount(file,explodeDuringMount) : exportExplodedWar(war,file); @TO@ final Closeable closable=file.isFile() ? mount(file,explodeDuringMount) : null; @AT@ 13038 @LENGTH@ 106
---UPD VariableDeclarationFragment@@closable=file.isFile() ? mount(file,explodeDuringMount) : exportExplodedWar(war,file) @TO@ closable=file.isFile() ? mount(file,explodeDuringMount) : null @AT@ 13054 @LENGTH@ 89
------UPD ConditionalExpression@@file.isFile() ? mount(file,explodeDuringMount) : exportExplodedWar(war,file) @TO@ file.isFile() ? mount(file,explodeDuringMount) : null @AT@ 13065 @LENGTH@ 78
---------INS NullLiteral@@null @TO@ ConditionalExpression@@file.isFile() ? mount(file,explodeDuringMount) : exportExplodedWar(war,file) @AT@ 13094 @LENGTH@ 4
---------DEL MethodInvocation@@exportExplodedWar(war,file) @AT@ 13115 @LENGTH@ 28
------------DEL SimpleName@@MethodName:exportExplodedWar:[war, file] @AT@ 13115 @LENGTH@ 28
---------------DEL SimpleName@@war @AT@ 13133 @LENGTH@ 3
---------------DEL SimpleName@@file @AT@ 13138 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Created new Configuration {}") @TO@ MethodInvocation:LOG.debug("Created new Configuration {}",configuration) @AT@ 22840 @LENGTH@ 42
---UPD MethodInvocation@@LOG.debug("Created new Configuration {}") @TO@ LOG.debug("Created new Configuration {}",configuration) @AT@ 22840 @LENGTH@ 41
------UPD SimpleName@@MethodName:debug:["Created new Configuration {}"] @TO@ MethodName:debug:["Created new Configuration {}", configuration] @AT@ 22844 @LENGTH@ 37
---------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:debug:["Created new Configuration {}"] @AT@ 22882 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]MongoTemplateTests,  @AT@ 64897 @LENGTH@ 379
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64897 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64904 @LENGTH@ 4
---INS SimpleName@@MethodName:allowInsertWithPlainJsonString @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64909 @LENGTH@ 30
---INS VariableDeclarationStatement@@String id="4711"; @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64947 @LENGTH@ 19
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id="4711"; @AT@ 64947 @LENGTH@ 6
------INS VariableDeclarationFragment@@id="4711" @TO@ VariableDeclarationStatement@@String id="4711"; @AT@ 64954 @LENGTH@ 11
---------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id="4711" @AT@ 64954 @LENGTH@ 2
---------INS StringLiteral@@"4711" @TO@ VariableDeclarationFragment@@id="4711" @AT@ 64959 @LENGTH@ 6
---INS VariableDeclarationStatement@@String value="bubu"; @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64969 @LENGTH@ 22
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value="bubu"; @AT@ 64969 @LENGTH@ 6
------INS VariableDeclarationFragment@@value="bubu" @TO@ VariableDeclarationStatement@@String value="bubu"; @AT@ 64976 @LENGTH@ 14
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value="bubu" @AT@ 64976 @LENGTH@ 5
---------INS StringLiteral@@"bubu" @TO@ VariableDeclarationFragment@@value="bubu" @AT@ 64984 @LENGTH@ 6
---INS VariableDeclarationStatement@@String json=String.format("{_id:%s, field: '%s'}",id,value); @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 64994 @LENGTH@ 64
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String json=String.format("{_id:%s, field: '%s'}",id,value); @AT@ 64994 @LENGTH@ 6
------INS VariableDeclarationFragment@@json=String.format("{_id:%s, field: '%s'}",id,value) @TO@ VariableDeclarationStatement@@String json=String.format("{_id:%s, field: '%s'}",id,value); @AT@ 65001 @LENGTH@ 56
---------INS SimpleName@@json @TO@ VariableDeclarationFragment@@json=String.format("{_id:%s, field: '%s'}",id,value) @AT@ 65001 @LENGTH@ 4
---------INS MethodInvocation@@String.format("{_id:%s, field: '%s'}",id,value) @TO@ VariableDeclarationFragment@@json=String.format("{_id:%s, field: '%s'}",id,value) @AT@ 65008 @LENGTH@ 49
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("{_id:%s, field: '%s'}",id,value) @AT@ 65008 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["{_id:%s, field: '%s'}", id, value] @TO@ MethodInvocation@@String.format("{_id:%s, field: '%s'}",id,value) @AT@ 65015 @LENGTH@ 42
---------------INS StringLiteral@@"{_id:%s, field: '%s'}" @TO@ SimpleName@@MethodName:format:["{_id:%s, field: '%s'}", id, value] @AT@ 65022 @LENGTH@ 23
---------------INS SimpleName@@id @TO@ SimpleName@@MethodName:format:["{_id:%s, field: '%s'}", id, value] @AT@ 65047 @LENGTH@ 2
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:format:["{_id:%s, field: '%s'}", id, value] @AT@ 65051 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:template.insert(json,"sample") @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 65062 @LENGTH@ 32
------INS MethodInvocation@@template.insert(json,"sample") @TO@ ExpressionStatement@@MethodInvocation:template.insert(json,"sample") @AT@ 65062 @LENGTH@ 31
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.insert(json,"sample") @AT@ 65062 @LENGTH@ 8
---------INS SimpleName@@MethodName:insert:[json, "sample"] @TO@ MethodInvocation@@template.insert(json,"sample") @AT@ 65071 @LENGTH@ 22
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:insert:[json, "sample"] @AT@ 65078 @LENGTH@ 4
------------INS StringLiteral@@"sample" @TO@ SimpleName@@MethodName:insert:[json, "sample"] @AT@ 65084 @LENGTH@ 8
---INS VariableDeclarationStatement@@List<Sample> result=template.findAll(Sample.class); @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 65097 @LENGTH@ 53
------INS ParameterizedType@@List<Sample> @TO@ VariableDeclarationStatement@@List<Sample> result=template.findAll(Sample.class); @AT@ 65097 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Sample> @AT@ 65097 @LENGTH@ 4
---------INS SimpleType@@Sample @TO@ ParameterizedType@@List<Sample> @AT@ 65102 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=template.findAll(Sample.class) @TO@ VariableDeclarationStatement@@List<Sample> result=template.findAll(Sample.class); @AT@ 65110 @LENGTH@ 39
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=template.findAll(Sample.class) @AT@ 65110 @LENGTH@ 6
---------INS MethodInvocation@@template.findAll(Sample.class) @TO@ VariableDeclarationFragment@@result=template.findAll(Sample.class) @AT@ 65119 @LENGTH@ 30
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findAll(Sample.class) @AT@ 65119 @LENGTH@ 8
------------INS SimpleName@@MethodName:findAll:[Sample.class] @TO@ MethodInvocation@@template.findAll(Sample.class) @AT@ 65128 @LENGTH@ 21
---------------INS TypeLiteral@@Sample.class @TO@ SimpleName@@MethodName:findAll:[Sample.class] @AT@ 65136 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 65154 @LENGTH@ 33
------INS MethodInvocation@@assertThat(result.size(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.size(),is(1)) @AT@ 65154 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[result.size(), is(1)] @TO@ MethodInvocation@@assertThat(result.size(),is(1)) @AT@ 65154 @LENGTH@ 32
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 65165 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 65165 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 65172 @LENGTH@ 6
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[result.size(), is(1)] @AT@ 65180 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 65180 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 65183 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 65180 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 65183 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(0).id,is(id)) @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 65190 @LENGTH@ 37
------INS MethodInvocation@@assertThat(result.get(0).id,is(id)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(0).id,is(id)) @AT@ 65190 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertThat:[result.get(0).id, is(id)] @TO@ MethodInvocation@@assertThat(result.get(0).id,is(id)) @AT@ 65190 @LENGTH@ 36
------------INS FieldAccess@@result.get(0).id @TO@ SimpleName@@MethodName:assertThat:[result.get(0).id, is(id)] @AT@ 65201 @LENGTH@ 16
---------------INS MethodInvocation@@result.get(0) @TO@ FieldAccess@@result.get(0).id @AT@ 65201 @LENGTH@ 13
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(0) @AT@ 65201 @LENGTH@ 6
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.get(0) @AT@ 65208 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 65212 @LENGTH@ 1
---------------INS SimpleName@@id @TO@ FieldAccess@@result.get(0).id @AT@ 65215 @LENGTH@ 2
------------INS MethodInvocation@@is(id) @TO@ SimpleName@@MethodName:assertThat:[result.get(0).id, is(id)] @AT@ 65219 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[id] @TO@ MethodInvocation@@is(id) @AT@ 65219 @LENGTH@ 6
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:is:[id] @AT@ 65222 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[id] @TO@ MethodInvocation@@is(id) @AT@ 65219 @LENGTH@ 6
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:is:[id] @AT@ 65222 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(0).field,is(value)) @TO@ MethodDeclaration@@public, void, MethodName:allowInsertWithPlainJsonString,  @AT@ 65230 @LENGTH@ 43
------INS MethodInvocation@@assertThat(result.get(0).field,is(value)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(0).field,is(value)) @AT@ 65230 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertThat:[result.get(0).field, is(value)] @TO@ MethodInvocation@@assertThat(result.get(0).field,is(value)) @AT@ 65230 @LENGTH@ 42
------------INS FieldAccess@@result.get(0).field @TO@ SimpleName@@MethodName:assertThat:[result.get(0).field, is(value)] @AT@ 65241 @LENGTH@ 19
---------------INS MethodInvocation@@result.get(0) @TO@ FieldAccess@@result.get(0).field @AT@ 65241 @LENGTH@ 13
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(0) @AT@ 65241 @LENGTH@ 6
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.get(0) @AT@ 65248 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 65252 @LENGTH@ 1
---------------INS SimpleName@@field @TO@ FieldAccess@@result.get(0).field @AT@ 65255 @LENGTH@ 5
------------INS MethodInvocation@@is(value) @TO@ SimpleName@@MethodName:assertThat:[result.get(0).field, is(value)] @AT@ 65262 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[value] @TO@ MethodInvocation@@is(value) @AT@ 65262 @LENGTH@ 9
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:is:[value] @AT@ 65265 @LENGTH@ 5


UPD TypeDeclaration@@[private]BeanMBean,  @TO@ [public]BeanMBean,  @AT@ 38604 @LENGTH@ 87
---UPD Modifier@@private @TO@ public @AT@ 38604 @LENGTH@ 7


UPD VariableDeclarationStatement@@UndertowDeploymentInfoService undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).createUndertowDeploymentInfoService(); @TO@ UndertowDeploymentInfoService undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).setOverlays(warMetaData.getOverlays()).createUndertowDeploymentInfoService(); @AT@ 8604 @LENGTH@ 1096
---UPD VariableDeclarationFragment@@undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).createUndertowDeploymentInfoService() @TO@ undertowDeploymentInfoService=UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).setOverlays(warMetaData.getOverlays()).createUndertowDeploymentInfoService() @AT@ 8634 @LENGTH@ 1065
------UPD MethodInvocation@@UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).createUndertowDeploymentInfoService() @TO@ UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).setOverlays(warMetaData.getOverlays()).createUndertowDeploymentInfoService() @AT@ 8666 @LENGTH@ 1033
---------INS MethodInvocation@@MethodName:setOverlays:[warMetaData.getOverlays()] @TO@ MethodInvocation@@UndertowDeploymentInfoService.builder().setAttributes(deploymentUnit.getAttachment(ServletContextAttribute.ATTACHMENT_KEY)).setClassReflectionIndex(deploymentClassIndex).setComponentRegistry(componentRegistry).setContextPath(pathName).setDeploymentName(deploymentUnit.getName()).setDeploymentRoot(deploymentRoot).setInjectionContainer(injectionContainer).setMergedMetaData(warMetaData.getMergedJBossWebMetaData()).setModule(module).setScisMetaData(scisMetaData).setSecurityContextId(securityContextId).setSecurityDomain(securityDomain).setSharedTlds(tldsMetaData == null ? Collections.<TldMetaData>emptyList() : tldsMetaData.getSharedTlds(deploymentUnit)).setTldsMetaData(tldsMetaData).setSetupActions(setupActions).createUndertowDeploymentInfoService() @AT@ 8666 @LENGTH@ 1034
------------INS MethodInvocation@@warMetaData.getOverlays() @TO@ MethodInvocation@@MethodName:setOverlays:[warMetaData.getOverlays()] @AT@ 9674 @LENGTH@ 25
---------------INS SimpleName@@Name:warMetaData @TO@ MethodInvocation@@warMetaData.getOverlays() @AT@ 9674 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getOverlays:[] @TO@ MethodInvocation@@warMetaData.getOverlays() @AT@ 9686 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(value1,redisTemplate.boundValueOps(key1).get()) @TO@ MethodInvocation:assertThat(redisTemplate.boundValueOps(key1).get(),isEqual(value1)) @AT@ 4367 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals(value1,redisTemplate.boundValueOps(key1).get()) @TO@ assertThat(redisTemplate.boundValueOps(key1).get(),isEqual(value1)) @AT@ 4367 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:[value1, redisTemplate.boundValueOps(key1).get()] @TO@ MethodName:assertThat:[redisTemplate.boundValueOps(key1).get(), isEqual(value1)] @AT@ 4367 @LENGTH@ 61
---------INS MethodInvocation@@isEqual(value1) @TO@ SimpleName@@MethodName:assertEquals:[value1, redisTemplate.boundValueOps(key1).get()] @AT@ 4426 @LENGTH@ 15
------------INS SimpleName@@MethodName:isEqual:[value1] @TO@ MethodInvocation@@isEqual(value1) @AT@ 4426 @LENGTH@ 15
---------------MOV SimpleName@@value1 @TO@ SimpleName@@MethodName:isEqual:[value1] @AT@ 4380 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEqual:[value1] @TO@ MethodInvocation@@isEqual(value1) @AT@ 4426 @LENGTH@ 15
---------------MOV SimpleName@@value1 @TO@ SimpleName@@MethodName:isEqual:[value1] @AT@ 4380 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:executeCommand("fabric:create -n --clean root") @TO@ MethodInvocation:System.out.println(executeCommand("fabric:create -n --clean root")) @AT@ 1767 @LENGTH@ 48
---INS MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean root")) @TO@ ExpressionStatement@@MethodInvocation:executeCommand("fabric:create -n --clean root") @AT@ 1767 @LENGTH@ 67
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean root")) @AT@ 1767 @LENGTH@ 10
------INS SimpleName@@MethodName:println:[executeCommand("fabric:create -n --clean root")] @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean root")) @AT@ 1778 @LENGTH@ 56
---------MOV MethodInvocation@@executeCommand("fabric:create -n --clean root") @TO@ SimpleName@@MethodName:println:[executeCommand("fabric:create -n --clean root")] @AT@ 1767 @LENGTH@ 47
---------MOV MethodInvocation@@executeCommand("fabric:create -n --clean root") @TO@ SimpleName@@MethodName:println:[executeCommand("fabric:create -n --clean root")] @AT@ 1767 @LENGTH@ 47


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [DIRECTORY=new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode("${jboss.server.log.dir}")).setAllowExpression(true).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [DIRECTORY=new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode(new ValueExpression("${jboss.server.log.dir}"))).setAllowExpression(true).build()] @AT@ 2235 @LENGTH@ 361
---UPD VariableDeclarationFragment@@DIRECTORY=new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode("${jboss.server.log.dir}")).setAllowExpression(true).build() @TO@ DIRECTORY=new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode(new ValueExpression("${jboss.server.log.dir}"))).setAllowExpression(true).build() @AT@ 2284 @LENGTH@ 311
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode("${jboss.server.log.dir}")).setAllowExpression(true).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.DIRECTORY,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1,true)).setDefaultValue(new ModelNode(new ValueExpression("${jboss.server.log.dir}"))).setAllowExpression(true).build() @AT@ 2296 @LENGTH@ 299
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("${jboss.server.log.dir}")] @TO@ MethodName:setDefaultValue:[new ModelNode(new ValueExpression("${jboss.server.log.dir}"))] @AT@ 2296 @LENGTH@ 240
------------UPD ClassInstanceCreation@@ModelNode["${jboss.server.log.dir}"] @TO@ ModelNode[new ValueExpression("${jboss.server.log.dir}")] @AT@ 2495 @LENGTH@ 40
---------------INS ClassInstanceCreation@@ValueExpression["${jboss.server.log.dir}"] @TO@ ClassInstanceCreation@@ModelNode["${jboss.server.log.dir}"] @AT@ 2546 @LENGTH@ 46
------------------MOV StringLiteral@@"${jboss.server.log.dir}" @TO@ ClassInstanceCreation@@ValueExpression["${jboss.server.log.dir}"] @AT@ 2509 @LENGTH@ 25
------------------INS New@@new @TO@ ClassInstanceCreation@@ValueExpression["${jboss.server.log.dir}"] @AT@ 2546 @LENGTH@ 3
------------------INS SimpleType@@ValueExpression @TO@ ClassInstanceCreation@@ValueExpression["${jboss.server.log.dir}"] @AT@ 2550 @LENGTH@ 15


UPD TypeDeclaration@@[public]LocalGitService, [FabricGitService] @TO@ [@Component(name="org.fusesource.fabric.git.local",description="Local Git Service",immediate=true), @Service(GitService.class), public]LocalGitService, [GitService] @AT@ 1081 @LENGTH@ 896
---INS NormalAnnotation@@@Component(name="org.fusesource.fabric.git.local",description="Local Git Service",immediate=true) @TO@ TypeDeclaration@@[public]LocalGitService, [FabricGitService] @AT@ 1063 @LENGTH@ 104
---UPD SimpleType@@FabricGitService @TO@ GitService @AT@ 1121 @LENGTH@ 16
---INS SingleMemberAnnotation@@@Service(GitService.class) @TO@ TypeDeclaration@@[public]LocalGitService, [FabricGitService] @AT@ 1168 @LENGTH@ 26


UPD ReturnStatement@@ClassInstanceCreation:new ContentModification(item,targetHash,ModificationType.MODIFY) @TO@ NullLiteral:null @AT@ 2430 @LENGTH@ 74
---INS NullLiteral@@null @TO@ ReturnStatement@@ClassInstanceCreation:new ContentModification(item,targetHash,ModificationType.MODIFY) @AT@ 2420 @LENGTH@ 4
---DEL ClassInstanceCreation@@ContentModification[item, targetHash, ModificationType.MODIFY] @AT@ 2437 @LENGTH@ 66
------DEL New@@new @AT@ 2437 @LENGTH@ 3
------DEL SimpleType@@ContentModification @AT@ 2441 @LENGTH@ 19
------DEL SimpleName@@item @AT@ 2461 @LENGTH@ 4
------DEL SimpleName@@targetHash @AT@ 2467 @LENGTH@ 10
------DEL QualifiedName@@ModificationType.MODIFY @AT@ 2479 @LENGTH@ 23
---------DEL SimpleName@@ModificationType @AT@ 2479 @LENGTH@ 16
---------DEL SimpleName@@MODIFY @AT@ 2496 @LENGTH@ 6


UPD VariableDeclarationStatement@@File timestampFile=new File(historyDir,CommonAttributes.TIMESTAMP); @TO@ File timestampFile=new File(historyDir,Constants.TIMESTAMP); @AT@ 3439 @LENGTH@ 70
---UPD VariableDeclarationFragment@@timestampFile=new File(historyDir,CommonAttributes.TIMESTAMP) @TO@ timestampFile=new File(historyDir,Constants.TIMESTAMP) @AT@ 3444 @LENGTH@ 64
------UPD ClassInstanceCreation@@File[historyDir, CommonAttributes.TIMESTAMP] @TO@ File[historyDir, Constants.TIMESTAMP] @AT@ 3460 @LENGTH@ 48
---------UPD QualifiedName@@CommonAttributes.TIMESTAMP @TO@ Constants.TIMESTAMP @AT@ 3481 @LENGTH@ 26
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 3481 @LENGTH@ 16


UPD IfStatement@@if ((op.getParentOperators() == null) || (op.getParentOperators().size() > 1)) {  return null;} @TO@ if ((op.getParentOperators() == null) || (op.getParentOperators().isEmpty()) || (op.getParentOperators().size() > 1)) {  return null;} @AT@ 16522 @LENGTH@ 113
---UPD InfixExpression@@(op.getParentOperators() == null) || (op.getParentOperators().size() > 1) @TO@ (op.getParentOperators() == null) || (op.getParentOperators().isEmpty()) || (op.getParentOperators().size() > 1) @AT@ 16526 @LENGTH@ 73
------INS ParenthesizedExpression@@(op.getParentOperators().isEmpty()) @TO@ InfixExpression@@(op.getParentOperators() == null) || (op.getParentOperators().size() > 1) @AT@ 16563 @LENGTH@ 35
---------INS MethodInvocation@@op.getParentOperators().isEmpty() @TO@ ParenthesizedExpression@@(op.getParentOperators().isEmpty()) @AT@ 16564 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getParentOperators:[] @TO@ MethodInvocation@@op.getParentOperators().isEmpty() @AT@ 16564 @LENGTH@ 23
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getParentOperators().isEmpty() @AT@ 16564 @LENGTH@ 2
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@op.getParentOperators().isEmpty() @AT@ 16588 @LENGTH@ 9


UPD IfStatement@@if (resultAction == OperationContext.ResultAction.KEEP) {  service.reloadRequired();  context.restartRequired();  result.commit();} else {  result.rollback();} @TO@ if (resultAction == OperationContext.ResultAction.KEEP) {  result.commit();} else {  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3576 @LENGTH@ 292
---UPD Block@@ThenBody:{  service.reloadRequired();  context.restartRequired();  result.commit();} @TO@ ThenBody:{  result.commit();} @AT@ 3631 @LENGTH@ 165
------DEL ExpressionStatement@@MethodInvocation:service.reloadRequired() @AT@ 3657 @LENGTH@ 25
---------DEL MethodInvocation@@service.reloadRequired() @AT@ 3657 @LENGTH@ 24
------------DEL SimpleName@@Name:service @AT@ 3657 @LENGTH@ 7
------------DEL SimpleName@@MethodName:reloadRequired:[] @AT@ 3665 @LENGTH@ 16
---UPD Block@@ElseBody:{  result.rollback();} @TO@ ElseBody:{  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3802 @LENGTH@ 66
------INS ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3807 @LENGTH@ 31
---------INS MethodInvocation@@service.clearRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @AT@ 3807 @LENGTH@ 30
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3807 @LENGTH@ 7
------------INS SimpleName@@MethodName:clearRestartRequired:[] @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3815 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3863 @LENGTH@ 32
---------INS MethodInvocation@@context.revertRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @AT@ 3863 @LENGTH@ 31
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3863 @LENGTH@ 7
------------INS SimpleName@@MethodName:revertRestartRequired:[] @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3871 @LENGTH@ 23


UPD IfStatement@@if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456")) {  fail("Incorrect failure type: " + result.asString());} @TO@ if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363")) {  fail("Incorrect failure type: " + result.asString());} @AT@ 5018 @LENGTH@ 160
---INS InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @TO@ IfStatement@@if (!result.get(FAILURE_DESCRIPTION).asString().contains("13456")) {  fail("Incorrect failure type: " + result.asString());} @AT@ 5022 @LENGTH@ 247
------MOV PrefixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5022 @LENGTH@ 61
------INS Operator@@&& @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5083 @LENGTH@ 2
------INS PrefixExpression@@!result.asString().contains("11360") @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5087 @LENGTH@ 36
---------INS Operator@@! @TO@ PrefixExpression@@!result.asString().contains("11360") @AT@ 5087 @LENGTH@ 1
---------INS MethodInvocation@@result.asString().contains("11360") @TO@ PrefixExpression@@!result.asString().contains("11360") @AT@ 5088 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@result.asString().contains("11360") @AT@ 5088 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.asString().contains("11360") @AT@ 5088 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["11360"] @TO@ MethodInvocation@@result.asString().contains("11360") @AT@ 5106 @LENGTH@ 17
---------------INS StringLiteral@@"11360" @TO@ SimpleName@@MethodName:contains:["11360"] @AT@ 5115 @LENGTH@ 7
------INS PrefixExpression@@!result.asString().contains("11361") @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5151 @LENGTH@ 36
---------INS Operator@@! @TO@ PrefixExpression@@!result.asString().contains("11361") @AT@ 5151 @LENGTH@ 1
---------INS MethodInvocation@@result.asString().contains("11361") @TO@ PrefixExpression@@!result.asString().contains("11361") @AT@ 5152 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@result.asString().contains("11361") @AT@ 5152 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.asString().contains("11361") @AT@ 5152 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["11361"] @TO@ MethodInvocation@@result.asString().contains("11361") @AT@ 5170 @LENGTH@ 17
---------------INS StringLiteral@@"11361" @TO@ SimpleName@@MethodName:contains:["11361"] @AT@ 5179 @LENGTH@ 7
------INS PrefixExpression@@!result.asString().contains("11362") @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5192 @LENGTH@ 36
---------INS Operator@@! @TO@ PrefixExpression@@!result.asString().contains("11362") @AT@ 5192 @LENGTH@ 1
---------INS MethodInvocation@@result.asString().contains("11362") @TO@ PrefixExpression@@!result.asString().contains("11362") @AT@ 5193 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@result.asString().contains("11362") @AT@ 5193 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.asString().contains("11362") @AT@ 5193 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["11362"] @TO@ MethodInvocation@@result.asString().contains("11362") @AT@ 5211 @LENGTH@ 17
---------------INS StringLiteral@@"11362" @TO@ SimpleName@@MethodName:contains:["11362"] @AT@ 5220 @LENGTH@ 7
------INS PrefixExpression@@!result.asString().contains("11363") @TO@ InfixExpression@@!result.get(FAILURE_DESCRIPTION).asString().contains("13456") && !result.asString().contains("11360") && !result.asString().contains("11361")&& !result.asString().contains("11362")&& !result.asString().contains("11363") @AT@ 5233 @LENGTH@ 36
---------INS Operator@@! @TO@ PrefixExpression@@!result.asString().contains("11363") @AT@ 5233 @LENGTH@ 1
---------INS MethodInvocation@@result.asString().contains("11363") @TO@ PrefixExpression@@!result.asString().contains("11363") @AT@ 5234 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@result.asString().contains("11363") @AT@ 5234 @LENGTH@ 17
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.asString().contains("11363") @AT@ 5234 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["11363"] @TO@ MethodInvocation@@result.asString().contains("11363") @AT@ 5252 @LENGTH@ 17
---------------INS StringLiteral@@"11363" @TO@ SimpleName@@MethodName:contains:["11363"] @AT@ 5261 @LENGTH@ 7


UPD VariableDeclarationStatement@@final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @TO@ final PatchInfo info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1515 @LENGTH@ 139
---UPD SimpleType@@PatchInfoService @TO@ PatchInfo @AT@ 1521 @LENGTH@ 16
---UPD VariableDeclarationFragment@@service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1538 @LENGTH@ 115
------UPD SimpleName@@service @TO@ info @AT@ 1538 @LENGTH@ 7
------UPD CastExpression@@(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ (PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1548 @LENGTH@ 105
---------UPD SimpleType@@PatchInfoService @TO@ PatchInfo @AT@ 1549 @LENGTH@ 16


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=getOAuth2RequestFactory().createStoredAuthorizationRequest(authorizationRequest); @TO@ OAuth2Request storedOAuth2Request=getOAuth2RequestFactory().createOAuth2Request(authorizationRequest); @AT@ 15047 @LENGTH@ 117
---UPD VariableDeclarationFragment@@storedOAuth2Request=getOAuth2RequestFactory().createStoredAuthorizationRequest(authorizationRequest) @TO@ storedOAuth2Request=getOAuth2RequestFactory().createOAuth2Request(authorizationRequest) @AT@ 15061 @LENGTH@ 102
------UPD MethodInvocation@@getOAuth2RequestFactory().createStoredAuthorizationRequest(authorizationRequest) @TO@ getOAuth2RequestFactory().createOAuth2Request(authorizationRequest) @AT@ 15083 @LENGTH@ 80
---------UPD SimpleName@@MethodName:createStoredAuthorizationRequest:[authorizationRequest] @TO@ MethodName:createOAuth2Request:[authorizationRequest] @AT@ 15109 @LENGTH@ 54


UPD VariableDeclarationStatement@@ContentModification moduleRemoved=new ContentModification(new ModuleItem(moduleName,existingHash),existingHash,REMOVE); @TO@ ContentModification moduleRemoved=new ContentModification(new ModuleItem(moduleName,NO_CONTENT),existingHash,REMOVE); @AT@ 4949 @LENGTH@ 124
---UPD VariableDeclarationFragment@@moduleRemoved=new ContentModification(new ModuleItem(moduleName,existingHash),existingHash,REMOVE) @TO@ moduleRemoved=new ContentModification(new ModuleItem(moduleName,NO_CONTENT),existingHash,REMOVE) @AT@ 4969 @LENGTH@ 103
------UPD ClassInstanceCreation@@ContentModification[new ModuleItem(moduleName,existingHash), existingHash, REMOVE] @TO@ ContentModification[new ModuleItem(moduleName,NO_CONTENT), existingHash, REMOVE] @AT@ 4985 @LENGTH@ 87
---------UPD ClassInstanceCreation@@ModuleItem[moduleName, existingHash] @TO@ ModuleItem[moduleName, NO_CONTENT] @AT@ 5009 @LENGTH@ 40
------------UPD SimpleName@@existingHash @TO@ NO_CONTENT @AT@ 5036 @LENGTH@ 12


UPD FieldDeclaration@@protected, static, final, SimpleAttributeDefinition, [PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build()] @TO@ protected, static, final, SimpleAttributeDefinition, [PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build()] @AT@ 1661 @LENGTH@ 317
---UPD VariableDeclarationFragment@@PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build() @TO@ PREFIX=new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build() @AT@ 1710 @LENGTH@ 267
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log.")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.PREFIX,ModelType.STRING,true).setDefaultValue(new ModelNode("access_log")).setValidator(new StringLengthValidator(1,true)).setAllowExpression(true).build() @AT@ 1719 @LENGTH@ 258
---------UPD MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("access_log.")] @TO@ MethodName:setDefaultValue:[new ModelNode("access_log")] @AT@ 1719 @LENGTH@ 137
------------UPD ClassInstanceCreation@@ModelNode["access_log."] @TO@ ModelNode["access_log"] @AT@ 1827 @LENGTH@ 28
---------------UPD StringLiteral@@"access_log." @TO@ "access_log" @AT@ 1841 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:cachedConnectionManager.getValue().pushMetaAwareObject(this,unsharable) @TO@ MethodInvocation:connectionManager.pushMetaAwareObject(this,unsharable) @AT@ 4004 @LENGTH@ 73
---UPD MethodInvocation@@cachedConnectionManager.getValue().pushMetaAwareObject(this,unsharable) @TO@ connectionManager.pushMetaAwareObject(this,unsharable) @AT@ 4004 @LENGTH@ 72
------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 4004 @LENGTH@ 34
------UPD SimpleName@@Name:cachedConnectionManager @TO@ Name:connectionManager @AT@ 4004 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:LOGGER.trace("Received CacheEntryEvent [{}]",event) @TO@ MethodInvocation:logger.trace("Received CacheEntryEvent [{}]",event) @AT@ 2411 @LENGTH@ 53
---UPD MethodInvocation@@LOGGER.trace("Received CacheEntryEvent [{}]",event) @TO@ logger.trace("Received CacheEntryEvent [{}]",event) @AT@ 2411 @LENGTH@ 52
------UPD SimpleName@@Name:LOGGER @TO@ Name:logger @AT@ 2411 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @TO@ MethodInvocation:new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).setRuntimeOnly().withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3221 @LENGTH@ 265
---UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @TO@ new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).setRuntimeOnly().withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3228 @LENGTH@ 257
------INS MethodInvocation@@MethodName:setRuntimeOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3228 @LENGTH@ 202


INS IfStatement@@if (service != null) {  service.start();} @TO@ MethodDeclaration@@public, static, void, MethodName:startService, Service service, Exception,  @AT@ 2088 @LENGTH@ 61
---INS InfixExpression@@service != null @TO@ IfStatement@@if (service != null) {  service.start();} @AT@ 2092 @LENGTH@ 15
------INS SimpleName@@service @TO@ InfixExpression@@service != null @AT@ 2092 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@service != null @AT@ 2099 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@service != null @AT@ 2103 @LENGTH@ 4
---INS Block@@ThenBody:{  service.start();} @TO@ IfStatement@@if (service != null) {  service.start();} @AT@ 2109 @LENGTH@ 40
------MOV ExpressionStatement@@MethodInvocation:service.start() @TO@ Block@@ThenBody:{  service.start();} @AT@ 2097 @LENGTH@ 16


UPD IfStatement@@if (declaredId != calculatedId) {  odm.setId(entity,calculatedId);} @TO@ if (calculatedId != null && declaredId != calculatedId) {  odm.setId(entity,calculatedId);} @AT@ 3404 @LENGTH@ 96
---INS InfixExpression@@calculatedId != null && declaredId != calculatedId @TO@ IfStatement@@if (declaredId != calculatedId) {  odm.setId(entity,calculatedId);} @AT@ 3408 @LENGTH@ 50
------INS InfixExpression@@calculatedId != null @TO@ InfixExpression@@calculatedId != null && declaredId != calculatedId @AT@ 3408 @LENGTH@ 20
---------INS SimpleName@@calculatedId @TO@ InfixExpression@@calculatedId != null @AT@ 3408 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@calculatedId != null @AT@ 3420 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@calculatedId != null @AT@ 3424 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@calculatedId != null && declaredId != calculatedId @AT@ 3428 @LENGTH@ 2
------INS InfixExpression@@declaredId != calculatedId @TO@ InfixExpression@@calculatedId != null && declaredId != calculatedId @AT@ 3432 @LENGTH@ 26
---------MOV SimpleName@@declaredId @TO@ InfixExpression@@declaredId != calculatedId @AT@ 3408 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@declaredId != calculatedId @AT@ 3418 @LENGTH@ 2
---------MOV SimpleName@@calculatedId @TO@ InfixExpression@@declaredId != calculatedId @AT@ 3422 @LENGTH@ 12
---DEL InfixExpression@@declaredId != calculatedId @AT@ 3408 @LENGTH@ 26


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EsbFeaturesTest, EsbTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-520] Fix esb-itests"), public]EsbFeaturesTest, EsbTestSupport @AT@ 1479 @LENGTH@ 5895
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-520] Fix esb-itests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EsbFeaturesTest, EsbTestSupport @AT@ 1572 @LENGTH@ 38


UPD Block@@ThenBody:{  if (sessionConfig.getSessionTimeoutSet()) {    deploymentInfo.setDefaultSessionTimeout(sessionConfig.getSessionTimeout() * 60);  }  CookieConfigMetaData cookieConfig=sessionConfig.getCookieConfig();  if (cookieConfig != null) {    if (config == null) {      config=new ServletSessionConfig();    }    if (cookieConfig.getName() != null) {      config.setName(cookieConfig.getName());    }    if (cookieConfig.getDomain() != null) {      config.setDomain(cookieConfig.getDomain());    }    if (cookieConfig.getComment() != null) {      config.setComment(cookieConfig.getComment());    }    config.setSecure(cookieConfig.getSecure());    config.setPath(cookieConfig.getPath());    config.setMaxAge(cookieConfig.getMaxAge());    config.setHttpOnly(cookieConfig.getHttpOnly());  }  List<SessionTrackingModeType> modes=sessionConfig.getSessionTrackingModes();  if (modes != null && !modes.isEmpty()) {    final Set<SessionTrackingMode> trackingModes=new HashSet<>();    for (    SessionTrackingModeType mode : modes) {switch (mode) {case COOKIE:        trackingModes.add(SessionTrackingMode.COOKIE);      break;case SSL:    trackingModes.add(SessionTrackingMode.SSL);  break;case URL:trackingModes.add(SessionTrackingMode.URL);break;}}config.setSessionTrackingModes(trackingModes);}} @TO@ ThenBody:{  if (sessionConfig.getSessionTimeoutSet()) {    deploymentInfo.setDefaultSessionTimeout(sessionConfig.getSessionTimeout() * 60);  }  CookieConfigMetaData cookieConfig=sessionConfig.getCookieConfig();  if (config == null) {    config=new ServletSessionConfig();  }  if (cookieConfig != null) {    if (cookieConfig.getName() != null) {      config.setName(cookieConfig.getName());    }    if (cookieConfig.getDomain() != null) {      config.setDomain(cookieConfig.getDomain());    }    if (cookieConfig.getComment() != null) {      config.setComment(cookieConfig.getComment());    }    config.setSecure(cookieConfig.getSecure());    config.setPath(cookieConfig.getPath());    config.setMaxAge(cookieConfig.getMaxAge());    config.setHttpOnly(cookieConfig.getHttpOnly());  }  List<SessionTrackingModeType> modes=sessionConfig.getSessionTrackingModes();  if (modes != null && !modes.isEmpty()) {    final Set<SessionTrackingMode> trackingModes=new HashSet<>();    for (    SessionTrackingModeType mode : modes) {switch (mode) {case COOKIE:        trackingModes.add(SessionTrackingMode.COOKIE);      break;case SSL:    trackingModes.add(SessionTrackingMode.SSL);  break;case URL:trackingModes.add(SessionTrackingMode.URL);break;}}config.setSessionTrackingModes(trackingModes);}} @AT@ 11672 @LENGTH@ 2103
---UPD IfStatement@@if (cookieConfig != null) {  if (config == null) {    config=new ServletSessionConfig();  }  if (cookieConfig.getName() != null) {    config.setName(cookieConfig.getName());  }  if (cookieConfig.getDomain() != null) {    config.setDomain(cookieConfig.getDomain());  }  if (cookieConfig.getComment() != null) {    config.setComment(cookieConfig.getComment());  }  config.setSecure(cookieConfig.getSecure());  config.setPath(cookieConfig.getPath());  config.setMaxAge(cookieConfig.getMaxAge());  config.setHttpOnly(cookieConfig.getHttpOnly());} @TO@ if (cookieConfig != null) {  if (cookieConfig.getName() != null) {    config.setName(cookieConfig.getName());  }  if (cookieConfig.getDomain() != null) {    config.setDomain(cookieConfig.getDomain());  }  if (cookieConfig.getComment() != null) {    config.setComment(cookieConfig.getComment());  }  config.setSecure(cookieConfig.getSecure());  config.setPath(cookieConfig.getPath());  config.setMaxAge(cookieConfig.getMaxAge());  config.setHttpOnly(cookieConfig.getHttpOnly());} @AT@ 11954 @LENGTH@ 870
------UPD Block@@ThenBody:{  if (config == null) {    config=new ServletSessionConfig();  }  if (cookieConfig.getName() != null) {    config.setName(cookieConfig.getName());  }  if (cookieConfig.getDomain() != null) {    config.setDomain(cookieConfig.getDomain());  }  if (cookieConfig.getComment() != null) {    config.setComment(cookieConfig.getComment());  }  config.setSecure(cookieConfig.getSecure());  config.setPath(cookieConfig.getPath());  config.setMaxAge(cookieConfig.getMaxAge());  config.setHttpOnly(cookieConfig.getHttpOnly());} @TO@ ThenBody:{  if (cookieConfig.getName() != null) {    config.setName(cookieConfig.getName());  }  if (cookieConfig.getDomain() != null) {    config.setDomain(cookieConfig.getDomain());  }  if (cookieConfig.getComment() != null) {    config.setComment(cookieConfig.getComment());  }  config.setSecure(cookieConfig.getSecure());  config.setPath(cookieConfig.getPath());  config.setMaxAge(cookieConfig.getMaxAge());  config.setHttpOnly(cookieConfig.getHttpOnly());} @AT@ 11980 @LENGTH@ 844
---MOV IfStatement@@if (config == null) {  config=new ServletSessionConfig();} @TO@ Block@@ThenBody:{  if (sessionConfig.getSessionTimeoutSet()) {    deploymentInfo.setDefaultSessionTimeout(sessionConfig.getSessionTimeout() * 60);  }  CookieConfigMetaData cookieConfig=sessionConfig.getCookieConfig();  if (cookieConfig != null) {    if (config == null) {      config=new ServletSessionConfig();    }    if (cookieConfig.getName() != null) {      config.setName(cookieConfig.getName());    }    if (cookieConfig.getDomain() != null) {      config.setDomain(cookieConfig.getDomain());    }    if (cookieConfig.getComment() != null) {      config.setComment(cookieConfig.getComment());    }    config.setSecure(cookieConfig.getSecure());    config.setPath(cookieConfig.getPath());    config.setMaxAge(cookieConfig.getMaxAge());    config.setHttpOnly(cookieConfig.getHttpOnly());  }  List<SessionTrackingModeType> modes=sessionConfig.getSessionTrackingModes();  if (modes != null && !modes.isEmpty()) {    final Set<SessionTrackingMode> trackingModes=new HashSet<>();    for (    SessionTrackingModeType mode : modes) {switch (mode) {case COOKIE:        trackingModes.add(SessionTrackingMode.COOKIE);      break;case SSL:    trackingModes.add(SessionTrackingMode.SSL);  break;case URL:trackingModes.add(SessionTrackingMode.URL);break;}}config.setSessionTrackingModes(trackingModes);}} @AT@ 12002 @LENGTH@ 103


UPD VariableDeclarationStatement@@InputSplitInfo inputSplitInfo=MRHelpers.generateInputSplits(conf,tezDir); @TO@ InputSplitInfo inputSplitInfo=MRHelpers.generateInputSplits(conf,new Path(tezDir,"" + seqNo)); @AT@ 7904 @LENGTH@ 76
---UPD VariableDeclarationFragment@@inputSplitInfo=MRHelpers.generateInputSplits(conf,tezDir) @TO@ inputSplitInfo=MRHelpers.generateInputSplits(conf,new Path(tezDir,"" + seqNo)) @AT@ 7919 @LENGTH@ 60
------UPD MethodInvocation@@MRHelpers.generateInputSplits(conf,tezDir) @TO@ MRHelpers.generateInputSplits(conf,new Path(tezDir,"" + seqNo)) @AT@ 7936 @LENGTH@ 43
---------UPD SimpleName@@MethodName:generateInputSplits:[conf, tezDir] @TO@ MethodName:generateInputSplits:[conf, new Path(tezDir,"" + seqNo)] @AT@ 7946 @LENGTH@ 33
------------DEL SimpleName@@tezDir @AT@ 7972 @LENGTH@ 6
------------INS ClassInstanceCreation@@Path[tezDir, "" + seqNo] @TO@ SimpleName@@MethodName:generateInputSplits:[conf, tezDir] @AT@ 7981 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@Path[tezDir, "" + seqNo] @AT@ 7981 @LENGTH@ 3
---------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[tezDir, "" + seqNo] @AT@ 7985 @LENGTH@ 4
---------------INS SimpleName@@tezDir @TO@ ClassInstanceCreation@@Path[tezDir, "" + seqNo] @AT@ 7990 @LENGTH@ 6
---------------INS InfixExpression@@"" + seqNo @TO@ ClassInstanceCreation@@Path[tezDir, "" + seqNo] @AT@ 7998 @LENGTH@ 8
------------------INS StringLiteral@@"" @TO@ InfixExpression@@"" + seqNo @AT@ 7998 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@"" + seqNo @AT@ 8000 @LENGTH@ 1
------------------INS SimpleName@@seqNo @TO@ InfixExpression@@"" + seqNo @AT@ 8001 @LENGTH@ 5


UPD IfStatement@@if (ManagedBrowsableEndpoint.class.getName().equals(on.getClassName())) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else if (on.getClassName().startsWith("org.apache.camel.component.jms")) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelEndpointMBean.class,true);} @TO@ if (ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) || SedaEndpoint.class.getName().equals(on.getClassName())) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else if (on.getClassName().startsWith("org.apache.camel.component.jms")) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelEndpointMBean.class,true);} @AT@ 8819 @LENGTH@ 644
---INS InfixExpression@@ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) || SedaEndpoint.class.getName().equals(on.getClassName()) @TO@ IfStatement@@if (ManagedBrowsableEndpoint.class.getName().equals(on.getClassName())) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else if (on.getClassName().startsWith("org.apache.camel.component.jms")) {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelBrowsableEndpointMBean.class,true);} else {  endpoint=(CamelEndpointMBean)newProxyInstance(on.getObjectName(),CamelEndpointMBean.class,true);} @AT@ 8876 @LENGTH@ 124
------MOV MethodInvocation@@ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) @TO@ InfixExpression@@ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) || SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8823 @LENGTH@ 66
------INS Operator@@|| @TO@ InfixExpression@@ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) || SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8942 @LENGTH@ 2
------INS MethodInvocation@@SedaEndpoint.class.getName().equals(on.getClassName()) @TO@ InfixExpression@@ManagedBrowsableEndpoint.class.getName().equals(on.getClassName()) || SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8946 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8946 @LENGTH@ 28
---------INS TypeLiteral@@SedaEndpoint.class @TO@ MethodInvocation@@SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8946 @LENGTH@ 18
---------INS SimpleName@@MethodName:equals:[on.getClassName()] @TO@ MethodInvocation@@SedaEndpoint.class.getName().equals(on.getClassName()) @AT@ 8975 @LENGTH@ 25
------------INS MethodInvocation@@on.getClassName() @TO@ SimpleName@@MethodName:equals:[on.getClassName()] @AT@ 8982 @LENGTH@ 17
---------------INS SimpleName@@Name:on @TO@ MethodInvocation@@on.getClassName() @AT@ 8982 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getClassName:[] @TO@ MethodInvocation@@on.getClassName() @AT@ 8985 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:getEndpoint().onListenerConstainerStopped(listenerContainer) @TO@ MethodInvocation:getEndpoint().onListenerContainerStopped(listenerContainer) @AT@ 7741 @LENGTH@ 61
---UPD MethodInvocation@@getEndpoint().onListenerConstainerStopped(listenerContainer) @TO@ getEndpoint().onListenerContainerStopped(listenerContainer) @AT@ 7741 @LENGTH@ 60
------UPD SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @TO@ MethodName:onListenerContainerStopped:[listenerContainer] @AT@ 7755 @LENGTH@ 46


UPD IfStatement@@if (zkSession == null || zkSession.getState() == States.CLOSED) {  zkSession=new ZooKeeper(this.connectString,this.DEFAULT_SESSION_TIMEOUT,new ZKWatcher());} @TO@ if (zkSession == null || zkSession.getState() == States.CLOSED) {  zkSession=new ZooKeeper(this.connectString,this.DEFAULT_SESSION_TIMEOUT,new ZKWatcher());  while (zkSession.getState() == States.CONNECTING) {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }  }} @AT@ 11071 @LENGTH@ 221
---UPD Block@@ThenBody:{  zkSession=new ZooKeeper(this.connectString,this.DEFAULT_SESSION_TIMEOUT,new ZKWatcher());} @TO@ ThenBody:{  zkSession=new ZooKeeper(this.connectString,this.DEFAULT_SESSION_TIMEOUT,new ZKWatcher());  while (zkSession.getState() == States.CONNECTING) {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }  }} @AT@ 11135 @LENGTH@ 157
------INS WhileStatement@@while (zkSession.getState() == States.CONNECTING) {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }} @TO@ Block@@ThenBody:{  zkSession=new ZooKeeper(this.connectString,this.DEFAULT_SESSION_TIMEOUT,new ZKWatcher());} @AT@ 11295 @LENGTH@ 236
---------INS InfixExpression@@zkSession.getState() == States.CONNECTING @TO@ WhileStatement@@while (zkSession.getState() == States.CONNECTING) {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }} @AT@ 11302 @LENGTH@ 41
------------INS MethodInvocation@@zkSession.getState() @TO@ InfixExpression@@zkSession.getState() == States.CONNECTING @AT@ 11302 @LENGTH@ 20
---------------INS SimpleName@@Name:zkSession @TO@ MethodInvocation@@zkSession.getState() @AT@ 11302 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getState:[] @TO@ MethodInvocation@@zkSession.getState() @AT@ 11312 @LENGTH@ 10
------------INS Operator@@== @TO@ InfixExpression@@zkSession.getState() == States.CONNECTING @AT@ 11322 @LENGTH@ 2
------------INS QualifiedName@@States.CONNECTING @TO@ InfixExpression@@zkSession.getState() == States.CONNECTING @AT@ 11326 @LENGTH@ 17
---------------INS SimpleName@@States @TO@ QualifiedName@@States.CONNECTING @AT@ 11326 @LENGTH@ 6
---------------INS SimpleName@@CONNECTING @TO@ QualifiedName@@States.CONNECTING @AT@ 11333 @LENGTH@ 10
---------INS Block@@WhileBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }} @TO@ WhileStatement@@while (zkSession.getState() == States.CONNECTING) {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }} @AT@ 11345 @LENGTH@ 186
------------INS TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @TO@ Block@@WhileBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }} @AT@ 11371 @LENGTH@ 138
---------------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 11405 @LENGTH@ 19
------------------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 11405 @LENGTH@ 18
---------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 11405 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 11412 @LENGTH@ 11
------------------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 11418 @LENGTH@ 4
---------------INS CatchClause@@catch (InterruptedException e) {} @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 11451 @LENGTH@ 58
------------------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {} @AT@ 11458 @LENGTH@ 22
---------------------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 11458 @LENGTH@ 20
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 11479 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:unTrackConfiguration, Runnable callback,  @TO@ public, void, MethodName:untrackConfiguration, Runnable callback,  @AT@ 1576 @LENGTH@ 146
---UPD SimpleName@@MethodName:unTrackConfiguration @TO@ MethodName:untrackConfiguration @AT@ 1588 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:String.format(pointer,container,policy) @TO@ MethodInvocation:String.format(pointer,container,String.format(resolver,container)) @AT@ 25440 @LENGTH@ 49
---UPD MethodInvocation@@String.format(pointer,container,policy) @TO@ String.format(pointer,container,String.format(resolver,container)) @AT@ 25447 @LENGTH@ 41
------UPD SimpleName@@MethodName:format:[pointer, container, policy] @TO@ MethodName:format:[pointer, container, String.format(resolver,container)] @AT@ 25454 @LENGTH@ 34
---------INS MethodInvocation@@String.format(resolver,container) @TO@ SimpleName@@MethodName:format:[pointer, container, policy] @AT@ 25454 @LENGTH@ 34
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format(resolver,container) @AT@ 25454 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:[resolver, container] @TO@ MethodInvocation@@String.format(resolver,container) @AT@ 25461 @LENGTH@ 27
---------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:format:[resolver, container] @AT@ 25468 @LENGTH@ 8
---------------INS SimpleName@@container @TO@ SimpleName@@MethodName:format:[resolver, container] @AT@ 25478 @LENGTH@ 9
---------DEL SimpleName@@policy @AT@ 25481 @LENGTH@ 6


DEL IfStatement@@if (property.isEntity() && maybeAddAssociationLink(builder,mappings,property,links)) {  return;} @AT@ 10456 @LENGTH@ 112
---DEL InfixExpression@@property.isEntity() && maybeAddAssociationLink(builder,mappings,property,links) @AT@ 10460 @LENGTH@ 82
------DEL MethodInvocation@@property.isEntity() @AT@ 10460 @LENGTH@ 19
---------DEL SimpleName@@Name:property @AT@ 10460 @LENGTH@ 8
---------DEL SimpleName@@MethodName:isEntity:[] @AT@ 10469 @LENGTH@ 10
------DEL Operator@@&& @AT@ 10479 @LENGTH@ 2
------DEL MethodInvocation@@maybeAddAssociationLink(builder,mappings,property,links) @AT@ 10483 @LENGTH@ 59
---------DEL SimpleName@@MethodName:maybeAddAssociationLink:[builder, mappings, property, links] @AT@ 10483 @LENGTH@ 59
------------DEL SimpleName@@builder @AT@ 10507 @LENGTH@ 7
------------DEL SimpleName@@mappings @AT@ 10516 @LENGTH@ 8
------------DEL SimpleName@@property @AT@ 10526 @LENGTH@ 8
------------DEL SimpleName@@links @AT@ 10536 @LENGTH@ 5
---DEL Block@@ThenBody:{  return;} @AT@ 10544 @LENGTH@ 24
------DEL ReturnStatement@@ @AT@ 10553 @LENGTH@ 7


UPD MethodDeclaration@@Map<String,String>, MethodName:createContainers, Map<String,String> options,  @TO@ Map<String,String>, MethodName:createContainers, Map<String,Object> options,  @AT@ 1210 @LENGTH@ 46
---UPD SingleVariableDeclaration@@Map<String,String> options @TO@ Map<String,Object> options @AT@ 1227 @LENGTH@ 27
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 1227 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 1239 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:result.put(newKey,getMappedValue(field,query.get(key))) @TO@ MethodInvocation:result.put(newKey,getMappedValue(field,rawValue)) @AT@ 3512 @LENGTH@ 58
---UPD MethodInvocation@@result.put(newKey,getMappedValue(field,query.get(key))) @TO@ result.put(newKey,getMappedValue(field,rawValue)) @AT@ 3512 @LENGTH@ 57
------UPD SimpleName@@MethodName:put:[newKey, getMappedValue(field,query.get(key))] @TO@ MethodName:put:[newKey, getMappedValue(field,rawValue)] @AT@ 3519 @LENGTH@ 50
---------UPD MethodInvocation@@getMappedValue(field,query.get(key)) @TO@ getMappedValue(field,rawValue) @AT@ 3531 @LENGTH@ 37
------------UPD SimpleName@@MethodName:getMappedValue:[field, query.get(key)] @TO@ MethodName:getMappedValue:[field, rawValue] @AT@ 3531 @LENGTH@ 37
---------------DEL MethodInvocation@@query.get(key) @AT@ 3553 @LENGTH@ 14
------------------DEL SimpleName@@Name:query @AT@ 3553 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:get:[key] @AT@ 3559 @LENGTH@ 8
---------------------DEL SimpleName@@key @AT@ 3563 @LENGTH@ 3
---------------INS SimpleName@@rawValue @TO@ SimpleName@@MethodName:getMappedValue:[field, query.get(key)] @AT@ 3553 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testRange, Exception,  @TO@ TypeDeclaration@@[public]ResolverTest,  @AT@ 5375 @LENGTH@ 364
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5375 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5382 @LENGTH@ 4
---INS SimpleName@@MethodName:testRange @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5387 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5406 @LENGTH@ 9
---INS VariableDeclarationStatement@@Processor processor=new Processor(); @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5426 @LENGTH@ 38
------INS SimpleType@@Processor @TO@ VariableDeclarationStatement@@Processor processor=new Processor(); @AT@ 5426 @LENGTH@ 9
------INS VariableDeclarationFragment@@processor=new Processor() @TO@ VariableDeclarationStatement@@Processor processor=new Processor(); @AT@ 5436 @LENGTH@ 27
---------INS SimpleName@@processor @TO@ VariableDeclarationFragment@@processor=new Processor() @AT@ 5436 @LENGTH@ 9
---------INS ClassInstanceCreation@@Processor[] @TO@ VariableDeclarationFragment@@processor=new Processor() @AT@ 5448 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 5448 @LENGTH@ 3
------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 5452 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:processor.setProperty("@","1.2.3.redhat-61-SNAPSHOT") @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5473 @LENGTH@ 55
------INS MethodInvocation@@processor.setProperty("@","1.2.3.redhat-61-SNAPSHOT") @TO@ ExpressionStatement@@MethodInvocation:processor.setProperty("@","1.2.3.redhat-61-SNAPSHOT") @AT@ 5473 @LENGTH@ 54
---------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.setProperty("@","1.2.3.redhat-61-SNAPSHOT") @AT@ 5473 @LENGTH@ 9
---------INS SimpleName@@MethodName:setProperty:["@", "1.2.3.redhat-61-SNAPSHOT"] @TO@ MethodInvocation@@processor.setProperty("@","1.2.3.redhat-61-SNAPSHOT") @AT@ 5483 @LENGTH@ 44
------------INS StringLiteral@@"@" @TO@ SimpleName@@MethodName:setProperty:["@", "1.2.3.redhat-61-SNAPSHOT"] @AT@ 5495 @LENGTH@ 3
------------INS StringLiteral@@"1.2.3.redhat-61-SNAPSHOT" @TO@ SimpleName@@MethodName:setProperty:["@", "1.2.3.redhat-61-SNAPSHOT"] @AT@ 5500 @LENGTH@ 26
---INS VariableDeclarationStatement@@Macro macro=new Macro(processor); @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5537 @LENGTH@ 35
------INS SimpleType@@Macro @TO@ VariableDeclarationStatement@@Macro macro=new Macro(processor); @AT@ 5537 @LENGTH@ 5
------INS VariableDeclarationFragment@@macro=new Macro(processor) @TO@ VariableDeclarationStatement@@Macro macro=new Macro(processor); @AT@ 5543 @LENGTH@ 28
---------INS SimpleName@@macro @TO@ VariableDeclarationFragment@@macro=new Macro(processor) @AT@ 5543 @LENGTH@ 5
---------INS ClassInstanceCreation@@Macro[processor] @TO@ VariableDeclarationFragment@@macro=new Macro(processor) @AT@ 5551 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@Macro[processor] @AT@ 5551 @LENGTH@ 3
------------INS SimpleType@@Macro @TO@ ClassInstanceCreation@@Macro[processor] @AT@ 5555 @LENGTH@ 5
------------INS SimpleName@@processor @TO@ ClassInstanceCreation@@Macro[processor] @AT@ 5561 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("[1.2,1.3)",macro.process("${range;[==,=+)}")) @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5582 @LENGTH@ 61
------INS MethodInvocation@@assertEquals("[1.2,1.3)",macro.process("${range;[==,=+)}")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("[1.2,1.3)",macro.process("${range;[==,=+)}")) @AT@ 5582 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertEquals:["[1.2,1.3)", macro.process("${range;[==,=+)}")] @TO@ MethodInvocation@@assertEquals("[1.2,1.3)",macro.process("${range;[==,=+)}")) @AT@ 5582 @LENGTH@ 60
------------INS StringLiteral@@"[1.2,1.3)" @TO@ SimpleName@@MethodName:assertEquals:["[1.2,1.3)", macro.process("${range;[==,=+)}")] @AT@ 5595 @LENGTH@ 11
------------INS MethodInvocation@@macro.process("${range;[==,=+)}") @TO@ SimpleName@@MethodName:assertEquals:["[1.2,1.3)", macro.process("${range;[==,=+)}")] @AT@ 5608 @LENGTH@ 33
---------------INS SimpleName@@Name:macro @TO@ MethodInvocation@@macro.process("${range;[==,=+)}") @AT@ 5608 @LENGTH@ 5
---------------INS SimpleName@@MethodName:process:["${range;[==,=+)}"] @TO@ MethodInvocation@@macro.process("${range;[==,=+)}") @AT@ 5614 @LENGTH@ 27
------------------INS StringLiteral@@"${range;[==,=+)}" @TO@ SimpleName@@MethodName:process:["${range;[==,=+)}"] @AT@ 5622 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals("[1.2.3.redhat-61-SNAPSHOT,2)",macro.process("${range;[====,+)}")) @TO@ MethodDeclaration@@public, void, MethodName:testRange, Exception,  @AT@ 5652 @LENGTH@ 81
------INS MethodInvocation@@assertEquals("[1.2.3.redhat-61-SNAPSHOT,2)",macro.process("${range;[====,+)}")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("[1.2.3.redhat-61-SNAPSHOT,2)",macro.process("${range;[====,+)}")) @AT@ 5652 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertEquals:["[1.2.3.redhat-61-SNAPSHOT,2)", macro.process("${range;[====,+)}")] @TO@ MethodInvocation@@assertEquals("[1.2.3.redhat-61-SNAPSHOT,2)",macro.process("${range;[====,+)}")) @AT@ 5652 @LENGTH@ 80
------------INS StringLiteral@@"[1.2.3.redhat-61-SNAPSHOT,2)" @TO@ SimpleName@@MethodName:assertEquals:["[1.2.3.redhat-61-SNAPSHOT,2)", macro.process("${range;[====,+)}")] @AT@ 5665 @LENGTH@ 30
------------INS MethodInvocation@@macro.process("${range;[====,+)}") @TO@ SimpleName@@MethodName:assertEquals:["[1.2.3.redhat-61-SNAPSHOT,2)", macro.process("${range;[====,+)}")] @AT@ 5697 @LENGTH@ 34
---------------INS SimpleName@@Name:macro @TO@ MethodInvocation@@macro.process("${range;[====,+)}") @AT@ 5697 @LENGTH@ 5
---------------INS SimpleName@@MethodName:process:["${range;[====,+)}"] @TO@ MethodInvocation@@macro.process("${range;[====,+)}") @AT@ 5703 @LENGTH@ 28
------------------INS StringLiteral@@"${range;[====,+)}" @TO@ SimpleName@@MethodName:process:["${range;[====,+)}"] @AT@ 5711 @LENGTH@ 19


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[public]OsgiTypeConverter, ServiceSupport[TypeConverter, TypeConverterRegistry, ServiceTrackerCustomizer<TypeConverterLoader,Object>] @AT@ 3933 @LENGTH@ 76
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 3933 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 3940 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 3948 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:getDelegate().allowNull() @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 3970 @LENGTH@ 33
------INS MethodInvocation@@getDelegate().allowNull() @TO@ ReturnStatement@@MethodInvocation:getDelegate().allowNull() @AT@ 3977 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:getDelegate:[] @TO@ MethodInvocation@@getDelegate().allowNull() @AT@ 3977 @LENGTH@ 13
---------INS SimpleName@@MethodName:allowNull:[] @TO@ MethodInvocation@@getDelegate().allowNull() @AT@ 3991 @LENGTH@ 11


INS MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]HdfsResourceLoaderTests,  @AT@ 4848 @LENGTH@ 265
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4848 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4856 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4863 @LENGTH@ 4
---INS SimpleName@@MethodName:assertFileCountViaLoaderWithPatter @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4868 @LENGTH@ 34
---INS SingleVariableDeclaration@@HdfsResourceLoader loader @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4903 @LENGTH@ 25
------INS SimpleType@@HdfsResourceLoader @TO@ SingleVariableDeclaration@@HdfsResourceLoader loader @AT@ 4903 @LENGTH@ 18
------INS SimpleName@@loader @TO@ SingleVariableDeclaration@@HdfsResourceLoader loader @AT@ 4922 @LENGTH@ 6
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4930 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 4930 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 4937 @LENGTH@ 4
---INS SingleVariableDeclaration@@int count @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4943 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int count @AT@ 4943 @LENGTH@ 3
------INS SimpleName@@count @TO@ SingleVariableDeclaration@@int count @AT@ 4947 @LENGTH@ 5
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4961 @LENGTH@ 11
---INS VariableDeclarationStatement@@Resource[] resources=loader.getResources(path); @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 4977 @LENGTH@ 49
------INS ArrayType@@Resource[] @TO@ VariableDeclarationStatement@@Resource[] resources=loader.getResources(path); @AT@ 4977 @LENGTH@ 10
---------INS SimpleType@@Resource @TO@ ArrayType@@Resource[] @AT@ 4977 @LENGTH@ 8
------INS VariableDeclarationFragment@@resources=loader.getResources(path) @TO@ VariableDeclarationStatement@@Resource[] resources=loader.getResources(path); @AT@ 4988 @LENGTH@ 37
---------INS SimpleName@@resources @TO@ VariableDeclarationFragment@@resources=loader.getResources(path) @AT@ 4988 @LENGTH@ 9
---------INS MethodInvocation@@loader.getResources(path) @TO@ VariableDeclarationFragment@@resources=loader.getResources(path) @AT@ 5000 @LENGTH@ 25
------------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.getResources(path) @AT@ 5000 @LENGTH@ 6
------------INS SimpleName@@MethodName:getResources:[path] @TO@ MethodInvocation@@loader.getResources(path) @AT@ 5007 @LENGTH@ 18
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:getResources:[path] @AT@ 5020 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(resources,notNullValue()) @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 5029 @LENGTH@ 38
------INS MethodInvocation@@assertThat(resources,notNullValue()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(resources,notNullValue()) @AT@ 5029 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertThat:[resources, notNullValue()] @TO@ MethodInvocation@@assertThat(resources,notNullValue()) @AT@ 5029 @LENGTH@ 37
------------INS SimpleName@@resources @TO@ SimpleName@@MethodName:assertThat:[resources, notNullValue()] @AT@ 5040 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:assertThat:[resources, notNullValue()] @AT@ 5051 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(resources.length,is(count)) @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileCountViaLoaderWithPatter, HdfsResourceLoader loader, String path, int count, IOException,  @AT@ 5070 @LENGTH@ 40
------INS MethodInvocation@@assertThat(resources.length,is(count)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(resources.length,is(count)) @AT@ 5070 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[resources.length, is(count)] @TO@ MethodInvocation@@assertThat(resources.length,is(count)) @AT@ 5070 @LENGTH@ 39
------------INS QualifiedName@@resources.length @TO@ SimpleName@@MethodName:assertThat:[resources.length, is(count)] @AT@ 5081 @LENGTH@ 16
---------------INS SimpleName@@resources @TO@ QualifiedName@@resources.length @AT@ 5081 @LENGTH@ 9
---------------INS SimpleName@@length @TO@ QualifiedName@@resources.length @AT@ 5091 @LENGTH@ 6
------------INS MethodInvocation@@is(count) @TO@ SimpleName@@MethodName:assertThat:[resources.length, is(count)] @AT@ 5099 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[count] @TO@ MethodInvocation@@is(count) @AT@ 5099 @LENGTH@ 9
------------------INS SimpleName@@count @TO@ SimpleName@@MethodName:is:[count] @AT@ 5102 @LENGTH@ 5


UPD VariableDeclarationStatement@@String db_dir=getTestDir() + "/hbasedb"; @TO@ String db_dir=new Path(getTestDir(),"hbasedb").toString(); @AT@ 3026 @LENGTH@ 42
---UPD VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @TO@ db_dir=new Path(getTestDir(),"hbasedb").toString() @AT@ 3033 @LENGTH@ 34
------INS MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @TO@ VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @AT@ 3042 @LENGTH@ 44
---------INS ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @TO@ MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @AT@ 3042 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 3042 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 3046 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getTestDir:[] @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 3051 @LENGTH@ 12
------------INS StringLiteral@@"hbasedb" @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 3065 @LENGTH@ 9
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @AT@ 3076 @LENGTH@ 10
------DEL InfixExpression@@getTestDir() + "/hbasedb" @AT@ 3042 @LENGTH@ 25
---------DEL MethodInvocation@@MethodName:getTestDir:[] @AT@ 3042 @LENGTH@ 12
---------DEL Operator@@+ @AT@ 3054 @LENGTH@ 1
---------DEL StringLiteral@@"/hbasedb" @AT@ 3057 @LENGTH@ 10


UPD TypeDeclaration@@[public]SameDocumentUriDereferencer, [URIDereferencer] @TO@ [public, final]SameDocumentUriDereferencer, [URIDereferencer] @AT@ 1282 @LENGTH@ 1581
---INS Modifier@@final @TO@ TypeDeclaration@@[public]SameDocumentUriDereferencer, [URIDereferencer] @AT@ 1289 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:resolver.setFabricService(fabricService) @TO@ MethodDeclaration@@public, void, MethodName:testResolveAttributeCase, Exception,  @AT@ 5074 @LENGTH@ 41
---INS MethodInvocation@@resolver.setFabricService(fabricService) @TO@ ExpressionStatement@@MethodInvocation:resolver.setFabricService(fabricService) @AT@ 5074 @LENGTH@ 40
------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setFabricService(fabricService) @AT@ 5074 @LENGTH@ 8
------INS SimpleName@@MethodName:setFabricService:[fabricService] @TO@ MethodInvocation@@resolver.setFabricService(fabricService) @AT@ 5083 @LENGTH@ 31
---------INS SimpleName@@fabricService @TO@ SimpleName@@MethodName:setFabricService:[fabricService] @AT@ 5100 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())) @TO@ MethodInvocation:resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())) @AT@ 4702 @LENGTH@ 130
---UPD MethodInvocation@@resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())) @TO@ resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())) @AT@ 4702 @LENGTH@ 129
------UPD SimpleName@@MethodName:registerSubModel:[new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())] @TO@ MethodName:registerSubModel:[new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())] @AT@ 4723 @LENGTH@ 108
---------UPD ClassInstanceCreation@@JmxAuditLoggerResourceDefinition[(ManagedAuditLogger)auditLoggerInfo.getAuditLogger()] @TO@ JmxAuditLoggerResourceDefinition[auditLoggerInfo.getAuditLogger()] @AT@ 4740 @LENGTH@ 90
------------INS MethodInvocation@@auditLoggerInfo.getAuditLogger() @TO@ ClassInstanceCreation@@JmxAuditLoggerResourceDefinition[(ManagedAuditLogger)auditLoggerInfo.getAuditLogger()] @AT@ 4692 @LENGTH@ 32
---------------MOV SimpleName@@Name:auditLoggerInfo @TO@ MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4797 @LENGTH@ 15
---------------MOV SimpleName@@MethodName:getAuditLogger:[] @TO@ MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4813 @LENGTH@ 16
------------DEL CastExpression@@(ManagedAuditLogger)auditLoggerInfo.getAuditLogger() @AT@ 4777 @LENGTH@ 52
---------------DEL SimpleType@@ManagedAuditLogger @AT@ 4778 @LENGTH@ 18
---------------DEL MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4797 @LENGTH@ 32


INS FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @TO@ TypeDeclaration@@[public, final]PatchUtils,  @AT@ 9737 @LENGTH@ 69
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9737 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9745 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9752 @LENGTH@ 5
---INS ArrayType@@char[] @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9758 @LENGTH@ 6
------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 9758 @LENGTH@ 4
---INS VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9765 @LENGTH@ 40
------INS SimpleName@@table @TO@ VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @AT@ 9765 @LENGTH@ 5
------INS MethodInvocation@@"0123456789abcdef".toCharArray() @TO@ VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @AT@ 9773 @LENGTH@ 32
---------INS StringLiteral@@"0123456789abcdef" @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 9773 @LENGTH@ 18
---------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 9792 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Camel") @TO@ MethodInvocation:template.sendBody("seda:start","Camel") @AT@ 1228 @LENGTH@ 43
---UPD MethodInvocation@@template.sendBody("direct:start","Camel") @TO@ template.sendBody("seda:start","Camel") @AT@ 1228 @LENGTH@ 42
------UPD SimpleName@@MethodName:sendBody:["direct:start", "Camel"] @TO@ MethodName:sendBody:["seda:start", "Camel"] @AT@ 1237 @LENGTH@ 33
---------UPD StringLiteral@@"direct:start" @TO@ "seda:start" @AT@ 1246 @LENGTH@ 14


UPD TryStatement@@try {  final FileOutputStream fos=new FileOutputStream(backup);  try {    StreamUtils.copyStream(fis,fos);    fos.flush();    fos.getFD().sync();    fos.close();  }  finally {    StreamUtils.safeClose(fos);  }}  finally {  StreamUtils.safeClose(fis);} @TO@ try {  final FileOutputStream fos=new FileOutputStream(backup);  final BufferedOutputStream output=new BufferedOutputStream(fos);  try {    StreamUtils.copyStream(in,output);    output.flush();    fos.getFD().sync();    fos.close();  }  finally {    StreamUtils.safeClose(output);  }}  finally {  StreamUtils.safeClose(in);} @AT@ 2512 @LENGTH@ 390
---UPD TryStatement@@try {  StreamUtils.copyStream(fis,fos);  fos.flush();  fos.getFD().sync();  fos.close();}  finally {  StreamUtils.safeClose(fos);} @TO@ try {  StreamUtils.copyStream(in,output);  output.flush();  fos.getFD().sync();  fos.close();}  finally {  StreamUtils.safeClose(output);} @AT@ 2601 @LENGTH@ 231
------UPD ExpressionStatement@@MethodInvocation:StreamUtils.copyStream(fis,fos) @TO@ MethodInvocation:StreamUtils.copyStream(in,output) @AT@ 2623 @LENGTH@ 33
---------UPD MethodInvocation@@StreamUtils.copyStream(fis,fos) @TO@ StreamUtils.copyStream(in,output) @AT@ 2623 @LENGTH@ 32
------------UPD SimpleName@@MethodName:copyStream:[fis, fos] @TO@ MethodName:copyStream:[in, output] @AT@ 2635 @LENGTH@ 20
---------------UPD SimpleName@@fis @TO@ in @AT@ 2646 @LENGTH@ 3
---------------UPD SimpleName@@fos @TO@ output @AT@ 2651 @LENGTH@ 3
------UPD ExpressionStatement@@MethodInvocation:fos.flush() @TO@ MethodInvocation:output.flush() @AT@ 2673 @LENGTH@ 12
---------UPD MethodInvocation@@fos.flush() @TO@ output.flush() @AT@ 2673 @LENGTH@ 11
------------UPD SimpleName@@Name:fos @TO@ Name:output @AT@ 2673 @LENGTH@ 3
------UPD Block@@FinallyBody:{  StreamUtils.safeClose(fos);} @TO@ FinallyBody:{  StreamUtils.safeClose(output);} @AT@ 2773 @LENGTH@ 59
---------UPD ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(fos) @TO@ MethodInvocation:StreamUtils.safeClose(output) @AT@ 2791 @LENGTH@ 27
------------UPD MethodInvocation@@StreamUtils.safeClose(fos) @TO@ StreamUtils.safeClose(output) @AT@ 2791 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:safeClose:[fos] @TO@ MethodName:safeClose:[output] @AT@ 2803 @LENGTH@ 14
------------------UPD SimpleName@@fos @TO@ output @AT@ 2813 @LENGTH@ 3
---INS VariableDeclarationStatement@@final BufferedOutputStream output=new BufferedOutputStream(fos); @TO@ TryStatement@@try {  final FileOutputStream fos=new FileOutputStream(backup);  try {    StreamUtils.copyStream(fis,fos);    fos.flush();    fos.getFD().sync();    fos.close();  }  finally {    StreamUtils.safeClose(fos);  }}  finally {  StreamUtils.safeClose(fis);} @AT@ 2657 @LENGTH@ 66
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final BufferedOutputStream output=new BufferedOutputStream(fos); @AT@ 2657 @LENGTH@ 5
------INS SimpleType@@BufferedOutputStream @TO@ VariableDeclarationStatement@@final BufferedOutputStream output=new BufferedOutputStream(fos); @AT@ 2663 @LENGTH@ 20
------INS VariableDeclarationFragment@@output=new BufferedOutputStream(fos) @TO@ VariableDeclarationStatement@@final BufferedOutputStream output=new BufferedOutputStream(fos); @AT@ 2684 @LENGTH@ 38
---------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=new BufferedOutputStream(fos) @AT@ 2684 @LENGTH@ 6
---------INS ClassInstanceCreation@@BufferedOutputStream[fos] @TO@ VariableDeclarationFragment@@output=new BufferedOutputStream(fos) @AT@ 2693 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@BufferedOutputStream[fos] @AT@ 2693 @LENGTH@ 3
------------INS SimpleType@@BufferedOutputStream @TO@ ClassInstanceCreation@@BufferedOutputStream[fos] @AT@ 2697 @LENGTH@ 20
------------INS SimpleName@@fos @TO@ ClassInstanceCreation@@BufferedOutputStream[fos] @AT@ 2718 @LENGTH@ 3
---UPD Block@@FinallyBody:{  StreamUtils.safeClose(fis);} @TO@ FinallyBody:{  StreamUtils.safeClose(in);} @AT@ 2851 @LENGTH@ 51
------UPD ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(fis) @TO@ MethodInvocation:StreamUtils.safeClose(in) @AT@ 2865 @LENGTH@ 27
---------UPD MethodInvocation@@StreamUtils.safeClose(fis) @TO@ StreamUtils.safeClose(in) @AT@ 2865 @LENGTH@ 26
------------UPD SimpleName@@MethodName:safeClose:[fis] @TO@ MethodName:safeClose:[in] @AT@ 2877 @LENGTH@ 14
---------------UPD SimpleName@@fis @TO@ in @AT@ 2887 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:element.setAttribute("id",contextId) @TO@ MethodInvocation:element.setAttributeNS(null,"id",contextId) @AT@ 14626 @LENGTH@ 38
---UPD MethodInvocation@@element.setAttribute("id",contextId) @TO@ element.setAttributeNS(null,"id",contextId) @AT@ 14626 @LENGTH@ 37
------UPD SimpleName@@MethodName:setAttribute:["id", contextId] @TO@ MethodName:setAttributeNS:[null, "id", contextId] @AT@ 14634 @LENGTH@ 29
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setAttribute:["id", contextId] @AT@ 14649 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ExpressionBasedStringQueryUnitTests,  @AT@ 1707 @LENGTH@ 316
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1707 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1714 @LENGTH@ 4
---INS SimpleName@@MethodName:renderAliasInExpressionQueryCorrectly @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1719 @LENGTH@ 37
---INS ExpressionStatement@@MethodInvocation:when(metadata.getEntityName()).thenReturn("User") @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1764 @LENGTH@ 50
------INS MethodInvocation@@when(metadata.getEntityName()).thenReturn("User") @TO@ ExpressionStatement@@MethodInvocation:when(metadata.getEntityName()).thenReturn("User") @AT@ 1764 @LENGTH@ 49
---------INS MethodInvocation@@MethodName:when:[metadata.getEntityName()] @TO@ MethodInvocation@@when(metadata.getEntityName()).thenReturn("User") @AT@ 1764 @LENGTH@ 30
------------INS MethodInvocation@@metadata.getEntityName() @TO@ MethodInvocation@@MethodName:when:[metadata.getEntityName()] @AT@ 1769 @LENGTH@ 24
---------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.getEntityName() @AT@ 1769 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getEntityName:[] @TO@ MethodInvocation@@metadata.getEntityName() @AT@ 1778 @LENGTH@ 15
---------INS SimpleName@@MethodName:thenReturn:["User"] @TO@ MethodInvocation@@when(metadata.getEntityName()).thenReturn("User") @AT@ 1795 @LENGTH@ 18
------------INS StringLiteral@@"User" @TO@ SimpleName@@MethodName:thenReturn:["User"] @AT@ 1806 @LENGTH@ 6
---INS VariableDeclarationStatement@@StringQuery query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata); @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1818 @LENGTH@ 95
------INS SimpleType@@StringQuery @TO@ VariableDeclarationStatement@@StringQuery query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata); @AT@ 1818 @LENGTH@ 11
------INS VariableDeclarationFragment@@query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata) @TO@ VariableDeclarationStatement@@StringQuery query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata); @AT@ 1830 @LENGTH@ 82
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata) @AT@ 1830 @LENGTH@ 5
---------INS ClassInstanceCreation@@ExpressionBasedStringQuery["select u from #{#entityName} u", metadata] @TO@ VariableDeclarationFragment@@query=new ExpressionBasedStringQuery("select u from #{#entityName} u",metadata) @AT@ 1838 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@ExpressionBasedStringQuery["select u from #{#entityName} u", metadata] @AT@ 1838 @LENGTH@ 3
------------INS SimpleType@@ExpressionBasedStringQuery @TO@ ClassInstanceCreation@@ExpressionBasedStringQuery["select u from #{#entityName} u", metadata] @AT@ 1842 @LENGTH@ 26
------------INS StringLiteral@@"select u from #{#entityName} u" @TO@ ClassInstanceCreation@@ExpressionBasedStringQuery["select u from #{#entityName} u", metadata] @AT@ 1869 @LENGTH@ 32
------------INS SimpleName@@metadata @TO@ ClassInstanceCreation@@ExpressionBasedStringQuery["select u from #{#entityName} u", metadata] @AT@ 1903 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getAlias(),is("u")) @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1916 @LENGTH@ 38
------INS MethodInvocation@@assertThat(query.getAlias(),is("u")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getAlias(),is("u")) @AT@ 1916 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertThat:[query.getAlias(), is("u")] @TO@ MethodInvocation@@assertThat(query.getAlias(),is("u")) @AT@ 1916 @LENGTH@ 37
------------INS MethodInvocation@@query.getAlias() @TO@ SimpleName@@MethodName:assertThat:[query.getAlias(), is("u")] @AT@ 1927 @LENGTH@ 16
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getAlias() @AT@ 1927 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getAlias:[] @TO@ MethodInvocation@@query.getAlias() @AT@ 1933 @LENGTH@ 10
------------INS MethodInvocation@@is("u") @TO@ SimpleName@@MethodName:assertThat:[query.getAlias(), is("u")] @AT@ 1945 @LENGTH@ 7
---------------INS SimpleName@@MethodName:is:["u"] @TO@ MethodInvocation@@is("u") @AT@ 1945 @LENGTH@ 7
------------------INS StringLiteral@@"u" @TO@ SimpleName@@MethodName:is:["u"] @AT@ 1948 @LENGTH@ 3
---------------INS SimpleName@@MethodName:is:["u"] @TO@ MethodInvocation@@is("u") @AT@ 1945 @LENGTH@ 7
------------------INS StringLiteral@@"u" @TO@ SimpleName@@MethodName:is:["u"] @AT@ 1948 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(query.getQueryString(),is("select u from User u")) @TO@ MethodDeclaration@@public, void, MethodName:renderAliasInExpressionQueryCorrectly,  @AT@ 1957 @LENGTH@ 63
------INS MethodInvocation@@assertThat(query.getQueryString(),is("select u from User u")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query.getQueryString(),is("select u from User u")) @AT@ 1957 @LENGTH@ 62
---------INS SimpleName@@MethodName:assertThat:[query.getQueryString(), is("select u from User u")] @TO@ MethodInvocation@@assertThat(query.getQueryString(),is("select u from User u")) @AT@ 1957 @LENGTH@ 62
------------INS MethodInvocation@@query.getQueryString() @TO@ SimpleName@@MethodName:assertThat:[query.getQueryString(), is("select u from User u")] @AT@ 1968 @LENGTH@ 22
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryString() @AT@ 1968 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getQueryString:[] @TO@ MethodInvocation@@query.getQueryString() @AT@ 1974 @LENGTH@ 16
------------INS MethodInvocation@@is("select u from User u") @TO@ SimpleName@@MethodName:assertThat:[query.getQueryString(), is("select u from User u")] @AT@ 1992 @LENGTH@ 26
---------------INS SimpleName@@MethodName:is:["select u from User u"] @TO@ MethodInvocation@@is("select u from User u") @AT@ 1992 @LENGTH@ 26
------------------INS StringLiteral@@"select u from User u" @TO@ SimpleName@@MethodName:is:["select u from User u"] @AT@ 1995 @LENGTH@ 22
---------------INS SimpleName@@MethodName:is:["select u from User u"] @TO@ MethodInvocation@@is("select u from User u") @AT@ 1992 @LENGTH@ 26
------------------INS StringLiteral@@"select u from User u" @TO@ SimpleName@@MethodName:is:["select u from User u"] @AT@ 1995 @LENGTH@ 22


UPD CatchClause@@catch (Throwable t) {  FabricException.launderThrowable(t);} @TO@ catch (Throwable t) {  throw FabricException.launderThrowable(t);} @AT@ 6564 @LENGTH@ 88
---INS ThrowStatement@@MethodInvocation:FabricException.launderThrowable(t) @TO@ CatchClause@@catch (Throwable t) {  FabricException.launderThrowable(t);} @AT@ 6602 @LENGTH@ 42
------MOV MethodInvocation@@FabricException.launderThrowable(t) @TO@ ThrowStatement@@MethodInvocation:FabricException.launderThrowable(t) @AT@ 6602 @LENGTH@ 35
---DEL ExpressionStatement@@MethodInvocation:FabricException.launderThrowable(t) @AT@ 6602 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()) @TO@ MethodInvocation:Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()) @AT@ 2824 @LENGTH@ 153
---UPD MethodInvocation@@Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()) @TO@ Assert.assertEquals(0,driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()) @AT@ 2824 @LENGTH@ 152
------UPD SimpleName@@MethodName:assertEquals:[0, driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode()] @TO@ MethodName:assertEquals:[0, driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode()] @AT@ 2831 @LENGTH@ 145
---------UPD MethodInvocation@@driver.run("load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName).getResponseCode() @TO@ driver.run("load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName).getResponseCode() @AT@ 2847 @LENGTH@ 128
------------UPD MethodInvocation@@MethodName:run:["load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName] @TO@ MethodName:run:["load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName] @AT@ 2847 @LENGTH@ 110
---------------UPD InfixExpression@@"load data local inpath '" + dataDir.getAbsolutePath() + "' into table "+ readTblName @TO@ "load data local inpath '" + dataDir.getPath().replaceAll("\\\\","/") + "' into table "+ readTblName @AT@ 2858 @LENGTH@ 98
------------------UPD MethodInvocation@@dataDir.getAbsolutePath() @TO@ dataDir.getPath().replaceAll("\\\\","/") @AT@ 2899 @LENGTH@ 25
---------------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@dataDir.getAbsolutePath() @AT@ 2899 @LENGTH@ 17
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 2907 @LENGTH@ 17
------------------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2928 @LENGTH@ 6
------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 2936 @LENGTH@ 3


UPD Block@@ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean twoStep=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      twoStep=true;    }    allHosts.addAll(stepRouting.getHosts());  }  routing=new OperationRouting(allHosts);} @TO@ ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean fwdToAllHosts=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();    }    allHosts.addAll(stepRouting.getHosts());  }  if (fwdToAllHosts) {    routing=new OperationRouting(true);  } else {    routing=new OperationRouting(allHosts);  }} @AT@ 4391 @LENGTH@ 1165
---UPD VariableDeclarationStatement@@boolean twoStep=false; @TO@ boolean fwdToAllHosts=false; @AT@ 4471 @LENGTH@ 24
------UPD VariableDeclarationFragment@@twoStep=false @TO@ fwdToAllHosts=false @AT@ 4479 @LENGTH@ 15
---------UPD SimpleName@@twoStep @TO@ fwdToAllHosts @AT@ 4479 @LENGTH@ 7
---UPD EnhancedForStatement@@for (ModelNode step : operation.get(STEPS).asList()) {  ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));  OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);  if (stepRouting.isTwoStep()) {    twoStep=true;  }  allHosts.addAll(stepRouting.getHosts());} @TO@ for (ModelNode step : operation.get(STEPS).asList()) {  ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));  OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);  if (stepRouting.isTwoStep()) {    fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();  }  allHosts.addAll(stepRouting.getHosts());} @AT@ 4512 @LENGTH@ 501
------UPD IfStatement@@if (stepRouting.isTwoStep()) {  twoStep=true;} @TO@ if (stepRouting.isTwoStep()) {  fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();} @AT@ 4842 @LENGTH@ 92
---------UPD Block@@ThenBody:{  twoStep=true;} @TO@ ThenBody:{  fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();} @AT@ 4871 @LENGTH@ 63
------------UPD ExpressionStatement@@Assignment:twoStep=true @TO@ Assignment:fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 4897 @LENGTH@ 15
---------------UPD Assignment@@twoStep=true @TO@ fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 4897 @LENGTH@ 14
------------------UPD SimpleName@@twoStep @TO@ fwdToAllHosts @AT@ 4897 @LENGTH@ 7
------------------DEL BooleanLiteral@@true @AT@ 4907 @LENGTH@ 4
------------------INS InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @TO@ Assignment@@twoStep=true @AT@ 5038 @LENGTH@ 49
---------------------INS SimpleName@@fwdToAllHosts @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5038 @LENGTH@ 13
---------------------INS Operator@@|| @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5051 @LENGTH@ 2
---------------------INS MethodInvocation@@stepRouting.getHosts().isEmpty() @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 32
------------------------INS MethodInvocation@@MethodName:getHosts:[] @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 22
------------------------INS SimpleName@@Name:stepRouting @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5078 @LENGTH@ 9
---INS IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @TO@ Block@@ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean twoStep=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      twoStep=true;    }    allHosts.addAll(stepRouting.getHosts());  }  routing=new OperationRouting(allHosts);} @AT@ 5206 @LENGTH@ 183
------INS SimpleName@@fwdToAllHosts @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5210 @LENGTH@ 13
------INS Block@@ThenBody:{  routing=new OperationRouting(true);} @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5225 @LENGTH@ 77
---------INS ExpressionStatement@@Assignment:routing=new OperationRouting(true) @TO@ Block@@ThenBody:{  routing=new OperationRouting(true);} @AT@ 5247 @LENGTH@ 37
------------INS Assignment@@routing=new OperationRouting(true) @TO@ ExpressionStatement@@Assignment:routing=new OperationRouting(true) @AT@ 5247 @LENGTH@ 36
---------------INS SimpleName@@routing @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5247 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5254 @LENGTH@ 1
---------------INS ClassInstanceCreation@@OperationRouting[true] @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5257 @LENGTH@ 26
------------------INS New@@new @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5257 @LENGTH@ 3
------------------INS SimpleType@@OperationRouting @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5261 @LENGTH@ 16
------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5278 @LENGTH@ 4
------INS Block@@ElseBody:{  routing=new OperationRouting(allHosts);} @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5308 @LENGTH@ 81
---------MOV ExpressionStatement@@Assignment:routing=new OperationRouting(allHosts) @TO@ Block@@ElseBody:{  routing=new OperationRouting(allHosts);} @AT@ 5501 @LENGTH@ 41


INS MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @TO@ TypeDeclaration@@[public]NativeApiUtilsForPatching,  @AT@ 4127 @LENGTH@ 594
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4127 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4134 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4141 @LENGTH@ 9
---INS SimpleName@@MethodName:getHistoryItemForOneOffPatch @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4151 @LENGTH@ 28
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4180 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 4180 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 4202 @LENGTH@ 6
---INS SingleVariableDeclaration@@String patchId @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4210 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String patchId @AT@ 4210 @LENGTH@ 6
------INS SimpleName@@patchId @TO@ SingleVariableDeclaration@@String patchId @AT@ 4217 @LENGTH@ 7
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4245 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4267 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 4267 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 4273 @LENGTH@ 9
------INS VariableDeclarationFragment@@readOp=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 4283 @LENGTH@ 24
---------INS SimpleName@@readOp @TO@ VariableDeclarationFragment@@readOp=new ModelNode() @AT@ 4283 @LENGTH@ 6
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@readOp=new ModelNode() @AT@ 4292 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4292 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4296 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4317 @LENGTH@ 78
------INS MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @TO@ ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 4317 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP_ADDR] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 4317 @LENGTH@ 45
------------INS QualifiedName@@ModelDescriptionConstants.OP_ADDR @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP_ADDR] @AT@ 4328 @LENGTH@ 33
---------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.OP_ADDR @AT@ 4328 @LENGTH@ 25
---------------INS SimpleName@@OP_ADDR @TO@ QualifiedName@@ModelDescriptionConstants.OP_ADDR @AT@ 4354 @LENGTH@ 7
---------INS SimpleName@@Name:readOp @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 4317 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["core-service", "patching"] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 4363 @LENGTH@ 31
------------INS StringLiteral@@"core-service" @TO@ SimpleName@@MethodName:add:["core-service", "patching"] @AT@ 4367 @LENGTH@ 14
------------INS StringLiteral@@"patching" @TO@ SimpleName@@MethodName:add:["core-service", "patching"] @AT@ 4383 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP).set("show-history") @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4404 @LENGTH@ 61
------INS MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @TO@ ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 4404 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 4404 @LENGTH@ 40
------------INS QualifiedName@@ModelDescriptionConstants.OP @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @AT@ 4415 @LENGTH@ 28
---------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 4415 @LENGTH@ 25
---------------INS SimpleName@@OP @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 4441 @LENGTH@ 2
---------INS SimpleName@@Name:readOp @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 4404 @LENGTH@ 6
---------INS SimpleName@@MethodName:set:["show-history"] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 4445 @LENGTH@ 19
------------INS StringLiteral@@"show-history" @TO@ SimpleName@@MethodName:set:["show-history"] @AT@ 4449 @LENGTH@ 14
---INS VariableDeclarationStatement@@List<ModelNode> list=client.execute(readOp).get("result").asList(); @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4474 @LENGTH@ 69
------INS ParameterizedType@@List<ModelNode> @TO@ VariableDeclarationStatement@@List<ModelNode> list=client.execute(readOp).get("result").asList(); @AT@ 4474 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 4474 @LENGTH@ 4
---------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 4479 @LENGTH@ 9
------INS VariableDeclarationFragment@@list=client.execute(readOp).get("result").asList() @TO@ VariableDeclarationStatement@@List<ModelNode> list=client.execute(readOp).get("result").asList(); @AT@ 4490 @LENGTH@ 52
---------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=client.execute(readOp).get("result").asList() @AT@ 4490 @LENGTH@ 4
---------INS MethodInvocation@@client.execute(readOp).get("result").asList() @TO@ VariableDeclarationFragment@@list=client.execute(readOp).get("result").asList() @AT@ 4497 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:get:["result"] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 4497 @LENGTH@ 36
---------------INS StringLiteral@@"result" @TO@ MethodInvocation@@MethodName:get:["result"] @AT@ 4524 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:execute:[readOp] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 4497 @LENGTH@ 22
---------------INS SimpleName@@readOp @TO@ MethodInvocation@@MethodName:execute:[readOp] @AT@ 4512 @LENGTH@ 6
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 4497 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 4534 @LENGTH@ 8
---INS EnhancedForStatement@@for (ModelNode item : list) {  if (item.get("one-off").asString().equalsIgnoreCase(patchId))   return item;} @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4552 @LENGTH@ 142
------INS SingleVariableDeclaration@@ModelNode item @TO@ EnhancedForStatement@@for (ModelNode item : list) {  if (item.get("one-off").asString().equalsIgnoreCase(patchId))   return item;} @AT@ 4557 @LENGTH@ 14
---------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode item @AT@ 4557 @LENGTH@ 9
---------INS SimpleName@@item @TO@ SingleVariableDeclaration@@ModelNode item @AT@ 4567 @LENGTH@ 4
------INS SimpleName@@list @TO@ EnhancedForStatement@@for (ModelNode item : list) {  if (item.get("one-off").asString().equalsIgnoreCase(patchId))   return item;} @AT@ 4574 @LENGTH@ 4
------INS IfStatement@@if (item.get("one-off").asString().equalsIgnoreCase(patchId)) return item; @TO@ EnhancedForStatement@@for (ModelNode item : list) {  if (item.get("one-off").asString().equalsIgnoreCase(patchId))   return item;} @AT@ 4594 @LENGTH@ 90
---------INS MethodInvocation@@item.get("one-off").asString().equalsIgnoreCase(patchId) @TO@ IfStatement@@if (item.get("one-off").asString().equalsIgnoreCase(patchId)) return item; @AT@ 4598 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@item.get("one-off").asString().equalsIgnoreCase(patchId) @AT@ 4598 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:get:["one-off"] @TO@ MethodInvocation@@item.get("one-off").asString().equalsIgnoreCase(patchId) @AT@ 4598 @LENGTH@ 19
---------------INS StringLiteral@@"one-off" @TO@ MethodInvocation@@MethodName:get:["one-off"] @AT@ 4607 @LENGTH@ 9
------------INS SimpleName@@Name:item @TO@ MethodInvocation@@item.get("one-off").asString().equalsIgnoreCase(patchId) @AT@ 4598 @LENGTH@ 4
------------INS SimpleName@@MethodName:equalsIgnoreCase:[patchId] @TO@ MethodInvocation@@item.get("one-off").asString().equalsIgnoreCase(patchId) @AT@ 4629 @LENGTH@ 25
---------------INS SimpleName@@patchId @TO@ SimpleName@@MethodName:equalsIgnoreCase:[patchId] @AT@ 4646 @LENGTH@ 7
---------INS Block@@ThenBody:return item; @TO@ IfStatement@@if (item.get("one-off").asString().equalsIgnoreCase(patchId)) return item; @AT@ 4672 @LENGTH@ 12
------------INS ReturnStatement@@SimpleName:item @TO@ Block@@ThenBody:return item; @AT@ 4672 @LENGTH@ 12
---------------INS SimpleName@@item @TO@ ReturnStatement@@SimpleName:item @AT@ 4679 @LENGTH@ 4
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, static, ModelNode, MethodName:getHistoryItemForOneOffPatch, ModelControllerClient client, String patchId, IOException,  @AT@ 4703 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4710 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.concurrentContext=new ConcurrentContext(getApplicationName(),getModuleName(),getComponentName()) @TO@ Assignment:this.concurrentContext=new ConcurrentContext() @AT@ 4757 @LENGTH@ 104
---UPD Assignment@@this.concurrentContext=new ConcurrentContext(getApplicationName(),getModuleName(),getComponentName()) @TO@ this.concurrentContext=new ConcurrentContext() @AT@ 4757 @LENGTH@ 103
------UPD ClassInstanceCreation@@ConcurrentContext[getApplicationName(), getModuleName(), getComponentName()] @TO@ ConcurrentContext[] @AT@ 4782 @LENGTH@ 78
---------DEL MethodInvocation@@MethodName:getApplicationName:[] @AT@ 4804 @LENGTH@ 20
---------DEL MethodInvocation@@MethodName:getModuleName:[] @AT@ 4825 @LENGTH@ 15
---------DEL MethodInvocation@@MethodName:getComponentName:[] @AT@ 4841 @LENGTH@ 18


UPD IfStatement@@if (value.contains(" ") || scope.contains(",")) {  scope=OAuth2Utils.parseParameterList(value);} @TO@ if (value.contains(" ") || value.contains(",")) {  scope=OAuth2Utils.parseParameterList(value);} @AT@ 2678 @LENGTH@ 105
---UPD InfixExpression@@value.contains(" ") || scope.contains(",") @TO@ value.contains(" ") || value.contains(",") @AT@ 2682 @LENGTH@ 42
------UPD MethodInvocation@@scope.contains(",") @TO@ value.contains(",") @AT@ 2705 @LENGTH@ 19
---------UPD SimpleName@@Name:scope @TO@ Name:value @AT@ 2705 @LENGTH@ 5


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @TO@ MethodInvocation:Collections.emptyList() @AT@ 27499 @LENGTH@ 30
---INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 27471 @LENGTH@ 23
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 27471 @LENGTH@ 11
------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 27483 @LENGTH@ 11
---DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 27506 @LENGTH@ 22
------DEL SimpleName@@Collections @AT@ 27506 @LENGTH@ 11
------DEL SimpleName@@EMPTY_LIST @AT@ 27518 @LENGTH@ 10


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("attempt to add a Permission to a readonly PermissionCollection") @TO@ MethodInvocation:ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 1952 @LENGTH@ 94
---DEL ClassInstanceCreation@@SecurityException["attempt to add a Permission to a readonly PermissionCollection"] @AT@ 1958 @LENGTH@ 87
------DEL New@@new @AT@ 1958 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 1962 @LENGTH@ 17
------DEL StringLiteral@@"attempt to add a Permission to a readonly PermissionCollection" @AT@ 1980 @LENGTH@ 64
---INS MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("attempt to add a Permission to a readonly PermissionCollection") @AT@ 2009 @LENGTH@ 60
------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 2009 @LENGTH@ 27
------INS SimpleName@@MethodName:permissionCollectionIsReadOnly:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 2037 @LENGTH@ 32


UPD IfStatement@@if (lastUpdate.after(updated) || lastUpdate.equals(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @TO@ if (lastUpdate.after(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @AT@ 2002 @LENGTH@ 212
---DEL InfixExpression@@lastUpdate.after(updated) || lastUpdate.equals(updated) @AT@ 2006 @LENGTH@ 55
------DEL Operator@@|| @AT@ 2031 @LENGTH@ 2
------DEL MethodInvocation@@lastUpdate.equals(updated) @AT@ 2035 @LENGTH@ 26
---------DEL SimpleName@@Name:lastUpdate @AT@ 2035 @LENGTH@ 10
---------DEL SimpleName@@MethodName:equals:[updated] @AT@ 2046 @LENGTH@ 15
------------DEL SimpleName@@updated @AT@ 2053 @LENGTH@ 7
---MOV MethodInvocation@@lastUpdate.after(updated) @TO@ IfStatement@@if (lastUpdate.after(updated) || lastUpdate.equals(updated)) {  LOG.debug("Entry is older than lastupdate=[{}], no valid entry=[{}]",lastUpdate,entry);  return false;} @AT@ 2006 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:builder.setInitialMode(Mode.ON_DEMAND) @TO@ MethodInvocation:builder.setInitialMode(Mode.PASSIVE) @AT@ 7649 @LENGTH@ 39
---UPD MethodInvocation@@builder.setInitialMode(Mode.ON_DEMAND) @TO@ builder.setInitialMode(Mode.PASSIVE) @AT@ 7649 @LENGTH@ 38
------UPD SimpleName@@MethodName:setInitialMode:[Mode.ON_DEMAND] @TO@ MethodName:setInitialMode:[Mode.PASSIVE] @AT@ 7657 @LENGTH@ 30
---------UPD QualifiedName@@Mode.ON_DEMAND @TO@ Mode.PASSIVE @AT@ 7672 @LENGTH@ 14
------------UPD SimpleName@@ON_DEMAND @TO@ PASSIVE @AT@ 7677 @LENGTH@ 9


UPD VariableDeclarationStatement@@final PatchInfo info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @TO@ final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1515 @LENGTH@ 122
---UPD SimpleType@@PatchInfo @TO@ PatchInfoService @AT@ 1521 @LENGTH@ 9
---UPD VariableDeclarationFragment@@info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1531 @LENGTH@ 105
------UPD SimpleName@@info @TO@ service @AT@ 1531 @LENGTH@ 4
------UPD CastExpression@@(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ (PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1538 @LENGTH@ 98
---------UPD SimpleType@@PatchInfo @TO@ PatchInfoService @AT@ 1539 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 7251 @LENGTH@ 253
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7251 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7258 @LENGTH@ 4
---INS SimpleName@@MethodName:findsExistingOrderByIndependentOfCase @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7263 @LENGTH@ 37
---INS VariableDeclarationStatement@@Sort sort=new Sort("lastname"); @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7308 @LENGTH@ 33
------INS SimpleType@@Sort @TO@ VariableDeclarationStatement@@Sort sort=new Sort("lastname"); @AT@ 7308 @LENGTH@ 4
------INS VariableDeclarationFragment@@sort=new Sort("lastname") @TO@ VariableDeclarationStatement@@Sort sort=new Sort("lastname"); @AT@ 7313 @LENGTH@ 27
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new Sort("lastname") @AT@ 7313 @LENGTH@ 4
---------INS ClassInstanceCreation@@Sort["lastname"] @TO@ VariableDeclarationFragment@@sort=new Sort("lastname") @AT@ 7320 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@Sort["lastname"] @AT@ 7320 @LENGTH@ 3
------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["lastname"] @AT@ 7324 @LENGTH@ 4
------------INS StringLiteral@@"lastname" @TO@ ClassInstanceCreation@@Sort["lastname"] @AT@ 7329 @LENGTH@ 10
---INS VariableDeclarationStatement@@String query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p"); @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7344 @LENGTH@ 86
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p"); @AT@ 7344 @LENGTH@ 6
------INS VariableDeclarationFragment@@query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p") @TO@ VariableDeclarationStatement@@String query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p"); @AT@ 7351 @LENGTH@ 78
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p") @AT@ 7351 @LENGTH@ 5
---------INS MethodInvocation@@applySorting("select p from Person p ORDER BY p.firstname",sort,"p") @TO@ VariableDeclarationFragment@@query=applySorting("select p from Person p ORDER BY p.firstname",sort,"p") @AT@ 7359 @LENGTH@ 70
------------INS SimpleName@@MethodName:applySorting:["select p from Person p ORDER BY p.firstname", sort, "p"] @TO@ MethodInvocation@@applySorting("select p from Person p ORDER BY p.firstname",sort,"p") @AT@ 7359 @LENGTH@ 70
---------------INS StringLiteral@@"select p from Person p ORDER BY p.firstname" @TO@ SimpleName@@MethodName:applySorting:["select p from Person p ORDER BY p.firstname", sort, "p"] @AT@ 7372 @LENGTH@ 45
---------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:["select p from Person p ORDER BY p.firstname", sort, "p"] @AT@ 7419 @LENGTH@ 4
---------------INS StringLiteral@@"p" @TO@ SimpleName@@MethodName:applySorting:["select p from Person p ORDER BY p.firstname", sort, "p"] @AT@ 7425 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(query,endsWith("ORDER BY p.firstname, p.lastname asc")) @TO@ MethodDeclaration@@public, void, MethodName:findsExistingOrderByIndependentOfCase,  @AT@ 7433 @LENGTH@ 68
------INS MethodInvocation@@assertThat(query,endsWith("ORDER BY p.firstname, p.lastname asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query,endsWith("ORDER BY p.firstname, p.lastname asc")) @AT@ 7433 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertThat:[query, endsWith("ORDER BY p.firstname, p.lastname asc")] @TO@ MethodInvocation@@assertThat(query,endsWith("ORDER BY p.firstname, p.lastname asc")) @AT@ 7433 @LENGTH@ 67
------------INS SimpleName@@query @TO@ SimpleName@@MethodName:assertThat:[query, endsWith("ORDER BY p.firstname, p.lastname asc")] @AT@ 7444 @LENGTH@ 5
------------INS MethodInvocation@@endsWith("ORDER BY p.firstname, p.lastname asc") @TO@ SimpleName@@MethodName:assertThat:[query, endsWith("ORDER BY p.firstname, p.lastname asc")] @AT@ 7451 @LENGTH@ 48
---------------INS SimpleName@@MethodName:endsWith:["ORDER BY p.firstname, p.lastname asc"] @TO@ MethodInvocation@@endsWith("ORDER BY p.firstname, p.lastname asc") @AT@ 7451 @LENGTH@ 48
------------------INS StringLiteral@@"ORDER BY p.firstname, p.lastname asc" @TO@ SimpleName@@MethodName:endsWith:["ORDER BY p.firstname, p.lastname asc"] @AT@ 7460 @LENGTH@ 38
---------------INS SimpleName@@MethodName:endsWith:["ORDER BY p.firstname, p.lastname asc"] @TO@ MethodInvocation@@endsWith("ORDER BY p.firstname, p.lastname asc") @AT@ 7451 @LENGTH@ 48
------------------INS StringLiteral@@"ORDER BY p.firstname, p.lastname asc" @TO@ SimpleName@@MethodName:endsWith:["ORDER BY p.firstname, p.lastname asc"] @AT@ 7460 @LENGTH@ 38


UPD CatchClause@@catch (KeeperException.NoNodeException e) {  LOGGER.debug("Could not load property value: {}. Ignoring.",value,e);  return value;} @TO@ catch (KeeperException.NoNodeException e) {  LOGGER.warn("Could not load property value: {}. Ignoring.",value,e);  return "";} @AT@ 1935 @LENGTH@ 163
---UPD ExpressionStatement@@MethodInvocation:LOGGER.debug("Could not load property value: {}. Ignoring.",value,e) @TO@ MethodInvocation:LOGGER.warn("Could not load property value: {}. Ignoring.",value,e) @AT@ 1991 @LENGTH@ 71
------UPD MethodInvocation@@LOGGER.debug("Could not load property value: {}. Ignoring.",value,e) @TO@ LOGGER.warn("Could not load property value: {}. Ignoring.",value,e) @AT@ 1991 @LENGTH@ 70
---------UPD SimpleName@@MethodName:debug:["Could not load property value: {}. Ignoring.", value, e] @TO@ MethodName:warn:["Could not load property value: {}. Ignoring.", value, e] @AT@ 1998 @LENGTH@ 63
---UPD ReturnStatement@@SimpleName:value @TO@ StringLiteral:"" @AT@ 2075 @LENGTH@ 13
------INS StringLiteral@@"" @TO@ ReturnStatement@@SimpleName:value @AT@ 2081 @LENGTH@ 2
------DEL SimpleName@@value @AT@ 2082 @LENGTH@ 5


UPD TypeDeclaration@@[public]GitDataStoreTest,  @TO@ [@Ignore("[FABRIC-535] Fix fabric/fabric-git tests"), public]GitDataStoreTest,  @AT@ 1461 @LENGTH@ 14212
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-535] Fix fabric/fabric-git tests") @TO@ TypeDeclaration@@[public]GitDataStoreTest,  @AT@ 1486 @LENGTH@ 51


INS ExpressionStatement@@MethodInvocation:hcatConf.set(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname,"60") @TO@ MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @AT@ 3863 @LENGTH@ 78
---INS MethodInvocation@@hcatConf.set(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname,"60") @TO@ ExpressionStatement@@MethodInvocation:hcatConf.set(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname,"60") @AT@ 3863 @LENGTH@ 77
------INS SimpleName@@Name:hcatConf @TO@ MethodInvocation@@hcatConf.set(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname,"60") @AT@ 3863 @LENGTH@ 8
------INS SimpleName@@MethodName:set:[HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname, "60"] @TO@ MethodInvocation@@hcatConf.set(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname,"60") @AT@ 3872 @LENGTH@ 68
---------INS QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname @TO@ SimpleName@@MethodName:set:[HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname, "60"] @AT@ 3876 @LENGTH@ 57
------------INS QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT @TO@ QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname @AT@ 3876 @LENGTH@ 49
---------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT @AT@ 3876 @LENGTH@ 17
------------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3876 @LENGTH@ 8
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3885 @LENGTH@ 8
---------------INS SimpleName@@METASTORE_CLIENT_SOCKET_TIMEOUT @TO@ QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT @AT@ 3894 @LENGTH@ 31
------------INS SimpleName@@varname @TO@ QualifiedName@@HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname @AT@ 3926 @LENGTH@ 7
---------INS StringLiteral@@"60" @TO@ SimpleName@@MethodName:set:[HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT.varname, "60"] @AT@ 3935 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @TO@ TypeDeclaration@@[public]OperatorUtils,  @AT@ 1191 @LENGTH@ 70
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @AT@ 1191 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @AT@ 1199 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @AT@ 1206 @LENGTH@ 5
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @AT@ 1212 @LENGTH@ 3
---INS VariableDeclarationFragment@@LOG=LogFactory.getLog(OperatorUtils.class) @TO@ FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(OperatorUtils.class)] @AT@ 1216 @LENGTH@ 44
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(OperatorUtils.class) @AT@ 1216 @LENGTH@ 3
------INS MethodInvocation@@LogFactory.getLog(OperatorUtils.class) @TO@ VariableDeclarationFragment@@LOG=LogFactory.getLog(OperatorUtils.class) @AT@ 1222 @LENGTH@ 38
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(OperatorUtils.class) @AT@ 1222 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[OperatorUtils.class] @TO@ MethodInvocation@@LogFactory.getLog(OperatorUtils.class) @AT@ 1233 @LENGTH@ 27
------------INS TypeLiteral@@OperatorUtils.class @TO@ SimpleName@@MethodName:getLog:[OperatorUtils.class] @AT@ 1240 @LENGTH@ 19


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2903 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2919 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2926 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2934 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @TO@ TypeDeclaration@@[public]ContextSourceAndHibernateTransactionManager, HibernateTransactionManager @AT@ 9113 @LENGTH@ 129
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9113 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9120 @LENGTH@ 4
---INS SimpleName@@MethodName:afterPropertiesSet @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9125 @LENGTH@ 18
---INS ExpressionStatement@@SuperMethodInvocation:super.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9156 @LENGTH@ 27
------INS SuperMethodInvocation@@super.afterPropertiesSet() @TO@ ExpressionStatement@@SuperMethodInvocation:super.afterPropertiesSet() @AT@ 9156 @LENGTH@ 26
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ SuperMethodInvocation@@super.afterPropertiesSet() @AT@ 9162 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:ldapManagerDelegate.checkRenamingStrategy() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9192 @LENGTH@ 44
------INS MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @TO@ ExpressionStatement@@MethodInvocation:ldapManagerDelegate.checkRenamingStrategy() @AT@ 9192 @LENGTH@ 43
---------INS SimpleName@@Name:ldapManagerDelegate @TO@ MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @AT@ 9192 @LENGTH@ 19
---------INS SimpleName@@MethodName:checkRenamingStrategy:[] @TO@ MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @AT@ 9212 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:verify(mockConnection,atLeastOnce()).close() @TO@ MethodInvocation:verify(mockConnection,atLeastOnce()).close(anyInt()) @AT@ 13980 @LENGTH@ 46
---UPD MethodInvocation@@verify(mockConnection,atLeastOnce()).close() @TO@ verify(mockConnection,atLeastOnce()).close(anyInt()) @AT@ 13980 @LENGTH@ 45
------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:close:[anyInt()] @AT@ 14018 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:anyInt:[] @TO@ SimpleName@@MethodName:close:[] @AT@ 14076 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:history.get(CommonAttributes.APPLIED_AT).set(timestamp) @TO@ MethodInvocation:history.get(Constants.APPLIED_AT).set(timestamp) @AT@ 3580 @LENGTH@ 56
---UPD MethodInvocation@@history.get(CommonAttributes.APPLIED_AT).set(timestamp) @TO@ history.get(Constants.APPLIED_AT).set(timestamp) @AT@ 3580 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:get:[CommonAttributes.APPLIED_AT] @TO@ MethodName:get:[Constants.APPLIED_AT] @AT@ 3580 @LENGTH@ 40
---------UPD QualifiedName@@CommonAttributes.APPLIED_AT @TO@ Constants.APPLIED_AT @AT@ 3592 @LENGTH@ 27
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 3592 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 7279 @LENGTH@ 309
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7279 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7286 @LENGTH@ 4
---INS SimpleName@@MethodName:setConfiguration @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7291 @LENGTH@ 16
---INS SingleVariableDeclaration@@String pid @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7308 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String pid @AT@ 7308 @LENGTH@ 6
------INS SimpleName@@pid @TO@ SingleVariableDeclaration@@String pid @AT@ 7315 @LENGTH@ 3
---INS SingleVariableDeclaration@@Map<String,String> configuration @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7320 @LENGTH@ 33
------INS ParameterizedType@@Map<String,String> @TO@ SingleVariableDeclaration@@Map<String,String> configuration @AT@ 7320 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 7320 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7324 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7332 @LENGTH@ 6
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@Map<String,String> configuration @AT@ 7340 @LENGTH@ 13
---INS VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7365 @LENGTH@ 70
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @AT@ 7365 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7365 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7369 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7377 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 7377 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7381 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7389 @LENGTH@ 6
------INS VariableDeclarationFragment@@configurations=getConfigurations() @TO@ VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @AT@ 7398 @LENGTH@ 36
---------INS SimpleName@@configurations @TO@ VariableDeclarationFragment@@configurations=getConfigurations() @AT@ 7398 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:getConfigurations:[] @TO@ VariableDeclarationFragment@@configurations=getConfigurations() @AT@ 7415 @LENGTH@ 19
---INS IfStatement@@if (configurations != null) {  configurations.put(pid,configuration);  setConfigurations(configurations);} @TO@ MethodDeclaration@@public, void, MethodName:setConfiguration, String pid, Map<String,String> configuration,  @AT@ 7444 @LENGTH@ 138
------INS InfixExpression@@configurations != null @TO@ IfStatement@@if (configurations != null) {  configurations.put(pid,configuration);  setConfigurations(configurations);} @AT@ 7448 @LENGTH@ 22
---------INS SimpleName@@configurations @TO@ InfixExpression@@configurations != null @AT@ 7448 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@configurations != null @AT@ 7462 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@configurations != null @AT@ 7466 @LENGTH@ 4
------INS Block@@ThenBody:{  configurations.put(pid,configuration);  setConfigurations(configurations);} @TO@ IfStatement@@if (configurations != null) {  configurations.put(pid,configuration);  setConfigurations(configurations);} @AT@ 7472 @LENGTH@ 110
---------INS ExpressionStatement@@MethodInvocation:configurations.put(pid,configuration) @TO@ Block@@ThenBody:{  configurations.put(pid,configuration);  setConfigurations(configurations);} @AT@ 7486 @LENGTH@ 39
------------INS MethodInvocation@@configurations.put(pid,configuration) @TO@ ExpressionStatement@@MethodInvocation:configurations.put(pid,configuration) @AT@ 7486 @LENGTH@ 38
---------------INS SimpleName@@Name:configurations @TO@ MethodInvocation@@configurations.put(pid,configuration) @AT@ 7486 @LENGTH@ 14
---------------INS SimpleName@@MethodName:put:[pid, configuration] @TO@ MethodInvocation@@configurations.put(pid,configuration) @AT@ 7501 @LENGTH@ 23
------------------INS SimpleName@@pid @TO@ SimpleName@@MethodName:put:[pid, configuration] @AT@ 7505 @LENGTH@ 3
------------------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:put:[pid, configuration] @AT@ 7510 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:setConfigurations(configurations) @TO@ Block@@ThenBody:{  configurations.put(pid,configuration);  setConfigurations(configurations);} @AT@ 7538 @LENGTH@ 34
------------INS MethodInvocation@@setConfigurations(configurations) @TO@ ExpressionStatement@@MethodInvocation:setConfigurations(configurations) @AT@ 7538 @LENGTH@ 33
---------------INS SimpleName@@MethodName:setConfigurations:[configurations] @TO@ MethodInvocation@@setConfigurations(configurations) @AT@ 7538 @LENGTH@ 33
------------------INS SimpleName@@configurations @TO@ SimpleName@@MethodName:setConfigurations:[configurations] @AT@ 7556 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @TO@ MethodDeclaration@@public, static, void, MethodName:writeRef, final File file, final String ref, IOException,  @AT@ 3377 @LENGTH@ 28
---INS MethodInvocation@@mkdir(file.getParentFile()) @TO@ ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @AT@ 3377 @LENGTH@ 27
------INS SimpleName@@MethodName:mkdir:[file.getParentFile()] @TO@ MethodInvocation@@mkdir(file.getParentFile()) @AT@ 3377 @LENGTH@ 27
---------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:mkdir:[file.getParentFile()] @AT@ 3383 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 3383 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 3388 @LENGTH@ 15


INS MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @TO@ TypeDeclaration@@[public]IoUtils,  @AT@ 6310 @LENGTH@ 247
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6310 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6317 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6324 @LENGTH@ 4
---INS SimpleName@@MethodName:mkdir @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6329 @LENGTH@ 5
---INS SingleVariableDeclaration@@File parent @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6335 @LENGTH@ 11
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File parent @AT@ 6335 @LENGTH@ 4
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@File parent @AT@ 6340 @LENGTH@ 6
---INS SingleVariableDeclaration@@String... segments @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6348 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... segments @AT@ 6348 @LENGTH@ 6
------INS SimpleName@@segments @TO@ SingleVariableDeclaration@@String... segments @AT@ 6358 @LENGTH@ 8
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6375 @LENGTH@ 11
---INS VariableDeclarationStatement@@File dir=parent; @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6397 @LENGTH@ 18
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File dir=parent; @AT@ 6397 @LENGTH@ 4
------INS VariableDeclarationFragment@@dir=parent @TO@ VariableDeclarationStatement@@File dir=parent; @AT@ 6402 @LENGTH@ 12
---------INS SimpleName@@dir @TO@ VariableDeclarationFragment@@dir=parent @AT@ 6402 @LENGTH@ 3
---------INS SimpleName@@parent @TO@ VariableDeclarationFragment@@dir=parent @AT@ 6408 @LENGTH@ 6
---INS EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6424 @LENGTH@ 85
------INS SingleVariableDeclaration@@String segment @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6429 @LENGTH@ 14
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String segment @AT@ 6429 @LENGTH@ 6
---------INS SimpleName@@segment @TO@ SingleVariableDeclaration@@String segment @AT@ 6436 @LENGTH@ 7
------INS SimpleName@@segments @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6446 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:dir=new File(dir,segment) @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6470 @LENGTH@ 29
---------INS Assignment@@dir=new File(dir,segment) @TO@ ExpressionStatement@@Assignment:dir=new File(dir,segment) @AT@ 6470 @LENGTH@ 28
------------INS SimpleName@@dir @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6470 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6473 @LENGTH@ 1
------------INS ClassInstanceCreation@@File[dir, segment] @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6476 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6476 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6480 @LENGTH@ 4
---------------INS SimpleName@@dir @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6485 @LENGTH@ 3
---------------INS SimpleName@@segment @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6490 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:dir.mkdirs() @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6518 @LENGTH@ 13
------INS MethodInvocation@@dir.mkdirs() @TO@ ExpressionStatement@@MethodInvocation:dir.mkdirs() @AT@ 6518 @LENGTH@ 12
---------INS SimpleName@@Name:dir @TO@ MethodInvocation@@dir.mkdirs() @AT@ 6518 @LENGTH@ 3
---------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@dir.mkdirs() @AT@ 6522 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:dir @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6540 @LENGTH@ 11
------INS SimpleName@@dir @TO@ ReturnStatement@@SimpleName:dir @AT@ 6547 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:fail("couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)) @TO@ MethodInvocation:fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5162 @LENGTH@ 79
---UPD MethodInvocation@@fail("couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)) @TO@ fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5162 @LENGTH@ 78
------UPD SimpleName@@MethodName:fail:["couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)] @TO@ MethodName:fail:["content not found bundle for " + moduleName + " in "+ asList(bundlesPath)] @AT@ 5162 @LENGTH@ 78
---------UPD InfixExpression@@"couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath) @TO@ "content not found bundle for " + moduleName + " in "+ asList(bundlesPath) @AT@ 5167 @LENGTH@ 72
------------UPD StringLiteral@@"couln't not find bundle '" @TO@ "content not found bundle for " @AT@ 5167 @LENGTH@ 27
------------UPD StringLiteral@@"' in " @TO@ " in " @AT@ 5210 @LENGTH@ 7


INS MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @TO@ TypeDeclaration@@[public]ModuleJndiBindingProcessor, [DeploymentUnitProcessor] @AT@ 17766 @LENGTH@ 123
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17766 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17773 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17780 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17788 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object one @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17795 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object one @AT@ 17795 @LENGTH@ 6
------INS SimpleName@@one @TO@ SingleVariableDeclaration@@Object one @AT@ 17802 @LENGTH@ 3
---INS SingleVariableDeclaration@@Object two @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17807 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object two @AT@ 17807 @LENGTH@ 6
------INS SimpleName@@two @TO@ SingleVariableDeclaration@@Object two @AT@ 17814 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:one == two || (one != null && one.equals(two)) @TO@ MethodDeclaration@@public, static, boolean, MethodName:equals, Object one, Object two,  @AT@ 17829 @LENGTH@ 54
------INS InfixExpression@@one == two || (one != null && one.equals(two)) @TO@ ReturnStatement@@InfixExpression:one == two || (one != null && one.equals(two)) @AT@ 17836 @LENGTH@ 46
---------INS InfixExpression@@one == two @TO@ InfixExpression@@one == two || (one != null && one.equals(two)) @AT@ 17836 @LENGTH@ 10
------------INS SimpleName@@one @TO@ InfixExpression@@one == two @AT@ 17836 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@one == two @AT@ 17839 @LENGTH@ 2
------------INS SimpleName@@two @TO@ InfixExpression@@one == two @AT@ 17843 @LENGTH@ 3
---------INS Operator@@|| @TO@ InfixExpression@@one == two || (one != null && one.equals(two)) @AT@ 17846 @LENGTH@ 2
---------INS ParenthesizedExpression@@(one != null && one.equals(two)) @TO@ InfixExpression@@one == two || (one != null && one.equals(two)) @AT@ 17850 @LENGTH@ 32
------------INS InfixExpression@@one != null && one.equals(two) @TO@ ParenthesizedExpression@@(one != null && one.equals(two)) @AT@ 17851 @LENGTH@ 30
---------------INS InfixExpression@@one != null @TO@ InfixExpression@@one != null && one.equals(two) @AT@ 17851 @LENGTH@ 11
------------------INS SimpleName@@one @TO@ InfixExpression@@one != null @AT@ 17851 @LENGTH@ 3
------------------INS Operator@@!= @TO@ InfixExpression@@one != null @AT@ 17854 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@one != null @AT@ 17858 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@one != null && one.equals(two) @AT@ 17862 @LENGTH@ 2
---------------INS MethodInvocation@@one.equals(two) @TO@ InfixExpression@@one != null && one.equals(two) @AT@ 17866 @LENGTH@ 15
------------------INS SimpleName@@Name:one @TO@ MethodInvocation@@one.equals(two) @AT@ 17866 @LENGTH@ 3
------------------INS SimpleName@@MethodName:equals:[two] @TO@ MethodInvocation@@one.equals(two) @AT@ 17870 @LENGTH@ 11
---------------------INS SimpleName@@two @TO@ SimpleName@@MethodName:equals:[two] @AT@ 17877 @LENGTH@ 3


INS MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @TO@ TypeDeclaration@@[public]QuartzConsumer, DefaultConsumer @AT@ 1674 @LENGTH@ 123
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1674 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1684 @LENGTH@ 4
---INS SimpleName@@MethodName:doSuspend @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1689 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1708 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:getEndpoint().consumerStopped(this) @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1728 @LENGTH@ 36
------INS MethodInvocation@@getEndpoint().consumerStopped(this) @TO@ ExpressionStatement@@MethodInvocation:getEndpoint().consumerStopped(this) @AT@ 1728 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().consumerStopped(this) @AT@ 1728 @LENGTH@ 13
---------INS SimpleName@@MethodName:consumerStopped:[this] @TO@ MethodInvocation@@getEndpoint().consumerStopped(this) @AT@ 1742 @LENGTH@ 21
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:consumerStopped:[this] @AT@ 1758 @LENGTH@ 4
---INS ExpressionStatement@@SuperMethodInvocation:super.doSuspend() @TO@ MethodDeclaration@@protected, void, MethodName:doSuspend, Exception,  @AT@ 1773 @LENGTH@ 18
------INS SuperMethodInvocation@@super.doSuspend() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doSuspend() @AT@ 1773 @LENGTH@ 17
---------INS SimpleName@@MethodName:doSuspend:[] @TO@ SuperMethodInvocation@@super.doSuspend() @AT@ 1779 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(dosgiProviderContainers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(dosgiProviderContainers,PROVISION_TIMEOUT) @AT@ 4042 @LENGTH@ 68
---UPD MethodInvocation@@Provision.assertSuccess(dosgiProviderContainers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(dosgiProviderContainers,PROVISION_TIMEOUT) @AT@ 4042 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertSuccess:[dosgiProviderContainers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[dosgiProviderContainers, PROVISION_TIMEOUT] @AT@ 4052 @LENGTH@ 57


UPD MethodDeclaration@@public, String, MethodName:profileName,  @TO@ public, String, MethodName:profile,  @AT@ 2305 @LENGTH@ 181
---UPD SimpleName@@MethodName:profileName @TO@ MethodName:profile @AT@ 2319 @LENGTH@ 11


INS MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @TO@ TypeDeclaration@@[public, final]MediaTypeRequestMatcher, [RequestMatcher] @AT@ 7612 @LENGTH@ 271
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7612 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7620 @LENGTH@ 7
---INS SimpleName@@MethodName:shouldIgnore @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7628 @LENGTH@ 12
---INS SingleVariableDeclaration@@MediaType httpRequestMediaType @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7641 @LENGTH@ 30
------INS SimpleType@@MediaType @TO@ SingleVariableDeclaration@@MediaType httpRequestMediaType @AT@ 7641 @LENGTH@ 9
------INS SimpleName@@httpRequestMediaType @TO@ SingleVariableDeclaration@@MediaType httpRequestMediaType @AT@ 7651 @LENGTH@ 20
---INS EnhancedForStatement@@for (MediaType ignoredMediaType : ignoredMediaTypes) {  if (httpRequestMediaType.includes(ignoredMediaType)) {    return true;  }} @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7683 @LENGTH@ 172
------INS SingleVariableDeclaration@@MediaType ignoredMediaType @TO@ EnhancedForStatement@@for (MediaType ignoredMediaType : ignoredMediaTypes) {  if (httpRequestMediaType.includes(ignoredMediaType)) {    return true;  }} @AT@ 7687 @LENGTH@ 26
---------INS SimpleType@@MediaType @TO@ SingleVariableDeclaration@@MediaType ignoredMediaType @AT@ 7687 @LENGTH@ 9
---------INS SimpleName@@ignoredMediaType @TO@ SingleVariableDeclaration@@MediaType ignoredMediaType @AT@ 7697 @LENGTH@ 16
------INS SimpleName@@ignoredMediaTypes @TO@ EnhancedForStatement@@for (MediaType ignoredMediaType : ignoredMediaTypes) {  if (httpRequestMediaType.includes(ignoredMediaType)) {    return true;  }} @AT@ 7716 @LENGTH@ 17
------INS IfStatement@@if (httpRequestMediaType.includes(ignoredMediaType)) {  return true;} @TO@ EnhancedForStatement@@for (MediaType ignoredMediaType : ignoredMediaTypes) {  if (httpRequestMediaType.includes(ignoredMediaType)) {    return true;  }} @AT@ 7749 @LENGTH@ 96
---------INS MethodInvocation@@httpRequestMediaType.includes(ignoredMediaType) @TO@ IfStatement@@if (httpRequestMediaType.includes(ignoredMediaType)) {  return true;} @AT@ 7752 @LENGTH@ 47
------------INS SimpleName@@Name:httpRequestMediaType @TO@ MethodInvocation@@httpRequestMediaType.includes(ignoredMediaType) @AT@ 7752 @LENGTH@ 20
------------INS SimpleName@@MethodName:includes:[ignoredMediaType] @TO@ MethodInvocation@@httpRequestMediaType.includes(ignoredMediaType) @AT@ 7773 @LENGTH@ 26
---------------INS SimpleName@@ignoredMediaType @TO@ SimpleName@@MethodName:includes:[ignoredMediaType] @AT@ 7782 @LENGTH@ 16
---------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (httpRequestMediaType.includes(ignoredMediaType)) {  return true;} @AT@ 7801 @LENGTH@ 44
------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 7819 @LENGTH@ 12
---------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 7826 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@private, boolean, MethodName:shouldIgnore, MediaType httpRequestMediaType,  @AT@ 7864 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 7871 @LENGTH@ 5


UPD MethodDeclaration@@private, PatchingResult, MethodName:execute, File workDir, ContentVerificationPolicy policy, PatchingException,  @TO@ private, PatchingResult, MethodName:execute, final File workDir, ContentVerificationPolicy policy, PatchingException,  @AT@ 2256 @LENGTH@ 1250
---UPD SingleVariableDeclaration@@File workDir @TO@ final File workDir @AT@ 2287 @LENGTH@ 12
------INS Modifier@@final @TO@ SingleVariableDeclaration@@File workDir @AT@ 2287 @LENGTH@ 5
---UPD VariableDeclarationStatement@@final PatchContentProvider provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public void cleanup(){
  }
}
; @TO@ final PatchContentProvider provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public File getPatchContentRootDir(){
    return workDir;
  }
  @Override public void cleanup(){
  }
}
; @AT@ 2448 @LENGTH@ 333
------UPD VariableDeclarationFragment@@provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public void cleanup(){
  }
}
 @TO@ provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public File getPatchContentRootDir(){
    return workDir;
  }
  @Override public void cleanup(){
  }
}
 @AT@ 2475 @LENGTH@ 305


UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")) @TO@ MethodInvocation:System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")) @AT@ 2035 @LENGTH@ 142
---UPD MethodInvocation@@System.err.println(executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")) @TO@ System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")) @AT@ 2035 @LENGTH@ 141
------UPD SimpleName@@MethodName:println:[executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")] @TO@ MethodName:println:[executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort")] @AT@ 2046 @LENGTH@ 130
---------UPD MethodInvocation@@executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort") @TO@ executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort") @AT@ 2054 @LENGTH@ 121
------------UPD SimpleName@@MethodName:executeCommand:["fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort"] @TO@ MethodName:executeCommand:["fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort"] @AT@ 2054 @LENGTH@ 121
---------------UPD InfixExpression@@"fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort" @TO@ "fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.shell | grep sshPort" @AT@ 2069 @LENGTH@ 105
------------------UPD StringLiteral@@"fabric:container-connect " @TO@ "fabric:container-connect -u admin -p admin " @AT@ 2069 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:_testSimpleParser, Exception,  @TO@ public, void, MethodName:xxxTestSimpleParser, Exception,  @AT@ 7590 @LENGTH@ 475
---UPD SimpleName@@MethodName:_testSimpleParser @TO@ MethodName:xxxTestSimpleParser @AT@ 7602 @LENGTH@ 17


UPD VariableDeclarationStatement@@final File f=new File(ctx.getCurrentDir(),resourceArr[i]); @TO@ final File f=new File(resourceArr[i]); @AT@ 10662 @LENGTH@ 61
---UPD VariableDeclarationFragment@@f=new File(ctx.getCurrentDir(),resourceArr[i]) @TO@ f=new File(resourceArr[i]) @AT@ 10673 @LENGTH@ 49
------UPD ClassInstanceCreation@@File[ctx.getCurrentDir(), resourceArr[i]] @TO@ File[resourceArr[i]] @AT@ 10677 @LENGTH@ 45
---------DEL MethodInvocation@@ctx.getCurrentDir() @AT@ 10686 @LENGTH@ 19
------------DEL SimpleName@@Name:ctx @AT@ 10686 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getCurrentDir:[] @AT@ 10690 @LENGTH@ 15


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 10045 @LENGTH@ 135
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 10112 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 10112 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 10120 @LENGTH@ 17
---UPD ReturnStatement@@MethodInvocation:primaryContext.authorizeResource(attributes) @TO@ MethodInvocation:primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 10122 @LENGTH@ 52
------UPD MethodInvocation@@primaryContext.authorizeResource(attributes) @TO@ primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 10129 @LENGTH@ 44
---------UPD SimpleName@@MethodName:authorizeResource:[attributes] @TO@ MethodName:authorizeResource:[attributes, isDefaultResource] @AT@ 10144 @LENGTH@ 29
------------INS SimpleName@@isDefaultResource @TO@ SimpleName@@MethodName:authorizeResource:[attributes] @AT@ 10201 @LENGTH@ 17


UPD VariableDeclarationStatement@@Link siblingLink=linkDiscoverer.findLinkWithRel("siblings",s); @TO@ Link siblingLink=linkDiscoverer.findLinkWithRel("people.people.siblings",s); @AT@ 2550 @LENGTH@ 65
---UPD VariableDeclarationFragment@@siblingLink=linkDiscoverer.findLinkWithRel("siblings",s) @TO@ siblingLink=linkDiscoverer.findLinkWithRel("people.people.siblings",s) @AT@ 2555 @LENGTH@ 59
------UPD MethodInvocation@@linkDiscoverer.findLinkWithRel("siblings",s) @TO@ linkDiscoverer.findLinkWithRel("people.people.siblings",s) @AT@ 2569 @LENGTH@ 45
---------UPD SimpleName@@MethodName:findLinkWithRel:["siblings", s] @TO@ MethodName:findLinkWithRel:["people.people.siblings", s] @AT@ 2584 @LENGTH@ 30
------------UPD StringLiteral@@"siblings" @TO@ "people.people.siblings" @AT@ 2600 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:destroy,  @TO@ TypeDeclaration@@[public]MuxChannel, JChannel @AT@ 2672 @LENGTH@ 52
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2672 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2679 @LENGTH@ 4
---INS SimpleName@@MethodName:destroy @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2684 @LENGTH@ 7
---INS ExpressionStatement@@SuperMethodInvocation:super.close() @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 2704 @LENGTH@ 14
------INS SuperMethodInvocation@@super.close() @TO@ ExpressionStatement@@SuperMethodInvocation:super.close() @AT@ 2704 @LENGTH@ 13
---------INS SimpleName@@MethodName:close:[] @TO@ SuperMethodInvocation@@super.close() @AT@ 2710 @LENGTH@ 5


UPD MethodDeclaration@@private, void, MethodName:updateIfNeeded, String path, Stat stat, ExecutionException,  @TO@ private, void, MethodName:updateIfNeeded, String path, Stat stat, Exception,  @AT@ 26547 @LENGTH@ 457
---UPD SimpleType@@ExecutionException @TO@ Exception @AT@ 26606 @LENGTH@ 18
---UPD IfStatement@@if (data != null && stat != null) {  long cachedId=getZkTxId(data.getStat());  long currentId=getZkTxId(stat);  if (currentId > cachedId) {    offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));  }} @TO@ if (data != null && stat != null) {  long cachedId=getZkTxId(data.getStat());  long currentId=getZkTxId(stat);  if (currentId > cachedId) {    getDataAndStat(path);    offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));  }} @AT@ 26691 @LENGTH@ 307
------UPD Block@@ThenBody:{  long cachedId=getZkTxId(data.getStat());  long currentId=getZkTxId(stat);  if (currentId > cachedId) {    offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));  }} @TO@ ThenBody:{  long cachedId=getZkTxId(data.getStat());  long currentId=getZkTxId(stat);  if (currentId > cachedId) {    getDataAndStat(path);    offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));  }} @AT@ 26725 @LENGTH@ 273
---------UPD IfStatement@@if (currentId > cachedId) {  offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));} @TO@ if (currentId > cachedId) {  getDataAndStat(path);  offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));} @AT@ 26840 @LENGTH@ 148
------------UPD Block@@ThenBody:{  offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));} @TO@ ThenBody:{  getDataAndStat(path);  offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));} @AT@ 26866 @LENGTH@ 122
---------------INS ExpressionStatement@@MethodInvocation:getDataAndStat(path) @TO@ Block@@ThenBody:{  offerOperation(new TreeRefreshOperation(this,path,RefreshMode.FORCE_GET_DATA_AND_STAT));} @AT@ 26875 @LENGTH@ 21
------------------INS MethodInvocation@@getDataAndStat(path) @TO@ ExpressionStatement@@MethodInvocation:getDataAndStat(path) @AT@ 26875 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getDataAndStat:[path] @TO@ MethodInvocation@@getDataAndStat(path) @AT@ 26875 @LENGTH@ 20
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:getDataAndStat:[path] @AT@ 26890 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:Collections.sort(children,sequenceComparator) @TO@ MethodDeclaration@@public, Map<String,T>, MethodName:members,  @AT@ 10626 @LENGTH@ 47
---INS MethodInvocation@@Collections.sort(children,sequenceComparator) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(children,sequenceComparator) @AT@ 10626 @LENGTH@ 46
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(children,sequenceComparator) @AT@ 10626 @LENGTH@ 11
------INS SimpleName@@MethodName:sort:[children, sequenceComparator] @TO@ MethodInvocation@@Collections.sort(children,sequenceComparator) @AT@ 10638 @LENGTH@ 34
---------INS SimpleName@@children @TO@ SimpleName@@MethodName:sort:[children, sequenceComparator] @AT@ 10643 @LENGTH@ 8
---------INS SimpleName@@sequenceComparator @TO@ SimpleName@@MethodName:sort:[children, sequenceComparator] @AT@ 10653 @LENGTH@ 18


UPD EnhancedForStatement@@for (final PatchElement patchElement : rollbackPatch.getElements()) {  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(patchID);} @TO@ for (final PatchElement patchElement : rollbackPatch.getElements()) {  final String elementPatchId=patchElement.getId();  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(elementPatchId);} @AT@ 10108 @LENGTH@ 1403
---INS VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @TO@ EnhancedForStatement@@for (final PatchElement patchElement : rollbackPatch.getElements()) {  final PatchElementProvider provider=patchElement.getProvider();  final String layerName=provider.getName();  final LayerType layerType=provider.getLayerType();  final LinkedHashMap<String,PatchElement> originals;switch (layerType) {case Layer:    originals=originalLayers;  break;case AddOn:originals=originalAddOns;break;default :throw new IllegalStateException();}final PatchElement original=originals.remove(layerName);if (original == null) {throw new PatchingException("did not exist in original " + layerName);}final IdentityPatchContext.PatchEntry entry=context.resolveForElement(patchElement);final Map<Location,ContentTaskDefinition> modifications=entry.getModifications();PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC);entry.rollback(patchID);} @AT@ 10227 @LENGTH@ 51
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10227 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10233 @LENGTH@ 6
------INS VariableDeclarationFragment@@elementPatchId=patchElement.getId() @TO@ VariableDeclarationStatement@@final String elementPatchId=patchElement.getId(); @AT@ 10240 @LENGTH@ 37
---------INS SimpleName@@elementPatchId @TO@ VariableDeclarationFragment@@elementPatchId=patchElement.getId() @AT@ 10240 @LENGTH@ 14
---------INS MethodInvocation@@patchElement.getId() @TO@ VariableDeclarationFragment@@elementPatchId=patchElement.getId() @AT@ 10257 @LENGTH@ 20
------------INS SimpleName@@Name:patchElement @TO@ MethodInvocation@@patchElement.getId() @AT@ 10257 @LENGTH@ 12
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@patchElement.getId() @AT@ 10270 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @TO@ MethodInvocation:PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @AT@ 11315 @LENGTH@ 141
------UPD MethodInvocation@@PatchingTasks.rollback(patchID,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @TO@ PatchingTasks.rollback(elementPatchId,original.getModifications(),patchElement.getModifications(),modifications,ContentItemFilter.ALL_BUT_MISC) @AT@ 11315 @LENGTH@ 140
---------UPD SimpleName@@MethodName:rollback:[patchID, original.getModifications(), patchElement.getModifications(), modifications, ContentItemFilter.ALL_BUT_MISC] @TO@ MethodName:rollback:[elementPatchId, original.getModifications(), patchElement.getModifications(), modifications, ContentItemFilter.ALL_BUT_MISC] @AT@ 11329 @LENGTH@ 126
------------UPD SimpleName@@patchID @TO@ elementPatchId @AT@ 11338 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:entry.rollback(patchID) @TO@ MethodInvocation:entry.rollback(elementPatchId) @AT@ 11473 @LENGTH@ 24
------UPD MethodInvocation@@entry.rollback(patchID) @TO@ entry.rollback(elementPatchId) @AT@ 11473 @LENGTH@ 23
---------UPD SimpleName@@MethodName:rollback:[patchID] @TO@ MethodName:rollback:[elementPatchId] @AT@ 11479 @LENGTH@ 17
------------UPD SimpleName@@patchID @TO@ elementPatchId @AT@ 11488 @LENGTH@ 7


UPD IfStatement@@if (!XmlHelper.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI)) {  LOG.info("Ignoring XML file " + path + " which is not a spring XML");  return null;} @TO@ if (!Paths.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI)) {  LOG.info("Ignoring XML file " + path + " which is not a spring XML");  return null;} @AT@ 6030 @LENGTH@ 181
---UPD PrefixExpression@@!XmlHelper.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI) @TO@ !Paths.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI) @AT@ 6034 @LENGTH@ 57
------UPD MethodInvocation@@XmlHelper.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI) @TO@ Paths.hasNamespace(path,SPRING_BEANS_NAMESPACE_URI) @AT@ 6035 @LENGTH@ 56
---------UPD SimpleName@@Name:XmlHelper @TO@ Name:Paths @AT@ 6035 @LENGTH@ 9


INS MethodDeclaration@@Page<T>, MethodName:findByAttribute1Custom, @Param("attribute1") String attribute1, Pageable pageable,  @TO@ TypeDeclaration@@[@Lazy, public]MappedTypeRepository, [JpaRepository<T,Long>] @AT@ 1416 @LENGTH@ 82
---INS ParameterizedType@@Page<T> @TO@ MethodDeclaration@@Page<T>, MethodName:findByAttribute1Custom, @Param("attribute1") String attribute1, Pageable pageable,  @AT@ 1408 @LENGTH@ 7
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<T> @AT@ 1408 @LENGTH@ 4
------INS SimpleType@@T @TO@ ParameterizedType@@Page<T> @AT@ 1413 @LENGTH@ 1
---INS SimpleName@@MethodName:findByAttribute1Custom @TO@ MethodDeclaration@@Page<T>, MethodName:findByAttribute1Custom, @Param("attribute1") String attribute1, Pageable pageable,  @AT@ 1416 @LENGTH@ 22
---INS SingleVariableDeclaration@@@Param("attribute1") String attribute1 @TO@ MethodDeclaration@@Page<T>, MethodName:findByAttribute1Custom, @Param("attribute1") String attribute1, Pageable pageable,  @AT@ 1439 @LENGTH@ 38
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@Param("attribute1") String attribute1 @AT@ 1460 @LENGTH@ 6
------INS SimpleName@@attribute1 @TO@ SingleVariableDeclaration@@@Param("attribute1") String attribute1 @AT@ 1467 @LENGTH@ 10
---INS SingleVariableDeclaration@@Pageable pageable @TO@ MethodDeclaration@@Page<T>, MethodName:findByAttribute1Custom, @Param("attribute1") String attribute1, Pageable pageable,  @AT@ 1479 @LENGTH@ 17
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 1479 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 1488 @LENGTH@ 8


UPD IfStatement@@if (host == null) {  host=ObjectHelper.before(remaining,"/");} @TO@ if (host == null) {  host=ObjectHelper.before(remaining,"/");  if (host == null) {    host=remaining;  }} @AT@ 4374 @LENGTH@ 85
---UPD Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @TO@ ThenBody:{  host=ObjectHelper.before(remaining,"/");  if (host == null) {    host=remaining;  }} @AT@ 4392 @LENGTH@ 67
------INS IfStatement@@if (host == null) {  host=remaining;} @TO@ Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @AT@ 4462 @LENGTH@ 67
---------INS InfixExpression@@host == null @TO@ IfStatement@@if (host == null) {  host=remaining;} @AT@ 4466 @LENGTH@ 12
------------INS SimpleName@@host @TO@ InfixExpression@@host == null @AT@ 4466 @LENGTH@ 4
------------INS Operator@@== @TO@ InfixExpression@@host == null @AT@ 4470 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@host == null @AT@ 4474 @LENGTH@ 4
---------INS Block@@ThenBody:{  host=remaining;} @TO@ IfStatement@@if (host == null) {  host=remaining;} @AT@ 4480 @LENGTH@ 49
------------INS ExpressionStatement@@Assignment:host=remaining @TO@ Block@@ThenBody:{  host=remaining;} @AT@ 4498 @LENGTH@ 17
---------------INS Assignment@@host=remaining @TO@ ExpressionStatement@@Assignment:host=remaining @AT@ 4498 @LENGTH@ 16
------------------INS SimpleName@@host @TO@ Assignment@@host=remaining @AT@ 4498 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@host=remaining @AT@ 4502 @LENGTH@ 1
------------------INS SimpleName@@remaining @TO@ Assignment@@host=remaining @AT@ 4505 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @TO@ TypeDeclaration@@[@ContextConfiguration("classpath:openjpa.xml"), public]OpenJpaNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 3144 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 3144 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 3151 @LENGTH@ 4
---INS SimpleName@@MethodName:invokesQueryWithVarargsParametersCorrectly @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 3156 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @TO@ MethodDeclaration@@private, LegacyControllerKernelServicesProxy, MethodName:install, AbstractKernelServicesImpl mainServices, ModelInitializer modelInitializer, ModelWriteSanitizer modelWriteSanitizer, List<String> contentRepositoryContents, List<ModelNode> bootOperations, Exception,  @AT@ 31675 @LENGTH@ 72
---INS MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @TO@ ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31675 @LENGTH@ 71
------INS SimpleName@@Name:classLoaderBuilder @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31675 @LENGTH@ 18
------INS SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.logmanager.*"] @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31694 @LENGTH@ 52
---------INS StringLiteral@@"org.jboss.logmanager.*" @TO@ SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.logmanager.*"] @AT@ 31721 @LENGTH@ 24


INS MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @TO@ TypeDeclaration@@[public]PooledConnectionFactoryRemove, AbstractRemoveStepHandler[DescriptionProvider] @AT@ 3532 @LENGTH@ 387
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3532 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3540 @LENGTH@ 4
---INS SimpleName@@MethodName:removeJNDIAliases @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3545 @LENGTH@ 17
---INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3563 @LENGTH@ 24
------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 3563 @LENGTH@ 16
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 3580 @LENGTH@ 7
---INS SingleVariableDeclaration@@List<ModelNode> entries @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3589 @LENGTH@ 23
------INS ParameterizedType@@List<ModelNode> @TO@ SingleVariableDeclaration@@List<ModelNode> entries @AT@ 3589 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 3589 @LENGTH@ 4
---------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 3594 @LENGTH@ 9
------INS SimpleName@@entries @TO@ SingleVariableDeclaration@@List<ModelNode> entries @AT@ 3605 @LENGTH@ 7
---INS IfStatement@@if (entries.size() > 1) {  for (int i=1; i < entries.size(); i++) {    ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());    context.removeService(aliasBindInfo.getBinderServiceName());  }} @TO@ MethodDeclaration@@private, void, MethodName:removeJNDIAliases, OperationContext context, List<ModelNode> entries,  @AT@ 3624 @LENGTH@ 289
------INS InfixExpression@@entries.size() > 1 @TO@ IfStatement@@if (entries.size() > 1) {  for (int i=1; i < entries.size(); i++) {    ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());    context.removeService(aliasBindInfo.getBinderServiceName());  }} @AT@ 3628 @LENGTH@ 18
---------INS MethodInvocation@@entries.size() @TO@ InfixExpression@@entries.size() > 1 @AT@ 3628 @LENGTH@ 14
------------INS SimpleName@@Name:entries @TO@ MethodInvocation@@entries.size() @AT@ 3628 @LENGTH@ 7
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@entries.size() @AT@ 3636 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@entries.size() > 1 @AT@ 3642 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@entries.size() > 1 @AT@ 3645 @LENGTH@ 1
------INS Block@@ThenBody:{  for (int i=1; i < entries.size(); i++) {    ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());    context.removeService(aliasBindInfo.getBinderServiceName());  }} @TO@ IfStatement@@if (entries.size() > 1) {  for (int i=1; i < entries.size(); i++) {    ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());    context.removeService(aliasBindInfo.getBinderServiceName());  }} @AT@ 3648 @LENGTH@ 265
---------INS ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @TO@ Block@@ThenBody:{  for (int i=1; i < entries.size(); i++) {    ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());    context.removeService(aliasBindInfo.getBinderServiceName());  }} @AT@ 3662 @LENGTH@ 241
------------INS VariableDeclarationExpression@@int i=1 @TO@ ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @AT@ 3667 @LENGTH@ 9
---------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=1 @AT@ 3667 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@i=1 @TO@ VariableDeclarationExpression@@int i=1 @AT@ 3671 @LENGTH@ 5
------------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=1 @AT@ 3671 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ VariableDeclarationFragment@@i=1 @AT@ 3675 @LENGTH@ 1
------------INS InfixExpression@@i < entries.size() @TO@ ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @AT@ 3678 @LENGTH@ 18
---------------INS SimpleName@@i @TO@ InfixExpression@@i < entries.size() @AT@ 3678 @LENGTH@ 1
---------------INS Operator@@< @TO@ InfixExpression@@i < entries.size() @AT@ 3679 @LENGTH@ 1
---------------INS MethodInvocation@@entries.size() @TO@ InfixExpression@@i < entries.size() @AT@ 3682 @LENGTH@ 14
------------------INS SimpleName@@Name:entries @TO@ MethodInvocation@@entries.size() @AT@ 3682 @LENGTH@ 7
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@entries.size() @AT@ 3690 @LENGTH@ 6
------------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @AT@ 3699 @LENGTH@ 3
---------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3699 @LENGTH@ 1
---------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3701 @LENGTH@ 2
------------INS VariableDeclarationStatement@@ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()); @TO@ ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @AT@ 3722 @LENGTH@ 90
---------------INS SimpleType@@ContextNames.BindInfo @TO@ VariableDeclarationStatement@@ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()); @AT@ 3722 @LENGTH@ 21
---------------INS VariableDeclarationFragment@@aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()) @TO@ VariableDeclarationStatement@@ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()); @AT@ 3744 @LENGTH@ 67
------------------INS SimpleName@@aliasBindInfo @TO@ VariableDeclarationFragment@@aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()) @AT@ 3744 @LENGTH@ 13
------------------INS MethodInvocation@@ContextNames.bindInfoFor(entries.get(i).asString()) @TO@ VariableDeclarationFragment@@aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString()) @AT@ 3760 @LENGTH@ 51
---------------------INS SimpleName@@Name:ContextNames @TO@ MethodInvocation@@ContextNames.bindInfoFor(entries.get(i).asString()) @AT@ 3760 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:bindInfoFor:[entries.get(i).asString()] @TO@ MethodInvocation@@ContextNames.bindInfoFor(entries.get(i).asString()) @AT@ 3773 @LENGTH@ 38
------------------------INS MethodInvocation@@entries.get(i).asString() @TO@ SimpleName@@MethodName:bindInfoFor:[entries.get(i).asString()] @AT@ 3785 @LENGTH@ 25
---------------------------INS MethodInvocation@@MethodName:get:[i] @TO@ MethodInvocation@@entries.get(i).asString() @AT@ 3785 @LENGTH@ 14
------------------------------INS SimpleName@@i @TO@ MethodInvocation@@MethodName:get:[i] @AT@ 3797 @LENGTH@ 1
---------------------------INS SimpleName@@Name:entries @TO@ MethodInvocation@@entries.get(i).asString() @AT@ 3785 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@entries.get(i).asString() @AT@ 3800 @LENGTH@ 10
------------INS ExpressionStatement@@MethodInvocation:context.removeService(aliasBindInfo.getBinderServiceName()) @TO@ ForStatement@@for (int i=1; i < entries.size(); i++) {  ContextNames.BindInfo aliasBindInfo=ContextNames.bindInfoFor(entries.get(i).asString());  context.removeService(aliasBindInfo.getBinderServiceName());} @AT@ 3829 @LENGTH@ 60
---------------INS MethodInvocation@@context.removeService(aliasBindInfo.getBinderServiceName()) @TO@ ExpressionStatement@@MethodInvocation:context.removeService(aliasBindInfo.getBinderServiceName()) @AT@ 3829 @LENGTH@ 59
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.removeService(aliasBindInfo.getBinderServiceName()) @AT@ 3829 @LENGTH@ 7
------------------INS SimpleName@@MethodName:removeService:[aliasBindInfo.getBinderServiceName()] @TO@ MethodInvocation@@context.removeService(aliasBindInfo.getBinderServiceName()) @AT@ 3837 @LENGTH@ 51
---------------------INS MethodInvocation@@aliasBindInfo.getBinderServiceName() @TO@ SimpleName@@MethodName:removeService:[aliasBindInfo.getBinderServiceName()] @AT@ 3851 @LENGTH@ 36
------------------------INS SimpleName@@Name:aliasBindInfo @TO@ MethodInvocation@@aliasBindInfo.getBinderServiceName() @AT@ 3851 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getBinderServiceName:[] @TO@ MethodInvocation@@aliasBindInfo.getBinderServiceName() @AT@ 3865 @LENGTH@ 22


UPD IfStatement@@if (registered == null) {  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @TO@ if (registered == null) {  if (!context.isNormalServer())   return;  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7066 @LENGTH@ 149
---UPD Block@@ThenBody:{  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @TO@ ThenBody:{  if (!context.isNormalServer())   return;  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7090 @LENGTH@ 125
------INS IfStatement@@if (!context.isNormalServer()) return; @TO@ Block@@ThenBody:{  context.addStep(createOperation(),INSTANCE,Stage.MODEL);  context.attach(KEY,INSTANCE);} @AT@ 7147 @LENGTH@ 38
---------INS PrefixExpression@@!context.isNormalServer() @TO@ IfStatement@@if (!context.isNormalServer()) return; @AT@ 7151 @LENGTH@ 25
------------INS Operator@@! @TO@ PrefixExpression@@!context.isNormalServer() @AT@ 7151 @LENGTH@ 1
------------INS MethodInvocation@@context.isNormalServer() @TO@ PrefixExpression@@!context.isNormalServer() @AT@ 7152 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.isNormalServer() @AT@ 7152 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isNormalServer:[] @TO@ MethodInvocation@@context.isNormalServer() @AT@ 7160 @LENGTH@ 16
---------INS Block@@ThenBody:return; @TO@ IfStatement@@if (!context.isNormalServer()) return; @AT@ 7178 @LENGTH@ 7
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:return; @AT@ 7178 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:handlesMultipleNamedLikeBindingsCorrectly,  @TO@ TypeDeclaration@@[public]StringQueryUnitTests,  @AT@ 3006 @LENGTH@ 155
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesMultipleNamedLikeBindingsCorrectly,  @AT@ 3006 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesMultipleNamedLikeBindingsCorrectly,  @AT@ 3013 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesMultipleNamedLikeBindingsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesMultipleNamedLikeBindingsCorrectly,  @AT@ 3018 @LENGTH@ 41
---INS ExpressionStatement@@ClassInstanceCreation:new StringQuery("select u from User u where u.firstname like %:firstname or foo like :bar") @TO@ MethodDeclaration@@public, void, MethodName:handlesMultipleNamedLikeBindingsCorrectly,  @AT@ 3066 @LENGTH@ 92
------INS ClassInstanceCreation@@StringQuery["select u from User u where u.firstname like %:firstname or foo like :bar"] @TO@ ExpressionStatement@@ClassInstanceCreation:new StringQuery("select u from User u where u.firstname like %:firstname or foo like :bar") @AT@ 3066 @LENGTH@ 91
---------INS New@@new @TO@ ClassInstanceCreation@@StringQuery["select u from User u where u.firstname like %:firstname or foo like :bar"] @AT@ 3066 @LENGTH@ 3
---------INS SimpleType@@StringQuery @TO@ ClassInstanceCreation@@StringQuery["select u from User u where u.firstname like %:firstname or foo like :bar"] @AT@ 3070 @LENGTH@ 11
---------INS StringLiteral@@"select u from User u where u.firstname like %:firstname or foo like :bar" @TO@ ClassInstanceCreation@@StringQuery["select u from User u where u.firstname like %:firstname or foo like :bar"] @AT@ 3082 @LENGTH@ 74


UPD ExpressionStatement@@MethodInvocation:from("direct:start").transform().constant(greeting).to("{{destination}}") @TO@ MethodInvocation:from("seda:start").transform().constant(greeting).to("{{destination}}") @AT@ 1130 @LENGTH@ 108
---UPD MethodInvocation@@from("direct:start").transform().constant(greeting).to("{{destination}}") @TO@ from("seda:start").transform().constant(greeting).to("{{destination}}") @AT@ 1130 @LENGTH@ 107
------UPD MethodInvocation@@MethodName:from:["direct:start"] @TO@ MethodName:from:["seda:start"] @AT@ 1130 @LENGTH@ 20
---------UPD StringLiteral@@"direct:start" @TO@ "seda:start" @AT@ 1135 @LENGTH@ 14


DEL FieldDeclaration@@private, static, Log, [log=LogFactory.getLog(ContextSourceTransactionManagerSubtreeIntegrationTest.class)] @AT@ 2016 @LENGTH@ 104
---DEL Modifier@@private @AT@ 2016 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2024 @LENGTH@ 6
---DEL SimpleType@@Log @AT@ 2031 @LENGTH@ 3
---DEL VariableDeclarationFragment@@log=LogFactory.getLog(ContextSourceTransactionManagerSubtreeIntegrationTest.class) @AT@ 2035 @LENGTH@ 84
------DEL SimpleName@@log @AT@ 2035 @LENGTH@ 3
------DEL MethodInvocation@@LogFactory.getLog(ContextSourceTransactionManagerSubtreeIntegrationTest.class) @AT@ 2041 @LENGTH@ 78
---------DEL SimpleName@@Name:LogFactory @AT@ 2041 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[ContextSourceTransactionManagerSubtreeIntegrationTest.class] @AT@ 2052 @LENGTH@ 67
------------DEL TypeLiteral@@ContextSourceTransactionManagerSubtreeIntegrationTest.class @AT@ 2059 @LENGTH@ 59


UPD ExpressionStatement@@MethodInvocation:authorizerConfiguration.setRoleMappingIncludeAll(roleName,resolvedValue.asBoolean()) @TO@ MethodInvocation:authorizerConfiguration.setRoleMappingIncludeAll(roleName.toUpperCase(Locale.ENGLISH),resolvedValue.asBoolean()) @AT@ 2595 @LENGTH@ 86
---UPD MethodInvocation@@authorizerConfiguration.setRoleMappingIncludeAll(roleName,resolvedValue.asBoolean()) @TO@ authorizerConfiguration.setRoleMappingIncludeAll(roleName.toUpperCase(Locale.ENGLISH),resolvedValue.asBoolean()) @AT@ 2595 @LENGTH@ 85
------UPD SimpleName@@MethodName:setRoleMappingIncludeAll:[roleName, resolvedValue.asBoolean()] @TO@ MethodName:setRoleMappingIncludeAll:[roleName.toUpperCase(Locale.ENGLISH), resolvedValue.asBoolean()] @AT@ 2619 @LENGTH@ 61
---------DEL SimpleName@@roleName @AT@ 2644 @LENGTH@ 8
---------INS MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @TO@ SimpleName@@MethodName:setRoleMappingIncludeAll:[roleName, resolvedValue.asBoolean()] @AT@ 2670 @LENGTH@ 36
------------INS SimpleName@@Name:roleName @TO@ MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @AT@ 2670 @LENGTH@ 8
------------INS SimpleName@@MethodName:toUpperCase:[Locale.ENGLISH] @TO@ MethodInvocation@@roleName.toUpperCase(Locale.ENGLISH) @AT@ 2679 @LENGTH@ 27
---------------INS QualifiedName@@Locale.ENGLISH @TO@ SimpleName@@MethodName:toUpperCase:[Locale.ENGLISH] @AT@ 2691 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2691 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 2698 @LENGTH@ 7


INS MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]PortExposingTcpSocketSupportNetTests,  @AT@ 1701 @LENGTH@ 299
---INS Modifier@@private @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1701 @LENGTH@ 7
---INS PrimitiveType@@int @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1709 @LENGTH@ 3
---INS SimpleName@@MethodName:waitAndPollPort @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1713 @LENGTH@ 15
---INS VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1735 @LENGTH@ 42
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @AT@ 1735 @LENGTH@ 3
------INS VariableDeclarationFragment@@port=mindAppmasterService.getPort() @TO@ VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @AT@ 1739 @LENGTH@ 37
---------INS SimpleName@@port @TO@ VariableDeclarationFragment@@port=mindAppmasterService.getPort() @AT@ 1739 @LENGTH@ 4
---------INS MethodInvocation@@mindAppmasterService.getPort() @TO@ VariableDeclarationFragment@@port=mindAppmasterService.getPort() @AT@ 1746 @LENGTH@ 30
------------INS SimpleName@@Name:mindAppmasterService @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1746 @LENGTH@ 20
------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1767 @LENGTH@ 9
---INS ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1780 @LENGTH@ 202
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1785 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1785 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1789 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 1789 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 1793 @LENGTH@ 1
------INS InfixExpression@@i < 10 @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1796 @LENGTH@ 4
---------INS SimpleName@@i @TO@ InfixExpression@@i < 10 @AT@ 1796 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < 10 @AT@ 1797 @LENGTH@ 1
---------INS NumberLiteral@@10 @TO@ InfixExpression@@i < 10 @AT@ 1798 @LENGTH@ 2
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1802 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 1802 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 1804 @LENGTH@ 2
------INS IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1812 @LENGTH@ 166
---------INS InfixExpression@@port > 0 @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1816 @LENGTH@ 8
------------INS SimpleName@@port @TO@ InfixExpression@@port > 0 @AT@ 1816 @LENGTH@ 4
------------INS Operator@@> @TO@ InfixExpression@@port > 0 @AT@ 1820 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@port > 0 @AT@ 1823 @LENGTH@ 1
---------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1826 @LENGTH@ 17
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 1832 @LENGTH@ 6
---------INS Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1849 @LENGTH@ 129
------------INS TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @TO@ Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1855 @LENGTH@ 75
---------------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 1866 @LENGTH@ 19
------------------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 1866 @LENGTH@ 18
---------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1866 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1873 @LENGTH@ 11
------------------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 1879 @LENGTH@ 4
---------------INS CatchClause@@catch (InterruptedException e) {} @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 1892 @LENGTH@ 38
------------------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {} @AT@ 1899 @LENGTH@ 22
---------------------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 1899 @LENGTH@ 20
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 1920 @LENGTH@ 1
------------INS ExpressionStatement@@Assignment:port=mindAppmasterService.getPort() @TO@ Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1935 @LENGTH@ 38
---------------INS Assignment@@port=mindAppmasterService.getPort() @TO@ ExpressionStatement@@Assignment:port=mindAppmasterService.getPort() @AT@ 1935 @LENGTH@ 37
------------------INS SimpleName@@port @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1935 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1939 @LENGTH@ 1
------------------INS MethodInvocation@@mindAppmasterService.getPort() @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1942 @LENGTH@ 30
---------------------INS SimpleName@@Name:mindAppmasterService @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1942 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1963 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:port @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1985 @LENGTH@ 12
------INS SimpleName@@port @TO@ ReturnStatement@@SimpleName:port @AT@ 1992 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:builder.addDependency(CommonWebServer.SERVICE_NAME) @AT@ 3994 @LENGTH@ 52
---DEL MethodInvocation@@builder.addDependency(CommonWebServer.SERVICE_NAME) @AT@ 3994 @LENGTH@ 51
------DEL SimpleName@@Name:builder @AT@ 3994 @LENGTH@ 7
------DEL SimpleName@@MethodName:addDependency:[CommonWebServer.SERVICE_NAME] @AT@ 4002 @LENGTH@ 43
---------DEL QualifiedName@@CommonWebServer.SERVICE_NAME @AT@ 4016 @LENGTH@ 28
------------DEL SimpleName@@CommonWebServer @AT@ 4016 @LENGTH@ 15
------------DEL SimpleName@@SERVICE_NAME @AT@ 4032 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:ALL_CHANNELS.remove(channel) @AT@ 21475 @LENGTH@ 29
---DEL MethodInvocation@@ALL_CHANNELS.remove(channel) @AT@ 21475 @LENGTH@ 28
------DEL SimpleName@@Name:ALL_CHANNELS @AT@ 21475 @LENGTH@ 12
------DEL SimpleName@@MethodName:remove:[channel] @AT@ 21488 @LENGTH@ 15
---------DEL SimpleName@@channel @AT@ 21495 @LENGTH@ 7


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQDistroTest, FuseTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-524] Fix mq-itests"), public]MQDistroTest, FuseTestSupport @AT@ 2599 @LENGTH@ 5745
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-524] Fix mq-itests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQDistroTest, FuseTestSupport @AT@ 2222 @LENGTH@ 37


UPD MethodDeclaration@@public, ObjectName, MethodName:getObjectNameForSingleService, CamelContext context, Service service, MalformedObjectNameException,  @TO@ public, ObjectName, MethodName:getObjectNameForService, CamelContext context, Service service, MalformedObjectNameException,  @AT@ 12283 @LENGTH@ 509
---INS IfStatement@@if (!(service instanceof StaticService)) {  buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")");} @TO@ MethodDeclaration@@public, ObjectName, MethodName:getObjectNameForSingleService, CamelContext context, Service service, MalformedObjectNameException,  @AT@ 12178 @LENGTH@ 146
------INS PrefixExpression@@!(service instanceof StaticService) @TO@ IfStatement@@if (!(service instanceof StaticService)) {  buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")");} @AT@ 12182 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!(service instanceof StaticService) @AT@ 12182 @LENGTH@ 1
---------INS ParenthesizedExpression@@(service instanceof StaticService) @TO@ PrefixExpression@@!(service instanceof StaticService) @AT@ 12183 @LENGTH@ 34
------------INS InstanceofExpression@@service instanceof StaticService @TO@ ParenthesizedExpression@@(service instanceof StaticService) @AT@ 12184 @LENGTH@ 32
---------------INS SimpleName@@service @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 12184 @LENGTH@ 7
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 12192 @LENGTH@ 10
---------------INS SimpleType@@StaticService @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 12203 @LENGTH@ 13
------INS Block@@ThenBody:{  buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")");} @TO@ IfStatement@@if (!(service instanceof StaticService)) {  buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")");} @AT@ 12219 @LENGTH@ 105
---------INS ExpressionStatement@@MethodInvocation:buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @TO@ Block@@ThenBody:{  buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")");} @AT@ 12233 @LENGTH@ 81
------------INS MethodInvocation@@buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @TO@ ExpressionStatement@@MethodInvocation:buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12233 @LENGTH@ 80
---------------MOV MethodInvocation@@MethodName:append:[ObjectHelper.getIdentityHashCode(service)] @TO@ MethodInvocation@@buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12057 @LENGTH@ 160
---------------INS MethodInvocation@@MethodName:append:["("] @TO@ MethodInvocation@@buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12233 @LENGTH@ 18
------------------INS StringLiteral@@"(" @TO@ MethodInvocation@@MethodName:append:["("] @AT@ 12247 @LENGTH@ 3
---------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12233 @LENGTH@ 6
---------------INS SimpleName@@MethodName:append:[")"] @TO@ MethodInvocation@@buffer.append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12302 @LENGTH@ 11
------------------INS StringLiteral@@")" @TO@ SimpleName@@MethodName:append:[")"] @AT@ 12309 @LENGTH@ 3
---UPD SimpleName@@MethodName:getObjectNameForSingleService @TO@ MethodName:getObjectNameForService @AT@ 12301 @LENGTH@ 29


INS MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @TO@ TypeDeclaration@@[public]JsrJobOperatorTests,  @AT@ 7177 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7177 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7184 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetJobInstanceCountZeroInstancesReturned @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7189 @LENGTH@ 44
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7243 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(jobExplorer.getJobInstanceCount("myJob")).thenReturn(0) @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7257 @LENGTH@ 61
------INS MethodInvocation@@when(jobExplorer.getJobInstanceCount("myJob")).thenReturn(0) @TO@ ExpressionStatement@@MethodInvocation:when(jobExplorer.getJobInstanceCount("myJob")).thenReturn(0) @AT@ 7257 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:when:[jobExplorer.getJobInstanceCount("myJob")] @TO@ MethodInvocation@@when(jobExplorer.getJobInstanceCount("myJob")).thenReturn(0) @AT@ 7257 @LENGTH@ 46
------------INS MethodInvocation@@jobExplorer.getJobInstanceCount("myJob") @TO@ MethodInvocation@@MethodName:when:[jobExplorer.getJobInstanceCount("myJob")] @AT@ 7262 @LENGTH@ 40
---------------INS SimpleName@@Name:jobExplorer @TO@ MethodInvocation@@jobExplorer.getJobInstanceCount("myJob") @AT@ 7262 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getJobInstanceCount:["myJob"] @TO@ MethodInvocation@@jobExplorer.getJobInstanceCount("myJob") @AT@ 7274 @LENGTH@ 28
------------------INS StringLiteral@@"myJob" @TO@ SimpleName@@MethodName:getJobInstanceCount:["myJob"] @AT@ 7294 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[0] @TO@ MethodInvocation@@when(jobExplorer.getJobInstanceCount("myJob")).thenReturn(0) @AT@ 7304 @LENGTH@ 13
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:thenReturn:[0] @AT@ 7315 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:jsrJobOperator.getJobInstanceCount("myJob") @TO@ MethodDeclaration@@public, void, MethodName:testGetJobInstanceCountZeroInstancesReturned, Exception,  @AT@ 7322 @LENGTH@ 44
------INS MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob") @TO@ ExpressionStatement@@MethodInvocation:jsrJobOperator.getJobInstanceCount("myJob") @AT@ 7322 @LENGTH@ 43
---------INS SimpleName@@Name:jsrJobOperator @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob") @AT@ 7322 @LENGTH@ 14
---------INS SimpleName@@MethodName:getJobInstanceCount:["myJob"] @TO@ MethodInvocation@@jsrJobOperator.getJobInstanceCount("myJob") @AT@ 7337 @LENGTH@ 28
------------INS StringLiteral@@"myJob" @TO@ SimpleName@@MethodName:getJobInstanceCount:["myJob"] @AT@ 7357 @LENGTH@ 7


INS MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @TO@ TypeDeclaration@@[public]OperatorUtils,  @AT@ 2697 @LENGTH@ 733
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2697 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2704 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2711 @LENGTH@ 4
---INS SimpleName@@MethodName:setChildrenCollector @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2716 @LENGTH@ 20
---INS SingleVariableDeclaration@@List<Operator<? extends OperatorDesc>> childOperators @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2737 @LENGTH@ 53
------INS ParameterizedType@@List<Operator<? extends OperatorDesc>> @TO@ SingleVariableDeclaration@@List<Operator<? extends OperatorDesc>> childOperators @AT@ 2737 @LENGTH@ 38
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Operator<? extends OperatorDesc>> @AT@ 2737 @LENGTH@ 4
---------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ ParameterizedType@@List<Operator<? extends OperatorDesc>> @AT@ 2742 @LENGTH@ 32
------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 2742 @LENGTH@ 8
------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 2751 @LENGTH@ 22
------INS SimpleName@@childOperators @TO@ SingleVariableDeclaration@@List<Operator<? extends OperatorDesc>> childOperators @AT@ 2776 @LENGTH@ 14
---INS SingleVariableDeclaration@@Map<String,OutputCollector> outMap @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2792 @LENGTH@ 35
------INS ParameterizedType@@Map<String,OutputCollector> @TO@ SingleVariableDeclaration@@Map<String,OutputCollector> outMap @AT@ 2792 @LENGTH@ 28
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2792 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2796 @LENGTH@ 6
---------INS SimpleType@@OutputCollector @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2804 @LENGTH@ 15
------INS SimpleName@@outMap @TO@ SingleVariableDeclaration@@Map<String,OutputCollector> outMap @AT@ 2821 @LENGTH@ 6
---INS IfStatement@@if (childOperators == null) {  return;} @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2835 @LENGTH@ 49
------INS InfixExpression@@childOperators == null @TO@ IfStatement@@if (childOperators == null) {  return;} @AT@ 2839 @LENGTH@ 22
---------INS SimpleName@@childOperators @TO@ InfixExpression@@childOperators == null @AT@ 2839 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@childOperators == null @AT@ 2853 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@childOperators == null @AT@ 2857 @LENGTH@ 4
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (childOperators == null) {  return;} @AT@ 2863 @LENGTH@ 21
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2871 @LENGTH@ 7
---INS EnhancedForStatement@@for (Operator<? extends OperatorDesc> op : childOperators) {  if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {    ReduceSinkOperator rs=((ReduceSinkOperator)op);    if (outMap.containsKey(rs.getConf().getOutputName())) {      LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());      rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));    }  } else {    setChildrenCollector(op.getChildOperators(),outMap);  }} @TO@ MethodDeclaration@@public, static, void, MethodName:setChildrenCollector, List<Operator<? extends OperatorDesc>> childOperators, Map<String,OutputCollector> outMap,  @AT@ 2889 @LENGTH@ 537
------INS SingleVariableDeclaration@@Operator<? extends OperatorDesc> op @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> op : childOperators) {  if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {    ReduceSinkOperator rs=((ReduceSinkOperator)op);    if (outMap.containsKey(rs.getConf().getOutputName())) {      LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());      rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));    }  } else {    setChildrenCollector(op.getChildOperators(),outMap);  }} @AT@ 2894 @LENGTH@ 35
---------INS ParameterizedType@@Operator<? extends OperatorDesc> @TO@ SingleVariableDeclaration@@Operator<? extends OperatorDesc> op @AT@ 2894 @LENGTH@ 32
------------INS SimpleType@@Operator @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 2894 @LENGTH@ 8
------------INS WildcardType@@? @TO@ ParameterizedType@@Operator<? extends OperatorDesc> @AT@ 2903 @LENGTH@ 22
---------INS SimpleName@@op @TO@ SingleVariableDeclaration@@Operator<? extends OperatorDesc> op @AT@ 2927 @LENGTH@ 2
------INS SimpleName@@childOperators @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> op : childOperators) {  if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {    ReduceSinkOperator rs=((ReduceSinkOperator)op);    if (outMap.containsKey(rs.getConf().getOutputName())) {      LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());      rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));    }  } else {    setChildrenCollector(op.getChildOperators(),outMap);  }} @AT@ 2932 @LENGTH@ 14
------INS IfStatement@@if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} else {  setChildrenCollector(op.getChildOperators(),outMap);} @TO@ EnhancedForStatement@@for (Operator<? extends OperatorDesc> op : childOperators) {  if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {    ReduceSinkOperator rs=((ReduceSinkOperator)op);    if (outMap.containsKey(rs.getConf().getOutputName())) {      LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());      rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));    }  } else {    setChildrenCollector(op.getChildOperators(),outMap);  }} @AT@ 2956 @LENGTH@ 464
---------INS MethodInvocation@@op.getName().equals(ReduceSinkOperator.getOperatorName()) @TO@ IfStatement@@if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} else {  setChildrenCollector(op.getChildOperators(),outMap);} @AT@ 2959 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@op.getName().equals(ReduceSinkOperator.getOperatorName()) @AT@ 2959 @LENGTH@ 12
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getName().equals(ReduceSinkOperator.getOperatorName()) @AT@ 2959 @LENGTH@ 2
------------INS SimpleName@@MethodName:equals:[ReduceSinkOperator.getOperatorName()] @TO@ MethodInvocation@@op.getName().equals(ReduceSinkOperator.getOperatorName()) @AT@ 2972 @LENGTH@ 44
---------------INS MethodInvocation@@ReduceSinkOperator.getOperatorName() @TO@ SimpleName@@MethodName:equals:[ReduceSinkOperator.getOperatorName()] @AT@ 2979 @LENGTH@ 36
------------------INS SimpleName@@Name:ReduceSinkOperator @TO@ MethodInvocation@@ReduceSinkOperator.getOperatorName() @AT@ 2979 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getOperatorName:[] @TO@ MethodInvocation@@ReduceSinkOperator.getOperatorName() @AT@ 2998 @LENGTH@ 17
---------INS Block@@ThenBody:{  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} @TO@ IfStatement@@if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} else {  setChildrenCollector(op.getChildOperators(),outMap);} @AT@ 3018 @LENGTH@ 325
------------INS VariableDeclarationStatement@@ReduceSinkOperator rs=((ReduceSinkOperator)op); @TO@ Block@@ThenBody:{  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} @AT@ 3028 @LENGTH@ 49
---------------INS SimpleType@@ReduceSinkOperator @TO@ VariableDeclarationStatement@@ReduceSinkOperator rs=((ReduceSinkOperator)op); @AT@ 3028 @LENGTH@ 18
---------------INS VariableDeclarationFragment@@rs=((ReduceSinkOperator)op) @TO@ VariableDeclarationStatement@@ReduceSinkOperator rs=((ReduceSinkOperator)op); @AT@ 3047 @LENGTH@ 29
------------------INS SimpleName@@rs @TO@ VariableDeclarationFragment@@rs=((ReduceSinkOperator)op) @AT@ 3047 @LENGTH@ 2
------------------INS ParenthesizedExpression@@((ReduceSinkOperator)op) @TO@ VariableDeclarationFragment@@rs=((ReduceSinkOperator)op) @AT@ 3052 @LENGTH@ 24
---------------------INS CastExpression@@(ReduceSinkOperator)op @TO@ ParenthesizedExpression@@((ReduceSinkOperator)op) @AT@ 3053 @LENGTH@ 22
------------------------INS SimpleType@@ReduceSinkOperator @TO@ CastExpression@@(ReduceSinkOperator)op @AT@ 3054 @LENGTH@ 18
------------------------INS SimpleName@@op @TO@ CastExpression@@(ReduceSinkOperator)op @AT@ 3073 @LENGTH@ 2
------------INS IfStatement@@if (outMap.containsKey(rs.getConf().getOutputName())) {  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @TO@ Block@@ThenBody:{  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} @AT@ 3086 @LENGTH@ 249
---------------INS MethodInvocation@@outMap.containsKey(rs.getConf().getOutputName()) @TO@ IfStatement@@if (outMap.containsKey(rs.getConf().getOutputName())) {  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @AT@ 3090 @LENGTH@ 48
------------------INS SimpleName@@Name:outMap @TO@ MethodInvocation@@outMap.containsKey(rs.getConf().getOutputName()) @AT@ 3090 @LENGTH@ 6
------------------INS SimpleName@@MethodName:containsKey:[rs.getConf().getOutputName()] @TO@ MethodInvocation@@outMap.containsKey(rs.getConf().getOutputName()) @AT@ 3097 @LENGTH@ 41
---------------------INS MethodInvocation@@rs.getConf().getOutputName() @TO@ SimpleName@@MethodName:containsKey:[rs.getConf().getOutputName()] @AT@ 3109 @LENGTH@ 28
------------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3109 @LENGTH@ 12
------------------------INS SimpleName@@Name:rs @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3109 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getOutputName:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3122 @LENGTH@ 15
---------------INS Block@@ThenBody:{  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @TO@ IfStatement@@if (outMap.containsKey(rs.getConf().getOutputName())) {  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @AT@ 3140 @LENGTH@ 195
------------------INS ExpressionStatement@@MethodInvocation:LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()) @TO@ Block@@ThenBody:{  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @AT@ 3152 @LENGTH@ 98
---------------------INS MethodInvocation@@LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()) @AT@ 3152 @LENGTH@ 97
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()) @AT@ 3152 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:info:["Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()] @TO@ MethodInvocation@@LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()) @AT@ 3156 @LENGTH@ 93
---------------------------INS InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @TO@ SimpleName@@MethodName:info:["Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName()] @AT@ 3161 @LENGTH@ 87
------------------------------INS StringLiteral@@"Setting output collector: " @TO@ InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @AT@ 3161 @LENGTH@ 28
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @AT@ 3189 @LENGTH@ 1
------------------------------INS SimpleName@@rs @TO@ InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @AT@ 3192 @LENGTH@ 2
------------------------------INS StringLiteral@@" --> " @TO@ InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @AT@ 3197 @LENGTH@ 7
------------------------------INS MethodInvocation@@rs.getConf().getOutputName() @TO@ InfixExpression@@"Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName() @AT@ 3220 @LENGTH@ 28
---------------------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3220 @LENGTH@ 12
---------------------------------INS SimpleName@@Name:rs @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3220 @LENGTH@ 2
---------------------------------INS SimpleName@@MethodName:getOutputName:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3233 @LENGTH@ 15
------------------INS ExpressionStatement@@MethodInvocation:rs.setOutputCollector(outMap.get(rs.getConf().getOutputName())) @TO@ Block@@ThenBody:{  LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());  rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));} @AT@ 3261 @LENGTH@ 64
---------------------INS MethodInvocation@@rs.setOutputCollector(outMap.get(rs.getConf().getOutputName())) @TO@ ExpressionStatement@@MethodInvocation:rs.setOutputCollector(outMap.get(rs.getConf().getOutputName())) @AT@ 3261 @LENGTH@ 63
------------------------INS SimpleName@@Name:rs @TO@ MethodInvocation@@rs.setOutputCollector(outMap.get(rs.getConf().getOutputName())) @AT@ 3261 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:setOutputCollector:[outMap.get(rs.getConf().getOutputName())] @TO@ MethodInvocation@@rs.setOutputCollector(outMap.get(rs.getConf().getOutputName())) @AT@ 3264 @LENGTH@ 60
---------------------------INS MethodInvocation@@outMap.get(rs.getConf().getOutputName()) @TO@ SimpleName@@MethodName:setOutputCollector:[outMap.get(rs.getConf().getOutputName())] @AT@ 3283 @LENGTH@ 40
------------------------------INS SimpleName@@Name:outMap @TO@ MethodInvocation@@outMap.get(rs.getConf().getOutputName()) @AT@ 3283 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:get:[rs.getConf().getOutputName()] @TO@ MethodInvocation@@outMap.get(rs.getConf().getOutputName()) @AT@ 3290 @LENGTH@ 33
---------------------------------INS MethodInvocation@@rs.getConf().getOutputName() @TO@ SimpleName@@MethodName:get:[rs.getConf().getOutputName()] @AT@ 3294 @LENGTH@ 28
------------------------------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3294 @LENGTH@ 12
------------------------------------INS SimpleName@@Name:rs @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3294 @LENGTH@ 2
------------------------------------INS SimpleName@@MethodName:getOutputName:[] @TO@ MethodInvocation@@rs.getConf().getOutputName() @AT@ 3307 @LENGTH@ 15
---------INS Block@@ElseBody:{  setChildrenCollector(op.getChildOperators(),outMap);} @TO@ IfStatement@@if (op.getName().equals(ReduceSinkOperator.getOperatorName())) {  ReduceSinkOperator rs=((ReduceSinkOperator)op);  if (outMap.containsKey(rs.getConf().getOutputName())) {    LOG.info("Setting output collector: " + rs + " --> "+ rs.getConf().getOutputName());    rs.setOutputCollector(outMap.get(rs.getConf().getOutputName()));  }} else {  setChildrenCollector(op.getChildOperators(),outMap);} @AT@ 3349 @LENGTH@ 71
------------INS ExpressionStatement@@MethodInvocation:setChildrenCollector(op.getChildOperators(),outMap) @TO@ Block@@ElseBody:{  setChildrenCollector(op.getChildOperators(),outMap);} @AT@ 3359 @LENGTH@ 53
---------------INS MethodInvocation@@setChildrenCollector(op.getChildOperators(),outMap) @TO@ ExpressionStatement@@MethodInvocation:setChildrenCollector(op.getChildOperators(),outMap) @AT@ 3359 @LENGTH@ 52
------------------INS SimpleName@@MethodName:setChildrenCollector:[op.getChildOperators(), outMap] @TO@ MethodInvocation@@setChildrenCollector(op.getChildOperators(),outMap) @AT@ 3359 @LENGTH@ 52
---------------------INS MethodInvocation@@op.getChildOperators() @TO@ SimpleName@@MethodName:setChildrenCollector:[op.getChildOperators(), outMap] @AT@ 3380 @LENGTH@ 22
------------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.getChildOperators() @AT@ 3380 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getChildOperators:[] @TO@ MethodInvocation@@op.getChildOperators() @AT@ 3383 @LENGTH@ 19
---------------------INS SimpleName@@outMap @TO@ SimpleName@@MethodName:setChildrenCollector:[op.getChildOperators(), outMap] @AT@ 3404 @LENGTH@ 6


INS IfStatement@@if (file == null) {  return;} @TO@ MethodDeclaration@@private, static, void, MethodName:recursiveDelete, File file,  @AT@ 6598 @LENGTH@ 48
---INS InfixExpression@@file == null @TO@ IfStatement@@if (file == null) {  return;} @AT@ 6601 @LENGTH@ 12
------INS SimpleName@@file @TO@ InfixExpression@@file == null @AT@ 6601 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@file == null @AT@ 6605 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@file == null @AT@ 6609 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (file == null) {  return;} @AT@ 6615 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6629 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:nameValidator.registerValidator(GlobalOperationHandlers.NAME.getName(),new StringLengthValidator(1)) @TO@ MethodInvocation:nameValidator.registerValidator(NAME.getName(),new StringLengthValidator(1)) @AT@ 3129 @LENGTH@ 102
---UPD MethodInvocation@@nameValidator.registerValidator(GlobalOperationHandlers.NAME.getName(),new StringLengthValidator(1)) @TO@ nameValidator.registerValidator(NAME.getName(),new StringLengthValidator(1)) @AT@ 3129 @LENGTH@ 101
------UPD SimpleName@@MethodName:registerValidator:[GlobalOperationHandlers.NAME.getName(), new StringLengthValidator(1)] @TO@ MethodName:registerValidator:[NAME.getName(), new StringLengthValidator(1)] @AT@ 3143 @LENGTH@ 87
---------UPD MethodInvocation@@GlobalOperationHandlers.NAME.getName() @TO@ NAME.getName() @AT@ 3161 @LENGTH@ 38
------------DEL QualifiedName@@Name:GlobalOperationHandlers.NAME @AT@ 3161 @LENGTH@ 28
------------INS SimpleName@@Name:NAME @TO@ MethodInvocation@@GlobalOperationHandlers.NAME.getName() @AT@ 3165 @LENGTH@ 4


UPD CatchClause@@catch (Exception e) {  LOG.debug("Error sending metrics",e);} @TO@ catch (Throwable e) {  LOG.debug("Error sending metrics",e);} @AT@ 17252 @LENGTH@ 90
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 17259 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 17259 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @TO@ MethodDeclaration@@private, static, UnifiedServiceRefMetaData, MethodName:getServiceRef, final DeploymentUnit unit, final ComponentDescription componentDescription, final ServiceReferenceMetaData serviceRefMD, DeploymentUnitProcessingException,  @AT@ 5582 @LENGTH@ 70
---INS MethodInvocation@@wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @TO@ ExpressionStatement@@MethodInvocation:wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @AT@ 5582 @LENGTH@ 69
------INS SimpleName@@Name:wsRefRegistry @TO@ MethodInvocation@@wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @AT@ 5582 @LENGTH@ 13
------INS SimpleName@@MethodName:add:[serviceRefUMDM.getServiceRefName(), serviceRefUMDM] @TO@ MethodInvocation@@wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @AT@ 5596 @LENGTH@ 55
---------INS MethodInvocation@@serviceRefUMDM.getServiceRefName() @TO@ SimpleName@@MethodName:add:[serviceRefUMDM.getServiceRefName(), serviceRefUMDM] @AT@ 5600 @LENGTH@ 34
------------INS SimpleName@@Name:serviceRefUMDM @TO@ MethodInvocation@@serviceRefUMDM.getServiceRefName() @AT@ 5600 @LENGTH@ 14
------------INS SimpleName@@MethodName:getServiceRefName:[] @TO@ MethodInvocation@@serviceRefUMDM.getServiceRefName() @AT@ 5615 @LENGTH@ 19
---------INS SimpleName@@serviceRefUMDM @TO@ SimpleName@@MethodName:add:[serviceRefUMDM.getServiceRefName(), serviceRefUMDM] @AT@ 5636 @LENGTH@ 14


UPD TypeDeclaration@@[public]ShutdownStrategy, [Service] @TO@ [public]ShutdownStrategy, [StaticService] @AT@ 1865 @LENGTH@ 5896
---UPD SimpleType@@Service @TO@ StaticService @AT@ 1907 @LENGTH@ 7


UPD FieldDeclaration@@String, [version] @TO@ String, [version=ContainerOptions.DEFAULT_VERSION] @AT@ 1579 @LENGTH@ 15
---UPD VariableDeclarationFragment@@version @TO@ version=ContainerOptions.DEFAULT_VERSION @AT@ 1586 @LENGTH@ 7
------INS QualifiedName@@ContainerOptions.DEFAULT_VERSION @TO@ VariableDeclarationFragment@@version @AT@ 1596 @LENGTH@ 32
---------INS SimpleName@@ContainerOptions @TO@ QualifiedName@@ContainerOptions.DEFAULT_VERSION @AT@ 1596 @LENGTH@ 16
---------INS SimpleName@@DEFAULT_VERSION @TO@ QualifiedName@@ContainerOptions.DEFAULT_VERSION @AT@ 1613 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:Closeables.closeQuitely(group) @TO@ MethodDeclaration@@public, void, MethodName:onDisconnected,  @AT@ 4178 @LENGTH@ 31
---MOV MethodInvocation@@group.close() @TO@ ExpressionStatement@@MethodInvocation:Closeables.closeQuitely(group) @AT@ 4146 @LENGTH@ 13
------UPD SimpleName@@Name:group @TO@ Name:Closeables @AT@ 4146 @LENGTH@ 5
------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:closeQuitely:[group] @AT@ 4152 @LENGTH@ 7
---------INS SimpleName@@group @TO@ SimpleName@@MethodName:close:[] @AT@ 4202 @LENGTH@ 5


INS IfStatement@@if (exists(curator,CONTAINERS_NODE) != null) {  for (  String key : getChildren(curator,CONTAINERS_NODE)) {    props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));  }} @TO@ MethodDeclaration@@public, static, Properties, MethodName:getContainerTokens, CuratorFramework curator, Exception,  @AT@ 14275 @LENGTH@ 250
---INS InfixExpression@@exists(curator,CONTAINERS_NODE) != null @TO@ IfStatement@@if (exists(curator,CONTAINERS_NODE) != null) {  for (  String key : getChildren(curator,CONTAINERS_NODE)) {    props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));  }} @AT@ 14279 @LENGTH@ 40
------INS MethodInvocation@@exists(curator,CONTAINERS_NODE) @TO@ InfixExpression@@exists(curator,CONTAINERS_NODE) != null @AT@ 14279 @LENGTH@ 32
---------INS SimpleName@@MethodName:exists:[curator, CONTAINERS_NODE] @TO@ MethodInvocation@@exists(curator,CONTAINERS_NODE) @AT@ 14279 @LENGTH@ 32
------------INS SimpleName@@curator @TO@ SimpleName@@MethodName:exists:[curator, CONTAINERS_NODE] @AT@ 14286 @LENGTH@ 7
------------INS SimpleName@@CONTAINERS_NODE @TO@ SimpleName@@MethodName:exists:[curator, CONTAINERS_NODE] @AT@ 14295 @LENGTH@ 15
------INS Operator@@!= @TO@ InfixExpression@@exists(curator,CONTAINERS_NODE) != null @AT@ 14311 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exists(curator,CONTAINERS_NODE) != null @AT@ 14315 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  String key : getChildren(curator,CONTAINERS_NODE)) {    props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));  }} @TO@ IfStatement@@if (exists(curator,CONTAINERS_NODE) != null) {  for (  String key : getChildren(curator,CONTAINERS_NODE)) {    props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));  }} @AT@ 14321 @LENGTH@ 204
------MOV EnhancedForStatement@@for (String key : getChildren(curator,CONTAINERS_NODE)) {  props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));} @TO@ Block@@ThenBody:{  for (  String key : getChildren(curator,CONTAINERS_NODE)) {    props.setProperty("container#" + key,getStringData(curator,CONTAINERS_NODE + "/" + key));  }} @AT@ 14275 @LENGTH@ 172


INS MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @TO@ TypeDeclaration@@[public]FileUtilsTests,  @AT@ 2712 @LENGTH@ 452
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2712 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2719 @LENGTH@ 4
---INS SimpleName@@MethodName:testCreateDirectoryStructureAppendMode @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2724 @LENGTH@ 38
---INS VariableDeclarationStatement@@File file=new File("testDirectory/testDirectory2/testFile.tmp"); @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2769 @LENGTH@ 66
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=new File("testDirectory/testDirectory2/testFile.tmp"); @AT@ 2769 @LENGTH@ 4
------INS VariableDeclarationFragment@@file=new File("testDirectory/testDirectory2/testFile.tmp") @TO@ VariableDeclarationStatement@@File file=new File("testDirectory/testDirectory2/testFile.tmp"); @AT@ 2774 @LENGTH@ 60
---------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=new File("testDirectory/testDirectory2/testFile.tmp") @AT@ 2774 @LENGTH@ 4
---------INS ClassInstanceCreation@@File["testDirectory/testDirectory2/testFile.tmp"] @TO@ VariableDeclarationFragment@@file=new File("testDirectory/testDirectory2/testFile.tmp") @AT@ 2781 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2/testFile.tmp"] @AT@ 2781 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2/testFile.tmp"] @AT@ 2785 @LENGTH@ 4
------------INS StringLiteral@@"testDirectory/testDirectory2/testFile.tmp" @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2/testFile.tmp"] @AT@ 2790 @LENGTH@ 43
---INS VariableDeclarationStatement@@File dir1=new File("testDirectory"); @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2838 @LENGTH@ 38
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File dir1=new File("testDirectory"); @AT@ 2838 @LENGTH@ 4
------INS VariableDeclarationFragment@@dir1=new File("testDirectory") @TO@ VariableDeclarationStatement@@File dir1=new File("testDirectory"); @AT@ 2843 @LENGTH@ 32
---------INS SimpleName@@dir1 @TO@ VariableDeclarationFragment@@dir1=new File("testDirectory") @AT@ 2843 @LENGTH@ 4
---------INS ClassInstanceCreation@@File["testDirectory"] @TO@ VariableDeclarationFragment@@dir1=new File("testDirectory") @AT@ 2850 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@File["testDirectory"] @AT@ 2850 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["testDirectory"] @AT@ 2854 @LENGTH@ 4
------------INS StringLiteral@@"testDirectory" @TO@ ClassInstanceCreation@@File["testDirectory"] @AT@ 2859 @LENGTH@ 15
---INS VariableDeclarationStatement@@File dir2=new File("testDirectory/testDirectory2"); @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2879 @LENGTH@ 53
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File dir2=new File("testDirectory/testDirectory2"); @AT@ 2879 @LENGTH@ 4
------INS VariableDeclarationFragment@@dir2=new File("testDirectory/testDirectory2") @TO@ VariableDeclarationStatement@@File dir2=new File("testDirectory/testDirectory2"); @AT@ 2884 @LENGTH@ 47
---------INS SimpleName@@dir2 @TO@ VariableDeclarationFragment@@dir2=new File("testDirectory/testDirectory2") @AT@ 2884 @LENGTH@ 4
---------INS ClassInstanceCreation@@File["testDirectory/testDirectory2"] @TO@ VariableDeclarationFragment@@dir2=new File("testDirectory/testDirectory2") @AT@ 2891 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2"] @AT@ 2891 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2"] @AT@ 2895 @LENGTH@ 4
------------INS StringLiteral@@"testDirectory/testDirectory2" @TO@ ClassInstanceCreation@@File["testDirectory/testDirectory2"] @AT@ 2900 @LENGTH@ 30
---INS TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @TO@ MethodDeclaration@@public, void, MethodName:testCreateDirectoryStructureAppendMode,  @AT@ 2936 @LENGTH@ 225
------INS ExpressionStatement@@MethodInvocation:FileUtils.setUpOutputFile(file,false,true,false) @TO@ TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @AT@ 2945 @LENGTH@ 52
---------INS MethodInvocation@@FileUtils.setUpOutputFile(file,false,true,false) @TO@ ExpressionStatement@@MethodInvocation:FileUtils.setUpOutputFile(file,false,true,false) @AT@ 2945 @LENGTH@ 51
------------INS SimpleName@@Name:FileUtils @TO@ MethodInvocation@@FileUtils.setUpOutputFile(file,false,true,false) @AT@ 2945 @LENGTH@ 9
------------INS SimpleName@@MethodName:setUpOutputFile:[file, false, true, false] @TO@ MethodInvocation@@FileUtils.setUpOutputFile(file,false,true,false) @AT@ 2955 @LENGTH@ 41
---------------INS SimpleName@@file @TO@ SimpleName@@MethodName:setUpOutputFile:[file, false, true, false] @AT@ 2971 @LENGTH@ 4
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setUpOutputFile:[file, false, true, false] @AT@ 2977 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setUpOutputFile:[file, false, true, false] @AT@ 2984 @LENGTH@ 4
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setUpOutputFile:[file, false, true, false] @AT@ 2990 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:assertTrue(file.exists()) @TO@ TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3001 @LENGTH@ 26
---------INS MethodInvocation@@assertTrue(file.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(file.exists()) @AT@ 3001 @LENGTH@ 25
------------INS SimpleName@@MethodName:assertTrue:[file.exists()] @TO@ MethodInvocation@@assertTrue(file.exists()) @AT@ 3001 @LENGTH@ 25
---------------INS MethodInvocation@@file.exists() @TO@ SimpleName@@MethodName:assertTrue:[file.exists()] @AT@ 3012 @LENGTH@ 13
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 3012 @LENGTH@ 4
------------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 3017 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertTrue(dir1.exists()) @TO@ TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3031 @LENGTH@ 26
---------INS MethodInvocation@@assertTrue(dir1.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(dir1.exists()) @AT@ 3031 @LENGTH@ 25
------------INS SimpleName@@MethodName:assertTrue:[dir1.exists()] @TO@ MethodInvocation@@assertTrue(dir1.exists()) @AT@ 3031 @LENGTH@ 25
---------------INS MethodInvocation@@dir1.exists() @TO@ SimpleName@@MethodName:assertTrue:[dir1.exists()] @AT@ 3042 @LENGTH@ 13
------------------INS SimpleName@@Name:dir1 @TO@ MethodInvocation@@dir1.exists() @AT@ 3042 @LENGTH@ 4
------------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@dir1.exists() @AT@ 3047 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertTrue(dir2.exists()) @TO@ TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3061 @LENGTH@ 26
---------INS MethodInvocation@@assertTrue(dir2.exists()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(dir2.exists()) @AT@ 3061 @LENGTH@ 25
------------INS SimpleName@@MethodName:assertTrue:[dir2.exists()] @TO@ MethodInvocation@@assertTrue(dir2.exists()) @AT@ 3061 @LENGTH@ 25
---------------INS MethodInvocation@@dir2.exists() @TO@ SimpleName@@MethodName:assertTrue:[dir2.exists()] @AT@ 3072 @LENGTH@ 13
------------------INS SimpleName@@Name:dir2 @TO@ MethodInvocation@@dir2.exists() @AT@ 3072 @LENGTH@ 4
------------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@dir2.exists() @AT@ 3077 @LENGTH@ 8
------INS Block@@FinallyBody:{  file.delete();  dir2.delete();  dir1.delete();} @TO@ TryStatement@@try {  FileUtils.setUpOutputFile(file,false,true,false);  assertTrue(file.exists());  assertTrue(dir1.exists());  assertTrue(dir2.exists());}  finally {  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3102 @LENGTH@ 59
---------INS ExpressionStatement@@MethodInvocation:file.delete() @TO@ Block@@FinallyBody:{  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3107 @LENGTH@ 14
------------INS MethodInvocation@@file.delete() @TO@ ExpressionStatement@@MethodInvocation:file.delete() @AT@ 3107 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.delete() @AT@ 3107 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.delete() @AT@ 3112 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:dir2.delete() @TO@ Block@@FinallyBody:{  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3125 @LENGTH@ 14
------------INS MethodInvocation@@dir2.delete() @TO@ ExpressionStatement@@MethodInvocation:dir2.delete() @AT@ 3125 @LENGTH@ 13
---------------INS SimpleName@@Name:dir2 @TO@ MethodInvocation@@dir2.delete() @AT@ 3125 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@dir2.delete() @AT@ 3130 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:dir1.delete() @TO@ Block@@FinallyBody:{  file.delete();  dir2.delete();  dir1.delete();} @AT@ 3143 @LENGTH@ 14
------------INS MethodInvocation@@dir1.delete() @TO@ ExpressionStatement@@MethodInvocation:dir1.delete() @AT@ 3143 @LENGTH@ 13
---------------INS SimpleName@@Name:dir1 @TO@ MethodInvocation@@dir1.delete() @AT@ 3143 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@dir1.delete() @AT@ 3148 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:builder.addDependency(DependencyType.REQUIRED,getEJBViewMethodSecurityAttributesServiceName(unit,endpoint),EJBViewMethodSecurityAttributesService.class,service.getEJBMethodSecurityAttributeServiceInjector()) @TO@ MethodInvocation:builder.addDependency(DependencyType.OPTIONAL,getEJBViewMethodSecurityAttributesServiceName(unit,endpoint),EJBViewMethodSecurityAttributesService.class,service.getEJBMethodSecurityAttributeServiceInjector()) @AT@ 10452 @LENGTH@ 232
---UPD MethodInvocation@@builder.addDependency(DependencyType.REQUIRED,getEJBViewMethodSecurityAttributesServiceName(unit,endpoint),EJBViewMethodSecurityAttributesService.class,service.getEJBMethodSecurityAttributeServiceInjector()) @TO@ builder.addDependency(DependencyType.OPTIONAL,getEJBViewMethodSecurityAttributesServiceName(unit,endpoint),EJBViewMethodSecurityAttributesService.class,service.getEJBMethodSecurityAttributeServiceInjector()) @AT@ 10452 @LENGTH@ 231
------UPD SimpleName@@MethodName:addDependency:[DependencyType.REQUIRED, getEJBViewMethodSecurityAttributesServiceName(unit,endpoint), EJBViewMethodSecurityAttributesService.class, service.getEJBMethodSecurityAttributeServiceInjector()] @TO@ MethodName:addDependency:[DependencyType.OPTIONAL, getEJBViewMethodSecurityAttributesServiceName(unit,endpoint), EJBViewMethodSecurityAttributesService.class, service.getEJBMethodSecurityAttributeServiceInjector()] @AT@ 10460 @LENGTH@ 223
---------UPD QualifiedName@@DependencyType.REQUIRED @TO@ DependencyType.OPTIONAL @AT@ 10474 @LENGTH@ 23
------------UPD SimpleName@@REQUIRED @TO@ OPTIONAL @AT@ 10489 @LENGTH@ 8


UPD Block@@ThenBody:{  if (data.useOriginalInMessage) {    log.trace("Using the original IN message instead of current");    Message original=exchange.getUnitOfWork().getOriginalInMessage();    exchange.setIn(original);    if (exchange.hasOut()) {      log.trace("Removing the out message to avoid some uncertain behavior");      exchange.setOut(null);    }  }  MessageHelper.resetStreamCache(exchange.getIn());  log.trace("Failure processor {} is processing Exchange: {}",processor,exchange);  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  if (exchange.getUnitOfWork().getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());  }  AsyncProcessor afp=AsyncProcessorConverterHelper.convert(processor);  sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      log.trace("Failure processor done: {} processing Exchange: {}",processor,exchange);      try {        prepareExchangeAfterFailure(exchange,data,shouldHandle,shouldContinue);        boolean deadLetterChannel=processor == data.deadLetterProcessor && data.deadLetterProcessor != null;        EventHelper.notifyExchangeFailureHandled(exchange.getContext(),exchange,processor,deadLetterChannel);      }  finally {        data.sync&=sync;        callback.done(data.sync);      }    }  });} @TO@ ThenBody:{  if (data.useOriginalInMessage) {    log.trace("Using the original IN message instead of current");    Message original=exchange.getUnitOfWork().getOriginalInMessage();    exchange.setIn(original);    if (exchange.hasOut()) {      log.trace("Removing the out message to avoid some uncertain behavior");      exchange.setOut(null);    }  }  MessageHelper.resetStreamCache(exchange.getIn());  log.trace("Failure processor {} is processing Exchange: {}",processor,exchange);  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  UnitOfWork uow=exchange.getUnitOfWork();  if (uow != null && uow.getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());  }  AsyncProcessor afp=AsyncProcessorConverterHelper.convert(processor);  sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      log.trace("Failure processor done: {} processing Exchange: {}",processor,exchange);      try {        prepareExchangeAfterFailure(exchange,data,shouldHandle,shouldContinue);        boolean deadLetterChannel=processor == data.deadLetterProcessor && data.deadLetterProcessor != null;        EventHelper.notifyExchangeFailureHandled(exchange.getContext(),exchange,processor,deadLetterChannel);      }  finally {        data.sync&=sync;        callback.done(data.sync);      }    }  });} @AT@ 36873 @LENGTH@ 2389
---UPD IfStatement@@if (exchange.getUnitOfWork().getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @TO@ if (uow != null && uow.getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());} @AT@ 37899 @LENGTH@ 199
------DEL InfixExpression@@exchange.getUnitOfWork().getRouteContext() != null @AT@ 37903 @LENGTH@ 50
------UPD Block@@ThenBody:{  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @TO@ ThenBody:{  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());} @AT@ 37955 @LENGTH@ 143
---------UPD ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId()) @TO@ MethodInvocation:exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId()) @AT@ 37973 @LENGTH@ 111
------------UPD MethodInvocation@@exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId()) @TO@ exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId()) @AT@ 37973 @LENGTH@ 110
---------------UPD SimpleName@@MethodName:setProperty:[Exchange.FAILURE_ROUTE_ID, exchange.getUnitOfWork().getRouteContext().getRoute().getId()] @TO@ MethodName:setProperty:[Exchange.FAILURE_ROUTE_ID, uow.getRouteContext().getRoute().getId()] @AT@ 37982 @LENGTH@ 101
------------------UPD MethodInvocation@@exchange.getUnitOfWork().getRouteContext().getRoute().getId() @TO@ uow.getRouteContext().getRoute().getId() @AT@ 38021 @LENGTH@ 61
---------------------DEL MethodInvocation@@MethodName:getUnitOfWork:[] @AT@ 38021 @LENGTH@ 24
---------------------UPD SimpleName@@Name:exchange @TO@ Name:uow @AT@ 38021 @LENGTH@ 8
------INS InfixExpression@@uow != null && uow.getRouteContext() != null @TO@ IfStatement@@if (exchange.getUnitOfWork().getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @AT@ 37958 @LENGTH@ 44
---------INS InfixExpression@@uow != null @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 37958 @LENGTH@ 11
------------INS SimpleName@@uow @TO@ InfixExpression@@uow != null @AT@ 37958 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@uow != null @AT@ 37961 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@uow != null @AT@ 37965 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 37969 @LENGTH@ 2
---------INS InfixExpression@@uow.getRouteContext() != null @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 37973 @LENGTH@ 29
------------MOV MethodInvocation@@exchange.getUnitOfWork().getRouteContext() @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 37903 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getUnitOfWork:[] @AT@ 37903 @LENGTH@ 24
---------------UPD SimpleName@@Name:exchange @TO@ Name:uow @AT@ 37903 @LENGTH@ 8
------------MOV Operator@@!= @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 37945 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 37949 @LENGTH@ 4
---INS VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @TO@ Block@@ThenBody:{  if (data.useOriginalInMessage) {    log.trace("Using the original IN message instead of current");    Message original=exchange.getUnitOfWork().getOriginalInMessage();    exchange.setIn(original);    if (exchange.hasOut()) {      log.trace("Removing the out message to avoid some uncertain behavior");      exchange.setOut(null);    }  }  MessageHelper.resetStreamCache(exchange.getIn());  log.trace("Failure processor {} is processing Exchange: {}",processor,exchange);  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  if (exchange.getUnitOfWork().getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());  }  AsyncProcessor afp=AsyncProcessorConverterHelper.convert(processor);  sync=afp.process(exchange,new AsyncCallback(){    public void done(    boolean sync){      log.trace("Failure processor done: {} processing Exchange: {}",processor,exchange);      try {        prepareExchangeAfterFailure(exchange,data,shouldHandle,shouldContinue);        boolean deadLetterChannel=processor == data.deadLetterProcessor && data.deadLetterProcessor != null;        EventHelper.notifyExchangeFailureHandled(exchange.getContext(),exchange,processor,deadLetterChannel);      }  finally {        data.sync&=sync;        callback.done(data.sync);      }    }  });} @AT@ 37899 @LENGTH@ 42
------INS SimpleType@@UnitOfWork @TO@ VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @AT@ 37899 @LENGTH@ 10
------INS VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @TO@ VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @AT@ 37910 @LENGTH@ 30
---------INS SimpleName@@uow @TO@ VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @AT@ 37910 @LENGTH@ 3
---------INS MethodInvocation@@exchange.getUnitOfWork() @TO@ VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @AT@ 37916 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 37916 @LENGTH@ 8
------------INS SimpleName@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 37925 @LENGTH@ 15


UPD IfStatement@@if (isOutputSupported() && getOutputs().isEmpty()) {  setId(id);} else {  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @TO@ if (isOutputSupported() && getOutputs().isEmpty()) {  setId(id);} else {  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  if (!getOutputs().isEmpty()) {    outputs.get(outputs.size() - 1).setId(id);  } else {    setId(id);  }} @AT@ 41463 @LENGTH@ 831
---UPD Block@@ElseBody:{  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @TO@ ElseBody:{  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  if (!getOutputs().isEmpty()) {    outputs.get(outputs.size() - 1).setId(id);  } else {    setId(id);  }} @AT@ 41584 @LENGTH@ 710
------INS IfStatement@@if (!getOutputs().isEmpty()) {  outputs.get(outputs.size() - 1).setId(id);} else {  setId(id);} @TO@ Block@@ElseBody:{  List<ProcessorDefinition<?>> outputs=getOutputs();  if (!blocks.isEmpty()) {    if (blocks.getLast() instanceof ProcessorDefinition) {      ProcessorDefinition<?> block=(ProcessorDefinition<?>)blocks.getLast();      if (!block.getOutputs().isEmpty()) {        outputs=block.getOutputs();      }    }  }  outputs.get(outputs.size() - 1).setId(id);} @AT@ 42255 @LENGTH@ 196
---------INS PrefixExpression@@!getOutputs().isEmpty() @TO@ IfStatement@@if (!getOutputs().isEmpty()) {  outputs.get(outputs.size() - 1).setId(id);} else {  setId(id);} @AT@ 42259 @LENGTH@ 23
------------INS Operator@@! @TO@ PrefixExpression@@!getOutputs().isEmpty() @AT@ 42259 @LENGTH@ 1
------------INS MethodInvocation@@getOutputs().isEmpty() @TO@ PrefixExpression@@!getOutputs().isEmpty() @AT@ 42260 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:getOutputs:[] @TO@ MethodInvocation@@getOutputs().isEmpty() @AT@ 42260 @LENGTH@ 12
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@getOutputs().isEmpty() @AT@ 42273 @LENGTH@ 9
---------INS Block@@ThenBody:{  outputs.get(outputs.size() - 1).setId(id);} @TO@ IfStatement@@if (!getOutputs().isEmpty()) {  outputs.get(outputs.size() - 1).setId(id);} else {  setId(id);} @AT@ 42284 @LENGTH@ 74
------------MOV ExpressionStatement@@MethodInvocation:outputs.get(outputs.size() - 1).setId(id) @TO@ Block@@ThenBody:{  outputs.get(outputs.size() - 1).setId(id);} @AT@ 42242 @LENGTH@ 42
---------INS Block@@ElseBody:{  setId(id);} @TO@ IfStatement@@if (!getOutputs().isEmpty()) {  outputs.get(outputs.size() - 1).setId(id);} else {  setId(id);} @AT@ 42364 @LENGTH@ 87
------------INS ExpressionStatement@@MethodInvocation:setId(id) @TO@ Block@@ElseBody:{  setId(id);} @AT@ 42427 @LENGTH@ 10
---------------INS MethodInvocation@@setId(id) @TO@ ExpressionStatement@@MethodInvocation:setId(id) @AT@ 42427 @LENGTH@ 9
------------------INS SimpleName@@MethodName:setId:[id] @TO@ MethodInvocation@@setId(id) @AT@ 42427 @LENGTH@ 9
---------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:setId:[id] @AT@ 42433 @LENGTH@ 2


INS FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @TO@ TypeDeclaration@@[public, final]WSServices,  @AT@ 1536 @LENGTH@ 95
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @AT@ 1536 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @AT@ 1543 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @AT@ 1550 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @AT@ 1556 @LENGTH@ 11
---INS VariableDeclarationFragment@@ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config") @TO@ FieldDeclaration@@public, static, final, ServiceName, [ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config")] @AT@ 1568 @LENGTH@ 62
------INS SimpleName@@ENDPOINT_CONFIG_SERVICE @TO@ VariableDeclarationFragment@@ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config") @AT@ 1568 @LENGTH@ 23
------INS MethodInvocation@@WS_SERVICE.append("endpoint-config") @TO@ VariableDeclarationFragment@@ENDPOINT_CONFIG_SERVICE=WS_SERVICE.append("endpoint-config") @AT@ 1594 @LENGTH@ 36
---------INS SimpleName@@Name:WS_SERVICE @TO@ MethodInvocation@@WS_SERVICE.append("endpoint-config") @AT@ 1594 @LENGTH@ 10
---------INS SimpleName@@MethodName:append:["endpoint-config"] @TO@ MethodInvocation@@WS_SERVICE.append("endpoint-config") @AT@ 1605 @LENGTH@ 25
------------INS StringLiteral@@"endpoint-config" @TO@ SimpleName@@MethodName:append:["endpoint-config"] @AT@ 1612 @LENGTH@ 17


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build(); @AT@ 5963 @LENGTH@ 350
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @AT@ 5969 @LENGTH@ 343
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @AT@ 5977 @LENGTH@ 335
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 5977 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 5977 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 6114 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 6114 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 6124 @LENGTH@ 7


INS MethodDeclaration@@private, voidMethodName:SantuarioUtil,  @TO@ TypeDeclaration@@[public, final]SantuarioUtil,  @AT@ 1217 @LENGTH@ 54
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SantuarioUtil,  @AT@ 1217 @LENGTH@ 7
---INS SimpleName@@MethodName:SantuarioUtil @TO@ MethodDeclaration@@private, voidMethodName:SantuarioUtil,  @AT@ 1225 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(100) @TO@ MethodInvocation:getMockEndpoint("mock:foo").expectedMessageCount(10) @AT@ 1764 @LENGTH@ 54
---UPD MethodInvocation@@getMockEndpoint("mock:foo").expectedMessageCount(100) @TO@ getMockEndpoint("mock:foo").expectedMessageCount(10) @AT@ 1764 @LENGTH@ 53
------UPD SimpleName@@MethodName:expectedMessageCount:[100] @TO@ MethodName:expectedMessageCount:[10] @AT@ 1792 @LENGTH@ 25
---------UPD NumberLiteral@@100 @TO@ 10 @AT@ 1813 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[public]SrpConnectionPipelineTxIntegrationTests, SrpConnectionTransactionIntegrationTests @AT@ 3083 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3083 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3090 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3095 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3126 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 3126 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 3132 @LENGTH@ 24


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[static]AggregationField, [Field] @AT@ 6101 @LENGTH@ 159
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6101 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6108 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6112 @LENGTH@ 8
---INS VariableDeclarationStatement@@int result=17; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6129 @LENGTH@ 16
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=17; @AT@ 6129 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=17 @TO@ VariableDeclarationStatement@@int result=17; @AT@ 6133 @LENGTH@ 11
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=17 @AT@ 6133 @LENGTH@ 6
---------INS NumberLiteral@@17 @TO@ VariableDeclarationFragment@@result=17 @AT@ 6142 @LENGTH@ 2
---INS ExpressionStatement@@Assignment:result+=31 * name.hashCode() @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6150 @LENGTH@ 31
------INS Assignment@@result+=31 * name.hashCode() @TO@ ExpressionStatement@@Assignment:result+=31 * name.hashCode() @AT@ 6150 @LENGTH@ 30
---------INS SimpleName@@result @TO@ Assignment@@result+=31 * name.hashCode() @AT@ 6150 @LENGTH@ 6
---------INS Operator@@+= @TO@ Assignment@@result+=31 * name.hashCode() @AT@ 6156 @LENGTH@ 2
---------INS InfixExpression@@31 * name.hashCode() @TO@ Assignment@@result+=31 * name.hashCode() @AT@ 6160 @LENGTH@ 20
------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * name.hashCode() @AT@ 6160 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@31 * name.hashCode() @AT@ 6162 @LENGTH@ 1
------------INS MethodInvocation@@name.hashCode() @TO@ InfixExpression@@31 * name.hashCode() @AT@ 6165 @LENGTH@ 15
---------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.hashCode() @AT@ 6165 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hashCode:[] @TO@ MethodInvocation@@name.hashCode() @AT@ 6170 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:result+=31 * ObjectUtils.nullSafeHashCode(target) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6185 @LENGTH@ 52
------INS Assignment@@result+=31 * ObjectUtils.nullSafeHashCode(target) @TO@ ExpressionStatement@@Assignment:result+=31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6185 @LENGTH@ 51
---------INS SimpleName@@result @TO@ Assignment@@result+=31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6185 @LENGTH@ 6
---------INS Operator@@+= @TO@ Assignment@@result+=31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6191 @LENGTH@ 2
---------INS InfixExpression@@31 * ObjectUtils.nullSafeHashCode(target) @TO@ Assignment@@result+=31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6195 @LENGTH@ 41
------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6195 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6197 @LENGTH@ 1
------------INS MethodInvocation@@ObjectUtils.nullSafeHashCode(target) @TO@ InfixExpression@@31 * ObjectUtils.nullSafeHashCode(target) @AT@ 6200 @LENGTH@ 36
---------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeHashCode(target) @AT@ 6200 @LENGTH@ 11
---------------INS SimpleName@@MethodName:nullSafeHashCode:[target] @TO@ MethodInvocation@@ObjectUtils.nullSafeHashCode(target) @AT@ 6212 @LENGTH@ 24
------------------INS SimpleName@@target @TO@ SimpleName@@MethodName:nullSafeHashCode:[target] @AT@ 6229 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 6242 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 6249 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new SimpleMongoDbFactory(new Mongo("localhost"),"spring-data-rest") @TO@ ClassInstanceCreation:new SimpleMongoDbFactory(new MongoClient("localhost"),"spring-data-rest") @AT@ 827 @LENGTH@ 76
---UPD ClassInstanceCreation@@SimpleMongoDbFactory[new Mongo("localhost"), "spring-data-rest"] @TO@ SimpleMongoDbFactory[new MongoClient("localhost"), "spring-data-rest"] @AT@ 834 @LENGTH@ 68
------UPD ClassInstanceCreation@@Mongo["localhost"] @TO@ MongoClient["localhost"] @AT@ 859 @LENGTH@ 22
---------UPD SimpleType@@Mongo @TO@ MongoClient @AT@ 863 @LENGTH@ 5


UPD MethodDeclaration@@void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, OutputCollector out,  @TO@ void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, Map<String,OutputCollector> outMap,  @AT@ 3742 @LENGTH@ 3689
---UPD SingleVariableDeclaration@@OutputCollector out @TO@ Map<String,OutputCollector> outMap @AT@ 3829 @LENGTH@ 19
------DEL SimpleType@@OutputCollector @AT@ 3829 @LENGTH@ 15
------INS ParameterizedType@@Map<String,OutputCollector> @TO@ SingleVariableDeclaration@@OutputCollector out @AT@ 3829 @LENGTH@ 28
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 3829 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 3833 @LENGTH@ 6
---------INS SimpleType@@OutputCollector @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 3841 @LENGTH@ 15
------UPD SimpleName@@out @TO@ outMap @AT@ 3845 @LENGTH@ 3
---UPD ExpressionStatement@@SuperMethodInvocation:super.init(jconf,mrReporter,inputs,out) @TO@ SuperMethodInvocation:super.init(jconf,mrReporter,inputs,outMap) @AT@ 3927 @LENGTH@ 43
------UPD SuperMethodInvocation@@super.init(jconf,mrReporter,inputs,out) @TO@ super.init(jconf,mrReporter,inputs,outMap) @AT@ 3927 @LENGTH@ 42
---------UPD SimpleName@@MethodName:init:[jconf, mrReporter, inputs, out] @TO@ MethodName:init:[jconf, mrReporter, inputs, outMap] @AT@ 3933 @LENGTH@ 4
---------UPD SimpleName@@out @TO@ outMap @AT@ 3965 @LENGTH@ 3
---UPD TryStatement@@try {  l4j.info(reducer.dump(0));  reducer.initialize(jconf,rowObjectInspector);  List<HashTableDummyOperator> dummyOps=redWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  List<Operator<? extends OperatorDesc>> children=new LinkedList<Operator<? extends OperatorDesc>>();  children.add(reducer);  if (dummyOps != null) {    children.addAll(dummyOps);  }  OperatorUtils.setChildrenCollector(children,out);  reducer.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Reduce operator initialization failed",e);  }} @TO@ try {  l4j.info(reducer.dump(0));  reducer.initialize(jconf,rowObjectInspector);  List<HashTableDummyOperator> dummyOps=redWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  List<Operator<? extends OperatorDesc>> children=new LinkedList<Operator<? extends OperatorDesc>>();  children.add(reducer);  if (dummyOps != null) {    children.addAll(dummyOps);  }  OperatorUtils.setChildrenCollector(children,outMap);  reducer.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Reduce operator initialization failed",e);  }} @AT@ 6057 @LENGTH@ 1299
------UPD ExpressionStatement@@MethodInvocation:OperatorUtils.setChildrenCollector(children,out) @TO@ MethodInvocation:OperatorUtils.setChildrenCollector(children,outMap) @AT@ 6907 @LENGTH@ 50
---------UPD MethodInvocation@@OperatorUtils.setChildrenCollector(children,out) @TO@ OperatorUtils.setChildrenCollector(children,outMap) @AT@ 6907 @LENGTH@ 49
------------UPD SimpleName@@MethodName:setChildrenCollector:[children, out] @TO@ MethodName:setChildrenCollector:[children, outMap] @AT@ 6921 @LENGTH@ 35
---------------UPD SimpleName@@out @TO@ outMap @AT@ 6952 @LENGTH@ 3


INS MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @TO@ TypeDeclaration@@[public]ManagementRemoteEjbComponentView, BaseManagementEjbComponentView @AT@ 2871 @LENGTH@ 1055
---MOV VariableDeclarationStatement@@final Method method=interceptorContext.getMethod(); @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2471 @LENGTH@ 53
---MOV VariableDeclarationStatement@@Object[] params=interceptorContext.getParameters(); @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2533 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@Object[] params=interceptorContext.getParameters(); @AT@ 3020 @LENGTH@ 5
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2871 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2878 @LENGTH@ 6
---INS SimpleName@@MethodName:invoke @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2885 @LENGTH@ 6
---INS SingleVariableDeclaration@@InterceptorContext interceptorContext @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2892 @LENGTH@ 37
------INS SimpleType@@InterceptorContext @TO@ SingleVariableDeclaration@@InterceptorContext interceptorContext @AT@ 2892 @LENGTH@ 18
------INS SimpleName@@interceptorContext @TO@ SingleVariableDeclaration@@InterceptorContext interceptorContext @AT@ 2911 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 2938 @LENGTH@ 9
---INS IfStatement@@if (WildFlySecurityManager.isChecking()) {  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} else {  return invokeInternal(method,params);} @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 3088 @LENGTH@ 832
------INS MethodInvocation@@WildFlySecurityManager.isChecking() @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} else {  return invokeInternal(method,params);} @AT@ 3091 @LENGTH@ 35
---------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.isChecking() @AT@ 3091 @LENGTH@ 22
---------INS SimpleName@@MethodName:isChecking:[] @TO@ MethodInvocation@@WildFlySecurityManager.isChecking() @AT@ 3114 @LENGTH@ 12
------INS Block@@ThenBody:{  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} else {  return invokeInternal(method,params);} @AT@ 3128 @LENGTH@ 724
---------INS TryStatement@@try {  return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){    @Override public Object run() throws Exception {      return invokeInternal(method,params);    }  });} catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @TO@ Block@@ThenBody:{  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} @AT@ 3142 @LENGTH@ 700
------------INS ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
) @TO@ TryStatement@@try {  return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){    @Override public Object run() throws Exception {      return invokeInternal(method,params);    }  });} catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @AT@ 3160 @LENGTH@ 252
---------------INS MethodInvocation@@AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
) @TO@ ReturnStatement@@MethodInvocation:AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
) @AT@ 3167 @LENGTH@ 244
------------------INS SimpleName@@Name:AccessController @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
) @AT@ 3167 @LENGTH@ 16
------------------INS SimpleName@@MethodName:doPrivileged:[new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
] @TO@ MethodInvocation@@AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
) @AT@ 3184 @LENGTH@ 227
---------------------INS ClassInstanceCreation@@PrivilegedExceptionAction<Object>[] @TO@ SimpleName@@MethodName:doPrivileged:[new PrivilegedExceptionAction<Object>(){
  @Override public Object run() throws Exception {
    return invokeInternal(method,params);
  }
}
] @AT@ 3197 @LENGTH@ 213
------------------------INS New@@new @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<Object>[] @AT@ 3197 @LENGTH@ 3
------------------------INS ParameterizedType@@PrivilegedExceptionAction<Object> @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<Object>[] @AT@ 3201 @LENGTH@ 33
---------------------------INS SimpleType@@PrivilegedExceptionAction @TO@ ParameterizedType@@PrivilegedExceptionAction<Object> @AT@ 3201 @LENGTH@ 25
---------------------------INS SimpleType@@Object @TO@ ParameterizedType@@PrivilegedExceptionAction<Object> @AT@ 3227 @LENGTH@ 6
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@PrivilegedExceptionAction<Object>[] @AT@ 3237 @LENGTH@ 173
---------------------------INS MethodDeclaration@@public, Object, MethodName:run, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3281 @LENGTH@ 115
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:run, Exception,  @AT@ 3281 @LENGTH@ 6
------------------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:run, Exception,  @AT@ 3288 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, Object, MethodName:run, Exception,  @AT@ 3295 @LENGTH@ 3
------------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Object, MethodName:run, Exception,  @AT@ 3308 @LENGTH@ 9
------------------------------INS ReturnStatement@@MethodInvocation:invokeInternal(method,params) @TO@ MethodDeclaration@@public, Object, MethodName:run, Exception,  @AT@ 3340 @LENGTH@ 38
---------------------------------INS MethodInvocation@@invokeInternal(method,params) @TO@ ReturnStatement@@MethodInvocation:invokeInternal(method,params) @AT@ 3347 @LENGTH@ 30
------------------------------------INS SimpleName@@MethodName:invokeInternal:[method, params] @TO@ MethodInvocation@@invokeInternal(method,params) @AT@ 3347 @LENGTH@ 30
---------------------------------------INS SimpleName@@method @TO@ SimpleName@@MethodName:invokeInternal:[method, params] @AT@ 3362 @LENGTH@ 6
---------------------------------------INS SimpleName@@params @TO@ SimpleName@@MethodName:invokeInternal:[method, params] @AT@ 3370 @LENGTH@ 6
------------INS CatchClause@@catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @TO@ TryStatement@@try {  return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){    @Override public Object run() throws Exception {      return invokeInternal(method,params);    }  });} catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @AT@ 3427 @LENGTH@ 415
---------------INS SingleVariableDeclaration@@PrivilegedActionException e @TO@ CatchClause@@catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @AT@ 3434 @LENGTH@ 27
------------------INS SimpleType@@PrivilegedActionException @TO@ SingleVariableDeclaration@@PrivilegedActionException e @AT@ 3434 @LENGTH@ 25
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@PrivilegedActionException e @AT@ 3460 @LENGTH@ 1
---------------INS VariableDeclarationStatement@@Throwable cause=e.getCause(); @TO@ CatchClause@@catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @AT@ 3481 @LENGTH@ 31
------------------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable cause=e.getCause(); @AT@ 3481 @LENGTH@ 9
------------------INS VariableDeclarationFragment@@cause=e.getCause() @TO@ VariableDeclarationStatement@@Throwable cause=e.getCause(); @AT@ 3491 @LENGTH@ 20
---------------------INS SimpleName@@cause @TO@ VariableDeclarationFragment@@cause=e.getCause() @AT@ 3491 @LENGTH@ 5
---------------------INS MethodInvocation@@e.getCause() @TO@ VariableDeclarationFragment@@cause=e.getCause() @AT@ 3499 @LENGTH@ 12
------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 3499 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 3501 @LENGTH@ 10
---------------INS IfStatement@@if (cause != null) {  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} else {  throw e;} @TO@ CatchClause@@catch (PrivilegedActionException e) {  Throwable cause=e.getCause();  if (cause != null) {    if (cause instanceof Exception) {      throw (Exception)cause;    } else {      throw new RuntimeException(e);    }  } else {    throw e;  }} @AT@ 3529 @LENGTH@ 299
------------------INS InfixExpression@@cause != null @TO@ IfStatement@@if (cause != null) {  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} else {  throw e;} @AT@ 3533 @LENGTH@ 13
---------------------INS SimpleName@@cause @TO@ InfixExpression@@cause != null @AT@ 3533 @LENGTH@ 5
---------------------INS Operator@@!= @TO@ InfixExpression@@cause != null @AT@ 3538 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@cause != null @AT@ 3542 @LENGTH@ 4
------------------INS Block@@ThenBody:{  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} @TO@ IfStatement@@if (cause != null) {  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} else {  throw e;} @AT@ 3548 @LENGTH@ 226
---------------------INS IfStatement@@if (cause instanceof Exception) {  throw (Exception)cause;} else {  throw new RuntimeException(e);} @TO@ Block@@ThenBody:{  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} @AT@ 3570 @LENGTH@ 186
------------------------INS InstanceofExpression@@cause instanceof Exception @TO@ IfStatement@@if (cause instanceof Exception) {  throw (Exception)cause;} else {  throw new RuntimeException(e);} @AT@ 3573 @LENGTH@ 26
---------------------------INS SimpleName@@cause @TO@ InstanceofExpression@@cause instanceof Exception @AT@ 3573 @LENGTH@ 5
---------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@cause instanceof Exception @AT@ 3579 @LENGTH@ 10
---------------------------INS SimpleType@@Exception @TO@ InstanceofExpression@@cause instanceof Exception @AT@ 3590 @LENGTH@ 9
------------------------INS Block@@ThenBody:{  throw (Exception)cause;} @TO@ IfStatement@@if (cause instanceof Exception) {  throw (Exception)cause;} else {  throw new RuntimeException(e);} @AT@ 3601 @LENGTH@ 71
---------------------------INS ThrowStatement@@CastExpression:(Exception)cause @TO@ Block@@ThenBody:{  throw (Exception)cause;} @AT@ 3627 @LENGTH@ 23
------------------------------INS CastExpression@@(Exception)cause @TO@ ThrowStatement@@CastExpression:(Exception)cause @AT@ 3633 @LENGTH@ 16
---------------------------------INS SimpleType@@Exception @TO@ CastExpression@@(Exception)cause @AT@ 3634 @LENGTH@ 9
---------------------------------INS SimpleName@@cause @TO@ CastExpression@@(Exception)cause @AT@ 3644 @LENGTH@ 5
------------------------INS Block@@ElseBody:{  throw new RuntimeException(e);} @TO@ IfStatement@@if (cause instanceof Exception) {  throw (Exception)cause;} else {  throw new RuntimeException(e);} @AT@ 3678 @LENGTH@ 78
---------------------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ Block@@ElseBody:{  throw new RuntimeException(e);} @AT@ 3704 @LENGTH@ 30
------------------------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 3710 @LENGTH@ 23
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3710 @LENGTH@ 3
---------------------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3714 @LENGTH@ 16
---------------------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 3731 @LENGTH@ 1
------------------INS Block@@ElseBody:{  throw e;} @TO@ IfStatement@@if (cause != null) {  if (cause instanceof Exception) {    throw (Exception)cause;  } else {    throw new RuntimeException(e);  }} else {  throw e;} @AT@ 3780 @LENGTH@ 48
---------------------INS ThrowStatement@@SimpleName:e @TO@ Block@@ElseBody:{  throw e;} @AT@ 3802 @LENGTH@ 8
------------------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 3808 @LENGTH@ 1
------INS Block@@ElseBody:{  return invokeInternal(method,params);} @TO@ IfStatement@@if (WildFlySecurityManager.isChecking()) {  try {    return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){      @Override public Object run() throws Exception {        return invokeInternal(method,params);      }    });  } catch (  PrivilegedActionException e) {    Throwable cause=e.getCause();    if (cause != null) {      if (cause instanceof Exception) {        throw (Exception)cause;      } else {        throw new RuntimeException(e);      }    } else {      throw e;    }  }} else {  return invokeInternal(method,params);} @AT@ 3858 @LENGTH@ 62
---------INS ReturnStatement@@MethodInvocation:invokeInternal(method,params) @TO@ Block@@ElseBody:{  return invokeInternal(method,params);} @AT@ 3872 @LENGTH@ 38
------------INS MethodInvocation@@invokeInternal(method,params) @TO@ ReturnStatement@@MethodInvocation:invokeInternal(method,params) @AT@ 3879 @LENGTH@ 30
---------------INS SimpleName@@MethodName:invokeInternal:[method, params] @TO@ MethodInvocation@@invokeInternal(method,params) @AT@ 3879 @LENGTH@ 30
------------------INS SimpleName@@method @TO@ SimpleName@@MethodName:invokeInternal:[method, params] @AT@ 3894 @LENGTH@ 6
------------------INS SimpleName@@params @TO@ SimpleName@@MethodName:invokeInternal:[method, params] @AT@ 3902 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:FileUtils.waitForFiles(auditLogFile,jmxLogFile) @TO@ MethodDeclaration@@public, void, MethodName:testBootIsLogged, Exception,  @AT@ 3343 @LENGTH@ 49
---INS MethodInvocation@@FileUtils.waitForFiles(auditLogFile,jmxLogFile) @TO@ ExpressionStatement@@MethodInvocation:FileUtils.waitForFiles(auditLogFile,jmxLogFile) @AT@ 3343 @LENGTH@ 48
------INS SimpleName@@Name:FileUtils @TO@ MethodInvocation@@FileUtils.waitForFiles(auditLogFile,jmxLogFile) @AT@ 3343 @LENGTH@ 9
------INS SimpleName@@MethodName:waitForFiles:[auditLogFile, jmxLogFile] @TO@ MethodInvocation@@FileUtils.waitForFiles(auditLogFile,jmxLogFile) @AT@ 3353 @LENGTH@ 38
---------INS SimpleName@@auditLogFile @TO@ SimpleName@@MethodName:waitForFiles:[auditLogFile, jmxLogFile] @AT@ 3366 @LENGTH@ 12
---------INS SimpleName@@jmxLogFile @TO@ SimpleName@@MethodName:waitForFiles:[auditLogFile, jmxLogFile] @AT@ 3380 @LENGTH@ 10


UPD IfStatement@@if (parentOps == null) {  return (TableScanOperator)currOp;} @TO@ if ((parentOps == null) || (parentOps.isEmpty())) {  return (TableScanOperator)currOp;} @AT@ 9610 @LENGTH@ 75
---INS InfixExpression@@(parentOps == null) || (parentOps.isEmpty()) @TO@ IfStatement@@if (parentOps == null) {  return (TableScanOperator)currOp;} @AT@ 9614 @LENGTH@ 44
------INS ParenthesizedExpression@@(parentOps == null) @TO@ InfixExpression@@(parentOps == null) || (parentOps.isEmpty()) @AT@ 9614 @LENGTH@ 19
---------INS InfixExpression@@parentOps == null @TO@ ParenthesizedExpression@@(parentOps == null) @AT@ 9615 @LENGTH@ 17
------------MOV SimpleName@@parentOps @TO@ InfixExpression@@parentOps == null @AT@ 9614 @LENGTH@ 9
------------MOV Operator@@== @TO@ InfixExpression@@parentOps == null @AT@ 9623 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@parentOps == null @AT@ 9627 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@(parentOps == null) || (parentOps.isEmpty()) @AT@ 9633 @LENGTH@ 2
------INS ParenthesizedExpression@@(parentOps.isEmpty()) @TO@ InfixExpression@@(parentOps == null) || (parentOps.isEmpty()) @AT@ 9637 @LENGTH@ 21
---------INS MethodInvocation@@parentOps.isEmpty() @TO@ ParenthesizedExpression@@(parentOps.isEmpty()) @AT@ 9638 @LENGTH@ 19
------------INS SimpleName@@Name:parentOps @TO@ MethodInvocation@@parentOps.isEmpty() @AT@ 9638 @LENGTH@ 9
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@parentOps.isEmpty() @AT@ 9648 @LENGTH@ 9
---DEL InfixExpression@@parentOps == null @AT@ 9614 @LENGTH@ 17


UPD IfStatement@@if (service.requiresReload()) {  throw MESSAGES.serverRequiresReload();} @TO@ if (service.requiresRestart()) {  throw MESSAGES.serverRequiresRestart();} @AT@ 2795 @LENGTH@ 92
---UPD MethodInvocation@@service.requiresReload() @TO@ service.requiresRestart() @AT@ 2799 @LENGTH@ 24
------UPD SimpleName@@MethodName:requiresReload:[] @TO@ MethodName:requiresRestart:[] @AT@ 2807 @LENGTH@ 16
---UPD Block@@ThenBody:{  throw MESSAGES.serverRequiresReload();} @TO@ ThenBody:{  throw MESSAGES.serverRequiresRestart();} @AT@ 2825 @LENGTH@ 62
------UPD ThrowStatement@@MethodInvocation:MESSAGES.serverRequiresReload() @TO@ MethodInvocation:MESSAGES.serverRequiresRestart() @AT@ 2839 @LENGTH@ 38
---------UPD MethodInvocation@@MESSAGES.serverRequiresReload() @TO@ MESSAGES.serverRequiresRestart() @AT@ 2845 @LENGTH@ 31
------------UPD SimpleName@@MethodName:serverRequiresReload:[] @TO@ MethodName:serverRequiresRestart:[] @AT@ 2854 @LENGTH@ 22


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Failed to parse %s",url),e) @TO@ MethodInvocation:InfinispanMessages.MESSAGES.failedToParse(e,url) @AT@ 6627 @LENGTH@ 77
---DEL ClassInstanceCreation@@IllegalStateException[String.format("Failed to parse %s",url), e] @AT@ 6633 @LENGTH@ 70
------DEL New@@new @AT@ 6633 @LENGTH@ 3
------DEL SimpleType@@IllegalStateException @AT@ 6637 @LENGTH@ 21
------DEL MethodInvocation@@String.format("Failed to parse %s",url) @AT@ 6659 @LENGTH@ 40
---------DEL SimpleName@@Name:String @AT@ 6659 @LENGTH@ 6
------DEL SimpleName@@e @AT@ 6701 @LENGTH@ 1
---INS MethodInvocation@@InfinispanMessages.MESSAGES.failedToParse(e,url) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Failed to parse %s",url),e) @AT@ 6633 @LENGTH@ 49
------INS QualifiedName@@Name:InfinispanMessages.MESSAGES @TO@ MethodInvocation@@InfinispanMessages.MESSAGES.failedToParse(e,url) @AT@ 6633 @LENGTH@ 27
------MOV SimpleName@@MethodName:format:["Failed to parse %s", url] @TO@ MethodInvocation@@InfinispanMessages.MESSAGES.failedToParse(e,url) @AT@ 6666 @LENGTH@ 33
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:format:["Failed to parse %s", url] @AT@ 6675 @LENGTH@ 1


UPD FieldDeclaration@@private, static, int, [errors=0] @TO@ private, static, int, [errors] @AT@ 1122 @LENGTH@ 30
---UPD VariableDeclarationFragment@@errors=0 @TO@ errors @AT@ 1141 @LENGTH@ 10
------DEL NumberLiteral@@0 @AT@ 1150 @LENGTH@ 1


UPD VariableDeclarationStatement@@Link fatherLink=linkDiscoverer.findLinkWithRel("father",s); @TO@ Link fatherLink=linkDiscoverer.findLinkWithRel("people.people.father",s); @AT@ 2369 @LENGTH@ 62
---UPD VariableDeclarationFragment@@fatherLink=linkDiscoverer.findLinkWithRel("father",s) @TO@ fatherLink=linkDiscoverer.findLinkWithRel("people.people.father",s) @AT@ 2374 @LENGTH@ 56
------UPD MethodInvocation@@linkDiscoverer.findLinkWithRel("father",s) @TO@ linkDiscoverer.findLinkWithRel("people.people.father",s) @AT@ 2387 @LENGTH@ 43
---------UPD SimpleName@@MethodName:findLinkWithRel:["father", s] @TO@ MethodName:findLinkWithRel:["people.people.father", s] @AT@ 2402 @LENGTH@ 28
------------UPD StringLiteral@@"father" @TO@ "people.people.father" @AT@ 2418 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:decorated().removeAll(coll) @TO@ MethodInvocation:decorated().removeAll(null) @AT@ 4494 @LENGTH@ 35
---UPD MethodInvocation@@decorated().removeAll(coll) @TO@ decorated().removeAll(null) @AT@ 4501 @LENGTH@ 27
------UPD SimpleName@@MethodName:removeAll:[coll] @TO@ MethodName:removeAll:[null] @AT@ 4513 @LENGTH@ 15
---------DEL SimpleName@@coll @AT@ 4523 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:removeAll:[coll] @AT@ 4593 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2Exception("An authorization code must be supplied.") @TO@ ClassInstanceCreation:new InvalidRequestException("An authorization code must be supplied.") @AT@ 2800 @LENGTH@ 69
---UPD ClassInstanceCreation@@OAuth2Exception["An authorization code must be supplied."] @TO@ InvalidRequestException["An authorization code must be supplied."] @AT@ 2806 @LENGTH@ 62
------UPD SimpleType@@OAuth2Exception @TO@ InvalidRequestException @AT@ 2810 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:operation.get(GlobalOperationHandlers.VALUE.getName()).set(new ModelNode()) @TO@ MethodInvocation:operation.get(VALUE.getName()).set(new ModelNode()) @AT@ 2268 @LENGTH@ 76
---UPD MethodInvocation@@operation.get(GlobalOperationHandlers.VALUE.getName()).set(new ModelNode()) @TO@ operation.get(VALUE.getName()).set(new ModelNode()) @AT@ 2268 @LENGTH@ 75
------UPD MethodInvocation@@MethodName:get:[GlobalOperationHandlers.VALUE.getName()] @TO@ MethodName:get:[VALUE.getName()] @AT@ 2268 @LENGTH@ 54
---------UPD MethodInvocation@@GlobalOperationHandlers.VALUE.getName() @TO@ VALUE.getName() @AT@ 2282 @LENGTH@ 39
------------DEL QualifiedName@@Name:GlobalOperationHandlers.VALUE @AT@ 2282 @LENGTH@ 29
------------INS SimpleName@@Name:VALUE @TO@ MethodInvocation@@GlobalOperationHandlers.VALUE.getName() @AT@ 2436 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:history.get(CommonAttributes.APPLIED_AT).set(timestamp) @TO@ MethodInvocation:history.get(Constants.APPLIED_AT).set(timestamp) @AT@ 3580 @LENGTH@ 56
---UPD MethodInvocation@@history.get(CommonAttributes.APPLIED_AT).set(timestamp) @TO@ history.get(Constants.APPLIED_AT).set(timestamp) @AT@ 3580 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:get:[CommonAttributes.APPLIED_AT] @TO@ MethodName:get:[Constants.APPLIED_AT] @AT@ 3580 @LENGTH@ 40
---------UPD QualifiedName@@CommonAttributes.APPLIED_AT @TO@ Constants.APPLIED_AT @AT@ 3592 @LENGTH@ 27
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 3592 @LENGTH@ 16


INS IfStatement@@if (started.compareAndSet(true,false)) {  destroyCache();} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:stop,  @AT@ 4469 @LENGTH@ 79
---INS MethodInvocation@@started.compareAndSet(true,false) @TO@ IfStatement@@if (started.compareAndSet(true,false)) {  destroyCache();} @AT@ 4473 @LENGTH@ 34
------INS SimpleName@@Name:started @TO@ MethodInvocation@@started.compareAndSet(true,false) @AT@ 4473 @LENGTH@ 7
------INS SimpleName@@MethodName:compareAndSet:[true, false] @TO@ MethodInvocation@@started.compareAndSet(true,false) @AT@ 4481 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:compareAndSet:[true, false] @AT@ 4495 @LENGTH@ 4
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:compareAndSet:[true, false] @AT@ 4501 @LENGTH@ 5
---INS Block@@ThenBody:{  destroyCache();} @TO@ IfStatement@@if (started.compareAndSet(true,false)) {  destroyCache();} @AT@ 4509 @LENGTH@ 39
------INS ExpressionStatement@@MethodInvocation:destroyCache() @TO@ Block@@ThenBody:{  destroyCache();} @AT@ 4523 @LENGTH@ 15
---------MOV MethodInvocation@@MethodName:destroyCache:[] @TO@ ExpressionStatement@@MethodInvocation:destroyCache() @AT@ 4469 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ MethodInvocation:exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())) @AT@ 6790 @LENGTH@ 110
---UPD MethodInvocation@@exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)) @TO@ exchange.setException(new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())) @AT@ 6790 @LENGTH@ 109
------UPD SimpleName@@MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)] @TO@ MethodName:setException:[new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())] @AT@ 6799 @LENGTH@ 100
---------UPD ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @TO@ CamelExchangeException["JettyClient failed with state " + exchangeState, exchange, exchange.getException()] @AT@ 6812 @LENGTH@ 86
------------INS MethodInvocation@@exchange.getException() @TO@ ClassInstanceCreation@@CamelExchangeException["JettyClient failed with state " + exchangeState, exchange] @AT@ 6899 @LENGTH@ 23
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 6899 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 6908 @LENGTH@ 14


UPD ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("remove() method not supported for an NodeListIterator.") @TO@ ClassInstanceCreation:new UnsupportedOperationException("remove() method not supported for a NodeListIterator.") @AT@ 2736 @LENGTH@ 98
---UPD ClassInstanceCreation@@UnsupportedOperationException["remove() method not supported for an NodeListIterator."] @TO@ UnsupportedOperationException["remove() method not supported for a NodeListIterator."] @AT@ 2742 @LENGTH@ 91
------UPD StringLiteral@@"remove() method not supported for an NodeListIterator." @TO@ "remove() method not supported for a NodeListIterator." @AT@ 2776 @LENGTH@ 56


INS ExpressionStatement@@MethodInvocation:removeJNDIAliases(context,model.require(ENTRIES.getName()).asList()) @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 2936 @LENGTH@ 70
---INS MethodInvocation@@removeJNDIAliases(context,model.require(ENTRIES.getName()).asList()) @TO@ ExpressionStatement@@MethodInvocation:removeJNDIAliases(context,model.require(ENTRIES.getName()).asList()) @AT@ 2936 @LENGTH@ 69
------INS SimpleName@@MethodName:removeJNDIAliases:[context, model.require(ENTRIES.getName()).asList()] @TO@ MethodInvocation@@removeJNDIAliases(context,model.require(ENTRIES.getName()).asList()) @AT@ 2936 @LENGTH@ 69
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:removeJNDIAliases:[context, model.require(ENTRIES.getName()).asList()] @AT@ 2954 @LENGTH@ 7
---------INS MethodInvocation@@model.require(ENTRIES.getName()).asList() @TO@ SimpleName@@MethodName:removeJNDIAliases:[context, model.require(ENTRIES.getName()).asList()] @AT@ 2963 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:require:[ENTRIES.getName()] @TO@ MethodInvocation@@model.require(ENTRIES.getName()).asList() @AT@ 2963 @LENGTH@ 32
---------------INS MethodInvocation@@ENTRIES.getName() @TO@ MethodInvocation@@MethodName:require:[ENTRIES.getName()] @AT@ 2977 @LENGTH@ 17
------------------INS SimpleName@@Name:ENTRIES @TO@ MethodInvocation@@ENTRIES.getName() @AT@ 2977 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ENTRIES.getName() @AT@ 2985 @LENGTH@ 9
------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.require(ENTRIES.getName()).asList() @AT@ 2963 @LENGTH@ 5
------------INS SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@model.require(ENTRIES.getName()).asList() @AT@ 2996 @LENGTH@ 8


UPD IfStatement@@if (child.exists()) {  String pathNameRelativeToRoot;  try {    pathNameRelativeToRoot=child.getPathNameRelativeTo(deploymentRoot);  } catch (  IllegalArgumentException e) {    throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(child.getPathName(),deploymentRoot.getPathName()),e);  }  final TldMetaData value=parseTLD(child);  value.setUri(tld.getTaglibUri());  uniqueTlds.add(value);  String key="/" + pathNameRelativeToRoot;  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  found=true;  break;} @TO@ if (child.exists()) {  String pathNameRelativeToRoot;  try {    pathNameRelativeToRoot=child.getPathNameRelativeTo(deploymentRoot);  } catch (  IllegalArgumentException e) {    throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(child.getPathName(),deploymentRoot.getPathName()),e);  }  final TldMetaData value=parseTLD(child);  value.setUri(tld.getTaglibUri());  uniqueTlds.add(value);  String key="/" + pathNameRelativeToRoot;  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  if (!tlds.containsKey(tld.getTaglibUri())) {    tlds.put(tld.getTaglibUri(),value);  }  found=true;  break;} @AT@ 4829 @LENGTH@ 952
---UPD Block@@ThenBody:{  String pathNameRelativeToRoot;  try {    pathNameRelativeToRoot=child.getPathNameRelativeTo(deploymentRoot);  } catch (  IllegalArgumentException e) {    throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(child.getPathName(),deploymentRoot.getPathName()),e);  }  final TldMetaData value=parseTLD(child);  value.setUri(tld.getTaglibUri());  uniqueTlds.add(value);  String key="/" + pathNameRelativeToRoot;  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  found=true;  break;} @TO@ ThenBody:{  String pathNameRelativeToRoot;  try {    pathNameRelativeToRoot=child.getPathNameRelativeTo(deploymentRoot);  } catch (  IllegalArgumentException e) {    throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(child.getPathName(),deploymentRoot.getPathName()),e);  }  final TldMetaData value=parseTLD(child);  value.setUri(tld.getTaglibUri());  uniqueTlds.add(value);  String key="/" + pathNameRelativeToRoot;  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  if (!tlds.containsKey(tld.getTaglibUri())) {    tlds.put(tld.getTaglibUri(),value);  }  found=true;  break;} @AT@ 4849 @LENGTH@ 932
------INS IfStatement@@if (!tlds.containsKey(tld.getTaglibUri())) {  tlds.put(tld.getTaglibUri(),value);} @TO@ Block@@ThenBody:{  String pathNameRelativeToRoot;  try {    pathNameRelativeToRoot=child.getPathNameRelativeTo(deploymentRoot);  } catch (  IllegalArgumentException e) {    throw new DeploymentUnitProcessingException(MESSAGES.tldFileNotContainedInRoot(child.getPathName(),deploymentRoot.getPathName()),e);  }  final TldMetaData value=parseTLD(child);  value.setUri(tld.getTaglibUri());  uniqueTlds.add(value);  String key="/" + pathNameRelativeToRoot;  if (!tlds.containsKey(key)) {    tlds.put(key,value);  }  found=true;  break;} @AT@ 5715 @LENGTH@ 135
---------INS PrefixExpression@@!tlds.containsKey(tld.getTaglibUri()) @TO@ IfStatement@@if (!tlds.containsKey(tld.getTaglibUri())) {  tlds.put(tld.getTaglibUri(),value);} @AT@ 5719 @LENGTH@ 37
------------INS Operator@@! @TO@ PrefixExpression@@!tlds.containsKey(tld.getTaglibUri()) @AT@ 5719 @LENGTH@ 1
------------INS MethodInvocation@@tlds.containsKey(tld.getTaglibUri()) @TO@ PrefixExpression@@!tlds.containsKey(tld.getTaglibUri()) @AT@ 5720 @LENGTH@ 36
---------------INS SimpleName@@Name:tlds @TO@ MethodInvocation@@tlds.containsKey(tld.getTaglibUri()) @AT@ 5720 @LENGTH@ 4
---------------INS SimpleName@@MethodName:containsKey:[tld.getTaglibUri()] @TO@ MethodInvocation@@tlds.containsKey(tld.getTaglibUri()) @AT@ 5725 @LENGTH@ 31
------------------INS MethodInvocation@@tld.getTaglibUri() @TO@ SimpleName@@MethodName:containsKey:[tld.getTaglibUri()] @AT@ 5737 @LENGTH@ 18
---------------------INS SimpleName@@Name:tld @TO@ MethodInvocation@@tld.getTaglibUri() @AT@ 5737 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getTaglibUri:[] @TO@ MethodInvocation@@tld.getTaglibUri() @AT@ 5741 @LENGTH@ 14
---------INS Block@@ThenBody:{  tlds.put(tld.getTaglibUri(),value);} @TO@ IfStatement@@if (!tlds.containsKey(tld.getTaglibUri())) {  tlds.put(tld.getTaglibUri(),value);} @AT@ 5758 @LENGTH@ 92
------------INS ExpressionStatement@@MethodInvocation:tlds.put(tld.getTaglibUri(),value) @TO@ Block@@ThenBody:{  tlds.put(tld.getTaglibUri(),value);} @AT@ 5788 @LENGTH@ 36
---------------INS MethodInvocation@@tlds.put(tld.getTaglibUri(),value) @TO@ ExpressionStatement@@MethodInvocation:tlds.put(tld.getTaglibUri(),value) @AT@ 5788 @LENGTH@ 35
------------------INS SimpleName@@Name:tlds @TO@ MethodInvocation@@tlds.put(tld.getTaglibUri(),value) @AT@ 5788 @LENGTH@ 4
------------------INS SimpleName@@MethodName:put:[tld.getTaglibUri(), value] @TO@ MethodInvocation@@tlds.put(tld.getTaglibUri(),value) @AT@ 5793 @LENGTH@ 30
---------------------INS MethodInvocation@@tld.getTaglibUri() @TO@ SimpleName@@MethodName:put:[tld.getTaglibUri(), value] @AT@ 5797 @LENGTH@ 18
------------------------INS SimpleName@@Name:tld @TO@ MethodInvocation@@tld.getTaglibUri() @AT@ 5797 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:getTaglibUri:[] @TO@ MethodInvocation@@tld.getTaglibUri() @AT@ 5801 @LENGTH@ 14
---------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[tld.getTaglibUri(), value] @AT@ 5817 @LENGTH@ 5


UPD TypeDeclaration@@[public]ProfileRepository, [CrudRepository<Profile,String>] @TO@ [public]ProfileRepository, [PagingAndSortingRepository<Profile,String>] @AT@ 146 @LENGTH@ 78
---UPD ParameterizedType@@CrudRepository<Profile,String> @TO@ PagingAndSortingRepository<Profile,String> @AT@ 189 @LENGTH@ 31
------UPD SimpleType@@CrudRepository @TO@ PagingAndSortingRepository @AT@ 189 @LENGTH@ 14


UPD FieldDeclaration@@private, final, List<ExecutorService>, [executorServices=new ArrayList<ExecutorService>()] @TO@ private, final, List<ExecutorService>, [executorServices=new CopyOnWriteArrayList<ExecutorService>()] @AT@ 2625 @LENGTH@ 88
---UPD VariableDeclarationFragment@@executorServices=new ArrayList<ExecutorService>() @TO@ executorServices=new CopyOnWriteArrayList<ExecutorService>() @AT@ 2661 @LENGTH@ 51
------UPD ClassInstanceCreation@@ArrayList<ExecutorService>[] @TO@ CopyOnWriteArrayList<ExecutorService>[] @AT@ 2680 @LENGTH@ 32
---------UPD ParameterizedType@@ArrayList<ExecutorService> @TO@ CopyOnWriteArrayList<ExecutorService> @AT@ 2684 @LENGTH@ 26
------------UPD SimpleType@@ArrayList @TO@ CopyOnWriteArrayList @AT@ 2684 @LENGTH@ 9


UPD VariableDeclarationStatement@@final String childType=GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString(); @TO@ final String childType=CHILD_TYPE.resolveModelAttribute(context,operation).asString(); @AT@ 3456 @LENGTH@ 113
---UPD VariableDeclarationFragment@@childType=GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @TO@ childType=CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3469 @LENGTH@ 99
------UPD MethodInvocation@@GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @TO@ CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3481 @LENGTH@ 87
---------DEL QualifiedName@@Name:GlobalOperationHandlers.CHILD_TYPE @AT@ 3481 @LENGTH@ 34
---------INS SimpleName@@Name:CHILD_TYPE @TO@ MethodInvocation@@GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3550 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[public]LettuceConnectionPipelineTxIntegrationTests, LettuceConnectionTransactionIntegrationTests @AT@ 1383 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 1383 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 1390 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 1395 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 1426 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 1426 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 1432 @LENGTH@ 24


UPD TypeDeclaration@@[public]ContextSourceTransactionManager, AbstractPlatformTransactionManager @TO@ [public]ContextSourceTransactionManager, AbstractPlatformTransactionManager[InitializingBean] @AT@ 6100 @LENGTH@ 2871
---INS SimpleType@@InitializingBean @TO@ TypeDeclaration@@[public]ContextSourceTransactionManager, AbstractPlatformTransactionManager @AT@ 6268 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:Provision.waitForContainerAlive(containers,false,6 * DEFAULT_TIMEOUT) @TO@ MethodInvocation:Provision.containersAlive(containers,false,6 * DEFAULT_TIMEOUT) @AT@ 5217 @LENGTH@ 72
---UPD MethodInvocation@@Provision.waitForContainerAlive(containers,false,6 * DEFAULT_TIMEOUT) @TO@ Provision.containersAlive(containers,false,6 * DEFAULT_TIMEOUT) @AT@ 5217 @LENGTH@ 71
------UPD SimpleName@@MethodName:waitForContainerAlive:[containers, false, 6 * DEFAULT_TIMEOUT] @TO@ MethodName:containersAlive:[containers, false, 6 * DEFAULT_TIMEOUT] @AT@ 5227 @LENGTH@ 61


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[public]SalesforceException, CamelException @AT@ 1106 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1106 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1114 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1121 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1127 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1132 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1132 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1151 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @TO@ TypeDeclaration@@[public]Hadoop23Shims, HadoopShimsSecure @AT@ 4935 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4935 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4942 @LENGTH@ 4
---INS SimpleName@@MethodName:setTotalOrderPartitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4947 @LENGTH@ 26
---INS SingleVariableDeclaration@@JobConf jobConf @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4974 @LENGTH@ 15
------INS SimpleType@@JobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 4974 @LENGTH@ 7
------INS SimpleName@@jobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 4982 @LENGTH@ 7
---INS SingleVariableDeclaration@@Path partitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4991 @LENGTH@ 18
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 4991 @LENGTH@ 4
------INS SimpleName@@partitionFile @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 4996 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 5016 @LENGTH@ 63
------INS MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 5016 @LENGTH@ 62
---------INS SimpleName@@Name:TotalOrderPartitioner @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 5016 @LENGTH@ 21
---------INS SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 5038 @LENGTH@ 40
------------INS SimpleName@@jobConf @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 5055 @LENGTH@ 7
------------INS SimpleName@@partitionFile @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 5064 @LENGTH@ 13


UPD FieldDeclaration@@private, final, Map<String,ThreadPoolProfile>, [threadPoolProfiles=new HashMap<String,ThreadPoolProfile>()] @TO@ private, final, Map<String,ThreadPoolProfile>, [threadPoolProfiles=new ConcurrentHashMap<String,ThreadPoolProfile>()] @AT@ 2883 @LENGTH@ 107
---UPD VariableDeclarationFragment@@threadPoolProfiles=new HashMap<String,ThreadPoolProfile>() @TO@ threadPoolProfiles=new ConcurrentHashMap<String,ThreadPoolProfile>() @AT@ 2928 @LENGTH@ 61
------UPD ClassInstanceCreation@@HashMap<String,ThreadPoolProfile>[] @TO@ ConcurrentHashMap<String,ThreadPoolProfile>[] @AT@ 2949 @LENGTH@ 40
---------UPD ParameterizedType@@HashMap<String,ThreadPoolProfile> @TO@ ConcurrentHashMap<String,ThreadPoolProfile> @AT@ 2953 @LENGTH@ 34
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 2953 @LENGTH@ 7


DEL MethodDeclaration@@public, voidMethodName:CommandExecutionException, String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace,  @AT@ 455 @LENGTH@ 198
---DEL Modifier@@public @AT@ 455 @LENGTH@ 6
---DEL SimpleName@@MethodName:CommandExecutionException @AT@ 462 @LENGTH@ 25
---DEL SingleVariableDeclaration@@String message @AT@ 488 @LENGTH@ 14
------DEL SimpleType@@String @AT@ 488 @LENGTH@ 6
------DEL SimpleName@@message @AT@ 495 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Throwable cause @AT@ 504 @LENGTH@ 15
------DEL SimpleType@@Throwable @AT@ 504 @LENGTH@ 9
------DEL SimpleName@@cause @AT@ 514 @LENGTH@ 5
---DEL SingleVariableDeclaration@@boolean enableSuppression @AT@ 521 @LENGTH@ 25
------DEL PrimitiveType@@boolean @AT@ 521 @LENGTH@ 7
------DEL SimpleName@@enableSuppression @AT@ 529 @LENGTH@ 17
---DEL SingleVariableDeclaration@@boolean writableStackTrace @AT@ 548 @LENGTH@ 26
------DEL PrimitiveType@@boolean @AT@ 548 @LENGTH@ 7
------DEL SimpleName@@writableStackTrace @AT@ 556 @LENGTH@ 18
---DEL SuperConstructorInvocation@@super(message,cause,enableSuppression,writableStackTrace);
 @AT@ 586 @LENGTH@ 61
------DEL SimpleName@@message @AT@ 592 @LENGTH@ 7
------DEL SimpleName@@cause @AT@ 601 @LENGTH@ 5
------DEL SimpleName@@enableSuppression @AT@ 608 @LENGTH@ 17
------DEL SimpleName@@writableStackTrace @AT@ 627 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:channel.queueDeclare(endpoint.getQueue(),true,false,false,null) @TO@ MethodInvocation:channel.queueDeclare(endpoint.getQueue(),endpoint.isDurable(),false,endpoint.isAutoDelete(),null) @AT@ 2176 @LENGTH@ 68
---UPD MethodInvocation@@channel.queueDeclare(endpoint.getQueue(),true,false,false,null) @TO@ channel.queueDeclare(endpoint.getQueue(),endpoint.isDurable(),false,endpoint.isAutoDelete(),null) @AT@ 2176 @LENGTH@ 67
------UPD SimpleName@@MethodName:queueDeclare:[endpoint.getQueue(), true, false, false, null] @TO@ MethodName:queueDeclare:[endpoint.getQueue(), endpoint.isDurable(), false, endpoint.isAutoDelete(), null] @AT@ 2184 @LENGTH@ 59
---------DEL BooleanLiteral@@true @AT@ 2218 @LENGTH@ 4
---------DEL BooleanLiteral@@false @AT@ 2231 @LENGTH@ 5
---------INS MethodInvocation@@endpoint.isDurable() @TO@ SimpleName@@MethodName:queueDeclare:[endpoint.getQueue(), true, false, false, null] @AT@ 2306 @LENGTH@ 20
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isDurable() @AT@ 2306 @LENGTH@ 8
------------INS SimpleName@@MethodName:isDurable:[] @TO@ MethodInvocation@@endpoint.isDurable() @AT@ 2315 @LENGTH@ 11
---------INS MethodInvocation@@endpoint.isAutoDelete() @TO@ SimpleName@@MethodName:queueDeclare:[endpoint.getQueue(), true, false, false, null] @AT@ 2335 @LENGTH@ 23
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isAutoDelete() @AT@ 2335 @LENGTH@ 8
------------INS SimpleName@@MethodName:isAutoDelete:[] @TO@ MethodInvocation@@endpoint.isAutoDelete() @AT@ 2344 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:System.setProperty("CamelSedaPollTimeout","10") @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1368 @LENGTH@ 49
---INS MethodInvocation@@System.setProperty("CamelSedaPollTimeout","10") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("CamelSedaPollTimeout","10") @AT@ 1368 @LENGTH@ 48
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("CamelSedaPollTimeout","10") @AT@ 1368 @LENGTH@ 6
------INS SimpleName@@MethodName:setProperty:["CamelSedaPollTimeout", "10"] @TO@ MethodInvocation@@System.setProperty("CamelSedaPollTimeout","10") @AT@ 1375 @LENGTH@ 41
---------INS StringLiteral@@"CamelSedaPollTimeout" @TO@ SimpleName@@MethodName:setProperty:["CamelSedaPollTimeout", "10"] @AT@ 1387 @LENGTH@ 22
---------INS StringLiteral@@"10" @TO@ SimpleName@@MethodName:setProperty:["CamelSedaPollTimeout", "10"] @AT@ 1411 @LENGTH@ 4


UPD Block@@ElseBody:if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
---UPD IfStatement@@if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
------UPD Block@@ElseBody:if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---UPD IfStatement@@if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
------UPD Block@@ElseBody:if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17


DEL VariableDeclarationStatement@@byte[] bytes=recordText.getBytes(); @AT@ 4554 @LENGTH@ 37
---DEL ArrayType@@byte[] @AT@ 4554 @LENGTH@ 6
------DEL PrimitiveType@@byte @AT@ 4554 @LENGTH@ 4
---DEL VariableDeclarationFragment@@bytes=recordText.getBytes() @AT@ 4561 @LENGTH@ 29
------DEL SimpleName@@bytes @AT@ 4561 @LENGTH@ 5
------DEL MethodInvocation@@recordText.getBytes() @AT@ 4569 @LENGTH@ 21
---------DEL SimpleName@@Name:recordText @AT@ 4569 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getBytes:[] @AT@ 4580 @LENGTH@ 10


UPD Block@@ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  if (params.isAlphabetic()) {    arrays.add(ALPHA);  }} @TO@ ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  Boolean isAlpha=params.isAlphabetic();  if (isAlpha != null && isAlpha) {    arrays.add(ALPHA);  }} @AT@ 7612 @LENGTH@ 580
---UPD IfStatement@@if (params.isAlphabetic()) {  arrays.add(ALPHA);} @TO@ if (isAlpha != null && isAlpha) {  arrays.add(ALPHA);} @AT@ 8131 @LENGTH@ 56
------DEL MethodInvocation@@params.isAlphabetic() @AT@ 8135 @LENGTH@ 21
---------DEL SimpleName@@Name:params @AT@ 8135 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isAlphabetic:[] @AT@ 8142 @LENGTH@ 14
------INS InfixExpression@@isAlpha != null && isAlpha @TO@ IfStatement@@if (params.isAlphabetic()) {  arrays.add(ALPHA);} @AT@ 8179 @LENGTH@ 26
---------INS InfixExpression@@isAlpha != null @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 8179 @LENGTH@ 15
------------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null @AT@ 8179 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@isAlpha != null @AT@ 8186 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@isAlpha != null @AT@ 8190 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 8194 @LENGTH@ 2
---------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 8198 @LENGTH@ 7
---INS VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @TO@ Block@@ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  if (params.isAlphabetic()) {    arrays.add(ALPHA);  }} @AT@ 8131 @LENGTH@ 40
------INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 8131 @LENGTH@ 7
------INS VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 8139 @LENGTH@ 31
---------INS SimpleName@@isAlpha @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 8139 @LENGTH@ 7
---------INS MethodInvocation@@params.isAlphabetic() @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 8149 @LENGTH@ 21
------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 8149 @LENGTH@ 6
------------INS SimpleName@@MethodName:isAlphabetic:[] @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 8156 @LENGTH@ 14


UPD VariableDeclarationStatement@@UriComponents uri=builder.replaceQueryParam("code").build(true); @TO@ UriComponents uri=null; @AT@ 4637 @LENGTH@ 66
---UPD VariableDeclarationFragment@@uri=builder.replaceQueryParam("code").build(true) @TO@ uri=null @AT@ 4651 @LENGTH@ 51
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@uri=builder.replaceQueryParam("code").build(true) @AT@ 4657 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:domain.registerSubResource(CoreManagementResourceDefinition.PATH_ELEMENT,true) @TO@ MethodDeclaration@@private, static, void, MethodName:initializeDomainRegistryEAP60, TransformerRegistry registry, ModelVersion modelVersion,  @AT@ 3731 @LENGTH@ 80
---INS MethodInvocation@@domain.registerSubResource(CoreManagementResourceDefinition.PATH_ELEMENT,true) @TO@ ExpressionStatement@@MethodInvocation:domain.registerSubResource(CoreManagementResourceDefinition.PATH_ELEMENT,true) @AT@ 3731 @LENGTH@ 79
------INS SimpleName@@Name:domain @TO@ MethodInvocation@@domain.registerSubResource(CoreManagementResourceDefinition.PATH_ELEMENT,true) @AT@ 3731 @LENGTH@ 6
------INS SimpleName@@MethodName:registerSubResource:[CoreManagementResourceDefinition.PATH_ELEMENT, true] @TO@ MethodInvocation@@domain.registerSubResource(CoreManagementResourceDefinition.PATH_ELEMENT,true) @AT@ 3738 @LENGTH@ 72
---------INS QualifiedName@@CoreManagementResourceDefinition.PATH_ELEMENT @TO@ SimpleName@@MethodName:registerSubResource:[CoreManagementResourceDefinition.PATH_ELEMENT, true] @AT@ 3758 @LENGTH@ 45
------------INS SimpleName@@CoreManagementResourceDefinition @TO@ QualifiedName@@CoreManagementResourceDefinition.PATH_ELEMENT @AT@ 3758 @LENGTH@ 32
------------INS SimpleName@@PATH_ELEMENT @TO@ QualifiedName@@CoreManagementResourceDefinition.PATH_ELEMENT @AT@ 3791 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:registerSubResource:[CoreManagementResourceDefinition.PATH_ELEMENT, true] @AT@ 3805 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 9486 @LENGTH@ 146
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9486 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9493 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9498 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:connection.eval("return {1,2",ReturnType.MULTI,1,"foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9547 @LENGTH@ 66
------INS MethodInvocation@@connection.eval("return {1,2",ReturnType.MULTI,1,"foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.eval("return {1,2",ReturnType.MULTI,1,"foo","bar") @AT@ 9547 @LENGTH@ 65
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.eval("return {1,2",ReturnType.MULTI,1,"foo","bar") @AT@ 9547 @LENGTH@ 10
---------INS SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @TO@ MethodInvocation@@connection.eval("return {1,2",ReturnType.MULTI,1,"foo","bar") @AT@ 9558 @LENGTH@ 54
------------INS StringLiteral@@"return {1,2" @TO@ SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @AT@ 9563 @LENGTH@ 13
------------INS QualifiedName@@ReturnType.MULTI @TO@ SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @AT@ 9578 @LENGTH@ 16
---------------INS SimpleName@@ReturnType @TO@ QualifiedName@@ReturnType.MULTI @AT@ 9578 @LENGTH@ 10
---------------INS SimpleName@@MULTI @TO@ QualifiedName@@ReturnType.MULTI @AT@ 9589 @LENGTH@ 5
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @AT@ 9596 @LENGTH@ 1
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @AT@ 9599 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:eval:["return {1,2", ReturnType.MULTI, 1, "foo", "bar"] @AT@ 9606 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:getResults() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9616 @LENGTH@ 13
------INS MethodInvocation@@MethodName:getResults:[] @TO@ ExpressionStatement@@MethodInvocation:getResults() @AT@ 9616 @LENGTH@ 12


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]JoinTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]JoinTest, FabricTestSupport @AT@ 1449 @LENGTH@ 3242
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]JoinTest, FabricTestSupport @AT@ 1567 @LENGTH@ 49


UPD FieldDeclaration@@private, static, final, int, [MANAGEMENT_API_MAJOR_VERSION=1] @TO@ private, static, final, int, [MANAGEMENT_API_MAJOR_VERSION=2] @AT@ 4289 @LENGTH@ 58
---UPD VariableDeclarationFragment@@MANAGEMENT_API_MAJOR_VERSION=1 @TO@ MANAGEMENT_API_MAJOR_VERSION=2 @AT@ 4314 @LENGTH@ 32
------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4345 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @TO@ MethodDeclaration@@public, void, MethodName:testAddModule, Exception,  @AT@ 4172 @LENGTH@ 80
---INS MethodInvocation@@tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @TO@ ExpressionStatement@@MethodInvocation:tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @AT@ 4172 @LENGTH@ 79
------INS SimpleName@@MethodName:tree:[result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()] @TO@ MethodInvocation@@tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @AT@ 4172 @LENGTH@ 79
---------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @TO@ SimpleName@@MethodName:tree:[result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()] @AT@ 4177 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getInstalledImage:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 21
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 6
------------INS SimpleName@@MethodName:getJbossHome:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4236 @LENGTH@ 14


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]FabricMavenProxyTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricMavenProxyTest, FabricTestSupport @AT@ 2290 @LENGTH@ 2993
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @AT@ 2383 @LENGTH@ 49


MOV MethodDeclaration@@public, static, URIDereferencer, MethodName:getInstance,  @TO@ TypeDeclaration@@[public]SameDocumentUriDereferencer, [URIDereferencer] @AT@ 1445 @LENGTH@ 76


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build(); @AT@ 5963 @LENGTH@ 350
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @AT@ 5969 @LENGTH@ 343
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).addContentModification(fileUpdated).build() @AT@ 5977 @LENGTH@ 335
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 5977 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 5977 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 6114 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 6114 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 6124 @LENGTH@ 7


UPD IfStatement@@if (camelJMXAgent != null) {  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @TO@ if (camelJMXAgent != null) {  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  getContext().getLifecycleStrategies().clear();  getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext()));  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @AT@ 16589 @LENGTH@ 2637
---UPD Block@@ThenBody:{  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @TO@ ThenBody:{  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  getContext().getLifecycleStrategies().clear();  getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext()));  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @AT@ 16616 @LENGTH@ 2610
------INS ExpressionStatement@@MethodInvocation:getContext().getLifecycleStrategies().clear() @TO@ Block@@ThenBody:{  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @AT@ 18492 @LENGTH@ 46
---------INS MethodInvocation@@getContext().getLifecycleStrategies().clear() @TO@ ExpressionStatement@@MethodInvocation:getContext().getLifecycleStrategies().clear() @AT@ 18492 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:getLifecycleStrategies:[] @TO@ MethodInvocation@@getContext().getLifecycleStrategies().clear() @AT@ 18492 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@getContext().getLifecycleStrategies().clear() @AT@ 18492 @LENGTH@ 12
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@getContext().getLifecycleStrategies().clear() @AT@ 18530 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext())) @TO@ Block@@ThenBody:{  LOG.info("JMXAgent enabled: {}",camelJMXAgent);  DefaultManagementAgent agent=new DefaultManagementAgent(getContext());  agent.setConnectorPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getConnectorPort()));  agent.setCreateConnector(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getCreateConnector()));  agent.setMBeanObjectDomainName(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanObjectDomainName()));  agent.setMBeanServerDefaultDomain(CamelContextHelper.parseText(getContext(),camelJMXAgent.getMbeanServerDefaultDomain()));  agent.setRegistryPort(CamelContextHelper.parseInteger(getContext(),camelJMXAgent.getRegistryPort()));  agent.setServiceUrlPath(CamelContextHelper.parseText(getContext(),camelJMXAgent.getServiceUrlPath()));  agent.setUsePlatformMBeanServer(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getUsePlatformMBeanServer()));  agent.setOnlyRegisterProcessorWithCustomId(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getOnlyRegisterProcessorWithCustomId()));  agent.setRegisterAlways(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterAlways()));  agent.setRegisterNewRoutes(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getRegisterNewRoutes()));  agent.setMask(CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getMask()));  ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent);  getContext().setManagementStrategy(managementStrategy);  boolean onlyId=agent.getOnlyRegisterProcessorWithCustomId() != null && agent.getOnlyRegisterProcessorWithCustomId();  getContext().getManagementStrategy().onlyManageProcessorWithCustomId(onlyId);  String level=CamelContextHelper.parseText(getContext(),camelJMXAgent.getStatisticsLevel());  ManagementStatisticsLevel msLevel=getContext().getTypeConverter().mandatoryConvertTo(ManagementStatisticsLevel.class,level);  getContext().getManagementStrategy().setStatisticsLevel(msLevel);  Boolean loadStatisticsEnabled=CamelContextHelper.parseBoolean(getContext(),camelJMXAgent.getLoadStatisticsEnabled());  if (loadStatisticsEnabled != null) {    getContext().getManagementStrategy().setLoadStatisticsEnabled(loadStatisticsEnabled);  }} @AT@ 18551 @LENGTH@ 88
---------INS MethodInvocation@@getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext())) @TO@ ExpressionStatement@@MethodInvocation:getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext())) @AT@ 18551 @LENGTH@ 87
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext())) @AT@ 18551 @LENGTH@ 12
------------INS SimpleName@@MethodName:addLifecycleStrategy:[new DefaultManagementLifecycleStrategy(getContext())] @TO@ MethodInvocation@@getContext().addLifecycleStrategy(new DefaultManagementLifecycleStrategy(getContext())) @AT@ 18564 @LENGTH@ 74
---------------INS ClassInstanceCreation@@DefaultManagementLifecycleStrategy[getContext()] @TO@ SimpleName@@MethodName:addLifecycleStrategy:[new DefaultManagementLifecycleStrategy(getContext())] @AT@ 18585 @LENGTH@ 52
------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultManagementLifecycleStrategy[getContext()] @AT@ 18585 @LENGTH@ 3
------------------INS SimpleType@@DefaultManagementLifecycleStrategy @TO@ ClassInstanceCreation@@DefaultManagementLifecycleStrategy[getContext()] @AT@ 18589 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ ClassInstanceCreation@@DefaultManagementLifecycleStrategy[getContext()] @AT@ 18624 @LENGTH@ 12


UPD TypeDeclaration@@[public]InflightRepository, [Service] @TO@ [public]InflightRepository, [StaticService] @AT@ 1019 @LENGTH@ 1789
---UPD SimpleType@@Service @TO@ StaticService @AT@ 1063 @LENGTH@ 7


UPD IfStatement@@if (type.isAssignableFrom(permission.getClass())) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @TO@ if (permission instanceof ManagementPermission) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2735 @LENGTH@ 287
---INS InstanceofExpression@@permission instanceof ManagementPermission @TO@ IfStatement@@if (type.isAssignableFrom(permission.getClass())) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2521 @LENGTH@ 42
------INS SimpleName@@permission @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2521 @LENGTH@ 10
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2532 @LENGTH@ 10
------INS SimpleType@@ManagementPermission @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2543 @LENGTH@ 20
---DEL MethodInvocation@@type.isAssignableFrom(permission.getClass()) @AT@ 2739 @LENGTH@ 44
------DEL SimpleName@@Name:type @AT@ 2739 @LENGTH@ 4
------DEL SimpleName@@MethodName:isAssignableFrom:[permission.getClass()] @AT@ 2744 @LENGTH@ 39
---------DEL MethodInvocation@@permission.getClass() @AT@ 2761 @LENGTH@ 21
------------DEL SimpleName@@Name:permission @AT@ 2761 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getClass:[] @AT@ 2772 @LENGTH@ 10


INS MethodDeclaration@@void, MethodName:invalidHandlerChainFile, String fileName,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="JBAS"), public]WSLogger, [BasicLogger] @AT@ 11180 @LENGTH@ 41
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:invalidHandlerChainFile, String fileName,  @AT@ 11175 @LENGTH@ 4
---INS SimpleName@@MethodName:invalidHandlerChainFile @TO@ MethodDeclaration@@void, MethodName:invalidHandlerChainFile, String fileName,  @AT@ 11180 @LENGTH@ 23
---INS SingleVariableDeclaration@@String fileName @TO@ MethodDeclaration@@void, MethodName:invalidHandlerChainFile, String fileName,  @AT@ 11204 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String fileName @AT@ 11204 @LENGTH@ 6
------INS SimpleName@@fileName @TO@ SingleVariableDeclaration@@String fileName @AT@ 11211 @LENGTH@ 8


UPD SwitchStatement@@switch (element) {case DISTINCT_NAME:{    final String val=getElementText(reader,propertyReplacer);    appMetaData.setDistinctName(val);    break;  }case MODULE_ORDER:{  logger.warn("module-order element in jboss-app.xml is deprecated and has been ignored");  break;}case SECURITY_DOMAIN:{appMetaData.setSecurityDomain(getElementText(reader,propertyReplacer));break;}case UNAUTHENTICATED_PRINCIPAL:{appMetaData.setUnauthenticatedPrincipal(getElementText(reader,propertyReplacer));break;}case JMX_NAME:{logger.warn("jmx-name element in jboss-app.xml is deprecated and has been ignored");break;}case LIBRARY_DIRECTORY:{appMetaData.setLibraryDirectory(getElementText(reader,propertyReplacer));break;}case LOADER_REPOSITORY:{parseLoaderRepository(reader,propertyReplacer);logger.warn("loader-repository element in jboss-app.xml is deprecated and has been ignored");break;}case MODULE:{appMetaData.getModules().add(parseModule(reader,propertyReplacer));break;}case SECURITY_ROLE:{appMetaData.getSecurityRoles().add(SecurityRoleMetaDataParser.parse(reader,propertyReplacer));break;}default :throw unexpectedElement(reader);} @TO@ switch (element) {case DISTINCT_NAME:{    final String val=getElementText(reader,propertyReplacer);    appMetaData.setDistinctName(val);    break;  }case MODULE_ORDER:{  logger.warn("module-order element in jboss-app.xml is deprecated and has been ignored");  consumeElementContent(reader);  break;}case SECURITY_DOMAIN:{appMetaData.setSecurityDomain(getElementText(reader,propertyReplacer));break;}case UNAUTHENTICATED_PRINCIPAL:{appMetaData.setUnauthenticatedPrincipal(getElementText(reader,propertyReplacer));break;}case JMX_NAME:{logger.warn("jmx-name element in jboss-app.xml is deprecated and has been ignored");consumeElementContent(reader);break;}case LIBRARY_DIRECTORY:{appMetaData.setLibraryDirectory(getElementText(reader,propertyReplacer));break;}case LOADER_REPOSITORY:{logger.warn("loader-repository element in jboss-app.xml is deprecated and has been ignored");parseLoaderRepository(reader,propertyReplacer);break;}case MODULE:{appMetaData.getModules().add(parseModule(reader,propertyReplacer));break;}case SECURITY_ROLE:{appMetaData.getSecurityRoles().add(SecurityRoleMetaDataParser.parse(reader,propertyReplacer));break;}default :throw unexpectedElement(reader);} @AT@ 5264 @LENGTH@ 2095
---INS ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @TO@ SwitchStatement@@switch (element) {case DISTINCT_NAME:{    final String val=getElementText(reader,propertyReplacer);    appMetaData.setDistinctName(val);    break;  }case MODULE_ORDER:{  logger.warn("module-order element in jboss-app.xml is deprecated and has been ignored");  break;}case SECURITY_DOMAIN:{appMetaData.setSecurityDomain(getElementText(reader,propertyReplacer));break;}case UNAUTHENTICATED_PRINCIPAL:{appMetaData.setUnauthenticatedPrincipal(getElementText(reader,propertyReplacer));break;}case JMX_NAME:{logger.warn("jmx-name element in jboss-app.xml is deprecated and has been ignored");break;}case LIBRARY_DIRECTORY:{appMetaData.setLibraryDirectory(getElementText(reader,propertyReplacer));break;}case LOADER_REPOSITORY:{parseLoaderRepository(reader,propertyReplacer);logger.warn("loader-repository element in jboss-app.xml is deprecated and has been ignored");break;}case MODULE:{appMetaData.getModules().add(parseModule(reader,propertyReplacer));break;}case SECURITY_ROLE:{appMetaData.getSecurityRoles().add(SecurityRoleMetaDataParser.parse(reader,propertyReplacer));break;}default :throw unexpectedElement(reader);} @AT@ 5699 @LENGTH@ 30
------INS MethodInvocation@@consumeElementContent(reader) @TO@ ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @AT@ 5699 @LENGTH@ 29
---------INS SimpleName@@MethodName:consumeElementContent:[reader] @TO@ MethodInvocation@@consumeElementContent(reader) @AT@ 5699 @LENGTH@ 29
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:consumeElementContent:[reader] @AT@ 5721 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @TO@ SwitchStatement@@switch (element) {case DISTINCT_NAME:{    final String val=getElementText(reader,propertyReplacer);    appMetaData.setDistinctName(val);    break;  }case MODULE_ORDER:{  logger.warn("module-order element in jboss-app.xml is deprecated and has been ignored");  break;}case SECURITY_DOMAIN:{appMetaData.setSecurityDomain(getElementText(reader,propertyReplacer));break;}case UNAUTHENTICATED_PRINCIPAL:{appMetaData.setUnauthenticatedPrincipal(getElementText(reader,propertyReplacer));break;}case JMX_NAME:{logger.warn("jmx-name element in jboss-app.xml is deprecated and has been ignored");break;}case LIBRARY_DIRECTORY:{appMetaData.setLibraryDirectory(getElementText(reader,propertyReplacer));break;}case LOADER_REPOSITORY:{parseLoaderRepository(reader,propertyReplacer);logger.warn("loader-repository element in jboss-app.xml is deprecated and has been ignored");break;}case MODULE:{appMetaData.getModules().add(parseModule(reader,propertyReplacer));break;}case SECURITY_ROLE:{appMetaData.getSecurityRoles().add(SecurityRoleMetaDataParser.parse(reader,propertyReplacer));break;}default :throw unexpectedElement(reader);} @AT@ 6361 @LENGTH@ 30
------INS MethodInvocation@@consumeElementContent(reader) @TO@ ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @AT@ 6361 @LENGTH@ 29
---------INS SimpleName@@MethodName:consumeElementContent:[reader] @TO@ MethodInvocation@@consumeElementContent(reader) @AT@ 6361 @LENGTH@ 29
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:consumeElementContent:[reader] @AT@ 6383 @LENGTH@ 6
---MOV ExpressionStatement@@MethodInvocation:parseLoaderRepository(reader,propertyReplacer) @TO@ SwitchStatement@@switch (element) {case DISTINCT_NAME:{    final String val=getElementText(reader,propertyReplacer);    appMetaData.setDistinctName(val);    break;  }case MODULE_ORDER:{  logger.warn("module-order element in jboss-app.xml is deprecated and has been ignored");  break;}case SECURITY_DOMAIN:{appMetaData.setSecurityDomain(getElementText(reader,propertyReplacer));break;}case UNAUTHENTICATED_PRINCIPAL:{appMetaData.setUnauthenticatedPrincipal(getElementText(reader,propertyReplacer));break;}case JMX_NAME:{logger.warn("jmx-name element in jboss-app.xml is deprecated and has been ignored");break;}case LIBRARY_DIRECTORY:{appMetaData.setLibraryDirectory(getElementText(reader,propertyReplacer));break;}case LOADER_REPOSITORY:{parseLoaderRepository(reader,propertyReplacer);logger.warn("loader-repository element in jboss-app.xml is deprecated and has been ignored");break;}case MODULE:{appMetaData.getModules().add(parseModule(reader,propertyReplacer));break;}case SECURITY_ROLE:{appMetaData.getSecurityRoles().add(SecurityRoleMetaDataParser.parse(reader,propertyReplacer));break;}default :throw unexpectedElement(reader);} @AT@ 6640 @LENGTH@ 48


UPD TypeDeclaration@@AliasFileSizePair, [Comparable<AliasFileSizePair>] @TO@ [static]AliasFileSizePair, [Comparable<AliasFileSizePair>] @AT@ 4385 @LENGTH@ 369
---INS Modifier@@static @TO@ TypeDeclaration@@AliasFileSizePair, [Comparable<AliasFileSizePair>] @AT@ 4379 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:bindGitDataStore, GitDataStore gitDataStore,  @TO@ void, MethodName:bindGitDataStore, DataStore gitDataStore,  @AT@ 11144 @LENGTH@ 97
---UPD SingleVariableDeclaration@@GitDataStore gitDataStore @TO@ DataStore gitDataStore @AT@ 11161 @LENGTH@ 25
------UPD SimpleType@@GitDataStore @TO@ DataStore @AT@ 11161 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:this.gitDataStore.bind(gitDataStore) @TO@ MethodInvocation:this.gitDataStore.bind((GitDataStore)gitDataStore) @AT@ 11198 @LENGTH@ 37
------UPD MethodInvocation@@this.gitDataStore.bind(gitDataStore) @TO@ this.gitDataStore.bind((GitDataStore)gitDataStore) @AT@ 11198 @LENGTH@ 36
---------UPD SimpleName@@MethodName:bind:[gitDataStore] @TO@ MethodName:bind:[(GitDataStore)gitDataStore] @AT@ 11216 @LENGTH@ 18
------------DEL SimpleName@@gitDataStore @AT@ 11221 @LENGTH@ 12
------------INS CastExpression@@(GitDataStore)gitDataStore @TO@ SimpleName@@MethodName:bind:[gitDataStore] @AT@ 11303 @LENGTH@ 27
---------------INS SimpleType@@GitDataStore @TO@ CastExpression@@(GitDataStore)gitDataStore @AT@ 11304 @LENGTH@ 12
---------------INS SimpleName@@gitDataStore @TO@ CastExpression@@(GitDataStore)gitDataStore @AT@ 11318 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:builder.preserveItem(preserve.toString()) @TO@ MethodInvocation:builder.preserveItem(preserve.asString()) @AT@ 5068 @LENGTH@ 42
---UPD MethodInvocation@@builder.preserveItem(preserve.toString()) @TO@ builder.preserveItem(preserve.asString()) @AT@ 5068 @LENGTH@ 41
------UPD SimpleName@@MethodName:preserveItem:[preserve.toString()] @TO@ MethodName:preserveItem:[preserve.asString()] @AT@ 5076 @LENGTH@ 33
---------UPD MethodInvocation@@preserve.toString() @TO@ preserve.asString() @AT@ 5089 @LENGTH@ 19
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:asString:[] @AT@ 5098 @LENGTH@ 10


UPD TryStatement@@try {  byte[] encoded=getByteData(treeCache,ZkPath.CONTAINER_METADATA.getPath(containerId));  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (KeeperException.NoNodeException e) {  return null;}catch (Exception e) {  throw new FabricException(e);} @TO@ try {  byte[] encoded=getByteData(treeCache,ZkPath.CONTAINER_METADATA.getPath(containerId));  if (encoded == null) {    return null;  }  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (KeeperException.NoNodeException e) {  return null;}catch (Exception e) {  throw new FabricException(e);} @AT@ 10901 @LENGTH@ 486
---INS IfStatement@@if (encoded == null) {  return null;} @TO@ TryStatement@@try {  byte[] encoded=getByteData(treeCache,ZkPath.CONTAINER_METADATA.getPath(containerId));  byte[] decoded=Base64Encoder.decode(encoded);  ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(decoded));  return (CreateContainerMetadata)ois.readObject();} catch (KeeperException.NoNodeException e) {  return null;}catch (Exception e) {  throw new FabricException(e);} @AT@ 11050 @LENGTH@ 65
------INS InfixExpression@@encoded == null @TO@ IfStatement@@if (encoded == null) {  return null;} @AT@ 11054 @LENGTH@ 15
---------INS SimpleName@@encoded @TO@ InfixExpression@@encoded == null @AT@ 11054 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@encoded == null @AT@ 11061 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@encoded == null @AT@ 11065 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (encoded == null) {  return null;} @AT@ 11071 @LENGTH@ 44
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 11089 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 11096 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:verify(logger,times(2)).warn(any()) @TO@ MethodInvocation:verify(logger,times(1)).warn(any()) @AT@ 3784 @LENGTH@ 37
---UPD MethodInvocation@@verify(logger,times(2)).warn(any()) @TO@ verify(logger,times(1)).warn(any()) @AT@ 3784 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:verify:[logger, times(2)] @TO@ MethodName:verify:[logger, times(1)] @AT@ 3784 @LENGTH@ 24
---------UPD MethodInvocation@@times(2) @TO@ times(1) @AT@ 3799 @LENGTH@ 8
------------UPD SimpleName@@MethodName:times:[2] @TO@ MethodName:times:[1] @AT@ 3799 @LENGTH@ 8
---------------UPD NumberLiteral@@2 @TO@ 1 @AT@ 3805 @LENGTH@ 1


UPD TypeDeclaration@@[public]EndpointRegistry, LRUSoftCache<EndpointKey,Endpoint>[Service] @TO@ [public]EndpointRegistry, LRUSoftCache<EndpointKey,Endpoint>[StaticService] @AT@ 1299 @LENGTH@ 1131
---UPD SimpleType@@Service @TO@ StaticService @AT@ 1384 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:jmsPropertyToHeader,  @AT@ 4987 @LENGTH@ 206
---DEL Modifier@@public @AT@ 4987 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4994 @LENGTH@ 4
---DEL SimpleName@@MethodName:jmsPropertyToHeader @AT@ 4999 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String expected="Foo-Bar-Baz"; @AT@ 5031 @LENGTH@ 32
------DEL SimpleType@@String @AT@ 5031 @LENGTH@ 6
------DEL VariableDeclarationFragment@@expected="Foo-Bar-Baz" @AT@ 5038 @LENGTH@ 24
---------DEL SimpleName@@expected @AT@ 5038 @LENGTH@ 8
---------DEL StringLiteral@@"Foo-Bar-Baz" @AT@ 5049 @LENGTH@ 13
---DEL VariableDeclarationStatement@@String result=JmsTransportUtils.jmsPropertyToHeader("SOAPJMS_fooBarBaz"); @AT@ 5072 @LENGTH@ 75
------DEL SimpleType@@String @AT@ 5072 @LENGTH@ 6
------DEL VariableDeclarationFragment@@result=JmsTransportUtils.jmsPropertyToHeader("SOAPJMS_fooBarBaz") @AT@ 5079 @LENGTH@ 67
---------DEL SimpleName@@result @AT@ 5079 @LENGTH@ 6
---------DEL MethodInvocation@@JmsTransportUtils.jmsPropertyToHeader("SOAPJMS_fooBarBaz") @AT@ 5088 @LENGTH@ 58
------------DEL SimpleName@@Name:JmsTransportUtils @AT@ 5088 @LENGTH@ 17
------------DEL SimpleName@@MethodName:jmsPropertyToHeader:["SOAPJMS_fooBarBaz"] @AT@ 5106 @LENGTH@ 40
---------------DEL StringLiteral@@"SOAPJMS_fooBarBaz" @AT@ 5126 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:assertEquals(expected,result) @AT@ 5156 @LENGTH@ 31
------DEL MethodInvocation@@assertEquals(expected,result) @AT@ 5156 @LENGTH@ 30
---------DEL SimpleName@@MethodName:assertEquals:[expected, result] @AT@ 5156 @LENGTH@ 30
------------DEL SimpleName@@expected @AT@ 5169 @LENGTH@ 8
------------DEL SimpleName@@result @AT@ 5179 @LENGTH@ 6


UPD Block@@ThenBody:{  RunAs runAs=SecurityContextAssociation.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityContextAssociation.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes("UTF-8");    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @TO@ ThenBody:{  RunAs runAs=SecurityActions.peekRunAsIdentity();  Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal();  if (p != null) {    String name=p.getName();    if (name.indexOf('@') < 0) {      name+="@default";    }    byte[] principalName=name.getBytes("UTF-8");    byte[] encodedName=CSIv2Util.encodeGssExportedName(principalName);    Any any=ORB.init().create_any();    byte[] encapsulatedEncodedName;    GSS_NT_ExportedNameHelper.insert(any,encodedName);    try {      encapsulatedEncodedName=codec.encode_value(any);    } catch (    InvalidTypeForEncoding e) {      throw JacORBMessages.MESSAGES.unexpectedException(e);    }    identityToken=new IdentityToken();    identityToken.principal_name(encapsulatedEncodedName);  } else   if ((secMech.sas_context_mech.supported_identity_types & ITTAnonymous.value) != 0) {    identityToken=new IdentityToken();    identityToken.anonymous(true);  }} @AT@ 5001 @LENGTH@ 1775
---UPD VariableDeclarationStatement@@RunAs runAs=SecurityContextAssociation.peekRunAsIdentity(); @TO@ RunAs runAs=SecurityActions.peekRunAsIdentity(); @AT@ 5066 @LENGTH@ 61
------UPD VariableDeclarationFragment@@runAs=SecurityContextAssociation.peekRunAsIdentity() @TO@ runAs=SecurityActions.peekRunAsIdentity() @AT@ 5072 @LENGTH@ 54
---------UPD MethodInvocation@@SecurityContextAssociation.peekRunAsIdentity() @TO@ SecurityActions.peekRunAsIdentity() @AT@ 5080 @LENGTH@ 46
------------UPD SimpleName@@Name:SecurityContextAssociation @TO@ Name:SecurityActions @AT@ 5080 @LENGTH@ 26
---UPD VariableDeclarationStatement@@Principal p=(runAs != null) ? runAs : SecurityContextAssociation.getPrincipal(); @TO@ Principal p=(runAs != null) ? runAs : SecurityActions.getPrincipal(); @AT@ 5144 @LENGTH@ 82
------UPD VariableDeclarationFragment@@p=(runAs != null) ? runAs : SecurityContextAssociation.getPrincipal() @TO@ p=(runAs != null) ? runAs : SecurityActions.getPrincipal() @AT@ 5154 @LENGTH@ 71
---------UPD ConditionalExpression@@(runAs != null) ? runAs : SecurityContextAssociation.getPrincipal() @TO@ (runAs != null) ? runAs : SecurityActions.getPrincipal() @AT@ 5158 @LENGTH@ 67
------------UPD MethodInvocation@@SecurityContextAssociation.getPrincipal() @TO@ SecurityActions.getPrincipal() @AT@ 5184 @LENGTH@ 41
---------------UPD SimpleName@@Name:SecurityContextAssociation @TO@ Name:SecurityActions @AT@ 5184 @LENGTH@ 26


INS MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @TO@ TypeDeclaration@@[public]MetaDataElementParser, [XMLStreamConstants] @AT@ 15075 @LENGTH@ 494
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15075 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15085 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15092 @LENGTH@ 4
---INS SimpleName@@MethodName:consumeElementContent @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15097 @LENGTH@ 21
---INS SingleVariableDeclaration@@final XMLStreamReader reader @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15119 @LENGTH@ 28
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 15119 @LENGTH@ 5
------INS SimpleType@@XMLStreamReader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 15125 @LENGTH@ 15
------INS SimpleName@@reader @TO@ SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 15141 @LENGTH@ 6
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15156 @LENGTH@ 18
---INS WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case END_ELEMENT:{      return;    }case START_ELEMENT:{    consumeElementContent(reader);    break;  }default :{}}} @TO@ MethodDeclaration@@protected, static, void, MethodName:consumeElementContent, final XMLStreamReader reader, XMLStreamException,  @AT@ 15185 @LENGTH@ 378
------INS MethodInvocation@@reader.hasNext() @TO@ WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case END_ELEMENT:{      return;    }case START_ELEMENT:{    consumeElementContent(reader);    break;  }default :{}}} @AT@ 15192 @LENGTH@ 16
---------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.hasNext() @AT@ 15192 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@reader.hasNext() @AT@ 15199 @LENGTH@ 9
------INS Block@@WhileBody:{switch (reader.next()) {case END_ELEMENT:{      return;    }case START_ELEMENT:{    consumeElementContent(reader);    break;  }default :{}}} @TO@ WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case END_ELEMENT:{      return;    }case START_ELEMENT:{    consumeElementContent(reader);    break;  }default :{}}} @AT@ 15210 @LENGTH@ 353
---------INS SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @TO@ Block@@WhileBody:{switch (reader.next()) {case END_ELEMENT:{      return;    }case START_ELEMENT:{    consumeElementContent(reader);    break;  }default :{}}} @AT@ 15224 @LENGTH@ 329
------------INS MethodInvocation@@reader.next() @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15232 @LENGTH@ 13
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.next() @AT@ 15232 @LENGTH@ 6
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@reader.next() @AT@ 15239 @LENGTH@ 6
------------INS SwitchCase@@case END_ELEMENT: @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15265 @LENGTH@ 17
---------------INS SimpleName@@END_ELEMENT @TO@ SwitchCase@@case END_ELEMENT: @AT@ 15270 @LENGTH@ 11
------------INS ReturnStatement@@ @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15305 @LENGTH@ 7
------------INS SwitchCase@@case START_ELEMENT: @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15347 @LENGTH@ 19
---------------INS SimpleName@@START_ELEMENT @TO@ SwitchCase@@case START_ELEMENT: @AT@ 15352 @LENGTH@ 13
------------INS ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15389 @LENGTH@ 30
---------------INS MethodInvocation@@consumeElementContent(reader) @TO@ ExpressionStatement@@MethodInvocation:consumeElementContent(reader) @AT@ 15389 @LENGTH@ 29
------------------INS SimpleName@@MethodName:consumeElementContent:[reader] @TO@ MethodInvocation@@consumeElementContent(reader) @AT@ 15389 @LENGTH@ 29
---------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:consumeElementContent:[reader] @AT@ 15411 @LENGTH@ 6
------------INS BreakStatement@@ @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15440 @LENGTH@ 6
------------INS SwitchCase@@default @TO@ SwitchStatement@@switch (reader.next()) {case END_ELEMENT:{    return;  }case START_ELEMENT:{  consumeElementContent(reader);  break;}default :{}} @AT@ 15481 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("target/cachedir",context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ MethodInvocation:assertEquals(normalizePath("target/cachedir"),normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())) @AT@ 1508 @LENGTH@ 99
---UPD MethodInvocation@@assertEquals("target/cachedir",context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ assertEquals(normalizePath("target/cachedir"),normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())) @AT@ 1508 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodName:assertEquals:[normalizePath("target/cachedir"), normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())] @AT@ 1508 @LENGTH@ 98
---------INS MethodInvocation@@normalizePath("target/cachedir") @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1582 @LENGTH@ 32
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir"] @TO@ MethodInvocation@@normalizePath("target/cachedir") @AT@ 1582 @LENGTH@ 32
---------------MOV StringLiteral@@"target/cachedir" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir"] @AT@ 1521 @LENGTH@ 17
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir"] @TO@ MethodInvocation@@normalizePath("target/cachedir") @AT@ 1582 @LENGTH@ 32
---------------MOV StringLiteral@@"target/cachedir" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir"] @AT@ 1521 @LENGTH@ 17
---------INS MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1616 @LENGTH@ 80
------------INS SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @AT@ 1616 @LENGTH@ 80
---------------MOV MethodInvocation@@context.getStreamCachingStrategy().getSpoolDirectory().toString() @TO@ SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1540 @LENGTH@ 65
------------INS SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @AT@ 1616 @LENGTH@ 80
---------------MOV MethodInvocation@@context.getStreamCachingStrategy().getSpoolDirectory().toString() @TO@ SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1540 @LENGTH@ 65


UPD TypeDeclaration@@[private, static]Bean, [BeanMBean] @TO@ [public, static]Bean, [BeanMBean] @AT@ 38697 @LENGTH@ 256
---UPD Modifier@@private @TO@ public @AT@ 38697 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:context.getResult() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 5244 @LENGTH@ 20
---INS MethodInvocation@@context.getResult() @TO@ ExpressionStatement@@MethodInvocation:context.getResult() @AT@ 5244 @LENGTH@ 19
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult() @AT@ 5244 @LENGTH@ 7
------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult() @AT@ 5252 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:builder.rejectChildResource(HttpConnectorResource.PATH) @TO@ MethodDeclaration@@private, void, MethodName:registerTransformers_1_1, SubsystemRegistration registration,  @AT@ 6368 @LENGTH@ 56
---INS MethodInvocation@@builder.rejectChildResource(HttpConnectorResource.PATH) @TO@ ExpressionStatement@@MethodInvocation:builder.rejectChildResource(HttpConnectorResource.PATH) @AT@ 6368 @LENGTH@ 55
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.rejectChildResource(HttpConnectorResource.PATH) @AT@ 6368 @LENGTH@ 7
------INS SimpleName@@MethodName:rejectChildResource:[HttpConnectorResource.PATH] @TO@ MethodInvocation@@builder.rejectChildResource(HttpConnectorResource.PATH) @AT@ 6376 @LENGTH@ 47
---------INS QualifiedName@@HttpConnectorResource.PATH @TO@ SimpleName@@MethodName:rejectChildResource:[HttpConnectorResource.PATH] @AT@ 6396 @LENGTH@ 26
------------INS SimpleName@@HttpConnectorResource @TO@ QualifiedName@@HttpConnectorResource.PATH @AT@ 6396 @LENGTH@ 21
------------INS SimpleName@@PATH @TO@ QualifiedName@@HttpConnectorResource.PATH @AT@ 6418 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:exchange.getProperties().containsKey(Exchange.FILTER_MATCHED) && ((Boolean)exchange.getProperties().get(Exchange.FILTER_MATCHED)) @TO@ MethodInvocation:exchange.getProperty(Exchange.FILTER_MATCHED,false,Boolean.class) @AT@ 8870 @LENGTH@ 154
---DEL InfixExpression@@exchange.getProperties().containsKey(Exchange.FILTER_MATCHED) && ((Boolean)exchange.getProperties().get(Exchange.FILTER_MATCHED)) @AT@ 8877 @LENGTH@ 146
------DEL MethodInvocation@@exchange.getProperties().containsKey(Exchange.FILTER_MATCHED) @AT@ 8877 @LENGTH@ 61
---------DEL MethodInvocation@@MethodName:getProperties:[] @AT@ 8877 @LENGTH@ 24
---------DEL SimpleName@@Name:exchange @AT@ 8877 @LENGTH@ 8
---------DEL SimpleName@@MethodName:containsKey:[Exchange.FILTER_MATCHED] @AT@ 8902 @LENGTH@ 36
------------DEL QualifiedName@@Exchange.FILTER_MATCHED @AT@ 8914 @LENGTH@ 23
---------------DEL SimpleName@@Exchange @AT@ 8914 @LENGTH@ 8
---------------DEL SimpleName@@FILTER_MATCHED @AT@ 8923 @LENGTH@ 14
------DEL Operator@@&& @AT@ 8938 @LENGTH@ 2
------DEL ParenthesizedExpression@@((Boolean)exchange.getProperties().get(Exchange.FILTER_MATCHED)) @AT@ 8958 @LENGTH@ 65
---------DEL CastExpression@@(Boolean)exchange.getProperties().get(Exchange.FILTER_MATCHED) @AT@ 8959 @LENGTH@ 63
------------DEL SimpleType@@Boolean @AT@ 8960 @LENGTH@ 7
------------DEL MethodInvocation@@exchange.getProperties().get(Exchange.FILTER_MATCHED) @AT@ 8969 @LENGTH@ 53
---------------DEL MethodInvocation@@MethodName:getProperties:[] @AT@ 8969 @LENGTH@ 24
---INS MethodInvocation@@exchange.getProperty(Exchange.FILTER_MATCHED,false,Boolean.class) @TO@ ReturnStatement@@InfixExpression:exchange.getProperties().containsKey(Exchange.FILTER_MATCHED) && ((Boolean)exchange.getProperties().get(Exchange.FILTER_MATCHED)) @AT@ 8877 @LENGTH@ 67
------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.FILTER_MATCHED,false,Boolean.class) @AT@ 8969 @LENGTH@ 8
------MOV SimpleName@@MethodName:get:[Exchange.FILTER_MATCHED] @TO@ MethodInvocation@@exchange.getProperty(Exchange.FILTER_MATCHED,false,Boolean.class) @AT@ 8994 @LENGTH@ 28
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:get:[Exchange.FILTER_MATCHED] @AT@ 8923 @LENGTH@ 5
---------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:get:[Exchange.FILTER_MATCHED] @AT@ 8930 @LENGTH@ 13


UPD ReturnStatement@@ClassInstanceCreation:new FileModifyTask(item,target,backup,modification) @TO@ ClassInstanceCreation:new FileUpdateTask(item,target,backup,modification) @AT@ 4519 @LENGTH@ 62
---UPD ClassInstanceCreation@@FileModifyTask[item, target, backup, modification] @TO@ FileUpdateTask[item, target, backup, modification] @AT@ 4526 @LENGTH@ 54
------UPD SimpleType@@FileModifyTask @TO@ FileUpdateTask @AT@ 4530 @LENGTH@ 14


DEL ExpressionStatement@@Assignment:this.single=true @AT@ 1684 @LENGTH@ 19
---DEL Assignment@@this.single=true @AT@ 1684 @LENGTH@ 18
------DEL FieldAccess@@this.single @AT@ 1684 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1684 @LENGTH@ 4
---------DEL SimpleName@@single @AT@ 1689 @LENGTH@ 6
------DEL Operator@@= @AT@ 1695 @LENGTH@ 1
------DEL BooleanLiteral@@true @AT@ 1698 @LENGTH@ 4


INS MethodDeclaration@@String, MethodName:needHostAndPort,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS")]ModClusterMessages,  @AT@ 3323 @LENGTH@ 18
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:needHostAndPort,  @AT@ 3316 @LENGTH@ 6
---INS SimpleName@@MethodName:needHostAndPort @TO@ MethodDeclaration@@String, MethodName:needHostAndPort,  @AT@ 3323 @LENGTH@ 15


DEL MethodDeclaration@@void, MethodName:init,  @AT@ 803 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 798 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 803 @LENGTH@ 4


UPD MethodDeclaration@@public, boolean, MethodName:isSingle,  @TO@ public, boolean, MethodName:isStaticService,  @AT@ 1783 @LENGTH@ 56
---UPD SimpleName@@MethodName:isSingle @TO@ MethodName:isStaticService @AT@ 1798 @LENGTH@ 8
---UPD ReturnStatement@@SimpleName:single @TO@ InstanceofExpression:service instanceof StaticService @AT@ 1819 @LENGTH@ 14
------DEL SimpleName@@single @AT@ 1826 @LENGTH@ 6
------INS InstanceofExpression@@service instanceof StaticService @TO@ ReturnStatement@@SimpleName:single @AT@ 1842 @LENGTH@ 32
---------INS SimpleName@@service @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 1842 @LENGTH@ 7
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 1850 @LENGTH@ 10
---------INS SimpleType@@StaticService @TO@ InstanceofExpression@@service instanceof StaticService @AT@ 1861 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath,  @TO@ TypeDeclaration@@[@ContextConfiguration(value="classpath:eclipselink.xml"), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 1857 @LENGTH@ 185
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath,  @AT@ 1857 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath,  @AT@ 1864 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath @TO@ MethodDeclaration@@public, void, MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath,  @AT@ 1869 @LENGTH@ 77
---INS ExpressionStatement@@SuperMethodInvocation:super.shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath() @TO@ MethodDeclaration@@public, void, MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath,  @AT@ 1953 @LENGTH@ 86
------INS SuperMethodInvocation@@super.shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath() @TO@ ExpressionStatement@@SuperMethodInvocation:super.shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath() @AT@ 1953 @LENGTH@ 85
---------INS SimpleName@@MethodName:shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath:[] @TO@ SuperMethodInvocation@@super.shouldGenerateLeftOuterJoinInfindAllWithPaginationAndSortOnNestedPropertyPath() @AT@ 1959 @LENGTH@ 77


INS MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @TO@ TypeDeclaration@@[public]Profiles,  @AT@ 1252 @LENGTH@ 296
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1252 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1259 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1266 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1266 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1271 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1279 @LENGTH@ 25
---INS SingleVariableDeclaration@@Collection<Profile> profiles @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1305 @LENGTH@ 28
------INS ParameterizedType@@Collection<Profile> @TO@ SingleVariableDeclaration@@Collection<Profile> profiles @AT@ 1305 @LENGTH@ 19
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Profile> @AT@ 1305 @LENGTH@ 10
---------INS SimpleType@@Profile @TO@ ParameterizedType@@Collection<Profile> @AT@ 1316 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ SingleVariableDeclaration@@Collection<Profile> profiles @AT@ 1325 @LENGTH@ 8
---INS VariableDeclarationStatement@@Set<String> set=new HashSet<String>(); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1345 @LENGTH@ 40
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> set=new HashSet<String>(); @AT@ 1345 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 1345 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 1349 @LENGTH@ 6
------INS VariableDeclarationFragment@@set=new HashSet<String>() @TO@ VariableDeclarationStatement@@Set<String> set=new HashSet<String>(); @AT@ 1357 @LENGTH@ 27
---------INS SimpleName@@set @TO@ VariableDeclarationFragment@@set=new HashSet<String>() @AT@ 1357 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashSet<String>[] @TO@ VariableDeclarationFragment@@set=new HashSet<String>() @AT@ 1363 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 1363 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[] @AT@ 1367 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 1367 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 1375 @LENGTH@ 6
---INS EnhancedForStatement@@for (Profile profile : profiles) {  set.addAll(profile.getConfigurationFileNames());} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1394 @LENGTH@ 105
------INS SingleVariableDeclaration@@Profile profile @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  set.addAll(profile.getConfigurationFileNames());} @AT@ 1399 @LENGTH@ 15
---------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1399 @LENGTH@ 7
---------INS SimpleName@@profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1407 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  set.addAll(profile.getConfigurationFileNames());} @AT@ 1417 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:set.addAll(profile.getConfigurationFileNames()) @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  set.addAll(profile.getConfigurationFileNames());} @AT@ 1441 @LENGTH@ 48
---------INS MethodInvocation@@set.addAll(profile.getConfigurationFileNames()) @TO@ ExpressionStatement@@MethodInvocation:set.addAll(profile.getConfigurationFileNames()) @AT@ 1441 @LENGTH@ 47
------------INS SimpleName@@Name:set @TO@ MethodInvocation@@set.addAll(profile.getConfigurationFileNames()) @AT@ 1441 @LENGTH@ 3
------------INS SimpleName@@MethodName:addAll:[profile.getConfigurationFileNames()] @TO@ MethodInvocation@@set.addAll(profile.getConfigurationFileNames()) @AT@ 1445 @LENGTH@ 43
---------------INS MethodInvocation@@profile.getConfigurationFileNames() @TO@ SimpleName@@MethodName:addAll:[profile.getConfigurationFileNames()] @AT@ 1452 @LENGTH@ 35
------------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 1452 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getConfigurationFileNames:[] @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 1460 @LENGTH@ 27
---INS ReturnStatement@@ClassInstanceCreation:new ArrayList<String>(set) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getConfigurationFileNames, Collection<Profile> profiles,  @AT@ 1508 @LENGTH@ 34
------INS ClassInstanceCreation@@ArrayList<String>[set] @TO@ ReturnStatement@@ClassInstanceCreation:new ArrayList<String>(set) @AT@ 1515 @LENGTH@ 26
---------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[set] @AT@ 1515 @LENGTH@ 3
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[set] @AT@ 1519 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 1519 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 1529 @LENGTH@ 6
---------INS SimpleName@@set @TO@ ClassInstanceCreation@@ArrayList<String>[set] @AT@ 1537 @LENGTH@ 3


UPD TryStatement@@try {  Repository repository=git.getRepository();  StoredConfig config=repository.getConfig();  String url=config.getString("remote",remote,"url");  if (Strings.isNullOrBlank(url)) {    if (LOG.isDebugEnabled()) {      LOG.debug("No remote repository defined for the git repository at " + GitHelpers.getRootGitDirectory(git) + " so not doing a pull");    }    return;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Performing a fetch in git repository " + GitHelpers.getRootGitDirectory(git) + " on remote URL: "+ url);  }  boolean hasChanged=false;  try {    git.fetch().setCredentialsProvider(credentialsProvider).setRemote(remote).call();  } catch (  Exception e) {    LOG.debug("Fetch failed. Ignoring");    return;  }  Map<String,Ref> localBranches=new HashMap<String,Ref>();  Map<String,Ref> remoteBranches=new HashMap<String,Ref>();  Set<String> gitVersions=new HashSet<String>();  for (  Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {    if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {      String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());      if (!name.endsWith("-tmp")) {        remoteBranches.put(name,ref);        gitVersions.add(name);      }    } else     if (ref.getName().startsWith("refs/heads/")) {      String name=ref.getName().substring(("refs/heads/").length());      if (!name.endsWith("-tmp")) {        localBranches.put(name,ref);        gitVersions.add(name);      }    }  }  for (  String version : gitVersions) {    if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {      if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {        try {          git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();        } catch (        CannotDeleteCurrentBranchException ex) {          git.checkout().setName(MASTER_BRANCH).setForce(true).call();          git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();        }        removeVersion(version);        hasChanged=true;      }    } else     if (!localBranches.containsKey(version)) {      addVersion(version);      git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();      hasChanged=true;    } else {      String localCommit=localBranches.get(version).getObjectId().getName();      String remoteCommit=remoteBranches.get(version).getObjectId().getName();      if (!localCommit.equals(remoteCommit)) {        git.clean().setCleanDirectories(true).call();        git.checkout().setName("HEAD").setForce(true).call();        git.checkout().setName(version).setForce(true).call();        MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();        if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {          hasChanged=true;        }      }    }  }  if (hasChanged) {    LOG.debug("Changed after pull!");    if (credentialsProvider != null) {      File profilesDirectory=getProfilesDirectory(git);    }    fireChangeNotifications();  }} catch (Throwable e) {  LOG.error("Failed to pull from the remote git repo " + GitHelpers.getRootGitDirectory(git) + ". Reason: "+ e,e);} @TO@ try {  Repository repository=git.getRepository();  StoredConfig config=repository.getConfig();  String url=config.getString("remote",remote,"url");  if (Strings.isNullOrBlank(url)) {    if (LOG.isDebugEnabled()) {      LOG.debug("No remote repository defined for the git repository at " + GitHelpers.getRootGitDirectory(git) + " so not doing a pull");    }    return;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Performing a fetch in git repository " + GitHelpers.getRootGitDirectory(git) + " on remote URL: "+ url);  }  boolean hasChanged=false;  try {    git.fetch().setCredentialsProvider(credentialsProvider).setRemote(remote).call();  } catch (  Exception e) {    LOG.debug("Fetch failed. Ignoring");    return;  }  Map<String,Ref> localBranches=new HashMap<String,Ref>();  Map<String,Ref> remoteBranches=new HashMap<String,Ref>();  Set<String> gitVersions=new HashSet<String>();  for (  Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {    if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {      String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());      remoteBranches.put(name,ref);      gitVersions.add(name);    } else     if (ref.getName().startsWith("refs/heads/")) {      String name=ref.getName().substring(("refs/heads/").length());      localBranches.put(name,ref);      gitVersions.add(name);    }  }  for (  String version : gitVersions) {    if (remoteBranches.isEmpty()) {    } else     if (!remoteBranches.containsKey(version)) {      if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {        try {          git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();        } catch (        CannotDeleteCurrentBranchException ex) {          git.checkout().setName(MASTER_BRANCH).setForce(true).call();          git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();        }        removeVersion(version);        hasChanged=true;      }    } else     if (!localBranches.containsKey(version)) {      addVersion(version);      git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();      hasChanged=true;    } else {      String localCommit=localBranches.get(version).getObjectId().getName();      String remoteCommit=remoteBranches.get(version).getObjectId().getName();      if (!localCommit.equals(remoteCommit)) {        git.clean().setCleanDirectories(true).call();        git.checkout().setName("HEAD").setForce(true).call();        git.checkout().setName(version).setForce(true).call();        MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();        if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {          hasChanged=true;        }      }    }  }  if (hasChanged) {    LOG.debug("Changed after pull!");    if (credentialsProvider != null) {      File profilesDirectory=getProfilesDirectory(git);    }    fireChangeNotifications();  }} catch (Throwable e) {  LOG.error("Failed to pull from the remote git repo " + GitHelpers.getRootGitDirectory(git) + ". Reason: "+ e,e);} @AT@ 41169 @LENGTH@ 5713
---UPD EnhancedForStatement@@for (Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {  if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {    String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());    if (!name.endsWith("-tmp")) {      remoteBranches.put(name,ref);      gitVersions.add(name);    }  } else   if (ref.getName().startsWith("refs/heads/")) {    String name=ref.getName().substring(("refs/heads/").length());    if (!name.endsWith("-tmp")) {      localBranches.put(name,ref);      gitVersions.add(name);    }  }} @TO@ for (Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {  if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {    String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());    remoteBranches.put(name,ref);    gitVersions.add(name);  } else   if (ref.getName().startsWith("refs/heads/")) {    String name=ref.getName().substring(("refs/heads/").length());    localBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43045 @LENGTH@ 801
------DEL IfStatement@@if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {  String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());  if (!name.endsWith("-tmp")) {    remoteBranches.put(name,ref);    gitVersions.add(name);  }} else if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43147 @LENGTH@ 685
---------DEL Block@@ThenBody:{  String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());  if (!name.endsWith("-tmp")) {    remoteBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43209 @LENGTH@ 295
------------DEL IfStatement@@if (!name.endsWith("-tmp")) {  remoteBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43333 @LENGTH@ 153
---------------DEL PrefixExpression@@!name.endsWith("-tmp") @AT@ 43337 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 43337 @LENGTH@ 1
------------------DEL MethodInvocation@@name.endsWith("-tmp") @AT@ 43338 @LENGTH@ 21
---------------------DEL SimpleName@@Name:name @AT@ 43338 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:endsWith:["-tmp"] @AT@ 43343 @LENGTH@ 16
------------------------DEL StringLiteral@@"-tmp" @AT@ 43352 @LENGTH@ 6
---------DEL Block@@ElseBody:if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43510 @LENGTH@ 322
------MOV IfStatement@@if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @TO@ EnhancedForStatement@@for (Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {  if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {    String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());    if (!name.endsWith("-tmp")) {      remoteBranches.put(name,ref);      gitVersions.add(name);    }  } else   if (ref.getName().startsWith("refs/heads/")) {    String name=ref.getName().substring(("refs/heads/").length());    if (!name.endsWith("-tmp")) {      localBranches.put(name,ref);      gitVersions.add(name);    }  }} @AT@ 43510 @LENGTH@ 322
---------MOV MethodInvocation@@ref.getName().startsWith("refs/remotes/" + remote + "/") @TO@ IfStatement@@if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43151 @LENGTH@ 56
---------MOV Block@@ThenBody:{  remoteBranches.put(name,ref);  gitVersions.add(name);} @TO@ IfStatement@@if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @AT@ 43361 @LENGTH@ 125
------------MOV VariableDeclarationStatement@@String name=ref.getName().substring(("refs/remotes/" + remote + "/").length()); @TO@ Block@@ThenBody:{  remoteBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43231 @LENGTH@ 81
---------UPD Block@@ThenBody:{  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @TO@ ElseBody:if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43555 @LENGTH@ 277
------------UPD IfStatement@@if (!name.endsWith("-tmp")) {  localBranches.put(name,ref);  gitVersions.add(name);} @TO@ if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43662 @LENGTH@ 152
---------------MOV MethodInvocation@@ref.getName().startsWith("refs/heads/") @TO@ IfStatement@@if (!name.endsWith("-tmp")) {  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43514 @LENGTH@ 39
---------------DEL PrefixExpression@@!name.endsWith("-tmp") @AT@ 43666 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 43666 @LENGTH@ 1
------------------DEL MethodInvocation@@name.endsWith("-tmp") @AT@ 43667 @LENGTH@ 21
---------------------DEL SimpleName@@Name:name @AT@ 43667 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:endsWith:["-tmp"] @AT@ 43672 @LENGTH@ 16
------------------------DEL StringLiteral@@"-tmp" @AT@ 43681 @LENGTH@ 6
---------------UPD Block@@ThenBody:{  localBranches.put(name,ref);  gitVersions.add(name);} @TO@ ThenBody:{  String name=ref.getName().substring(("refs/heads/").length());  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43690 @LENGTH@ 124
------------------MOV VariableDeclarationStatement@@String name=ref.getName().substring(("refs/heads/").length()); @TO@ Block@@ThenBody:{  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43577 @LENGTH@ 64
---UPD EnhancedForStatement@@for (String version : gitVersions) {  if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {    if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }      removeVersion(version);      hasChanged=true;    }  } else   if (!localBranches.containsKey(version)) {    addVersion(version);    git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();    hasChanged=true;  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {        hasChanged=true;      }    }  }} @TO@ for (String version : gitVersions) {  if (remoteBranches.isEmpty()) {  } else   if (!remoteBranches.containsKey(version)) {    if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }      removeVersion(version);      hasChanged=true;    }  } else   if (!localBranches.containsKey(version)) {    addVersion(version);    git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();    hasChanged=true;  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {        hasChanged=true;      }    }  }} @AT@ 43893 @LENGTH@ 2366
------INS IfStatement@@if (remoteBranches.isEmpty()) {} else if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @TO@ EnhancedForStatement@@for (String version : gitVersions) {  if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {    if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }      removeVersion(version);      hasChanged=true;    }  } else   if (!localBranches.containsKey(version)) {    addVersion(version);    git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();    hasChanged=true;  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {        hasChanged=true;      }    }  }} @AT@ 43945 @LENGTH@ 2215
---------INS MethodInvocation@@remoteBranches.isEmpty() @TO@ IfStatement@@if (remoteBranches.isEmpty()) {} else if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 43949 @LENGTH@ 24
------------INS SimpleName@@Name:remoteBranches @TO@ MethodInvocation@@remoteBranches.isEmpty() @AT@ 43949 @LENGTH@ 14
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@remoteBranches.isEmpty() @AT@ 43964 @LENGTH@ 9
---------INS Block@@ThenBody:{} @TO@ IfStatement@@if (remoteBranches.isEmpty()) {} else if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 43975 @LENGTH@ 52
---------INS Block@@ElseBody:if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @TO@ IfStatement@@if (remoteBranches.isEmpty()) {} else if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 44033 @LENGTH@ 2127
------------MOV IfStatement@@if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @TO@ Block@@ElseBody:if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 44089 @LENGTH@ 2156
---------------MOV PrefixExpression@@!remoteBranches.containsKey(version) @TO@ IfStatement@@if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 44093 @LENGTH@ 36
------UPD IfStatement@@if (!remoteBranches.containsKey(version) && !remoteBranches.isEmpty()) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @TO@ if (!remoteBranches.containsKey(version)) {  if (doDeleteBranches && !version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    removeVersion(version);    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  addVersion(version);  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE && hasChanged(git,localCommit,remoteCommit)) {      hasChanged=true;    }  }} @AT@ 44089 @LENGTH@ 2156


UPD VariableDeclarationStatement@@Module newModule2=new Module.Builder(moduleName2).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build(); @TO@ Module newModule2=new Module.Builder(moduleName2).miscFile(resourceItem1).miscFile(resourceItem2).build(); @AT@ 58186 @LENGTH@ 167
---UPD VariableDeclarationFragment@@newModule2=new Module.Builder(moduleName2).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build() @TO@ newModule2=new Module.Builder(moduleName2).miscFile(resourceItem1).miscFile(resourceItem2).build() @AT@ 58193 @LENGTH@ 159
------UPD MethodInvocation@@new Module.Builder(moduleName2).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build() @TO@ new Module.Builder(moduleName2).miscFile(resourceItem1).miscFile(resourceItem2).build() @AT@ 58206 @LENGTH@ 146
---------UPD MethodInvocation@@MethodName:resourceRoot:[resourceItem2] @TO@ MethodName:miscFile:[resourceItem2] @AT@ 58206 @LENGTH@ 121
---------UPD MethodInvocation@@MethodName:resourceRoot:[resourceItem1] @TO@ MethodName:miscFile:[resourceItem1] @AT@ 58206 @LENGTH@ 76


INS ExpressionStatement@@MethodInvocation:context.getResult() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 8703 @LENGTH@ 20
---INS MethodInvocation@@context.getResult() @TO@ ExpressionStatement@@MethodInvocation:context.getResult() @AT@ 8703 @LENGTH@ 19
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult() @AT@ 8703 @LENGTH@ 7
------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult() @AT@ 8711 @LENGTH@ 11


UPD VariableDeclarationStatement@@List<String> allChildren=new ArrayList(); @TO@ List<String> allChildren=new ArrayList<String>(); @AT@ 4691 @LENGTH@ 43
---UPD VariableDeclarationFragment@@allChildren=new ArrayList() @TO@ allChildren=new ArrayList<String>() @AT@ 4704 @LENGTH@ 29
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<String>[] @AT@ 4718 @LENGTH@ 15
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 4720 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 4720 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 4730 @LENGTH@ 6
---------DEL SimpleType@@ArrayList @AT@ 4722 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.ManualIp,"${zk:" + parent + "/manulaip}") @TO@ MethodInvocation:service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.ManualIp,"${zk:" + parent + "/manualip}") @AT@ 12334 @LENGTH@ 123
---UPD MethodInvocation@@service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.ManualIp,"${zk:" + parent + "/manulaip}") @TO@ service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.ManualIp,"${zk:" + parent + "/manualip}") @AT@ 12334 @LENGTH@ 122
------UPD SimpleName@@MethodName:setContainerAttribute:[name, DataStore.ContainerAttribute.ManualIp, "${zk:" + parent + "/manulaip}"] @TO@ MethodName:setContainerAttribute:[name, DataStore.ContainerAttribute.ManualIp, "${zk:" + parent + "/manualip}"] @AT@ 12357 @LENGTH@ 99
---------UPD InfixExpression@@"${zk:" + parent + "/manulaip}" @TO@ "${zk:" + parent + "/manualip}" @AT@ 12424 @LENGTH@ 31
------------UPD StringLiteral@@"/manulaip}" @TO@ "/manualip}" @AT@ 12443 @LENGTH@ 12


INS FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @TO@ TypeDeclaration@@[public]CloudUtils,  @AT@ 1702 @LENGTH@ 117
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @AT@ 1702 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @AT@ 1710 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @AT@ 1717 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @AT@ 1723 @LENGTH@ 6
---INS VariableDeclarationFragment@@AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs" @TO@ FieldDeclaration@@private, static, final, String, [AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs"] @AT@ 1730 @LENGTH@ 88
------INS SimpleName@@AMI_QUERY_FORMAT @TO@ VariableDeclarationFragment@@AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs" @AT@ 1730 @LENGTH@ 16
------INS StringLiteral@@"owner-id=%s;state=available;image-type=machine;root-device-type=ebs" @TO@ VariableDeclarationFragment@@AMI_QUERY_FORMAT="owner-id=%s;state=available;image-type=machine;root-device-type=ebs" @AT@ 1749 @LENGTH@ 69


UPD MethodDeclaration@@public, void, MethodName:testMopnitorAuditor,  @TO@ public, void, MethodName:testMonitorAuditor,  @AT@ 9096 @LENGTH@ 112
---UPD SimpleName@@MethodName:testMopnitorAuditor @TO@ MethodName:testMonitorAuditor @AT@ 9108 @LENGTH@ 19


UPD IfStatement@@if (treeCache != null) {  treeCache.getListenable().removeListener(this);  Closeables.closeQuitely(treeCache);} @TO@ if (treeCache != null) {  treeCache.getListenable().removeListener(this);  Closeables.closeQuitely(treeCache);  treeCache=null;} @AT@ 5341 @LENGTH@ 142
---UPD Block@@ThenBody:{  treeCache.getListenable().removeListener(this);  Closeables.closeQuitely(treeCache);} @TO@ ThenBody:{  treeCache.getListenable().removeListener(this);  Closeables.closeQuitely(treeCache);  treeCache=null;} @AT@ 5364 @LENGTH@ 119
------INS ExpressionStatement@@Assignment:treeCache=null @TO@ Block@@ThenBody:{  treeCache.getListenable().removeListener(this);  Closeables.closeQuitely(treeCache);} @AT@ 5486 @LENGTH@ 17
---------INS Assignment@@treeCache=null @TO@ ExpressionStatement@@Assignment:treeCache=null @AT@ 5486 @LENGTH@ 16
------------INS SimpleName@@treeCache @TO@ Assignment@@treeCache=null @AT@ 5486 @LENGTH@ 9
------------INS Operator@@= @TO@ Assignment@@treeCache=null @AT@ 5495 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@treeCache=null @AT@ 5498 @LENGTH@ 4


UPD CatchClause@@catch (ExecutionException e) {  FabricException.launderThrowable(e);} @TO@ catch (ExecutionException e) {  throw FabricException.launderThrowable(e);} @AT@ 4451 @LENGTH@ 89
---INS ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @TO@ CatchClause@@catch (ExecutionException e) {  FabricException.launderThrowable(e);} @AT@ 4494 @LENGTH@ 42
------MOV MethodInvocation@@FabricException.launderThrowable(e) @TO@ ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @AT@ 4494 @LENGTH@ 35
---DEL ExpressionStatement@@MethodInvocation:FabricException.launderThrowable(e) @AT@ 4494 @LENGTH@ 36


UPD IfStatement@@if ((oldValue.equals(newValue) == false) && (newValue.asBoolean() == false)) {  RbacSanityCheckOperation.registerOperation(context);} @TO@ if ((oldValue.equals(newValue) == false) && newValue.isDefined() && (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false)) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2305 @LENGTH@ 153
---UPD InfixExpression@@(oldValue.equals(newValue) == false) && (newValue.asBoolean() == false) @TO@ (oldValue.equals(newValue) == false) && newValue.isDefined() && (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false) @AT@ 2309 @LENGTH@ 71
------UPD ParenthesizedExpression@@(newValue.asBoolean() == false) @TO@ (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false) @AT@ 2349 @LENGTH@ 31
---------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @TO@ ParenthesizedExpression@@(newValue.asBoolean() == false) @AT@ 2446 @LENGTH@ 75
------------MOV InfixExpression@@newValue.asBoolean() == false @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2350 @LENGTH@ 29
------------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2446 @LENGTH@ 42
---------------INS MethodInvocation@@newValue.getType() @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2446 @LENGTH@ 18
------------------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.getType() @AT@ 2446 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@newValue.getType() @AT@ 2455 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2464 @LENGTH@ 2
---------------INS QualifiedName@@ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2468 @LENGTH@ 20
------------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2468 @LENGTH@ 9
------------------INS SimpleName@@EXPRESSION @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2478 @LENGTH@ 10
------------INS Operator@@|| @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2488 @LENGTH@ 2
------INS MethodInvocation@@newValue.isDefined() @TO@ InfixExpression@@(oldValue.equals(newValue) == false) && (newValue.asBoolean() == false) @AT@ 2405 @LENGTH@ 20
---------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.isDefined() @AT@ 2405 @LENGTH@ 8
---------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@newValue.isDefined() @AT@ 2414 @LENGTH@ 11


INS FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @TO@ TypeDeclaration@@[public]Constants,  @AT@ 3580 @LENGTH@ 45
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3580 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3587 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3594 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3600 @LENGTH@ 6
---INS VariableDeclarationFragment@@SYSTEM="system" @TO@ FieldDeclaration@@public, static, final, String, [SYSTEM="system"] @AT@ 3607 @LENGTH@ 17
------INS SimpleName@@SYSTEM @TO@ VariableDeclarationFragment@@SYSTEM="system" @AT@ 3607 @LENGTH@ 6
------INS StringLiteral@@"system" @TO@ VariableDeclarationFragment@@SYSTEM="system" @AT@ 3616 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:cacheName=configuration.getCasheName() @TO@ Assignment:cacheName=configuration.getCacheName() @AT@ 1699 @LENGTH@ 41
---UPD Assignment@@cacheName=configuration.getCasheName() @TO@ cacheName=configuration.getCacheName() @AT@ 1699 @LENGTH@ 40
------UPD MethodInvocation@@configuration.getCasheName() @TO@ configuration.getCacheName() @AT@ 1711 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getCasheName:[] @TO@ MethodName:getCacheName:[] @AT@ 1725 @LENGTH@ 14


INS MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @TO@ TypeDeclaration@@[@ThreadSafe, public, abstract]AbstractDataStore, AbstractComponent[DataStore, PathChildrenCacheListener] @AT@ 29533 @LENGTH@ 490
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29533 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29540 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 29540 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 29545 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29553 @LENGTH@ 25
---INS SingleVariableDeclaration@@String version @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29579 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String version @AT@ 29579 @LENGTH@ 6
------INS SimpleName@@version @TO@ SingleVariableDeclaration@@String version @AT@ 29586 @LENGTH@ 7
---INS SingleVariableDeclaration@@String profile @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29595 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String profile @AT@ 29595 @LENGTH@ 6
------INS SimpleName@@profile @TO@ SingleVariableDeclaration@@String profile @AT@ 29602 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertValid() @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29621 @LENGTH@ 14
------INS MethodInvocation@@MethodName:assertValid:[] @TO@ ExpressionStatement@@MethodInvocation:assertValid() @AT@ 29621 @LENGTH@ 13
---INS TryStatement@@try {  Map<String,byte[]> configs=getFileConfigurations(version,profile);  return new ArrayList<String>(configs.keySet());} catch (Exception e) {  throw FabricException.launderThrowable(e);} @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String version, String profile,  @AT@ 29772 @LENGTH@ 245
------INS VariableDeclarationStatement@@Map<String,byte[]> configs=getFileConfigurations(version,profile); @TO@ TryStatement@@try {  Map<String,byte[]> configs=getFileConfigurations(version,profile);  return new ArrayList<String>(configs.keySet());} catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 29790 @LENGTH@ 70
---------INS ParameterizedType@@Map<String,byte[]> @TO@ VariableDeclarationStatement@@Map<String,byte[]> configs=getFileConfigurations(version,profile); @AT@ 29790 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,byte[]> @AT@ 29790 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,byte[]> @AT@ 29794 @LENGTH@ 6
------------INS ArrayType@@byte[] @TO@ ParameterizedType@@Map<String,byte[]> @AT@ 29802 @LENGTH@ 6
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 29802 @LENGTH@ 4
---------INS VariableDeclarationFragment@@configs=getFileConfigurations(version,profile) @TO@ VariableDeclarationStatement@@Map<String,byte[]> configs=getFileConfigurations(version,profile); @AT@ 29810 @LENGTH@ 49
------------INS SimpleName@@configs @TO@ VariableDeclarationFragment@@configs=getFileConfigurations(version,profile) @AT@ 29810 @LENGTH@ 7
------------INS MethodInvocation@@getFileConfigurations(version,profile) @TO@ VariableDeclarationFragment@@configs=getFileConfigurations(version,profile) @AT@ 29820 @LENGTH@ 39
---------------INS SimpleName@@MethodName:getFileConfigurations:[version, profile] @TO@ MethodInvocation@@getFileConfigurations(version,profile) @AT@ 29820 @LENGTH@ 39
------------------INS SimpleName@@version @TO@ SimpleName@@MethodName:getFileConfigurations:[version, profile] @AT@ 29842 @LENGTH@ 7
------------------INS SimpleName@@profile @TO@ SimpleName@@MethodName:getFileConfigurations:[version, profile] @AT@ 29851 @LENGTH@ 7
------INS ReturnStatement@@ClassInstanceCreation:new ArrayList<String>(configs.keySet()) @TO@ TryStatement@@try {  Map<String,byte[]> configs=getFileConfigurations(version,profile);  return new ArrayList<String>(configs.keySet());} catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 29873 @LENGTH@ 47
---------INS ClassInstanceCreation@@ArrayList<String>[configs.keySet()] @TO@ ReturnStatement@@ClassInstanceCreation:new ArrayList<String>(configs.keySet()) @AT@ 29880 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[configs.keySet()] @AT@ 29880 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[configs.keySet()] @AT@ 29884 @LENGTH@ 17
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 29884 @LENGTH@ 9
---------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 29894 @LENGTH@ 6
------------INS MethodInvocation@@configs.keySet() @TO@ ClassInstanceCreation@@ArrayList<String>[configs.keySet()] @AT@ 29902 @LENGTH@ 16
---------------INS SimpleName@@Name:configs @TO@ MethodInvocation@@configs.keySet() @AT@ 29902 @LENGTH@ 7
---------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@configs.keySet() @AT@ 29910 @LENGTH@ 8
------INS CatchClause@@catch (Exception e) {  throw FabricException.launderThrowable(e);} @TO@ TryStatement@@try {  Map<String,byte[]> configs=getFileConfigurations(version,profile);  return new ArrayList<String>(configs.keySet());} catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 29931 @LENGTH@ 86
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 29938 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 29938 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 29948 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @TO@ CatchClause@@catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 29965 @LENGTH@ 42
------------INS MethodInvocation@@FabricException.launderThrowable(e) @TO@ ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @AT@ 29971 @LENGTH@ 35
---------------INS SimpleName@@Name:FabricException @TO@ MethodInvocation@@FabricException.launderThrowable(e) @AT@ 29971 @LENGTH@ 15
---------------INS SimpleName@@MethodName:launderThrowable:[e] @TO@ MethodInvocation@@FabricException.launderThrowable(e) @AT@ 29987 @LENGTH@ 19
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:launderThrowable:[e] @AT@ 30004 @LENGTH@ 1


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2357 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2373 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2380 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2388 @LENGTH@ 10


UPD IfStatement@@if (legacyServices != null) {  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ if (legacyServices != null) {  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }  legacyServices.clear();} @AT@ 11241 @LENGTH@ 172
---UPD Block@@ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }  legacyServices.clear();} @AT@ 11269 @LENGTH@ 144
------INS ExpressionStatement@@MethodInvocation:legacyServices.clear() @TO@ Block@@ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 11416 @LENGTH@ 23
---------INS MethodInvocation@@legacyServices.clear() @TO@ ExpressionStatement@@MethodInvocation:legacyServices.clear() @AT@ 11416 @LENGTH@ 22
------------INS SimpleName@@Name:legacyServices @TO@ MethodInvocation@@legacyServices.clear() @AT@ 11416 @LENGTH@ 14
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@legacyServices.clear() @AT@ 11431 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:nettySharedHttpServer.setClassResolver(new DefaultClassResolver()) @TO@ MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1291 @LENGTH@ 67
---INS MethodInvocation@@nettySharedHttpServer.setClassResolver(new DefaultClassResolver()) @TO@ ExpressionStatement@@MethodInvocation:nettySharedHttpServer.setClassResolver(new DefaultClassResolver()) @AT@ 1291 @LENGTH@ 66
------INS SimpleName@@Name:nettySharedHttpServer @TO@ MethodInvocation@@nettySharedHttpServer.setClassResolver(new DefaultClassResolver()) @AT@ 1291 @LENGTH@ 21
------INS SimpleName@@MethodName:setClassResolver:[new DefaultClassResolver()] @TO@ MethodInvocation@@nettySharedHttpServer.setClassResolver(new DefaultClassResolver()) @AT@ 1313 @LENGTH@ 44
---------INS ClassInstanceCreation@@DefaultClassResolver[] @TO@ SimpleName@@MethodName:setClassResolver:[new DefaultClassResolver()] @AT@ 1330 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultClassResolver[] @AT@ 1330 @LENGTH@ 3
------------INS SimpleType@@DefaultClassResolver @TO@ ClassInstanceCreation@@DefaultClassResolver[] @AT@ 1334 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testSelect,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 4086 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 4086 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 4093 @LENGTH@ 4
---INS SimpleName@@MethodName:testSelect @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 4098 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.select(1) @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 4159 @LENGTH@ 21
------INS MethodInvocation@@connection.select(1) @TO@ ExpressionStatement@@MethodInvocation:connection.select(1) @AT@ 4159 @LENGTH@ 20
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.select(1) @AT@ 4159 @LENGTH@ 10
---------INS SimpleName@@MethodName:select:[1] @TO@ MethodInvocation@@connection.select(1) @AT@ 4170 @LENGTH@ 9
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:select:[1] @AT@ 4177 @LENGTH@ 1


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2357 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2373 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2380 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2388 @LENGTH@ 10


UPD MethodDeclaration@@protected, boolean, MethodName:cleanBefore,  @TO@ protected, Resource, MethodName:getLdifFileResource,  @AT@ 2474 @LENGTH@ 63
---INS SimpleType@@Resource @TO@ MethodDeclaration@@protected, boolean, MethodName:cleanBefore,  @AT@ 2374 @LENGTH@ 8
---DEL PrimitiveType@@boolean @AT@ 2484 @LENGTH@ 7
---UPD SimpleName@@MethodName:cleanBefore @TO@ MethodName:getLdifFileResource @AT@ 2492 @LENGTH@ 11
---UPD ReturnStatement@@BooleanLiteral:false @TO@ ClassInstanceCreation:new ClassPathResource("/setup_data_subtree.ldif") @AT@ 2517 @LENGTH@ 13
------INS ClassInstanceCreation@@ClassPathResource["/setup_data_subtree.ldif"] @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2423 @LENGTH@ 49
---------INS New@@new @TO@ ClassInstanceCreation@@ClassPathResource["/setup_data_subtree.ldif"] @AT@ 2423 @LENGTH@ 3
---------INS SimpleType@@ClassPathResource @TO@ ClassInstanceCreation@@ClassPathResource["/setup_data_subtree.ldif"] @AT@ 2427 @LENGTH@ 17
---------INS StringLiteral@@"/setup_data_subtree.ldif" @TO@ ClassInstanceCreation@@ClassPathResource["/setup_data_subtree.ldif"] @AT@ 2445 @LENGTH@ 26
------DEL BooleanLiteral@@false @AT@ 2524 @LENGTH@ 5


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=requestFactory.createStoredAuthorizationRequest(authorizationRequest); @TO@ OAuth2Request storedOAuth2Request=requestFactory.createOAuth2Request(authorizationRequest); @AT@ 3054 @LENGTH@ 106
---UPD VariableDeclarationFragment@@storedOAuth2Request=requestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ storedOAuth2Request=requestFactory.createOAuth2Request(authorizationRequest) @AT@ 3068 @LENGTH@ 91
------UPD MethodInvocation@@requestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ requestFactory.createOAuth2Request(authorizationRequest) @AT@ 3090 @LENGTH@ 69
---------UPD SimpleName@@MethodName:createStoredAuthorizationRequest:[authorizationRequest] @TO@ MethodName:createOAuth2Request:[authorizationRequest] @AT@ 3105 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:Validate.validState(privilizer.policy == marker.value(),"%s already privilized with policy %s",type.getTarget().getName(),marker.value()) @TO@ MethodInvocation:Validate.validState(privilizer.policy.name().equals(marker.value()),"%s already privilized with policy %s",type.getTarget().getName(),marker.value()) @AT@ 3309 @LENGTH@ 155
---UPD MethodInvocation@@Validate.validState(privilizer.policy == marker.value(),"%s already privilized with policy %s",type.getTarget().getName(),marker.value()) @TO@ Validate.validState(privilizer.policy.name().equals(marker.value()),"%s already privilized with policy %s",type.getTarget().getName(),marker.value()) @AT@ 3309 @LENGTH@ 154
------UPD SimpleName@@MethodName:validState:[privilizer.policy == marker.value(), "%s already privilized with policy %s", type.getTarget().getName(), marker.value()] @TO@ MethodName:validState:[privilizer.policy.name().equals(marker.value()), "%s already privilized with policy %s", type.getTarget().getName(), marker.value()] @AT@ 3318 @LENGTH@ 145
---------INS MethodInvocation@@privilizer.policy.name().equals(marker.value()) @TO@ SimpleName@@MethodName:validState:[privilizer.policy == marker.value(), "%s already privilized with policy %s", type.getTarget().getName(), marker.value()] @AT@ 3329 @LENGTH@ 47
------------INS MethodInvocation@@MethodName:name:[] @TO@ MethodInvocation@@privilizer.policy.name().equals(marker.value()) @AT@ 3329 @LENGTH@ 24
------------INS QualifiedName@@Name:privilizer.policy @TO@ MethodInvocation@@privilizer.policy.name().equals(marker.value()) @AT@ 3329 @LENGTH@ 17
------------INS SimpleName@@MethodName:equals:[marker.value()] @TO@ MethodInvocation@@privilizer.policy.name().equals(marker.value()) @AT@ 3354 @LENGTH@ 22
---------------INS MethodInvocation@@marker.value() @TO@ SimpleName@@MethodName:equals:[marker.value()] @AT@ 3361 @LENGTH@ 14
------------------MOV SimpleName@@Name:marker @TO@ MethodInvocation@@marker.value() @AT@ 3350 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@marker.value() @AT@ 3357 @LENGTH@ 7
---------DEL InfixExpression@@privilizer.policy == marker.value() @AT@ 3329 @LENGTH@ 35
------------DEL QualifiedName@@privilizer.policy @AT@ 3329 @LENGTH@ 17
---------------DEL SimpleName@@privilizer @AT@ 3329 @LENGTH@ 10
---------------DEL SimpleName@@policy @AT@ 3340 @LENGTH@ 6
------------DEL Operator@@== @AT@ 3346 @LENGTH@ 2
------------DEL MethodInvocation@@marker.value() @AT@ 3350 @LENGTH@ 14


DEL VariableDeclarationStatement@@boolean fuseCart=options.isEnsembleServer(); @AT@ 7615 @LENGTH@ 46
---DEL PrimitiveType@@boolean @AT@ 7615 @LENGTH@ 7
---DEL VariableDeclarationFragment@@fuseCart=options.isEnsembleServer() @AT@ 7623 @LENGTH@ 37
------DEL SimpleName@@fuseCart @AT@ 7623 @LENGTH@ 8
------DEL MethodInvocation@@options.isEnsembleServer() @AT@ 7634 @LENGTH@ 26
---------DEL SimpleName@@Name:options @AT@ 7634 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isEnsembleServer:[] @AT@ 7642 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:element.setAttribute("id",contextId) @TO@ MethodInvocation:element.setAttributeNS(null,"id",contextId) @AT@ 8358 @LENGTH@ 38
---UPD MethodInvocation@@element.setAttribute("id",contextId) @TO@ element.setAttributeNS(null,"id",contextId) @AT@ 8358 @LENGTH@ 37
------UPD SimpleName@@MethodName:setAttribute:["id", contextId] @TO@ MethodName:setAttributeNS:[null, "id", contextId] @AT@ 8366 @LENGTH@ 29
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setAttribute:["id", contextId] @AT@ 8381 @LENGTH@ 4


MOV FieldDeclaration@@protected, final, Logger, [LOG=LoggerFactory.getLogger(getClass())] @TO@ TypeDeclaration@@[public, abstract]AbstractClientBase, [SalesforceSession.SalesforceSessionListener, Service] @AT@ 1668 @LENGTH@ 65


INS MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @TO@ TypeDeclaration@@[public]SqlWindowingPagingQueryProviderTests, AbstractSqlPagingQueryProviderTests @AT@ 4348 @LENGTH@ 658
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4348 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4355 @LENGTH@ 4
---INS SimpleName@@MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4360 @LENGTH@ 55
---INS ExpressionStatement@@MethodInvocation:pagingQueryProvider.setFromClause("foo_e E, foo_i I") @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4423 @LENGTH@ 54
------INS MethodInvocation@@pagingQueryProvider.setFromClause("foo_e E, foo_i I") @TO@ ExpressionStatement@@MethodInvocation:pagingQueryProvider.setFromClause("foo_e E, foo_i I") @AT@ 4423 @LENGTH@ 53
---------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.setFromClause("foo_e E, foo_i I") @AT@ 4423 @LENGTH@ 19
---------INS SimpleName@@MethodName:setFromClause:["foo_e E, foo_i I"] @TO@ MethodInvocation@@pagingQueryProvider.setFromClause("foo_e E, foo_i I") @AT@ 4443 @LENGTH@ 33
------------INS StringLiteral@@"foo_e E, foo_i I" @TO@ SimpleName@@MethodName:setFromClause:["foo_e E, foo_i I"] @AT@ 4457 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:pagingQueryProvider.setWhereClause("E.id=I.id") @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4481 @LENGTH@ 48
------INS MethodInvocation@@pagingQueryProvider.setWhereClause("E.id=I.id") @TO@ ExpressionStatement@@MethodInvocation:pagingQueryProvider.setWhereClause("E.id=I.id") @AT@ 4481 @LENGTH@ 47
---------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.setWhereClause("E.id=I.id") @AT@ 4481 @LENGTH@ 19
---------INS SimpleName@@MethodName:setWhereClause:["E.id=I.id"] @TO@ MethodInvocation@@pagingQueryProvider.setWhereClause("E.id=I.id") @AT@ 4501 @LENGTH@ 27
------------INS StringLiteral@@"E.id=I.id" @TO@ SimpleName@@MethodName:setWhereClause:["E.id=I.id"] @AT@ 4516 @LENGTH@ 11
---INS VariableDeclarationStatement@@Map<String,Order> sortKeys=new HashMap<String,Order>(); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4537 @LENGTH@ 59
------INS ParameterizedType@@Map<String,Order> @TO@ VariableDeclarationStatement@@Map<String,Order> sortKeys=new HashMap<String,Order>(); @AT@ 4537 @LENGTH@ 18
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Order> @AT@ 4537 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Order> @AT@ 4541 @LENGTH@ 6
---------INS SimpleType@@Order @TO@ ParameterizedType@@Map<String,Order> @AT@ 4549 @LENGTH@ 5
------INS VariableDeclarationFragment@@sortKeys=new HashMap<String,Order>() @TO@ VariableDeclarationStatement@@Map<String,Order> sortKeys=new HashMap<String,Order>(); @AT@ 4556 @LENGTH@ 39
---------INS SimpleName@@sortKeys @TO@ VariableDeclarationFragment@@sortKeys=new HashMap<String,Order>() @AT@ 4556 @LENGTH@ 8
---------INS ClassInstanceCreation@@HashMap<String,Order>[] @TO@ VariableDeclarationFragment@@sortKeys=new HashMap<String,Order>() @AT@ 4567 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,Order>[] @AT@ 4567 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,Order> @TO@ ClassInstanceCreation@@HashMap<String,Order>[] @AT@ 4571 @LENGTH@ 22
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 4571 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 4579 @LENGTH@ 6
---------------INS SimpleType@@Order @TO@ ParameterizedType@@HashMap<String,Order> @AT@ 4587 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:sortKeys.put("E.id",Order.DESCENDING) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4600 @LENGTH@ 39
------INS MethodInvocation@@sortKeys.put("E.id",Order.DESCENDING) @TO@ ExpressionStatement@@MethodInvocation:sortKeys.put("E.id",Order.DESCENDING) @AT@ 4600 @LENGTH@ 38
---------INS SimpleName@@Name:sortKeys @TO@ MethodInvocation@@sortKeys.put("E.id",Order.DESCENDING) @AT@ 4600 @LENGTH@ 8
---------INS SimpleName@@MethodName:put:["E.id", Order.DESCENDING] @TO@ MethodInvocation@@sortKeys.put("E.id",Order.DESCENDING) @AT@ 4609 @LENGTH@ 29
------------INS StringLiteral@@"E.id" @TO@ SimpleName@@MethodName:put:["E.id", Order.DESCENDING] @AT@ 4613 @LENGTH@ 6
------------INS QualifiedName@@Order.DESCENDING @TO@ SimpleName@@MethodName:put:["E.id", Order.DESCENDING] @AT@ 4621 @LENGTH@ 16
---------------INS SimpleName@@Order @TO@ QualifiedName@@Order.DESCENDING @AT@ 4621 @LENGTH@ 5
---------------INS SimpleName@@DESCENDING @TO@ QualifiedName@@Order.DESCENDING @AT@ 4627 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:pagingQueryProvider.setSortKeys(sortKeys) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4645 @LENGTH@ 42
------INS MethodInvocation@@pagingQueryProvider.setSortKeys(sortKeys) @TO@ ExpressionStatement@@MethodInvocation:pagingQueryProvider.setSortKeys(sortKeys) @AT@ 4645 @LENGTH@ 41
---------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.setSortKeys(sortKeys) @AT@ 4645 @LENGTH@ 19
---------INS SimpleName@@MethodName:setSortKeys:[sortKeys] @TO@ MethodInvocation@@pagingQueryProvider.setSortKeys(sortKeys) @AT@ 4665 @LENGTH@ 21
------------INS SimpleName@@sortKeys @TO@ SimpleName@@MethodName:setSortKeys:[sortKeys] @AT@ 4677 @LENGTH@ 8
---INS VariableDeclarationStatement@@String sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC"; @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4695 @LENGTH@ 209
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC"; @AT@ 4695 @LENGTH@ 6
------INS VariableDeclarationFragment@@sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @TO@ VariableDeclarationStatement@@String sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC"; @AT@ 4702 @LENGTH@ 201
---------INS SimpleName@@sql @TO@ VariableDeclarationFragment@@sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @AT@ 4702 @LENGTH@ 3
---------INS StringLiteral@@"SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @TO@ VariableDeclarationFragment@@sql="SELECT TMP_SUB.id FROM ( SELECT E.id, ROW_NUMBER() OVER ( ORDER BY E.id DESC) AS ROW_NUMBER FROM foo_e E, foo_i I WHERE E.id=I.id) AS TMP_SUB WHERE TMP_SUB.ROW_NUMBER = 1 ORDER BY TMP_SUB.id DESC" @AT@ 4706 @LENGTH@ 197
---INS VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4908 @LENGTH@ 69
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 4908 @LENGTH@ 6
------INS VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationStatement@@String s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize); @AT@ 4915 @LENGTH@ 61
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 4915 @LENGTH@ 1
---------INS MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @TO@ VariableDeclarationFragment@@s=pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 4919 @LENGTH@ 57
------------INS SimpleName@@Name:pagingQueryProvider @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 4919 @LENGTH@ 19
------------INS SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @TO@ MethodInvocation@@pagingQueryProvider.generateJumpToItemQuery(45,pageSize) @AT@ 4939 @LENGTH@ 37
---------------INS NumberLiteral@@45 @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 4963 @LENGTH@ 2
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:generateJumpToItemQuery:[45, pageSize] @AT@ 4967 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(sql,s) @TO@ MethodDeclaration@@public, void, MethodName:testGenerateJumpToItemQueryForTableQualifierReplacement,  @AT@ 4981 @LENGTH@ 21
------INS MethodInvocation@@assertEquals(sql,s) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(sql,s) @AT@ 4981 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertEquals:[sql, s] @TO@ MethodInvocation@@assertEquals(sql,s) @AT@ 4981 @LENGTH@ 20
------------INS SimpleName@@sql @TO@ SimpleName@@MethodName:assertEquals:[sql, s] @AT@ 4994 @LENGTH@ 3
------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:[sql, s] @AT@ 4999 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:fail("content not found module for " + moduleName + " in "+ asList(modulesPath)) @TO@ MethodInvocation:fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5708 @LENGTH@ 82
---UPD MethodInvocation@@fail("content not found module for " + moduleName + " in "+ asList(modulesPath)) @TO@ fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5708 @LENGTH@ 81
------UPD SimpleName@@MethodName:fail:["content not found module for " + moduleName + " in "+ asList(modulesPath)] @TO@ MethodName:fail:["content not found bundle for " + moduleName + " in "+ asList(bundlesPath)] @AT@ 5708 @LENGTH@ 81
---------UPD InfixExpression@@"content not found module for " + moduleName + " in "+ asList(modulesPath) @TO@ "content not found bundle for " + moduleName + " in "+ asList(bundlesPath) @AT@ 5713 @LENGTH@ 75
------------UPD StringLiteral@@"content not found module for " @TO@ "content not found bundle for " @AT@ 5713 @LENGTH@ 31
------------UPD MethodInvocation@@asList(modulesPath) @TO@ asList(bundlesPath) @AT@ 5769 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:asList:[modulesPath] @TO@ MethodName:asList:[bundlesPath] @AT@ 5769 @LENGTH@ 19
------------------UPD SimpleName@@modulesPath @TO@ bundlesPath @AT@ 5776 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:asList:[modulesPath] @TO@ MethodName:asList:[bundlesPath] @AT@ 5769 @LENGTH@ 19
------------------UPD SimpleName@@modulesPath @TO@ bundlesPath @AT@ 5776 @LENGTH@ 11


UPD IfStatement@@if (type.isAssignableFrom(permission.getClass())) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @TO@ if (permission instanceof ManagementPermission) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2735 @LENGTH@ 287
---INS InstanceofExpression@@permission instanceof ManagementPermission @TO@ IfStatement@@if (type.isAssignableFrom(permission.getClass())) {  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2521 @LENGTH@ 42
------INS SimpleName@@permission @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2521 @LENGTH@ 10
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2532 @LENGTH@ 10
------INS SimpleType@@ManagementPermission @TO@ InstanceofExpression@@permission instanceof ManagementPermission @AT@ 2543 @LENGTH@ 20
---DEL MethodInvocation@@type.isAssignableFrom(permission.getClass()) @AT@ 2739 @LENGTH@ 44
------DEL SimpleName@@Name:type @AT@ 2739 @LENGTH@ 4
------DEL SimpleName@@MethodName:isAssignableFrom:[permission.getClass()] @AT@ 2744 @LENGTH@ 39
---------DEL MethodInvocation@@permission.getClass() @AT@ 2761 @LENGTH@ 21
------------DEL SimpleName@@Name:permission @AT@ 2761 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getClass:[] @AT@ 2772 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:smallTinyIntBoundsCheckHelper(writeDataFile.getAbsolutePath(),ExecJob.JOB_STATUS.COMPLETED) @TO@ MethodInvocation:smallTinyIntBoundsCheckHelper(writeDataFile.getPath().replaceAll("\\\\","/"),ExecJob.JOB_STATUS.COMPLETED) @AT@ 4834 @LENGTH@ 93
---UPD MethodInvocation@@smallTinyIntBoundsCheckHelper(writeDataFile.getAbsolutePath(),ExecJob.JOB_STATUS.COMPLETED) @TO@ smallTinyIntBoundsCheckHelper(writeDataFile.getPath().replaceAll("\\\\","/"),ExecJob.JOB_STATUS.COMPLETED) @AT@ 4834 @LENGTH@ 92
------UPD SimpleName@@MethodName:smallTinyIntBoundsCheckHelper:[writeDataFile.getAbsolutePath(), ExecJob.JOB_STATUS.COMPLETED] @TO@ MethodName:smallTinyIntBoundsCheckHelper:[writeDataFile.getPath().replaceAll("\\\\","/"), ExecJob.JOB_STATUS.COMPLETED] @AT@ 4834 @LENGTH@ 92
---------UPD MethodInvocation@@writeDataFile.getAbsolutePath() @TO@ writeDataFile.getPath().replaceAll("\\\\","/") @AT@ 4864 @LENGTH@ 31
------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 4878 @LENGTH@ 17
---------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 4915 @LENGTH@ 6
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 4923 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@writeDataFile.getAbsolutePath() @AT@ 4880 @LENGTH@ 23


UPD FieldDeclaration@@static, final, String, [DEFAULT_VERSION="27.0"] @TO@ public, static, final, String, [DEFAULT_VERSION="27.0"] @AT@ 1491 @LENGTH@ 45
---INS Modifier@@public @TO@ FieldDeclaration@@static, final, String, [DEFAULT_VERSION="27.0"] @AT@ 1491 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @TO@ MethodDeclaration@@public, static, void, MethodName:writeRefs, final File file, final List<String> refs, IOException,  @AT@ 3728 @LENGTH@ 28
---INS MethodInvocation@@mkdir(file.getParentFile()) @TO@ ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @AT@ 3728 @LENGTH@ 27
------INS SimpleName@@MethodName:mkdir:[file.getParentFile()] @TO@ MethodInvocation@@mkdir(file.getParentFile()) @AT@ 3728 @LENGTH@ 27
---------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:mkdir:[file.getParentFile()] @AT@ 3734 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 3734 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 3739 @LENGTH@ 15


INS VariableDeclarationStatement@@CuratorFramework curator=this.curator; @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 6810 @LENGTH@ 40
---INS SimpleType@@CuratorFramework @TO@ VariableDeclarationStatement@@CuratorFramework curator=this.curator; @AT@ 6810 @LENGTH@ 16
---INS VariableDeclarationFragment@@curator=this.curator @TO@ VariableDeclarationStatement@@CuratorFramework curator=this.curator; @AT@ 6827 @LENGTH@ 22
------INS SimpleName@@curator @TO@ VariableDeclarationFragment@@curator=this.curator @AT@ 6827 @LENGTH@ 7
------INS FieldAccess@@this.curator @TO@ VariableDeclarationFragment@@curator=this.curator @AT@ 6837 @LENGTH@ 12
---------INS ThisExpression@@this @TO@ FieldAccess@@this.curator @AT@ 6837 @LENGTH@ 4
---------INS SimpleName@@curator @TO@ FieldAccess@@this.curator @AT@ 6842 @LENGTH@ 7


UPD SuperConstructorInvocation@@super(bindAddress,resolver,globalResolver,manualIp,minimumPort,maximumPort,profiles,getZooKeeperServerPort,zookeeperPassword,agentEnabled,autoImportEnabled,importPath,users,name,parent,providerType,ensembleServer,preferredAddress,systemProperties,number,proxyUri,zookeeperUrl,jvmOpts,version);
 @TO@ super(bindAddress,resolver,globalResolver,manualIp,minimumPort,maximumPort,profiles,getZooKeeperServerPort,zookeeperPassword,agentEnabled,autoImportEnabled,importPath,users,name,parent,providerType,ensembleServer,preferredAddress,systemProperties,number,proxyUri,zookeeperUrl,jvmOpts,false,version);
 @AT@ 2616 @LENGTH@ 316
---INS BooleanLiteral@@false @TO@ SuperConstructorInvocation@@super(bindAddress,resolver,globalResolver,manualIp,minimumPort,maximumPort,profiles,getZooKeeperServerPort,zookeeperPassword,agentEnabled,autoImportEnabled,importPath,users,name,parent,providerType,ensembleServer,preferredAddress,systemProperties,number,proxyUri,zookeeperUrl,jvmOpts,version);
 @AT@ 2923 @LENGTH@ 5


INS IfStatement@@if (overlays != null) {  for (  VirtualFile overlay : overlays) {    VirtualFile child=overlay.getChild(p);    if (child.exists()) {      URL url=child.toURL();      return new URLResource(url,url.openConnection());    }  }} @TO@ MethodDeclaration@@public, Resource, MethodName:getResource, final String path, IOException,  @AT@ 1312 @LENGTH@ 326
---INS InfixExpression@@overlays != null @TO@ IfStatement@@if (overlays != null) {  for (  VirtualFile overlay : overlays) {    VirtualFile child=overlay.getChild(p);    if (child.exists()) {      URL url=child.toURL();      return new URLResource(url,url.openConnection());    }  }} @AT@ 1315 @LENGTH@ 16
------INS SimpleName@@overlays @TO@ InfixExpression@@overlays != null @AT@ 1315 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@overlays != null @AT@ 1323 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@overlays != null @AT@ 1327 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  VirtualFile overlay : overlays) {    VirtualFile child=overlay.getChild(p);    if (child.exists()) {      URL url=child.toURL();      return new URLResource(url,url.openConnection());    }  }} @TO@ IfStatement@@if (overlays != null) {  for (  VirtualFile overlay : overlays) {    VirtualFile child=overlay.getChild(p);    if (child.exists()) {      URL url=child.toURL();      return new URLResource(url,url.openConnection());    }  }} @AT@ 1333 @LENGTH@ 305
------MOV EnhancedForStatement@@for (VirtualFile overlay : overlays) {  VirtualFile child=overlay.getChild(p);  if (child.exists()) {    URL url=child.toURL();    return new URLResource(url,url.openConnection());  }} @TO@ Block@@ThenBody:{  for (  VirtualFile overlay : overlays) {    VirtualFile child=overlay.getChild(p);    if (child.exists()) {      URL url=child.toURL();      return new URLResource(url,url.openConnection());    }  }} @AT@ 1312 @LENGTH@ 257


UPD TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  waitForProvisionSuccess(child2,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:ensemble-add --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @TO@ try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  waitForProvisionSuccess(child2,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:ensemble-add --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 3839 @LENGTH@ 1615
---INS ExpressionStatement@@MethodInvocation:Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT) @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  System.err.println(executeCommand("admin:start child2"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child2").getSshPort() + " localhost "+ joinCommand));  Container child1=fabricService.getContainer("child1");  Container child2=fabricService.getContainer("child2");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  waitForProvisionSuccess(child2,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:ensemble-add --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));  System.err.println(executeCommand("fabric:ensemble-remove --force child1 child2"));  Thread.sleep(5000);  getCurator().getZookeeperClient().blockUntilConnectedOrTimedOut();  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));  System.err.println(executeCommand("admin:stop child2"));} @AT@ 4728 @LENGTH@ 80
------INS MethodInvocation@@Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT) @TO@ ExpressionStatement@@MethodInvocation:Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT) @AT@ 4728 @LENGTH@ 79
---------INS SimpleName@@Name:Provision @TO@ MethodInvocation@@Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT) @AT@ 4728 @LENGTH@ 9
---------INS SimpleName@@MethodName:containersExist:[Arrays.asList("child1","child2"), PROVISION_TIMEOUT] @TO@ MethodInvocation@@Provision.containersExist(Arrays.asList("child1","child2"),PROVISION_TIMEOUT) @AT@ 4738 @LENGTH@ 69
------------INS MethodInvocation@@Arrays.asList("child1","child2") @TO@ SimpleName@@MethodName:containersExist:[Arrays.asList("child1","child2"), PROVISION_TIMEOUT] @AT@ 4754 @LENGTH@ 33
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("child1","child2") @AT@ 4754 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["child1", "child2"] @TO@ MethodInvocation@@Arrays.asList("child1","child2") @AT@ 4761 @LENGTH@ 26
------------------INS StringLiteral@@"child1" @TO@ SimpleName@@MethodName:asList:["child1", "child2"] @AT@ 4768 @LENGTH@ 8
------------------INS StringLiteral@@"child2" @TO@ SimpleName@@MethodName:asList:["child1", "child2"] @AT@ 4778 @LENGTH@ 8
------------INS SimpleName@@PROVISION_TIMEOUT @TO@ SimpleName@@MethodName:containersExist:[Arrays.asList("child1","child2"), PROVISION_TIMEOUT] @AT@ 4789 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @TO@ MethodDeclaration@@private, LegacyControllerKernelServicesProxy, MethodName:install, AbstractKernelServicesImpl mainServices, ModelInitializer modelInitializer, ModelWriteSanitizer modelWriteSanitizer, List<String> contentRepositoryContents, List<ModelNode> bootOperations, Exception,  @AT@ 31539 @LENGTH@ 69
---INS MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @TO@ ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31539 @LENGTH@ 68
------INS SimpleName@@Name:classLoaderBuilder @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31539 @LENGTH@ 18
------INS SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.modules.*"] @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31558 @LENGTH@ 49
---------INS StringLiteral@@"org.jboss.modules.*" @TO@ SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.modules.*"] @AT@ 31585 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:mapper.writeValue(writer,this) @TO@ MethodInvocation:MAPPER.writeValue(writer,this) @AT@ 1351 @LENGTH@ 32
---UPD MethodInvocation@@mapper.writeValue(writer,this) @TO@ MAPPER.writeValue(writer,this) @AT@ 1351 @LENGTH@ 31
------UPD SimpleName@@Name:mapper @TO@ Name:MAPPER @AT@ 1351 @LENGTH@ 6


UPD TryStatement@@try {  SOAPFault fault=SOAPFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL).createFault(input,SOAPConstants.SOAP_VERSIONMISMATCH_FAULT);  fault.setFaultActor("mr.actor");  fault.addDetail().addChildElement("test");  fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","NullPointerException"));  throw new SOAPFaultException(fault);} catch (SOAPException ex) {  ex.printStackTrace();} @TO@ try {  SOAPFault fault=SOAPFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL).createFault(input,SOAPConstants.SOAP_VERSIONMISMATCH_FAULT);  fault.setFaultActor("mr.actor");  fault.addDetail().addChildElement("test");  fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","NullPointerException"));  fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound"));  throw new SOAPFaultException(fault);} catch (SOAPException ex) {  ex.printStackTrace();} @AT@ 2307 @LENGTH@ 506
---INS ExpressionStatement@@MethodInvocation:fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound")) @TO@ TryStatement@@try {  SOAPFault fault=SOAPFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL).createFault(input,SOAPConstants.SOAP_VERSIONMISMATCH_FAULT);  fault.setFaultActor("mr.actor");  fault.addDetail().addChildElement("test");  fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","NullPointerException"));  throw new SOAPFaultException(fault);} catch (SOAPException ex) {  ex.printStackTrace();} @AT@ 2696 @LENGTH@ 85
------INS MethodInvocation@@fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound")) @TO@ ExpressionStatement@@MethodInvocation:fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound")) @AT@ 2696 @LENGTH@ 84
---------INS SimpleName@@Name:fault @TO@ MethodInvocation@@fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound")) @AT@ 2696 @LENGTH@ 5
---------INS SimpleName@@MethodName:appendFaultSubcode:[new QName("http://ws.gss.redhat.com/","OperatorNotFound")] @TO@ MethodInvocation@@fault.appendFaultSubcode(new QName("http://ws.gss.redhat.com/","OperatorNotFound")) @AT@ 2702 @LENGTH@ 78
------------INS ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @TO@ SimpleName@@MethodName:appendFaultSubcode:[new QName("http://ws.gss.redhat.com/","OperatorNotFound")] @AT@ 2721 @LENGTH@ 58
---------------INS New@@new @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2721 @LENGTH@ 3
---------------INS SimpleType@@QName @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2725 @LENGTH@ 5
---------------INS StringLiteral@@"http://ws.gss.redhat.com/" @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2731 @LENGTH@ 27
---------------INS StringLiteral@@"OperatorNotFound" @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2760 @LENGTH@ 18


MOV FieldDeclaration@@public, static, final, int, [REFLECTION_TEST_AGE=100] @TO@ TypeDeclaration@@[public, abstract]AvroConsumerTestSupport, AvroTestSupport @AT@ 2115 @LENGTH@ 50


INS MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpAllTracedMessages,  @TO@ TypeDeclaration@@[public]CamelFabricTracerMBean,  @AT@ 1231 @LENGTH@ 24
---INS ParameterizedType@@List<FabricTracerEventMessage> @TO@ MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpAllTracedMessages,  @AT@ 1200 @LENGTH@ 30
------INS SimpleType@@List @TO@ ParameterizedType@@List<FabricTracerEventMessage> @AT@ 1200 @LENGTH@ 4
------INS SimpleType@@FabricTracerEventMessage @TO@ ParameterizedType@@List<FabricTracerEventMessage> @AT@ 1205 @LENGTH@ 24
---INS SimpleName@@MethodName:dumpAllTracedMessages @TO@ MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpAllTracedMessages,  @AT@ 1231 @LENGTH@ 21


UPD MethodDeclaration@@OperationFailedException, MethodName:serverRequiresReload,  @TO@ OperationFailedException, MethodName:serverRequiresRestart,  @AT@ 4776 @LENGTH@ 23
---UPD SimpleName@@MethodName:serverRequiresReload @TO@ MethodName:serverRequiresRestart @AT@ 4776 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:format.validate() @TO@ MethodInvocation:this.format.validate() @AT@ 2293 @LENGTH@ 18
---UPD MethodInvocation@@format.validate() @TO@ this.format.validate() @AT@ 2293 @LENGTH@ 17
------INS FieldAccess@@this.format @TO@ MethodInvocation@@format.validate() @AT@ 2293 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.format @AT@ 2293 @LENGTH@ 4
---------INS SimpleName@@format @TO@ FieldAccess@@this.format @AT@ 2298 @LENGTH@ 6
------DEL SimpleName@@Name:format @AT@ 2293 @LENGTH@ 6


INS VariableDeclarationStatement@@NMTokenCache tokenCache=NMTokenCacheCompat.getNMTokenCache(); @TO@ MethodDeclaration@@protected, void, MethodName:populateNmTokenCache, AllocateResponse allocateResponse,  @AT@ 6808 @LENGTH@ 63
---INS SimpleType@@NMTokenCache @TO@ VariableDeclarationStatement@@NMTokenCache tokenCache=NMTokenCacheCompat.getNMTokenCache(); @AT@ 6808 @LENGTH@ 12
---INS VariableDeclarationFragment@@tokenCache=NMTokenCacheCompat.getNMTokenCache() @TO@ VariableDeclarationStatement@@NMTokenCache tokenCache=NMTokenCacheCompat.getNMTokenCache(); @AT@ 6821 @LENGTH@ 49
------INS SimpleName@@tokenCache @TO@ VariableDeclarationFragment@@tokenCache=NMTokenCacheCompat.getNMTokenCache() @AT@ 6821 @LENGTH@ 10
------INS MethodInvocation@@NMTokenCacheCompat.getNMTokenCache() @TO@ VariableDeclarationFragment@@tokenCache=NMTokenCacheCompat.getNMTokenCache() @AT@ 6834 @LENGTH@ 36
---------INS SimpleName@@Name:NMTokenCacheCompat @TO@ MethodInvocation@@NMTokenCacheCompat.getNMTokenCache() @AT@ 6834 @LENGTH@ 18
---------INS SimpleName@@MethodName:getNMTokenCache:[] @TO@ MethodInvocation@@NMTokenCacheCompat.getNMTokenCache() @AT@ 6853 @LENGTH@ 17


UPD VariableDeclarationStatement@@final List<ModelNode> hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList(); @TO@ final List<ModelNode> hostNodes=hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList(); @AT@ 2938 @LENGTH@ 121
---UPD VariableDeclarationFragment@@hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @TO@ hostNodes=hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 2960 @LENGTH@ 98
------DEL MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @AT@ 2972 @LENGTH@ 86
---------DEL MethodInvocation@@MethodName:resolveModelAttribute:[context, model] @AT@ 2972 @LENGTH@ 77
---------DEL QualifiedName@@Name:HostScopedRolesResourceDefinition.HOSTS @AT@ 2972 @LENGTH@ 39
------INS ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @TO@ VariableDeclarationFragment@@hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @AT@ 3124 @LENGTH@ 89
---------INS MethodInvocation@@hostsAttribute.isDefined() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3124 @LENGTH@ 26
------------MOV SimpleName@@context @TO@ MethodInvocation@@hostsAttribute.isDefined() @AT@ 3034 @LENGTH@ 7
------------MOV SimpleName@@model @TO@ MethodInvocation@@hostsAttribute.isDefined() @AT@ 3043 @LENGTH@ 5
---------INS MethodInvocation@@hostsAttribute.asList() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3153 @LENGTH@ 23
------------MOV SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@hostsAttribute.asList() @AT@ 3050 @LENGTH@ 8
------------INS SimpleName@@Name:hostsAttribute @TO@ MethodInvocation@@hostsAttribute.asList() @AT@ 3153 @LENGTH@ 14
---------INS MethodInvocation@@Collections.<ModelNode>emptyList() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3179 @LENGTH@ 34
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<ModelNode>emptyList() @AT@ 3179 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<ModelNode>emptyList() @AT@ 3202 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:parseAuthorization_1_3(reader,expectedNs,add,list) @TO@ MethodInvocation:parseAuthorization_1_3(reader,expectedNs,realmAddress,list) @AT@ 38227 @LENGTH@ 54
---UPD MethodInvocation@@parseAuthorization_1_3(reader,expectedNs,add,list) @TO@ parseAuthorization_1_3(reader,expectedNs,realmAddress,list) @AT@ 38227 @LENGTH@ 53
------UPD SimpleName@@MethodName:parseAuthorization_1_3:[reader, expectedNs, add, list] @TO@ MethodName:parseAuthorization_1_3:[reader, expectedNs, realmAddress, list] @AT@ 38227 @LENGTH@ 53
---------UPD SimpleName@@add @TO@ realmAddress @AT@ 38270 @LENGTH@ 3


UPD Block@@ThenBody:{  String contextPath=sname.getParent().getSimpleName().substring(9);  String endpointName=sname.getSimpleName();  final StringBuilder name=new StringBuilder(Endpoint.SEPID_DOMAIN + ":");  name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath);  name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName);  endpoints.add(ObjectNameFactory.create(name.toString()));} @TO@ ThenBody:{  String contextPath=sname.getParent().getSimpleName().substring(8);  String endpointName=sname.getSimpleName();  final StringBuilder name=new StringBuilder(Endpoint.SEPID_DOMAIN + ":");  name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",");  name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName);  endpoints.add(ObjectNameFactory.create(name.toString()));} @AT@ 1941 @LENGTH@ 492
---UPD VariableDeclarationStatement@@String contextPath=sname.getParent().getSimpleName().substring(9); @TO@ String contextPath=sname.getParent().getSimpleName().substring(8); @AT@ 1959 @LENGTH@ 68
------UPD VariableDeclarationFragment@@contextPath=sname.getParent().getSimpleName().substring(9) @TO@ contextPath=sname.getParent().getSimpleName().substring(8) @AT@ 1966 @LENGTH@ 60
---------UPD MethodInvocation@@sname.getParent().getSimpleName().substring(9) @TO@ sname.getParent().getSimpleName().substring(8) @AT@ 1980 @LENGTH@ 46
------------UPD SimpleName@@MethodName:substring:[9] @TO@ MethodName:substring:[8] @AT@ 2014 @LENGTH@ 12
---------------UPD NumberLiteral@@9 @TO@ 8 @AT@ 2024 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath) @TO@ MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @AT@ 2196 @LENGTH@ 65
------UPD MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath) @TO@ name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @AT@ 2196 @LENGTH@ 64
---------UPD SimpleName@@MethodName:append:[Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath] @TO@ MethodName:append:[Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ","] @AT@ 2201 @LENGTH@ 59
------------UPD InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath @TO@ Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ "," @AT@ 2208 @LENGTH@ 51
---------------INS StringLiteral@@"," @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath @AT@ 2262 @LENGTH@ 3


UPD VariableDeclarationStatement@@TokenRequest tokenRequest=getOAuth2RequestFactory().createTokenRequestFromAuthorizationRequest(authorizationRequest); @TO@ TokenRequest tokenRequest=getOAuth2RequestFactory().createTokenRequest(authorizationRequest,"implicit"); @AT@ 11989 @LENGTH@ 119
---UPD VariableDeclarationFragment@@tokenRequest=getOAuth2RequestFactory().createTokenRequestFromAuthorizationRequest(authorizationRequest) @TO@ tokenRequest=getOAuth2RequestFactory().createTokenRequest(authorizationRequest,"implicit") @AT@ 12002 @LENGTH@ 105
------UPD MethodInvocation@@getOAuth2RequestFactory().createTokenRequestFromAuthorizationRequest(authorizationRequest) @TO@ getOAuth2RequestFactory().createTokenRequest(authorizationRequest,"implicit") @AT@ 12017 @LENGTH@ 90
---------UPD SimpleName@@MethodName:createTokenRequestFromAuthorizationRequest:[authorizationRequest] @TO@ MethodName:createTokenRequest:[authorizationRequest, "implicit"] @AT@ 12043 @LENGTH@ 64
------------INS StringLiteral@@"implicit" @TO@ SimpleName@@MethodName:createTokenRequestFromAuthorizationRequest:[authorizationRequest] @AT@ 12084 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(Arrays.asList(new Container[]{camelClientContainer}),PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(Arrays.asList(new Container[]{camelClientContainer}),PROVISION_TIMEOUT) @AT@ 4349 @LENGTH@ 97
---UPD MethodInvocation@@Provision.assertSuccess(Arrays.asList(new Container[]{camelClientContainer}),PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(Arrays.asList(new Container[]{camelClientContainer}),PROVISION_TIMEOUT) @AT@ 4349 @LENGTH@ 96
------UPD SimpleName@@MethodName:assertSuccess:[Arrays.asList(new Container[]{camelClientContainer}), PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[Arrays.asList(new Container[]{camelClientContainer}), PROVISION_TIMEOUT] @AT@ 4359 @LENGTH@ 86


UPD VariableDeclarationStatement@@ArtifactResolutionResult result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST); @TO@ ArtifactResolutionResult result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()); @AT@ 30924 @LENGTH@ 729
---UPD VariableDeclarationFragment@@result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST) @TO@ result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()) @AT@ 30949 @LENGTH@ 703
------UPD MethodInvocation@@artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST) @TO@ artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()) @AT@ 30958 @LENGTH@ 694
---------UPD SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @TO@ MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.emptyMap(), this.localRepository, this.remoteRepositories, metadataSource, null, Collections.emptyList()] @AT@ 30975 @LENGTH@ 677
------------INS MethodInvocation@@Collections.emptyMap() @TO@ SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @AT@ 31205 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 31205 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 31217 @LENGTH@ 10
------------DEL QualifiedName@@Collections.EMPTY_MAP @AT@ 31205 @LENGTH@ 21
---------------DEL SimpleName@@Collections @AT@ 31205 @LENGTH@ 11
---------------DEL SimpleName@@EMPTY_MAP @AT@ 31217 @LENGTH@ 9
------------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 31629 @LENGTH@ 22
---------------DEL SimpleName@@Collections @AT@ 31629 @LENGTH@ 11
---------------DEL SimpleName@@EMPTY_LIST @AT@ 31641 @LENGTH@ 10
------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @AT@ 31630 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 31630 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 31642 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, int, [MANAGEMENT_API_MINOR_VERSION=3] @TO@ private, static, final, int, [MANAGEMENT_API_MINOR_VERSION=0] @AT@ 4352 @LENGTH@ 58
---UPD VariableDeclarationFragment@@MANAGEMENT_API_MINOR_VERSION=3 @TO@ MANAGEMENT_API_MINOR_VERSION=0 @AT@ 4377 @LENGTH@ 32
------UPD NumberLiteral@@3 @TO@ 0 @AT@ 4408 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @TO@ MethodDeclaration@@public, void, MethodName:afterRun, Exception,  @AT@ 1882 @LENGTH@ 41
---INS MethodInvocation@@ServiceHelper.stopServices(camelContext) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @AT@ 1882 @LENGTH@ 40
------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 1882 @LENGTH@ 13
------INS SimpleName@@MethodName:stopServices:[camelContext] @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 1896 @LENGTH@ 26
---------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:stopServices:[camelContext] @AT@ 1909 @LENGTH@ 12


MOV ExpressionStatement@@SuperMethodInvocation:super.doStop() @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 1571 @LENGTH@ 15


UPD FieldDeclaration@@private, int, [port=9100] @TO@ protected, int, [port=9100] @AT@ 1047 @LENGTH@ 24
---UPD Modifier@@private @TO@ protected @AT@ 1047 @LENGTH@ 7


UPD VariableDeclarationStatement@@Set<String> aliases=new HashSet<String>(CacheFactoryResourceDefinition.ALIASES.unwrap(context,model)); @TO@ final Collection<String> unwrappedAliasValues=CacheFactoryResourceDefinition.ALIASES.unwrap(context,model); @AT@ 3743 @LENGTH@ 104
---UPD ParameterizedType@@Set<String> @TO@ Collection<String> @AT@ 3743 @LENGTH@ 11
------UPD SimpleType@@Set @TO@ Collection @AT@ 3743 @LENGTH@ 3
---INS Modifier@@final @TO@ VariableDeclarationStatement@@Set<String> aliases=new HashSet<String>(CacheFactoryResourceDefinition.ALIASES.unwrap(context,model)); @AT@ 3743 @LENGTH@ 5
---UPD VariableDeclarationFragment@@aliases=new HashSet<String>(CacheFactoryResourceDefinition.ALIASES.unwrap(context,model)) @TO@ unwrappedAliasValues=CacheFactoryResourceDefinition.ALIASES.unwrap(context,model) @AT@ 3755 @LENGTH@ 91
------UPD SimpleName@@aliases @TO@ unwrappedAliasValues @AT@ 3755 @LENGTH@ 7
------DEL ClassInstanceCreation@@HashSet<String>[CacheFactoryResourceDefinition.ALIASES.unwrap(context,model)] @AT@ 3765 @LENGTH@ 81
---------DEL New@@new @AT@ 3765 @LENGTH@ 3
---------DEL ParameterizedType@@HashSet<String> @AT@ 3769 @LENGTH@ 15
------------DEL SimpleType@@HashSet @AT@ 3769 @LENGTH@ 7
------------DEL SimpleType@@String @AT@ 3777 @LENGTH@ 6
------MOV MethodInvocation@@CacheFactoryResourceDefinition.ALIASES.unwrap(context,model) @TO@ VariableDeclarationFragment@@aliases=new HashSet<String>(CacheFactoryResourceDefinition.ALIASES.unwrap(context,model)) @AT@ 3785 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:index.put(set.getKey(),set.getValue()) @TO@ MethodInvocation:index.put(set.getKey(),Integer.valueOf(set.getValue())) @AT@ 8757 @LENGTH@ 40
---UPD MethodInvocation@@index.put(set.getKey(),set.getValue()) @TO@ index.put(set.getKey(),Integer.valueOf(set.getValue())) @AT@ 8757 @LENGTH@ 39
------UPD SimpleName@@MethodName:put:[set.getKey(), set.getValue()] @TO@ MethodName:put:[set.getKey(), Integer.valueOf(set.getValue())] @AT@ 8763 @LENGTH@ 33
---------INS MethodInvocation@@Integer.valueOf(set.getValue()) @TO@ SimpleName@@MethodName:put:[set.getKey(), set.getValue()] @AT@ 9081 @LENGTH@ 31
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(set.getValue()) @AT@ 9081 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[set.getValue()] @TO@ MethodInvocation@@Integer.valueOf(set.getValue()) @AT@ 9089 @LENGTH@ 23
---------------MOV MethodInvocation@@set.getValue() @TO@ SimpleName@@MethodName:valueOf:[set.getValue()] @AT@ 8781 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:getJobExecutionDependencies(jobExecution) @TO@ MethodDeclaration@@public, StepExecution, MethodName:getStepExecution, Long jobExecutionId, Long executionId,  @AT@ 4235 @LENGTH@ 42
---INS MethodInvocation@@getJobExecutionDependencies(jobExecution) @TO@ ExpressionStatement@@MethodInvocation:getJobExecutionDependencies(jobExecution) @AT@ 4235 @LENGTH@ 41
------INS SimpleName@@MethodName:getJobExecutionDependencies:[jobExecution] @TO@ MethodInvocation@@getJobExecutionDependencies(jobExecution) @AT@ 4235 @LENGTH@ 41
---------INS SimpleName@@jobExecution @TO@ SimpleName@@MethodName:getJobExecutionDependencies:[jobExecution] @AT@ 4263 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:builder.overrideItem(override.toString()) @TO@ MethodInvocation:builder.overrideItem(override.asString()) @AT@ 4766 @LENGTH@ 42
---UPD MethodInvocation@@builder.overrideItem(override.toString()) @TO@ builder.overrideItem(override.asString()) @AT@ 4766 @LENGTH@ 41
------UPD SimpleName@@MethodName:overrideItem:[override.toString()] @TO@ MethodName:overrideItem:[override.asString()] @AT@ 4774 @LENGTH@ 33
---------UPD MethodInvocation@@override.toString() @TO@ override.asString() @AT@ 4787 @LENGTH@ 19
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:asString:[] @AT@ 4796 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:testMopnitorAuditor,  @TO@ public, void, MethodName:testMonitorAuditor,  @AT@ 9096 @LENGTH@ 112
---UPD SimpleName@@MethodName:testMopnitorAuditor @TO@ MethodName:testMonitorAuditor @AT@ 9108 @LENGTH@ 19


INS MethodDeclaration@@protected, Iterable<String>, MethodName:expectedRootLinkRels,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @AT@ 1374 @LENGTH@ 88
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Iterable<String>, MethodName:expectedRootLinkRels,  @AT@ 1374 @LENGTH@ 9
---INS ParameterizedType@@Iterable<String> @TO@ MethodDeclaration@@protected, Iterable<String>, MethodName:expectedRootLinkRels,  @AT@ 1384 @LENGTH@ 16
------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<String> @AT@ 1384 @LENGTH@ 8
------INS SimpleType@@String @TO@ ParameterizedType@@Iterable<String> @AT@ 1393 @LENGTH@ 6
---INS SimpleName@@MethodName:expectedRootLinkRels @TO@ MethodDeclaration@@protected, Iterable<String>, MethodName:expectedRootLinkRels,  @AT@ 1401 @LENGTH@ 20
---INS ReturnStatement@@MethodInvocation:Arrays.asList("people") @TO@ MethodDeclaration@@protected, Iterable<String>, MethodName:expectedRootLinkRels,  @AT@ 1428 @LENGTH@ 31
------INS MethodInvocation@@Arrays.asList("people") @TO@ ReturnStatement@@MethodInvocation:Arrays.asList("people") @AT@ 1435 @LENGTH@ 23
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("people") @AT@ 1435 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:["people"] @TO@ MethodInvocation@@Arrays.asList("people") @AT@ 1442 @LENGTH@ 16
------------INS StringLiteral@@"people" @TO@ SimpleName@@MethodName:asList:["people"] @AT@ 1449 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testSerialization,  @TO@ TypeDeclaration@@[public]TestOAuth2Authentication,  @AT@ 2036 @LENGTH@ 381
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2036 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2043 @LENGTH@ 4
---INS SimpleName@@MethodName:testSerialization @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2048 @LENGTH@ 17
---INS VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")); @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2072 @LENGTH@ 182
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")); @AT@ 2072 @LENGTH@ 20
------INS VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")) @TO@ VariableDeclarationStatement@@OAuth2Authentication holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")); @AT@ 2093 @LENGTH@ 160
---------INS SimpleName@@holder @TO@ VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")) @AT@ 2093 @LENGTH@ 6
---------INS ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")), new UsernamePasswordAuthenticationToken("user","pwd")] @TO@ VariableDeclarationFragment@@holder=new OAuth2Authentication(new AuthorizationRequest("client",Arrays.asList("read")),new UsernamePasswordAuthenticationToken("user","pwd")) @AT@ 2102 @LENGTH@ 151
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2102 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2106 @LENGTH@ 20
------------INS ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2132 @LENGTH@ 57
---------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2132 @LENGTH@ 3
---------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2136 @LENGTH@ 20
---------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2157 @LENGTH@ 8
---------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 2167 @LENGTH@ 21
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2167 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 2174 @LENGTH@ 14
---------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 2181 @LENGTH@ 6
------------INS ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @TO@ ClassInstanceCreation@@OAuth2Authentication[new AuthorizationRequest("client",Arrays.asList("read")), new UsernamePasswordAuthenticationToken("user","pwd")] @AT@ 2191 @LENGTH@ 61
---------------INS New@@new @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2191 @LENGTH@ 3
---------------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2195 @LENGTH@ 35
---------------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2238 @LENGTH@ 6
---------------INS StringLiteral@@"pwd" @TO@ ClassInstanceCreation@@UsernamePasswordAuthenticationToken["user", "pwd"] @AT@ 2246 @LENGTH@ 5
---INS VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2257 @LENGTH@ 126
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @AT@ 2257 @LENGTH@ 20
------INS VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ VariableDeclarationStatement@@OAuth2Authentication other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)); @AT@ 2278 @LENGTH@ 104
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2278 @LENGTH@ 5
---------INS CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ VariableDeclarationFragment@@other=(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2286 @LENGTH@ 96
------------INS SimpleType@@OAuth2Authentication @TO@ CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2287 @LENGTH@ 20
------------INS MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @TO@ CastExpression@@(OAuth2Authentication)SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2309 @LENGTH@ 73
---------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2309 @LENGTH@ 18
---------------INS SimpleName@@MethodName:deserialize:[SerializationUtils.serialize(holder)] @TO@ MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(holder)) @AT@ 2328 @LENGTH@ 54
------------------INS MethodInvocation@@SerializationUtils.serialize(holder) @TO@ SimpleName@@MethodName:deserialize:[SerializationUtils.serialize(holder)] @AT@ 2340 @LENGTH@ 41
---------------------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.serialize(holder) @AT@ 2340 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:serialize:[holder] @TO@ MethodInvocation@@SerializationUtils.serialize(holder) @AT@ 2364 @LENGTH@ 17
------------------------INS SimpleName@@holder @TO@ SimpleName@@MethodName:serialize:[holder] @AT@ 2374 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(holder,other) @TO@ MethodDeclaration@@public, void, MethodName:testSerialization,  @AT@ 2386 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(holder,other) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(holder,other) @AT@ 2386 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[holder, other] @TO@ MethodInvocation@@assertEquals(holder,other) @AT@ 2386 @LENGTH@ 27
------------INS SimpleName@@holder @TO@ SimpleName@@MethodName:assertEquals:[holder, other] @AT@ 2399 @LENGTH@ 6
------------INS SimpleName@@other @TO@ SimpleName@@MethodName:assertEquals:[holder, other] @AT@ 2407 @LENGTH@ 5


UPD IfStatement@@if (!service.getSource().equals(bindingConfiguration.getSource())) {  throw MESSAGES.conflictingBinding(bindingName,bindingConfiguration.getSource());} @TO@ if (!equals(service.getSource(),bindingConfiguration.getSource())) {  throw MESSAGES.conflictingBinding(bindingName,bindingConfiguration.getSource());} @AT@ 16933 @LENGTH@ 196
---UPD PrefixExpression@@!service.getSource().equals(bindingConfiguration.getSource()) @TO@ !equals(service.getSource(),bindingConfiguration.getSource()) @AT@ 16937 @LENGTH@ 61
------UPD MethodInvocation@@service.getSource().equals(bindingConfiguration.getSource()) @TO@ equals(service.getSource(),bindingConfiguration.getSource()) @AT@ 16938 @LENGTH@ 60
---------DEL MethodInvocation@@MethodName:getSource:[] @AT@ 16938 @LENGTH@ 19
---------INS SimpleName@@MethodName:equals:[service.getSource(), bindingConfiguration.getSource()] @TO@ MethodInvocation@@service.getSource().equals(bindingConfiguration.getSource()) @AT@ 16938 @LENGTH@ 61
------------INS MethodInvocation@@service.getSource() @TO@ SimpleName@@MethodName:equals:[service.getSource(), bindingConfiguration.getSource()] @AT@ 16945 @LENGTH@ 19
---------------MOV SimpleName@@Name:service @TO@ MethodInvocation@@service.getSource() @AT@ 16938 @LENGTH@ 7
---------------MOV SimpleName@@Name:service @TO@ MethodInvocation@@service.getSource() @AT@ 16938 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getSource:[] @TO@ MethodInvocation@@service.getSource() @AT@ 16953 @LENGTH@ 11
------------MOV MethodInvocation@@bindingConfiguration.getSource() @TO@ SimpleName@@MethodName:equals:[service.getSource(), bindingConfiguration.getSource()] @AT@ 16965 @LENGTH@ 32
---------DEL SimpleName@@MethodName:equals:[bindingConfiguration.getSource()] @AT@ 16958 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:getInInterceptorNames().add(WSDLGetInterceptor.class.getName()) @TO@ MethodInvocation:server.getEndpoint().getInInterceptors().add(RawMessageWSDLGetInterceptor.INSTANCE) @AT@ 3396 @LENGTH@ 64
---UPD MethodInvocation@@getInInterceptorNames().add(WSDLGetInterceptor.class.getName()) @TO@ server.getEndpoint().getInInterceptors().add(RawMessageWSDLGetInterceptor.INSTANCE) @AT@ 3396 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:getInInterceptorNames:[] @TO@ MethodName:getInInterceptors:[] @AT@ 3396 @LENGTH@ 23
------UPD SimpleName@@MethodName:add:[WSDLGetInterceptor.class.getName()] @TO@ MethodName:add:[RawMessageWSDLGetInterceptor.INSTANCE] @AT@ 3420 @LENGTH@ 39
---------DEL MethodInvocation@@WSDLGetInterceptor.class.getName() @AT@ 3424 @LENGTH@ 34
------------DEL TypeLiteral@@WSDLGetInterceptor.class @AT@ 3424 @LENGTH@ 24
------------DEL SimpleName@@MethodName:getName:[] @AT@ 3449 @LENGTH@ 9
---------INS QualifiedName@@RawMessageWSDLGetInterceptor.INSTANCE @TO@ SimpleName@@MethodName:add:[WSDLGetInterceptor.class.getName()] @AT@ 4550 @LENGTH@ 37
------------INS SimpleName@@RawMessageWSDLGetInterceptor @TO@ QualifiedName@@RawMessageWSDLGetInterceptor.INSTANCE @AT@ 4550 @LENGTH@ 28
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@RawMessageWSDLGetInterceptor.INSTANCE @AT@ 4579 @LENGTH@ 8
------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getInInterceptorNames().add(WSDLGetInterceptor.class.getName()) @AT@ 4505 @LENGTH@ 20
------INS SimpleName@@Name:server @TO@ MethodInvocation@@getInInterceptorNames().add(WSDLGetInterceptor.class.getName()) @AT@ 4505 @LENGTH@ 6


UPD TypeDeclaration@@[@RunAsClient, @RunWith(Arquillian.class), @Ignore("WFLY-2457"), public]HttpUpgradeHandlerInjectionSupportTestCase, InjectionSupportTestCase @TO@ [@RunAsClient, @RunWith(Arquillian.class), public]HttpUpgradeHandlerInjectionSupportTestCase, InjectionSupportTestCase @AT@ 2102 @LENGTH@ 3294
---DEL SingleMemberAnnotation@@@Ignore("WFLY-2457") @AT@ 2142 @LENGTH@ 20


INS MethodDeclaration@@boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[public]TypeConverter,  @AT@ 1350 @LENGTH@ 12
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:allowNull,  @AT@ 1342 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@boolean, MethodName:allowNull,  @AT@ 1350 @LENGTH@ 9


UPD CatchClause@@catch (IOException e) {  throw new CommandLineException("Unable to apply patch",e);} @TO@ catch (Exception e) {  throw new CommandLineException("Unable to apply patch",e);} @AT@ 7878 @LENGTH@ 105
---UPD SingleVariableDeclaration@@IOException e @TO@ Exception e @AT@ 7885 @LENGTH@ 13
------UPD SimpleType@@IOException @TO@ Exception @AT@ 7885 @LENGTH@ 11


UPD MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @TO@ public, static, String, MethodName:doDumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14857 @LENGTH@ 2279
---UPD SimpleName@@MethodName:dumpMessageHistoryStacktrace @TO@ MethodName:doDumpMessageHistoryStacktrace @AT@ 14878 @LENGTH@ 28
---UPD VariableDeclarationStatement@@String label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()); @TO@ String label=""; @AT@ 15720 @LENGTH@ 83
------UPD VariableDeclarationFragment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @TO@ label="" @AT@ 15727 @LENGTH@ 75
---------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @AT@ 16127 @LENGTH@ 2
---INS IfStatement@@if (exchange.getFromEndpoint() != null) {  label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri());} @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 16139 @LENGTH@ 140
------INS InfixExpression@@exchange.getFromEndpoint() != null @TO@ IfStatement@@if (exchange.getFromEndpoint() != null) {  label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri());} @AT@ 16143 @LENGTH@ 34
---------INS MethodInvocation@@exchange.getFromEndpoint() @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 16143 @LENGTH@ 26
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 16143 @LENGTH@ 8
------------INS SimpleName@@MethodName:getFromEndpoint:[] @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 16152 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 16169 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 16173 @LENGTH@ 4
------INS Block@@ThenBody:{  label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri());} @TO@ IfStatement@@if (exchange.getFromEndpoint() != null) {  label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri());} @AT@ 16179 @LENGTH@ 100
---------INS ExpressionStatement@@Assignment:label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @TO@ Block@@ThenBody:{  label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri());} @AT@ 16193 @LENGTH@ 76
------------INS Assignment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @TO@ ExpressionStatement@@Assignment:label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @AT@ 16193 @LENGTH@ 75
---------------MOV MethodInvocation@@URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @TO@ Assignment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @AT@ 15735 @LENGTH@ 67
---------------INS SimpleName@@label @TO@ Assignment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @AT@ 16193 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@label=URISupport.sanitizeUri(exchange.getFromEndpoint().getEndpointUri()) @AT@ 16198 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @TO@ TypeDeclaration@@[public]WebservicesSubsystemParserTestCase, AbstractSubsystemBaseTest @AT@ 11145 @LENGTH@ 138
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @AT@ 11145 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @AT@ 11152 @LENGTH@ 4
---INS SimpleName@@MethodName:testTransformersAS720 @TO@ MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @AT@ 11157 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @AT@ 11188 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:testRejectExpressions_1_1_0(ModelTestControllerVersion.V7_2_0_FINAL) @TO@ MethodDeclaration@@public, void, MethodName:testTransformersAS720, Exception,  @AT@ 11208 @LENGTH@ 69
------INS MethodInvocation@@testRejectExpressions_1_1_0(ModelTestControllerVersion.V7_2_0_FINAL) @TO@ ExpressionStatement@@MethodInvocation:testRejectExpressions_1_1_0(ModelTestControllerVersion.V7_2_0_FINAL) @AT@ 11208 @LENGTH@ 68
---------INS SimpleName@@MethodName:testRejectExpressions_1_1_0:[ModelTestControllerVersion.V7_2_0_FINAL] @TO@ MethodInvocation@@testRejectExpressions_1_1_0(ModelTestControllerVersion.V7_2_0_FINAL) @AT@ 11208 @LENGTH@ 68
------------INS QualifiedName@@ModelTestControllerVersion.V7_2_0_FINAL @TO@ SimpleName@@MethodName:testRejectExpressions_1_1_0:[ModelTestControllerVersion.V7_2_0_FINAL] @AT@ 11236 @LENGTH@ 39
---------------INS SimpleName@@ModelTestControllerVersion @TO@ QualifiedName@@ModelTestControllerVersion.V7_2_0_FINAL @AT@ 11236 @LENGTH@ 26
---------------INS SimpleName@@V7_2_0_FINAL @TO@ QualifiedName@@ModelTestControllerVersion.V7_2_0_FINAL @AT@ 11263 @LENGTH@ 12


INS IfStatement@@if (curator != null) {  curator.getZookeeperClient().stop();} @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 6863 @LENGTH@ 89
---INS InfixExpression@@curator != null @TO@ IfStatement@@if (curator != null) {  curator.getZookeeperClient().stop();} @AT@ 6867 @LENGTH@ 15
------INS SimpleName@@curator @TO@ InfixExpression@@curator != null @AT@ 6867 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@curator != null @AT@ 6874 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@curator != null @AT@ 6878 @LENGTH@ 4
---INS Block@@ThenBody:{  curator.getZookeeperClient().stop();} @TO@ IfStatement@@if (curator != null) {  curator.getZookeeperClient().stop();} @AT@ 6884 @LENGTH@ 68
------INS ExpressionStatement@@MethodInvocation:curator.getZookeeperClient().stop() @TO@ Block@@ThenBody:{  curator.getZookeeperClient().stop();} @AT@ 6902 @LENGTH@ 36
---------INS MethodInvocation@@curator.getZookeeperClient().stop() @TO@ ExpressionStatement@@MethodInvocation:curator.getZookeeperClient().stop() @AT@ 6902 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:getZookeeperClient:[] @TO@ MethodInvocation@@curator.getZookeeperClient().stop() @AT@ 6902 @LENGTH@ 28
------------INS SimpleName@@Name:curator @TO@ MethodInvocation@@curator.getZookeeperClient().stop() @AT@ 6902 @LENGTH@ 7
------------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@curator.getZookeeperClient().stop() @AT@ 6931 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2810 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 2810 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2810 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2818 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 2837 @LENGTH@ 4


UPD IfStatement@@if (fuseCart) {  userEnvVars=new HashMap<String,String>();  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_URL",zookeeperUrl);  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_PASSWORD",zookeeperPassword);} @TO@ if (!options.isEnsembleServer()) {  userEnvVars=new HashMap<String,String>();  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_URL",zookeeperUrl);  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_PASSWORD",zookeeperPassword);} @AT@ 8209 @LENGTH@ 242
---INS PrefixExpression@@!options.isEnsembleServer() @TO@ IfStatement@@if (fuseCart) {  userEnvVars=new HashMap<String,String>();  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_URL",zookeeperUrl);  userEnvVars.put("OPENSHIFT_FUSE_ZOOKEEPER_PASSWORD",zookeeperPassword);} @AT@ 8107 @LENGTH@ 27
------INS Operator@@! @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8107 @LENGTH@ 1
------INS MethodInvocation@@options.isEnsembleServer() @TO@ PrefixExpression@@!options.isEnsembleServer() @AT@ 8108 @LENGTH@ 26
---------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8108 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEnsembleServer:[] @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 8116 @LENGTH@ 18
---DEL SimpleName@@fuseCart @AT@ 8213 @LENGTH@ 8


UPD FieldDeclaration@@protected, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName()] @TO@ protected, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName()] @AT@ 1554 @LENGTH@ 151
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @TO@ TEST_DATA_DIR="/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1584 @LENGTH@ 120
------UPD InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @TO@ "/tmp/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1600 @LENGTH@ 104
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 1600 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 1600 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1607 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 1619 @LENGTH@ 10
---------INS StringLiteral@@"/tmp/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + HCatBaseTest.class.getCanonicalName() @AT@ 1612 @LENGTH@ 23
---------DEL StringLiteral@@"/build/test/data/" @AT@ 1645 @LENGTH@ 19


UPD VariableDeclarationStatement@@final File f=new File(resourceArr[i]); @TO@ final File f=new File(pathCompleter.translatePath(resourceArr[i])); @AT@ 10663 @LENGTH@ 40
---UPD VariableDeclarationFragment@@f=new File(resourceArr[i]) @TO@ f=new File(pathCompleter.translatePath(resourceArr[i])) @AT@ 10674 @LENGTH@ 28
------UPD ClassInstanceCreation@@File[resourceArr[i]] @TO@ File[pathCompleter.translatePath(resourceArr[i])] @AT@ 10678 @LENGTH@ 24
---------DEL ArrayAccess@@resourceArr[i] @AT@ 10687 @LENGTH@ 14
---------INS MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @TO@ ClassInstanceCreation@@File[resourceArr[i]] @AT@ 10834 @LENGTH@ 43
------------INS SimpleName@@Name:pathCompleter @TO@ MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @AT@ 10834 @LENGTH@ 13
------------INS SimpleName@@MethodName:translatePath:[resourceArr[i]] @TO@ MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @AT@ 10848 @LENGTH@ 29
---------------INS ArrayAccess@@resourceArr[i] @TO@ SimpleName@@MethodName:translatePath:[resourceArr[i]] @AT@ 10862 @LENGTH@ 14
------------------MOV SimpleName@@resourceArr @TO@ ArrayAccess@@resourceArr[i] @AT@ 10687 @LENGTH@ 11
------------------MOV SimpleName@@i @TO@ ArrayAccess@@resourceArr[i] @AT@ 10699 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:this.errorHandler.hasError(response) @TO@ InfixExpression:HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) || this.errorHandler.hasError(response) @AT@ 2939 @LENGTH@ 44
---INS InfixExpression@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) || this.errorHandler.hasError(response) @TO@ ReturnStatement@@MethodInvocation:this.errorHandler.hasError(response) @AT@ 2946 @LENGTH@ 115
------INS MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @TO@ InfixExpression@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) || this.errorHandler.hasError(response) @AT@ 2946 @LENGTH@ 72
---------INS QualifiedName@@Name:HttpStatus.Series.CLIENT_ERROR @TO@ MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 2946 @LENGTH@ 30
---------INS SimpleName@@MethodName:equals:[response.getStatusCode().series()] @TO@ MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 2977 @LENGTH@ 41
------------INS MethodInvocation@@response.getStatusCode().series() @TO@ SimpleName@@MethodName:equals:[response.getStatusCode().series()] @AT@ 2984 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 2984 @LENGTH@ 24
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 2984 @LENGTH@ 8
---------------INS SimpleName@@MethodName:series:[] @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 3009 @LENGTH@ 8
------MOV MethodInvocation@@this.errorHandler.hasError(response) @TO@ InfixExpression@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) || this.errorHandler.hasError(response) @AT@ 2946 @LENGTH@ 36
------INS Operator@@|| @TO@ InfixExpression@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) || this.errorHandler.hasError(response) @AT@ 3018 @LENGTH@ 2


UPD Block@@ThenBody:{  boolean valid=BeanHelper.isValidParameterValue(exp);  if (!valid) {    Boolean isClass=BeanHelper.isAssignableToExpectedType(exchange.getContext().getClassResolver(),exp,parameterType);    if (isClass != null) {      return null;    }  }  Expression expression=null;  try {    expression=exchange.getContext().resolveLanguage("simple").createExpression(exp);    parameterValue=expression.evaluate(exchange,Object.class);    if (parameterValue == null) {      parameterValue="null";    }  } catch (  Exception e) {    throw new ExpressionEvaluationException(expression,"Cannot create/evaluate simple expression: " + exp + " to be bound to parameter at index: "+ index+ " on method: "+ getMethod(),exchange,e);  }  if ("null".equals(parameterValue)) {    return Void.TYPE;  }  exp=exchange.getContext().getTypeConverter().convertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }  if (valid) {    if (parameterValue instanceof String) {      parameterValue=StringHelper.removeLeadingAndEndingQuotes((String)parameterValue);    }    if (parameterValue != null) {      try {        answer=exchange.getContext().getTypeConverter().mandatoryConvertTo(parameterType,exchange,parameterValue);        if (LOG.isTraceEnabled()) {          LOG.trace("Parameter #{} evaluated as: {} type: ",new Object[]{index,answer,ObjectHelper.type(answer)});        }      } catch (      Exception e) {        if (LOG.isDebugEnabled()) {          LOG.debug("Cannot convert from type: {} to type: {} for parameter #{}",new Object[]{ObjectHelper.type(parameterValue),parameterType,index});        }        throw new ParameterBindingException(e,method,index,parameterType,parameterValue);      }    }  }} @TO@ ThenBody:{  boolean valid=BeanHelper.isValidParameterValue(exp);  if (!valid) {    Boolean isClass=BeanHelper.isAssignableToExpectedType(exchange.getContext().getClassResolver(),exp,parameterType);    if (isClass != null) {      return null;    }  }  Expression expression=null;  try {    expression=exchange.getContext().resolveLanguage("simple").createExpression(exp);    parameterValue=expression.evaluate(exchange,Object.class);    if (parameterValue == null) {      parameterValue="null";    }  } catch (  Exception e) {    throw new ExpressionEvaluationException(expression,"Cannot create/evaluate simple expression: " + exp + " to be bound to parameter at index: "+ index+ " on method: "+ getMethod(),exchange,e);  }  if ("null".equals(parameterValue)) {    return Void.TYPE;  }  if (parameterType.isAssignableFrom(parameterValue.getClass())) {    valid=true;  } else {    exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);    if (!valid) {      valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);    }  }  if (valid) {    if (parameterValue instanceof String) {      parameterValue=StringHelper.removeLeadingAndEndingQuotes((String)parameterValue);    }    if (parameterValue != null) {      try {        answer=exchange.getContext().getTypeConverter().mandatoryConvertTo(parameterType,exchange,parameterValue);        if (LOG.isTraceEnabled()) {          LOG.trace("Parameter #{} evaluated as: {} type: ",new Object[]{index,answer,ObjectHelper.type(answer)});        }      } catch (      Exception e) {        if (LOG.isDebugEnabled()) {          LOG.debug("Cannot convert from type: {} to type: {} for parameter #{}",new Object[]{ObjectHelper.type(parameterValue),parameterType,index});        }        throw new ParameterBindingException(e,method,index,parameterType,parameterValue);      }    }  }} @AT@ 22685 @LENGTH@ 4221
---INS IfStatement@@if (parameterType.isAssignableFrom(parameterValue.getClass())) {  valid=true;} else {  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @TO@ Block@@ThenBody:{  boolean valid=BeanHelper.isValidParameterValue(exp);  if (!valid) {    Boolean isClass=BeanHelper.isAssignableToExpectedType(exchange.getContext().getClassResolver(),exp,parameterType);    if (isClass != null) {      return null;    }  }  Expression expression=null;  try {    expression=exchange.getContext().resolveLanguage("simple").createExpression(exp);    parameterValue=expression.evaluate(exchange,Object.class);    if (parameterValue == null) {      parameterValue="null";    }  } catch (  Exception e) {    throw new ExpressionEvaluationException(expression,"Cannot create/evaluate simple expression: " + exp + " to be bound to parameter at index: "+ index+ " on method: "+ getMethod(),exchange,e);  }  if ("null".equals(parameterValue)) {    return Void.TYPE;  }  exp=exchange.getContext().getTypeConverter().convertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }  if (valid) {    if (parameterValue instanceof String) {      parameterValue=StringHelper.removeLeadingAndEndingQuotes((String)parameterValue);    }    if (parameterValue != null) {      try {        answer=exchange.getContext().getTypeConverter().mandatoryConvertTo(parameterType,exchange,parameterValue);        if (LOG.isTraceEnabled()) {          LOG.trace("Parameter #{} evaluated as: {} type: ",new Object[]{index,answer,ObjectHelper.type(answer)});        }      } catch (      Exception e) {        if (LOG.isDebugEnabled()) {          LOG.debug("Cannot convert from type: {} to type: {} for parameter #{}",new Object[]{ObjectHelper.type(parameterValue),parameterType,index});        }        throw new ParameterBindingException(e,method,index,parameterType,parameterValue);      }    }  }} @AT@ 24788 @LENGTH@ 896
------INS MethodInvocation@@parameterType.isAssignableFrom(parameterValue.getClass()) @TO@ IfStatement@@if (parameterType.isAssignableFrom(parameterValue.getClass())) {  valid=true;} else {  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @AT@ 24792 @LENGTH@ 57
---------INS SimpleName@@Name:parameterType @TO@ MethodInvocation@@parameterType.isAssignableFrom(parameterValue.getClass()) @AT@ 24792 @LENGTH@ 13
---------INS SimpleName@@MethodName:isAssignableFrom:[parameterValue.getClass()] @TO@ MethodInvocation@@parameterType.isAssignableFrom(parameterValue.getClass()) @AT@ 24806 @LENGTH@ 43
------------INS MethodInvocation@@parameterValue.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[parameterValue.getClass()] @AT@ 24823 @LENGTH@ 25
---------------INS SimpleName@@Name:parameterValue @TO@ MethodInvocation@@parameterValue.getClass() @AT@ 24823 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@parameterValue.getClass() @AT@ 24838 @LENGTH@ 10
------INS Block@@ThenBody:{  valid=true;} @TO@ IfStatement@@if (parameterType.isAssignableFrom(parameterValue.getClass())) {  valid=true;} else {  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @AT@ 24851 @LENGTH@ 61
---------INS ExpressionStatement@@Assignment:valid=true @TO@ Block@@ThenBody:{  valid=true;} @AT@ 24877 @LENGTH@ 13
------------INS Assignment@@valid=true @TO@ ExpressionStatement@@Assignment:valid=true @AT@ 24877 @LENGTH@ 12
---------------INS SimpleName@@valid @TO@ Assignment@@valid=true @AT@ 24877 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@valid=true @AT@ 24882 @LENGTH@ 1
---------------INS BooleanLiteral@@true @TO@ Assignment@@valid=true @AT@ 24885 @LENGTH@ 4
------INS Block@@ElseBody:{  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @TO@ IfStatement@@if (parameterType.isAssignableFrom(parameterValue.getClass())) {  valid=true;} else {  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @AT@ 24918 @LENGTH@ 766
---------MOV ExpressionStatement@@Assignment:exp=exchange.getContext().getTypeConverter().convertTo(String.class,parameterValue) @TO@ Block@@ElseBody:{  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @AT@ 24970 @LENGTH@ 87
---------MOV IfStatement@@if (!valid) {  valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);} @TO@ Block@@ElseBody:{  exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue);  if (!valid) {    valid=parameterValue instanceof String || BeanHelper.isValidParameterValue(exp);  }} @AT@ 25156 @LENGTH@ 262
---UPD ExpressionStatement@@Assignment:exp=exchange.getContext().getTypeConverter().convertTo(String.class,parameterValue) @TO@ Assignment:exp=exchange.getContext().getTypeConverter().tryConvertTo(String.class,parameterValue) @AT@ 24970 @LENGTH@ 87


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index.intValue(),values.length)) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index,Integer.valueOf(values.length))) @AT@ 2913 @LENGTH@ 232
---UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index.intValue(),values.length)] @TO@ IllegalArgumentException[String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index,Integer.valueOf(values.length))] @AT@ 2919 @LENGTH@ 225
------UPD MethodInvocation@@String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index.intValue(),values.length) @TO@ String.format("Index for header '%s' is %d but CSVRecord only has %d values!",name,index,Integer.valueOf(values.length)) @AT@ 2969 @LENGTH@ 174
---------UPD SimpleName@@MethodName:format:["Index for header '%s' is %d but CSVRecord only has %d values!", name, index.intValue(), values.length] @TO@ MethodName:format:["Index for header '%s' is %d but CSVRecord only has %d values!", name, index, Integer.valueOf(values.length)] @AT@ 2976 @LENGTH@ 167
------------DEL MethodInvocation@@index.intValue() @AT@ 3111 @LENGTH@ 16
---------------DEL SimpleName@@Name:index @AT@ 3111 @LENGTH@ 5
------------INS SimpleName@@index @TO@ SimpleName@@MethodName:format:["Index for header '%s' is %d but CSVRecord only has %d values!", name, index.intValue(), values.length] @AT@ 3111 @LENGTH@ 5
------------INS MethodInvocation@@Integer.valueOf(values.length) @TO@ SimpleName@@MethodName:format:["Index for header '%s' is %d but CSVRecord only has %d values!", name, index.intValue(), values.length] @AT@ 3118 @LENGTH@ 30
---------------MOV SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@Integer.valueOf(values.length) @AT@ 3117 @LENGTH@ 10
---------------INS SimpleName@@MethodName:valueOf:[values.length] @TO@ MethodInvocation@@Integer.valueOf(values.length) @AT@ 3126 @LENGTH@ 22
------------------MOV QualifiedName@@values.length @TO@ SimpleName@@MethodName:valueOf:[values.length] @AT@ 3129 @LENGTH@ 13


UPD VariableDeclarationStatement@@CreateSshContainerOptions.Builder builder=CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()); @TO@ CreateSshContainerOptions.Builder builder=CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).adminAccess(adminAccess).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()); @AT@ 4392 @LENGTH@ 1217
---UPD VariableDeclarationFragment@@builder=CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()) @TO@ builder=CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).adminAccess(adminAccess).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()) @AT@ 4426 @LENGTH@ 1182
------UPD MethodInvocation@@CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()) @TO@ CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).adminAccess(adminAccess).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()) @AT@ 4436 @LENGTH@ 1172
---------INS MethodInvocation@@MethodName:adminAccess:[adminAccess] @TO@ MethodInvocation@@CreateSshContainerOptions.builder().name(name).ensembleServer(isEnsembleServer).resolver(resolver).bindAddress(bindAddress).manualIp(manualIp).number(number).host(host).preferredAddress(InetAddress.getByName(host).getHostAddress()).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts != null ? jvmOpts : fabricService.getDefaultJvmOptions()).zookeeperPassword(zookeeperPassword).withUser(newUser,newUserPassword,newUserRole).version(version).profiles(getProfileNames()) @AT@ 4736 @LENGTH@ 559
------------INS SimpleName@@adminAccess @TO@ MethodInvocation@@MethodName:adminAccess:[adminAccess] @AT@ 5283 @LENGTH@ 11


UPD VariableDeclarationStatement@@Module newModule1=new Module.Builder(moduleName1).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build(); @TO@ Module newModule1=new Module.Builder(moduleName1).miscFile(resourceItem1).miscFile(resourceItem2).build(); @AT@ 58010 @LENGTH@ 167
---UPD VariableDeclarationFragment@@newModule1=new Module.Builder(moduleName1).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build() @TO@ newModule1=new Module.Builder(moduleName1).miscFile(resourceItem1).miscFile(resourceItem2).build() @AT@ 58017 @LENGTH@ 159
------UPD MethodInvocation@@new Module.Builder(moduleName1).resourceRoot(resourceItem1).resourceRoot(resourceItem2).build() @TO@ new Module.Builder(moduleName1).miscFile(resourceItem1).miscFile(resourceItem2).build() @AT@ 58030 @LENGTH@ 146
---------UPD MethodInvocation@@MethodName:resourceRoot:[resourceItem2] @TO@ MethodName:miscFile:[resourceItem2] @AT@ 58030 @LENGTH@ 121
---------UPD MethodInvocation@@MethodName:resourceRoot:[resourceItem1] @TO@ MethodName:miscFile:[resourceItem1] @AT@ 58030 @LENGTH@ 76


UPD IfStatement@@if (CUMULATIVE == patch.getPatchType()) {  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} else {  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @TO@ if (CUMULATIVE == patch.getPatchType()) {  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());  assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion());} else {  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));  assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0));} @AT@ 6633 @LENGTH@ 245
---UPD Block@@ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} @TO@ ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());  assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion());} @AT@ 6673 @LENGTH@ 98
------INS ExpressionStatement@@MethodInvocation:assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @TO@ Block@@ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} @AT@ 6898 @LENGTH@ 78
---------INS MethodInvocation@@assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @AT@ 6898 @LENGTH@ 77
------------INS SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @TO@ MethodInvocation@@assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @AT@ 6898 @LENGTH@ 77
---------------INS MethodInvocation@@patch.getResultingVersion() @TO@ SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @AT@ 6911 @LENGTH@ 27
------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getResultingVersion() @AT@ 6911 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getResultingVersion:[] @TO@ MethodInvocation@@patch.getResultingVersion() @AT@ 6917 @LENGTH@ 21
---------------INS MethodInvocation@@result.getPatchInfo().getVersion() @TO@ SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @AT@ 6940 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6940 @LENGTH@ 21
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6940 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6962 @LENGTH@ 12
---UPD Block@@ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @TO@ ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));  assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0));} @AT@ 6777 @LENGTH@ 101
------INS ExpressionStatement@@MethodInvocation:assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @TO@ Block@@ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @AT@ 7163 @LENGTH@ 77
---------INS MethodInvocation@@assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @AT@ 7163 @LENGTH@ 76
------------INS SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @TO@ MethodInvocation@@assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @AT@ 7163 @LENGTH@ 76
---------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @AT@ 7176 @LENGTH@ 18
------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 7176 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 7182 @LENGTH@ 12
---------------INS MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @TO@ SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @AT@ 7196 @LENGTH@ 42
------------------INS MethodInvocation@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 35
------------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 21
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 6
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7232 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7236 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, String, [AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!"] @TO@ private, static, final, String, [AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!"] @AT@ 2292 @LENGTH@ 174
---UPD VariableDeclarationFragment@@AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!" @TO@ AMBIGUOUS_FIELD_MAPPING="Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!" @AT@ 2320 @LENGTH@ 145
------UPD StringLiteral@@"Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @Field annotation!" @TO@ "Ambiguous field mapping detected! Both %s and %s map to the same field name %s! Disambiguate using @DocumentField annotation!" @AT@ 2346 @LENGTH@ 119


INS IfStatement@@if (handlerChainsUMDM != null) {  for (  final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {    for (    final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {      retVal.add(handlerUMDM.getHandlerClass());    }  }} @TO@ MethodDeclaration@@private, static, Set<String>, MethodName:getHandlers, final InputStream is, IOException,  @AT@ 8198 @LENGTH@ 345
---INS InfixExpression@@handlerChainsUMDM != null @TO@ IfStatement@@if (handlerChainsUMDM != null) {  for (  final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {    for (    final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {      retVal.add(handlerUMDM.getHandlerClass());    }  }} @AT@ 8202 @LENGTH@ 25
------INS SimpleName@@handlerChainsUMDM @TO@ InfixExpression@@handlerChainsUMDM != null @AT@ 8202 @LENGTH@ 17
------INS Operator@@!= @TO@ InfixExpression@@handlerChainsUMDM != null @AT@ 8219 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@handlerChainsUMDM != null @AT@ 8223 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {    for (    final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {      retVal.add(handlerUMDM.getHandlerClass());    }  }} @TO@ IfStatement@@if (handlerChainsUMDM != null) {  for (  final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {    for (    final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {      retVal.add(handlerUMDM.getHandlerClass());    }  }} @AT@ 8229 @LENGTH@ 314
------MOV EnhancedForStatement@@for (final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {  for (  final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {    retVal.add(handlerUMDM.getHandlerClass());  }} @TO@ Block@@ThenBody:{  for (  final UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) {    for (    final UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) {      retVal.add(handlerUMDM.getHandlerClass());    }  }} @AT@ 8049 @LENGTH@ 274


UPD MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @TO@ protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context, ModelNode operation,  @AT@ 1726 @LENGTH@ 567
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 1923 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1923 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1933 @LENGTH@ 9
---INS IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 2169 @LENGTH@ 138
------INS InfixExpression@@control == null @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2173 @LENGTH@ 15
---------INS SimpleName@@control @TO@ InfixExpression@@control == null @AT@ 2173 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@control == null @AT@ 2180 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@control == null @AT@ 2184 @LENGTH@ 4
------INS Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2190 @LENGTH@ 117
---------INS ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2204 @LENGTH@ 73
------------INS MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2204 @LENGTH@ 72
---------------INS SimpleName@@Name:ManagementUtil @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2204 @LENGTH@ 14
---------------INS SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2219 @LENGTH@ 57
------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2257 @LENGTH@ 7
------------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2266 @LENGTH@ 9
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2290 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.needContextAndHost())) @TO@ ClassInstanceCreation:new OperationFailedException(new ModelNode().set(MESSAGES.needHostAndPort())) @AT@ 1982 @LENGTH@ 87
---UPD ClassInstanceCreation@@OperationFailedException[new ModelNode().set(MESSAGES.needContextAndHost())] @TO@ OperationFailedException[new ModelNode().set(MESSAGES.needHostAndPort())] @AT@ 1988 @LENGTH@ 80
------UPD MethodInvocation@@new ModelNode().set(MESSAGES.needContextAndHost()) @TO@ new ModelNode().set(MESSAGES.needHostAndPort()) @AT@ 2017 @LENGTH@ 50
---------UPD SimpleName@@MethodName:set:[MESSAGES.needContextAndHost()] @TO@ MethodName:set:[MESSAGES.needHostAndPort()] @AT@ 2033 @LENGTH@ 34
------------UPD MethodInvocation@@MESSAGES.needContextAndHost() @TO@ MESSAGES.needHostAndPort() @AT@ 2037 @LENGTH@ 29
---------------UPD SimpleName@@MethodName:needContextAndHost:[] @TO@ MethodName:needHostAndPort:[] @AT@ 2046 @LENGTH@ 20


INS VariableDeclarationStatement@@final WSRefRegistry wsRefRegistry=ASHelper.getWSRefRegistry(unit); @TO@ MethodDeclaration@@private, static, UnifiedServiceRefMetaData, MethodName:getServiceRef, final DeploymentUnit unit, final ComponentDescription componentDescription, final ServiceReferenceMetaData serviceRefMD, DeploymentUnitProcessingException,  @AT@ 5505 @LENGTH@ 68
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final WSRefRegistry wsRefRegistry=ASHelper.getWSRefRegistry(unit); @AT@ 5505 @LENGTH@ 5
---INS SimpleType@@WSRefRegistry @TO@ VariableDeclarationStatement@@final WSRefRegistry wsRefRegistry=ASHelper.getWSRefRegistry(unit); @AT@ 5511 @LENGTH@ 13
---INS VariableDeclarationFragment@@wsRefRegistry=ASHelper.getWSRefRegistry(unit) @TO@ VariableDeclarationStatement@@final WSRefRegistry wsRefRegistry=ASHelper.getWSRefRegistry(unit); @AT@ 5525 @LENGTH@ 47
------INS SimpleName@@wsRefRegistry @TO@ VariableDeclarationFragment@@wsRefRegistry=ASHelper.getWSRefRegistry(unit) @AT@ 5525 @LENGTH@ 13
------INS MethodInvocation@@ASHelper.getWSRefRegistry(unit) @TO@ VariableDeclarationFragment@@wsRefRegistry=ASHelper.getWSRefRegistry(unit) @AT@ 5541 @LENGTH@ 31
---------INS SimpleName@@Name:ASHelper @TO@ MethodInvocation@@ASHelper.getWSRefRegistry(unit) @AT@ 5541 @LENGTH@ 8
---------INS SimpleName@@MethodName:getWSRefRegistry:[unit] @TO@ MethodInvocation@@ASHelper.getWSRefRegistry(unit) @AT@ 5550 @LENGTH@ 22
------------INS SimpleName@@unit @TO@ SimpleName@@MethodName:getWSRefRegistry:[unit] @AT@ 5567 @LENGTH@ 4


UPD Block@@ThenBody:{  final String msg=String.format("Error {%s:%s} executing {%s:%s}",responseStatus,reason,request.getMethod(),request.getRequestURI());  final SalesforceException exception=new SalesforceException(msg,createRestException(request));  exception.setStatusCode(responseStatus);  callback.onResponse(null,exception);} @TO@ ThenBody:{  final String msg=String.format("Error {%s:%s} executing {%s:%s}",responseStatus,reason,request.getMethod(),request.getRequestURI());  final SalesforceException exception=new SalesforceException(msg,responseStatus,createRestException(request));  callback.onResponse(null,exception);} @AT@ 5725 @LENGTH@ 443
---UPD VariableDeclarationStatement@@final SalesforceException exception=new SalesforceException(msg,createRestException(request)); @TO@ final SalesforceException exception=new SalesforceException(msg,responseStatus,createRestException(request)); @AT@ 5934 @LENGTH@ 97
------UPD VariableDeclarationFragment@@exception=new SalesforceException(msg,createRestException(request)) @TO@ exception=new SalesforceException(msg,responseStatus,createRestException(request)) @AT@ 5960 @LENGTH@ 70
---------UPD ClassInstanceCreation@@SalesforceException[msg, createRestException(request)] @TO@ SalesforceException[msg, responseStatus, createRestException(request)] @AT@ 5972 @LENGTH@ 58
------------INS SimpleName@@responseStatus @TO@ ClassInstanceCreation@@SalesforceException[msg, createRestException(request)] @AT@ 6001 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:exception.setStatusCode(responseStatus) @AT@ 6052 @LENGTH@ 40
------DEL MethodInvocation@@exception.setStatusCode(responseStatus) @AT@ 6052 @LENGTH@ 39
---------DEL SimpleName@@Name:exception @AT@ 6052 @LENGTH@ 9
---------DEL SimpleName@@MethodName:setStatusCode:[responseStatus] @AT@ 6062 @LENGTH@ 29
------------DEL SimpleName@@responseStatus @AT@ 6076 @LENGTH@ 14


UPD TryStatement@@try {  is=sci.openStream();  BufferedReader reader=new BufferedReader(new InputStreamReader(is));  String servletContainerInitializerClassName=reader.readLine();  while (servletContainerInitializerClassName != null) {    try {      int pos=servletContainerInitializerClassName.indexOf('#');      if (pos > 0) {        servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);      }      servletContainerInitializerClassName=servletContainerInitializerClassName.trim();      ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();      if (service != null) {        scis.add(service);      }      servletContainerInitializerClassName=reader.readLine();    } catch (    Exception e) {      if (error) {        throw MESSAGES.errorProcessingSCI(jar,e);      } else {        UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);      }    }  }} catch (Exception e) {  if (error) {    throw MESSAGES.errorProcessingSCI(jar,e);  } else {    UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);  }} finally {  try {    if (is != null)     is.close();  } catch (  IOException e) {  }} @TO@ try {  is=sci.openStream();  BufferedReader reader=new BufferedReader(new InputStreamReader(is));  String servletContainerInitializerClassName=reader.readLine().trim();  while (servletContainerInitializerClassName != null) {    try {      if (!servletContainerInitializerClassName.isEmpty()) {        int pos=servletContainerInitializerClassName.indexOf('#');        if (pos > 0) {          servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);        }        servletContainerInitializerClassName=servletContainerInitializerClassName.trim();        ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();        if (service != null) {          scis.add(service);        }      }      servletContainerInitializerClassName=reader.readLine();    } catch (    Exception e) {      if (error) {        throw MESSAGES.errorProcessingSCI(jar,e);      } else {        UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);      }    }  }} catch (Exception e) {  if (error) {    throw MESSAGES.errorProcessingSCI(jar,e);  } else {    UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);  }} finally {  try {    if (is != null)     is.close();  } catch (  IOException e) {  }} @AT@ 8287 @LENGTH@ 1826
---UPD VariableDeclarationStatement@@String servletContainerInitializerClassName=reader.readLine(); @TO@ String servletContainerInitializerClassName=reader.readLine().trim(); @AT@ 8485 @LENGTH@ 64
------UPD VariableDeclarationFragment@@servletContainerInitializerClassName=reader.readLine() @TO@ servletContainerInitializerClassName=reader.readLine().trim() @AT@ 8492 @LENGTH@ 56
---------UPD MethodInvocation@@reader.readLine() @TO@ reader.readLine().trim() @AT@ 8531 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:readLine:[] @TO@ MethodInvocation@@reader.readLine() @AT@ 8531 @LENGTH@ 17
------------UPD SimpleName@@MethodName:readLine:[] @TO@ MethodName:trim:[] @AT@ 8538 @LENGTH@ 10
---UPD WhileStatement@@while (servletContainerInitializerClassName != null) {  try {    int pos=servletContainerInitializerClassName.indexOf('#');    if (pos > 0) {      servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);    }    servletContainerInitializerClassName=servletContainerInitializerClassName.trim();    ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();    if (service != null) {      scis.add(service);    }    servletContainerInitializerClassName=reader.readLine();  } catch (  Exception e) {    if (error) {      throw MESSAGES.errorProcessingSCI(jar,e);    } else {      UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);    }  }} @TO@ while (servletContainerInitializerClassName != null) {  try {    if (!servletContainerInitializerClassName.isEmpty()) {      int pos=servletContainerInitializerClassName.indexOf('#');      if (pos > 0) {        servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);      }      servletContainerInitializerClassName=servletContainerInitializerClassName.trim();      ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();      if (service != null) {        scis.add(service);      }    }    servletContainerInitializerClassName=reader.readLine();  } catch (  Exception e) {    if (error) {      throw MESSAGES.errorProcessingSCI(jar,e);    } else {      UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);    }  }} @AT@ 8562 @LENGTH@ 1147
------UPD Block@@WhileBody:{  try {    int pos=servletContainerInitializerClassName.indexOf('#');    if (pos > 0) {      servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);    }    servletContainerInitializerClassName=servletContainerInitializerClassName.trim();    ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();    if (service != null) {      scis.add(service);    }    servletContainerInitializerClassName=reader.readLine();  } catch (  Exception e) {    if (error) {      throw MESSAGES.errorProcessingSCI(jar,e);    } else {      UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);    }  }} @TO@ WhileBody:{  try {    if (!servletContainerInitializerClassName.isEmpty()) {      int pos=servletContainerInitializerClassName.indexOf('#');      if (pos > 0) {        servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);      }      servletContainerInitializerClassName=servletContainerInitializerClassName.trim();      ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();      if (service != null) {        scis.add(service);      }    }    servletContainerInitializerClassName=reader.readLine();  } catch (  Exception e) {    if (error) {      throw MESSAGES.errorProcessingSCI(jar,e);    } else {      UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);    }  }} @AT@ 8615 @LENGTH@ 1094
---------UPD TryStatement@@try {  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }  servletContainerInitializerClassName=reader.readLine();} catch (Exception e) {  if (error) {    throw MESSAGES.errorProcessingSCI(jar,e);  } else {    UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);  }} @TO@ try {  if (!servletContainerInitializerClassName.isEmpty()) {    int pos=servletContainerInitializerClassName.indexOf('#');    if (pos > 0) {      servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);    }    servletContainerInitializerClassName=servletContainerInitializerClassName.trim();    ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();    if (service != null) {      scis.add(service);    }  }  servletContainerInitializerClassName=reader.readLine();} catch (Exception e) {  if (error) {    throw MESSAGES.errorProcessingSCI(jar,e);  } else {    UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);  }} @AT@ 8633 @LENGTH@ 1062
------------INS IfStatement@@if (!servletContainerInitializerClassName.isEmpty()) {  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @TO@ TryStatement@@try {  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }  servletContainerInitializerClassName=reader.readLine();} catch (Exception e) {  if (error) {    throw MESSAGES.errorProcessingSCI(jar,e);  } else {    UndertowLogger.ROOT_LOGGER.skippedSCI(jar,e);  }} @AT@ 8666 @LENGTH@ 814
---------------INS PrefixExpression@@!servletContainerInitializerClassName.isEmpty() @TO@ IfStatement@@if (!servletContainerInitializerClassName.isEmpty()) {  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 8669 @LENGTH@ 47
------------------INS Operator@@! @TO@ PrefixExpression@@!servletContainerInitializerClassName.isEmpty() @AT@ 8669 @LENGTH@ 1
------------------INS MethodInvocation@@servletContainerInitializerClassName.isEmpty() @TO@ PrefixExpression@@!servletContainerInitializerClassName.isEmpty() @AT@ 8670 @LENGTH@ 46
---------------------INS SimpleName@@Name:servletContainerInitializerClassName @TO@ MethodInvocation@@servletContainerInitializerClassName.isEmpty() @AT@ 8670 @LENGTH@ 36
---------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@servletContainerInitializerClassName.isEmpty() @AT@ 8707 @LENGTH@ 9
---------------INS Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @TO@ IfStatement@@if (!servletContainerInitializerClassName.isEmpty()) {  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 8718 @LENGTH@ 762
------------------MOV VariableDeclarationStatement@@int pos=servletContainerInitializerClassName.indexOf('#'); @TO@ Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 8659 @LENGTH@ 60
------------------MOV IfStatement@@if (pos > 0) {  servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);} @TO@ Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 8740 @LENGTH@ 155
------------------MOV ExpressionStatement@@Assignment:servletContainerInitializerClassName=servletContainerInitializerClassName.trim() @TO@ Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 8916 @LENGTH@ 83
------------------MOV VariableDeclarationStatement@@ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance(); @TO@ Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 9087 @LENGTH@ 142
------------------MOV IfStatement@@if (service != null) {  scis.add(service);} @TO@ Block@@ThenBody:{  int pos=servletContainerInitializerClassName.indexOf('#');  if (pos > 0) {    servletContainerInitializerClassName=servletContainerInitializerClassName.substring(0,pos);  }  servletContainerInitializerClassName=servletContainerInitializerClassName.trim();  ServletContainerInitializer service=(ServletContainerInitializer)classLoader.loadClass(servletContainerInitializerClassName).newInstance();  if (service != null) {    scis.add(service);  }} @AT@ 9250 @LENGTH@ 87


UPD ExpressionStatement@@MethodInvocation:git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").setRef("HEAD").call() @TO@ MethodInvocation:git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").call() @AT@ 29457 @LENGTH@ 143
---UPD MethodInvocation@@git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").setRef("HEAD").call() @TO@ git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").call() @AT@ 29457 @LENGTH@ 142
------DEL MethodInvocation@@MethodName:setRef:["HEAD"] @AT@ 29457 @LENGTH@ 135
---------DEL StringLiteral@@"HEAD" @AT@ 29585 @LENGTH@ 6


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]GitBridgeTest, FabricGitTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]GitBridgeTest, FabricGitTestSupport @AT@ 1860 @LENGTH@ 9769
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]GitBridgeTest, FabricGitTestSupport @AT@ 1953 @LENGTH@ 49


INS MethodDeclaration@@public, void, MethodName:testMove,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 53668 @LENGTH@ 324
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53668 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53675 @LENGTH@ 4
---INS SimpleName@@MethodName:testMove @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53680 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53695 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 53695 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 53695 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 53706 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 53710 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 53717 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53727 @LENGTH@ 38
------INS MethodInvocation@@actual.add(connection.move("foo",1)) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @AT@ 53727 @LENGTH@ 37
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 53727 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.move("foo",1)] @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 53734 @LENGTH@ 30
------------INS MethodInvocation@@connection.move("foo",1) @TO@ SimpleName@@MethodName:add:[connection.move("foo",1)] @AT@ 53738 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 53738 @LENGTH@ 10
---------------INS SimpleName@@MethodName:move:["foo", 1] @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 53749 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 53754 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 53761 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53768 @LENGTH@ 59
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 53768 @LENGTH@ 58
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 53768 @LENGTH@ 58
------------INS MethodInvocation@@Arrays.asList(new Object[]{true}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 53782 @LENGTH@ 35
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 53782 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{true}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 53789 @LENGTH@ 28
------------------INS ArrayCreation@@new Object[]{true} @TO@ SimpleName@@MethodName:asList:[new Object[]{true}] @AT@ 53796 @LENGTH@ 20
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{true} @AT@ 53800 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 53800 @LENGTH@ 6
---------------------INS ArrayInitializer@@{true} @TO@ ArrayCreation@@new Object[]{true} @AT@ 53809 @LENGTH@ 7
------------------------INS BooleanLiteral@@true @TO@ ArrayInitializer@@{true} @AT@ 53811 @LENGTH@ 4
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 53819 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:connection.select(1) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53830 @LENGTH@ 21
------INS MethodInvocation@@connection.select(1) @TO@ ExpressionStatement@@MethodInvocation:connection.select(1) @AT@ 53830 @LENGTH@ 20
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.select(1) @AT@ 53830 @LENGTH@ 10
---------INS SimpleName@@MethodName:select:[1] @TO@ MethodInvocation@@connection.select(1) @AT@ 53841 @LENGTH@ 9
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:select:[1] @AT@ 53848 @LENGTH@ 1
---INS TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 53854 @LENGTH@ 135
------INS ExpressionStatement@@MethodInvocation:assertEquals("bar",connection.get("foo")) @TO@ TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 53863 @LENGTH@ 42
---------INS MethodInvocation@@assertEquals("bar",connection.get("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",connection.get("foo")) @AT@ 53863 @LENGTH@ 41
------------INS SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @TO@ MethodInvocation@@assertEquals("bar",connection.get("foo")) @AT@ 53863 @LENGTH@ 41
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @AT@ 53876 @LENGTH@ 5
---------------INS MethodInvocation@@connection.get("foo") @TO@ SimpleName@@MethodName:assertEquals:["bar", connection.get("foo")] @AT@ 53882 @LENGTH@ 21
------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.get("foo") @AT@ 53882 @LENGTH@ 10
------------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@connection.get("foo") @AT@ 53893 @LENGTH@ 10
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 53897 @LENGTH@ 5
------INS Block@@FinallyBody:{  if (connection.exists("foo")) {    connection.del("foo");  }} @TO@ TryStatement@@try {  assertEquals("bar",connection.get("foo"));}  finally {  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 53918 @LENGTH@ 71
---------INS IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @TO@ Block@@FinallyBody:{  if (connection.exists("foo")) {    connection.del("foo");  }} @AT@ 53923 @LENGTH@ 62
------------INS MethodInvocation@@connection.exists("foo") @TO@ IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @AT@ 53926 @LENGTH@ 24
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.exists("foo") @AT@ 53926 @LENGTH@ 10
---------------INS SimpleName@@MethodName:exists:["foo"] @TO@ MethodInvocation@@connection.exists("foo") @AT@ 53937 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:exists:["foo"] @AT@ 53944 @LENGTH@ 5
------------INS Block@@ThenBody:{  connection.del("foo");} @TO@ IfStatement@@if (connection.exists("foo")) {  connection.del("foo");} @AT@ 53952 @LENGTH@ 33
---------------INS ExpressionStatement@@MethodInvocation:connection.del("foo") @TO@ Block@@ThenBody:{  connection.del("foo");} @AT@ 53958 @LENGTH@ 22
------------------INS MethodInvocation@@connection.del("foo") @TO@ ExpressionStatement@@MethodInvocation:connection.del("foo") @AT@ 53958 @LENGTH@ 21
---------------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.del("foo") @AT@ 53958 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:del:["foo"] @TO@ MethodInvocation@@connection.del("foo") @AT@ 53969 @LENGTH@ 10
------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:del:["foo"] @AT@ 53973 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[@Deprecated, public]LazyLoadingTypeConverter, BaseTypeConverterRegistry @AT@ 1840 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1840 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1847 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1855 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1877 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1884 @LENGTH@ 5


UPD VariableDeclarationStatement@@String policy=getContainerResolutionPolicy(curator,container); @TO@ String resolver="${zk:%s/resolver}"; @AT@ 25366 @LENGTH@ 65
---UPD VariableDeclarationFragment@@policy=getContainerResolutionPolicy(curator,container) @TO@ resolver="${zk:%s/resolver}" @AT@ 25373 @LENGTH@ 57
------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@policy=getContainerResolutionPolicy(curator,container) @AT@ 25373 @LENGTH@ 8
------DEL SimpleName@@policy @AT@ 25373 @LENGTH@ 6
------DEL MethodInvocation@@getContainerResolutionPolicy(curator,container) @AT@ 25382 @LENGTH@ 48
---------DEL SimpleName@@MethodName:getContainerResolutionPolicy:[curator, container] @AT@ 25382 @LENGTH@ 48
------------DEL SimpleName@@curator @AT@ 25411 @LENGTH@ 7
------------DEL SimpleName@@container @AT@ 25420 @LENGTH@ 9
------INS StringLiteral@@"${zk:%s/resolver}" @TO@ VariableDeclarationFragment@@policy=getContainerResolutionPolicy(curator,container) @AT@ 25384 @LENGTH@ 19


INS MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String version, String id,  @TO@ TypeDeclaration@@[public]DataStore,  @AT@ 4696 @LENGTH@ 53
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String version, String id,  @AT@ 4683 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 4683 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 4688 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String version, String id,  @AT@ 4696 @LENGTH@ 25
---INS SingleVariableDeclaration@@String version @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String version, String id,  @AT@ 4722 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String version @AT@ 4722 @LENGTH@ 6
------INS SimpleName@@version @TO@ SingleVariableDeclaration@@String version @AT@ 4729 @LENGTH@ 7
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String version, String id,  @AT@ 4738 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 4738 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 4745 @LENGTH@ 2


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CamelProfileTest, FabricFeaturesTest @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]CamelProfileTest, FabricFeaturesTest @AT@ 617 @LENGTH@ 733
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CamelProfileTest, FabricFeaturesTest @AT@ 710 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:Assert.assertTrue(LifecycleInterceptorNoProceed.postConstruct) @TO@ MethodInvocation:Assert.assertTrue(LifecycleInterceptorWithProceed.postConstruct) @AT@ 2713 @LENGTH@ 63
---UPD MethodInvocation@@Assert.assertTrue(LifecycleInterceptorNoProceed.postConstruct) @TO@ Assert.assertTrue(LifecycleInterceptorWithProceed.postConstruct) @AT@ 2713 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertTrue:[LifecycleInterceptorNoProceed.postConstruct] @TO@ MethodName:assertTrue:[LifecycleInterceptorWithProceed.postConstruct] @AT@ 2720 @LENGTH@ 55
---------UPD QualifiedName@@LifecycleInterceptorNoProceed.postConstruct @TO@ LifecycleInterceptorWithProceed.postConstruct @AT@ 2731 @LENGTH@ 43
------------UPD SimpleName@@LifecycleInterceptorNoProceed @TO@ LifecycleInterceptorWithProceed @AT@ 2731 @LENGTH@ 29


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 3270 @LENGTH@ 710
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 3292 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 3292 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 3292 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 3296 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 3304 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 3304 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3308 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 3316 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 3325 @LENGTH@ 7


UPD IfStatement@@if (legacyServices != null) {  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ if (legacyServices != null) {  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }  legacyServices.clear();} @AT@ 11241 @LENGTH@ 172
---UPD Block@@ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }  legacyServices.clear();} @AT@ 11269 @LENGTH@ 144
------INS ExpressionStatement@@MethodInvocation:legacyServices.clear() @TO@ Block@@ThenBody:{  for (  T legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 11416 @LENGTH@ 23
---------INS MethodInvocation@@legacyServices.clear() @TO@ ExpressionStatement@@MethodInvocation:legacyServices.clear() @AT@ 11416 @LENGTH@ 22
------------INS SimpleName@@Name:legacyServices @TO@ MethodInvocation@@legacyServices.clear() @AT@ 11416 @LENGTH@ 14
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@legacyServices.clear() @AT@ 11431 @LENGTH@ 7


DEL MethodDeclaration@@void, MethodName:destroy,  @AT@ 853 @LENGTH@ 10
---DEL PrimitiveType@@void @AT@ 848 @LENGTH@ 4
---DEL SimpleName@@MethodName:destroy @AT@ 853 @LENGTH@ 7


INS MethodDeclaration@@private, voidMethodName:CustomerTransformer,  @TO@ TypeDeclaration@@[@Converter, public]CustomerTransformer,  @AT@ 1552 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CustomerTransformer,  @AT@ 1552 @LENGTH@ 7
---INS SimpleName@@MethodName:CustomerTransformer @TO@ MethodDeclaration@@private, voidMethodName:CustomerTransformer,  @AT@ 1560 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertEquals("target/cachedir",context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ MethodInvocation:assertEquals(normalizePath("target/cachedir"),normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())) @AT@ 1248 @LENGTH@ 99
---UPD MethodInvocation@@assertEquals("target/cachedir",context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ assertEquals(normalizePath("target/cachedir"),normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())) @AT@ 1248 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodName:assertEquals:[normalizePath("target/cachedir"), normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString())] @AT@ 1248 @LENGTH@ 98
---------INS MethodInvocation@@normalizePath("target/cachedir") @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1322 @LENGTH@ 32
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir"] @TO@ MethodInvocation@@normalizePath("target/cachedir") @AT@ 1322 @LENGTH@ 32
---------------MOV StringLiteral@@"target/cachedir" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir"] @AT@ 1261 @LENGTH@ 17
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir"] @TO@ MethodInvocation@@normalizePath("target/cachedir") @AT@ 1322 @LENGTH@ 32
---------------MOV StringLiteral@@"target/cachedir" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir"] @AT@ 1261 @LENGTH@ 17
---------INS MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir", context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1356 @LENGTH@ 80
------------INS SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @AT@ 1356 @LENGTH@ 80
---------------MOV MethodInvocation@@context.getStreamCachingStrategy().getSpoolDirectory().toString() @TO@ SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1280 @LENGTH@ 65
------------INS SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @TO@ MethodInvocation@@normalizePath(context.getStreamCachingStrategy().getSpoolDirectory().toString()) @AT@ 1356 @LENGTH@ 80
---------------MOV MethodInvocation@@context.getStreamCachingStrategy().getSpoolDirectory().toString() @TO@ SimpleName@@MethodName:normalizePath:[context.getStreamCachingStrategy().getSpoolDirectory().toString()] @AT@ 1280 @LENGTH@ 65


UPD Block@@SyncBody:{  if (started) {    return;  }  System.setProperty("hadoop.log.dir",getTmpDir());  System.setProperty("test.build.data","build/test/data/" + clusterName);  log.info("Starting cluster=" + clusterName);  Configuration config=new JobConf();  dfsCluster=new MiniDFSCluster(config,nodes,true,null);  FileSystem fs=dfsCluster.getFileSystem();  log.info("Dfs cluster uri= " + fs.getUri());  mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader());  configuration=MiniMRClusterCompat.getConfiguration(mrClusterObject);  FileSystem.setDefaultUri(configuration,fs.getUri());  log.info("Started cluster=" + clusterName);  started=true;} @TO@ SyncBody:{  if (started) {    return;  }  String tmpDir=getTmpDir();  System.setProperty("hadoop.log.dir",tmpDir);  System.setProperty("test.build.data","build/test/data/" + clusterName);  log.info("Starting cluster=" + clusterName);  Configuration config=new JobConf();  String umask=getCurrentUmask(tmpDir,config);  if (umask != null) {    log.info("Setting expected umask to " + umask);    config.set("dfs.datanode.data.dir.perm",umask);  }  dfsCluster=new MiniDFSCluster(config,nodes,true,null);  FileSystem fs=dfsCluster.getFileSystem();  log.info("Dfs cluster uri= " + fs.getUri());  mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader());  configuration=MiniMRClusterCompat.getConfiguration(mrClusterObject);  FileSystem.setDefaultUri(configuration,fs.getUri());  log.info("Started cluster=" + clusterName);  started=true;} @AT@ 2729 @LENGTH@ 1691
---UPD ExpressionStatement@@MethodInvocation:System.setProperty("hadoop.log.dir",getTmpDir()) @TO@ MethodInvocation:System.setProperty("hadoop.log.dir",tmpDir) @AT@ 3077 @LENGTH@ 50
------UPD MethodInvocation@@System.setProperty("hadoop.log.dir",getTmpDir()) @TO@ System.setProperty("hadoop.log.dir",tmpDir) @AT@ 3077 @LENGTH@ 49
---------UPD SimpleName@@MethodName:setProperty:["hadoop.log.dir", getTmpDir()] @TO@ MethodName:setProperty:["hadoop.log.dir", tmpDir] @AT@ 3084 @LENGTH@ 42
------------DEL MethodInvocation@@MethodName:getTmpDir:[] @AT@ 3114 @LENGTH@ 11
------------INS SimpleName@@tmpDir @TO@ SimpleName@@MethodName:setProperty:["hadoop.log.dir", getTmpDir()] @AT@ 3278 @LENGTH@ 6
---INS VariableDeclarationStatement@@String tmpDir=getTmpDir(); @TO@ Block@@SyncBody:{  if (started) {    return;  }  System.setProperty("hadoop.log.dir",getTmpDir());  System.setProperty("test.build.data","build/test/data/" + clusterName);  log.info("Starting cluster=" + clusterName);  Configuration config=new JobConf();  dfsCluster=new MiniDFSCluster(config,nodes,true,null);  FileSystem fs=dfsCluster.getFileSystem();  log.info("Dfs cluster uri= " + fs.getUri());  mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader());  configuration=MiniMRClusterCompat.getConfiguration(mrClusterObject);  FileSystem.setDefaultUri(configuration,fs.getUri());  log.info("Started cluster=" + clusterName);  started=true;} @AT@ 3209 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tmpDir=getTmpDir(); @AT@ 3209 @LENGTH@ 6
------INS VariableDeclarationFragment@@tmpDir=getTmpDir() @TO@ VariableDeclarationStatement@@String tmpDir=getTmpDir(); @AT@ 3216 @LENGTH@ 20
---------INS SimpleName@@tmpDir @TO@ VariableDeclarationFragment@@tmpDir=getTmpDir() @AT@ 3216 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:getTmpDir:[] @TO@ VariableDeclarationFragment@@tmpDir=getTmpDir() @AT@ 3225 @LENGTH@ 11
---INS VariableDeclarationStatement@@String umask=getCurrentUmask(tmpDir,config); @TO@ Block@@SyncBody:{  if (started) {    return;  }  System.setProperty("hadoop.log.dir",getTmpDir());  System.setProperty("test.build.data","build/test/data/" + clusterName);  log.info("Starting cluster=" + clusterName);  Configuration config=new JobConf();  dfsCluster=new MiniDFSCluster(config,nodes,true,null);  FileSystem fs=dfsCluster.getFileSystem();  log.info("Dfs cluster uri= " + fs.getUri());  mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader());  configuration=MiniMRClusterCompat.getConfiguration(mrClusterObject);  FileSystem.setDefaultUri(configuration,fs.getUri());  log.info("Started cluster=" + clusterName);  started=true;} @AT@ 3518 @LENGTH@ 47
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String umask=getCurrentUmask(tmpDir,config); @AT@ 3518 @LENGTH@ 6
------INS VariableDeclarationFragment@@umask=getCurrentUmask(tmpDir,config) @TO@ VariableDeclarationStatement@@String umask=getCurrentUmask(tmpDir,config); @AT@ 3525 @LENGTH@ 39
---------INS SimpleName@@umask @TO@ VariableDeclarationFragment@@umask=getCurrentUmask(tmpDir,config) @AT@ 3525 @LENGTH@ 5
---------INS MethodInvocation@@getCurrentUmask(tmpDir,config) @TO@ VariableDeclarationFragment@@umask=getCurrentUmask(tmpDir,config) @AT@ 3533 @LENGTH@ 31
------------INS SimpleName@@MethodName:getCurrentUmask:[tmpDir, config] @TO@ MethodInvocation@@getCurrentUmask(tmpDir,config) @AT@ 3533 @LENGTH@ 31
---------------INS SimpleName@@tmpDir @TO@ SimpleName@@MethodName:getCurrentUmask:[tmpDir, config] @AT@ 3549 @LENGTH@ 6
---------------INS SimpleName@@config @TO@ SimpleName@@MethodName:getCurrentUmask:[tmpDir, config] @AT@ 3557 @LENGTH@ 6
---INS IfStatement@@if (umask != null) {  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @TO@ Block@@SyncBody:{  if (started) {    return;  }  System.setProperty("hadoop.log.dir",getTmpDir());  System.setProperty("test.build.data","build/test/data/" + clusterName);  log.info("Starting cluster=" + clusterName);  Configuration config=new JobConf();  dfsCluster=new MiniDFSCluster(config,nodes,true,null);  FileSystem fs=dfsCluster.getFileSystem();  log.info("Dfs cluster uri= " + fs.getUri());  mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader());  configuration=MiniMRClusterCompat.getConfiguration(mrClusterObject);  FileSystem.setDefaultUri(configuration,fs.getUri());  log.info("Started cluster=" + clusterName);  started=true;} @AT@ 3569 @LENGTH@ 130
------INS InfixExpression@@umask != null @TO@ IfStatement@@if (umask != null) {  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @AT@ 3573 @LENGTH@ 13
---------INS SimpleName@@umask @TO@ InfixExpression@@umask != null @AT@ 3573 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@umask != null @AT@ 3578 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@umask != null @AT@ 3582 @LENGTH@ 4
------INS Block@@ThenBody:{  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @TO@ IfStatement@@if (umask != null) {  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @AT@ 3588 @LENGTH@ 111
---------INS ExpressionStatement@@MethodInvocation:log.info("Setting expected umask to " + umask) @TO@ Block@@ThenBody:{  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @AT@ 3594 @LENGTH@ 47
------------INS MethodInvocation@@log.info("Setting expected umask to " + umask) @TO@ ExpressionStatement@@MethodInvocation:log.info("Setting expected umask to " + umask) @AT@ 3594 @LENGTH@ 46
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.info("Setting expected umask to " + umask) @AT@ 3594 @LENGTH@ 3
---------------INS SimpleName@@MethodName:info:["Setting expected umask to " + umask] @TO@ MethodInvocation@@log.info("Setting expected umask to " + umask) @AT@ 3598 @LENGTH@ 42
------------------INS InfixExpression@@"Setting expected umask to " + umask @TO@ SimpleName@@MethodName:info:["Setting expected umask to " + umask] @AT@ 3603 @LENGTH@ 36
---------------------INS StringLiteral@@"Setting expected umask to " @TO@ InfixExpression@@"Setting expected umask to " + umask @AT@ 3603 @LENGTH@ 28
---------------------INS Operator@@+ @TO@ InfixExpression@@"Setting expected umask to " + umask @AT@ 3631 @LENGTH@ 1
---------------------INS SimpleName@@umask @TO@ InfixExpression@@"Setting expected umask to " + umask @AT@ 3634 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:config.set("dfs.datanode.data.dir.perm",umask) @TO@ Block@@ThenBody:{  log.info("Setting expected umask to " + umask);  config.set("dfs.datanode.data.dir.perm",umask);} @AT@ 3646 @LENGTH@ 48
------------INS MethodInvocation@@config.set("dfs.datanode.data.dir.perm",umask) @TO@ ExpressionStatement@@MethodInvocation:config.set("dfs.datanode.data.dir.perm",umask) @AT@ 3646 @LENGTH@ 47
---------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.set("dfs.datanode.data.dir.perm",umask) @AT@ 3646 @LENGTH@ 6
---------------INS SimpleName@@MethodName:set:["dfs.datanode.data.dir.perm", umask] @TO@ MethodInvocation@@config.set("dfs.datanode.data.dir.perm",umask) @AT@ 3653 @LENGTH@ 40
------------------INS StringLiteral@@"dfs.datanode.data.dir.perm" @TO@ SimpleName@@MethodName:set:["dfs.datanode.data.dir.perm", umask] @AT@ 3657 @LENGTH@ 28
------------------INS SimpleName@@umask @TO@ SimpleName@@MethodName:set:["dfs.datanode.data.dir.perm", umask] @AT@ 3687 @LENGTH@ 5


INS FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 24931 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @AT@ 24931 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @AT@ 24938 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @AT@ 24945 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @AT@ 24951 @LENGTH@ 3
---INS VariableDeclarationFragment@@POST_MODULE_MAIL_SESSION_REF=0x1701 @TO@ FieldDeclaration@@public, static, final, int, [POST_MODULE_MAIL_SESSION_REF=0x1701] @AT@ 24955 @LENGTH@ 52
------INS SimpleName@@POST_MODULE_MAIL_SESSION_REF @TO@ VariableDeclarationFragment@@POST_MODULE_MAIL_SESSION_REF=0x1701 @AT@ 24955 @LENGTH@ 28
------INS NumberLiteral@@0x1701 @TO@ VariableDeclarationFragment@@POST_MODULE_MAIL_SESSION_REF=0x1701 @AT@ 25001 @LENGTH@ 6


UPD MethodDeclaration@@IllegalStateException, MethodName:failedToParse, @Cause Throwable cause, String resourceName,  @TO@ IllegalStateException, MethodName:failedToParse, @Cause Throwable cause, URL url,  @AT@ 6894 @LENGTH@ 59
---UPD SingleVariableDeclaration@@String resourceName @TO@ URL url @AT@ 6932 @LENGTH@ 19
------UPD SimpleType@@String @TO@ URL @AT@ 6932 @LENGTH@ 6
------UPD SimpleName@@resourceName @TO@ url @AT@ 6939 @LENGTH@ 12


UPD TryStatement@@try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  bundleFabricZooKeeper.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @TO@ try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  Bundle bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  File gitDir=new File("data/git");  if (gitDir.isDirectory()) {    delete(gitDir);  }  bundleFabricZooKeeper.start();  bundleFabricGit.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @AT@ 8790 @LENGTH@ 1152
---INS VariableDeclarationStatement@@Bundle bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git"); @TO@ TryStatement@@try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  bundleFabricZooKeeper.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @AT@ 8924 @LENGTH@ 91
------INS SimpleType@@Bundle @TO@ VariableDeclarationStatement@@Bundle bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git"); @AT@ 8924 @LENGTH@ 6
------INS VariableDeclarationFragment@@bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @TO@ VariableDeclarationStatement@@Bundle bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git"); @AT@ 8931 @LENGTH@ 83
---------INS SimpleName@@bundleFabricGit @TO@ VariableDeclarationFragment@@bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @AT@ 8931 @LENGTH@ 15
---------INS MethodInvocation@@bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @TO@ VariableDeclarationFragment@@bundleFabricGit=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @AT@ 8949 @LENGTH@ 65
------------INS SimpleName@@Name:bundleUtils @TO@ MethodInvocation@@bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @AT@ 8949 @LENGTH@ 11
------------INS SimpleName@@MethodName:findAndStopBundle:["org.fusesource.fabric.fabric-git"] @TO@ MethodInvocation@@bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-git") @AT@ 8961 @LENGTH@ 53
---------------INS StringLiteral@@"org.fusesource.fabric.fabric-git" @TO@ SimpleName@@MethodName:findAndStopBundle:["org.fusesource.fabric.fabric-git"] @AT@ 8979 @LENGTH@ 34
---INS VariableDeclarationStatement@@File gitDir=new File("data/git"); @TO@ TryStatement@@try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  bundleFabricZooKeeper.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @AT@ 9888 @LENGTH@ 35
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File gitDir=new File("data/git"); @AT@ 9888 @LENGTH@ 4
------INS VariableDeclarationFragment@@gitDir=new File("data/git") @TO@ VariableDeclarationStatement@@File gitDir=new File("data/git"); @AT@ 9893 @LENGTH@ 29
---------INS SimpleName@@gitDir @TO@ VariableDeclarationFragment@@gitDir=new File("data/git") @AT@ 9893 @LENGTH@ 6
---------INS ClassInstanceCreation@@File["data/git"] @TO@ VariableDeclarationFragment@@gitDir=new File("data/git") @AT@ 9902 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@File["data/git"] @AT@ 9902 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File["data/git"] @AT@ 9906 @LENGTH@ 4
------------INS StringLiteral@@"data/git" @TO@ ClassInstanceCreation@@File["data/git"] @AT@ 9911 @LENGTH@ 10
---INS IfStatement@@if (gitDir.isDirectory()) {  delete(gitDir);} @TO@ TryStatement@@try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  bundleFabricZooKeeper.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @AT@ 9936 @LENGTH@ 73
------INS MethodInvocation@@gitDir.isDirectory() @TO@ IfStatement@@if (gitDir.isDirectory()) {  delete(gitDir);} @AT@ 9940 @LENGTH@ 20
---------INS SimpleName@@Name:gitDir @TO@ MethodInvocation@@gitDir.isDirectory() @AT@ 9940 @LENGTH@ 6
---------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@gitDir.isDirectory() @AT@ 9947 @LENGTH@ 13
------INS Block@@ThenBody:{  delete(gitDir);} @TO@ IfStatement@@if (gitDir.isDirectory()) {  delete(gitDir);} @AT@ 9962 @LENGTH@ 47
---------INS ExpressionStatement@@MethodInvocation:delete(gitDir) @TO@ Block@@ThenBody:{  delete(gitDir);} @AT@ 9980 @LENGTH@ 15
------------INS MethodInvocation@@delete(gitDir) @TO@ ExpressionStatement@@MethodInvocation:delete(gitDir) @AT@ 9980 @LENGTH@ 14
---------------INS SimpleName@@MethodName:delete:[gitDir] @TO@ MethodInvocation@@delete(gitDir) @AT@ 9980 @LENGTH@ 14
------------------INS SimpleName@@gitDir @TO@ SimpleName@@MethodName:delete:[gitDir] @AT@ 9987 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:bundleFabricGit.start() @TO@ TryStatement@@try {  Bundle bundleFabricZooKeeper=bundleUtils.findAndStopBundle("org.fusesource.fabric.fabric-zookeeper");  for (; ; ) {    Configuration[] configs=configAdmin.get().listConfigurations("(|(service.factoryPid=org.fusesource.fabric.zookeeper.server)(service.pid=org.fusesource.fabric.zookeeper))");    if (configs != null && configs.length > 0) {      for (      Configuration config : configs) {        config.delete();      }      Thread.sleep(100);    } else {      break;    }  }  File zkDir=new File("data/zookeeper");  if (zkDir.isDirectory()) {    File newZkDir=new File("data/zookeeper." + System.currentTimeMillis());    if (!zkDir.renameTo(newZkDir)) {      newZkDir=zkDir;    }    delete(newZkDir);  }  bundleFabricZooKeeper.start();} catch (Exception e) {  throw new FabricException("Unable to delete zookeeper configuration",e);} @AT@ 10066 @LENGTH@ 24
------INS MethodInvocation@@bundleFabricGit.start() @TO@ ExpressionStatement@@MethodInvocation:bundleFabricGit.start() @AT@ 10066 @LENGTH@ 23
---------INS SimpleName@@Name:bundleFabricGit @TO@ MethodInvocation@@bundleFabricGit.start() @AT@ 10066 @LENGTH@ 15
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@bundleFabricGit.start() @AT@ 10082 @LENGTH@ 7


INS IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ MethodDeclaration@@public, void, MethodName:executeRuntimeStep, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 5069 @LENGTH@ 138
---INS InfixExpression@@control == null @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 5073 @LENGTH@ 15
------INS SimpleName@@control @TO@ InfixExpression@@control == null @AT@ 5073 @LENGTH@ 7
------INS Operator@@== @TO@ InfixExpression@@control == null @AT@ 5080 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@control == null @AT@ 5084 @LENGTH@ 4
---INS Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 5090 @LENGTH@ 117
------INS ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 5104 @LENGTH@ 73
---------INS MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 5104 @LENGTH@ 72
------------INS SimpleName@@Name:ManagementUtil @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 5104 @LENGTH@ 14
------------INS SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 5119 @LENGTH@ 57
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 5157 @LENGTH@ 7
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 5166 @LENGTH@ 9
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 5190 @LENGTH@ 7


UPD IfStatement@@if (producer.getConfiguration().getRequestTimeout() > 0) {  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove("timeout");} @TO@ if (producer.getConfiguration().getRequestTimeout() > 0) {  ChannelHandler handler=ctx.getPipeline().get("timeout");  if (handler != null) {    LOG.trace("Removing timeout channel as we received message");    ctx.getPipeline().remove(handler);  }} @AT@ 5114 @LENGTH@ 191
---UPD Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove("timeout");} @TO@ ThenBody:{  ChannelHandler handler=ctx.getPipeline().get("timeout");  if (handler != null) {    LOG.trace("Removing timeout channel as we received message");    ctx.getPipeline().remove(handler);  }} @AT@ 5171 @LENGTH@ 134
------DEL ExpressionStatement@@MethodInvocation:ctx.getPipeline().remove("timeout") @AT@ 5259 @LENGTH@ 36
---------DEL MethodInvocation@@ctx.getPipeline().remove("timeout") @AT@ 5259 @LENGTH@ 35
------INS VariableDeclarationStatement@@ChannelHandler handler=ctx.getPipeline().get("timeout"); @TO@ Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove("timeout");} @AT@ 5348 @LENGTH@ 58
---------INS SimpleType@@ChannelHandler @TO@ VariableDeclarationStatement@@ChannelHandler handler=ctx.getPipeline().get("timeout"); @AT@ 5348 @LENGTH@ 14
---------INS VariableDeclarationFragment@@handler=ctx.getPipeline().get("timeout") @TO@ VariableDeclarationStatement@@ChannelHandler handler=ctx.getPipeline().get("timeout"); @AT@ 5363 @LENGTH@ 42
------------INS SimpleName@@handler @TO@ VariableDeclarationFragment@@handler=ctx.getPipeline().get("timeout") @AT@ 5363 @LENGTH@ 7
------------INS MethodInvocation@@ctx.getPipeline().get("timeout") @TO@ VariableDeclarationFragment@@handler=ctx.getPipeline().get("timeout") @AT@ 5373 @LENGTH@ 32
---------------MOV MethodInvocation@@MethodName:getPipeline:[] @TO@ MethodInvocation@@ctx.getPipeline().get("timeout") @AT@ 5259 @LENGTH@ 17
---------------MOV SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getPipeline().get("timeout") @AT@ 5259 @LENGTH@ 3
---------------MOV SimpleName@@MethodName:remove:["timeout"] @TO@ MethodInvocation@@ctx.getPipeline().get("timeout") @AT@ 5277 @LENGTH@ 17
------INS IfStatement@@if (handler != null) {  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @TO@ Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove("timeout");} @AT@ 5419 @LENGTH@ 165
---------INS InfixExpression@@handler != null @TO@ IfStatement@@if (handler != null) {  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @AT@ 5423 @LENGTH@ 15
------------INS SimpleName@@handler @TO@ InfixExpression@@handler != null @AT@ 5423 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@handler != null @AT@ 5430 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@handler != null @AT@ 5434 @LENGTH@ 4
---------INS Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @TO@ IfStatement@@if (handler != null) {  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @AT@ 5440 @LENGTH@ 144
------------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Removing timeout channel as we received message") @TO@ Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @AT@ 5185 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:ctx.getPipeline().remove(handler) @TO@ Block@@ThenBody:{  LOG.trace("Removing timeout channel as we received message");  ctx.getPipeline().remove(handler);} @AT@ 5536 @LENGTH@ 34
---------------INS MethodInvocation@@ctx.getPipeline().remove(handler) @TO@ ExpressionStatement@@MethodInvocation:ctx.getPipeline().remove(handler) @AT@ 5536 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:getPipeline:[] @TO@ MethodInvocation@@ctx.getPipeline().remove(handler) @AT@ 5536 @LENGTH@ 17
------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getPipeline().remove(handler) @AT@ 5536 @LENGTH@ 3
------------------INS SimpleName@@MethodName:remove:[handler] @TO@ MethodInvocation@@ctx.getPipeline().remove(handler) @AT@ 5554 @LENGTH@ 15
---------------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:remove:[handler] @AT@ 5561 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testMove,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]LettuceConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 9022 @LENGTH@ 609
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9022 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9029 @LENGTH@ 4
---INS SimpleName@@MethodName:testMove @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9034 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9049 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 9049 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 9049 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 9060 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 9064 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 9071 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9081 @LENGTH@ 38
------INS MethodInvocation@@actual.add(connection.move("foo",1)) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @AT@ 9081 @LENGTH@ 37
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 9081 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.move("foo",1)] @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 9088 @LENGTH@ 30
------------INS MethodInvocation@@connection.move("foo",1) @TO@ SimpleName@@MethodName:add:[connection.move("foo",1)] @AT@ 9092 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 9092 @LENGTH@ 10
---------------INS SimpleName@@MethodName:move:["foo", 1] @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 9103 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 9108 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 9115 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9122 @LENGTH@ 59
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 9122 @LENGTH@ 58
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 9122 @LENGTH@ 58
------------INS MethodInvocation@@Arrays.asList(new Object[]{true}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 9136 @LENGTH@ 35
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 9136 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{true}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 9143 @LENGTH@ 28
------------------INS ArrayCreation@@new Object[]{true} @TO@ SimpleName@@MethodName:asList:[new Object[]{true}] @AT@ 9150 @LENGTH@ 20
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{true} @AT@ 9154 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 9154 @LENGTH@ 6
---------------------INS ArrayInitializer@@{true} @TO@ ArrayCreation@@new Object[]{true} @AT@ 9163 @LENGTH@ 7
------------------------INS BooleanLiteral@@true @TO@ ArrayInitializer@@{true} @AT@ 9165 @LENGTH@ 4
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 9173 @LENGTH@ 6
---INS VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9268 @LENGTH@ 67
------INS SimpleType@@LettuceConnectionFactory @TO@ VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @AT@ 9268 @LENGTH@ 24
------INS VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @TO@ VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @AT@ 9293 @LENGTH@ 41
---------INS SimpleName@@factory2 @TO@ VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @AT@ 9293 @LENGTH@ 8
---------INS ClassInstanceCreation@@LettuceConnectionFactory[] @TO@ VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @AT@ 9304 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@LettuceConnectionFactory[] @AT@ 9304 @LENGTH@ 3
------------INS SimpleType@@LettuceConnectionFactory @TO@ ClassInstanceCreation@@LettuceConnectionFactory[] @AT@ 9308 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9338 @LENGTH@ 24
------INS MethodInvocation@@factory2.setDatabase(1) @TO@ ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @AT@ 9338 @LENGTH@ 23
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 9338 @LENGTH@ 8
---------INS SimpleName@@MethodName:setDatabase:[1] @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 9347 @LENGTH@ 14
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setDatabase:[1] @AT@ 9359 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9365 @LENGTH@ 30
------INS MethodInvocation@@factory2.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @AT@ 9365 @LENGTH@ 29
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 9365 @LENGTH@ 8
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 9374 @LENGTH@ 20
---INS VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9398 @LENGTH@ 89
------INS SimpleType@@StringRedisConnection @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 9398 @LENGTH@ 21
------INS VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 9420 @LENGTH@ 66
---------INS SimpleName@@conn2 @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 9420 @LENGTH@ 5
---------INS ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 9428 @LENGTH@ 58
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 9428 @LENGTH@ 3
------------INS SimpleType@@DefaultStringRedisConnection @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 9432 @LENGTH@ 28
------------INS MethodInvocation@@factory2.getConnection() @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 9461 @LENGTH@ 24
---------------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.getConnection() @AT@ 9461 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory2.getConnection() @AT@ 9470 @LENGTH@ 15
---INS TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 9490 @LENGTH@ 138
------INS ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 9499 @LENGTH@ 37
---------INS MethodInvocation@@assertEquals("bar",conn2.get("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @AT@ 9499 @LENGTH@ 36
------------INS SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @TO@ MethodInvocation@@assertEquals("bar",conn2.get("foo")) @AT@ 9499 @LENGTH@ 36
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 9512 @LENGTH@ 5
---------------INS MethodInvocation@@conn2.get("foo") @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 9518 @LENGTH@ 16
------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.get("foo") @AT@ 9518 @LENGTH@ 5
------------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@conn2.get("foo") @AT@ 9524 @LENGTH@ 10
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 9528 @LENGTH@ 5
------INS Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 9549 @LENGTH@ 79
---------INS IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 9554 @LENGTH@ 52
------------INS MethodInvocation@@conn2.exists("foo") @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 9557 @LENGTH@ 19
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 9557 @LENGTH@ 5
---------------INS SimpleName@@MethodName:exists:["foo"] @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 9563 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:exists:["foo"] @AT@ 9570 @LENGTH@ 5
------------INS Block@@ThenBody:{  conn2.del("foo");} @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 9578 @LENGTH@ 28
---------------INS ExpressionStatement@@MethodInvocation:conn2.del("foo") @TO@ Block@@ThenBody:{  conn2.del("foo");} @AT@ 9584 @LENGTH@ 17
------------------INS MethodInvocation@@conn2.del("foo") @TO@ ExpressionStatement@@MethodInvocation:conn2.del("foo") @AT@ 9584 @LENGTH@ 16
---------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.del("foo") @AT@ 9584 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:del:["foo"] @TO@ MethodInvocation@@conn2.del("foo") @AT@ 9590 @LENGTH@ 10
------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:del:["foo"] @AT@ 9594 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:conn2.close() @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 9610 @LENGTH@ 14
------------INS MethodInvocation@@conn2.close() @TO@ ExpressionStatement@@MethodInvocation:conn2.close() @AT@ 9610 @LENGTH@ 13
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.close() @AT@ 9610 @LENGTH@ 5
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@conn2.close() @AT@ 9616 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(camelServerContainers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(camelServerContainers,PROVISION_TIMEOUT) @AT@ 4027 @LENGTH@ 66
---UPD MethodInvocation@@Provision.assertSuccess(camelServerContainers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(camelServerContainers,PROVISION_TIMEOUT) @AT@ 4027 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertSuccess:[camelServerContainers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[camelServerContainers, PROVISION_TIMEOUT] @AT@ 4037 @LENGTH@ 55


UPD MethodDeclaration@@RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address,  @TO@ RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address, String s,  @AT@ 5939 @LENGTH@ 68
---INS SingleVariableDeclaration@@String s @TO@ MethodDeclaration@@RuntimeException, MethodName:cannotCreateObjectName, @Cause Throwable cause, PathAddress address,  @AT@ 6045 @LENGTH@ 8
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 6045 @LENGTH@ 6
------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 6052 @LENGTH@ 1


UPD FieldDeclaration@@private, boolean, [allowNullNewExchange=false] @TO@ private, boolean, [allowNullNewExchange] @AT@ 1841 @LENGTH@ 45
---UPD VariableDeclarationFragment@@allowNullNewExchange=false @TO@ allowNullNewExchange @AT@ 1857 @LENGTH@ 28
------DEL BooleanLiteral@@false @AT@ 1880 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricCamelComponentTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]FabricCamelComponentTest, FabricTestSupport @AT@ 1327 @LENGTH@ 5196
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricCamelComponentTest, FabricTestSupport @AT@ 1447 @LENGTH@ 49


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 2447 @LENGTH@ 173
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 2492 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2492 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2492 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2496 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2504 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2504 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2508 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2516 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2525 @LENGTH@ 7


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FtpConsumerIdempotentKeyChangedIssueTest, FtpServerTestSupport @AT@ 1167 @LENGTH@ 228


UPD FieldDeclaration@@private, CxfMessageMapper, [cxfBeanBinding=new DefaultCxfMesssageMapper()] @TO@ private, CxfMessageMapper, [cxfBeanBinding=new DefaultCxfMessageMapper()] @AT@ 2182 @LENGTH@ 73
---UPD VariableDeclarationFragment@@cxfBeanBinding=new DefaultCxfMesssageMapper() @TO@ cxfBeanBinding=new DefaultCxfMessageMapper() @AT@ 2207 @LENGTH@ 47
------UPD ClassInstanceCreation@@DefaultCxfMesssageMapper[] @TO@ DefaultCxfMessageMapper[] @AT@ 2224 @LENGTH@ 30
---------UPD SimpleType@@DefaultCxfMesssageMapper @TO@ DefaultCxfMessageMapper @AT@ 2228 @LENGTH@ 24


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricMavenProxyTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]FabricMavenProxyTest, FabricTestSupport @AT@ 2193 @LENGTH@ 2950
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricMavenProxyTest, FabricTestSupport @AT@ 2312 @LENGTH@ 49


INS MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @TO@ TypeDeclaration@@[public, final]ASHelper,  @AT@ 11451 @LENGTH@ 370
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11451 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11458 @LENGTH@ 6
---INS SimpleType@@WSRefRegistry @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11465 @LENGTH@ 13
---INS SimpleName@@MethodName:getWSRefRegistry @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11479 @LENGTH@ 16
---INS SingleVariableDeclaration@@final DeploymentUnit unit @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11496 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeploymentUnit unit @AT@ 11496 @LENGTH@ 5
------INS SimpleType@@DeploymentUnit @TO@ SingleVariableDeclaration@@final DeploymentUnit unit @AT@ 11502 @LENGTH@ 14
------INS SimpleName@@unit @TO@ SingleVariableDeclaration@@final DeploymentUnit unit @AT@ 11517 @LENGTH@ 4
---INS VariableDeclarationStatement@@WSRefRegistry refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES); @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11533 @LENGTH@ 79
------INS SimpleType@@WSRefRegistry @TO@ VariableDeclarationStatement@@WSRefRegistry refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES); @AT@ 11533 @LENGTH@ 13
------INS VariableDeclarationFragment@@refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @TO@ VariableDeclarationStatement@@WSRefRegistry refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES); @AT@ 11547 @LENGTH@ 64
---------INS SimpleName@@refRegistry @TO@ VariableDeclarationFragment@@refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @AT@ 11547 @LENGTH@ 11
---------INS MethodInvocation@@unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @TO@ VariableDeclarationFragment@@refRegistry=unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @AT@ 11561 @LENGTH@ 50
------------INS SimpleName@@Name:unit @TO@ MethodInvocation@@unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @AT@ 11561 @LENGTH@ 4
------------INS SimpleName@@MethodName:getAttachment:[WSAttachmentKeys.WS_REFERENCES] @TO@ MethodInvocation@@unit.getAttachment(WSAttachmentKeys.WS_REFERENCES) @AT@ 11566 @LENGTH@ 45
---------------INS QualifiedName@@WSAttachmentKeys.WS_REFERENCES @TO@ SimpleName@@MethodName:getAttachment:[WSAttachmentKeys.WS_REFERENCES] @AT@ 11580 @LENGTH@ 30
------------------INS SimpleName@@WSAttachmentKeys @TO@ QualifiedName@@WSAttachmentKeys.WS_REFERENCES @AT@ 11580 @LENGTH@ 16
------------------INS SimpleName@@WS_REFERENCES @TO@ QualifiedName@@WSAttachmentKeys.WS_REFERENCES @AT@ 11597 @LENGTH@ 13
---INS IfStatement@@if (refRegistry == null) {  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11621 @LENGTH@ 166
------INS InfixExpression@@refRegistry == null @TO@ IfStatement@@if (refRegistry == null) {  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @AT@ 11625 @LENGTH@ 19
---------INS SimpleName@@refRegistry @TO@ InfixExpression@@refRegistry == null @AT@ 11625 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@refRegistry == null @AT@ 11636 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@refRegistry == null @AT@ 11640 @LENGTH@ 4
------INS Block@@ThenBody:{  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @TO@ IfStatement@@if (refRegistry == null) {  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @AT@ 11646 @LENGTH@ 141
---------INS ExpressionStatement@@Assignment:refRegistry=refRegistry.newInstance() @TO@ Block@@ThenBody:{  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @AT@ 11660 @LENGTH@ 40
------------INS Assignment@@refRegistry=refRegistry.newInstance() @TO@ ExpressionStatement@@Assignment:refRegistry=refRegistry.newInstance() @AT@ 11660 @LENGTH@ 39
---------------INS SimpleName@@refRegistry @TO@ Assignment@@refRegistry=refRegistry.newInstance() @AT@ 11660 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@refRegistry=refRegistry.newInstance() @AT@ 11671 @LENGTH@ 1
---------------INS MethodInvocation@@refRegistry.newInstance() @TO@ Assignment@@refRegistry=refRegistry.newInstance() @AT@ 11674 @LENGTH@ 25
------------------INS SimpleName@@Name:refRegistry @TO@ MethodInvocation@@refRegistry.newInstance() @AT@ 11674 @LENGTH@ 11
------------------INS SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@refRegistry.newInstance() @AT@ 11686 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry) @TO@ Block@@ThenBody:{  refRegistry=refRegistry.newInstance();  unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry);} @AT@ 11713 @LENGTH@ 64
------------INS MethodInvocation@@unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry) @TO@ ExpressionStatement@@MethodInvocation:unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry) @AT@ 11713 @LENGTH@ 63
---------------INS SimpleName@@Name:unit @TO@ MethodInvocation@@unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry) @AT@ 11713 @LENGTH@ 4
---------------INS SimpleName@@MethodName:putAttachment:[WSAttachmentKeys.WS_REFERENCES, refRegistry] @TO@ MethodInvocation@@unit.putAttachment(WSAttachmentKeys.WS_REFERENCES,refRegistry) @AT@ 11718 @LENGTH@ 58
------------------INS QualifiedName@@WSAttachmentKeys.WS_REFERENCES @TO@ SimpleName@@MethodName:putAttachment:[WSAttachmentKeys.WS_REFERENCES, refRegistry] @AT@ 11732 @LENGTH@ 30
---------------------INS SimpleName@@WSAttachmentKeys @TO@ QualifiedName@@WSAttachmentKeys.WS_REFERENCES @AT@ 11732 @LENGTH@ 16
---------------------INS SimpleName@@WS_REFERENCES @TO@ QualifiedName@@WSAttachmentKeys.WS_REFERENCES @AT@ 11749 @LENGTH@ 13
------------------INS SimpleName@@refRegistry @TO@ SimpleName@@MethodName:putAttachment:[WSAttachmentKeys.WS_REFERENCES, refRegistry] @AT@ 11764 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:refRegistry @TO@ MethodDeclaration@@public, static, WSRefRegistry, MethodName:getWSRefRegistry, final DeploymentUnit unit,  @AT@ 11796 @LENGTH@ 19
------INS SimpleName@@refRegistry @TO@ ReturnStatement@@SimpleName:refRegistry @AT@ 11803 @LENGTH@ 11


UPD TryStatement@@try {  try {    consumer.start();    start.countDown();  } catch (  FatalListenerStartupException ex) {    throw ex;  }catch (  Throwable t) {    start.countDown();    handleStartupFailure(t);    throw t;  }  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory());  }  boolean continuable=false;  while (isActive() || continuable) {    try {      continuable=receiveAndExecute(consumer) && !isChannelTransacted();    } catch (    ListenerExecutionFailedException ex) {    }  }} catch (InterruptedException e) {  logger.debug("Consumer thread interrupted, processing stopped.");  Thread.currentThread().interrupt();  aborted=true;}catch (FatalListenerStartupException ex) {  logger.error("Consumer received fatal exception on startup",ex);  this.startupException=ex;  aborted=true;}catch (FatalListenerExecutionException ex) {  logger.error("Consumer received fatal exception during processing",ex);  aborted=true;}catch (Throwable t) {  if (logger.isDebugEnabled() || !(t instanceof AmqpConnectException)) {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it",t);  } else {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it. " + "Exception summary: " + t);  }} finally {  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.unRegisterConsumerChannel();  }} @TO@ try {  try {    consumer.start();    start.countDown();  } catch (  FatalListenerStartupException ex) {    throw ex;  }catch (  Throwable t) {    start.countDown();    handleStartupFailure(t);    throw t;  }  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory());  }  boolean continuable=false;  while (isActive() || continuable) {    try {      continuable=receiveAndExecute(consumer) && !isChannelTransacted();    } catch (    ListenerExecutionFailedException ex) {    }  }} catch (InterruptedException e) {  logger.debug("Consumer thread interrupted, processing stopped.");  Thread.currentThread().interrupt();  aborted=true;}catch (FatalListenerStartupException ex) {  logger.error("Consumer received fatal exception on startup",ex);  this.startupException=ex;  aborted=true;}catch (FatalListenerExecutionException ex) {  logger.error("Consumer received fatal exception during processing",ex);  aborted=true;}catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;}catch (Throwable t) {  if (logger.isDebugEnabled() || !(t instanceof AmqpConnectException)) {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it",t);  } else {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it. " + "Exception summary: " + t);  }} finally {  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.unRegisterConsumerChannel();  }} @AT@ 18530 @LENGTH@ 2136
---INS CatchClause@@catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;} @TO@ TryStatement@@try {  try {    consumer.start();    start.countDown();  } catch (  FatalListenerStartupException ex) {    throw ex;  }catch (  Throwable t) {    start.countDown();    handleStartupFailure(t);    throw t;  }  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.registerConsumerChannel(consumer.getChannel(),getConnectionFactory());  }  boolean continuable=false;  while (isActive() || continuable) {    try {      continuable=receiveAndExecute(consumer) && !isChannelTransacted();    } catch (    ListenerExecutionFailedException ex) {    }  }} catch (InterruptedException e) {  logger.debug("Consumer thread interrupted, processing stopped.");  Thread.currentThread().interrupt();  aborted=true;}catch (FatalListenerStartupException ex) {  logger.error("Consumer received fatal exception on startup",ex);  this.startupException=ex;  aborted=true;}catch (FatalListenerExecutionException ex) {  logger.error("Consumer received fatal exception during processing",ex);  aborted=true;}catch (Throwable t) {  if (logger.isDebugEnabled() || !(t instanceof AmqpConnectException)) {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it",t);  } else {    logger.warn("Consumer raised exception, processing can restart if the connection factory supports it. " + "Exception summary: " + t);  }} finally {  if (SimpleMessageListenerContainer.this.transactionManager != null) {    ConsumerChannelRegistry.unRegisterConsumerChannel();  }} @AT@ 20117 @LENGTH@ 103
------INS SingleVariableDeclaration@@Error e @TO@ CatchClause@@catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;} @AT@ 20124 @LENGTH@ 7
---------INS SimpleType@@Error @TO@ SingleVariableDeclaration@@Error e @AT@ 20124 @LENGTH@ 5
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Error e @AT@ 20130 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:logger.error("Consumer thread error, thread abort.",e) @TO@ CatchClause@@catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;} @AT@ 20139 @LENGTH@ 56
---------INS MethodInvocation@@logger.error("Consumer thread error, thread abort.",e) @TO@ ExpressionStatement@@MethodInvocation:logger.error("Consumer thread error, thread abort.",e) @AT@ 20139 @LENGTH@ 55
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.error("Consumer thread error, thread abort.",e) @AT@ 20139 @LENGTH@ 6
------------INS SimpleName@@MethodName:error:["Consumer thread error, thread abort.", e] @TO@ MethodInvocation@@logger.error("Consumer thread error, thread abort.",e) @AT@ 20146 @LENGTH@ 48
---------------INS StringLiteral@@"Consumer thread error, thread abort." @TO@ SimpleName@@MethodName:error:["Consumer thread error, thread abort.", e] @AT@ 20152 @LENGTH@ 38
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:error:["Consumer thread error, thread abort.", e] @AT@ 20192 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:aborted=true @TO@ CatchClause@@catch (Error e) {  logger.error("Consumer thread error, thread abort.",e);  aborted=true;} @AT@ 20200 @LENGTH@ 15
---------INS Assignment@@aborted=true @TO@ ExpressionStatement@@Assignment:aborted=true @AT@ 20200 @LENGTH@ 14
------------INS SimpleName@@aborted @TO@ Assignment@@aborted=true @AT@ 20200 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@aborted=true @AT@ 20207 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ Assignment@@aborted=true @AT@ 20210 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:opRules.put(new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @TO@ MethodDeclaration@@protected, void, MethodName:generateTaskTree, List<Task<? extends Serializable>> rootTasks, ParseContext pCtx, List<Task<MoveWork>> mvTask, Set<ReadEntity> inputs, Set<WriteEntity> outputs, SemanticException,  @AT@ 6690 @LENGTH@ 733
---INS MethodInvocation@@opRules.put(new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:opRules.put(new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 6690 @LENGTH@ 732
------INS SimpleName@@Name:opRules @TO@ MethodInvocation@@opRules.put(new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 6690 @LENGTH@ 7
------INS SimpleName@@MethodName:put:[new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @TO@ MethodInvocation@@opRules.put(new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 6698 @LENGTH@ 724
---------INS ClassInstanceCreation@@RuleRegExp["Setup table scan", TableScanOperator.getOperatorName() + "%"] @TO@ SimpleName@@MethodName:put:[new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @AT@ 6702 @LENGTH@ 85
------------INS New@@new @TO@ ClassInstanceCreation@@RuleRegExp["Setup table scan", TableScanOperator.getOperatorName() + "%"] @AT@ 6702 @LENGTH@ 3
------------INS SimpleType@@RuleRegExp @TO@ ClassInstanceCreation@@RuleRegExp["Setup table scan", TableScanOperator.getOperatorName() + "%"] @AT@ 6706 @LENGTH@ 10
------------INS StringLiteral@@"Setup table scan" @TO@ ClassInstanceCreation@@RuleRegExp["Setup table scan", TableScanOperator.getOperatorName() + "%"] @AT@ 6717 @LENGTH@ 18
------------INS InfixExpression@@TableScanOperator.getOperatorName() + "%" @TO@ ClassInstanceCreation@@RuleRegExp["Setup table scan", TableScanOperator.getOperatorName() + "%"] @AT@ 6745 @LENGTH@ 41
---------------INS MethodInvocation@@TableScanOperator.getOperatorName() @TO@ InfixExpression@@TableScanOperator.getOperatorName() + "%" @AT@ 6745 @LENGTH@ 35
------------------INS SimpleName@@Name:TableScanOperator @TO@ MethodInvocation@@TableScanOperator.getOperatorName() @AT@ 6745 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getOperatorName:[] @TO@ MethodInvocation@@TableScanOperator.getOperatorName() @AT@ 6763 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@TableScanOperator.getOperatorName() + "%" @AT@ 6780 @LENGTH@ 1
---------------INS StringLiteral@@"%" @TO@ InfixExpression@@TableScanOperator.getOperatorName() + "%" @AT@ 6783 @LENGTH@ 3
---------INS ClassInstanceCreation@@NodeProcessor[] @TO@ SimpleName@@MethodName:put:[new RuleRegExp("Setup table scan",TableScanOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    TableScanOperator tableScan=(TableScanOperator)n;
    LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild());
    context.lastRootOfMultiChildOperator.push(tableScan);
    context.currentBranchCount.push(tableScan.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @AT@ 6789 @LENGTH@ 632
------------INS New@@new @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 6789 @LENGTH@ 3
------------INS SimpleType@@NodeProcessor @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 6793 @LENGTH@ 13
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 6813 @LENGTH@ 608
---------------INS MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 6837 @LENGTH@ 578
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6837 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6844 @LENGTH@ 6
------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6851 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Node n @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6859 @LENGTH@ 6
---------------------INS SimpleType@@Node @TO@ SingleVariableDeclaration@@Node n @AT@ 6859 @LENGTH@ 4
---------------------INS SimpleName@@n @TO@ SingleVariableDeclaration@@Node n @AT@ 6864 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@Stack<Node> s @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6867 @LENGTH@ 13
---------------------INS ParameterizedType@@Stack<Node> @TO@ SingleVariableDeclaration@@Stack<Node> s @AT@ 6867 @LENGTH@ 11
------------------------INS SimpleType@@Stack @TO@ ParameterizedType@@Stack<Node> @AT@ 6867 @LENGTH@ 5
------------------------INS SimpleType@@Node @TO@ ParameterizedType@@Stack<Node> @AT@ 6873 @LENGTH@ 4
---------------------INS SimpleName@@s @TO@ SingleVariableDeclaration@@Stack<Node> s @AT@ 6879 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@NodeProcessorCtx procCtx @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6892 @LENGTH@ 24
---------------------INS SimpleType@@NodeProcessorCtx @TO@ SingleVariableDeclaration@@NodeProcessorCtx procCtx @AT@ 6892 @LENGTH@ 16
---------------------INS SimpleName@@procCtx @TO@ SingleVariableDeclaration@@NodeProcessorCtx procCtx @AT@ 6909 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Object... os @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6918 @LENGTH@ 12
---------------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object... os @AT@ 6918 @LENGTH@ 6
---------------------INS SimpleName@@os @TO@ SingleVariableDeclaration@@Object... os @AT@ 6928 @LENGTH@ 2
------------------INS SimpleType@@SemanticException @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6939 @LENGTH@ 17
------------------INS VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 6967 @LENGTH@ 56
---------------------INS SimpleType@@GenTezProcContext @TO@ VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @AT@ 6967 @LENGTH@ 17
---------------------INS VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @TO@ VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @AT@ 6985 @LENGTH@ 37
------------------------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @AT@ 6985 @LENGTH@ 7
------------------------INS CastExpression@@(GenTezProcContext)procCtx @TO@ VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @AT@ 6995 @LENGTH@ 27
---------------------------INS SimpleType@@GenTezProcContext @TO@ CastExpression@@(GenTezProcContext)procCtx @AT@ 6996 @LENGTH@ 17
---------------------------INS SimpleName@@procCtx @TO@ CastExpression@@(GenTezProcContext)procCtx @AT@ 7015 @LENGTH@ 7
------------------INS VariableDeclarationStatement@@TableScanOperator tableScan=(TableScanOperator)n; @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7032 @LENGTH@ 52
---------------------INS SimpleType@@TableScanOperator @TO@ VariableDeclarationStatement@@TableScanOperator tableScan=(TableScanOperator)n; @AT@ 7032 @LENGTH@ 17
---------------------INS VariableDeclarationFragment@@tableScan=(TableScanOperator)n @TO@ VariableDeclarationStatement@@TableScanOperator tableScan=(TableScanOperator)n; @AT@ 7050 @LENGTH@ 33
------------------------INS SimpleName@@tableScan @TO@ VariableDeclarationFragment@@tableScan=(TableScanOperator)n @AT@ 7050 @LENGTH@ 9
------------------------INS CastExpression@@(TableScanOperator)n @TO@ VariableDeclarationFragment@@tableScan=(TableScanOperator)n @AT@ 7062 @LENGTH@ 21
---------------------------INS SimpleType@@TableScanOperator @TO@ CastExpression@@(TableScanOperator)n @AT@ 7063 @LENGTH@ 17
---------------------------INS SimpleName@@n @TO@ CastExpression@@(TableScanOperator)n @AT@ 7082 @LENGTH@ 1
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7093 @LENGTH@ 107
---------------------INS MethodInvocation@@LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()) @AT@ 7093 @LENGTH@ 106
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()) @AT@ 7093 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()] @TO@ MethodInvocation@@LOG.debug("TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()) @AT@ 7097 @LENGTH@ 102
---------------------------INS InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @TO@ SimpleName@@MethodName:debug:["TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild()] @AT@ 7103 @LENGTH@ 95
------------------------------INS StringLiteral@@"TableScan operator (" @TO@ InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @AT@ 7103 @LENGTH@ 22
------------------------------INS Operator@@+ @TO@ InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @AT@ 7125 @LENGTH@ 1
------------------------------INS SimpleName@@tableScan @TO@ InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @AT@ 7126 @LENGTH@ 9
------------------------------INS StringLiteral@@"). Number of branches: " @TO@ InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @AT@ 7149 @LENGTH@ 25
------------------------------INS MethodInvocation@@tableScan.getNumChild() @TO@ InfixExpression@@"TableScan operator (" + tableScan + "). Number of branches: "+ tableScan.getNumChild() @AT@ 7175 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:tableScan @TO@ MethodInvocation@@tableScan.getNumChild() @AT@ 7175 @LENGTH@ 9
---------------------------------INS SimpleName@@MethodName:getNumChild:[] @TO@ MethodInvocation@@tableScan.getNumChild() @AT@ 7185 @LENGTH@ 13
------------------INS ExpressionStatement@@MethodInvocation:context.lastRootOfMultiChildOperator.push(tableScan) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7209 @LENGTH@ 53
---------------------INS MethodInvocation@@context.lastRootOfMultiChildOperator.push(tableScan) @TO@ ExpressionStatement@@MethodInvocation:context.lastRootOfMultiChildOperator.push(tableScan) @AT@ 7209 @LENGTH@ 52
------------------------INS QualifiedName@@Name:context.lastRootOfMultiChildOperator @TO@ MethodInvocation@@context.lastRootOfMultiChildOperator.push(tableScan) @AT@ 7209 @LENGTH@ 36
------------------------INS SimpleName@@MethodName:push:[tableScan] @TO@ MethodInvocation@@context.lastRootOfMultiChildOperator.push(tableScan) @AT@ 7246 @LENGTH@ 15
---------------------------INS SimpleName@@tableScan @TO@ SimpleName@@MethodName:push:[tableScan] @AT@ 7251 @LENGTH@ 9
------------------INS ExpressionStatement@@MethodInvocation:context.currentBranchCount.push(tableScan.getNumChild()) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7271 @LENGTH@ 57
---------------------INS MethodInvocation@@context.currentBranchCount.push(tableScan.getNumChild()) @TO@ ExpressionStatement@@MethodInvocation:context.currentBranchCount.push(tableScan.getNumChild()) @AT@ 7271 @LENGTH@ 56
------------------------INS QualifiedName@@Name:context.currentBranchCount @TO@ MethodInvocation@@context.currentBranchCount.push(tableScan.getNumChild()) @AT@ 7271 @LENGTH@ 26
------------------------INS SimpleName@@MethodName:push:[tableScan.getNumChild()] @TO@ MethodInvocation@@context.currentBranchCount.push(tableScan.getNumChild()) @AT@ 7298 @LENGTH@ 29
---------------------------INS MethodInvocation@@tableScan.getNumChild() @TO@ SimpleName@@MethodName:push:[tableScan.getNumChild()] @AT@ 7303 @LENGTH@ 23
------------------------------INS SimpleName@@Name:tableScan @TO@ MethodInvocation@@tableScan.getNumChild() @AT@ 7303 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getNumChild:[] @TO@ MethodInvocation@@tableScan.getNumChild() @AT@ 7313 @LENGTH@ 13
------------------INS ExpressionStatement@@MethodInvocation:context.lastWorkForMultiChildOperator.push(null) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7337 @LENGTH@ 49
---------------------INS MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @TO@ ExpressionStatement@@MethodInvocation:context.lastWorkForMultiChildOperator.push(null) @AT@ 7337 @LENGTH@ 48
------------------------INS QualifiedName@@Name:context.lastWorkForMultiChildOperator @TO@ MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @AT@ 7337 @LENGTH@ 37
------------------------INS SimpleName@@MethodName:push:[null] @TO@ MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @AT@ 7375 @LENGTH@ 10
---------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:push:[null] @AT@ 7380 @LENGTH@ 4
------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7395 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 7402 @LENGTH@ 4


UPD MethodDeclaration@@private, static, void, MethodName:parseAuthorization_1_3, final XMLExtendedStreamReader reader, final Namespace expectedNs, final ModelNode realmAdd, final List<ModelNode> list, XMLStreamException,  @TO@ private, static, void, MethodName:parseAuthorization_1_3, final XMLExtendedStreamReader reader, final Namespace expectedNs, final ModelNode realmAddress, final List<ModelNode> list, XMLStreamException,  @AT@ 78176 @LENGTH@ 1326
---UPD SingleVariableDeclaration@@final ModelNode realmAdd @TO@ final ModelNode realmAddress @AT@ 78297 @LENGTH@ 24
------UPD SimpleName@@realmAdd @TO@ realmAddress @AT@ 78313 @LENGTH@ 8
---DEL VariableDeclarationStatement@@ModelNode realmAddress=realmAdd.get(OP_ADDR); @AT@ 78387 @LENGTH@ 47
------DEL SimpleType@@ModelNode @AT@ 78387 @LENGTH@ 9
------DEL VariableDeclarationFragment@@realmAddress=realmAdd.get(OP_ADDR) @AT@ 78397 @LENGTH@ 36
---------DEL SimpleName@@realmAddress @AT@ 78397 @LENGTH@ 12
---------DEL MethodInvocation@@realmAdd.get(OP_ADDR) @AT@ 78412 @LENGTH@ 21
------------DEL SimpleName@@Name:realmAdd @AT@ 78412 @LENGTH@ 8
------------DEL SimpleName@@MethodName:get:[OP_ADDR] @AT@ 78421 @LENGTH@ 12
---------------DEL SimpleName@@OP_ADDR @AT@ 78425 @LENGTH@ 7


INS MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @TO@ TypeDeclaration@@[public]ProfileImpl, [Profile] @AT@ 7845 @LENGTH@ 138
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 7845 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 7852 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 7852 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 7857 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 7865 @LENGTH@ 25
---INS ReturnStatement@@MethodInvocation:getService().getDataStore().getConfigurationFileNames(version,id) @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 7903 @LENGTH@ 74
------INS MethodInvocation@@getService().getDataStore().getConfigurationFileNames(version,id) @TO@ ReturnStatement@@MethodInvocation:getService().getDataStore().getConfigurationFileNames(version,id) @AT@ 7910 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:getDataStore:[] @TO@ MethodInvocation@@getService().getDataStore().getConfigurationFileNames(version,id) @AT@ 7910 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:getService:[] @TO@ MethodInvocation@@getService().getDataStore().getConfigurationFileNames(version,id) @AT@ 7910 @LENGTH@ 12
---------INS SimpleName@@MethodName:getConfigurationFileNames:[version, id] @TO@ MethodInvocation@@getService().getDataStore().getConfigurationFileNames(version,id) @AT@ 7938 @LENGTH@ 38
------------INS SimpleName@@version @TO@ SimpleName@@MethodName:getConfigurationFileNames:[version, id] @AT@ 7964 @LENGTH@ 7
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:getConfigurationFileNames:[version, id] @AT@ 7973 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testMove,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 16300 @LENGTH@ 609
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16300 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16307 @LENGTH@ 4
---INS SimpleName@@MethodName:testMove @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16312 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16327 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 16327 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 16327 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 16338 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 16342 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 16349 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16359 @LENGTH@ 38
------INS MethodInvocation@@actual.add(connection.move("foo",1)) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @AT@ 16359 @LENGTH@ 37
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 16359 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.move("foo",1)] @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 16366 @LENGTH@ 30
------------INS MethodInvocation@@connection.move("foo",1) @TO@ SimpleName@@MethodName:add:[connection.move("foo",1)] @AT@ 16370 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 16370 @LENGTH@ 10
---------------INS SimpleName@@MethodName:move:["foo", 1] @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 16381 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 16386 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 16393 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16400 @LENGTH@ 59
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 16400 @LENGTH@ 58
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 16400 @LENGTH@ 58
------------INS MethodInvocation@@Arrays.asList(new Object[]{true}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 16414 @LENGTH@ 35
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 16414 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{true}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 16421 @LENGTH@ 28
------------------INS ArrayCreation@@new Object[]{true} @TO@ SimpleName@@MethodName:asList:[new Object[]{true}] @AT@ 16428 @LENGTH@ 20
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{true} @AT@ 16432 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 16432 @LENGTH@ 6
---------------------INS ArrayInitializer@@{true} @TO@ ArrayCreation@@new Object[]{true} @AT@ 16441 @LENGTH@ 7
------------------------INS BooleanLiteral@@true @TO@ ArrayInitializer@@{true} @AT@ 16443 @LENGTH@ 4
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 16451 @LENGTH@ 6
---INS VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16546 @LENGTH@ 67
------INS SimpleType@@LettuceConnectionFactory @TO@ VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @AT@ 16546 @LENGTH@ 24
------INS VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @TO@ VariableDeclarationStatement@@LettuceConnectionFactory factory2=new LettuceConnectionFactory(); @AT@ 16571 @LENGTH@ 41
---------INS SimpleName@@factory2 @TO@ VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @AT@ 16571 @LENGTH@ 8
---------INS ClassInstanceCreation@@LettuceConnectionFactory[] @TO@ VariableDeclarationFragment@@factory2=new LettuceConnectionFactory() @AT@ 16582 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@LettuceConnectionFactory[] @AT@ 16582 @LENGTH@ 3
------------INS SimpleType@@LettuceConnectionFactory @TO@ ClassInstanceCreation@@LettuceConnectionFactory[] @AT@ 16586 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16616 @LENGTH@ 24
------INS MethodInvocation@@factory2.setDatabase(1) @TO@ ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @AT@ 16616 @LENGTH@ 23
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 16616 @LENGTH@ 8
---------INS SimpleName@@MethodName:setDatabase:[1] @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 16625 @LENGTH@ 14
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setDatabase:[1] @AT@ 16637 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16643 @LENGTH@ 30
------INS MethodInvocation@@factory2.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @AT@ 16643 @LENGTH@ 29
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 16643 @LENGTH@ 8
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 16652 @LENGTH@ 20
---INS VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16676 @LENGTH@ 89
------INS SimpleType@@StringRedisConnection @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 16676 @LENGTH@ 21
------INS VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 16698 @LENGTH@ 66
---------INS SimpleName@@conn2 @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 16698 @LENGTH@ 5
---------INS ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 16706 @LENGTH@ 58
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 16706 @LENGTH@ 3
------------INS SimpleType@@DefaultStringRedisConnection @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 16710 @LENGTH@ 28
------------INS MethodInvocation@@factory2.getConnection() @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 16739 @LENGTH@ 24
---------------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.getConnection() @AT@ 16739 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory2.getConnection() @AT@ 16748 @LENGTH@ 15
---INS TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 16768 @LENGTH@ 138
------INS ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 16777 @LENGTH@ 37
---------INS MethodInvocation@@assertEquals("bar",conn2.get("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @AT@ 16777 @LENGTH@ 36
------------INS SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @TO@ MethodInvocation@@assertEquals("bar",conn2.get("foo")) @AT@ 16777 @LENGTH@ 36
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 16790 @LENGTH@ 5
---------------INS MethodInvocation@@conn2.get("foo") @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 16796 @LENGTH@ 16
------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.get("foo") @AT@ 16796 @LENGTH@ 5
------------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@conn2.get("foo") @AT@ 16802 @LENGTH@ 10
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 16806 @LENGTH@ 5
------INS Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 16827 @LENGTH@ 79
---------INS IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 16832 @LENGTH@ 52
------------INS MethodInvocation@@conn2.exists("foo") @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 16835 @LENGTH@ 19
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 16835 @LENGTH@ 5
---------------INS SimpleName@@MethodName:exists:["foo"] @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 16841 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:exists:["foo"] @AT@ 16848 @LENGTH@ 5
------------INS Block@@ThenBody:{  conn2.del("foo");} @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 16856 @LENGTH@ 28
---------------INS ExpressionStatement@@MethodInvocation:conn2.del("foo") @TO@ Block@@ThenBody:{  conn2.del("foo");} @AT@ 16862 @LENGTH@ 17
------------------INS MethodInvocation@@conn2.del("foo") @TO@ ExpressionStatement@@MethodInvocation:conn2.del("foo") @AT@ 16862 @LENGTH@ 16
---------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.del("foo") @AT@ 16862 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:del:["foo"] @TO@ MethodInvocation@@conn2.del("foo") @AT@ 16868 @LENGTH@ 10
------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:del:["foo"] @AT@ 16872 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:conn2.close() @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 16888 @LENGTH@ 14
------------INS MethodInvocation@@conn2.close() @TO@ ExpressionStatement@@MethodInvocation:conn2.close() @AT@ 16888 @LENGTH@ 13
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.close() @AT@ 16888 @LENGTH@ 5
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@conn2.close() @AT@ 16894 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:System.out.println(value1 + "*" + value2+ "*"+ value3) @TO@ MethodDeclaration@@public, void, MethodName:testRangeByScoreOffsetCount,  @AT@ 3250 @LENGTH@ 57
---INS MethodInvocation@@System.out.println(value1 + "*" + value2+ "*"+ value3) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(value1 + "*" + value2+ "*"+ value3) @AT@ 3250 @LENGTH@ 56
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(value1 + "*" + value2+ "*"+ value3) @AT@ 3250 @LENGTH@ 10
------INS SimpleName@@MethodName:println:[value1 + "*" + value2+ "*"+ value3] @TO@ MethodInvocation@@System.out.println(value1 + "*" + value2+ "*"+ value3) @AT@ 3261 @LENGTH@ 45
---------INS InfixExpression@@value1 + "*" + value2+ "*"+ value3 @TO@ SimpleName@@MethodName:println:[value1 + "*" + value2+ "*"+ value3] @AT@ 3269 @LENGTH@ 36
------------INS SimpleName@@value1 @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3269 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3275 @LENGTH@ 1
------------INS StringLiteral@@"*" @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3278 @LENGTH@ 3
------------INS SimpleName@@value2 @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3284 @LENGTH@ 6
------------INS StringLiteral@@"*" @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3293 @LENGTH@ 3
------------INS SimpleName@@value3 @TO@ InfixExpression@@value1 + "*" + value2+ "*"+ value3 @AT@ 3299 @LENGTH@ 6


UPD TypeDeclaration@@[public]ExecutorServiceManager, [ShutdownableService] @TO@ [public]ExecutorServiceManager, [ShutdownableService, StaticService] @AT@ 2679 @LENGTH@ 12274
---INS SimpleType@@StaticService @TO@ TypeDeclaration@@[public]ExecutorServiceManager, [ShutdownableService] @AT@ 2787 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals("Cannot find resource in classpath for URI: notfound.txt",e.getMessage()) @TO@ MethodInvocation:assertEquals("Cannot find resource: notfound.txt in classpath for URI: notfound.txt",e.getMessage()) @AT@ 3559 @LENGTH@ 88
---UPD MethodInvocation@@assertEquals("Cannot find resource in classpath for URI: notfound.txt",e.getMessage()) @TO@ assertEquals("Cannot find resource: notfound.txt in classpath for URI: notfound.txt",e.getMessage()) @AT@ 3559 @LENGTH@ 87
------UPD SimpleName@@MethodName:assertEquals:["Cannot find resource in classpath for URI: notfound.txt", e.getMessage()] @TO@ MethodName:assertEquals:["Cannot find resource: notfound.txt in classpath for URI: notfound.txt", e.getMessage()] @AT@ 3559 @LENGTH@ 87
---------UPD StringLiteral@@"Cannot find resource in classpath for URI: notfound.txt" @TO@ "Cannot find resource: notfound.txt in classpath for URI: notfound.txt" @AT@ 3572 @LENGTH@ 57


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[public]FallbackTypeConverter, ServiceSupport[TypeConverter, TypeConverterAware] @AT@ 2808 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2808 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2815 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2823 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2845 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2852 @LENGTH@ 5


UPD MethodDeclaration@@private, Option, MethodName:envAsSystemProperty, String name, String defaultValue,  @TO@ public, Option, MethodName:envAsSystemProperty, String name, String defaultValue,  @AT@ 14608 @LENGTH@ 252
---UPD Modifier@@private @TO@ public @AT@ 14608 @LENGTH@ 7


UPD ReturnStatement@@InfixExpression:timerService.isStarted() && !isCanceled() && !isExpired()&& timerService.isScheduled(getId()) @TO@ InfixExpression:timerService.isStarted() && !isCanceled() && !isExpired()&& (timerService.isScheduled(getId()) || timerState == TimerState.CREATED) @AT@ 12164 @LENGTH@ 102
---UPD InfixExpression@@timerService.isStarted() && !isCanceled() && !isExpired()&& timerService.isScheduled(getId()) @TO@ timerService.isStarted() && !isCanceled() && !isExpired()&& (timerService.isScheduled(getId()) || timerState == TimerState.CREATED) @AT@ 12171 @LENGTH@ 94
------INS ParenthesizedExpression@@(timerService.isScheduled(getId()) || timerState == TimerState.CREATED) @TO@ InfixExpression@@timerService.isStarted() && !isCanceled() && !isExpired()&& timerService.isScheduled(getId()) @AT@ 12232 @LENGTH@ 71
---------INS InfixExpression@@timerService.isScheduled(getId()) || timerState == TimerState.CREATED @TO@ ParenthesizedExpression@@(timerService.isScheduled(getId()) || timerState == TimerState.CREATED) @AT@ 12233 @LENGTH@ 69
------------MOV MethodInvocation@@timerService.isScheduled(getId()) @TO@ InfixExpression@@timerService.isScheduled(getId()) || timerState == TimerState.CREATED @AT@ 12232 @LENGTH@ 33
------------INS Operator@@|| @TO@ InfixExpression@@timerService.isScheduled(getId()) || timerState == TimerState.CREATED @AT@ 12266 @LENGTH@ 2
------------INS InfixExpression@@timerState == TimerState.CREATED @TO@ InfixExpression@@timerService.isScheduled(getId()) || timerState == TimerState.CREATED @AT@ 12270 @LENGTH@ 32
---------------INS SimpleName@@timerState @TO@ InfixExpression@@timerState == TimerState.CREATED @AT@ 12270 @LENGTH@ 10
---------------INS Operator@@== @TO@ InfixExpression@@timerState == TimerState.CREATED @AT@ 12280 @LENGTH@ 2
---------------INS QualifiedName@@TimerState.CREATED @TO@ InfixExpression@@timerState == TimerState.CREATED @AT@ 12284 @LENGTH@ 18
------------------INS SimpleName@@TimerState @TO@ QualifiedName@@TimerState.CREATED @AT@ 12284 @LENGTH@ 10
------------------INS SimpleName@@CREATED @TO@ QualifiedName@@TimerState.CREATED @AT@ 12295 @LENGTH@ 7


MOV VariableDeclarationStatement@@List<Long> results=new ArrayList<Long>(findRunningJobExecutions.size()); @TO@ MethodDeclaration@@public, List<Long>, MethodName:getRunningExecutions, String name, NoSuchJobException, JobSecurityException,  @AT@ 13767 @LENGTH@ 74


UPD ExpressionStatement@@MethodInvocation:waitForProvisionSuccess(container) @TO@ MethodInvocation:Provision.containersStatus(Arrays.asList(container),"success",PROVISION_TIMEOUT) @AT@ 2257 @LENGTH@ 35
---UPD MethodInvocation@@waitForProvisionSuccess(container) @TO@ Provision.containersStatus(Arrays.asList(container),"success",PROVISION_TIMEOUT) @AT@ 2257 @LENGTH@ 34
------UPD SimpleName@@MethodName:waitForProvisionSuccess:[container] @TO@ MethodName:asList:[container] @AT@ 2257 @LENGTH@ 34
------INS SimpleName@@Name:Provision @TO@ MethodInvocation@@waitForProvisionSuccess(container) @AT@ 2345 @LENGTH@ 9
------INS SimpleName@@MethodName:containersStatus:[Arrays.asList(container), "success", PROVISION_TIMEOUT] @TO@ MethodInvocation@@waitForProvisionSuccess(container) @AT@ 2355 @LENGTH@ 72
---------INS MethodInvocation@@Arrays.asList(container) @TO@ SimpleName@@MethodName:containersStatus:[Arrays.asList(container), "success", PROVISION_TIMEOUT] @AT@ 2372 @LENGTH@ 24
------------MOV SimpleName@@MethodName:waitForProvisionSuccess:[container] @TO@ MethodInvocation@@Arrays.asList(container) @AT@ 2257 @LENGTH@ 34
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(container) @AT@ 2372 @LENGTH@ 6
---------INS StringLiteral@@"success" @TO@ SimpleName@@MethodName:containersStatus:[Arrays.asList(container), "success", PROVISION_TIMEOUT] @AT@ 2398 @LENGTH@ 9
---------INS SimpleName@@PROVISION_TIMEOUT @TO@ SimpleName@@MethodName:containersStatus:[Arrays.asList(container), "success", PROVISION_TIMEOUT] @AT@ 2409 @LENGTH@ 17


DEL MethodDeclaration@@void, MethodName:setCredentialsProvider, CredentialsProvider cp,  @AT@ 1188 @LENGTH@ 47
---DEL PrimitiveType@@void @AT@ 1183 @LENGTH@ 4
---DEL SimpleName@@MethodName:setCredentialsProvider @AT@ 1188 @LENGTH@ 22
---DEL SingleVariableDeclaration@@CredentialsProvider cp @AT@ 1211 @LENGTH@ 22
------DEL SimpleType@@CredentialsProvider @AT@ 1211 @LENGTH@ 19
------DEL SimpleName@@cp @AT@ 1231 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testMove,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 18477 @LENGTH@ 594
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18477 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18484 @LENGTH@ 4
---INS SimpleName@@MethodName:testMove @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18489 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18504 @LENGTH@ 29
------INS MethodInvocation@@connection.set("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:connection.set("foo","bar") @AT@ 18504 @LENGTH@ 28
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 18504 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["foo", "bar"] @TO@ MethodInvocation@@connection.set("foo","bar") @AT@ 18515 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 18519 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:set:["foo", "bar"] @AT@ 18526 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18536 @LENGTH@ 38
------INS MethodInvocation@@actual.add(connection.move("foo",1)) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.move("foo",1)) @AT@ 18536 @LENGTH@ 37
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 18536 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.move("foo",1)] @TO@ MethodInvocation@@actual.add(connection.move("foo",1)) @AT@ 18543 @LENGTH@ 30
------------INS MethodInvocation@@connection.move("foo",1) @TO@ SimpleName@@MethodName:add:[connection.move("foo",1)] @AT@ 18547 @LENGTH@ 25
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 18547 @LENGTH@ 10
---------------INS SimpleName@@MethodName:move:["foo", 1] @TO@ MethodInvocation@@connection.move("foo",1) @AT@ 18558 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 18563 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:move:["foo", 1] @AT@ 18570 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18577 @LENGTH@ 59
------INS MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @TO@ ExpressionStatement@@MethodInvocation:verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 18577 @LENGTH@ 58
---------INS SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @TO@ MethodInvocation@@verifyResults(Arrays.asList(new Object[]{true}),actual) @AT@ 18577 @LENGTH@ 58
------------INS MethodInvocation@@Arrays.asList(new Object[]{true}) @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 18591 @LENGTH@ 35
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 18591 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Object[]{true}] @TO@ MethodInvocation@@Arrays.asList(new Object[]{true}) @AT@ 18598 @LENGTH@ 28
------------------INS ArrayCreation@@new Object[]{true} @TO@ SimpleName@@MethodName:asList:[new Object[]{true}] @AT@ 18605 @LENGTH@ 20
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{true} @AT@ 18609 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 18609 @LENGTH@ 6
---------------------INS ArrayInitializer@@{true} @TO@ ArrayCreation@@new Object[]{true} @AT@ 18618 @LENGTH@ 7
------------------------INS BooleanLiteral@@true @TO@ ArrayInitializer@@{true} @AT@ 18620 @LENGTH@ 4
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:verifyResults:[Arrays.asList(new Object[]{true}), actual] @AT@ 18628 @LENGTH@ 6
---INS VariableDeclarationStatement@@JredisConnectionFactory factory2=new JredisConnectionFactory(); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18710 @LENGTH@ 65
------INS SimpleType@@JredisConnectionFactory @TO@ VariableDeclarationStatement@@JredisConnectionFactory factory2=new JredisConnectionFactory(); @AT@ 18710 @LENGTH@ 23
------INS VariableDeclarationFragment@@factory2=new JredisConnectionFactory() @TO@ VariableDeclarationStatement@@JredisConnectionFactory factory2=new JredisConnectionFactory(); @AT@ 18734 @LENGTH@ 40
---------INS SimpleName@@factory2 @TO@ VariableDeclarationFragment@@factory2=new JredisConnectionFactory() @AT@ 18734 @LENGTH@ 8
---------INS ClassInstanceCreation@@JredisConnectionFactory[] @TO@ VariableDeclarationFragment@@factory2=new JredisConnectionFactory() @AT@ 18745 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@JredisConnectionFactory[] @AT@ 18745 @LENGTH@ 3
------------INS SimpleType@@JredisConnectionFactory @TO@ ClassInstanceCreation@@JredisConnectionFactory[] @AT@ 18749 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18778 @LENGTH@ 24
------INS MethodInvocation@@factory2.setDatabase(1) @TO@ ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @AT@ 18778 @LENGTH@ 23
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 18778 @LENGTH@ 8
---------INS SimpleName@@MethodName:setDatabase:[1] @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 18787 @LENGTH@ 14
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setDatabase:[1] @AT@ 18799 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18805 @LENGTH@ 30
------INS MethodInvocation@@factory2.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @AT@ 18805 @LENGTH@ 29
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 18805 @LENGTH@ 8
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 18814 @LENGTH@ 20
---INS VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18838 @LENGTH@ 89
------INS SimpleType@@StringRedisConnection @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 18838 @LENGTH@ 21
------INS VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @TO@ VariableDeclarationStatement@@StringRedisConnection conn2=new DefaultStringRedisConnection(factory2.getConnection()); @AT@ 18860 @LENGTH@ 66
---------INS SimpleName@@conn2 @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 18860 @LENGTH@ 5
---------INS ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @TO@ VariableDeclarationFragment@@conn2=new DefaultStringRedisConnection(factory2.getConnection()) @AT@ 18868 @LENGTH@ 58
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 18868 @LENGTH@ 3
------------INS SimpleType@@DefaultStringRedisConnection @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 18872 @LENGTH@ 28
------------INS MethodInvocation@@factory2.getConnection() @TO@ ClassInstanceCreation@@DefaultStringRedisConnection[factory2.getConnection()] @AT@ 18901 @LENGTH@ 24
---------------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.getConnection() @AT@ 18901 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory2.getConnection() @AT@ 18910 @LENGTH@ 15
---INS TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ MethodDeclaration@@public, void, MethodName:testMove,  @AT@ 18930 @LENGTH@ 138
------INS ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 18939 @LENGTH@ 37
---------INS MethodInvocation@@assertEquals("bar",conn2.get("foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("bar",conn2.get("foo")) @AT@ 18939 @LENGTH@ 36
------------INS SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @TO@ MethodInvocation@@assertEquals("bar",conn2.get("foo")) @AT@ 18939 @LENGTH@ 36
---------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 18952 @LENGTH@ 5
---------------INS MethodInvocation@@conn2.get("foo") @TO@ SimpleName@@MethodName:assertEquals:["bar", conn2.get("foo")] @AT@ 18958 @LENGTH@ 16
------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.get("foo") @AT@ 18958 @LENGTH@ 5
------------------INS SimpleName@@MethodName:get:["foo"] @TO@ MethodInvocation@@conn2.get("foo") @AT@ 18964 @LENGTH@ 10
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:get:["foo"] @AT@ 18968 @LENGTH@ 5
------INS Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @TO@ TryStatement@@try {  assertEquals("bar",conn2.get("foo"));}  finally {  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 18989 @LENGTH@ 79
---------INS IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 18994 @LENGTH@ 52
------------INS MethodInvocation@@conn2.exists("foo") @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 18997 @LENGTH@ 19
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 18997 @LENGTH@ 5
---------------INS SimpleName@@MethodName:exists:["foo"] @TO@ MethodInvocation@@conn2.exists("foo") @AT@ 19003 @LENGTH@ 13
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:exists:["foo"] @AT@ 19010 @LENGTH@ 5
------------INS Block@@ThenBody:{  conn2.del("foo");} @TO@ IfStatement@@if (conn2.exists("foo")) {  conn2.del("foo");} @AT@ 19018 @LENGTH@ 28
---------------INS ExpressionStatement@@MethodInvocation:conn2.del("foo") @TO@ Block@@ThenBody:{  conn2.del("foo");} @AT@ 19024 @LENGTH@ 17
------------------INS MethodInvocation@@conn2.del("foo") @TO@ ExpressionStatement@@MethodInvocation:conn2.del("foo") @AT@ 19024 @LENGTH@ 16
---------------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.del("foo") @AT@ 19024 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:del:["foo"] @TO@ MethodInvocation@@conn2.del("foo") @AT@ 19030 @LENGTH@ 10
------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:del:["foo"] @AT@ 19034 @LENGTH@ 5
---------INS ExpressionStatement@@MethodInvocation:conn2.close() @TO@ Block@@FinallyBody:{  if (conn2.exists("foo")) {    conn2.del("foo");  }  conn2.close();} @AT@ 19050 @LENGTH@ 14
------------INS MethodInvocation@@conn2.close() @TO@ ExpressionStatement@@MethodInvocation:conn2.close() @AT@ 19050 @LENGTH@ 13
---------------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.close() @AT@ 19050 @LENGTH@ 5
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@conn2.close() @AT@ 19056 @LENGTH@ 7


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]DeploymentAgentTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]DeploymentAgentTest, FabricTestSupport @AT@ 1012 @LENGTH@ 7566
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]DeploymentAgentTest, FabricTestSupport @AT@ 1130 @LENGTH@ 49


UPD FieldDeclaration@@int, [index=0] @TO@ int, [index] @AT@ 2489 @LENGTH@ 14
---UPD VariableDeclarationFragment@@index=0 @TO@ index @AT@ 2493 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 2501 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[public]LettuceConnectionPipelineTxIntegrationTests, LettuceConnectionTransactionIntegrationTests @AT@ 1566 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 1566 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 1573 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 1578 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 1606 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 1606 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 1612 @LENGTH@ 21


INS MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 3684 @LENGTH@ 142
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 3684 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 3691 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 3691 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 3696 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 3704 @LENGTH@ 25
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 3742 @LENGTH@ 78
------INS ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @AT@ 3748 @LENGTH@ 71
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 3748 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 3752 @LENGTH@ 29
---------INS StringLiteral@@"The method is not yet implemented." @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 3782 @LENGTH@ 36


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 18039 @LENGTH@ 752
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 18106 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 18106 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 18114 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @TO@ TypeDeclaration@@[@ContextConfiguration(value="classpath:eclipselink.xml"), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 2150 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 2150 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 2157 @LENGTH@ 4
---INS SimpleName@@MethodName:invokesQueryWithVarargsParametersCorrectly @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 2162 @LENGTH@ 42


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 1671 @LENGTH@ 300
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 1716 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 1716 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1716 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1720 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1728 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1728 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1732 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1740 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 1749 @LENGTH@ 7


UPD VariableDeclarationStatement@@final File f=new File(resourceArr[i]); @TO@ final File f=new File(pathCompleter.translatePath(resourceArr[i])); @AT@ 10663 @LENGTH@ 40
---UPD VariableDeclarationFragment@@f=new File(resourceArr[i]) @TO@ f=new File(pathCompleter.translatePath(resourceArr[i])) @AT@ 10674 @LENGTH@ 28
------UPD ClassInstanceCreation@@File[resourceArr[i]] @TO@ File[pathCompleter.translatePath(resourceArr[i])] @AT@ 10678 @LENGTH@ 24
---------DEL ArrayAccess@@resourceArr[i] @AT@ 10687 @LENGTH@ 14
---------INS MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @TO@ ClassInstanceCreation@@File[resourceArr[i]] @AT@ 10834 @LENGTH@ 43
------------INS SimpleName@@Name:pathCompleter @TO@ MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @AT@ 10834 @LENGTH@ 13
------------INS SimpleName@@MethodName:translatePath:[resourceArr[i]] @TO@ MethodInvocation@@pathCompleter.translatePath(resourceArr[i]) @AT@ 10848 @LENGTH@ 29
---------------INS ArrayAccess@@resourceArr[i] @TO@ SimpleName@@MethodName:translatePath:[resourceArr[i]] @AT@ 10862 @LENGTH@ 14
------------------MOV SimpleName@@resourceArr @TO@ ArrayAccess@@resourceArr[i] @AT@ 10687 @LENGTH@ 11
------------------MOV SimpleName@@i @TO@ ArrayAccess@@resourceArr[i] @AT@ 10699 @LENGTH@ 1


UPD FieldDeclaration@@SimpleAttributeDefinition, [MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build()] @TO@ SimpleAttributeDefinition, [MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 6533 @LENGTH@ 192
---UPD VariableDeclarationFragment@@MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 6559 @LENGTH@ 165
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 6568 @LENGTH@ 156
---------UPD MethodInvocation@@MethodName:setRestartJVM:[] @TO@ MethodName:setFlags:[Flag.RESTART_RESOURCE_SERVICES] @AT@ 6568 @LENGTH@ 135
------------INS QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @TO@ MethodInvocation@@MethodName:setRestartJVM:[] @AT@ 6784 @LENGTH@ 30
---------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 6784 @LENGTH@ 4
---------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 6789 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 6835 @LENGTH@ 126
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6835 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6842 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6847 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:connection.evalSha("notasha",ReturnType.MULTI,1,"key1","arg1") @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6875 @LENGTH@ 67
------INS MethodInvocation@@connection.evalSha("notasha",ReturnType.MULTI,1,"key1","arg1") @TO@ ExpressionStatement@@MethodInvocation:connection.evalSha("notasha",ReturnType.MULTI,1,"key1","arg1") @AT@ 6875 @LENGTH@ 66
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.evalSha("notasha",ReturnType.MULTI,1,"key1","arg1") @AT@ 6875 @LENGTH@ 10
---------INS SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @TO@ MethodInvocation@@connection.evalSha("notasha",ReturnType.MULTI,1,"key1","arg1") @AT@ 6886 @LENGTH@ 55
------------INS StringLiteral@@"notasha" @TO@ SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @AT@ 6894 @LENGTH@ 9
------------INS QualifiedName@@ReturnType.MULTI @TO@ SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @AT@ 6905 @LENGTH@ 16
---------------INS SimpleName@@ReturnType @TO@ QualifiedName@@ReturnType.MULTI @AT@ 6905 @LENGTH@ 10
---------------INS SimpleName@@MULTI @TO@ QualifiedName@@ReturnType.MULTI @AT@ 6916 @LENGTH@ 5
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @AT@ 6923 @LENGTH@ 1
------------INS StringLiteral@@"key1" @TO@ SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @AT@ 6926 @LENGTH@ 6
------------INS StringLiteral@@"arg1" @TO@ SimpleName@@MethodName:evalSha:["notasha", ReturnType.MULTI, 1, "key1", "arg1"] @AT@ 6934 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:getResults() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6945 @LENGTH@ 13
------INS MethodInvocation@@MethodName:getResults:[] @TO@ ExpressionStatement@@MethodInvocation:getResults() @AT@ 6945 @LENGTH@ 12


UPD ReturnStatement@@NullLiteral:null @TO@ ConditionalExpression:rel == null ? null : String.format("%s.%s",rel,rel) @AT@ 4082 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 4089 @LENGTH@ 4
---INS ConditionalExpression@@rel == null ? null : String.format("%s.%s",rel,rel) @TO@ ReturnStatement@@NullLiteral:null @AT@ 4119 @LENGTH@ 53
------INS InfixExpression@@rel == null @TO@ ConditionalExpression@@rel == null ? null : String.format("%s.%s",rel,rel) @AT@ 4119 @LENGTH@ 11
---------INS SimpleName@@rel @TO@ InfixExpression@@rel == null @AT@ 4119 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@rel == null @AT@ 4122 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@rel == null @AT@ 4126 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@rel == null ? null : String.format("%s.%s",rel,rel) @AT@ 4133 @LENGTH@ 4
------INS MethodInvocation@@String.format("%s.%s",rel,rel) @TO@ ConditionalExpression@@rel == null ? null : String.format("%s.%s",rel,rel) @AT@ 4140 @LENGTH@ 32
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%s.%s",rel,rel) @AT@ 4140 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["%s.%s", rel, rel] @TO@ MethodInvocation@@String.format("%s.%s",rel,rel) @AT@ 4147 @LENGTH@ 25
------------INS StringLiteral@@"%s.%s" @TO@ SimpleName@@MethodName:format:["%s.%s", rel, rel] @AT@ 4154 @LENGTH@ 7
------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:format:["%s.%s", rel, rel] @AT@ 4163 @LENGTH@ 3
------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:format:["%s.%s", rel, rel] @AT@ 4168 @LENGTH@ 3


UPD IfStatement@@if (buffer != null) {  response.setContent(buffer);  int len=buffer.readableBytes();  response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,len);  LOG.trace("Content-Length: {}",len);} @TO@ if (buffer != null) {  response.setContent(buffer);  if (buffer.readerIndex() == buffer.writerIndex()) {    buffer.setIndex(0,buffer.writerIndex());  }  int len=buffer.readableBytes();  response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,len);  LOG.trace("Content-Length: {}",len);} @AT@ 15970 @LENGTH@ 273
---UPD Block@@ThenBody:{  response.setContent(buffer);  int len=buffer.readableBytes();  response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,len);  LOG.trace("Content-Length: {}",len);} @TO@ ThenBody:{  response.setContent(buffer);  if (buffer.readerIndex() == buffer.writerIndex()) {    buffer.setIndex(0,buffer.writerIndex());  }  int len=buffer.readableBytes();  response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,len);  LOG.trace("Content-Length: {}",len);} @AT@ 15990 @LENGTH@ 253
------INS IfStatement@@if (buffer.readerIndex() == buffer.writerIndex()) {  buffer.setIndex(0,buffer.writerIndex());} @TO@ Block@@ThenBody:{  response.setContent(buffer);  int len=buffer.readableBytes();  response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,len);  LOG.trace("Content-Length: {}",len);} @AT@ 16108 @LENGTH@ 123
---------INS InfixExpression@@buffer.readerIndex() == buffer.writerIndex() @TO@ IfStatement@@if (buffer.readerIndex() == buffer.writerIndex()) {  buffer.setIndex(0,buffer.writerIndex());} @AT@ 16112 @LENGTH@ 44
------------INS MethodInvocation@@buffer.readerIndex() @TO@ InfixExpression@@buffer.readerIndex() == buffer.writerIndex() @AT@ 16112 @LENGTH@ 20
---------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.readerIndex() @AT@ 16112 @LENGTH@ 6
---------------INS SimpleName@@MethodName:readerIndex:[] @TO@ MethodInvocation@@buffer.readerIndex() @AT@ 16119 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@buffer.readerIndex() == buffer.writerIndex() @AT@ 16132 @LENGTH@ 2
------------INS MethodInvocation@@buffer.writerIndex() @TO@ InfixExpression@@buffer.readerIndex() == buffer.writerIndex() @AT@ 16136 @LENGTH@ 20
---------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.writerIndex() @AT@ 16136 @LENGTH@ 6
---------------INS SimpleName@@MethodName:writerIndex:[] @TO@ MethodInvocation@@buffer.writerIndex() @AT@ 16143 @LENGTH@ 13
---------INS Block@@ThenBody:{  buffer.setIndex(0,buffer.writerIndex());} @TO@ IfStatement@@if (buffer.readerIndex() == buffer.writerIndex()) {  buffer.setIndex(0,buffer.writerIndex());} @AT@ 16158 @LENGTH@ 73
------------INS ExpressionStatement@@MethodInvocation:buffer.setIndex(0,buffer.writerIndex()) @TO@ Block@@ThenBody:{  buffer.setIndex(0,buffer.writerIndex());} @AT@ 16176 @LENGTH@ 41
---------------INS MethodInvocation@@buffer.setIndex(0,buffer.writerIndex()) @TO@ ExpressionStatement@@MethodInvocation:buffer.setIndex(0,buffer.writerIndex()) @AT@ 16176 @LENGTH@ 40
------------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.setIndex(0,buffer.writerIndex()) @AT@ 16176 @LENGTH@ 6
------------------INS SimpleName@@MethodName:setIndex:[0, buffer.writerIndex()] @TO@ MethodInvocation@@buffer.setIndex(0,buffer.writerIndex()) @AT@ 16183 @LENGTH@ 33
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setIndex:[0, buffer.writerIndex()] @AT@ 16192 @LENGTH@ 1
---------------------INS MethodInvocation@@buffer.writerIndex() @TO@ SimpleName@@MethodName:setIndex:[0, buffer.writerIndex()] @AT@ 16195 @LENGTH@ 20
------------------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.writerIndex() @AT@ 16195 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:writerIndex:[] @TO@ MethodInvocation@@buffer.writerIndex() @AT@ 16202 @LENGTH@ 13


INS IfStatement@@if (template != null) {  template.doWith(this);} @TO@ MethodDeclaration@@protected, void, MethodName:activateInternal, Exception,  @AT@ 6598 @LENGTH@ 68
---INS InfixExpression@@template != null @TO@ IfStatement@@if (template != null) {  template.doWith(this);} @AT@ 6602 @LENGTH@ 16
------INS SimpleName@@template @TO@ InfixExpression@@template != null @AT@ 6602 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@template != null @AT@ 6610 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@template != null @AT@ 6614 @LENGTH@ 4
---INS Block@@ThenBody:{  template.doWith(this);} @TO@ IfStatement@@if (template != null) {  template.doWith(this);} @AT@ 6620 @LENGTH@ 46
------MOV ExpressionStatement@@MethodInvocation:template.doWith(this) @TO@ Block@@ThenBody:{  template.doWith(this);} @AT@ 6598 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:host.addValve(new ThreadLocalRequestValve()) @TO@ MethodDeclaration@@public, synchronized, void, MethodName:start, StartContext context, StartException,  @AT@ 4232 @LENGTH@ 45
---INS MethodInvocation@@host.addValve(new ThreadLocalRequestValve()) @TO@ ExpressionStatement@@MethodInvocation:host.addValve(new ThreadLocalRequestValve()) @AT@ 4232 @LENGTH@ 44
------INS SimpleName@@Name:host @TO@ MethodInvocation@@host.addValve(new ThreadLocalRequestValve()) @AT@ 4232 @LENGTH@ 4
------INS SimpleName@@MethodName:addValve:[new ThreadLocalRequestValve()] @TO@ MethodInvocation@@host.addValve(new ThreadLocalRequestValve()) @AT@ 4237 @LENGTH@ 39
---------INS ClassInstanceCreation@@ThreadLocalRequestValve[] @TO@ SimpleName@@MethodName:addValve:[new ThreadLocalRequestValve()] @AT@ 4246 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@ThreadLocalRequestValve[] @AT@ 4246 @LENGTH@ 3
------------INS SimpleType@@ThreadLocalRequestValve @TO@ ClassInstanceCreation@@ThreadLocalRequestValve[] @AT@ 4250 @LENGTH@ 23


INS MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @TO@ TypeDeclaration@@[public]CxfWsdlFirstPayloadModeTest, AbstractCxfWsdlFirstTest @AT@ 1917 @LENGTH@ 549
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 1917 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 1927 @LENGTH@ 4
---INS SimpleName@@MethodName:verifyJaxwsHandlers @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 1932 @LENGTH@ 19
---INS SingleVariableDeclaration@@JaxwsTestHandler fromHandler @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 1952 @LENGTH@ 28
------INS SimpleType@@JaxwsTestHandler @TO@ SingleVariableDeclaration@@JaxwsTestHandler fromHandler @AT@ 1952 @LENGTH@ 16
------INS SimpleName@@fromHandler @TO@ SingleVariableDeclaration@@JaxwsTestHandler fromHandler @AT@ 1969 @LENGTH@ 11
---INS SingleVariableDeclaration@@JaxwsTestHandler toHandler @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 1982 @LENGTH@ 26
------INS SimpleType@@JaxwsTestHandler @TO@ SingleVariableDeclaration@@JaxwsTestHandler toHandler @AT@ 1982 @LENGTH@ 16
------INS SimpleName@@toHandler @TO@ SingleVariableDeclaration@@JaxwsTestHandler toHandler @AT@ 1999 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,fromHandler.getFaultCount()) @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 2020 @LENGTH@ 45
------INS MethodInvocation@@assertEquals(2,fromHandler.getFaultCount()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,fromHandler.getFaultCount()) @AT@ 2020 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertEquals:[2, fromHandler.getFaultCount()] @TO@ MethodInvocation@@assertEquals(2,fromHandler.getFaultCount()) @AT@ 2020 @LENGTH@ 44
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, fromHandler.getFaultCount()] @AT@ 2033 @LENGTH@ 1
------------INS MethodInvocation@@fromHandler.getFaultCount() @TO@ SimpleName@@MethodName:assertEquals:[2, fromHandler.getFaultCount()] @AT@ 2036 @LENGTH@ 27
---------------INS SimpleName@@Name:fromHandler @TO@ MethodInvocation@@fromHandler.getFaultCount() @AT@ 2036 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getFaultCount:[] @TO@ MethodInvocation@@fromHandler.getFaultCount() @AT@ 2048 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals(4,fromHandler.getMessageCount()) @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 2074 @LENGTH@ 47
------INS MethodInvocation@@assertEquals(4,fromHandler.getMessageCount()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(4,fromHandler.getMessageCount()) @AT@ 2074 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertEquals:[4, fromHandler.getMessageCount()] @TO@ MethodInvocation@@assertEquals(4,fromHandler.getMessageCount()) @AT@ 2074 @LENGTH@ 46
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[4, fromHandler.getMessageCount()] @AT@ 2087 @LENGTH@ 1
------------INS MethodInvocation@@fromHandler.getMessageCount() @TO@ SimpleName@@MethodName:assertEquals:[4, fromHandler.getMessageCount()] @AT@ 2090 @LENGTH@ 29
---------------INS SimpleName@@Name:fromHandler @TO@ MethodInvocation@@fromHandler.getMessageCount() @AT@ 2090 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getMessageCount:[] @TO@ MethodInvocation@@fromHandler.getMessageCount() @AT@ 2102 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals(1,toHandler.getFaultCount()) @TO@ MethodDeclaration@@protected, void, MethodName:verifyJaxwsHandlers, JaxwsTestHandler fromHandler, JaxwsTestHandler toHandler,  @AT@ 2417 @LENGTH@ 43
------INS MethodInvocation@@assertEquals(1,toHandler.getFaultCount()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(1,toHandler.getFaultCount()) @AT@ 2417 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertEquals:[1, toHandler.getFaultCount()] @TO@ MethodInvocation@@assertEquals(1,toHandler.getFaultCount()) @AT@ 2417 @LENGTH@ 42
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, toHandler.getFaultCount()] @AT@ 2430 @LENGTH@ 1
------------INS MethodInvocation@@toHandler.getFaultCount() @TO@ SimpleName@@MethodName:assertEquals:[1, toHandler.getFaultCount()] @AT@ 2433 @LENGTH@ 25
---------------INS SimpleName@@Name:toHandler @TO@ MethodInvocation@@toHandler.getFaultCount() @AT@ 2433 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getFaultCount:[] @TO@ MethodInvocation@@toHandler.getFaultCount() @AT@ 2443 @LENGTH@ 15


UPD VariableDeclarationStatement@@final PersistenceContext context=injectionPoint.getAnnotated().getAnnotation(PersistenceContext.class); @TO@ final PersistenceContext context=getResourceAnnotated(injectionPoint).getAnnotation(PersistenceContext.class); @AT@ 2973 @LENGTH@ 105
---UPD VariableDeclarationFragment@@context=injectionPoint.getAnnotated().getAnnotation(PersistenceContext.class) @TO@ context=getResourceAnnotated(injectionPoint).getAnnotation(PersistenceContext.class) @AT@ 2998 @LENGTH@ 79
------UPD MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(PersistenceContext.class) @TO@ getResourceAnnotated(injectionPoint).getAnnotation(PersistenceContext.class) @AT@ 3008 @LENGTH@ 69
---------DEL MethodInvocation@@MethodName:getAnnotated:[] @AT@ 3008 @LENGTH@ 29
---------UPD SimpleName@@Name:injectionPoint @TO@ injectionPoint @AT@ 3008 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @TO@ MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(PersistenceContext.class) @AT@ 3095 @LENGTH@ 36
------------MOV SimpleName@@Name:injectionPoint @TO@ MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @AT@ 3008 @LENGTH@ 14


UPD MethodDeclaration@@public, static, JMXSubsystemRootResource, MethodName:create, AuditLogger auditLogger,  @TO@ public, static, JMXSubsystemRootResource, MethodName:create, ManagedAuditLogger auditLogger,  @AT@ 3545 @LENGTH@ 157
---UPD SingleVariableDeclaration@@AuditLogger auditLogger @TO@ ManagedAuditLogger auditLogger @AT@ 3591 @LENGTH@ 23
------UPD SimpleType@@AuditLogger @TO@ ManagedAuditLogger @AT@ 3591 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, Comparator, [NATURAL_COMPARATOR=ComparableComparator.comparableComparator()] @TO@ public, static, final, Comparator, [NATURAL_COMPARATOR=ComparableComparator.<Comparable>comparableComparator()] @AT@ 2013 @LENGTH@ 96
---UPD VariableDeclarationFragment@@NATURAL_COMPARATOR=ComparableComparator.comparableComparator() @TO@ NATURAL_COMPARATOR=ComparableComparator.<Comparable>comparableComparator() @AT@ 2044 @LENGTH@ 64
------UPD MethodInvocation@@ComparableComparator.comparableComparator() @TO@ ComparableComparator.<Comparable>comparableComparator() @AT@ 2065 @LENGTH@ 43


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @TO@ [@Configuration, @ComponentScan, @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 593 @LENGTH@ 447
---DEL NormalAnnotation@@@ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class) @AT@ 608 @LENGTH@ 66
---INS MarkerAnnotation@@@ComponentScan @TO@ TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 609 @LENGTH@ 14


UPD TryStatement@@try {  out=new FileOutputStream(output);  IOUtils.copy(in,out);}  finally {  if (out != null) {    out.close();  }  in.close();} @TO@ try {  out=new FileOutputStream(output);  IOUtils.copy(in,out);  assertEquals(995,in.getBytesRead());}  finally {  if (out != null) {    out.close();  }  in.close();} @AT@ 2256 @LENGTH@ 248
---INS ExpressionStatement@@MethodInvocation:assertEquals(995,in.getBytesRead()) @TO@ TryStatement@@try {  out=new FileOutputStream(output);  IOUtils.copy(in,out);}  finally {  if (out != null) {    out.close();  }  in.close();} @AT@ 2369 @LENGTH@ 37
------INS MethodInvocation@@assertEquals(995,in.getBytesRead()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(995,in.getBytesRead()) @AT@ 2369 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:[995, in.getBytesRead()] @TO@ MethodInvocation@@assertEquals(995,in.getBytesRead()) @AT@ 2369 @LENGTH@ 36
------------INS NumberLiteral@@995 @TO@ SimpleName@@MethodName:assertEquals:[995, in.getBytesRead()] @AT@ 2382 @LENGTH@ 3
------------INS MethodInvocation@@in.getBytesRead() @TO@ SimpleName@@MethodName:assertEquals:[995, in.getBytesRead()] @AT@ 2387 @LENGTH@ 17
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.getBytesRead() @AT@ 2387 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getBytesRead:[] @TO@ MethodInvocation@@in.getBytesRead() @AT@ 2390 @LENGTH@ 14


INS MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @TO@ TypeDeclaration@@[public]BatchPropertyContext,  @AT@ 2266 @LENGTH@ 440
---INS Modifier@@public @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2266 @LENGTH@ 6
---INS SimpleType@@Properties @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2273 @LENGTH@ 10
---INS SimpleName@@MethodName:getStepLevelProperties @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2284 @LENGTH@ 22
---INS SingleVariableDeclaration@@String beanName @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2307 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String beanName @AT@ 2307 @LENGTH@ 6
------INS SimpleName@@beanName @TO@ SingleVariableDeclaration@@String beanName @AT@ 2314 @LENGTH@ 8
---INS VariableDeclarationStatement@@Properties properties=new Properties(); @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2328 @LENGTH@ 41
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 2328 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=new Properties() @TO@ VariableDeclarationStatement@@Properties properties=new Properties(); @AT@ 2339 @LENGTH@ 29
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 2339 @LENGTH@ 10
---------INS ClassInstanceCreation@@Properties[] @TO@ VariableDeclarationFragment@@properties=new Properties() @AT@ 2352 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@Properties[] @AT@ 2352 @LENGTH@ 3
------------INS SimpleType@@Properties @TO@ ClassInstanceCreation@@Properties[] @AT@ 2356 @LENGTH@ 10
---INS IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} else {  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2373 @LENGTH@ 308
------INS MethodInvocation@@batchProperties.containsKey(beanName) @TO@ IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} else {  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @AT@ 2377 @LENGTH@ 37
---------INS SimpleName@@Name:batchProperties @TO@ MethodInvocation@@batchProperties.containsKey(beanName) @AT@ 2377 @LENGTH@ 15
---------INS SimpleName@@MethodName:containsKey:[beanName] @TO@ MethodInvocation@@batchProperties.containsKey(beanName) @AT@ 2393 @LENGTH@ 21
------------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:containsKey:[beanName] @AT@ 2405 @LENGTH@ 8
------INS Block@@ThenBody:{  properties.putAll(batchProperties.get(beanName));} @TO@ IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} else {  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @AT@ 2416 @LENGTH@ 58
---------INS ExpressionStatement@@MethodInvocation:properties.putAll(batchProperties.get(beanName)) @TO@ Block@@ThenBody:{  properties.putAll(batchProperties.get(beanName));} @AT@ 2421 @LENGTH@ 49
------------INS MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @TO@ ExpressionStatement@@MethodInvocation:properties.putAll(batchProperties.get(beanName)) @AT@ 2421 @LENGTH@ 48
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @AT@ 2421 @LENGTH@ 10
---------------INS SimpleName@@MethodName:putAll:[batchProperties.get(beanName)] @TO@ MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @AT@ 2432 @LENGTH@ 37
------------------INS MethodInvocation@@batchProperties.get(beanName) @TO@ SimpleName@@MethodName:putAll:[batchProperties.get(beanName)] @AT@ 2439 @LENGTH@ 29
---------------------INS SimpleName@@Name:batchProperties @TO@ MethodInvocation@@batchProperties.get(beanName) @AT@ 2439 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:get:[beanName] @TO@ MethodInvocation@@batchProperties.get(beanName) @AT@ 2455 @LENGTH@ 13
------------------------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:get:[beanName] @AT@ 2459 @LENGTH@ 8
------INS Block@@ElseBody:{  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @TO@ IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} else {  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @AT@ 2480 @LENGTH@ 201
---------INS IfStatement@@if (beanName.startsWith("scopedTarget")) {  beanName=beanName.substring(13);} @TO@ Block@@ElseBody:{  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @AT@ 2485 @LENGTH@ 85
------------INS MethodInvocation@@beanName.startsWith("scopedTarget") @TO@ IfStatement@@if (beanName.startsWith("scopedTarget")) {  beanName=beanName.substring(13);} @AT@ 2488 @LENGTH@ 35
---------------INS SimpleName@@Name:beanName @TO@ MethodInvocation@@beanName.startsWith("scopedTarget") @AT@ 2488 @LENGTH@ 8
---------------INS SimpleName@@MethodName:startsWith:["scopedTarget"] @TO@ MethodInvocation@@beanName.startsWith("scopedTarget") @AT@ 2497 @LENGTH@ 26
------------------INS StringLiteral@@"scopedTarget" @TO@ SimpleName@@MethodName:startsWith:["scopedTarget"] @AT@ 2508 @LENGTH@ 14
------------INS Block@@ThenBody:{  beanName=beanName.substring(13);} @TO@ IfStatement@@if (beanName.startsWith("scopedTarget")) {  beanName=beanName.substring(13);} @AT@ 2525 @LENGTH@ 45
---------------INS ExpressionStatement@@Assignment:beanName=beanName.substring(13) @TO@ Block@@ThenBody:{  beanName=beanName.substring(13);} @AT@ 2531 @LENGTH@ 34
------------------INS Assignment@@beanName=beanName.substring(13) @TO@ ExpressionStatement@@Assignment:beanName=beanName.substring(13) @AT@ 2531 @LENGTH@ 33
---------------------INS SimpleName@@beanName @TO@ Assignment@@beanName=beanName.substring(13) @AT@ 2531 @LENGTH@ 8
---------------------INS Operator@@= @TO@ Assignment@@beanName=beanName.substring(13) @AT@ 2539 @LENGTH@ 1
---------------------INS MethodInvocation@@beanName.substring(13) @TO@ Assignment@@beanName=beanName.substring(13) @AT@ 2542 @LENGTH@ 22
------------------------INS SimpleName@@Name:beanName @TO@ MethodInvocation@@beanName.substring(13) @AT@ 2542 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:substring:[13] @TO@ MethodInvocation@@beanName.substring(13) @AT@ 2551 @LENGTH@ 13
---------------------------INS NumberLiteral@@13 @TO@ SimpleName@@MethodName:substring:[13] @AT@ 2561 @LENGTH@ 2
---------INS IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} @TO@ Block@@ElseBody:{  if (beanName.startsWith("scopedTarget")) {    beanName=beanName.substring(13);  }  if (batchProperties.containsKey(beanName)) {    properties.putAll(batchProperties.get(beanName));  }} @AT@ 2575 @LENGTH@ 102
------------INS MethodInvocation@@batchProperties.containsKey(beanName) @TO@ IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} @AT@ 2578 @LENGTH@ 37
---------------INS SimpleName@@Name:batchProperties @TO@ MethodInvocation@@batchProperties.containsKey(beanName) @AT@ 2578 @LENGTH@ 15
---------------INS SimpleName@@MethodName:containsKey:[beanName] @TO@ MethodInvocation@@batchProperties.containsKey(beanName) @AT@ 2594 @LENGTH@ 21
------------------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:containsKey:[beanName] @AT@ 2606 @LENGTH@ 8
------------INS Block@@ThenBody:{  properties.putAll(batchProperties.get(beanName));} @TO@ IfStatement@@if (batchProperties.containsKey(beanName)) {  properties.putAll(batchProperties.get(beanName));} @AT@ 2617 @LENGTH@ 60
---------------INS ExpressionStatement@@MethodInvocation:properties.putAll(batchProperties.get(beanName)) @TO@ Block@@ThenBody:{  properties.putAll(batchProperties.get(beanName));} @AT@ 2623 @LENGTH@ 49
------------------INS MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @TO@ ExpressionStatement@@MethodInvocation:properties.putAll(batchProperties.get(beanName)) @AT@ 2623 @LENGTH@ 48
---------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @AT@ 2623 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:putAll:[batchProperties.get(beanName)] @TO@ MethodInvocation@@properties.putAll(batchProperties.get(beanName)) @AT@ 2634 @LENGTH@ 37
------------------------INS MethodInvocation@@batchProperties.get(beanName) @TO@ SimpleName@@MethodName:putAll:[batchProperties.get(beanName)] @AT@ 2641 @LENGTH@ 29
---------------------------INS SimpleName@@Name:batchProperties @TO@ MethodInvocation@@batchProperties.get(beanName) @AT@ 2641 @LENGTH@ 15
---------------------------INS SimpleName@@MethodName:get:[beanName] @TO@ MethodInvocation@@batchProperties.get(beanName) @AT@ 2657 @LENGTH@ 13
------------------------------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:get:[beanName] @AT@ 2661 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:properties @TO@ MethodDeclaration@@public, Properties, MethodName:getStepLevelProperties, String beanName,  @AT@ 2685 @LENGTH@ 18
------INS SimpleName@@properties @TO@ ReturnStatement@@SimpleName:properties @AT@ 2692 @LENGTH@ 10


INS VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @TO@ MethodDeclaration@@private, static, Map<String,Object>, MethodName:safeCopy, Map<String,Object> properties,  @AT@ 3450 @LENGTH@ 98
---INS ParameterizedType@@List<MessageHistory> @TO@ VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @AT@ 3450 @LENGTH@ 20
------INS SimpleType@@List @TO@ ParameterizedType@@List<MessageHistory> @AT@ 3450 @LENGTH@ 4
------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@List<MessageHistory> @AT@ 3455 @LENGTH@ 14
---INS VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @TO@ VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @AT@ 3471 @LENGTH@ 76
------INS SimpleName@@history @TO@ VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3471 @LENGTH@ 7
------INS CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @TO@ VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3481 @LENGTH@ 66
---------INS ParameterizedType@@List<MessageHistory> @TO@ CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3482 @LENGTH@ 20
------------INS SimpleType@@List @TO@ ParameterizedType@@List<MessageHistory> @AT@ 3482 @LENGTH@ 4
------------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@List<MessageHistory> @AT@ 3487 @LENGTH@ 14
---------INS MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @TO@ CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3504 @LENGTH@ 43
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3504 @LENGTH@ 10
------------INS SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @TO@ MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 3515 @LENGTH@ 32
---------------INS QualifiedName@@Exchange.MESSAGE_HISTORY @TO@ SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @AT@ 3522 @LENGTH@ 24
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 3522 @LENGTH@ 8
------------------INS SimpleName@@MESSAGE_HISTORY @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 3531 @LENGTH@ 15


UPD IfStatement@@if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @TO@ if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} @AT@ 40736 @LENGTH@ 1312
---DEL Block@@ElseBody:{  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @AT@ 41079 @LENGTH@ 969
------DEL VariableDeclarationStatement@@EnumSet<Flag> flags=operationEntry.getFlags(); @AT@ 41101 @LENGTH@ 48
---------DEL ParameterizedType@@EnumSet<Flag> @AT@ 41101 @LENGTH@ 13
------------DEL SimpleType@@EnumSet @AT@ 41101 @LENGTH@ 7
------------DEL SimpleType@@Flag @AT@ 41109 @LENGTH@ 4
---------DEL VariableDeclarationFragment@@flags=operationEntry.getFlags() @AT@ 41115 @LENGTH@ 33
------------DEL SimpleName@@flags @AT@ 41115 @LENGTH@ 5
------------DEL MethodInvocation@@operationEntry.getFlags() @AT@ 41123 @LENGTH@ 25
---------------DEL SimpleName@@Name:operationEntry @AT@ 41123 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getFlags:[] @AT@ 41138 @LENGTH@ 10
------DEL VariableDeclarationStatement@@Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG); @AT@ 41170 @LENGTH@ 131
---------DEL SimpleType@@Action @AT@ 41170 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG) @AT@ 41177 @LENGTH@ 123
------------DEL SimpleName@@action @AT@ 41177 @LENGTH@ 6
------------DEL MethodInvocation@@targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG) @AT@ 41186 @LENGTH@ 114
---------------DEL SimpleName@@Name:targetAction @AT@ 41186 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:limitAction:[flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG] @AT@ 41199 @LENGTH@ 101
------------------DEL ConditionalExpression@@flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG @AT@ 41211 @LENGTH@ 88
---------------------DEL MethodInvocation@@flags.contains(Flag.RUNTIME_ONLY) @AT@ 41211 @LENGTH@ 33
------------------------DEL SimpleName@@Name:flags @AT@ 41211 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:contains:[Flag.RUNTIME_ONLY] @AT@ 41217 @LENGTH@ 27
---------------------------DEL QualifiedName@@Flag.RUNTIME_ONLY @AT@ 41226 @LENGTH@ 17
------------------------------DEL SimpleName@@Flag @AT@ 41226 @LENGTH@ 4
------------------------------DEL SimpleName@@RUNTIME_ONLY @AT@ 41231 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.READ_RUNTIME @AT@ 41247 @LENGTH@ 25
------------------------DEL SimpleName@@ActionEffect @AT@ 41247 @LENGTH@ 12
------------------------DEL SimpleName@@READ_RUNTIME @AT@ 41260 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.READ_CONFIG @AT@ 41275 @LENGTH@ 24
------------------------DEL SimpleName@@ActionEffect @AT@ 41275 @LENGTH@ 12
------------------------DEL SimpleName@@READ_CONFIG @AT@ 41288 @LENGTH@ 11
------DEL ExpressionStatement@@Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41322 @LENGTH@ 118
---------DEL Assignment@@authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41322 @LENGTH@ 117
------------DEL SimpleName@@authResult @AT@ 41322 @LENGTH@ 10
------------DEL Operator@@= @AT@ 41332 @LENGTH@ 1
------------DEL MethodInvocation@@modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41335 @LENGTH@ 104
---------------DEL MethodInvocation@@MethodName:getAuthorizer:[] @AT@ 41335 @LENGTH@ 31
---------------DEL SimpleName@@Name:modelController @AT@ 41335 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:authorize:[getCaller(), callEnvironment, action, authResp.targetResource] @AT@ 41367 @LENGTH@ 72
------------------DEL MethodInvocation@@MethodName:getCaller:[] @AT@ 41377 @LENGTH@ 11
------------------DEL SimpleName@@callEnvironment @AT@ 41390 @LENGTH@ 15
------------------DEL SimpleName@@action @AT@ 41407 @LENGTH@ 6
------------------DEL QualifiedName@@authResp.targetResource @AT@ 41415 @LENGTH@ 23
---------------------DEL SimpleName@@authResp @AT@ 41415 @LENGTH@ 8
---------------------DEL SimpleName@@targetResource @AT@ 41424 @LENGTH@ 14
------DEL IfStatement@@if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @AT@ 41461 @LENGTH@ 485
---------DEL InfixExpression@@authResult.getDecision() != AuthorizationResult.Decision.DENY @AT@ 41465 @LENGTH@ 61
------------DEL MethodInvocation@@authResult.getDecision() @AT@ 41465 @LENGTH@ 24
---------------DEL SimpleName@@Name:authResult @AT@ 41465 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getDecision:[] @AT@ 41476 @LENGTH@ 13
------------DEL Operator@@!= @AT@ 41489 @LENGTH@ 2
------------DEL QualifiedName@@AuthorizationResult.Decision.DENY @AT@ 41493 @LENGTH@ 33
---------------DEL QualifiedName@@AuthorizationResult.Decision @AT@ 41493 @LENGTH@ 28
------------------DEL SimpleName@@AuthorizationResult @AT@ 41493 @LENGTH@ 19
------------------DEL SimpleName@@Decision @AT@ 41513 @LENGTH@ 8
---------------DEL SimpleName@@DENY @AT@ 41522 @LENGTH@ 4
---MOV Block@@ThenBody:{  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @TO@ IfStatement@@if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @AT@ 41528 @LENGTH@ 418
------DEL ExpressionStatement@@Assignment:action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41623 @LENGTH@ 126
---------DEL Assignment@@action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41623 @LENGTH@ 125
------------DEL SimpleName@@action @AT@ 41623 @LENGTH@ 6
------------DEL Operator@@= @AT@ 41629 @LENGTH@ 1
------------DEL MethodInvocation@@targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41632 @LENGTH@ 116
---------------DEL SimpleName@@Name:targetAction @AT@ 41632 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:limitAction:[flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG] @AT@ 41645 @LENGTH@ 103
------------------DEL ConditionalExpression@@flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG @AT@ 41657 @LENGTH@ 90
---------------------DEL MethodInvocation@@flags.contains(Flag.RUNTIME_ONLY) @AT@ 41657 @LENGTH@ 33
------------------------DEL SimpleName@@Name:flags @AT@ 41657 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:contains:[Flag.RUNTIME_ONLY] @AT@ 41663 @LENGTH@ 27
---------------------------DEL QualifiedName@@Flag.RUNTIME_ONLY @AT@ 41672 @LENGTH@ 17
------------------------------DEL SimpleName@@Flag @AT@ 41672 @LENGTH@ 4
------------------------------DEL SimpleName@@RUNTIME_ONLY @AT@ 41677 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.WRITE_RUNTIME @AT@ 41693 @LENGTH@ 26
------------------------DEL SimpleName@@ActionEffect @AT@ 41693 @LENGTH@ 12
------------------------DEL SimpleName@@WRITE_RUNTIME @AT@ 41706 @LENGTH@ 13
---------------------DEL QualifiedName@@ActionEffect.WRITE_CONFIG @AT@ 41722 @LENGTH@ 25
------------------------DEL SimpleName@@ActionEffect @AT@ 41722 @LENGTH@ 12
------------------------DEL SimpleName@@WRITE_CONFIG @AT@ 41735 @LENGTH@ 12
------UPD ExpressionStatement@@Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41778 @LENGTH@ 118
---------UPD Assignment@@authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41778 @LENGTH@ 117
------------UPD MethodInvocation@@modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41791 @LENGTH@ 104
---------------UPD SimpleName@@MethodName:authorize:[getCaller(), callEnvironment, action, authResp.targetResource] @TO@ MethodName:authorize:[getCaller(), callEnvironment, targetAction, authResp.targetResource] @AT@ 41823 @LENGTH@ 72
------------------UPD SimpleName@@action @TO@ targetAction @AT@ 41863 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:authResp.addOperationResult(operationName,access,authResult) @TO@ Block@@ThenBody:{  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @AT@ 41967 @LENGTH@ 63


INS MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup({EjbSecurityDomainSetup.class}), @Category(CommonCriteria.class), public]AnnotationAuthorizationTestCase,  @AT@ 9773 @LENGTH@ 492
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9773 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9780 @LENGTH@ 4
---INS SimpleName@@MethodName:testPermitAllMethodWithArrayParams @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9785 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9829 @LENGTH@ 9
---INS VariableDeclarationStatement@@LoginContext lc=Util.getCLMLoginContext("user1","password1"); @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9849 @LENGTH@ 64
------INS SimpleType@@LoginContext @TO@ VariableDeclarationStatement@@LoginContext lc=Util.getCLMLoginContext("user1","password1"); @AT@ 9849 @LENGTH@ 12
------INS VariableDeclarationFragment@@lc=Util.getCLMLoginContext("user1","password1") @TO@ VariableDeclarationStatement@@LoginContext lc=Util.getCLMLoginContext("user1","password1"); @AT@ 9862 @LENGTH@ 50
---------INS SimpleName@@lc @TO@ VariableDeclarationFragment@@lc=Util.getCLMLoginContext("user1","password1") @AT@ 9862 @LENGTH@ 2
---------INS MethodInvocation@@Util.getCLMLoginContext("user1","password1") @TO@ VariableDeclarationFragment@@lc=Util.getCLMLoginContext("user1","password1") @AT@ 9867 @LENGTH@ 45
------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.getCLMLoginContext("user1","password1") @AT@ 9867 @LENGTH@ 4
------------INS SimpleName@@MethodName:getCLMLoginContext:["user1", "password1"] @TO@ MethodInvocation@@Util.getCLMLoginContext("user1","password1") @AT@ 9872 @LENGTH@ 40
---------------INS StringLiteral@@"user1" @TO@ SimpleName@@MethodName:getCLMLoginContext:["user1", "password1"] @AT@ 9891 @LENGTH@ 7
---------------INS StringLiteral@@"password1" @TO@ SimpleName@@MethodName:getCLMLoginContext:["user1", "password1"] @AT@ 9900 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:lc.login() @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9922 @LENGTH@ 11
------INS MethodInvocation@@lc.login() @TO@ ExpressionStatement@@MethodInvocation:lc.login() @AT@ 9922 @LENGTH@ 10
---------INS SimpleName@@Name:lc @TO@ MethodInvocation@@lc.login() @AT@ 9922 @LENGTH@ 2
---------INS SimpleName@@MethodName:login:[] @TO@ MethodInvocation@@lc.login() @AT@ 9925 @LENGTH@ 7
---INS TryStatement@@try {  final String[] messages=new String[]{"foo","bar"};  final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages);  assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes);}  finally {  lc.logout();} @TO@ MethodDeclaration@@public, void, MethodName:testPermitAllMethodWithArrayParams, Exception,  @AT@ 9942 @LENGTH@ 317
------INS VariableDeclarationStatement@@final String[] messages=new String[]{"foo","bar"}; @TO@ TryStatement@@try {  final String[] messages=new String[]{"foo","bar"};  final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages);  assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes);}  finally {  lc.logout();} @AT@ 9960 @LENGTH@ 54
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String[] messages=new String[]{"foo","bar"}; @AT@ 9960 @LENGTH@ 5
---------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@final String[] messages=new String[]{"foo","bar"}; @AT@ 9966 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9966 @LENGTH@ 6
---------INS VariableDeclarationFragment@@messages=new String[]{"foo","bar"} @TO@ VariableDeclarationStatement@@final String[] messages=new String[]{"foo","bar"}; @AT@ 9975 @LENGTH@ 38
------------INS SimpleName@@messages @TO@ VariableDeclarationFragment@@messages=new String[]{"foo","bar"} @AT@ 9975 @LENGTH@ 8
------------INS ArrayCreation@@new String[]{"foo","bar"} @TO@ VariableDeclarationFragment@@messages=new String[]{"foo","bar"} @AT@ 9986 @LENGTH@ 27
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"foo","bar"} @AT@ 9990 @LENGTH@ 8
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 9990 @LENGTH@ 6
---------------INS ArrayInitializer@@{"foo","bar"} @TO@ ArrayCreation@@new String[]{"foo","bar"} @AT@ 9999 @LENGTH@ 14
------------------INS StringLiteral@@"foo" @TO@ ArrayInitializer@@{"foo","bar"} @AT@ 10000 @LENGTH@ 5
------------------INS StringLiteral@@"bar" @TO@ ArrayInitializer@@{"foo","bar"} @AT@ 10007 @LENGTH@ 5
------INS VariableDeclarationStatement@@final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages); @TO@ TryStatement@@try {  final String[] messages=new String[]{"foo","bar"};  final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages);  assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes);}  finally {  lc.logout();} @AT@ 10027 @LENGTH@ 83
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages); @AT@ 10027 @LENGTH@ 5
---------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages); @AT@ 10033 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 10033 @LENGTH@ 6
---------INS VariableDeclarationFragment@@echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @TO@ VariableDeclarationStatement@@final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages); @AT@ 10042 @LENGTH@ 67
------------INS SimpleName@@echoes @TO@ VariableDeclarationFragment@@echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @AT@ 10042 @LENGTH@ 6
------------INS MethodInvocation@@denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @TO@ VariableDeclarationFragment@@echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @AT@ 10051 @LENGTH@ 58
---------------INS SimpleName@@Name:denyAllOverrideBean @TO@ MethodInvocation@@denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @AT@ 10051 @LENGTH@ 19
---------------INS SimpleName@@MethodName:permitAllEchoWithArrayParams:[messages] @TO@ MethodInvocation@@denyAllOverrideBean.permitAllEchoWithArrayParams(messages) @AT@ 10071 @LENGTH@ 38
------------------INS SimpleName@@messages @TO@ SimpleName@@MethodName:permitAllEchoWithArrayParams:[messages] @AT@ 10100 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes) @TO@ TryStatement@@try {  final String[] messages=new String[]{"foo","bar"};  final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages);  assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes);}  finally {  lc.logout();} @AT@ 10123 @LENGTH@ 81
---------INS MethodInvocation@@assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes) @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes) @AT@ 10123 @LENGTH@ 80
------------INS SimpleName@@MethodName:assertArrayEquals:["Unexpected echoes returned by bean method", messages, echoes] @TO@ MethodInvocation@@assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes) @AT@ 10123 @LENGTH@ 80
---------------INS StringLiteral@@"Unexpected echoes returned by bean method" @TO@ SimpleName@@MethodName:assertArrayEquals:["Unexpected echoes returned by bean method", messages, echoes] @AT@ 10141 @LENGTH@ 43
---------------INS SimpleName@@messages @TO@ SimpleName@@MethodName:assertArrayEquals:["Unexpected echoes returned by bean method", messages, echoes] @AT@ 10186 @LENGTH@ 8
---------------INS SimpleName@@echoes @TO@ SimpleName@@MethodName:assertArrayEquals:["Unexpected echoes returned by bean method", messages, echoes] @AT@ 10196 @LENGTH@ 6
------INS Block@@FinallyBody:{  lc.logout();} @TO@ TryStatement@@try {  final String[] messages=new String[]{"foo","bar"};  final String[] echoes=denyAllOverrideBean.permitAllEchoWithArrayParams(messages);  assertArrayEquals("Unexpected echoes returned by bean method",messages,echoes);}  finally {  lc.logout();} @AT@ 10223 @LENGTH@ 36
---------INS ExpressionStatement@@MethodInvocation:lc.logout() @TO@ Block@@FinallyBody:{  lc.logout();} @AT@ 10237 @LENGTH@ 12
------------INS MethodInvocation@@lc.logout() @TO@ ExpressionStatement@@MethodInvocation:lc.logout() @AT@ 10237 @LENGTH@ 11
---------------INS SimpleName@@Name:lc @TO@ MethodInvocation@@lc.logout() @AT@ 10237 @LENGTH@ 2
---------------INS SimpleName@@MethodName:logout:[] @TO@ MethodInvocation@@lc.logout() @AT@ 10240 @LENGTH@ 8


DEL MethodDeclaration@@private, void, MethodName:setProperties, Object bean, Map<String,Object> parameters, Exception,  @AT@ 10989 @LENGTH@ 255
---DEL Modifier@@private @AT@ 10989 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 10997 @LENGTH@ 4
---DEL SimpleName@@MethodName:setProperties @AT@ 11002 @LENGTH@ 13
---DEL SingleVariableDeclaration@@Object bean @AT@ 11016 @LENGTH@ 11
------DEL SimpleType@@Object @AT@ 11016 @LENGTH@ 6
------DEL SimpleName@@bean @AT@ 11023 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Map<String,Object> parameters @AT@ 11029 @LENGTH@ 30
------DEL ParameterizedType@@Map<String,Object> @AT@ 11029 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 11029 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 11033 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 11041 @LENGTH@ 6
------DEL SimpleName@@parameters @AT@ 11049 @LENGTH@ 10
---DEL SimpleType@@Exception @AT@ 11068 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:EndpointHelper.setReferenceProperties(getCamelContext(),bean,parameters) @AT@ 11088 @LENGTH@ 75
------DEL MethodInvocation@@EndpointHelper.setReferenceProperties(getCamelContext(),bean,parameters) @AT@ 11088 @LENGTH@ 74
---------DEL SimpleName@@Name:EndpointHelper @AT@ 11088 @LENGTH@ 14
---------DEL SimpleName@@MethodName:setReferenceProperties:[getCamelContext(), bean, parameters] @AT@ 11103 @LENGTH@ 59
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 11126 @LENGTH@ 17
------------DEL SimpleName@@bean @AT@ 11145 @LENGTH@ 4
------------DEL SimpleName@@parameters @AT@ 11151 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:EndpointHelper.setProperties(getCamelContext(),bean,parameters) @AT@ 11172 @LENGTH@ 66
------DEL MethodInvocation@@EndpointHelper.setProperties(getCamelContext(),bean,parameters) @AT@ 11172 @LENGTH@ 65
---------DEL SimpleName@@Name:EndpointHelper @AT@ 11172 @LENGTH@ 14
---------DEL SimpleName@@MethodName:setProperties:[getCamelContext(), bean, parameters] @AT@ 11187 @LENGTH@ 50
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 11201 @LENGTH@ 17
------------DEL SimpleName@@bean @AT@ 11220 @LENGTH@ 4
------------DEL SimpleName@@parameters @AT@ 11226 @LENGTH@ 10


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2903 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2919 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2926 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2934 @LENGTH@ 10


UPD ReturnStatement@@ClassInstanceCreation:new AuthorizationResult(AuthorizationResult.Decision.DENY,new ModelNode("Permission denied")) @TO@ ClassInstanceCreation:new AuthorizationResult(AuthorizationResult.Decision.DENY,new ModelNode(ControllerMessages.MESSAGES.permissionDenied())) @AT@ 5007 @LENGTH@ 102
---UPD ClassInstanceCreation@@AuthorizationResult[AuthorizationResult.Decision.DENY, new ModelNode("Permission denied")] @TO@ AuthorizationResult[AuthorizationResult.Decision.DENY, new ModelNode(ControllerMessages.MESSAGES.permissionDenied())] @AT@ 5014 @LENGTH@ 94
------UPD ClassInstanceCreation@@ModelNode["Permission denied"] @TO@ ModelNode[ControllerMessages.MESSAGES.permissionDenied()] @AT@ 5073 @LENGTH@ 34
---------DEL StringLiteral@@"Permission denied" @AT@ 5087 @LENGTH@ 19
---------INS MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @TO@ ClassInstanceCreation@@ModelNode["Permission denied"] @AT@ 5108 @LENGTH@ 46
------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @AT@ 5108 @LENGTH@ 27
------------INS SimpleName@@MethodName:permissionDenied:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @AT@ 5136 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @TO@ MethodInvocation:mock.expectedMessageCount(3) @AT@ 2024 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(1) @TO@ mock.expectedMessageCount(3) @AT@ 2024 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMessageCount:[3] @AT@ 2029 @LENGTH@ 23
---------UPD NumberLiteral@@1 @TO@ 3 @AT@ 2050 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:Thread.sleep(WAIT_2) @AT@ 7074 @LENGTH@ 21
---DEL MethodInvocation@@Thread.sleep(WAIT_2) @AT@ 7074 @LENGTH@ 20
------DEL SimpleName@@Name:Thread @AT@ 7074 @LENGTH@ 6
------DEL SimpleName@@MethodName:sleep:[WAIT_2] @AT@ 7081 @LENGTH@ 13
---------DEL SimpleName@@WAIT_2 @AT@ 7087 @LENGTH@ 6


UPD Block@@ElseBody:{  log.trace("This exchange is not handled or continued so its marked as failed: {}",exchange);  exchange.setProperty(Exchange.ERRORHANDLER_HANDLED,Boolean.FALSE);  exchange.setException(exchange.getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class));  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  if (exchange.getUnitOfWork().getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());  }} @TO@ ElseBody:{  log.trace("This exchange is not handled or continued so its marked as failed: {}",exchange);  exchange.setProperty(Exchange.ERRORHANDLER_HANDLED,Boolean.FALSE);  exchange.setException(exchange.getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class));  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  UnitOfWork uow=exchange.getUnitOfWork();  if (uow != null && uow.getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());  }} @AT@ 41753 @LENGTH@ 815
---UPD IfStatement@@if (exchange.getUnitOfWork().getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @TO@ if (uow != null && uow.getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());} @AT@ 42359 @LENGTH@ 199
------DEL InfixExpression@@exchange.getUnitOfWork().getRouteContext() != null @AT@ 42363 @LENGTH@ 50
------UPD Block@@ThenBody:{  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @TO@ ThenBody:{  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId());} @AT@ 42415 @LENGTH@ 143
---------UPD ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId()) @TO@ MethodInvocation:exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId()) @AT@ 42433 @LENGTH@ 111
------------UPD MethodInvocation@@exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId()) @TO@ exchange.setProperty(Exchange.FAILURE_ROUTE_ID,uow.getRouteContext().getRoute().getId()) @AT@ 42433 @LENGTH@ 110
---------------UPD SimpleName@@MethodName:setProperty:[Exchange.FAILURE_ROUTE_ID, exchange.getUnitOfWork().getRouteContext().getRoute().getId()] @TO@ MethodName:setProperty:[Exchange.FAILURE_ROUTE_ID, uow.getRouteContext().getRoute().getId()] @AT@ 42442 @LENGTH@ 101
------------------UPD MethodInvocation@@exchange.getUnitOfWork().getRouteContext().getRoute().getId() @TO@ uow.getRouteContext().getRoute().getId() @AT@ 42481 @LENGTH@ 61
---------------------DEL MethodInvocation@@MethodName:getUnitOfWork:[] @AT@ 42481 @LENGTH@ 24
---------------------UPD SimpleName@@Name:exchange @TO@ Name:uow @AT@ 42481 @LENGTH@ 8
------INS InfixExpression@@uow != null && uow.getRouteContext() != null @TO@ IfStatement@@if (exchange.getUnitOfWork().getRouteContext() != null) {  exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());} @AT@ 42418 @LENGTH@ 44
---------INS InfixExpression@@uow != null @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 42418 @LENGTH@ 11
------------INS SimpleName@@uow @TO@ InfixExpression@@uow != null @AT@ 42418 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@uow != null @AT@ 42421 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@uow != null @AT@ 42425 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 42429 @LENGTH@ 2
---------INS InfixExpression@@uow.getRouteContext() != null @TO@ InfixExpression@@uow != null && uow.getRouteContext() != null @AT@ 42433 @LENGTH@ 29
------------MOV MethodInvocation@@exchange.getUnitOfWork().getRouteContext() @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42363 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getUnitOfWork:[] @AT@ 42363 @LENGTH@ 24
---------------UPD SimpleName@@Name:exchange @TO@ Name:uow @AT@ 42363 @LENGTH@ 8
------------MOV MethodInvocation@@exchange.getUnitOfWork().getRouteContext() @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42363 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getUnitOfWork:[] @AT@ 42363 @LENGTH@ 24
---------------UPD SimpleName@@Name:exchange @TO@ Name:uow @AT@ 42363 @LENGTH@ 8
------------MOV Operator@@!= @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42405 @LENGTH@ 2
------------MOV Operator@@!= @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42405 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42409 @LENGTH@ 4
------------MOV NullLiteral@@null @TO@ InfixExpression@@uow.getRouteContext() != null @AT@ 42409 @LENGTH@ 4
---INS VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @TO@ Block@@ElseBody:{  log.trace("This exchange is not handled or continued so its marked as failed: {}",exchange);  exchange.setProperty(Exchange.ERRORHANDLER_HANDLED,Boolean.FALSE);  exchange.setException(exchange.getProperty(Exchange.EXCEPTION_CAUGHT,Exception.class));  exchange.setProperty(Exchange.FAILURE_ENDPOINT,exchange.getProperty(Exchange.TO_ENDPOINT));  if (exchange.getUnitOfWork().getRouteContext() != null) {    exchange.setProperty(Exchange.FAILURE_ROUTE_ID,exchange.getUnitOfWork().getRouteContext().getRoute().getId());  }} @AT@ 42359 @LENGTH@ 42
------INS SimpleType@@UnitOfWork @TO@ VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @AT@ 42359 @LENGTH@ 10
------INS VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @TO@ VariableDeclarationStatement@@UnitOfWork uow=exchange.getUnitOfWork(); @AT@ 42370 @LENGTH@ 30
---------INS SimpleName@@uow @TO@ VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @AT@ 42370 @LENGTH@ 3
---------INS MethodInvocation@@exchange.getUnitOfWork() @TO@ VariableDeclarationFragment@@uow=exchange.getUnitOfWork() @AT@ 42376 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 42376 @LENGTH@ 8
------------INS SimpleName@@MethodName:getUnitOfWork:[] @TO@ MethodInvocation@@exchange.getUnitOfWork() @AT@ 42385 @LENGTH@ 15


UPD VariableDeclarationStatement@@final ResourceMetadata metadata=mappings.getMappingFor(persistentEntity.getClass()); @TO@ final ResourceMetadata metadata=mappings.getMappingFor(persistentEntity.getType()); @AT@ 3073 @LENGTH@ 86
---UPD VariableDeclarationFragment@@metadata=mappings.getMappingFor(persistentEntity.getClass()) @TO@ metadata=mappings.getMappingFor(persistentEntity.getType()) @AT@ 3096 @LENGTH@ 62
------UPD MethodInvocation@@mappings.getMappingFor(persistentEntity.getClass()) @TO@ mappings.getMappingFor(persistentEntity.getType()) @AT@ 3107 @LENGTH@ 51
---------UPD SimpleName@@MethodName:getMappingFor:[persistentEntity.getClass()] @TO@ MethodName:getMappingFor:[persistentEntity.getType()] @AT@ 3116 @LENGTH@ 42
------------UPD MethodInvocation@@persistentEntity.getClass() @TO@ persistentEntity.getType() @AT@ 3130 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:getType:[] @AT@ 3147 @LENGTH@ 10


UPD VariableDeclarationStatement@@CreateChildContainerOptions options=CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").number(1).build(); @TO@ CreateChildContainerOptions options=CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").build(); @AT@ 4568 @LENGTH@ 162
---UPD VariableDeclarationFragment@@options=CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").number(1).build() @TO@ options=CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").build() @AT@ 4596 @LENGTH@ 133
------UPD MethodInvocation@@CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").number(1).build() @TO@ CreateContainerOptionsBuilder.child().jmxUser(userName).jmxPassword(password).name("test").parent("root").build() @AT@ 4606 @LENGTH@ 123
---------DEL MethodInvocation@@MethodName:number:[1] @AT@ 4606 @LENGTH@ 115
------------DEL NumberLiteral@@1 @AT@ 4719 @LENGTH@ 1


UPD FieldDeclaration@@private, boolean, [allowNullOldExchange=false] @TO@ private, boolean, [allowNullOldExchange] @AT@ 1791 @LENGTH@ 45
---UPD VariableDeclarationFragment@@allowNullOldExchange=false @TO@ allowNullOldExchange @AT@ 1807 @LENGTH@ 28
------DEL BooleanLiteral@@false @AT@ 1830 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertTrue(slot.isActive()) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculus, Exception,  @AT@ 3580 @LENGTH@ 28
---INS MethodInvocation@@assertTrue(slot.isActive()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(slot.isActive()) @AT@ 3580 @LENGTH@ 27
------INS SimpleName@@MethodName:assertTrue:[slot.isActive()] @TO@ MethodInvocation@@assertTrue(slot.isActive()) @AT@ 3580 @LENGTH@ 27
---------INS MethodInvocation@@slot.isActive() @TO@ SimpleName@@MethodName:assertTrue:[slot.isActive()] @AT@ 3591 @LENGTH@ 15
------------INS SimpleName@@Name:slot @TO@ MethodInvocation@@slot.isActive() @AT@ 3591 @LENGTH@ 4
------------INS SimpleName@@MethodName:isActive:[] @TO@ MethodInvocation@@slot.isActive() @AT@ 3596 @LENGTH@ 10


UPD IfStatement@@if (clientId != null) {  if (!tokenRequest.getClientId().equals(clientId)) {    throw new InvalidClientException("Given client ID does not match authenticated client");  }  if (authenticatedClient != null) {    oAuth2RequestValidator.validateScope(tokenRequest,authenticatedClient);  }} @TO@ if (clientId != null && !clientId.equals("")) {  if (!clientId.equals(tokenRequest.getClientId())) {    throw new InvalidClientException("Given client ID does not match authenticated client");  }  if (authenticatedClient != null) {    oAuth2RequestValidator.validateScope(tokenRequest,authenticatedClient);  }} @AT@ 3907 @LENGTH@ 513
---INS InfixExpression@@clientId != null && !clientId.equals("") @TO@ IfStatement@@if (clientId != null) {  if (!tokenRequest.getClientId().equals(clientId)) {    throw new InvalidClientException("Given client ID does not match authenticated client");  }  if (authenticatedClient != null) {    oAuth2RequestValidator.validateScope(tokenRequest,authenticatedClient);  }} @AT@ 3911 @LENGTH@ 40
------INS InfixExpression@@clientId != null @TO@ InfixExpression@@clientId != null && !clientId.equals("") @AT@ 3911 @LENGTH@ 16
---------MOV SimpleName@@clientId @TO@ InfixExpression@@clientId != null @AT@ 3911 @LENGTH@ 8
---------MOV Operator@@!= @TO@ InfixExpression@@clientId != null @AT@ 3919 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@clientId != null @AT@ 3923 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@clientId != null && !clientId.equals("") @AT@ 3927 @LENGTH@ 2
------INS PrefixExpression@@!clientId.equals("") @TO@ InfixExpression@@clientId != null && !clientId.equals("") @AT@ 3931 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!clientId.equals("") @AT@ 3931 @LENGTH@ 1
---------INS MethodInvocation@@clientId.equals("") @TO@ PrefixExpression@@!clientId.equals("") @AT@ 3932 @LENGTH@ 19
------------INS SimpleName@@Name:clientId @TO@ MethodInvocation@@clientId.equals("") @AT@ 3932 @LENGTH@ 8
------------INS SimpleName@@MethodName:equals:[""] @TO@ MethodInvocation@@clientId.equals("") @AT@ 3941 @LENGTH@ 10
---------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:equals:[""] @AT@ 3948 @LENGTH@ 2
---DEL InfixExpression@@clientId != null @AT@ 3911 @LENGTH@ 16
---UPD Block@@ThenBody:{  if (!tokenRequest.getClientId().equals(clientId)) {    throw new InvalidClientException("Given client ID does not match authenticated client");  }  if (authenticatedClient != null) {    oAuth2RequestValidator.validateScope(tokenRequest,authenticatedClient);  }} @TO@ ThenBody:{  if (!clientId.equals(tokenRequest.getClientId())) {    throw new InvalidClientException("Given client ID does not match authenticated client");  }  if (authenticatedClient != null) {    oAuth2RequestValidator.validateScope(tokenRequest,authenticatedClient);  }} @AT@ 3929 @LENGTH@ 491
------UPD IfStatement@@if (!tokenRequest.getClientId().equals(clientId)) {  throw new InvalidClientException("Given client ID does not match authenticated client");} @TO@ if (!clientId.equals(tokenRequest.getClientId())) {  throw new InvalidClientException("Given client ID does not match authenticated client");} @AT@ 4026 @LENGTH@ 270
---------UPD PrefixExpression@@!tokenRequest.getClientId().equals(clientId) @TO@ !clientId.equals(tokenRequest.getClientId()) @AT@ 4030 @LENGTH@ 44
------------UPD MethodInvocation@@tokenRequest.getClientId().equals(clientId) @TO@ clientId.equals(tokenRequest.getClientId()) @AT@ 4031 @LENGTH@ 43
---------------DEL MethodInvocation@@MethodName:getClientId:[] @AT@ 4031 @LENGTH@ 26
---------------UPD SimpleName@@Name:tokenRequest @TO@ Name:clientId @AT@ 4031 @LENGTH@ 12
---------------UPD SimpleName@@MethodName:equals:[clientId] @TO@ MethodName:equals:[tokenRequest.getClientId()] @AT@ 4058 @LENGTH@ 16
------------------DEL SimpleName@@clientId @AT@ 4065 @LENGTH@ 8
------------------INS MethodInvocation@@tokenRequest.getClientId() @TO@ SimpleName@@MethodName:equals:[clientId] @AT@ 4071 @LENGTH@ 26
---------------------INS SimpleName@@Name:tokenRequest @TO@ MethodInvocation@@tokenRequest.getClientId() @AT@ 4071 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@tokenRequest.getClientId() @AT@ 4084 @LENGTH@ 13


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2088 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2104 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2111 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2119 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:verifyResults(new ArrayList<Object>(Collections.singletonList(26l)),actual) @TO@ MethodInvocation:verifyResults(new ArrayList<Object>(Collections.singletonList(6l)),actual) @AT@ 13871 @LENGTH@ 77
---UPD MethodInvocation@@verifyResults(new ArrayList<Object>(Collections.singletonList(26l)),actual) @TO@ verifyResults(new ArrayList<Object>(Collections.singletonList(6l)),actual) @AT@ 13871 @LENGTH@ 76
------UPD SimpleName@@MethodName:verifyResults:[new ArrayList<Object>(Collections.singletonList(26l)), actual] @TO@ MethodName:verifyResults:[new ArrayList<Object>(Collections.singletonList(6l)), actual] @AT@ 13871 @LENGTH@ 76
---------UPD ClassInstanceCreation@@ArrayList<Object>[Collections.singletonList(26l)] @TO@ ArrayList<Object>[Collections.singletonList(6l)] @AT@ 13885 @LENGTH@ 53
------------UPD MethodInvocation@@Collections.singletonList(26l) @TO@ Collections.singletonList(6l) @AT@ 13907 @LENGTH@ 30
---------------UPD SimpleName@@MethodName:singletonList:[26l] @TO@ MethodName:singletonList:[6l] @AT@ 13919 @LENGTH@ 18
------------------UPD NumberLiteral@@26l @TO@ 6l @AT@ 13933 @LENGTH@ 3


INS FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @TO@ TypeDeclaration@@[public, final]WSAttachmentKeys,  @AT@ 2828 @LENGTH@ 107
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @AT@ 2828 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @AT@ 2835 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @AT@ 2842 @LENGTH@ 5
---INS ParameterizedType@@AttachmentKey<WSRefRegistry> @TO@ FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @AT@ 2848 @LENGTH@ 28
------INS SimpleType@@AttachmentKey @TO@ ParameterizedType@@AttachmentKey<WSRefRegistry> @AT@ 2848 @LENGTH@ 13
------INS SimpleType@@WSRefRegistry @TO@ ParameterizedType@@AttachmentKey<WSRefRegistry> @AT@ 2862 @LENGTH@ 13
---INS VariableDeclarationFragment@@WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class) @TO@ FieldDeclaration@@public, static, final, AttachmentKey<WSRefRegistry>, [WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class)] @AT@ 2877 @LENGTH@ 57
------INS SimpleName@@WS_REFERENCES @TO@ VariableDeclarationFragment@@WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class) @AT@ 2877 @LENGTH@ 13
------INS MethodInvocation@@AttachmentKey.create(WSRefRegistry.class) @TO@ VariableDeclarationFragment@@WS_REFERENCES=AttachmentKey.create(WSRefRegistry.class) @AT@ 2893 @LENGTH@ 41
---------INS SimpleName@@Name:AttachmentKey @TO@ MethodInvocation@@AttachmentKey.create(WSRefRegistry.class) @AT@ 2893 @LENGTH@ 13
---------INS SimpleName@@MethodName:create:[WSRefRegistry.class] @TO@ MethodInvocation@@AttachmentKey.create(WSRefRegistry.class) @AT@ 2907 @LENGTH@ 27
------------INS TypeLiteral@@WSRefRegistry.class @TO@ SimpleName@@MethodName:create:[WSRefRegistry.class] @AT@ 2914 @LENGTH@ 19


UPD IfStatement@@if (newValue.asBoolean() == false) {  RbacSanityCheckOperation.registerOperation(context);} @TO@ if (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2261 @LENGTH@ 323
---DEL InfixExpression@@newValue.asBoolean() == false @AT@ 2265 @LENGTH@ 29
---INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @TO@ IfStatement@@if (newValue.asBoolean() == false) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2321 @LENGTH@ 80
------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2321 @LENGTH@ 42
---------INS MethodInvocation@@newValue.getType() @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2321 @LENGTH@ 18
------------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.getType() @AT@ 2321 @LENGTH@ 8
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@newValue.getType() @AT@ 2330 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2339 @LENGTH@ 2
---------INS QualifiedName@@ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2343 @LENGTH@ 20
------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2343 @LENGTH@ 9
------------INS SimpleName@@EXPRESSION @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2353 @LENGTH@ 10
------INS Operator@@|| @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2363 @LENGTH@ 2
------INS InfixExpression@@newValue.asBoolean(false) == false @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2367 @LENGTH@ 34
---------MOV MethodInvocation@@newValue.asBoolean() @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2265 @LENGTH@ 20
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 2274 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 2386 @LENGTH@ 5
---------MOV Operator@@== @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2285 @LENGTH@ 2
---------MOV BooleanLiteral@@false @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2289 @LENGTH@ 5


UPD TypeDeclaration@@[public]MasterEndpointFailoverTest,  @TO@ [@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]MasterEndpointFailoverTest,  @AT@ 1347 @LENGTH@ 4080
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @TO@ TypeDeclaration@@[public]MasterEndpointFailoverTest,  @AT@ 1372 @LENGTH@ 53


UPD TypeDeclaration@@[public]ZkManagedGatewayServiceFactoryTest, AbstractConnectorTestSupport @TO@ [@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests"), public]ZkManagedGatewayServiceFactoryTest, AbstractConnectorTestSupport @AT@ 1597 @LENGTH@ 5083
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests") @TO@ TypeDeclaration@@[public]ZkManagedGatewayServiceFactoryTest, AbstractConnectorTestSupport @AT@ 1598 @LENGTH@ 57


INS MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @TO@ TypeDeclaration@@[public]AggregationResults, [Iterable<T>] @AT@ 2002 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @AT@ 2002 @LENGTH@ 6
---INS SimpleType@@T @TO@ MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @AT@ 2009 @LENGTH@ 1
---INS SimpleName@@MethodName:getUniqueMappedResult @TO@ MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @AT@ 2011 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:Assert.isTrue(mappedResults.size() < 2,"Expected unique result or null, but got more than one!") @TO@ MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @AT@ 2039 @LENGTH@ 98
------INS MethodInvocation@@Assert.isTrue(mappedResults.size() < 2,"Expected unique result or null, but got more than one!") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(mappedResults.size() < 2,"Expected unique result or null, but got more than one!") @AT@ 2039 @LENGTH@ 97
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(mappedResults.size() < 2,"Expected unique result or null, but got more than one!") @AT@ 2039 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[mappedResults.size() < 2, "Expected unique result or null, but got more than one!"] @TO@ MethodInvocation@@Assert.isTrue(mappedResults.size() < 2,"Expected unique result or null, but got more than one!") @AT@ 2046 @LENGTH@ 90
------------INS InfixExpression@@mappedResults.size() < 2 @TO@ SimpleName@@MethodName:isTrue:[mappedResults.size() < 2, "Expected unique result or null, but got more than one!"] @AT@ 2053 @LENGTH@ 24
---------------INS MethodInvocation@@mappedResults.size() @TO@ InfixExpression@@mappedResults.size() < 2 @AT@ 2053 @LENGTH@ 20
------------------INS SimpleName@@Name:mappedResults @TO@ MethodInvocation@@mappedResults.size() @AT@ 2053 @LENGTH@ 13
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@mappedResults.size() @AT@ 2067 @LENGTH@ 6
---------------INS Operator@@< @TO@ InfixExpression@@mappedResults.size() < 2 @AT@ 2073 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@mappedResults.size() < 2 @AT@ 2076 @LENGTH@ 1
------------INS StringLiteral@@"Expected unique result or null, but got more than one!" @TO@ SimpleName@@MethodName:isTrue:[mappedResults.size() < 2, "Expected unique result or null, but got more than one!"] @AT@ 2079 @LENGTH@ 56
---INS ReturnStatement@@ConditionalExpression:mappedResults.size() == 1 ? mappedResults.get(0) : null @TO@ MethodDeclaration@@public, T, MethodName:getUniqueMappedResult,  @AT@ 2140 @LENGTH@ 63
------INS ConditionalExpression@@mappedResults.size() == 1 ? mappedResults.get(0) : null @TO@ ReturnStatement@@ConditionalExpression:mappedResults.size() == 1 ? mappedResults.get(0) : null @AT@ 2147 @LENGTH@ 55
---------INS InfixExpression@@mappedResults.size() == 1 @TO@ ConditionalExpression@@mappedResults.size() == 1 ? mappedResults.get(0) : null @AT@ 2147 @LENGTH@ 25
------------INS MethodInvocation@@mappedResults.size() @TO@ InfixExpression@@mappedResults.size() == 1 @AT@ 2147 @LENGTH@ 20
---------------INS SimpleName@@Name:mappedResults @TO@ MethodInvocation@@mappedResults.size() @AT@ 2147 @LENGTH@ 13
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@mappedResults.size() @AT@ 2161 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@mappedResults.size() == 1 @AT@ 2167 @LENGTH@ 2
------------INS NumberLiteral@@1 @TO@ InfixExpression@@mappedResults.size() == 1 @AT@ 2171 @LENGTH@ 1
---------INS MethodInvocation@@mappedResults.get(0) @TO@ ConditionalExpression@@mappedResults.size() == 1 ? mappedResults.get(0) : null @AT@ 2175 @LENGTH@ 20
------------INS SimpleName@@Name:mappedResults @TO@ MethodInvocation@@mappedResults.get(0) @AT@ 2175 @LENGTH@ 13
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@mappedResults.get(0) @AT@ 2189 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 2193 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ ConditionalExpression@@mappedResults.size() == 1 ? mappedResults.get(0) : null @AT@ 2198 @LENGTH@ 4


INS IfStatement@@if (attributeService == null) {  return null;} @TO@ MethodDeclaration@@public, EJBMethodSecurityAttribute, MethodName:getSecurityAttributes, final Method viewMethod,  @AT@ 1935 @LENGTH@ 66
---INS InfixExpression@@attributeService == null @TO@ IfStatement@@if (attributeService == null) {  return null;} @AT@ 1939 @LENGTH@ 24
------INS SimpleName@@attributeService @TO@ InfixExpression@@attributeService == null @AT@ 1939 @LENGTH@ 16
------INS Operator@@== @TO@ InfixExpression@@attributeService == null @AT@ 1955 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@attributeService == null @AT@ 1959 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (attributeService == null) {  return null;} @AT@ 1965 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1979 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1986 @LENGTH@ 4


UPD IfStatement@@if (authorizationResult.getDecision() == AuthorizationResult.Decision.DENY) {  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @TO@ if (authorizationResult.getDecision() == AuthorizationResult.Decision.DENY) {  context.getResult().clear();  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12194 @LENGTH@ 324
---UPD Block@@ThenBody:{  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @TO@ ThenBody:{  context.getResult().clear();  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12270 @LENGTH@ 248
------INS ExpressionStatement@@MethodInvocation:context.getResult().clear() @TO@ Block@@ThenBody:{  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12288 @LENGTH@ 28
---------INS MethodInvocation@@context.getResult().clear() @TO@ ExpressionStatement@@MethodInvocation:context.getResult().clear() @AT@ 12288 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12288 @LENGTH@ 19
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12288 @LENGTH@ 7
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12308 @LENGTH@ 7


INS MethodDeclaration@@private, voidMethodName:RouteContextRefDefinitionHelper,  @TO@ TypeDeclaration@@[public, final]RouteContextRefDefinitionHelper,  @AT@ 1537 @LENGTH@ 49
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:RouteContextRefDefinitionHelper,  @AT@ 1537 @LENGTH@ 7
---INS SimpleName@@MethodName:RouteContextRefDefinitionHelper @TO@ MethodDeclaration@@private, voidMethodName:RouteContextRefDefinitionHelper,  @AT@ 1545 @LENGTH@ 31


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CreateChildContainerTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]CreateChildContainerTest, FabricTestSupport @AT@ 1726 @LENGTH@ 3673
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CreateChildContainerTest, FabricTestSupport @AT@ 1819 @LENGTH@ 49


UPD VariableDeclarationStatement@@int nextByte=in.readUnsignedByte(); @TO@ long nextByte=in.readUnsignedByte(); @AT@ 37687 @LENGTH@ 37
---UPD PrimitiveType@@int @TO@ long @AT@ 37687 @LENGTH@ 3


UPD VariableDeclarationStatement@@List<ManagedListener> list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)))); @TO@ List<ManagedListener> list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)),false)); @AT@ 5499 @LENGTH@ 279
---UPD VariableDeclarationFragment@@list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)))) @TO@ list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)),false)) @AT@ 5521 @LENGTH@ 256
------UPD MethodInvocation@@Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)))) @TO@ Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)),false)) @AT@ 5528 @LENGTH@ 249
---------UPD SimpleName@@MethodName:asList:[new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))), new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)))] @TO@ MethodName:asList:[new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1)),false), new ManagedListener(new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)),false)] @AT@ 5535 @LENGTH@ 242
------------UPD ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))] @TO@ ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1)), false] @AT@ 5542 @LENGTH@ 116
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener1))] @AT@ 5593 @LENGTH@ 5
------------UPD ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2))] @TO@ ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2)), false] @AT@ 5660 @LENGTH@ 116
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionAttributeListener.class,new ImmediateInstanceFactory<>(listener2))] @AT@ 5718 @LENGTH@ 5


UPD TryStatement@@try {  J4pExecRequest request=createExecRequest(operation,args);  J4pExecResponse response=j4p.execute(request);  System.out.println(response.getValue().toString());  return response.getValue();} catch (Exception e) {  throw new RuntimeException("Failed to call " + operation + " with args: "+ args,e);} @TO@ try {  J4pExecRequest request=createExecRequest(operation,args);  J4pExecResponse response=j4p.execute(request);  return response.getValue();} catch (Exception e) {  throw new RuntimeException("Failed to call " + operation + " with args: "+ args,e);} @AT@ 2701 @LENGTH@ 383
---DEL ExpressionStatement@@MethodInvocation:System.out.println(response.getValue().toString()) @AT@ 2853 @LENGTH@ 51
------DEL MethodInvocation@@System.out.println(response.getValue().toString()) @AT@ 2853 @LENGTH@ 50
---------DEL QualifiedName@@Name:System.out @AT@ 2853 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:[response.getValue().toString()] @AT@ 2864 @LENGTH@ 39
------------DEL MethodInvocation@@response.getValue().toString() @AT@ 2872 @LENGTH@ 30
---------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 2872 @LENGTH@ 19
---------------DEL SimpleName@@Name:response @AT@ 2872 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 2892 @LENGTH@ 10


UPD IfStatement@@if (options != null && options.getUsers() != null) {  for (  Map.Entry<String,String> entry : options.getUsers().entrySet()) {    appendFile(sb,"etc/users.properties",Arrays.asList(entry.getKey() + "=" + entry.getValue()));  }} @TO@ if (options != null && options.getUsers() != null) {  appendFile(sb,"etc/users.properties",Arrays.asList("\n"));  for (  Map.Entry<String,String> entry : options.getUsers().entrySet()) {    appendFile(sb,"etc/users.properties",Arrays.asList(entry.getKey() + "=" + entry.getValue()));  }} @AT@ 10371 @LENGTH@ 288
---UPD Block@@ThenBody:{  for (  Map.Entry<String,String> entry : options.getUsers().entrySet()) {    appendFile(sb,"etc/users.properties",Arrays.asList(entry.getKey() + "=" + entry.getValue()));  }} @TO@ ThenBody:{  appendFile(sb,"etc/users.properties",Arrays.asList("\n"));  for (  Map.Entry<String,String> entry : options.getUsers().entrySet()) {    appendFile(sb,"etc/users.properties",Arrays.asList(entry.getKey() + "=" + entry.getValue()));  }} @AT@ 10422 @LENGTH@ 237
------INS ExpressionStatement@@MethodInvocation:appendFile(sb,"etc/users.properties",Arrays.asList("\n")) @TO@ Block@@ThenBody:{  for (  Map.Entry<String,String> entry : options.getUsers().entrySet()) {    appendFile(sb,"etc/users.properties",Arrays.asList(entry.getKey() + "=" + entry.getValue()));  }} @AT@ 10440 @LENGTH@ 61
---------INS MethodInvocation@@appendFile(sb,"etc/users.properties",Arrays.asList("\n")) @TO@ ExpressionStatement@@MethodInvocation:appendFile(sb,"etc/users.properties",Arrays.asList("\n")) @AT@ 10440 @LENGTH@ 60
------------INS SimpleName@@MethodName:appendFile:[sb, "etc/users.properties", Arrays.asList("\n")] @TO@ MethodInvocation@@appendFile(sb,"etc/users.properties",Arrays.asList("\n")) @AT@ 10440 @LENGTH@ 60
---------------INS SimpleName@@sb @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/users.properties", Arrays.asList("\n")] @AT@ 10451 @LENGTH@ 2
---------------INS StringLiteral@@"etc/users.properties" @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/users.properties", Arrays.asList("\n")] @AT@ 10455 @LENGTH@ 22
---------------INS MethodInvocation@@Arrays.asList("\n") @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/users.properties", Arrays.asList("\n")] @AT@ 10480 @LENGTH@ 19
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("\n") @AT@ 10480 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:["\n"] @TO@ MethodInvocation@@Arrays.asList("\n") @AT@ 10487 @LENGTH@ 12
---------------------INS StringLiteral@@"\n" @TO@ SimpleName@@MethodName:asList:["\n"] @AT@ 10494 @LENGTH@ 4


INS IfStatement@@if (data == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:getSubstitutedData, final CuratorFramework curator, String data, URISyntaxException,  @AT@ 14334 @LENGTH@ 54
---INS InfixExpression@@data == null @TO@ IfStatement@@if (data == null) {  return null;} @AT@ 14338 @LENGTH@ 12
------INS SimpleName@@data @TO@ InfixExpression@@data == null @AT@ 14338 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@data == null @AT@ 14342 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@data == null @AT@ 14346 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (data == null) {  return null;} @AT@ 14352 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 14366 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 14373 @LENGTH@ 4


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResponse,  @AT@ 35294 @LENGTH@ 3601
---UPD ExpressionStatement@@MethodInvocation:op.get(OP).set(ReadResourceHandler.DEFINITION.getName()) @TO@ MethodInvocation:op.get(OP).set(isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS) @AT@ 35411 @LENGTH@ 57
------UPD MethodInvocation@@op.get(OP).set(ReadResourceHandler.DEFINITION.getName()) @TO@ op.get(OP).set(isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS) @AT@ 35411 @LENGTH@ 56
---------UPD SimpleName@@MethodName:set:[ReadResourceHandler.DEFINITION.getName()] @TO@ MethodName:set:[isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS] @AT@ 35422 @LENGTH@ 45
------------DEL MethodInvocation@@ReadResourceHandler.DEFINITION.getName() @AT@ 35426 @LENGTH@ 40
---------------DEL QualifiedName@@Name:ReadResourceHandler.DEFINITION @AT@ 35426 @LENGTH@ 30
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 35457 @LENGTH@ 9
------------INS ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @TO@ SimpleName@@MethodName:set:[ReadResourceHandler.DEFINITION.getName()] @AT@ 35527 @LENGTH@ 121
---------------INS SimpleName@@isDefaultResponse @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35527 @LENGTH@ 17
---------------INS QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35547 @LENGTH@ 53
------------------INS SimpleName@@GlobalOperationHandlers @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @AT@ 35547 @LENGTH@ 23
------------------INS SimpleName@@CHECK_DEFAULT_RESOURCE_ACCESS @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @AT@ 35571 @LENGTH@ 29
---------------INS QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35603 @LENGTH@ 45
------------------INS SimpleName@@GlobalOperationHandlers @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35603 @LENGTH@ 23
------------------INS SimpleName@@CHECK_RESOURCE_ACCESS @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35627 @LENGTH@ 21
---INS SingleVariableDeclaration@@boolean isDefaultResponse @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 35435 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 35435 @LENGTH@ 7
------INS SimpleName@@isDefaultResponse @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 35443 @LENGTH@ 17
---UPD IfStatement@@if (attributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @TO@ if (attributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @AT@ 37122 @LENGTH@ 1741
------UPD Block@@ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @TO@ ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @AT@ 37138 @LENGTH@ 1725
---------UPD IfStatement@@if (!authResp.attributesComplete) {  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @TO@ if (!authResp.attributesComplete) {  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @AT@ 37261 @LENGTH@ 1592
------------UPD Block@@ThenBody:{  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @TO@ ThenBody:{  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @AT@ 37295 @LENGTH@ 1558
---------------UPD EnhancedForStatement@@for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  TargetAttribute targetAttribute=null;  if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr);    }    Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);    authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));  }  for (  Action.ActionEffect actionEffect : ALL) {    AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);    if (authResult == null) {      Action action=authResp.standardAction.limitAction(actionEffect);      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);      authResp.addAttributeResult(attr,actionEffect,authResult);    }  }} @TO@ for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  TargetAttribute targetAttribute=null;  if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);    }    Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);    authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));  }  for (  Action.ActionEffect actionEffect : ALL) {    AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);    if (authResult == null) {      Action action=authResp.standardAction.limitAction(actionEffect);      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);      authResp.addAttributeResult(attr,actionEffect,authResult);    }  }} @AT@ 37313 @LENGTH@ 1474
------------------UPD IfStatement@@if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @TO@ if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @AT@ 37464 @LENGTH@ 533
---------------------UPD Block@@ThenBody:{  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @TO@ ThenBody:{  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @AT@ 37532 @LENGTH@ 465
------------------------UPD IfStatement@@if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 37558 @LENGTH@ 141
---------------------------UPD Block@@ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 37587 @LENGTH@ 112
------------------------------UPD ExpressionStatement@@Assignment:targetAttribute=createTargetAttribute(authResp,attr) @TO@ Assignment:targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37617 @LENGTH@ 56
---------------------------------UPD Assignment@@targetAttribute=createTargetAttribute(authResp,attr) @TO@ targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37617 @LENGTH@ 55
------------------------------------UPD MethodInvocation@@createTargetAttribute(authResp,attr) @TO@ createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37635 @LENGTH@ 37
---------------------------------------UPD SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @TO@ MethodName:createTargetAttribute:[authResp, attr, isDefaultResponse] @AT@ 37635 @LENGTH@ 37
------------------------------------------INS SimpleName@@isDefaultResponse @TO@ SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @AT@ 37855 @LENGTH@ 17
------------------UPD EnhancedForStatement@@for (Action.ActionEffect actionEffect : ALL) {  AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);  if (authResult == null) {    Action action=authResp.standardAction.limitAction(actionEffect);    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr);    }    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);    authResp.addAttributeResult(attr,actionEffect,authResult);  }} @TO@ for (Action.ActionEffect actionEffect : ALL) {  AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);  if (authResult == null) {    Action action=authResp.standardAction.limitAction(actionEffect);    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);    }    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);    authResp.addAttributeResult(attr,actionEffect,authResult);  }} @AT@ 38018 @LENGTH@ 751
---------------------UPD IfStatement@@if (authResult == null) {  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @TO@ if (authResult == null) {  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @AT@ 38195 @LENGTH@ 552
------------------------UPD Block@@ThenBody:{  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @TO@ ThenBody:{  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @AT@ 38219 @LENGTH@ 528
---------------------------UPD IfStatement@@if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 38344 @LENGTH@ 149
------------------------------UPD Block@@ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 38373 @LENGTH@ 120
---------------------------------UPD ExpressionStatement@@Assignment:targetAttribute=createTargetAttribute(authResp,attr) @TO@ Assignment:targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38407 @LENGTH@ 56
------------------------------------UPD Assignment@@targetAttribute=createTargetAttribute(authResp,attr) @TO@ targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38407 @LENGTH@ 55
---------------------------------------UPD MethodInvocation@@createTargetAttribute(authResp,attr) @TO@ createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38425 @LENGTH@ 37
------------------------------------------UPD SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @TO@ MethodName:createTargetAttribute:[authResp, attr, isDefaultResponse] @AT@ 38425 @LENGTH@ 37
---------------------------------------------INS SimpleName@@isDefaultResponse @TO@ SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @AT@ 38664 @LENGTH@ 17


UPD FieldDeclaration@@public, static, final, Namespace, [CURRENT=JMX_1_2] @TO@ public, static, final, Namespace, [CURRENT=JMX_2_0] @AT@ 1383 @LENGTH@ 48
---UPD VariableDeclarationFragment@@CURRENT=JMX_1_2 @TO@ CURRENT=JMX_2_0 @AT@ 1413 @LENGTH@ 17
------UPD SimpleName@@JMX_1_2 @TO@ JMX_2_0 @AT@ 1423 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]JsonMessageConverterTests,  @AT@ 4336 @LENGTH@ 231
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4336 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4343 @LENGTH@ 4
---INS SimpleName@@MethodName:testAmqp330StringArray @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4348 @LENGTH@ 22
---INS VariableDeclarationStatement@@String[] testData={"test"}; @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4379 @LENGTH@ 29
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] testData={"test"}; @AT@ 4379 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4379 @LENGTH@ 6
------INS VariableDeclarationFragment@@testData={"test"} @TO@ VariableDeclarationStatement@@String[] testData={"test"}; @AT@ 4388 @LENGTH@ 19
---------INS SimpleName@@testData @TO@ VariableDeclarationFragment@@testData={"test"} @AT@ 4388 @LENGTH@ 8
---------INS ArrayInitializer@@{"test"} @TO@ VariableDeclarationFragment@@testData={"test"} @AT@ 4399 @LENGTH@ 8
------------INS StringLiteral@@"test" @TO@ ArrayInitializer@@{"test"} @AT@ 4400 @LENGTH@ 6
---INS VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4413 @LENGTH@ 73
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4413 @LENGTH@ 7
------INS VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4421 @LENGTH@ 64
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4421 @LENGTH@ 7
---------INS MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4431 @LENGTH@ 54
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4431 @LENGTH@ 9
------------INS SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4441 @LENGTH@ 44
---------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4451 @LENGTH@ 8
---------------INS ClassInstanceCreation@@MessageProperties[] @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4461 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4461 @LENGTH@ 3
------------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4465 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4491 @LENGTH@ 71
------INS MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4491 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @TO@ MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4491 @LENGTH@ 70
------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4509 @LENGTH@ 8
------------INS CastExpression@@(Object[])converter.fromMessage(message) @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4519 @LENGTH@ 41
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4520 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4520 @LENGTH@ 6
---------------INS MethodInvocation@@converter.fromMessage(message) @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4530 @LENGTH@ 30
------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4530 @LENGTH@ 9
------------------INS SimpleName@@MethodName:fromMessage:[message] @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4540 @LENGTH@ 20
---------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:fromMessage:[message] @AT@ 4552 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]Input,  @TO@ [public]Input,  @AT@ 1491 @LENGTH@ 1385
---DEL Modifier@@static @AT@ 1498 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq\n"),"MANIFEST.MF") @TO@ MethodInvocation:jar.addAsManifestResource(new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq, org.jboss.dmr\n"),"MANIFEST.MF") @AT@ 2924 @LENGTH@ 133
---UPD MethodInvocation@@jar.addAsManifestResource(new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq\n"),"MANIFEST.MF") @TO@ jar.addAsManifestResource(new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq, org.jboss.dmr\n"),"MANIFEST.MF") @AT@ 2924 @LENGTH@ 132
------UPD SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq\n"), "MANIFEST.MF"] @TO@ MethodName:addAsManifestResource:[new StringAsset("Manifest-Version: 1.0\n" + "Dependencies: org.hornetq, org.jboss.dmr\n"), "MANIFEST.MF"] @AT@ 2928 @LENGTH@ 128
---------UPD ClassInstanceCreation@@StringAsset["Manifest-Version: 1.0\n" + "Dependencies: org.hornetq\n"] @TO@ StringAsset["Manifest-Version: 1.0\n" + "Dependencies: org.hornetq, org.jboss.dmr\n"] @AT@ 2950 @LENGTH@ 90
------------UPD InfixExpression@@"Manifest-Version: 1.0\n" + "Dependencies: org.hornetq\n" @TO@ "Manifest-Version: 1.0\n" + "Dependencies: org.hornetq, org.jboss.dmr\n" @AT@ 2966 @LENGTH@ 73
---------------UPD StringLiteral@@"Dependencies: org.hornetq\n" @TO@ "Dependencies: org.hornetq, org.jboss.dmr\n" @AT@ 3010 @LENGTH@ 29


UPD MethodDeclaration@@public, Exchange, MethodName:createRabbitExchange, Envelope envelope,  @TO@ public, Exchange, MethodName:createRabbitExchange, Envelope envelope, byte[] body,  @AT@ 2145 @LENGTH@ 516
---INS SingleVariableDeclaration@@byte[] body @TO@ MethodDeclaration@@public, Exchange, MethodName:createRabbitExchange, Envelope envelope,  @AT@ 2201 @LENGTH@ 11
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] body @AT@ 2201 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2201 @LENGTH@ 4
------INS SimpleName@@body @TO@ SingleVariableDeclaration@@byte[] body @AT@ 2208 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:message.setBody(body) @TO@ MethodDeclaration@@public, Exchange, MethodName:createRabbitExchange, Envelope envelope,  @AT@ 2651 @LENGTH@ 22
------INS MethodInvocation@@message.setBody(body) @TO@ ExpressionStatement@@MethodInvocation:message.setBody(body) @AT@ 2651 @LENGTH@ 21
---------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setBody(body) @AT@ 2651 @LENGTH@ 7
---------INS SimpleName@@MethodName:setBody:[body] @TO@ MethodInvocation@@message.setBody(body) @AT@ 2659 @LENGTH@ 13
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:setBody:[body] @AT@ 2667 @LENGTH@ 4


UPD CatchClause@@catch (Exception e) {  FabricException.launderThrowable(e);} @TO@ catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 7453 @LENGTH@ 80
---INS ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @TO@ CatchClause@@catch (Exception e) {  FabricException.launderThrowable(e);} @AT@ 7487 @LENGTH@ 42
------MOV MethodInvocation@@FabricException.launderThrowable(e) @TO@ ThrowStatement@@MethodInvocation:FabricException.launderThrowable(e) @AT@ 7487 @LENGTH@ 35
---DEL ExpressionStatement@@MethodInvocation:FabricException.launderThrowable(e) @AT@ 7487 @LENGTH@ 36


UPD IfStatement@@if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @TO@ if (!remoteBranches.containsKey(version)) {  if (!version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    hasChanged=true;  }} else if (!localBranches.containsKey(version)) {  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 40893 @LENGTH@ 1825
---DEL InfixExpression@@!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version) @AT@ 40897 @LENGTH@ 70
------DEL Operator@@&& @AT@ 40927 @LENGTH@ 2
---MOV PrefixExpression@@!remoteBranches.containsKey(version) @TO@ IfStatement@@if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 40931 @LENGTH@ 36
---INS Block@@ThenBody:{  if (!version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    hasChanged=true;  }} @TO@ IfStatement@@if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41028 @LENGTH@ 672
------INS IfStatement@@if (!version.equals(MASTER_BRANCH)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} @TO@ Block@@ThenBody:{  if (!version.equals(MASTER_BRANCH)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    hasChanged=true;  }} @AT@ 41115 @LENGTH@ 567
---------MOV PrefixExpression@@!version.equals(MASTER_BRANCH) @TO@ IfStatement@@if (!version.equals(MASTER_BRANCH)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} @AT@ 40897 @LENGTH@ 30
---------MOV Block@@ThenBody:{  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} @TO@ IfStatement@@if (!version.equals(MASTER_BRANCH)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} @AT@ 40969 @LENGTH@ 499
---UPD Block@@ElseBody:if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @TO@ ElseBody:if (!localBranches.containsKey(version)) {  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41535 @LENGTH@ 1183
------UPD IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @TO@ if (!localBranches.containsKey(version)) {  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41535 @LENGTH@ 1183
---------UPD Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} @TO@ ThenBody:{  git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call();  hasChanged=true;} @AT@ 41576 @LENGTH@ 245
------------DEL ExpressionStatement@@MethodInvocation:git.branchCreate().setName(version).call() @AT@ 41598 @LENGTH@ 43
---------------DEL MethodInvocation@@git.branchCreate().setName(version).call() @AT@ 41598 @LENGTH@ 42
------------------DEL SimpleName@@MethodName:call:[] @AT@ 41634 @LENGTH@ 6
------------DEL ExpressionStatement@@MethodInvocation:git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 41662 @LENGTH@ 102
---------------DEL MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 41662 @LENGTH@ 101
------------------DEL MethodInvocation@@MethodName:setRef:[remoteBranches.get(version).getName()] @AT@ 41662 @LENGTH@ 94
---------------------DEL MethodInvocation@@remoteBranches.get(version).getName() @AT@ 41718 @LENGTH@ 37
------------------------DEL SimpleName@@Name:remoteBranches @AT@ 41718 @LENGTH@ 14
------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 41746 @LENGTH@ 9
------------------DEL MethodInvocation@@MethodName:reset:[] @AT@ 41662 @LENGTH@ 11
------------------DEL SimpleName@@Name:git @AT@ 41662 @LENGTH@ 3
------------INS ExpressionStatement@@MethodInvocation:git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @TO@ Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} @AT@ 41830 @LENGTH@ 174
---------------INS MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @TO@ ExpressionStatement@@MethodInvocation:git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41830 @LENGTH@ 173
------------------MOV MethodInvocation@@MethodName:setName:[version] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 35
------------------MOV MethodInvocation@@MethodName:setName:[version] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 35
------------------MOV MethodInvocation@@MethodName:branchCreate:[] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 18
---------------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:branchCreate:[] @AT@ 41861 @LENGTH@ 4
------------------MOV MethodInvocation@@MethodName:branchCreate:[] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 18
---------------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:branchCreate:[] @AT@ 41861 @LENGTH@ 4
------------------MOV SimpleName@@Name:git @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 3
------------------MOV SimpleName@@Name:git @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41598 @LENGTH@ 3
------------------MOV MethodInvocation@@MethodName:setMode:[ResetCommand.ResetType.HARD] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41662 @LENGTH@ 48
---------------------UPD QualifiedName@@ResetCommand.ResetType.HARD @TO@ CreateBranchCommand.SetupUpstreamMode.TRACK @AT@ 41682 @LENGTH@ 27
------------------------UPD QualifiedName@@ResetCommand.ResetType @TO@ CreateBranchCommand.SetupUpstreamMode @AT@ 41682 @LENGTH@ 22
---------------------------UPD SimpleName@@ResetCommand @TO@ CreateBranchCommand @AT@ 41682 @LENGTH@ 12
---------------------------UPD SimpleName@@ResetType @TO@ SetupUpstreamMode @AT@ 41695 @LENGTH@ 9
------------------------UPD SimpleName@@HARD @TO@ TRACK @AT@ 41705 @LENGTH@ 4
------------------MOV MethodInvocation@@MethodName:setMode:[ResetCommand.ResetType.HARD] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41662 @LENGTH@ 48
---------------------UPD QualifiedName@@ResetCommand.ResetType.HARD @TO@ CreateBranchCommand.SetupUpstreamMode.TRACK @AT@ 41682 @LENGTH@ 27
------------------------UPD QualifiedName@@ResetCommand.ResetType @TO@ CreateBranchCommand.SetupUpstreamMode @AT@ 41682 @LENGTH@ 22
---------------------------UPD SimpleName@@ResetCommand @TO@ CreateBranchCommand @AT@ 41682 @LENGTH@ 12
---------------------------UPD SimpleName@@ResetType @TO@ SetupUpstreamMode @AT@ 41695 @LENGTH@ 9
------------------------UPD SimpleName@@HARD @TO@ TRACK @AT@ 41705 @LENGTH@ 4
------------------MOV MethodInvocation@@MethodName:get:[version] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41718 @LENGTH@ 27
---------------------DEL SimpleName@@version @AT@ 41737 @LENGTH@ 7
---------------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:get:[version] @AT@ 41991 @LENGTH@ 4
------------------MOV MethodInvocation@@MethodName:get:[version] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41718 @LENGTH@ 27
---------------------DEL SimpleName@@version @AT@ 41737 @LENGTH@ 7
---------------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:get:[version] @AT@ 41991 @LENGTH@ 4
------------------MOV SimpleName@@MethodName:call:[] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41757 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:call:[] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41757 @LENGTH@ 6
------------------INS MethodInvocation@@MethodName:setStartPoint:[remote + "/" + version] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41830 @LENGTH@ 90
---------------------INS InfixExpression@@remote + "/" + version @TO@ MethodInvocation@@MethodName:setStartPoint:[remote + "/" + version] @AT@ 41898 @LENGTH@ 21
------------------------INS SimpleName@@remote @TO@ InfixExpression@@remote + "/" + version @AT@ 41898 @LENGTH@ 6
------------------------INS Operator@@+ @TO@ InfixExpression@@remote + "/" + version @AT@ 41904 @LENGTH@ 1
------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@remote + "/" + version @AT@ 41906 @LENGTH@ 3
------------------------INS SimpleName@@version @TO@ InfixExpression@@remote + "/" + version @AT@ 41912 @LENGTH@ 7
------------------INS MethodInvocation@@MethodName:checkout:[] @TO@ MethodInvocation@@git.checkout().setCreateBranch(true).setName(version).setStartPoint(remote + "/" + version).setUpstreamMode(CreateBranchCommand.SetupUpstreamMode.TRACK).setForce(true).call() @AT@ 41830 @LENGTH@ 14


INS MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @TO@ TypeDeclaration@@[public, final]WSRefDDProcessor, AbstractDeploymentDescriptorBindingsProcessor @AT@ 5710 @LENGTH@ 367
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5710 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5718 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5725 @LENGTH@ 6
---INS SimpleName@@MethodName:getCacheKey @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5732 @LENGTH@ 11
---INS SingleVariableDeclaration@@final ComponentDescription componentDescription @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5744 @LENGTH@ 47
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ComponentDescription componentDescription @AT@ 5744 @LENGTH@ 5
------INS SimpleType@@ComponentDescription @TO@ SingleVariableDeclaration@@final ComponentDescription componentDescription @AT@ 5750 @LENGTH@ 20
------INS SimpleName@@componentDescription @TO@ SingleVariableDeclaration@@final ComponentDescription componentDescription @AT@ 5771 @LENGTH@ 20
---INS SingleVariableDeclaration@@final UnifiedServiceRefMetaData serviceRefUMMD @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5793 @LENGTH@ 46
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final UnifiedServiceRefMetaData serviceRefUMMD @AT@ 5793 @LENGTH@ 5
------INS SimpleType@@UnifiedServiceRefMetaData @TO@ SingleVariableDeclaration@@final UnifiedServiceRefMetaData serviceRefUMMD @AT@ 5799 @LENGTH@ 25
------INS SimpleName@@serviceRefUMMD @TO@ SingleVariableDeclaration@@final UnifiedServiceRefMetaData serviceRefUMMD @AT@ 5825 @LENGTH@ 14
---INS IfStatement@@if (componentDescription == null) {  return serviceRefUMMD.getServiceRefName();} else {  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @TO@ MethodDeclaration@@private, static, String, MethodName:getCacheKey, final ComponentDescription componentDescription, final UnifiedServiceRefMetaData serviceRefUMMD,  @AT@ 5851 @LENGTH@ 220
------INS InfixExpression@@componentDescription == null @TO@ IfStatement@@if (componentDescription == null) {  return serviceRefUMMD.getServiceRefName();} else {  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @AT@ 5855 @LENGTH@ 28
---------INS SimpleName@@componentDescription @TO@ InfixExpression@@componentDescription == null @AT@ 5855 @LENGTH@ 20
---------INS Operator@@== @TO@ InfixExpression@@componentDescription == null @AT@ 5875 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@componentDescription == null @AT@ 5879 @LENGTH@ 4
------INS Block@@ThenBody:{  return serviceRefUMMD.getServiceRefName();} @TO@ IfStatement@@if (componentDescription == null) {  return serviceRefUMMD.getServiceRefName();} else {  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @AT@ 5885 @LENGTH@ 66
---------INS ReturnStatement@@MethodInvocation:serviceRefUMMD.getServiceRefName() @TO@ Block@@ThenBody:{  return serviceRefUMMD.getServiceRefName();} @AT@ 5899 @LENGTH@ 42
------------INS MethodInvocation@@serviceRefUMMD.getServiceRefName() @TO@ ReturnStatement@@MethodInvocation:serviceRefUMMD.getServiceRefName() @AT@ 5906 @LENGTH@ 34
---------------INS SimpleName@@Name:serviceRefUMMD @TO@ MethodInvocation@@serviceRefUMMD.getServiceRefName() @AT@ 5906 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getServiceRefName:[] @TO@ MethodInvocation@@serviceRefUMMD.getServiceRefName() @AT@ 5921 @LENGTH@ 19
------INS Block@@ElseBody:{  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @TO@ IfStatement@@if (componentDescription == null) {  return serviceRefUMMD.getServiceRefName();} else {  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @AT@ 5957 @LENGTH@ 114
---------INS ReturnStatement@@InfixExpression:componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @TO@ Block@@ElseBody:{  return componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName();} @AT@ 5971 @LENGTH@ 90
------------INS InfixExpression@@componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @TO@ ReturnStatement@@InfixExpression:componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @AT@ 5978 @LENGTH@ 82
---------------INS MethodInvocation@@componentDescription.getComponentName() @TO@ InfixExpression@@componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @AT@ 5978 @LENGTH@ 39
------------------INS SimpleName@@Name:componentDescription @TO@ MethodInvocation@@componentDescription.getComponentName() @AT@ 5978 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getComponentName:[] @TO@ MethodInvocation@@componentDescription.getComponentName() @AT@ 5999 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @AT@ 6017 @LENGTH@ 1
---------------INS StringLiteral@@"/" @TO@ InfixExpression@@componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @AT@ 6020 @LENGTH@ 3
---------------INS MethodInvocation@@serviceRefUMMD.getServiceRefName() @TO@ InfixExpression@@componentDescription.getComponentName() + "/" + serviceRefUMMD.getServiceRefName() @AT@ 6026 @LENGTH@ 34
------------------INS SimpleName@@Name:serviceRefUMMD @TO@ MethodInvocation@@serviceRefUMMD.getServiceRefName() @AT@ 6026 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getServiceRefName:[] @TO@ MethodInvocation@@serviceRefUMMD.getServiceRefName() @AT@ 6041 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 3155 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 3155 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3155 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3163 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 3182 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:InetSocketAddress.class.cast(getLocalAddress()) @TO@ ClassInstanceCreation:new InetSocketAddress(getLocalAddress(),getPort()) @AT@ 1893 @LENGTH@ 55
---INS ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @TO@ ReturnStatement@@MethodInvocation:InetSocketAddress.class.cast(getLocalAddress()) @AT@ 1900 @LENGTH@ 51
------INS New@@new @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1900 @LENGTH@ 3
------INS SimpleType@@InetSocketAddress @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1904 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getLocalAddress:[] @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1922 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getPort:[] @TO@ ClassInstanceCreation@@InetSocketAddress[getLocalAddress(), getPort()] @AT@ 1941 @LENGTH@ 9
---DEL MethodInvocation@@InetSocketAddress.class.cast(getLocalAddress()) @AT@ 1900 @LENGTH@ 47
------DEL TypeLiteral@@InetSocketAddress.class @AT@ 1900 @LENGTH@ 23
------DEL SimpleName@@MethodName:cast:[getLocalAddress()] @AT@ 1924 @LENGTH@ 23
---------DEL MethodInvocation@@MethodName:getLocalAddress:[] @AT@ 1929 @LENGTH@ 17


INS FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @TO@ TypeDeclaration@@[public]PatchingTestUtil,  @AT@ 3359 @LENGTH@ 118
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3359 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3366 @LENGTH@ 6
---INS SimpleType@@File @TO@ FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3373 @LENGTH@ 4
---INS VariableDeclarationFragment@@baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @TO@ FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3378 @LENGTH@ 98
------INS SimpleName@@baseModuleDir @TO@ VariableDeclarationFragment@@baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @AT@ 3378 @LENGTH@ 13
------INS MethodInvocation@@newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @TO@ VariableDeclarationFragment@@baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @AT@ 3394 @LENGTH@ 82
---------INS SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @TO@ MethodInvocation@@newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @AT@ 3394 @LENGTH@ 82
------------INS ClassInstanceCreation@@File[PatchingTestUtil.AS_DISTRIBUTION] @TO@ SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @AT@ 3402 @LENGTH@ 42
---------------INS New@@new @TO@ ClassInstanceCreation@@File[PatchingTestUtil.AS_DISTRIBUTION] @AT@ 3402 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[PatchingTestUtil.AS_DISTRIBUTION] @AT@ 3406 @LENGTH@ 4
---------------INS QualifiedName@@PatchingTestUtil.AS_DISTRIBUTION @TO@ ClassInstanceCreation@@File[PatchingTestUtil.AS_DISTRIBUTION] @AT@ 3411 @LENGTH@ 32
------------------INS SimpleName@@PatchingTestUtil @TO@ QualifiedName@@PatchingTestUtil.AS_DISTRIBUTION @AT@ 3411 @LENGTH@ 16
------------------INS SimpleName@@AS_DISTRIBUTION @TO@ QualifiedName@@PatchingTestUtil.AS_DISTRIBUTION @AT@ 3428 @LENGTH@ 15
------------INS SimpleName@@MODULES @TO@ SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @AT@ 3446 @LENGTH@ 7
------------INS SimpleName@@SYSTEM @TO@ SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @AT@ 3455 @LENGTH@ 6
------------INS SimpleName@@LAYERS @TO@ SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @AT@ 3463 @LENGTH@ 6
------------INS SimpleName@@BASE @TO@ SimpleName@@MethodName:newFile:[new File(PatchingTestUtil.AS_DISTRIBUTION), MODULES, SYSTEM, LAYERS, BASE] @AT@ 3471 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 3888 @LENGTH@ 343
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 3888 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 3895 @LENGTH@ 4
---INS SimpleName@@MethodName:looksUpKeyForNonPropertyPath @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 3900 @LENGTH@ 28
---INS VariableDeclarationStatement@@PathBuilder<Address> builder=new PathBuilder<Address>(Address.class,"address"); @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 3936 @LENGTH@ 82
------INS ParameterizedType@@PathBuilder<Address> @TO@ VariableDeclarationStatement@@PathBuilder<Address> builder=new PathBuilder<Address>(Address.class,"address"); @AT@ 3936 @LENGTH@ 20
---------INS SimpleType@@PathBuilder @TO@ ParameterizedType@@PathBuilder<Address> @AT@ 3936 @LENGTH@ 11
---------INS SimpleType@@Address @TO@ ParameterizedType@@PathBuilder<Address> @AT@ 3948 @LENGTH@ 7
------INS VariableDeclarationFragment@@builder=new PathBuilder<Address>(Address.class,"address") @TO@ VariableDeclarationStatement@@PathBuilder<Address> builder=new PathBuilder<Address>(Address.class,"address"); @AT@ 3957 @LENGTH@ 60
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new PathBuilder<Address>(Address.class,"address") @AT@ 3957 @LENGTH@ 7
---------INS ClassInstanceCreation@@PathBuilder<Address>[Address.class, "address"] @TO@ VariableDeclarationFragment@@builder=new PathBuilder<Address>(Address.class,"address") @AT@ 3967 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@PathBuilder<Address>[Address.class, "address"] @AT@ 3967 @LENGTH@ 3
------------INS ParameterizedType@@PathBuilder<Address> @TO@ ClassInstanceCreation@@PathBuilder<Address>[Address.class, "address"] @AT@ 3971 @LENGTH@ 20
---------------INS SimpleType@@PathBuilder @TO@ ParameterizedType@@PathBuilder<Address> @AT@ 3971 @LENGTH@ 11
---------------INS SimpleType@@Address @TO@ ParameterizedType@@PathBuilder<Address> @AT@ 3983 @LENGTH@ 7
------------INS TypeLiteral@@Address.class @TO@ ClassInstanceCreation@@PathBuilder<Address>[Address.class, "address"] @AT@ 3992 @LENGTH@ 13
------------INS StringLiteral@@"address" @TO@ ClassInstanceCreation@@PathBuilder<Address>[Address.class, "address"] @AT@ 4007 @LENGTH@ 9
---INS VariableDeclarationStatement@@SimplePath<Object> firstElementPath=builder.getArray("foo",String[].class).get(0); @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 4021 @LENGTH@ 85
------INS ParameterizedType@@SimplePath<Object> @TO@ VariableDeclarationStatement@@SimplePath<Object> firstElementPath=builder.getArray("foo",String[].class).get(0); @AT@ 4021 @LENGTH@ 18
---------INS SimpleType@@SimplePath @TO@ ParameterizedType@@SimplePath<Object> @AT@ 4021 @LENGTH@ 10
---------INS SimpleType@@Object @TO@ ParameterizedType@@SimplePath<Object> @AT@ 4032 @LENGTH@ 6
------INS VariableDeclarationFragment@@firstElementPath=builder.getArray("foo",String[].class).get(0) @TO@ VariableDeclarationStatement@@SimplePath<Object> firstElementPath=builder.getArray("foo",String[].class).get(0); @AT@ 4040 @LENGTH@ 65
---------INS SimpleName@@firstElementPath @TO@ VariableDeclarationFragment@@firstElementPath=builder.getArray("foo",String[].class).get(0) @AT@ 4040 @LENGTH@ 16
---------INS MethodInvocation@@builder.getArray("foo",String[].class).get(0) @TO@ VariableDeclarationFragment@@firstElementPath=builder.getArray("foo",String[].class).get(0) @AT@ 4059 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:getArray:["foo", String[].class] @TO@ MethodInvocation@@builder.getArray("foo",String[].class).get(0) @AT@ 4059 @LENGTH@ 39
---------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:getArray:["foo", String[].class] @AT@ 4076 @LENGTH@ 5
---------------INS TypeLiteral@@String[].class @TO@ MethodInvocation@@MethodName:getArray:["foo", String[].class] @AT@ 4083 @LENGTH@ 14
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getArray("foo",String[].class).get(0) @AT@ 4059 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@builder.getArray("foo",String[].class).get(0) @AT@ 4099 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 4103 @LENGTH@ 1
---INS VariableDeclarationStatement@@String path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()); @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 4109 @LENGTH@ 89
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()); @AT@ 4109 @LENGTH@ 6
------INS VariableDeclarationFragment@@path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @TO@ VariableDeclarationStatement@@String path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()); @AT@ 4116 @LENGTH@ 81
---------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @AT@ 4116 @LENGTH@ 4
---------INS MethodInvocation@@serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @TO@ VariableDeclarationFragment@@path=serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @AT@ 4123 @LENGTH@ 74
------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @AT@ 4123 @LENGTH@ 10
------------INS SimpleName@@MethodName:getKeyForPath:[firstElementPath, firstElementPath.getMetadata()] @TO@ MethodInvocation@@serializer.getKeyForPath(firstElementPath,firstElementPath.getMetadata()) @AT@ 4134 @LENGTH@ 63
---------------INS SimpleName@@firstElementPath @TO@ SimpleName@@MethodName:getKeyForPath:[firstElementPath, firstElementPath.getMetadata()] @AT@ 4148 @LENGTH@ 16
---------------INS MethodInvocation@@firstElementPath.getMetadata() @TO@ SimpleName@@MethodName:getKeyForPath:[firstElementPath, firstElementPath.getMetadata()] @AT@ 4166 @LENGTH@ 30
------------------INS SimpleName@@Name:firstElementPath @TO@ MethodInvocation@@firstElementPath.getMetadata() @AT@ 4166 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getMetadata:[] @TO@ MethodInvocation@@firstElementPath.getMetadata() @AT@ 4183 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(path,is("0")) @TO@ MethodDeclaration@@public, void, MethodName:looksUpKeyForNonPropertyPath,  @AT@ 4202 @LENGTH@ 26
------INS MethodInvocation@@assertThat(path,is("0")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(path,is("0")) @AT@ 4202 @LENGTH@ 25
---------INS SimpleName@@MethodName:assertThat:[path, is("0")] @TO@ MethodInvocation@@assertThat(path,is("0")) @AT@ 4202 @LENGTH@ 25
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:assertThat:[path, is("0")] @AT@ 4213 @LENGTH@ 4
------------INS MethodInvocation@@is("0") @TO@ SimpleName@@MethodName:assertThat:[path, is("0")] @AT@ 4219 @LENGTH@ 7
---------------INS SimpleName@@MethodName:is:["0"] @TO@ MethodInvocation@@is("0") @AT@ 4219 @LENGTH@ 7
------------------INS StringLiteral@@"0" @TO@ SimpleName@@MethodName:is:["0"] @AT@ 4222 @LENGTH@ 3
---------------INS SimpleName@@MethodName:is:["0"] @TO@ MethodInvocation@@is("0") @AT@ 4219 @LENGTH@ 7
------------------INS StringLiteral@@"0" @TO@ SimpleName@@MethodName:is:["0"] @AT@ 4222 @LENGTH@ 3


UPD MethodDeclaration@@void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, OutputCollector out,  @TO@ void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, Map<String,OutputCollector> outMap,  @AT@ 2747 @LENGTH@ 2685
---UPD SingleVariableDeclaration@@OutputCollector out @TO@ Map<String,OutputCollector> outMap @AT@ 2834 @LENGTH@ 19
------DEL SimpleType@@OutputCollector @AT@ 2834 @LENGTH@ 15
------INS ParameterizedType@@Map<String,OutputCollector> @TO@ SingleVariableDeclaration@@OutputCollector out @AT@ 2834 @LENGTH@ 28
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2834 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2838 @LENGTH@ 6
---------INS SimpleType@@OutputCollector @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2846 @LENGTH@ 15
------UPD SimpleName@@out @TO@ outMap @AT@ 2850 @LENGTH@ 3
---UPD ExpressionStatement@@SuperMethodInvocation:super.init(jconf,mrReporter,inputs,out) @TO@ SuperMethodInvocation:super.init(jconf,mrReporter,inputs,outMap) @AT@ 2932 @LENGTH@ 43
------UPD SuperMethodInvocation@@super.init(jconf,mrReporter,inputs,out) @TO@ super.init(jconf,mrReporter,inputs,outMap) @AT@ 2932 @LENGTH@ 42
---------UPD SimpleName@@MethodName:init:[jconf, mrReporter, inputs, out] @TO@ MethodName:init:[jconf, mrReporter, inputs, outMap] @AT@ 2938 @LENGTH@ 4
---------UPD SimpleName@@out @TO@ outMap @AT@ 2970 @LENGTH@ 3
---UPD TryStatement@@try {  execContext.setJc(jconf);  mapWork=(MapWork)cache.retrieve(MAP_PLAN_KEY);  if (mapWork == null) {    mapWork=Utilities.getMapWork(jconf);    cache.cache(MAP_PLAN_KEY,mapWork);    l4j.info("Plan: " + mapWork);    for (    String s : mapWork.getAliases()) {      l4j.info("Alias: " + s);    }  }  if (mapWork.getVectorMode()) {    mapOp=new VectorMapOperator();  } else {    mapOp=new MapOperator();  }  mapOp.setConf(mapWork);  mapOp.setChildren(jconf);  l4j.info(mapOp.dump(0));  MapredContext.init(true,new JobConf(jconf));  ((TezContext)MapredContext.get()).setInputs(inputs);  mapOp.setExecContext(execContext);  mapOp.initializeLocalWork(jconf);  mapOp.initialize(jconf,null);  List<HashTableDummyOperator> dummyOps=mapWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),out);  mapOp.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Map operator initialization failed",e);  }} @TO@ try {  execContext.setJc(jconf);  mapWork=(MapWork)cache.retrieve(MAP_PLAN_KEY);  if (mapWork == null) {    mapWork=Utilities.getMapWork(jconf);    cache.cache(MAP_PLAN_KEY,mapWork);    l4j.info("Plan: " + mapWork);    for (    String s : mapWork.getAliases()) {      l4j.info("Alias: " + s);    }  }  if (mapWork.getVectorMode()) {    mapOp=new VectorMapOperator();  } else {    mapOp=new MapOperator();  }  mapOp.setConf(mapWork);  mapOp.setChildren(jconf);  l4j.info(mapOp.dump(0));  MapredContext.init(true,new JobConf(jconf));  ((TezContext)MapredContext.get()).setInputs(inputs);  mapOp.setExecContext(execContext);  mapOp.initializeLocalWork(jconf);  mapOp.initialize(jconf,null);  List<HashTableDummyOperator> dummyOps=mapWork.getDummyOps();  if (dummyOps != null) {    for (    Operator<? extends OperatorDesc> dummyOp : dummyOps) {      dummyOp.setExecContext(execContext);      dummyOp.initialize(jconf,null);    }  }  OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap);  mapOp.setReporter(reporter);  MapredContext.get().setReporter(reporter);} catch (Throwable e) {  abort=true;  if (e instanceof OutOfMemoryError) {    throw (OutOfMemoryError)e;  } else {    throw new RuntimeException("Map operator initialization failed",e);  }} @AT@ 3516 @LENGTH@ 1842
------UPD ExpressionStatement@@MethodInvocation:OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),out) @TO@ MethodInvocation:OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap) @AT@ 4869 @LENGTH@ 67
---------UPD MethodInvocation@@OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),out) @TO@ OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap) @AT@ 4869 @LENGTH@ 66
------------UPD SimpleName@@MethodName:setChildrenCollector:[mapOp.getChildOperators(), out] @TO@ MethodName:setChildrenCollector:[mapOp.getChildOperators(), outMap] @AT@ 4883 @LENGTH@ 52
---------------UPD SimpleName@@out @TO@ outMap @AT@ 4931 @LENGTH@ 3


UPD MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @TO@ public, static, String, MethodName:buildSortClause, Map<String,Order> sortKeys,  @AT@ 9661 @LENGTH@ 518
---UPD SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @TO@ Map<String,Order> sortKeys @AT@ 9698 @LENGTH@ 39
------DEL SimpleType@@AbstractSqlPagingQueryProvider @AT@ 9698 @LENGTH@ 30
------UPD SimpleName@@provider @TO@ sortKeys @AT@ 9729 @LENGTH@ 8
------INS ParameterizedType@@Map<String,Order> @TO@ SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @AT@ 9992 @LENGTH@ 18
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Order> @AT@ 9992 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Order> @AT@ 9996 @LENGTH@ 6
---------INS SimpleType@@Order @TO@ ParameterizedType@@Map<String,Order> @AT@ 10004 @LENGTH@ 5
---UPD EnhancedForStatement@@for (Map.Entry<String,Order> sortKey : provider.getSortKeys().entrySet()) {  builder.append(prefix);  prefix=", ";  builder.append(sortKey.getKey());  if (sortKey.getValue() != null && sortKey.getValue() == Order.DESCENDING) {    builder.append(" DESC");  } else {    builder.append(" ASC");  }} @TO@ for (Map.Entry<String,Order> sortKey : sortKeys.entrySet()) {  builder.append(prefix);  prefix=", ";  builder.append(sortKey.getKey());  if (sortKey.getValue() != null && sortKey.getValue() == Order.DESCENDING) {    builder.append(" DESC");  } else {    builder.append(" ASC");  }} @AT@ 9815 @LENGTH@ 329
------UPD MethodInvocation@@provider.getSortKeys().entrySet() @TO@ sortKeys.entrySet() @AT@ 9855 @LENGTH@ 33
---------DEL MethodInvocation@@MethodName:getSortKeys:[] @AT@ 9855 @LENGTH@ 22
---------UPD SimpleName@@Name:provider @TO@ Name:sortKeys @AT@ 9855 @LENGTH@ 8


UPD IfStatement@@if (aliasEntry == null) {  if (resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} else {  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @TO@ if (aliasEntry == null) {  if (resource != null && resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} else {  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @AT@ 20561 @LENGTH@ 688
---UPD Block@@ThenBody:{  if (resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} @TO@ ThenBody:{  if (resource != null && resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} @AT@ 20585 @LENGTH@ 158
------UPD IfStatement@@if (resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @TO@ if (resource != null && resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @AT@ 20603 @LENGTH@ 126
---------INS InfixExpression@@resource != null && resource.hasChildren(childType) @TO@ IfStatement@@if (resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @AT@ 20607 @LENGTH@ 51
------------MOV MethodInvocation@@resource.hasChildren(childType) @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20607 @LENGTH@ 31
------------INS InfixExpression@@resource != null @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20607 @LENGTH@ 16
---------------INS SimpleName@@resource @TO@ InfixExpression@@resource != null @AT@ 20607 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@resource != null @AT@ 20615 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@resource != null @AT@ 20619 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20623 @LENGTH@ 2
---UPD Block@@ElseBody:{  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @TO@ ElseBody:{  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @AT@ 20749 @LENGTH@ 500
------UPD IfStatement@@if (parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @TO@ if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @AT@ 21101 @LENGTH@ 134
---------INS InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @TO@ IfStatement@@if (parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @AT@ 21125 @LENGTH@ 86
------------MOV MethodInvocation@@parentResource.hasChildren(target.getLastElement().getKey()) @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21105 @LENGTH@ 60
------------INS InfixExpression@@parentResource != null @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21125 @LENGTH@ 22
---------------INS SimpleName@@parentResource @TO@ InfixExpression@@parentResource != null @AT@ 21125 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@parentResource != null @AT@ 21139 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@parentResource != null @AT@ 21143 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21147 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 12927 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 12927 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 12934 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 12939 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 12970 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 12970 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 12976 @LENGTH@ 24


INS VariableDeclarationStatement@@NotifyBuilder builder=new NotifyBuilder(context).whenDone(1).create(); @TO@ MethodDeclaration@@public, void, MethodName:testStreamCacheToFileShouldBeDeletedInCaseOfResponse, Exception,  @AT@ 1620 @LENGTH@ 72
---INS SimpleType@@NotifyBuilder @TO@ VariableDeclarationStatement@@NotifyBuilder builder=new NotifyBuilder(context).whenDone(1).create(); @AT@ 1620 @LENGTH@ 13
---INS VariableDeclarationFragment@@builder=new NotifyBuilder(context).whenDone(1).create() @TO@ VariableDeclarationStatement@@NotifyBuilder builder=new NotifyBuilder(context).whenDone(1).create(); @AT@ 1634 @LENGTH@ 57
------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new NotifyBuilder(context).whenDone(1).create() @AT@ 1634 @LENGTH@ 7
------INS MethodInvocation@@new NotifyBuilder(context).whenDone(1).create() @TO@ VariableDeclarationFragment@@builder=new NotifyBuilder(context).whenDone(1).create() @AT@ 1644 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:whenDone:[1] @TO@ MethodInvocation@@new NotifyBuilder(context).whenDone(1).create() @AT@ 1644 @LENGTH@ 38
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:whenDone:[1] @AT@ 1680 @LENGTH@ 1
---------INS ClassInstanceCreation@@NotifyBuilder[context] @TO@ MethodInvocation@@new NotifyBuilder(context).whenDone(1).create() @AT@ 1644 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@NotifyBuilder[context] @AT@ 1644 @LENGTH@ 3
------------INS SimpleType@@NotifyBuilder @TO@ ClassInstanceCreation@@NotifyBuilder[context] @AT@ 1648 @LENGTH@ 13
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@NotifyBuilder[context] @AT@ 1662 @LENGTH@ 7
---------INS SimpleName@@MethodName:create:[] @TO@ MethodInvocation@@new NotifyBuilder(context).whenDone(1).create() @AT@ 1683 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:TestKeystore,  @TO@ private, voidMethodName:TestKeystore,  @AT@ 1299 @LENGTH@ 32
---UPD Modifier@@public @TO@ private @AT@ 1299 @LENGTH@ 6


UPD FieldDeclaration@@private, long, [hotDrinkDelay=500] @TO@ private, long, [hotDrinkDelay=300] @AT@ 1022 @LENGTH@ 33
---UPD VariableDeclarationFragment@@hotDrinkDelay=500 @TO@ hotDrinkDelay=300 @AT@ 1035 @LENGTH@ 19
------UPD NumberLiteral@@500 @TO@ 300 @AT@ 1051 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-645] Fix fabric smoke FabricMavenProxyTest"), public]FabricMavenProxyTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricMavenProxyTest, FabricTestSupport @AT@ 2288 @LENGTH@ 3005
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-645] Fix fabric smoke FabricMavenProxyTest") @AT@ 2381 @LENGTH@ 61


UPD ReturnStatement@@QualifiedName:p.lastModified @TO@ ConditionalExpression:p != null ? p.lastModified : 0 @AT@ 6905 @LENGTH@ 22
---INS ConditionalExpression@@p != null ? p.lastModified : 0 @TO@ ReturnStatement@@QualifiedName:p.lastModified @AT@ 6912 @LENGTH@ 30
------INS InfixExpression@@p != null @TO@ ConditionalExpression@@p != null ? p.lastModified : 0 @AT@ 6912 @LENGTH@ 9
---------INS SimpleName@@p @TO@ InfixExpression@@p != null @AT@ 6912 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@p != null @AT@ 6913 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@p != null @AT@ 6917 @LENGTH@ 4
------INS QualifiedName@@p.lastModified @TO@ ConditionalExpression@@p != null ? p.lastModified : 0 @AT@ 6924 @LENGTH@ 14
---------MOV SimpleName@@p @TO@ QualifiedName@@p.lastModified @AT@ 6912 @LENGTH@ 1
---------MOV SimpleName@@lastModified @TO@ QualifiedName@@p.lastModified @AT@ 6914 @LENGTH@ 12
------INS NumberLiteral@@0 @TO@ ConditionalExpression@@p != null ? p.lastModified : 0 @AT@ 6941 @LENGTH@ 1
---DEL QualifiedName@@p.lastModified @AT@ 6912 @LENGTH@ 14


UPD Block@@ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @TO@ ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided;synchronized (permissions) {    provided=permissions.get(mperm.getActionEffect());  }  return provided != null && provided.implies(mperm);} @AT@ 2565 @LENGTH@ 237
---UPD VariableDeclarationStatement@@ManagementPermission provided=permissions.get(mperm.getActionEffect()); @TO@ ManagementPermission provided; @AT@ 2655 @LENGTH@ 73
------UPD VariableDeclarationFragment@@provided=permissions.get(mperm.getActionEffect()) @TO@ provided @AT@ 2676 @LENGTH@ 51
---INS SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @TO@ Block@@ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2698 @LENGTH@ 111
------INS SimpleName@@permissions @TO@ SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @AT@ 2712 @LENGTH@ 11
------INS Block@@SyncBody:{  provided=permissions.get(mperm.getActionEffect());} @TO@ SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @AT@ 2725 @LENGTH@ 84
---------INS ExpressionStatement@@Assignment:provided=permissions.get(mperm.getActionEffect()) @TO@ Block@@SyncBody:{  provided=permissions.get(mperm.getActionEffect());} @AT@ 2743 @LENGTH@ 52
------------INS Assignment@@provided=permissions.get(mperm.getActionEffect()) @TO@ ExpressionStatement@@Assignment:provided=permissions.get(mperm.getActionEffect()) @AT@ 2743 @LENGTH@ 51
---------------MOV MethodInvocation@@permissions.get(mperm.getActionEffect()) @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2687 @LENGTH@ 40
---------------INS SimpleName@@provided @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2743 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2751 @LENGTH@ 1


UPD IfStatement@@if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @TO@ if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} @AT@ 40736 @LENGTH@ 1312
---DEL Block@@ElseBody:{  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @AT@ 41079 @LENGTH@ 969
------DEL VariableDeclarationStatement@@EnumSet<Flag> flags=operationEntry.getFlags(); @AT@ 41101 @LENGTH@ 48
---------DEL ParameterizedType@@EnumSet<Flag> @AT@ 41101 @LENGTH@ 13
------------DEL SimpleType@@EnumSet @AT@ 41101 @LENGTH@ 7
------------DEL SimpleType@@Flag @AT@ 41109 @LENGTH@ 4
---------DEL VariableDeclarationFragment@@flags=operationEntry.getFlags() @AT@ 41115 @LENGTH@ 33
------------DEL SimpleName@@flags @AT@ 41115 @LENGTH@ 5
------------DEL MethodInvocation@@operationEntry.getFlags() @AT@ 41123 @LENGTH@ 25
---------------DEL SimpleName@@Name:operationEntry @AT@ 41123 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getFlags:[] @AT@ 41138 @LENGTH@ 10
------DEL VariableDeclarationStatement@@Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG); @AT@ 41170 @LENGTH@ 131
---------DEL SimpleType@@Action @AT@ 41170 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG) @AT@ 41177 @LENGTH@ 123
------------DEL SimpleName@@action @AT@ 41177 @LENGTH@ 6
------------DEL MethodInvocation@@targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG) @AT@ 41186 @LENGTH@ 114
---------------DEL SimpleName@@Name:targetAction @AT@ 41186 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:limitAction:[flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG] @AT@ 41199 @LENGTH@ 101
------------------DEL ConditionalExpression@@flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG @AT@ 41211 @LENGTH@ 88
---------------------DEL MethodInvocation@@flags.contains(Flag.RUNTIME_ONLY) @AT@ 41211 @LENGTH@ 33
------------------------DEL SimpleName@@Name:flags @AT@ 41211 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:contains:[Flag.RUNTIME_ONLY] @AT@ 41217 @LENGTH@ 27
---------------------------DEL QualifiedName@@Flag.RUNTIME_ONLY @AT@ 41226 @LENGTH@ 17
------------------------------DEL SimpleName@@Flag @AT@ 41226 @LENGTH@ 4
------------------------------DEL SimpleName@@RUNTIME_ONLY @AT@ 41231 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.READ_RUNTIME @AT@ 41247 @LENGTH@ 25
------------------------DEL SimpleName@@ActionEffect @AT@ 41247 @LENGTH@ 12
------------------------DEL SimpleName@@READ_RUNTIME @AT@ 41260 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.READ_CONFIG @AT@ 41275 @LENGTH@ 24
------------------------DEL SimpleName@@ActionEffect @AT@ 41275 @LENGTH@ 12
------------------------DEL SimpleName@@READ_CONFIG @AT@ 41288 @LENGTH@ 11
------DEL ExpressionStatement@@Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41322 @LENGTH@ 118
---------DEL Assignment@@authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41322 @LENGTH@ 117
------------DEL SimpleName@@authResult @AT@ 41322 @LENGTH@ 10
------------DEL Operator@@= @AT@ 41332 @LENGTH@ 1
------------DEL MethodInvocation@@modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @AT@ 41335 @LENGTH@ 104
---------------DEL MethodInvocation@@MethodName:getAuthorizer:[] @AT@ 41335 @LENGTH@ 31
---------------DEL SimpleName@@Name:modelController @AT@ 41335 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:authorize:[getCaller(), callEnvironment, action, authResp.targetResource] @AT@ 41367 @LENGTH@ 72
------------------DEL MethodInvocation@@MethodName:getCaller:[] @AT@ 41377 @LENGTH@ 11
------------------DEL SimpleName@@callEnvironment @AT@ 41390 @LENGTH@ 15
------------------DEL SimpleName@@action @AT@ 41407 @LENGTH@ 6
------------------DEL QualifiedName@@authResp.targetResource @AT@ 41415 @LENGTH@ 23
---------------------DEL SimpleName@@authResp @AT@ 41415 @LENGTH@ 8
---------------------DEL SimpleName@@targetResource @AT@ 41424 @LENGTH@ 14
------DEL IfStatement@@if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @AT@ 41461 @LENGTH@ 485
---------DEL InfixExpression@@authResult.getDecision() != AuthorizationResult.Decision.DENY @AT@ 41465 @LENGTH@ 61
------------DEL MethodInvocation@@authResult.getDecision() @AT@ 41465 @LENGTH@ 24
---------------DEL SimpleName@@Name:authResult @AT@ 41465 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getDecision:[] @AT@ 41476 @LENGTH@ 13
------------DEL Operator@@!= @AT@ 41489 @LENGTH@ 2
------------DEL QualifiedName@@AuthorizationResult.Decision.DENY @AT@ 41493 @LENGTH@ 33
---------------DEL QualifiedName@@AuthorizationResult.Decision @AT@ 41493 @LENGTH@ 28
------------------DEL SimpleName@@AuthorizationResult @AT@ 41493 @LENGTH@ 19
------------------DEL SimpleName@@Decision @AT@ 41513 @LENGTH@ 8
---------------DEL SimpleName@@DENY @AT@ 41522 @LENGTH@ 4
---MOV Block@@ThenBody:{  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @TO@ IfStatement@@if (access) {  Action action=targetAction.limitAction(ActionEffect.ACCESS);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  authResp.addOperationResult(operationName,access,authResult);} else {  EnumSet<Flag> flags=operationEntry.getFlags();  Action action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.READ_RUNTIME : ActionEffect.READ_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  if (authResult.getDecision() != AuthorizationResult.Decision.DENY) {    action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);  }  authResp.addOperationResult(operationName,access,authResult);} @AT@ 41528 @LENGTH@ 418
------DEL ExpressionStatement@@Assignment:action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41623 @LENGTH@ 126
---------DEL Assignment@@action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41623 @LENGTH@ 125
------------DEL SimpleName@@action @AT@ 41623 @LENGTH@ 6
------------DEL Operator@@= @AT@ 41629 @LENGTH@ 1
------------DEL MethodInvocation@@targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG) @AT@ 41632 @LENGTH@ 116
---------------DEL SimpleName@@Name:targetAction @AT@ 41632 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:limitAction:[flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG] @AT@ 41645 @LENGTH@ 103
------------------DEL ConditionalExpression@@flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG @AT@ 41657 @LENGTH@ 90
---------------------DEL MethodInvocation@@flags.contains(Flag.RUNTIME_ONLY) @AT@ 41657 @LENGTH@ 33
------------------------DEL SimpleName@@Name:flags @AT@ 41657 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:contains:[Flag.RUNTIME_ONLY] @AT@ 41663 @LENGTH@ 27
---------------------------DEL QualifiedName@@Flag.RUNTIME_ONLY @AT@ 41672 @LENGTH@ 17
------------------------------DEL SimpleName@@Flag @AT@ 41672 @LENGTH@ 4
------------------------------DEL SimpleName@@RUNTIME_ONLY @AT@ 41677 @LENGTH@ 12
---------------------DEL QualifiedName@@ActionEffect.WRITE_RUNTIME @AT@ 41693 @LENGTH@ 26
------------------------DEL SimpleName@@ActionEffect @AT@ 41693 @LENGTH@ 12
------------------------DEL SimpleName@@WRITE_RUNTIME @AT@ 41706 @LENGTH@ 13
---------------------DEL QualifiedName@@ActionEffect.WRITE_CONFIG @AT@ 41722 @LENGTH@ 25
------------------------DEL SimpleName@@ActionEffect @AT@ 41722 @LENGTH@ 12
------------------------DEL SimpleName@@WRITE_CONFIG @AT@ 41735 @LENGTH@ 12
------UPD ExpressionStatement@@Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ Assignment:authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41778 @LENGTH@ 118
---------UPD Assignment@@authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41778 @LENGTH@ 117
------------UPD MethodInvocation@@modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource) @TO@ modelController.getAuthorizer().authorize(getCaller(),callEnvironment,targetAction,authResp.targetResource) @AT@ 41791 @LENGTH@ 104
---------------UPD SimpleName@@MethodName:authorize:[getCaller(), callEnvironment, action, authResp.targetResource] @TO@ MethodName:authorize:[getCaller(), callEnvironment, targetAction, authResp.targetResource] @AT@ 41823 @LENGTH@ 72
------------------UPD SimpleName@@action @TO@ targetAction @AT@ 41863 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:authResp.addOperationResult(operationName,access,authResult) @TO@ Block@@ThenBody:{  action=targetAction.limitAction(flags.contains(Flag.RUNTIME_ONLY) ? ActionEffect.WRITE_RUNTIME : ActionEffect.WRITE_CONFIG);  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,authResp.targetResource);} @AT@ 41967 @LENGTH@ 63


INS VariableDeclarationStatement@@DecimalFormat twoDForm=new DecimalFormat("#.##"); @TO@ MethodDeclaration@@public, void, MethodName:testIncrementDouble,  @AT@ 6423 @LENGTH@ 51
---INS SimpleType@@DecimalFormat @TO@ VariableDeclarationStatement@@DecimalFormat twoDForm=new DecimalFormat("#.##"); @AT@ 6423 @LENGTH@ 13
---INS VariableDeclarationFragment@@twoDForm=new DecimalFormat("#.##") @TO@ VariableDeclarationStatement@@DecimalFormat twoDForm=new DecimalFormat("#.##"); @AT@ 6437 @LENGTH@ 36
------INS SimpleName@@twoDForm @TO@ VariableDeclarationFragment@@twoDForm=new DecimalFormat("#.##") @AT@ 6437 @LENGTH@ 8
------INS ClassInstanceCreation@@DecimalFormat["#.##"] @TO@ VariableDeclarationFragment@@twoDForm=new DecimalFormat("#.##") @AT@ 6448 @LENGTH@ 25
---------INS New@@new @TO@ ClassInstanceCreation@@DecimalFormat["#.##"] @AT@ 6448 @LENGTH@ 3
---------INS SimpleType@@DecimalFormat @TO@ ClassInstanceCreation@@DecimalFormat["#.##"] @AT@ 6452 @LENGTH@ 13
---------INS StringLiteral@@"#.##" @TO@ ClassInstanceCreation@@DecimalFormat["#.##"] @AT@ 6466 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @TO@ MethodDeclaration@@private, static, Exchange, MethodName:copyExchangeNoAttachments, Exchange exchange, boolean preserveExchangeId,  @AT@ 10908 @LENGTH@ 56
---INS MethodInvocation@@answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @TO@ ExpressionStatement@@MethodInvocation:answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @AT@ 10908 @LENGTH@ 55
------INS MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @AT@ 10908 @LENGTH@ 22
------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @AT@ 10908 @LENGTH@ 6
------INS SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @TO@ MethodInvocation@@answer.getProperties().remove(Exchange.MESSAGE_HISTORY) @AT@ 10931 @LENGTH@ 32
---------INS QualifiedName@@Exchange.MESSAGE_HISTORY @TO@ SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @AT@ 10938 @LENGTH@ 24
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 10938 @LENGTH@ 8
------------INS SimpleName@@MESSAGE_HISTORY @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 10947 @LENGTH@ 15


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@RangeOption, [Comparable<RangeOption>] @AT@ 5005 @LENGTH@ 123
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5005 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5012 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5016 @LENGTH@ 8
---INS VariableDeclarationStatement@@int result=initial; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5037 @LENGTH@ 21
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=initial; @AT@ 5037 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=initial @TO@ VariableDeclarationStatement@@int result=initial; @AT@ 5041 @LENGTH@ 16
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=initial @AT@ 5041 @LENGTH@ 6
---------INS SimpleName@@initial @TO@ VariableDeclarationFragment@@result=initial @AT@ 5050 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:result=31 * result + terminal @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5067 @LENGTH@ 32
------INS Assignment@@result=31 * result + terminal @TO@ ExpressionStatement@@Assignment:result=31 * result + terminal @AT@ 5067 @LENGTH@ 31
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + terminal @AT@ 5067 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + terminal @AT@ 5073 @LENGTH@ 1
---------INS InfixExpression@@31 * result + terminal @TO@ Assignment@@result=31 * result + terminal @AT@ 5076 @LENGTH@ 22
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + terminal @AT@ 5076 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 5076 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 5078 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 5081 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + terminal @AT@ 5087 @LENGTH@ 1
------------INS SimpleName@@terminal @TO@ InfixExpression@@31 * result + terminal @AT@ 5090 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 5108 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 5115 @LENGTH@ 6


UPD VariableDeclarationStatement@@EJB ejb=injectionPoint.getAnnotated().getAnnotation(EJB.class); @TO@ EJB ejb=getResourceAnnotated(injectionPoint).getAnnotation(EJB.class); @AT@ 3462 @LENGTH@ 65
---UPD VariableDeclarationFragment@@ejb=injectionPoint.getAnnotated().getAnnotation(EJB.class) @TO@ ejb=getResourceAnnotated(injectionPoint).getAnnotation(EJB.class) @AT@ 3466 @LENGTH@ 60
------UPD MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(EJB.class) @TO@ getResourceAnnotated(injectionPoint).getAnnotation(EJB.class) @AT@ 3472 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getAnnotated:[] @AT@ 3472 @LENGTH@ 29
---------UPD SimpleName@@Name:injectionPoint @TO@ injectionPoint @AT@ 3472 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @TO@ MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(EJB.class) @AT@ 3559 @LENGTH@ 36
------------MOV SimpleName@@Name:injectionPoint @TO@ MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @AT@ 3472 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:deploymentResourceManager=new FileResourceManager(Paths.get(resourcesRoot.getPhysicalFile().getAbsolutePath())) @TO@ Assignment:deploymentResourceManager=new FileResourceManager(resourcesRoot.getPhysicalFile()) @AT@ 833 @LENGTH@ 114
---UPD Assignment@@deploymentResourceManager=new FileResourceManager(Paths.get(resourcesRoot.getPhysicalFile().getAbsolutePath())) @TO@ deploymentResourceManager=new FileResourceManager(resourcesRoot.getPhysicalFile()) @AT@ 833 @LENGTH@ 113
------UPD ClassInstanceCreation@@FileResourceManager[Paths.get(resourcesRoot.getPhysicalFile().getAbsolutePath())] @TO@ FileResourceManager[resourcesRoot.getPhysicalFile()] @AT@ 861 @LENGTH@ 85
---------INS MethodInvocation@@resourcesRoot.getPhysicalFile() @TO@ ClassInstanceCreation@@FileResourceManager[Paths.get(resourcesRoot.getPhysicalFile().getAbsolutePath())] @AT@ 857 @LENGTH@ 31
------------MOV SimpleName@@Name:resourcesRoot @TO@ MethodInvocation@@resourcesRoot.getPhysicalFile() @AT@ 895 @LENGTH@ 13
------------MOV SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@resourcesRoot.getPhysicalFile() @AT@ 927 @LENGTH@ 17
---------DEL MethodInvocation@@Paths.get(resourcesRoot.getPhysicalFile().getAbsolutePath()) @AT@ 885 @LENGTH@ 60
------------DEL SimpleName@@Name:Paths @AT@ 885 @LENGTH@ 5
------------DEL SimpleName@@MethodName:get:[resourcesRoot.getPhysicalFile().getAbsolutePath()] @AT@ 891 @LENGTH@ 54
---------------DEL MethodInvocation@@resourcesRoot.getPhysicalFile().getAbsolutePath() @AT@ 895 @LENGTH@ 49
------------------DEL MethodInvocation@@MethodName:getPhysicalFile:[] @AT@ 895 @LENGTH@ 31


UPD Block@@ThenBody:{  String contextPath=sname.getParent().getSimpleName().substring(8);  String endpointName=sname.getSimpleName();  final StringBuilder name=new StringBuilder(Endpoint.SEPID_DOMAIN + ":");  name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",");  name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName);  endpoints.add(ObjectNameFactory.create(name.toString()));} @TO@ ThenBody:{  String contextPath=sname.getParent().getSimpleName().substring(8);  String endpointName=sname.getSimpleName();  final StringBuilder name=new StringBuilder(Endpoint.SEPID_DOMAIN + ":");  name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=").append(contextPath).append(",");  name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=").append(endpointName);  endpoints.add(ObjectNameFactory.create(name.toString()));} @AT@ 1941 @LENGTH@ 498
---UPD ExpressionStatement@@MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @TO@ MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=").append(contextPath).append(",") @AT@ 2196 @LENGTH@ 71
------UPD MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @TO@ name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=").append(contextPath).append(",") @AT@ 2196 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:append:[Endpoint.SEPID_PROPERTY_CONTEXT + "="] @TO@ MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @AT@ 2196 @LENGTH@ 50
------------INS InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" @TO@ MethodInvocation@@MethodName:append:[Endpoint.SEPID_PROPERTY_CONTEXT + "="] @AT@ 2208 @LENGTH@ 37
---------------MOV QualifiedName@@Endpoint.SEPID_PROPERTY_CONTEXT @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" @AT@ 2208 @LENGTH@ 31
---------------MOV Operator@@+ @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" @AT@ 2239 @LENGTH@ 1
---------------MOV StringLiteral@@"=" @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" @AT@ 2242 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:append:[contextPath] @TO@ MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @AT@ 2196 @LENGTH@ 70
------------INS SimpleName@@contextPath @TO@ MethodInvocation@@MethodName:append:[contextPath] @AT@ 2254 @LENGTH@ 11
---------DEL SimpleName@@MethodName:append:[Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ","] @AT@ 2201 @LENGTH@ 65
------------DEL InfixExpression@@Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ "," @AT@ 2208 @LENGTH@ 57
---------------DEL SimpleName@@contextPath @AT@ 2248 @LENGTH@ 11
---------------DEL StringLiteral@@"," @AT@ 2262 @LENGTH@ 3
---------INS SimpleName@@MethodName:append:[","] @TO@ MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_CONTEXT + "=" + contextPath+ ",") @AT@ 2267 @LENGTH@ 11
------------INS StringLiteral@@"," @TO@ SimpleName@@MethodName:append:[","] @AT@ 2274 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName) @TO@ MethodInvocation:name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=").append(endpointName) @AT@ 2284 @LENGTH@ 67
------UPD MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName) @TO@ name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=").append(endpointName) @AT@ 2284 @LENGTH@ 66
---------DEL SimpleName@@MethodName:append:[Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName] @AT@ 2289 @LENGTH@ 61
------------DEL InfixExpression@@Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName @AT@ 2296 @LENGTH@ 53
---------------DEL SimpleName@@endpointName @AT@ 2337 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:append:[Endpoint.SEPID_PROPERTY_ENDPOINT + "="] @TO@ MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName) @AT@ 2296 @LENGTH@ 51
------------INS InfixExpression@@Endpoint.SEPID_PROPERTY_ENDPOINT + "=" @TO@ MethodInvocation@@MethodName:append:[Endpoint.SEPID_PROPERTY_ENDPOINT + "="] @AT@ 2308 @LENGTH@ 38
---------------MOV QualifiedName@@Endpoint.SEPID_PROPERTY_ENDPOINT @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_ENDPOINT + "=" @AT@ 2296 @LENGTH@ 32
---------------MOV Operator@@+ @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_ENDPOINT + "=" @AT@ 2328 @LENGTH@ 1
---------------MOV StringLiteral@@"=" @TO@ InfixExpression@@Endpoint.SEPID_PROPERTY_ENDPOINT + "=" @AT@ 2331 @LENGTH@ 3
---------INS SimpleName@@MethodName:append:[endpointName] @TO@ MethodInvocation@@name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + "=" + endpointName) @AT@ 2348 @LENGTH@ 20
------------INS SimpleName@@endpointName @TO@ SimpleName@@MethodName:append:[endpointName] @AT@ 2355 @LENGTH@ 12


INS MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @TO@ TypeDeclaration@@[public, final]BundleContextUtils,  @AT@ 2839 @LENGTH@ 614
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2839 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2846 @LENGTH@ 6
---INS ParameterizedType@@Map<String,Properties> @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2853 @LENGTH@ 23
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Properties> @AT@ 2853 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Properties> @AT@ 2857 @LENGTH@ 6
------INS SimpleType@@Properties @TO@ ParameterizedType@@Map<String,Properties> @AT@ 2865 @LENGTH@ 10
---INS SimpleName@@MethodName:findComponents @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2877 @LENGTH@ 14
---INS SingleVariableDeclaration@@BundleContext bundleContext @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2892 @LENGTH@ 27
------INS SimpleType@@BundleContext @TO@ SingleVariableDeclaration@@BundleContext bundleContext @AT@ 2892 @LENGTH@ 13
------INS SimpleName@@bundleContext @TO@ SingleVariableDeclaration@@BundleContext bundleContext @AT@ 2906 @LENGTH@ 13
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2921 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2921 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 2934 @LENGTH@ 12
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2967 @LENGTH@ 11
---INS SimpleType@@LoadPropertiesException @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 2980 @LENGTH@ 23
---INS VariableDeclarationStatement@@SortedMap<String,Properties> answer=new TreeMap<String,Properties>(); @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 3014 @LENGTH@ 73
------INS ParameterizedType@@SortedMap<String,Properties> @TO@ VariableDeclarationStatement@@SortedMap<String,Properties> answer=new TreeMap<String,Properties>(); @AT@ 3014 @LENGTH@ 29
---------INS SimpleType@@SortedMap @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3014 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3024 @LENGTH@ 6
---------INS SimpleType@@Properties @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3032 @LENGTH@ 10
------INS VariableDeclarationFragment@@answer=new TreeMap<String,Properties>() @TO@ VariableDeclarationStatement@@SortedMap<String,Properties> answer=new TreeMap<String,Properties>(); @AT@ 3044 @LENGTH@ 42
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=new TreeMap<String,Properties>() @AT@ 3044 @LENGTH@ 6
---------INS ClassInstanceCreation@@TreeMap<String,Properties>[] @TO@ VariableDeclarationFragment@@answer=new TreeMap<String,Properties>() @AT@ 3053 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<String,Properties>[] @AT@ 3053 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<String,Properties> @TO@ ClassInstanceCreation@@TreeMap<String,Properties>[] @AT@ 3057 @LENGTH@ 27
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<String,Properties> @AT@ 3057 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@TreeMap<String,Properties> @AT@ 3065 @LENGTH@ 6
---------------INS SimpleType@@Properties @TO@ ParameterizedType@@TreeMap<String,Properties> @AT@ 3073 @LENGTH@ 10
---INS VariableDeclarationStatement@@Bundle[] bundles=bundleContext.getBundles(); @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 3096 @LENGTH@ 46
------INS ArrayType@@Bundle[] @TO@ VariableDeclarationStatement@@Bundle[] bundles=bundleContext.getBundles(); @AT@ 3096 @LENGTH@ 8
---------INS SimpleType@@Bundle @TO@ ArrayType@@Bundle[] @AT@ 3096 @LENGTH@ 6
------INS VariableDeclarationFragment@@bundles=bundleContext.getBundles() @TO@ VariableDeclarationStatement@@Bundle[] bundles=bundleContext.getBundles(); @AT@ 3105 @LENGTH@ 36
---------INS SimpleName@@bundles @TO@ VariableDeclarationFragment@@bundles=bundleContext.getBundles() @AT@ 3105 @LENGTH@ 7
---------INS MethodInvocation@@bundleContext.getBundles() @TO@ VariableDeclarationFragment@@bundles=bundleContext.getBundles() @AT@ 3115 @LENGTH@ 26
------------INS SimpleName@@Name:bundleContext @TO@ MethodInvocation@@bundleContext.getBundles() @AT@ 3115 @LENGTH@ 13
------------INS SimpleName@@MethodName:getBundles:[] @TO@ MethodInvocation@@bundleContext.getBundles() @AT@ 3129 @LENGTH@ 12
---INS EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 3151 @LENGTH@ 273
------INS SingleVariableDeclaration@@Bundle bundle @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @AT@ 3156 @LENGTH@ 13
---------INS SimpleType@@Bundle @TO@ SingleVariableDeclaration@@Bundle bundle @AT@ 3156 @LENGTH@ 6
---------INS SimpleName@@bundle @TO@ SingleVariableDeclaration@@Bundle bundle @AT@ 3163 @LENGTH@ 6
------INS SimpleName@@bundles @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @AT@ 3172 @LENGTH@ 7
------INS VariableDeclarationStatement@@Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR); @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @AT@ 3195 @LENGTH@ 85
---------INS ParameterizedType@@Enumeration<URL> @TO@ VariableDeclarationStatement@@Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR); @AT@ 3195 @LENGTH@ 16
------------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<URL> @AT@ 3195 @LENGTH@ 11
------------INS SimpleType@@URL @TO@ ParameterizedType@@Enumeration<URL> @AT@ 3207 @LENGTH@ 3
---------INS VariableDeclarationFragment@@iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @TO@ VariableDeclarationStatement@@Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR); @AT@ 3212 @LENGTH@ 67
------------INS SimpleName@@iter @TO@ VariableDeclarationFragment@@iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @AT@ 3212 @LENGTH@ 4
------------INS MethodInvocation@@bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @TO@ VariableDeclarationFragment@@iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @AT@ 3219 @LENGTH@ 60
---------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @AT@ 3219 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getResources:[CamelContextHelper.COMPONENT_DESCRIPTOR] @TO@ MethodInvocation@@bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR) @AT@ 3226 @LENGTH@ 53
------------------INS QualifiedName@@CamelContextHelper.COMPONENT_DESCRIPTOR @TO@ SimpleName@@MethodName:getResources:[CamelContextHelper.COMPONENT_DESCRIPTOR] @AT@ 3239 @LENGTH@ 39
---------------------INS SimpleName@@CamelContextHelper @TO@ QualifiedName@@CamelContextHelper.COMPONENT_DESCRIPTOR @AT@ 3239 @LENGTH@ 18
---------------------INS SimpleName@@COMPONENT_DESCRIPTOR @TO@ QualifiedName@@CamelContextHelper.COMPONENT_DESCRIPTOR @AT@ 3258 @LENGTH@ 20
------INS VariableDeclarationStatement@@SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter); @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @AT@ 3293 @LENGTH@ 89
---------INS ParameterizedType@@SortedMap<String,Properties> @TO@ VariableDeclarationStatement@@SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter); @AT@ 3293 @LENGTH@ 28
------------INS SimpleType@@SortedMap @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3293 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3303 @LENGTH@ 6
------------INS SimpleType@@Properties @TO@ ParameterizedType@@SortedMap<String,Properties> @AT@ 3310 @LENGTH@ 10
---------INS VariableDeclarationFragment@@map=CamelContextHelper.findComponents(camelContext,iter) @TO@ VariableDeclarationStatement@@SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter); @AT@ 3322 @LENGTH@ 59
------------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=CamelContextHelper.findComponents(camelContext,iter) @AT@ 3322 @LENGTH@ 3
------------INS MethodInvocation@@CamelContextHelper.findComponents(camelContext,iter) @TO@ VariableDeclarationFragment@@map=CamelContextHelper.findComponents(camelContext,iter) @AT@ 3328 @LENGTH@ 53
---------------INS SimpleName@@Name:CamelContextHelper @TO@ MethodInvocation@@CamelContextHelper.findComponents(camelContext,iter) @AT@ 3328 @LENGTH@ 18
---------------INS SimpleName@@MethodName:findComponents:[camelContext, iter] @TO@ MethodInvocation@@CamelContextHelper.findComponents(camelContext,iter) @AT@ 3347 @LENGTH@ 34
------------------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:findComponents:[camelContext, iter] @AT@ 3362 @LENGTH@ 12
------------------INS SimpleName@@iter @TO@ SimpleName@@MethodName:findComponents:[camelContext, iter] @AT@ 3376 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:answer.putAll(map) @TO@ EnhancedForStatement@@for (Bundle bundle : bundles) {  Enumeration<URL> iter=bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR);  SortedMap<String,Properties> map=CamelContextHelper.findComponents(camelContext,iter);  answer.putAll(map);} @AT@ 3395 @LENGTH@ 19
---------INS MethodInvocation@@answer.putAll(map) @TO@ ExpressionStatement@@MethodInvocation:answer.putAll(map) @AT@ 3395 @LENGTH@ 18
------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.putAll(map) @AT@ 3395 @LENGTH@ 6
------------INS SimpleName@@MethodName:putAll:[map] @TO@ MethodInvocation@@answer.putAll(map) @AT@ 3402 @LENGTH@ 11
---------------INS SimpleName@@map @TO@ SimpleName@@MethodName:putAll:[map] @AT@ 3409 @LENGTH@ 3
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, static, Map<String,Properties>, MethodName:findComponents, BundleContext bundleContext, CamelContext camelContext, IOException, LoadPropertiesException,  @AT@ 3433 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 3440 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:unbindGitDataStore, GitDataStore gitDataStore,  @TO@ void, MethodName:unbindGitDataStore, DataStore gitDataStore,  @AT@ 11252 @LENGTH@ 101
---UPD SingleVariableDeclaration@@GitDataStore gitDataStore @TO@ DataStore gitDataStore @AT@ 11271 @LENGTH@ 25
------UPD SimpleType@@GitDataStore @TO@ DataStore @AT@ 11271 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:this.gitDataStore.unbind(gitDataStore) @TO@ MethodInvocation:this.gitDataStore.unbind((GitDataStore)gitDataStore) @AT@ 11308 @LENGTH@ 39
------UPD MethodInvocation@@this.gitDataStore.unbind(gitDataStore) @TO@ this.gitDataStore.unbind((GitDataStore)gitDataStore) @AT@ 11308 @LENGTH@ 38
---------UPD SimpleName@@MethodName:unbind:[gitDataStore] @TO@ MethodName:unbind:[(GitDataStore)gitDataStore] @AT@ 11326 @LENGTH@ 20
------------DEL SimpleName@@gitDataStore @AT@ 11333 @LENGTH@ 12
------------INS CastExpression@@(GitDataStore)gitDataStore @TO@ SimpleName@@MethodName:unbind:[gitDataStore] @AT@ 11427 @LENGTH@ 27
---------------INS SimpleType@@GitDataStore @TO@ CastExpression@@(GitDataStore)gitDataStore @AT@ 11428 @LENGTH@ 12
---------------INS SimpleName@@gitDataStore @TO@ CastExpression@@(GitDataStore)gitDataStore @AT@ 11442 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:getFieldValue("provisioningResult") @TO@ MethodInvocation:getFieldValue("provisionResult") @AT@ 8066 @LENGTH@ 43
---UPD MethodInvocation@@getFieldValue("provisioningResult") @TO@ getFieldValue("provisionResult") @AT@ 8073 @LENGTH@ 35
------UPD SimpleName@@MethodName:getFieldValue:["provisioningResult"] @TO@ MethodName:getFieldValue:["provisionResult"] @AT@ 8073 @LENGTH@ 35
---------UPD StringLiteral@@"provisioningResult" @TO@ "provisionResult" @AT@ 8087 @LENGTH@ 20


UPD MethodDeclaration@@AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 31214 @LENGTH@ 38
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 31252 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 31252 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 31260 @LENGTH@ 17


UPD IfStatement@@if (currOp.getChildOperators() == null) {  if (currOp instanceof FileSinkOperator) {    FileSinkOperator fsOp=(FileSinkOperator)currOp;    return !fsOp.getConf().isRemovedReduceSinkBucketSort();  }  if (currOp instanceof ReduceSinkOperator) {    return true;  }  return false;} @TO@ if ((currOp.getChildOperators() == null) || (currOp.getChildOperators().isEmpty())) {  if (currOp instanceof FileSinkOperator) {    FileSinkOperator fsOp=(FileSinkOperator)currOp;    return !fsOp.getConf().isRemovedReduceSinkBucketSort();  }  if (currOp instanceof ReduceSinkOperator) {    return true;  }  return false;} @AT@ 8905 @LENGTH@ 805
---INS InfixExpression@@(currOp.getChildOperators() == null) || (currOp.getChildOperators().isEmpty()) @TO@ IfStatement@@if (currOp.getChildOperators() == null) {  if (currOp instanceof FileSinkOperator) {    FileSinkOperator fsOp=(FileSinkOperator)currOp;    return !fsOp.getConf().isRemovedReduceSinkBucketSort();  }  if (currOp instanceof ReduceSinkOperator) {    return true;  }  return false;} @AT@ 8909 @LENGTH@ 78
------INS ParenthesizedExpression@@(currOp.getChildOperators() == null) @TO@ InfixExpression@@(currOp.getChildOperators() == null) || (currOp.getChildOperators().isEmpty()) @AT@ 8909 @LENGTH@ 36
---------MOV InfixExpression@@currOp.getChildOperators() == null @TO@ ParenthesizedExpression@@(currOp.getChildOperators() == null) @AT@ 8909 @LENGTH@ 34
------INS Operator@@|| @TO@ InfixExpression@@(currOp.getChildOperators() == null) || (currOp.getChildOperators().isEmpty()) @AT@ 8945 @LENGTH@ 2
------INS ParenthesizedExpression@@(currOp.getChildOperators().isEmpty()) @TO@ InfixExpression@@(currOp.getChildOperators() == null) || (currOp.getChildOperators().isEmpty()) @AT@ 8949 @LENGTH@ 38
---------INS MethodInvocation@@currOp.getChildOperators().isEmpty() @TO@ ParenthesizedExpression@@(currOp.getChildOperators().isEmpty()) @AT@ 8950 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getChildOperators:[] @TO@ MethodInvocation@@currOp.getChildOperators().isEmpty() @AT@ 8950 @LENGTH@ 26
------------INS SimpleName@@Name:currOp @TO@ MethodInvocation@@currOp.getChildOperators().isEmpty() @AT@ 8950 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@currOp.getChildOperators().isEmpty() @AT@ 8977 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:getEndpoint().onListenerContainerStarting(listenerContainer) @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 6048 @LENGTH@ 61
---INS MethodInvocation@@getEndpoint().onListenerContainerStarting(listenerContainer) @TO@ ExpressionStatement@@MethodInvocation:getEndpoint().onListenerContainerStarting(listenerContainer) @AT@ 6048 @LENGTH@ 60
------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().onListenerContainerStarting(listenerContainer) @AT@ 6048 @LENGTH@ 13
------INS SimpleName@@MethodName:onListenerContainerStarting:[listenerContainer] @TO@ MethodInvocation@@getEndpoint().onListenerContainerStarting(listenerContainer) @AT@ 6062 @LENGTH@ 46
---------INS SimpleName@@listenerContainer @TO@ SimpleName@@MethodName:onListenerContainerStarting:[listenerContainer] @AT@ 6090 @LENGTH@ 17


INS TryStatement@@try {  domainSlaveClient.execute(new OperationBuilder(op).build());} catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @TO@ MethodDeclaration@@private, static, void, MethodName:reloadSlave, Exception,  @AT@ 9689 @LENGTH@ 313
---MOV ExpressionStatement@@MethodInvocation:domainSlaveClient.execute(new OperationBuilder(op).build()) @TO@ TryStatement@@try {  domainSlaveClient.execute(new OperationBuilder(op).build());} catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @AT@ 9641 @LENGTH@ 60
---INS CatchClause@@catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @TO@ TryStatement@@try {  domainSlaveClient.execute(new OperationBuilder(op).build());} catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @AT@ 9778 @LENGTH@ 224
------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @AT@ 9784 @LENGTH@ 13
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 9784 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 9796 @LENGTH@ 1
------INS IfStatement@@if (!(e.getCause() instanceof ExecutionException)) {  throw e;} @TO@ CatchClause@@catch (IOException e) {  if (!(e.getCause() instanceof ExecutionException)) {    throw e;  }} @AT@ 9813 @LENGTH@ 91
---------INS PrefixExpression@@!(e.getCause() instanceof ExecutionException) @TO@ IfStatement@@if (!(e.getCause() instanceof ExecutionException)) {  throw e;} @AT@ 9817 @LENGTH@ 45
------------INS Operator@@! @TO@ PrefixExpression@@!(e.getCause() instanceof ExecutionException) @AT@ 9817 @LENGTH@ 1
------------INS ParenthesizedExpression@@(e.getCause() instanceof ExecutionException) @TO@ PrefixExpression@@!(e.getCause() instanceof ExecutionException) @AT@ 9818 @LENGTH@ 44
---------------INS InstanceofExpression@@e.getCause() instanceof ExecutionException @TO@ ParenthesizedExpression@@(e.getCause() instanceof ExecutionException) @AT@ 9819 @LENGTH@ 42
------------------INS MethodInvocation@@e.getCause() @TO@ InstanceofExpression@@e.getCause() instanceof ExecutionException @AT@ 9819 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 9819 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 9821 @LENGTH@ 10
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e.getCause() instanceof ExecutionException @AT@ 9832 @LENGTH@ 10
------------------INS SimpleType@@ExecutionException @TO@ InstanceofExpression@@e.getCause() instanceof ExecutionException @AT@ 9843 @LENGTH@ 18
---------INS Block@@ThenBody:{  throw e;} @TO@ IfStatement@@if (!(e.getCause() instanceof ExecutionException)) {  throw e;} @AT@ 9864 @LENGTH@ 40
------------INS ThrowStatement@@SimpleName:e @TO@ Block@@ThenBody:{  throw e;} @AT@ 9882 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 9888 @LENGTH@ 1


UPD SuperConstructorInvocation@@super(UndertowExtension.PATH_LOCATION,UndertowExtension.getResolver(Constants.HOST,Constants.LOCATION),LocationAdd.INSTANCE,ReloadRequiredRemoveStepHandler.INSTANCE);
 @TO@ super(UndertowExtension.PATH_LOCATION,UndertowExtension.getResolver(Constants.HOST,Constants.LOCATION),LocationAdd.INSTANCE,new ServiceRemoveStepHandler(LocationAdd.INSTANCE){
  @Override protected ServiceName serviceName(  String name,  PathAddress address){
    final PathAddress hostAddress=address.subAddress(0,address.size() - 1);
    final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1);
    final String serverName=serverAddress.getLastElement().getValue();
    final String hostName=hostAddress.getLastElement().getValue();
    return UndertowService.locationServiceName(serverName,hostName,name);
  }
}
);
 @AT@ 2258 @LENGTH@ 227
---DEL QualifiedName@@ReloadRequiredRemoveStepHandler.INSTANCE @AT@ 2434 @LENGTH@ 40
---INS ClassInstanceCreation@@ServiceRemoveStepHandler[LocationAdd.INSTANCE] @TO@ SuperConstructorInvocation@@super(UndertowExtension.PATH_LOCATION,UndertowExtension.getResolver(Constants.HOST,Constants.LOCATION),LocationAdd.INSTANCE,ReloadRequiredRemoveStepHandler.INSTANCE);
 @AT@ 2513 @LENGTH@ 699
------INS New@@new @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[LocationAdd.INSTANCE] @AT@ 2513 @LENGTH@ 3
------INS SimpleType@@ServiceRemoveStepHandler @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[LocationAdd.INSTANCE] @AT@ 2517 @LENGTH@ 24
------INS QualifiedName@@LocationAdd.INSTANCE @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[LocationAdd.INSTANCE] @AT@ 2542 @LENGTH@ 20
---------MOV SimpleName@@ReloadRequiredRemoveStepHandler @TO@ QualifiedName@@LocationAdd.INSTANCE @AT@ 2434 @LENGTH@ 31
---------MOV SimpleName@@INSTANCE @TO@ QualifiedName@@LocationAdd.INSTANCE @AT@ 2466 @LENGTH@ 8
------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[LocationAdd.INSTANCE] @AT@ 2564 @LENGTH@ 648
---------INS MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2617 @LENGTH@ 577
------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2617 @LENGTH@ 9
------------INS SimpleType@@ServiceName @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2627 @LENGTH@ 11
------------INS SimpleName@@MethodName:serviceName @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2639 @LENGTH@ 11
------------INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2651 @LENGTH@ 11
---------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2651 @LENGTH@ 6
---------------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2658 @LENGTH@ 4
------------INS SingleVariableDeclaration@@PathAddress address @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2664 @LENGTH@ 19
---------------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 2664 @LENGTH@ 11
---------------INS SimpleName@@address @TO@ SingleVariableDeclaration@@PathAddress address @AT@ 2676 @LENGTH@ 7
------------INS VariableDeclarationStatement@@final PathAddress hostAddress=address.subAddress(0,address.size() - 1); @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2711 @LENGTH@ 74
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final PathAddress hostAddress=address.subAddress(0,address.size() - 1); @AT@ 2711 @LENGTH@ 5
---------------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@final PathAddress hostAddress=address.subAddress(0,address.size() - 1); @AT@ 2717 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@hostAddress=address.subAddress(0,address.size() - 1) @TO@ VariableDeclarationStatement@@final PathAddress hostAddress=address.subAddress(0,address.size() - 1); @AT@ 2729 @LENGTH@ 55
------------------INS SimpleName@@hostAddress @TO@ VariableDeclarationFragment@@hostAddress=address.subAddress(0,address.size() - 1) @AT@ 2729 @LENGTH@ 11
------------------INS MethodInvocation@@address.subAddress(0,address.size() - 1) @TO@ VariableDeclarationFragment@@hostAddress=address.subAddress(0,address.size() - 1) @AT@ 2743 @LENGTH@ 41
---------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.subAddress(0,address.size() - 1) @AT@ 2743 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:subAddress:[0, address.size() - 1] @TO@ MethodInvocation@@address.subAddress(0,address.size() - 1) @AT@ 2751 @LENGTH@ 33
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:subAddress:[0, address.size() - 1] @AT@ 2762 @LENGTH@ 1
------------------------INS InfixExpression@@address.size() - 1 @TO@ SimpleName@@MethodName:subAddress:[0, address.size() - 1] @AT@ 2765 @LENGTH@ 18
---------------------------INS MethodInvocation@@address.size() @TO@ InfixExpression@@address.size() - 1 @AT@ 2765 @LENGTH@ 14
------------------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.size() @AT@ 2765 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@address.size() @AT@ 2773 @LENGTH@ 6
---------------------------INS Operator@@- @TO@ InfixExpression@@address.size() - 1 @AT@ 2779 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@address.size() - 1 @AT@ 2782 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1); @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2810 @LENGTH@ 84
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1); @AT@ 2810 @LENGTH@ 5
---------------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1); @AT@ 2816 @LENGTH@ 11
---------------INS VariableDeclarationFragment@@serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1) @TO@ VariableDeclarationStatement@@final PathAddress serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1); @AT@ 2828 @LENGTH@ 65
------------------INS SimpleName@@serverAddress @TO@ VariableDeclarationFragment@@serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1) @AT@ 2828 @LENGTH@ 13
------------------INS MethodInvocation@@hostAddress.subAddress(0,hostAddress.size() - 1) @TO@ VariableDeclarationFragment@@serverAddress=hostAddress.subAddress(0,hostAddress.size() - 1) @AT@ 2844 @LENGTH@ 49
---------------------INS SimpleName@@Name:hostAddress @TO@ MethodInvocation@@hostAddress.subAddress(0,hostAddress.size() - 1) @AT@ 2844 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:subAddress:[0, hostAddress.size() - 1] @TO@ MethodInvocation@@hostAddress.subAddress(0,hostAddress.size() - 1) @AT@ 2856 @LENGTH@ 37
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:subAddress:[0, hostAddress.size() - 1] @AT@ 2867 @LENGTH@ 1
------------------------INS InfixExpression@@hostAddress.size() - 1 @TO@ SimpleName@@MethodName:subAddress:[0, hostAddress.size() - 1] @AT@ 2870 @LENGTH@ 22
---------------------------INS MethodInvocation@@hostAddress.size() @TO@ InfixExpression@@hostAddress.size() - 1 @AT@ 2870 @LENGTH@ 18
------------------------------INS SimpleName@@Name:hostAddress @TO@ MethodInvocation@@hostAddress.size() @AT@ 2870 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@hostAddress.size() @AT@ 2882 @LENGTH@ 6
---------------------------INS Operator@@- @TO@ InfixExpression@@hostAddress.size() - 1 @AT@ 2888 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@hostAddress.size() - 1 @AT@ 2891 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final String serverName=serverAddress.getLastElement().getValue(); @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 2919 @LENGTH@ 68
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String serverName=serverAddress.getLastElement().getValue(); @AT@ 2919 @LENGTH@ 5
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String serverName=serverAddress.getLastElement().getValue(); @AT@ 2925 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@serverName=serverAddress.getLastElement().getValue() @TO@ VariableDeclarationStatement@@final String serverName=serverAddress.getLastElement().getValue(); @AT@ 2932 @LENGTH@ 54
------------------INS SimpleName@@serverName @TO@ VariableDeclarationFragment@@serverName=serverAddress.getLastElement().getValue() @AT@ 2932 @LENGTH@ 10
------------------INS MethodInvocation@@serverAddress.getLastElement().getValue() @TO@ VariableDeclarationFragment@@serverName=serverAddress.getLastElement().getValue() @AT@ 2945 @LENGTH@ 41
---------------------INS MethodInvocation@@MethodName:getLastElement:[] @TO@ MethodInvocation@@serverAddress.getLastElement().getValue() @AT@ 2945 @LENGTH@ 30
---------------------INS SimpleName@@Name:serverAddress @TO@ MethodInvocation@@serverAddress.getLastElement().getValue() @AT@ 2945 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@serverAddress.getLastElement().getValue() @AT@ 2976 @LENGTH@ 10
------------INS VariableDeclarationStatement@@final String hostName=hostAddress.getLastElement().getValue(); @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 3012 @LENGTH@ 64
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String hostName=hostAddress.getLastElement().getValue(); @AT@ 3012 @LENGTH@ 5
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String hostName=hostAddress.getLastElement().getValue(); @AT@ 3018 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@hostName=hostAddress.getLastElement().getValue() @TO@ VariableDeclarationStatement@@final String hostName=hostAddress.getLastElement().getValue(); @AT@ 3025 @LENGTH@ 50
------------------INS SimpleName@@hostName @TO@ VariableDeclarationFragment@@hostName=hostAddress.getLastElement().getValue() @AT@ 3025 @LENGTH@ 8
------------------INS MethodInvocation@@hostAddress.getLastElement().getValue() @TO@ VariableDeclarationFragment@@hostName=hostAddress.getLastElement().getValue() @AT@ 3036 @LENGTH@ 39
---------------------INS MethodInvocation@@MethodName:getLastElement:[] @TO@ MethodInvocation@@hostAddress.getLastElement().getValue() @AT@ 3036 @LENGTH@ 28
---------------------INS SimpleName@@Name:hostAddress @TO@ MethodInvocation@@hostAddress.getLastElement().getValue() @AT@ 3036 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@hostAddress.getLastElement().getValue() @AT@ 3065 @LENGTH@ 10
------------INS ReturnStatement@@MethodInvocation:UndertowService.locationServiceName(serverName,hostName,name) @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, PathAddress address,  @AT@ 3101 @LENGTH@ 71
---------------INS MethodInvocation@@UndertowService.locationServiceName(serverName,hostName,name) @TO@ ReturnStatement@@MethodInvocation:UndertowService.locationServiceName(serverName,hostName,name) @AT@ 3108 @LENGTH@ 63
------------------INS SimpleName@@Name:UndertowService @TO@ MethodInvocation@@UndertowService.locationServiceName(serverName,hostName,name) @AT@ 3108 @LENGTH@ 15
------------------INS SimpleName@@MethodName:locationServiceName:[serverName, hostName, name] @TO@ MethodInvocation@@UndertowService.locationServiceName(serverName,hostName,name) @AT@ 3124 @LENGTH@ 47
---------------------INS SimpleName@@serverName @TO@ SimpleName@@MethodName:locationServiceName:[serverName, hostName, name] @AT@ 3144 @LENGTH@ 10
---------------------INS SimpleName@@hostName @TO@ SimpleName@@MethodName:locationServiceName:[serverName, hostName, name] @AT@ 3156 @LENGTH@ 8
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:locationServiceName:[serverName, hostName, name] @AT@ 3166 @LENGTH@ 4


INS MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @TO@ TypeDeclaration@@[public]PatchingAssert,  @AT@ 7813 @LENGTH@ 828
---INS Modifier@@static @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7813 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7820 @LENGTH@ 4
---INS SimpleName@@MethodName:assertPatchHasBeenRolledBack @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7825 @LENGTH@ 28
---INS SingleVariableDeclaration@@PatchingResult result @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7854 @LENGTH@ 21
------INS SimpleType@@PatchingResult @TO@ SingleVariableDeclaration@@PatchingResult result @AT@ 7854 @LENGTH@ 14
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@PatchingResult result @AT@ 7869 @LENGTH@ 6
---INS SingleVariableDeclaration@@Patch patch @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7877 @LENGTH@ 11
------INS SimpleType@@Patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 7877 @LENGTH@ 5
------INS SimpleName@@patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 7883 @LENGTH@ 5
---INS SingleVariableDeclaration@@PatchInfo expectedPatchInfo @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7890 @LENGTH@ 27
------INS SimpleType@@PatchInfo @TO@ SingleVariableDeclaration@@PatchInfo expectedPatchInfo @AT@ 7890 @LENGTH@ 9
------INS SimpleName@@expectedPatchInfo @TO@ SingleVariableDeclaration@@PatchInfo expectedPatchInfo @AT@ 7900 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7929 @LENGTH@ 83
------INS MethodInvocation@@assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @AT@ 7929 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @TO@ MethodInvocation@@assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @AT@ 7929 @LENGTH@ 82
------------INS InfixExpression@@"encountered problems: " + result.getProblems() @TO@ SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @AT@ 7941 @LENGTH@ 47
---------------INS StringLiteral@@"encountered problems: " @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7941 @LENGTH@ 24
---------------INS Operator@@+ @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7965 @LENGTH@ 1
---------------INS MethodInvocation@@result.getProblems() @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7968 @LENGTH@ 20
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getProblems() @AT@ 7968 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProblems:[] @TO@ MethodInvocation@@result.getProblems() @AT@ 7975 @LENGTH@ 13
------------INS MethodInvocation@@result.hasFailures() @TO@ SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @AT@ 7990 @LENGTH@ 20
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.hasFailures() @AT@ 7990 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hasFailures:[] @TO@ MethodInvocation@@result.hasFailures() @AT@ 7997 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8021 @LENGTH@ 81
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @AT@ 8021 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @AT@ 8021 @LENGTH@ 80
------------INS MethodInvocation@@expectedPatchInfo.getVersion() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @AT@ 8034 @LENGTH@ 30
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getVersion() @AT@ 8034 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@expectedPatchInfo.getVersion() @AT@ 8052 @LENGTH@ 12
------------INS MethodInvocation@@result.getPatchInfo().getVersion() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @AT@ 8066 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8066 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8066 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8088 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8111 @LENGTH@ 91
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @AT@ 8111 @LENGTH@ 90
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @AT@ 8111 @LENGTH@ 90
------------INS MethodInvocation@@expectedPatchInfo.getCumulativeID() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @AT@ 8124 @LENGTH@ 35
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getCumulativeID() @AT@ 8124 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getCumulativeID:[] @TO@ MethodInvocation@@expectedPatchInfo.getCumulativeID() @AT@ 8142 @LENGTH@ 17
------------INS MethodInvocation@@result.getPatchInfo().getCumulativeID() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @AT@ 8161 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8161 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8161 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCumulativeID:[] @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8183 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8211 @LENGTH@ 83
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @AT@ 8211 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @AT@ 8211 @LENGTH@ 82
------------INS MethodInvocation@@expectedPatchInfo.getPatchIDs() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @AT@ 8224 @LENGTH@ 31
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getPatchIDs() @AT@ 8224 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@expectedPatchInfo.getPatchIDs() @AT@ 8242 @LENGTH@ 13
------------INS MethodInvocation@@result.getPatchInfo().getPatchIDs() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @AT@ 8257 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8257 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8257 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8279 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8304 @LENGTH@ 106
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @AT@ 8304 @LENGTH@ 105
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @AT@ 8304 @LENGTH@ 105
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())] @AT@ 8326 @LENGTH@ 82
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getModulePatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8365 @LENGTH@ 43
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getModulePatchDirectory:[patch.getPatchId()] @AT@ 8389 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8389 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8395 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8419 @LENGTH@ 107
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @AT@ 8419 @LENGTH@ 106
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @AT@ 8419 @LENGTH@ 106
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())] @AT@ 8441 @LENGTH@ 83
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBundlesPatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8480 @LENGTH@ 44
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getBundlesPatchDirectory:[patch.getPatchId()] @AT@ 8505 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8505 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8511 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8535 @LENGTH@ 100
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @AT@ 8535 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @AT@ 8535 @LENGTH@ 99
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())] @AT@ 8557 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8596 @LENGTH@ 37
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getPatchDirectory:[patch.getPatchId()] @AT@ 8614 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8614 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8620 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @TO@ MethodDeclaration@@public, void, MethodName:registerChildren, ManagementResourceRegistration resourceRegistration,  @AT@ 23683 @LENGTH@ 72
---INS MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23683 @LENGTH@ 71
------INS SimpleName@@Name:resourceRegistration @TO@ MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23683 @LENGTH@ 20
------INS SimpleName@@MethodName:registerSubModel:[PatchResourceDefinition.INSTANCE] @TO@ MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23704 @LENGTH@ 50
---------INS QualifiedName@@PatchResourceDefinition.INSTANCE @TO@ SimpleName@@MethodName:registerSubModel:[PatchResourceDefinition.INSTANCE] @AT@ 23721 @LENGTH@ 32
------------INS SimpleName@@PatchResourceDefinition @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 23721 @LENGTH@ 23
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 23745 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]Jackson2JsonMessageConverterTests,  @AT@ 4637 @LENGTH@ 227
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4637 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4644 @LENGTH@ 4
---INS SimpleName@@MethodName:testAmqp330ObjectArray @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4649 @LENGTH@ 22
---INS VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4678 @LENGTH@ 33
------INS ArrayType@@SimpleTrade[] @TO@ VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @AT@ 4678 @LENGTH@ 13
---------INS SimpleType@@SimpleTrade @TO@ ArrayType@@SimpleTrade[] @AT@ 4678 @LENGTH@ 11
------INS VariableDeclarationFragment@@testData={trade} @TO@ VariableDeclarationStatement@@SimpleTrade[] testData={trade}; @AT@ 4692 @LENGTH@ 18
---------INS SimpleName@@testData @TO@ VariableDeclarationFragment@@testData={trade} @AT@ 4692 @LENGTH@ 8
---------INS ArrayInitializer@@{trade} @TO@ VariableDeclarationFragment@@testData={trade} @AT@ 4703 @LENGTH@ 7
------------INS SimpleName@@trade @TO@ ArrayInitializer@@{trade} @AT@ 4704 @LENGTH@ 5
---INS VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4714 @LENGTH@ 73
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4714 @LENGTH@ 7
------INS VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4722 @LENGTH@ 64
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4722 @LENGTH@ 7
---------INS MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4732 @LENGTH@ 54
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4732 @LENGTH@ 9
------------INS SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4742 @LENGTH@ 44
---------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4752 @LENGTH@ 8
---------------INS ClassInstanceCreation@@MessageProperties[] @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4762 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4762 @LENGTH@ 3
------------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4766 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330ObjectArray,  @AT@ 4790 @LENGTH@ 71
------INS MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4790 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @TO@ MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4790 @LENGTH@ 70
------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4808 @LENGTH@ 8
------------INS CastExpression@@(Object[])converter.fromMessage(message) @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4818 @LENGTH@ 41
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4819 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4819 @LENGTH@ 6
---------------INS MethodInvocation@@converter.fromMessage(message) @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4829 @LENGTH@ 30
------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4829 @LENGTH@ 9
------------------INS SimpleName@@MethodName:fromMessage:[message] @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4839 @LENGTH@ 20
---------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:fromMessage:[message] @AT@ 4851 @LENGTH@ 7


INS IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @TO@ MethodDeclaration@@private, static, Map<String,Object>, MethodName:safeCopy, Map<String,Object> properties,  @AT@ 33161 @LENGTH@ 126
---INS InfixExpression@@history != null @TO@ IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 33165 @LENGTH@ 15
------INS SimpleName@@history @TO@ InfixExpression@@history != null @AT@ 33165 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@history != null @AT@ 33172 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@history != null @AT@ 33176 @LENGTH@ 4
---INS Block@@ThenBody:{  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @TO@ IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 33182 @LENGTH@ 105
------INS ExpressionStatement@@MethodInvocation:properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @TO@ Block@@ThenBody:{  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 33196 @LENGTH@ 81
---------INS MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @TO@ ExpressionStatement@@MethodInvocation:properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 33196 @LENGTH@ 80
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 33196 @LENGTH@ 10
------------INS SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @TO@ MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 33207 @LENGTH@ 69
---------------INS QualifiedName@@Exchange.MESSAGE_HISTORY @TO@ SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @AT@ 33211 @LENGTH@ 24
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 33211 @LENGTH@ 8
------------------INS SimpleName@@MESSAGE_HISTORY @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 33220 @LENGTH@ 15
---------------INS ClassInstanceCreation@@ArrayList<MessageHistory>[history] @TO@ SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @AT@ 33237 @LENGTH@ 38
------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 33237 @LENGTH@ 3
------------------INS ParameterizedType@@ArrayList<MessageHistory> @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 33241 @LENGTH@ 25
---------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<MessageHistory> @AT@ 33241 @LENGTH@ 9
---------------------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@ArrayList<MessageHistory> @AT@ 33251 @LENGTH@ 14
------------------INS SimpleName@@history @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 33267 @LENGTH@ 7


UPD FieldDeclaration@@protected, OutputCollector, [out] @TO@ protected, Map<String,OutputCollector>, [outMap] @AT@ 1621 @LENGTH@ 30
---INS ParameterizedType@@Map<String,OutputCollector> @TO@ FieldDeclaration@@protected, OutputCollector, [out] @AT@ 1631 @LENGTH@ 28
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 1631 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 1635 @LENGTH@ 6
------INS SimpleType@@OutputCollector @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 1643 @LENGTH@ 15
---DEL SimpleType@@OutputCollector @AT@ 1631 @LENGTH@ 15
---UPD VariableDeclarationFragment@@out @TO@ outMap @AT@ 1647 @LENGTH@ 3
------UPD SimpleName@@out @TO@ outMap @AT@ 1647 @LENGTH@ 3


UPD IfStatement@@if (!handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @TO@ if (handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @AT@ 9674 @LENGTH@ 240
---DEL PrefixExpression@@!handler.isDifferent(existing) @AT@ 9678 @LENGTH@ 30
------DEL Operator@@! @AT@ 9678 @LENGTH@ 1
---MOV MethodInvocation@@handler.isDifferent(existing) @TO@ IfStatement@@if (!handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @AT@ 9679 @LENGTH@ 29


UPD EnhancedForStatement@@for (Endpoint ep : dep.getService().getEndpoints()) {  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @TO@ for (Endpoint ep : dep.getService().getEndpoints()) {synchronized (ep) {    ep.setState(EndpointState.STOPPED);    ep.setInvocationHandler(new InvocationHandlerJAXWS());    ep.setState(EndpointState.STARTED);  }} @AT@ 6003 @LENGTH@ 242
---INS SynchronizedStatement@@synchronized (ep) {  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @TO@ EnhancedForStatement@@for (Endpoint ep : dep.getService().getEndpoints()) {  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6073 @LENGTH@ 223
------INS SimpleName@@ep @TO@ SynchronizedStatement@@synchronized (ep) {  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6086 @LENGTH@ 2
------INS Block@@SyncBody:{  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @TO@ SynchronizedStatement@@synchronized (ep) {  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6090 @LENGTH@ 206
---------MOV ExpressionStatement@@MethodInvocation:ep.setState(EndpointState.STOPPED) @TO@ Block@@SyncBody:{  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6073 @LENGTH@ 35
---------MOV ExpressionStatement@@MethodInvocation:ep.setInvocationHandler(new InvocationHandlerJAXWS()) @TO@ Block@@SyncBody:{  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6125 @LENGTH@ 54
---------MOV ExpressionStatement@@MethodInvocation:ep.setState(EndpointState.STARTED) @TO@ Block@@SyncBody:{  ep.setState(EndpointState.STOPPED);  ep.setInvocationHandler(new InvocationHandlerJAXWS());  ep.setState(EndpointState.STARTED);} @AT@ 6196 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @TO@ TypeDeclaration@@[public]ThrottlerTest, ContextTestSupport @AT@ 3825 @LENGTH@ 624
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3825 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3832 @LENGTH@ 4
---INS SimpleName@@MethodName:testTimeSlotCalculusForPeriod @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3837 @LENGTH@ 29
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3876 @LENGTH@ 20
---INS VariableDeclarationStatement@@Throttler throttler=new Throttler(context,null,constant(3),1000,null,false); @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3907 @LENGTH@ 83
------INS SimpleType@@Throttler @TO@ VariableDeclarationStatement@@Throttler throttler=new Throttler(context,null,constant(3),1000,null,false); @AT@ 3907 @LENGTH@ 9
------INS VariableDeclarationFragment@@throttler=new Throttler(context,null,constant(3),1000,null,false) @TO@ VariableDeclarationStatement@@Throttler throttler=new Throttler(context,null,constant(3),1000,null,false); @AT@ 3917 @LENGTH@ 72
---------INS SimpleName@@throttler @TO@ VariableDeclarationFragment@@throttler=new Throttler(context,null,constant(3),1000,null,false) @AT@ 3917 @LENGTH@ 9
---------INS ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @TO@ VariableDeclarationFragment@@throttler=new Throttler(context,null,constant(3),1000,null,false) @AT@ 3929 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3929 @LENGTH@ 3
------------INS SimpleType@@Throttler @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3933 @LENGTH@ 9
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3943 @LENGTH@ 7
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3952 @LENGTH@ 4
------------INS MethodInvocation@@constant(3) @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3958 @LENGTH@ 11
---------------INS SimpleName@@MethodName:constant:[3] @TO@ MethodInvocation@@constant(3) @AT@ 3958 @LENGTH@ 11
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:constant:[3] @AT@ 3967 @LENGTH@ 1
------------INS NumberLiteral@@1000 @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3971 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3977 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@Throttler[context, null, constant(3), 1000, null, false] @AT@ 3983 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:throttler.calculateDelay(new DefaultExchange(context)) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 3999 @LENGTH@ 55
------INS MethodInvocation@@throttler.calculateDelay(new DefaultExchange(context)) @TO@ ExpressionStatement@@MethodInvocation:throttler.calculateDelay(new DefaultExchange(context)) @AT@ 3999 @LENGTH@ 54
---------INS SimpleName@@Name:throttler @TO@ MethodInvocation@@throttler.calculateDelay(new DefaultExchange(context)) @AT@ 3999 @LENGTH@ 9
---------INS SimpleName@@MethodName:calculateDelay:[new DefaultExchange(context)] @TO@ MethodInvocation@@throttler.calculateDelay(new DefaultExchange(context)) @AT@ 4009 @LENGTH@ 44
------------INS ClassInstanceCreation@@DefaultExchange[context] @TO@ SimpleName@@MethodName:calculateDelay:[new DefaultExchange(context)] @AT@ 4024 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 4024 @LENGTH@ 3
---------------INS SimpleType@@DefaultExchange @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 4028 @LENGTH@ 15
---------------INS SimpleName@@context @TO@ ClassInstanceCreation@@DefaultExchange[context] @AT@ 4044 @LENGTH@ 7
---INS VariableDeclarationStatement@@TimeSlot slot=throttler.getSlot(); @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4064 @LENGTH@ 36
------INS SimpleType@@TimeSlot @TO@ VariableDeclarationStatement@@TimeSlot slot=throttler.getSlot(); @AT@ 4064 @LENGTH@ 8
------INS VariableDeclarationFragment@@slot=throttler.getSlot() @TO@ VariableDeclarationStatement@@TimeSlot slot=throttler.getSlot(); @AT@ 4073 @LENGTH@ 26
---------INS SimpleName@@slot @TO@ VariableDeclarationFragment@@slot=throttler.getSlot() @AT@ 4073 @LENGTH@ 4
---------INS MethodInvocation@@throttler.getSlot() @TO@ VariableDeclarationFragment@@slot=throttler.getSlot() @AT@ 4080 @LENGTH@ 19
------------INS SimpleName@@Name:throttler @TO@ MethodInvocation@@throttler.getSlot() @AT@ 4080 @LENGTH@ 9
------------INS SimpleName@@MethodName:getSlot:[] @TO@ MethodInvocation@@throttler.getSlot() @AT@ 4090 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertNotNull(slot) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4109 @LENGTH@ 20
------INS MethodInvocation@@assertNotNull(slot) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(slot) @AT@ 4109 @LENGTH@ 19
---------INS SimpleName@@MethodName:assertNotNull:[slot] @TO@ MethodInvocation@@assertNotNull(slot) @AT@ 4109 @LENGTH@ 19
------------INS SimpleName@@slot @TO@ SimpleName@@MethodName:assertNotNull:[slot] @AT@ 4123 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertSame(slot,throttler.nextSlot()) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4138 @LENGTH@ 39
------INS MethodInvocation@@assertSame(slot,throttler.nextSlot()) @TO@ ExpressionStatement@@MethodInvocation:assertSame(slot,throttler.nextSlot()) @AT@ 4138 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertSame:[slot, throttler.nextSlot()] @TO@ MethodInvocation@@assertSame(slot,throttler.nextSlot()) @AT@ 4138 @LENGTH@ 38
------------INS SimpleName@@slot @TO@ SimpleName@@MethodName:assertSame:[slot, throttler.nextSlot()] @AT@ 4149 @LENGTH@ 4
------------INS MethodInvocation@@throttler.nextSlot() @TO@ SimpleName@@MethodName:assertSame:[slot, throttler.nextSlot()] @AT@ 4155 @LENGTH@ 20
---------------INS SimpleName@@Name:throttler @TO@ MethodInvocation@@throttler.nextSlot() @AT@ 4155 @LENGTH@ 9
---------------INS SimpleName@@MethodName:nextSlot:[] @TO@ MethodInvocation@@throttler.nextSlot() @AT@ 4165 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Thread.sleep((long)(1.5 * 1000)) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4320 @LENGTH@ 34
------INS MethodInvocation@@Thread.sleep((long)(1.5 * 1000)) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep((long)(1.5 * 1000)) @AT@ 4320 @LENGTH@ 33
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep((long)(1.5 * 1000)) @AT@ 4320 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[(long)(1.5 * 1000)] @TO@ MethodInvocation@@Thread.sleep((long)(1.5 * 1000)) @AT@ 4327 @LENGTH@ 26
------------INS CastExpression@@(long)(1.5 * 1000) @TO@ SimpleName@@MethodName:sleep:[(long)(1.5 * 1000)] @AT@ 4333 @LENGTH@ 19
---------------INS PrimitiveType@@long @TO@ CastExpression@@(long)(1.5 * 1000) @AT@ 4334 @LENGTH@ 4
---------------INS ParenthesizedExpression@@(1.5 * 1000) @TO@ CastExpression@@(long)(1.5 * 1000) @AT@ 4340 @LENGTH@ 12
------------------INS InfixExpression@@1.5 * 1000 @TO@ ParenthesizedExpression@@(1.5 * 1000) @AT@ 4341 @LENGTH@ 10
---------------------INS NumberLiteral@@1.5 @TO@ InfixExpression@@1.5 * 1000 @AT@ 4341 @LENGTH@ 3
---------------------INS Operator@@* @TO@ InfixExpression@@1.5 * 1000 @AT@ 4344 @LENGTH@ 1
---------------------INS NumberLiteral@@1000 @TO@ InfixExpression@@1.5 * 1000 @AT@ 4347 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertFalse(slot.isActive()) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4363 @LENGTH@ 29
------INS MethodInvocation@@assertFalse(slot.isActive()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(slot.isActive()) @AT@ 4363 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertFalse:[slot.isActive()] @TO@ MethodInvocation@@assertFalse(slot.isActive()) @AT@ 4363 @LENGTH@ 28
------------INS MethodInvocation@@slot.isActive() @TO@ SimpleName@@MethodName:assertFalse:[slot.isActive()] @AT@ 4375 @LENGTH@ 15
---------------INS SimpleName@@Name:slot @TO@ MethodInvocation@@slot.isActive() @AT@ 4375 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isActive:[] @TO@ MethodInvocation@@slot.isActive() @AT@ 4380 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNotSame(slot,throttler.nextSlot()) @TO@ MethodDeclaration@@public, void, MethodName:testTimeSlotCalculusForPeriod, InterruptedException,  @AT@ 4401 @LENGTH@ 42
------INS MethodInvocation@@assertNotSame(slot,throttler.nextSlot()) @TO@ ExpressionStatement@@MethodInvocation:assertNotSame(slot,throttler.nextSlot()) @AT@ 4401 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertNotSame:[slot, throttler.nextSlot()] @TO@ MethodInvocation@@assertNotSame(slot,throttler.nextSlot()) @AT@ 4401 @LENGTH@ 41
------------INS SimpleName@@slot @TO@ SimpleName@@MethodName:assertNotSame:[slot, throttler.nextSlot()] @AT@ 4415 @LENGTH@ 4
------------INS MethodInvocation@@throttler.nextSlot() @TO@ SimpleName@@MethodName:assertNotSame:[slot, throttler.nextSlot()] @AT@ 4421 @LENGTH@ 20
---------------INS SimpleName@@Name:throttler @TO@ MethodInvocation@@throttler.nextSlot() @AT@ 4421 @LENGTH@ 9
---------------INS SimpleName@@MethodName:nextSlot:[] @TO@ MethodInvocation@@throttler.nextSlot() @AT@ 4431 @LENGTH@ 10


INS MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @TO@ TypeDeclaration@@[public, final]GenMapRedUtils,  @AT@ 29315 @LENGTH@ 392
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29315 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29322 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29329 @LENGTH@ 4
---INS SimpleName@@MethodName:setKeyAndValueDesc @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29334 @LENGTH@ 18
---INS SingleVariableDeclaration@@ReduceWork work @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29353 @LENGTH@ 15
------INS SimpleType@@ReduceWork @TO@ SingleVariableDeclaration@@ReduceWork work @AT@ 29353 @LENGTH@ 10
------INS SimpleName@@work @TO@ SingleVariableDeclaration@@ReduceWork work @AT@ 29364 @LENGTH@ 4
---INS SingleVariableDeclaration@@ReduceSinkOperator rs @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29370 @LENGTH@ 21
------INS SimpleType@@ReduceSinkOperator @TO@ SingleVariableDeclaration@@ReduceSinkOperator rs @AT@ 29370 @LENGTH@ 18
------INS SimpleName@@rs @TO@ SingleVariableDeclaration@@ReduceSinkOperator rs @AT@ 29389 @LENGTH@ 2
---INS VariableDeclarationStatement@@List<TableDesc> tagToSchema=work.getTagToValueDesc(); @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29506 @LENGTH@ 55
------INS ParameterizedType@@List<TableDesc> @TO@ VariableDeclarationStatement@@List<TableDesc> tagToSchema=work.getTagToValueDesc(); @AT@ 29506 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<TableDesc> @AT@ 29506 @LENGTH@ 4
---------INS SimpleType@@TableDesc @TO@ ParameterizedType@@List<TableDesc> @AT@ 29511 @LENGTH@ 9
------INS VariableDeclarationFragment@@tagToSchema=work.getTagToValueDesc() @TO@ VariableDeclarationStatement@@List<TableDesc> tagToSchema=work.getTagToValueDesc(); @AT@ 29522 @LENGTH@ 38
---------INS SimpleName@@tagToSchema @TO@ VariableDeclarationFragment@@tagToSchema=work.getTagToValueDesc() @AT@ 29522 @LENGTH@ 11
---------INS MethodInvocation@@work.getTagToValueDesc() @TO@ VariableDeclarationFragment@@tagToSchema=work.getTagToValueDesc() @AT@ 29536 @LENGTH@ 24
------------INS SimpleName@@Name:work @TO@ MethodInvocation@@work.getTagToValueDesc() @AT@ 29536 @LENGTH@ 4
------------INS SimpleName@@MethodName:getTagToValueDesc:[] @TO@ MethodInvocation@@work.getTagToValueDesc() @AT@ 29541 @LENGTH@ 19
---MOV ExpressionStatement@@MethodInvocation:plan.setKeyDesc(rs.getConf().getKeySerializeInfo()) @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29629 @LENGTH@ 52
---MOV VariableDeclarationStatement@@int tag=Math.max(0,rs.getConf().getTag()); @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29688 @LENGTH@ 45
---MOV WhileStatement@@while (tag + 1 > tagToSchema.size()) {  tagToSchema.add(null);} @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29802 @LENGTH@ 77
---MOV ExpressionStatement@@MethodInvocation:tagToSchema.set(tag,rs.getConf().getValueSerializeInfo()) @TO@ MethodDeclaration@@public, static, void, MethodName:setKeyAndValueDesc, ReduceWork work, ReduceSinkOperator rs,  @AT@ 29886 @LENGTH@ 59


INS MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @TO@ TypeDeclaration@@[public]GenericFileMessage, DefaultMessage @AT@ 1629 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1629 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1636 @LENGTH@ 4
---INS SimpleName@@MethodName:copyFrom @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1641 @LENGTH@ 8
---INS SingleVariableDeclaration@@Message that @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1650 @LENGTH@ 12
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message that @AT@ 1650 @LENGTH@ 7
------INS SimpleName@@that @TO@ SingleVariableDeclaration@@Message that @AT@ 1658 @LENGTH@ 4
---INS ExpressionStatement@@SuperMethodInvocation:super.copyFrom(that) @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1674 @LENGTH@ 21
------INS SuperMethodInvocation@@super.copyFrom(that) @TO@ ExpressionStatement@@SuperMethodInvocation:super.copyFrom(that) @AT@ 1674 @LENGTH@ 20
---------INS SimpleName@@MethodName:copyFrom:[that] @TO@ SuperMethodInvocation@@super.copyFrom(that) @AT@ 1680 @LENGTH@ 8
---------INS SimpleName@@that @TO@ SuperMethodInvocation@@super.copyFrom(that) @AT@ 1689 @LENGTH@ 4
---INS IfStatement@@if (that instanceof GenericFileMessage) {  setGenericFile(((GenericFileMessage)that).getGenericFile());} @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 1705 @LENGTH@ 125
------INS InstanceofExpression@@that instanceof GenericFileMessage @TO@ IfStatement@@if (that instanceof GenericFileMessage) {  setGenericFile(((GenericFileMessage)that).getGenericFile());} @AT@ 1709 @LENGTH@ 34
---------INS SimpleName@@that @TO@ InstanceofExpression@@that instanceof GenericFileMessage @AT@ 1709 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@that instanceof GenericFileMessage @AT@ 1714 @LENGTH@ 10
---------INS SimpleType@@GenericFileMessage @TO@ InstanceofExpression@@that instanceof GenericFileMessage @AT@ 1725 @LENGTH@ 18
------INS Block@@ThenBody:{  setGenericFile(((GenericFileMessage)that).getGenericFile());} @TO@ IfStatement@@if (that instanceof GenericFileMessage) {  setGenericFile(((GenericFileMessage)that).getGenericFile());} @AT@ 1745 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:setGenericFile(((GenericFileMessage)that).getGenericFile()) @TO@ Block@@ThenBody:{  setGenericFile(((GenericFileMessage)that).getGenericFile());} @AT@ 1759 @LENGTH@ 61
------------INS MethodInvocation@@setGenericFile(((GenericFileMessage)that).getGenericFile()) @TO@ ExpressionStatement@@MethodInvocation:setGenericFile(((GenericFileMessage)that).getGenericFile()) @AT@ 1759 @LENGTH@ 60
---------------INS SimpleName@@MethodName:setGenericFile:[((GenericFileMessage)that).getGenericFile()] @TO@ MethodInvocation@@setGenericFile(((GenericFileMessage)that).getGenericFile()) @AT@ 1759 @LENGTH@ 60
------------------INS MethodInvocation@@((GenericFileMessage)that).getGenericFile() @TO@ SimpleName@@MethodName:setGenericFile:[((GenericFileMessage)that).getGenericFile()] @AT@ 1774 @LENGTH@ 44
---------------------INS ParenthesizedExpression@@((GenericFileMessage)that) @TO@ MethodInvocation@@((GenericFileMessage)that).getGenericFile() @AT@ 1774 @LENGTH@ 27
------------------------INS CastExpression@@(GenericFileMessage)that @TO@ ParenthesizedExpression@@((GenericFileMessage)that) @AT@ 1775 @LENGTH@ 25
---------------------------INS SimpleType@@GenericFileMessage @TO@ CastExpression@@(GenericFileMessage)that @AT@ 1776 @LENGTH@ 18
---------------------------INS SimpleName@@that @TO@ CastExpression@@(GenericFileMessage)that @AT@ 1796 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getGenericFile:[] @TO@ MethodInvocation@@((GenericFileMessage)that).getGenericFile() @AT@ 1802 @LENGTH@ 16


INS IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @TO@ MethodDeclaration@@private, static, Map<String,Object>, MethodName:safeCopy, Map<String,Object> properties,  @AT@ 3557 @LENGTH@ 126
---INS InfixExpression@@history != null @TO@ IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 3561 @LENGTH@ 15
------INS SimpleName@@history @TO@ InfixExpression@@history != null @AT@ 3561 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@history != null @AT@ 3568 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@history != null @AT@ 3572 @LENGTH@ 4
---INS Block@@ThenBody:{  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @TO@ IfStatement@@if (history != null) {  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 3578 @LENGTH@ 105
------INS ExpressionStatement@@MethodInvocation:properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @TO@ Block@@ThenBody:{  properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history));} @AT@ 3592 @LENGTH@ 81
---------INS MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @TO@ ExpressionStatement@@MethodInvocation:properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 3592 @LENGTH@ 80
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 3592 @LENGTH@ 10
------------INS SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @TO@ MethodInvocation@@properties.put(Exchange.MESSAGE_HISTORY,new ArrayList<MessageHistory>(history)) @AT@ 3603 @LENGTH@ 69
---------------INS QualifiedName@@Exchange.MESSAGE_HISTORY @TO@ SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @AT@ 3607 @LENGTH@ 24
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 3607 @LENGTH@ 8
------------------INS SimpleName@@MESSAGE_HISTORY @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 3616 @LENGTH@ 15
---------------INS ClassInstanceCreation@@ArrayList<MessageHistory>[history] @TO@ SimpleName@@MethodName:put:[Exchange.MESSAGE_HISTORY, new ArrayList<MessageHistory>(history)] @AT@ 3633 @LENGTH@ 38
------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 3633 @LENGTH@ 3
------------------INS ParameterizedType@@ArrayList<MessageHistory> @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 3637 @LENGTH@ 25
---------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<MessageHistory> @AT@ 3637 @LENGTH@ 9
---------------------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@ArrayList<MessageHistory> @AT@ 3647 @LENGTH@ 14
------------------INS SimpleName@@history @TO@ ClassInstanceCreation@@ArrayList<MessageHistory>[history] @AT@ 3663 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:addHeaderWriter(new XContentTypeOptionsHeaderWriter()) @TO@ MethodInvocation:addHeaderWriter(new XXssProtectionHeaderWriter()) @AT@ 2839 @LENGTH@ 62
---UPD MethodInvocation@@addHeaderWriter(new XContentTypeOptionsHeaderWriter()) @TO@ addHeaderWriter(new XXssProtectionHeaderWriter()) @AT@ 2846 @LENGTH@ 54
------UPD SimpleName@@MethodName:addHeaderWriter:[new XContentTypeOptionsHeaderWriter()] @TO@ MethodName:addHeaderWriter:[new XXssProtectionHeaderWriter()] @AT@ 2846 @LENGTH@ 54
---------UPD ClassInstanceCreation@@XContentTypeOptionsHeaderWriter[] @TO@ XXssProtectionHeaderWriter[] @AT@ 2862 @LENGTH@ 37
------------UPD SimpleType@@XContentTypeOptionsHeaderWriter @TO@ XXssProtectionHeaderWriter @AT@ 2866 @LENGTH@ 31


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(JodaTimeConverter.class)] @AT@ 1475 @LENGTH@ 83
---DEL Modifier@@private @AT@ 1475 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1483 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1490 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1496 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(JodaTimeConverter.class) @AT@ 1503 @LENGTH@ 54
------DEL SimpleName@@LOG @AT@ 1503 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(JodaTimeConverter.class) @AT@ 1509 @LENGTH@ 48
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1509 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[JodaTimeConverter.class] @AT@ 1523 @LENGTH@ 34
------------DEL TypeLiteral@@JodaTimeConverter.class @AT@ 1533 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:getReference(field.getName()) @TO@ MethodInvocation:getReference(field.getTarget()) @AT@ 1707 @LENGTH@ 37
---UPD MethodInvocation@@getReference(field.getName()) @TO@ getReference(field.getTarget()) @AT@ 1714 @LENGTH@ 29
------UPD SimpleName@@MethodName:getReference:[field.getName()] @TO@ MethodName:getReference:[field.getTarget()] @AT@ 1714 @LENGTH@ 29
---------UPD MethodInvocation@@field.getName() @TO@ field.getTarget() @AT@ 1727 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getTarget:[] @AT@ 1733 @LENGTH@ 9


UPD TypeDeclaration@@[final]FileModifyTask, AbstractFileTask @TO@ [final]FileUpdateTask, AbstractFileTask @AT@ 1432 @LENGTH@ 1369
---UPD SimpleName@@ClassName:FileModifyTask @TO@ ClassName:FileUpdateTask @AT@ 1444 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:zookeeperPassword=System.getProperty(SystemProperties.ZOOKEEPER_PASSWORD,newUserPassword) @TO@ Assignment:zookeeperPassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @AT@ 9894 @LENGTH@ 93
---UPD Assignment@@zookeeperPassword=System.getProperty(SystemProperties.ZOOKEEPER_PASSWORD,newUserPassword) @TO@ zookeeperPassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @AT@ 9894 @LENGTH@ 92
------UPD MethodInvocation@@System.getProperty(SystemProperties.ZOOKEEPER_PASSWORD,newUserPassword) @TO@ System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD,newUserPassword) @AT@ 9914 @LENGTH@ 72
---------UPD SimpleName@@MethodName:getProperty:[SystemProperties.ZOOKEEPER_PASSWORD, newUserPassword] @TO@ MethodName:getProperty:[CreateEnsembleOptions.ZOOKEEPER_PASSWORD, newUserPassword] @AT@ 9921 @LENGTH@ 65
------------UPD QualifiedName@@SystemProperties.ZOOKEEPER_PASSWORD @TO@ CreateEnsembleOptions.ZOOKEEPER_PASSWORD @AT@ 9933 @LENGTH@ 35
---------------UPD SimpleName@@SystemProperties @TO@ CreateEnsembleOptions @AT@ 9933 @LENGTH@ 16


UPD MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @TO@ protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context, ModelNode operation,  @AT@ 1669 @LENGTH@ 530
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 1866 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1866 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1876 @LENGTH@ 9
---INS IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 2075 @LENGTH@ 138
------INS InfixExpression@@control == null @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2079 @LENGTH@ 15
---------INS SimpleName@@control @TO@ InfixExpression@@control == null @AT@ 2079 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@control == null @AT@ 2086 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@control == null @AT@ 2090 @LENGTH@ 4
------INS Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2096 @LENGTH@ 117
---------INS ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2110 @LENGTH@ 73
------------INS MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2110 @LENGTH@ 72
---------------INS SimpleName@@Name:ManagementUtil @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2110 @LENGTH@ 14
---------------INS SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2125 @LENGTH@ 57
------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2163 @LENGTH@ 7
------------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2172 @LENGTH@ 9
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2196 @LENGTH@ 7


UPD VariableDeclarationStatement@@int httpConnectionPort=httpsEnabled && !httpEnabled ? getHttpConnectionPort(container) : getHttpsConnectionPort(container); @TO@ int httpConnectionPort=httpsEnabled && !httpEnabled ? getHttpsConnectionPort(container) : getHttpConnectionPort(container); @AT@ 15789 @LENGTH@ 125
---UPD VariableDeclarationFragment@@httpConnectionPort=httpsEnabled && !httpEnabled ? getHttpConnectionPort(container) : getHttpsConnectionPort(container) @TO@ httpConnectionPort=httpsEnabled && !httpEnabled ? getHttpsConnectionPort(container) : getHttpConnectionPort(container) @AT@ 15793 @LENGTH@ 120
------UPD ConditionalExpression@@httpsEnabled && !httpEnabled ? getHttpConnectionPort(container) : getHttpsConnectionPort(container) @TO@ httpsEnabled && !httpEnabled ? getHttpsConnectionPort(container) : getHttpConnectionPort(container) @AT@ 15814 @LENGTH@ 99
---------MOV MethodInvocation@@getHttpConnectionPort(container) @TO@ ConditionalExpression@@httpsEnabled && !httpEnabled ? getHttpConnectionPort(container) : getHttpsConnectionPort(container) @AT@ 15845 @LENGTH@ 32


INS VariableDeclarationStatement@@ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @TO@ MethodDeclaration@@private, Object, MethodName:getConnection, final Properties properties, final SSLContext sslContext, Exception,  @AT@ 4509 @LENGTH@ 82
---INS SimpleType@@ClassLoader @TO@ VariableDeclarationStatement@@ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @AT@ 4509 @LENGTH@ 11
---INS VariableDeclarationFragment@@old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @TO@ VariableDeclarationStatement@@ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged(); @AT@ 4521 @LENGTH@ 69
------INS SimpleName@@old @TO@ VariableDeclarationFragment@@old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 4521 @LENGTH@ 3
------INS MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @TO@ VariableDeclarationFragment@@old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 4527 @LENGTH@ 63
---------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 4527 @LENGTH@ 22
---------INS SimpleName@@MethodName:getCurrentContextClassLoaderPrivileged:[] @TO@ MethodInvocation@@WildFlySecurityManager.getCurrentContextClassLoaderPrivileged() @AT@ 4550 @LENGTH@ 40


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-642] Fix fabric smoke DeploymentAgentTest"), public]DeploymentAgentTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]DeploymentAgentTest, FabricTestSupport @AT@ 877 @LENGTH@ 2992
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-642] Fix fabric smoke DeploymentAgentTest") @AT@ 970 @LENGTH@ 60


UPD MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @TO@ private, Object, MethodName:invokeInternal, Method method, Object[] params, InstanceNotFoundException, IntrospectionException, ReflectionException, MBeanException, AttributeNotFoundException, InvalidAttributeValueException,  @AT@ 2384 @LENGTH@ 2294
---UPD Modifier@@public @TO@ private @AT@ 2384 @LENGTH@ 6
---UPD SimpleName@@MethodName:invoke @TO@ MethodName:invokeInternal @AT@ 2398 @LENGTH@ 6
---UPD SingleVariableDeclaration@@InterceptorContext interceptorContext @TO@ Object[] params @AT@ 2405 @LENGTH@ 37
------DEL SimpleType@@InterceptorContext @AT@ 2405 @LENGTH@ 18
------UPD SimpleName@@interceptorContext @TO@ params @AT@ 2424 @LENGTH@ 18
------INS ArrayType@@Object[] @TO@ SingleVariableDeclaration@@InterceptorContext interceptorContext @AT@ 3977 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 3977 @LENGTH@ 6
---UPD SimpleType@@Exception @TO@ MBeanException @AT@ 2451 @LENGTH@ 9
---UPD VariableDeclarationStatement@@Object[] params=interceptorContext.getParameters(); @TO@ final Object[] params=interceptorContext.getParameters(); @AT@ 2533 @LENGTH@ 53
---INS SingleVariableDeclaration@@Method method @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 3962 @LENGTH@ 13
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@Method method @AT@ 3962 @LENGTH@ 6
------INS SimpleName@@method @TO@ SingleVariableDeclaration@@Method method @AT@ 3969 @LENGTH@ 6
---INS SimpleType@@InstanceNotFoundException @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 4001 @LENGTH@ 25
---INS SimpleType@@IntrospectionException @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 4028 @LENGTH@ 22
---INS SimpleType@@ReflectionException @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 4052 @LENGTH@ 19
---INS SimpleType@@AttributeNotFoundException @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 4089 @LENGTH@ 26
---INS SimpleType@@InvalidAttributeValueException @TO@ MethodDeclaration@@public, Object, MethodName:invoke, InterceptorContext interceptorContext, Exception,  @AT@ 4117 @LENGTH@ 30


UPD VariableDeclarationStatement@@final File patches=new File(getModuleRoot(),Constants.PATCHES); @TO@ final File patches=new File(getModuleRoot(),PATCHES); @AT@ 2686 @LENGTH@ 66
---UPD VariableDeclarationFragment@@patches=new File(getModuleRoot(),Constants.PATCHES) @TO@ patches=new File(getModuleRoot(),PATCHES) @AT@ 2697 @LENGTH@ 54
------UPD ClassInstanceCreation@@File[getModuleRoot(), Constants.PATCHES] @TO@ File[getModuleRoot(), PATCHES] @AT@ 2707 @LENGTH@ 44
---------DEL QualifiedName@@Constants.PATCHES @AT@ 2733 @LENGTH@ 17
------------DEL SimpleName@@Constants @AT@ 2733 @LENGTH@ 9
------------DEL SimpleName@@PATCHES @AT@ 2743 @LENGTH@ 7
---------INS SimpleName@@PATCHES @TO@ ClassInstanceCreation@@File[getModuleRoot(), Constants.PATCHES] @AT@ 2789 @LENGTH@ 7


UPD FieldDeclaration@@private, final, Set<ManagementPermission>, [underlyingPermissions=new HashSet<ManagementPermission>()] @TO@ private, final, List<ManagementPermission>, [underlyingPermissions=new ArrayList<ManagementPermission>()] @AT@ 1664 @LENGTH@ 100
---UPD ParameterizedType@@Set<ManagementPermission> @TO@ List<ManagementPermission> @AT@ 1678 @LENGTH@ 25
------UPD SimpleType@@Set @TO@ List @AT@ 1678 @LENGTH@ 3
---UPD VariableDeclarationFragment@@underlyingPermissions=new HashSet<ManagementPermission>() @TO@ underlyingPermissions=new ArrayList<ManagementPermission>() @AT@ 1704 @LENGTH@ 59
------UPD ClassInstanceCreation@@HashSet<ManagementPermission>[] @TO@ ArrayList<ManagementPermission>[] @AT@ 1728 @LENGTH@ 35
---------UPD ParameterizedType@@HashSet<ManagementPermission> @TO@ ArrayList<ManagementPermission> @AT@ 1732 @LENGTH@ 29
------------UPD SimpleType@@HashSet @TO@ ArrayList @AT@ 1732 @LENGTH@ 7


UPD IfStatement@@if (client == null) {  socket.close();} @TO@ if (client == null) {  System.out.println("No connection available so closing");  socket.close();} @AT@ 3745 @LENGTH@ 88
---UPD Block@@ThenBody:{  socket.close();} @TO@ ThenBody:{  System.out.println("No connection available so closing");  socket.close();} @AT@ 3765 @LENGTH@ 68
------INS ExpressionStatement@@MethodInvocation:System.out.println("No connection available so closing") @TO@ Block@@ThenBody:{  socket.close();} @AT@ 3859 @LENGTH@ 57
---------INS MethodInvocation@@System.out.println("No connection available so closing") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("No connection available so closing") @AT@ 3859 @LENGTH@ 56
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("No connection available so closing") @AT@ 3859 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["No connection available so closing"] @TO@ MethodInvocation@@System.out.println("No connection available so closing") @AT@ 3870 @LENGTH@ 45
---------------INS StringLiteral@@"No connection available so closing" @TO@ SimpleName@@MethodName:println:["No connection available so closing"] @AT@ 3878 @LENGTH@ 36


UPD IfStatement@@if (port > 0 && isFixedPort == false) {  port+=socketBindings.getPortOffset();} @TO@ if (!isFixedPort) {  port+=socketBindings.getPortOffset();} @AT@ 4021 @LENGTH@ 101
---DEL InfixExpression@@port > 0 && isFixedPort == false @AT@ 4025 @LENGTH@ 32
------DEL InfixExpression@@port > 0 @AT@ 4025 @LENGTH@ 8
---------DEL SimpleName@@port @AT@ 4025 @LENGTH@ 4
---------DEL Operator@@> @AT@ 4029 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 4032 @LENGTH@ 1
------DEL Operator@@&& @AT@ 4033 @LENGTH@ 2
------DEL InfixExpression@@isFixedPort == false @AT@ 4037 @LENGTH@ 20
---------DEL SimpleName@@isFixedPort @AT@ 4037 @LENGTH@ 11
---------DEL Operator@@== @AT@ 4048 @LENGTH@ 2
---------DEL BooleanLiteral@@false @AT@ 4052 @LENGTH@ 5
---INS PrefixExpression@@!isFixedPort @TO@ IfStatement@@if (port > 0 && isFixedPort == false) {  port+=socketBindings.getPortOffset();} @AT@ 4025 @LENGTH@ 12
------INS Operator@@! @TO@ PrefixExpression@@!isFixedPort @AT@ 4025 @LENGTH@ 1
------INS SimpleName@@isFixedPort @TO@ PrefixExpression@@!isFixedPort @AT@ 4026 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:operation.get(GlobalOperationHandlers.VALUE.getName()).set(new ModelNode()) @TO@ MethodInvocation:operation.get(VALUE.getName()).set(new ModelNode()) @AT@ 2268 @LENGTH@ 76
---UPD MethodInvocation@@operation.get(GlobalOperationHandlers.VALUE.getName()).set(new ModelNode()) @TO@ operation.get(VALUE.getName()).set(new ModelNode()) @AT@ 2268 @LENGTH@ 75
------UPD MethodInvocation@@MethodName:get:[GlobalOperationHandlers.VALUE.getName()] @TO@ MethodName:get:[VALUE.getName()] @AT@ 2268 @LENGTH@ 54
---------UPD MethodInvocation@@GlobalOperationHandlers.VALUE.getName() @TO@ VALUE.getName() @AT@ 2282 @LENGTH@ 39
------------DEL QualifiedName@@Name:GlobalOperationHandlers.VALUE @AT@ 2282 @LENGTH@ 29
------------INS SimpleName@@Name:VALUE @TO@ MethodInvocation@@GlobalOperationHandlers.VALUE.getName() @AT@ 2436 @LENGTH@ 5


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build()] @AT@ 2771 @LENGTH@ 388
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @AT@ 2804 @LENGTH@ 354
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @TO@ new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @AT@ 2817 @LENGTH@ 341
---------UPD MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.CHILD_TYPE] @TO@ MethodName:setParameters:[CHILD_TYPE] @AT@ 2817 @LENGTH@ 172
------------DEL QualifiedName@@GlobalOperationHandlers.CHILD_TYPE @AT@ 2954 @LENGTH@ 34
---------------DEL SimpleName@@GlobalOperationHandlers @AT@ 2954 @LENGTH@ 23
---------------DEL SimpleName@@CHILD_TYPE @AT@ 2978 @LENGTH@ 10
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.CHILD_TYPE] @AT@ 3047 @LENGTH@ 10


INS MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 4673 @LENGTH@ 140
---INS Modifier@@public @TO@ MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @AT@ 4673 @LENGTH@ 6
---INS SimpleType@@Profile @TO@ MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @AT@ 4680 @LENGTH@ 7
---INS SimpleName@@MethodName:getOverlay @TO@ MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @AT@ 4688 @LENGTH@ 10
---INS SingleVariableDeclaration@@boolean substitute @TO@ MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @AT@ 4699 @LENGTH@ 18
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean substitute @AT@ 4699 @LENGTH@ 7
------INS SimpleName@@substitute @TO@ SingleVariableDeclaration@@boolean substitute @AT@ 4707 @LENGTH@ 10
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @TO@ MethodDeclaration@@public, Profile, MethodName:getOverlay, boolean substitute,  @AT@ 4729 @LENGTH@ 78
------INS ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @AT@ 4735 @LENGTH@ 71
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4735 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4739 @LENGTH@ 29
---------INS StringLiteral@@"The method is not yet implemented." @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 4769 @LENGTH@ 36


UPD IfStatement@@if ((oldValue.equals(newValue) == false) && (newValue.asBoolean() == false)) {  RbacSanityCheckOperation.registerOperation(context);} @TO@ if ((oldValue.equals(newValue) == false) && newValue.isDefined() && (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false)) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2305 @LENGTH@ 153
---UPD InfixExpression@@(oldValue.equals(newValue) == false) && (newValue.asBoolean() == false) @TO@ (oldValue.equals(newValue) == false) && newValue.isDefined() && (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false) @AT@ 2309 @LENGTH@ 71
------UPD ParenthesizedExpression@@(newValue.asBoolean() == false) @TO@ (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false) @AT@ 2349 @LENGTH@ 31
---------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @TO@ ParenthesizedExpression@@(newValue.asBoolean() == false) @AT@ 2446 @LENGTH@ 75
------------MOV InfixExpression@@newValue.asBoolean() == false @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2350 @LENGTH@ 29
------------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2446 @LENGTH@ 42
---------------INS MethodInvocation@@newValue.getType() @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2446 @LENGTH@ 18
------------------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.getType() @AT@ 2446 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@newValue.getType() @AT@ 2455 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2464 @LENGTH@ 2
---------------INS QualifiedName@@ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2468 @LENGTH@ 20
------------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2468 @LENGTH@ 9
------------------INS SimpleName@@EXPRESSION @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2478 @LENGTH@ 10
------------INS Operator@@|| @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean() == false @AT@ 2488 @LENGTH@ 2
------INS MethodInvocation@@newValue.isDefined() @TO@ InfixExpression@@(oldValue.equals(newValue) == false) && (newValue.asBoolean() == false) @AT@ 2405 @LENGTH@ 20
---------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.isDefined() @AT@ 2405 @LENGTH@ 8
---------INS SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@newValue.isDefined() @AT@ 2414 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:MockEndpoint.assertIsSatisfied(mock1,mock2) @TO@ MethodInvocation:MockEndpoint.assertIsSatisfied(20,TimeUnit.SECONDS,mock1,mock2) @AT@ 2647 @LENGTH@ 45
---UPD MethodInvocation@@MockEndpoint.assertIsSatisfied(mock1,mock2) @TO@ MockEndpoint.assertIsSatisfied(20,TimeUnit.SECONDS,mock1,mock2) @AT@ 2647 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertIsSatisfied:[mock1, mock2] @TO@ MethodName:assertIsSatisfied:[20, TimeUnit.SECONDS, mock1, mock2] @AT@ 2660 @LENGTH@ 31
---------INS NumberLiteral@@20 @TO@ SimpleName@@MethodName:assertIsSatisfied:[mock1, mock2] @AT@ 2717 @LENGTH@ 2
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:assertIsSatisfied:[mock1, mock2] @AT@ 2721 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2721 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 2730 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("target/cachedir/myCamel",dir) @TO@ MethodInvocation:assertEquals(normalizePath("target/cachedir/myCamel"),normalizePath(dir)) @AT@ 2054 @LENGTH@ 45
---UPD MethodInvocation@@assertEquals("target/cachedir/myCamel",dir) @TO@ assertEquals(normalizePath("target/cachedir/myCamel"),normalizePath(dir)) @AT@ 2054 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertEquals:["target/cachedir/myCamel", dir] @TO@ MethodName:assertEquals:[normalizePath("target/cachedir/myCamel"), normalizePath(dir)] @AT@ 2054 @LENGTH@ 44
---------INS MethodInvocation@@normalizePath("target/cachedir/myCamel") @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir/myCamel", dir] @AT@ 2167 @LENGTH@ 40
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir/myCamel"] @TO@ MethodInvocation@@normalizePath("target/cachedir/myCamel") @AT@ 2167 @LENGTH@ 40
---------------MOV StringLiteral@@"target/cachedir/myCamel" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir/myCamel"] @AT@ 2067 @LENGTH@ 25
------------INS SimpleName@@MethodName:normalizePath:["target/cachedir/myCamel"] @TO@ MethodInvocation@@normalizePath("target/cachedir/myCamel") @AT@ 2167 @LENGTH@ 40
---------------MOV StringLiteral@@"target/cachedir/myCamel" @TO@ SimpleName@@MethodName:normalizePath:["target/cachedir/myCamel"] @AT@ 2067 @LENGTH@ 25
---------INS MethodInvocation@@normalizePath(dir) @TO@ SimpleName@@MethodName:assertEquals:["target/cachedir/myCamel", dir] @AT@ 2209 @LENGTH@ 18
------------INS SimpleName@@MethodName:normalizePath:[dir] @TO@ MethodInvocation@@normalizePath(dir) @AT@ 2209 @LENGTH@ 18
---------------MOV SimpleName@@dir @TO@ SimpleName@@MethodName:normalizePath:[dir] @AT@ 2094 @LENGTH@ 3
------------INS SimpleName@@MethodName:normalizePath:[dir] @TO@ MethodInvocation@@normalizePath(dir) @AT@ 2209 @LENGTH@ 18
---------------MOV SimpleName@@dir @TO@ SimpleName@@MethodName:normalizePath:[dir] @AT@ 2094 @LENGTH@ 3


INS MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @TO@ TypeDeclaration@@[@Converter, public, final]DomConverter,  @AT@ 2929 @LENGTH@ 651
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2929 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2937 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2944 @LENGTH@ 8
---INS SingleVariableDeclaration@@Node node @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2953 @LENGTH@ 9
------INS SimpleType@@Node @TO@ SingleVariableDeclaration@@Node node @AT@ 2953 @LENGTH@ 4
------INS SimpleName@@node @TO@ SingleVariableDeclaration@@Node node @AT@ 2958 @LENGTH@ 4
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2964 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2964 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2973 @LENGTH@ 8
---INS SimpleType@@TransformerException @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 2990 @LENGTH@ 20
---INS VariableDeclarationStatement@@String s; @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 3021 @LENGTH@ 9
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s; @AT@ 3021 @LENGTH@ 6
------INS VariableDeclarationFragment@@s @TO@ VariableDeclarationStatement@@String s; @AT@ 3028 @LENGTH@ 1
---------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 3028 @LENGTH@ 1
---INS IfStatement@@if (node instanceof Text) {  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} else {  s=xml.toString(node,exchange);} @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 3039 @LENGTH@ 517
------INS InstanceofExpression@@node instanceof Text @TO@ IfStatement@@if (node instanceof Text) {  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} else {  s=xml.toString(node,exchange);} @AT@ 3043 @LENGTH@ 20
---------INS SimpleName@@node @TO@ InstanceofExpression@@node instanceof Text @AT@ 3043 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@node instanceof Text @AT@ 3048 @LENGTH@ 10
---------INS SimpleType@@Text @TO@ InstanceofExpression@@node instanceof Text @AT@ 3059 @LENGTH@ 4
------INS Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @TO@ IfStatement@@if (node instanceof Text) {  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} else {  s=xml.toString(node,exchange);} @AT@ 3065 @LENGTH@ 415
---------INS VariableDeclarationStatement@@Text textnode=(Text)node; @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3079 @LENGTH@ 28
------------INS SimpleType@@Text @TO@ VariableDeclarationStatement@@Text textnode=(Text)node; @AT@ 3079 @LENGTH@ 4
------------INS VariableDeclarationFragment@@textnode=(Text)node @TO@ VariableDeclarationStatement@@Text textnode=(Text)node; @AT@ 3084 @LENGTH@ 22
---------------INS SimpleName@@textnode @TO@ VariableDeclarationFragment@@textnode=(Text)node @AT@ 3084 @LENGTH@ 8
---------------INS CastExpression@@(Text)node @TO@ VariableDeclarationFragment@@textnode=(Text)node @AT@ 3095 @LENGTH@ 11
------------------INS SimpleType@@Text @TO@ CastExpression@@(Text)node @AT@ 3096 @LENGTH@ 4
------------------INS SimpleName@@node @TO@ CastExpression@@(Text)node @AT@ 3102 @LENGTH@ 4
---------INS VariableDeclarationStatement@@StringBuilder b=new StringBuilder(); @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3133 @LENGTH@ 38
------------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder b=new StringBuilder(); @AT@ 3133 @LENGTH@ 13
------------INS VariableDeclarationFragment@@b=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder b=new StringBuilder(); @AT@ 3147 @LENGTH@ 23
---------------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b=new StringBuilder() @AT@ 3147 @LENGTH@ 1
---------------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@b=new StringBuilder() @AT@ 3151 @LENGTH@ 19
------------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 3151 @LENGTH@ 3
------------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 3155 @LENGTH@ 13
---------INS ExpressionStatement@@MethodInvocation:b.append(textnode.getNodeValue()) @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3184 @LENGTH@ 34
------------INS MethodInvocation@@b.append(textnode.getNodeValue()) @TO@ ExpressionStatement@@MethodInvocation:b.append(textnode.getNodeValue()) @AT@ 3184 @LENGTH@ 33
---------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.append(textnode.getNodeValue()) @AT@ 3184 @LENGTH@ 1
---------------INS SimpleName@@MethodName:append:[textnode.getNodeValue()] @TO@ MethodInvocation@@b.append(textnode.getNodeValue()) @AT@ 3186 @LENGTH@ 31
------------------INS MethodInvocation@@textnode.getNodeValue() @TO@ SimpleName@@MethodName:append:[textnode.getNodeValue()] @AT@ 3193 @LENGTH@ 23
---------------------INS SimpleName@@Name:textnode @TO@ MethodInvocation@@textnode.getNodeValue() @AT@ 3193 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getNodeValue:[] @TO@ MethodInvocation@@textnode.getNodeValue() @AT@ 3202 @LENGTH@ 14
---------INS ExpressionStatement@@Assignment:textnode=(Text)textnode.getNextSibling() @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3231 @LENGTH@ 44
------------INS Assignment@@textnode=(Text)textnode.getNextSibling() @TO@ ExpressionStatement@@Assignment:textnode=(Text)textnode.getNextSibling() @AT@ 3231 @LENGTH@ 43
---------------INS SimpleName@@textnode @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3231 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3239 @LENGTH@ 1
---------------INS CastExpression@@(Text)textnode.getNextSibling() @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3242 @LENGTH@ 32
------------------INS SimpleType@@Text @TO@ CastExpression@@(Text)textnode.getNextSibling() @AT@ 3243 @LENGTH@ 4
------------------INS MethodInvocation@@textnode.getNextSibling() @TO@ CastExpression@@(Text)textnode.getNextSibling() @AT@ 3249 @LENGTH@ 25
---------------------INS SimpleName@@Name:textnode @TO@ MethodInvocation@@textnode.getNextSibling() @AT@ 3249 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getNextSibling:[] @TO@ MethodInvocation@@textnode.getNextSibling() @AT@ 3258 @LENGTH@ 16
---------INS WhileStatement@@while (textnode != null) {  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3288 @LENGTH@ 152
------------INS InfixExpression@@textnode != null @TO@ WhileStatement@@while (textnode != null) {  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @AT@ 3295 @LENGTH@ 16
---------------INS SimpleName@@textnode @TO@ InfixExpression@@textnode != null @AT@ 3295 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@textnode != null @AT@ 3303 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@textnode != null @AT@ 3307 @LENGTH@ 4
------------INS Block@@WhileBody:{  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @TO@ WhileStatement@@while (textnode != null) {  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @AT@ 3313 @LENGTH@ 127
---------------INS ExpressionStatement@@MethodInvocation:b.append(textnode.getNodeValue()) @TO@ Block@@WhileBody:{  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @AT@ 3331 @LENGTH@ 34
------------------INS MethodInvocation@@b.append(textnode.getNodeValue()) @TO@ ExpressionStatement@@MethodInvocation:b.append(textnode.getNodeValue()) @AT@ 3331 @LENGTH@ 33
---------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.append(textnode.getNodeValue()) @AT@ 3331 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:append:[textnode.getNodeValue()] @TO@ MethodInvocation@@b.append(textnode.getNodeValue()) @AT@ 3333 @LENGTH@ 31
------------------------INS MethodInvocation@@textnode.getNodeValue() @TO@ SimpleName@@MethodName:append:[textnode.getNodeValue()] @AT@ 3340 @LENGTH@ 23
---------------------------INS SimpleName@@Name:textnode @TO@ MethodInvocation@@textnode.getNodeValue() @AT@ 3340 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getNodeValue:[] @TO@ MethodInvocation@@textnode.getNodeValue() @AT@ 3349 @LENGTH@ 14
---------------INS ExpressionStatement@@Assignment:textnode=(Text)textnode.getNextSibling() @TO@ Block@@WhileBody:{  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();} @AT@ 3382 @LENGTH@ 44
------------------INS Assignment@@textnode=(Text)textnode.getNextSibling() @TO@ ExpressionStatement@@Assignment:textnode=(Text)textnode.getNextSibling() @AT@ 3382 @LENGTH@ 43
---------------------INS SimpleName@@textnode @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3382 @LENGTH@ 8
---------------------INS Operator@@= @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3390 @LENGTH@ 1
---------------------INS CastExpression@@(Text)textnode.getNextSibling() @TO@ Assignment@@textnode=(Text)textnode.getNextSibling() @AT@ 3393 @LENGTH@ 32
------------------------INS SimpleType@@Text @TO@ CastExpression@@(Text)textnode.getNextSibling() @AT@ 3394 @LENGTH@ 4
------------------------INS MethodInvocation@@textnode.getNextSibling() @TO@ CastExpression@@(Text)textnode.getNextSibling() @AT@ 3400 @LENGTH@ 25
---------------------------INS SimpleName@@Name:textnode @TO@ MethodInvocation@@textnode.getNextSibling() @AT@ 3400 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:getNextSibling:[] @TO@ MethodInvocation@@textnode.getNextSibling() @AT@ 3409 @LENGTH@ 16
---------INS ExpressionStatement@@Assignment:s=b.toString() @TO@ Block@@ThenBody:{  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} @AT@ 3453 @LENGTH@ 17
------------INS Assignment@@s=b.toString() @TO@ ExpressionStatement@@Assignment:s=b.toString() @AT@ 3453 @LENGTH@ 16
---------------INS SimpleName@@s @TO@ Assignment@@s=b.toString() @AT@ 3453 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@s=b.toString() @AT@ 3454 @LENGTH@ 1
---------------INS MethodInvocation@@b.toString() @TO@ Assignment@@s=b.toString() @AT@ 3457 @LENGTH@ 12
------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.toString() @AT@ 3457 @LENGTH@ 1
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@b.toString() @AT@ 3459 @LENGTH@ 10
------INS Block@@ElseBody:{  s=xml.toString(node,exchange);} @TO@ IfStatement@@if (node instanceof Text) {  Text textnode=(Text)node;  StringBuilder b=new StringBuilder();  b.append(textnode.getNodeValue());  textnode=(Text)textnode.getNextSibling();  while (textnode != null) {    b.append(textnode.getNodeValue());    textnode=(Text)textnode.getNextSibling();  }  s=b.toString();} else {  s=xml.toString(node,exchange);} @AT@ 3486 @LENGTH@ 70
---------INS ExpressionStatement@@Assignment:s=xml.toString(node,exchange) @TO@ Block@@ElseBody:{  s=xml.toString(node,exchange);} @AT@ 3500 @LENGTH@ 33
------------INS Assignment@@s=xml.toString(node,exchange) @TO@ ExpressionStatement@@Assignment:s=xml.toString(node,exchange) @AT@ 3500 @LENGTH@ 32
---------------MOV MethodInvocation@@xml.toString(node,exchange) @TO@ Assignment@@s=xml.toString(node,exchange) @AT@ 2462 @LENGTH@ 28
---------------INS SimpleName@@s @TO@ Assignment@@s=xml.toString(node,exchange) @AT@ 3500 @LENGTH@ 1
---------------INS Operator@@= @TO@ Assignment@@s=xml.toString(node,exchange) @AT@ 3501 @LENGTH@ 1
---INS ReturnStatement@@SimpleName:s @TO@ MethodDeclaration@@private, String, MethodName:toString, Node node, Exchange exchange, TransformerException,  @AT@ 3565 @LENGTH@ 9
------INS SimpleName@@s @TO@ ReturnStatement@@SimpleName:s @AT@ 3572 @LENGTH@ 1


UPD IfStatement@@if (type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @TO@ if (type != null && type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @AT@ 6204 @LENGTH@ 104
---INS InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @TO@ IfStatement@@if (type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @AT@ 6224 @LENGTH@ 54
------MOV MethodInvocation@@type.equals(dataStorePlugin.getName()) @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 6208 @LENGTH@ 38
------INS InfixExpression@@type != null @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 6224 @LENGTH@ 12
---------INS SimpleName@@type @TO@ InfixExpression@@type != null @AT@ 6224 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@type != null @AT@ 6228 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@type != null @AT@ 6232 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 6236 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:endpoint.onListenerConstainerStopped(listenerContainer) @TO@ MethodInvocation:endpoint.onListenerContainerStopped(listenerContainer) @AT@ 10735 @LENGTH@ 56
---UPD MethodInvocation@@endpoint.onListenerConstainerStopped(listenerContainer) @TO@ endpoint.onListenerContainerStopped(listenerContainer) @AT@ 10735 @LENGTH@ 55
------UPD SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @TO@ MethodName:onListenerContainerStopped:[listenerContainer] @AT@ 10744 @LENGTH@ 46


UPD TryStatement@@try {  if (sslContext != null) {    ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());    properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());  }  return new InitialDirContext(properties);}  finally {  if (sslContext != null) {    ThreadLocalSSLSocketFactory.removeSSLSocketFactory();  }} @TO@ try {  if (sslContext != null) {    ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class);    properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());  }  return new InitialDirContext(properties);}  finally {  if (sslContext != null) {    ThreadLocalSSLSocketFactory.removeSSLSocketFactory();  }  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);} @AT@ 4449 @LENGTH@ 471
---UPD IfStatement@@if (sslContext != null) {  ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());  properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());} @TO@ if (sslContext != null) {  ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class);  properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());} @AT@ 4467 @LENGTH@ 247
------UPD Block@@ThenBody:{  ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());  properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());} @TO@ ThenBody:{  ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class);  properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());} @AT@ 4491 @LENGTH@ 223
---------INS ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class) @TO@ Block@@ThenBody:{  ThreadLocalSSLSocketFactory.setSSLSocketFactory(sslContext.getSocketFactory());  properties.put("java.naming.ldap.factory.socket",ThreadLocalSSLSocketFactory.class.getName());} @AT@ 4756 @LENGTH@ 97
------------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class) @TO@ ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class) @AT@ 4756 @LENGTH@ 96
---------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class) @AT@ 4756 @LENGTH@ 22
---------------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[ThreadLocalSSLSocketFactory.class] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(ThreadLocalSSLSocketFactory.class) @AT@ 4779 @LENGTH@ 73
------------------INS TypeLiteral@@ThreadLocalSSLSocketFactory.class @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[ThreadLocalSSLSocketFactory.class] @AT@ 4818 @LENGTH@ 33
---UPD Block@@FinallyBody:{  if (sslContext != null) {    ThreadLocalSSLSocketFactory.removeSSLSocketFactory();  }} @TO@ FinallyBody:{  if (sslContext != null) {    ThreadLocalSSLSocketFactory.removeSSLSocketFactory();  }  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);} @AT@ 4787 @LENGTH@ 133
------INS ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old) @TO@ Block@@FinallyBody:{  if (sslContext != null) {    ThreadLocalSSLSocketFactory.removeSSLSocketFactory();  }} @AT@ 5188 @LENGTH@ 67
---------INS MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old) @TO@ ExpressionStatement@@MethodInvocation:WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old) @AT@ 5188 @LENGTH@ 66
------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old) @AT@ 5188 @LENGTH@ 22
------------INS SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[old] @TO@ MethodInvocation@@WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old) @AT@ 5211 @LENGTH@ 43
---------------INS SimpleName@@old @TO@ SimpleName@@MethodName:setCurrentContextClassLoaderPrivileged:[old] @AT@ 5250 @LENGTH@ 3


INS MethodDeclaration@@OperationFailedException, MethodName:bindingTypeRequiresAttributeDefined, BindingType bindingType, String attributeName,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]NamingMessages,  @AT@ 18574 @LENGTH@ 83
---INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@OperationFailedException, MethodName:bindingTypeRequiresAttributeDefined, BindingType bindingType, String attributeName,  @AT@ 18549 @LENGTH@ 24
---INS SimpleName@@MethodName:bindingTypeRequiresAttributeDefined @TO@ MethodDeclaration@@OperationFailedException, MethodName:bindingTypeRequiresAttributeDefined, BindingType bindingType, String attributeName,  @AT@ 18574 @LENGTH@ 35
---INS SingleVariableDeclaration@@BindingType bindingType @TO@ MethodDeclaration@@OperationFailedException, MethodName:bindingTypeRequiresAttributeDefined, BindingType bindingType, String attributeName,  @AT@ 18610 @LENGTH@ 23
------INS SimpleType@@BindingType @TO@ SingleVariableDeclaration@@BindingType bindingType @AT@ 18610 @LENGTH@ 11
------INS SimpleName@@bindingType @TO@ SingleVariableDeclaration@@BindingType bindingType @AT@ 18622 @LENGTH@ 11
---INS SingleVariableDeclaration@@String attributeName @TO@ MethodDeclaration@@OperationFailedException, MethodName:bindingTypeRequiresAttributeDefined, BindingType bindingType, String attributeName,  @AT@ 18635 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String attributeName @AT@ 18635 @LENGTH@ 6
------INS SimpleName@@attributeName @TO@ SingleVariableDeclaration@@String attributeName @AT@ 18642 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertTrue("There should be 12 threads in diff, was: " + diff,diff >= 12 && diff <= 13) @TO@ MethodInvocation:assertTrue("There should be 12 or more threads in use, was: " + diff,diff >= 11) @AT@ 2049 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue("There should be 12 threads in diff, was: " + diff,diff >= 12 && diff <= 13) @TO@ assertTrue("There should be 12 or more threads in use, was: " + diff,diff >= 11) @AT@ 2049 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:["There should be 12 threads in diff, was: " + diff, diff >= 12 && diff <= 13] @TO@ MethodName:assertTrue:["There should be 12 or more threads in use, was: " + diff, diff >= 11] @AT@ 2049 @LENGTH@ 88
---------UPD InfixExpression@@"There should be 12 threads in diff, was: " + diff @TO@ "There should be 12 or more threads in use, was: " + diff @AT@ 2060 @LENGTH@ 50
------------UPD StringLiteral@@"There should be 12 threads in diff, was: " @TO@ "There should be 12 or more threads in use, was: " @AT@ 2060 @LENGTH@ 43
---------DEL InfixExpression@@diff >= 12 && diff <= 13 @AT@ 2112 @LENGTH@ 24
------------DEL InfixExpression@@diff >= 12 @AT@ 2112 @LENGTH@ 10
------------DEL Operator@@&& @AT@ 2122 @LENGTH@ 2
------------DEL InfixExpression@@diff <= 13 @AT@ 2126 @LENGTH@ 10
---------------DEL SimpleName@@diff @AT@ 2126 @LENGTH@ 4
---------------DEL Operator@@<= @AT@ 2130 @LENGTH@ 2
---------------DEL NumberLiteral@@13 @AT@ 2134 @LENGTH@ 2
---------INS InfixExpression@@diff >= 11 @TO@ SimpleName@@MethodName:assertTrue:["There should be 12 threads in diff, was: " + diff, diff >= 12 && diff <= 13] @AT@ 2128 @LENGTH@ 10
------------MOV SimpleName@@diff @TO@ InfixExpression@@diff >= 11 @AT@ 2112 @LENGTH@ 4
------------MOV SimpleName@@diff @TO@ InfixExpression@@diff >= 11 @AT@ 2112 @LENGTH@ 4
------------MOV Operator@@>= @TO@ InfixExpression@@diff >= 11 @AT@ 2116 @LENGTH@ 2
------------MOV Operator@@>= @TO@ InfixExpression@@diff >= 11 @AT@ 2116 @LENGTH@ 2
------------MOV NumberLiteral@@12 @TO@ InfixExpression@@diff >= 11 @AT@ 2120 @LENGTH@ 2
------------MOV NumberLiteral@@12 @TO@ InfixExpression@@diff >= 11 @AT@ 2120 @LENGTH@ 2


UPD VariableDeclarationStatement@@int value=0; @TO@ long value=0; @AT@ 37495 @LENGTH@ 14
---UPD PrimitiveType@@int @TO@ long @AT@ 37495 @LENGTH@ 3


UPD TryStatement@@try {  return jobExplorer.getJobInstanceCount(jobName);} catch (org.springframework.batch.core.launch.NoSuchJobException e) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @TO@ try {  int count=jobExplorer.getJobInstanceCount(jobName);  if (count <= 0) {    throw new NoSuchJobException("No job instances were found for job name " + jobName);  } else {    return count;  }} catch (org.springframework.batch.core.launch.NoSuchJobException e) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @AT@ 11384 @LENGTH@ 222
---INS VariableDeclarationStatement@@int count=jobExplorer.getJobInstanceCount(jobName); @TO@ TryStatement@@try {  return jobExplorer.getJobInstanceCount(jobName);} catch (org.springframework.batch.core.launch.NoSuchJobException e) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @AT@ 11390 @LENGTH@ 53
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int count=jobExplorer.getJobInstanceCount(jobName); @AT@ 11390 @LENGTH@ 3
------INS VariableDeclarationFragment@@count=jobExplorer.getJobInstanceCount(jobName) @TO@ VariableDeclarationStatement@@int count=jobExplorer.getJobInstanceCount(jobName); @AT@ 11394 @LENGTH@ 48
---------INS SimpleName@@count @TO@ VariableDeclarationFragment@@count=jobExplorer.getJobInstanceCount(jobName) @AT@ 11394 @LENGTH@ 5
---------MOV MethodInvocation@@jobExplorer.getJobInstanceCount(jobName) @TO@ VariableDeclarationFragment@@count=jobExplorer.getJobInstanceCount(jobName) @AT@ 11400 @LENGTH@ 40
---DEL ReturnStatement@@MethodInvocation:jobExplorer.getJobInstanceCount(jobName) @AT@ 11393 @LENGTH@ 48
---INS IfStatement@@if (count <= 0) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} else {  return count;} @TO@ TryStatement@@try {  return jobExplorer.getJobInstanceCount(jobName);} catch (org.springframework.batch.core.launch.NoSuchJobException e) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @AT@ 11448 @LENGTH@ 140
------INS InfixExpression@@count <= 0 @TO@ IfStatement@@if (count <= 0) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} else {  return count;} @AT@ 11451 @LENGTH@ 10
---------INS SimpleName@@count @TO@ InfixExpression@@count <= 0 @AT@ 11451 @LENGTH@ 5
---------INS Operator@@<= @TO@ InfixExpression@@count <= 0 @AT@ 11456 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@count <= 0 @AT@ 11460 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @TO@ IfStatement@@if (count <= 0) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} else {  return count;} @AT@ 11463 @LENGTH@ 95
---------INS ThrowStatement@@ClassInstanceCreation:new NoSuchJobException("No job instances were found for job name " + jobName) @TO@ Block@@ThenBody:{  throw new NoSuchJobException("No job instances were found for job name " + jobName);} @AT@ 11469 @LENGTH@ 84
------------INS ClassInstanceCreation@@NoSuchJobException["No job instances were found for job name " + jobName] @TO@ ThrowStatement@@ClassInstanceCreation:new NoSuchJobException("No job instances were found for job name " + jobName) @AT@ 11475 @LENGTH@ 77
---------------INS New@@new @TO@ ClassInstanceCreation@@NoSuchJobException["No job instances were found for job name " + jobName] @AT@ 11475 @LENGTH@ 3
---------------INS SimpleType@@NoSuchJobException @TO@ ClassInstanceCreation@@NoSuchJobException["No job instances were found for job name " + jobName] @AT@ 11479 @LENGTH@ 18
---------------INS InfixExpression@@"No job instances were found for job name " + jobName @TO@ ClassInstanceCreation@@NoSuchJobException["No job instances were found for job name " + jobName] @AT@ 11498 @LENGTH@ 53
------------------INS StringLiteral@@"No job instances were found for job name " @TO@ InfixExpression@@"No job instances were found for job name " + jobName @AT@ 11498 @LENGTH@ 43
------------------INS Operator@@+ @TO@ InfixExpression@@"No job instances were found for job name " + jobName @AT@ 11541 @LENGTH@ 1
------------------INS SimpleName@@jobName @TO@ InfixExpression@@"No job instances were found for job name " + jobName @AT@ 11544 @LENGTH@ 7
------INS Block@@ElseBody:{  return count;} @TO@ IfStatement@@if (count <= 0) {  throw new NoSuchJobException("No job instances were found for job name " + jobName);} else {  return count;} @AT@ 11564 @LENGTH@ 24
---------INS ReturnStatement@@SimpleName:count @TO@ Block@@ElseBody:{  return count;} @AT@ 11570 @LENGTH@ 13
------------INS SimpleName@@count @TO@ ReturnStatement@@SimpleName:count @AT@ 11577 @LENGTH@ 5


UPD TryStatement@@try {  executorService.awaitTermination(5,TimeUnit.SECONDS);} catch (InterruptedException e) {  throw (IOException)new InterruptedIOException().initCause(e);} @TO@ try {  if (!executorService.awaitTermination(5,TimeUnit.SECONDS)) {    executorService.shutdownNow();  }} catch (InterruptedException e) {  throw (IOException)new InterruptedIOException().initCause(e);} @AT@ 7280 @LENGTH@ 216
---INS IfStatement@@if (!executorService.awaitTermination(5,TimeUnit.SECONDS)) {  executorService.shutdownNow();} @TO@ TryStatement@@try {  executorService.awaitTermination(5,TimeUnit.SECONDS);} catch (InterruptedException e) {  throw (IOException)new InterruptedIOException().initCause(e);} @AT@ 7302 @LENGTH@ 128
------INS PrefixExpression@@!executorService.awaitTermination(5,TimeUnit.SECONDS) @TO@ IfStatement@@if (!executorService.awaitTermination(5,TimeUnit.SECONDS)) {  executorService.shutdownNow();} @AT@ 7306 @LENGTH@ 54
---------MOV MethodInvocation@@executorService.awaitTermination(5,TimeUnit.SECONDS) @TO@ PrefixExpression@@!executorService.awaitTermination(5,TimeUnit.SECONDS) @AT@ 7302 @LENGTH@ 53
---------INS Operator@@! @TO@ PrefixExpression@@!executorService.awaitTermination(5,TimeUnit.SECONDS) @AT@ 7306 @LENGTH@ 1
------INS Block@@ThenBody:{  executorService.shutdownNow();} @TO@ IfStatement@@if (!executorService.awaitTermination(5,TimeUnit.SECONDS)) {  executorService.shutdownNow();} @AT@ 7362 @LENGTH@ 68
---------INS ExpressionStatement@@MethodInvocation:executorService.shutdownNow() @TO@ Block@@ThenBody:{  executorService.shutdownNow();} @AT@ 7382 @LENGTH@ 30
------------INS MethodInvocation@@executorService.shutdownNow() @TO@ ExpressionStatement@@MethodInvocation:executorService.shutdownNow() @AT@ 7382 @LENGTH@ 29
---------------INS SimpleName@@Name:executorService @TO@ MethodInvocation@@executorService.shutdownNow() @AT@ 7382 @LENGTH@ 15
---------------INS SimpleName@@MethodName:shutdownNow:[] @TO@ MethodInvocation@@executorService.shutdownNow() @AT@ 7398 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:executorService.awaitTermination(5,TimeUnit.SECONDS) @AT@ 7302 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName2").equals("jobPropertyValue2")) @TO@ MethodInvocation:org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName2") == null) @AT@ 16475 @LENGTH@ 120
---UPD MethodInvocation@@org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName2").equals("jobPropertyValue2")) @TO@ org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName2") == null) @AT@ 16475 @LENGTH@ 119
------UPD SimpleName@@MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName2").equals("jobPropertyValue2")] @TO@ MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName2") == null] @AT@ 16507 @LENGTH@ 87
---------INS InfixExpression@@stepContext.getProperties().get("jobPropertyName2") == null @TO@ SimpleName@@MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName2").equals("jobPropertyValue2")] @AT@ 16494 @LENGTH@ 59
------------INS MethodInvocation@@stepContext.getProperties().get("jobPropertyName2") @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName2") == null @AT@ 16494 @LENGTH@ 51
---------------MOV MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName2") @AT@ 16514 @LENGTH@ 27
---------------MOV SimpleName@@Name:stepContext @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName2") @AT@ 16514 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:equals:["jobPropertyValue2"] @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName2") @AT@ 16566 @LENGTH@ 27
------------INS Operator@@== @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName2") == null @AT@ 16545 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName2") == null @AT@ 16549 @LENGTH@ 4
---------DEL MethodInvocation@@stepContext.getProperties().get("jobPropertyName2").equals("jobPropertyValue2") @AT@ 16514 @LENGTH@ 79
------------DEL MethodInvocation@@MethodName:get:["jobPropertyName2"] @AT@ 16514 @LENGTH@ 51
---------------DEL StringLiteral@@"jobPropertyName2" @AT@ 16546 @LENGTH@ 18


UPD IfStatement@@if (log.isDebugEnabled()) {  log.debug("response has " + containerStatuses.size() + " completed containers");} @TO@ if (log.isDebugEnabled()) {  log.debug("response has " + containerStatuses.size() + " completed containers");  for (  ContainerStatus cs : containerStatuses) {    log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);  }} @AT@ 5613 @LENGTH@ 116
---UPD Block@@ThenBody:{  log.debug("response has " + containerStatuses.size() + " completed containers");} @TO@ ThenBody:{  log.debug("response has " + containerStatuses.size() + " completed containers");  for (  ContainerStatus cs : containerStatuses) {    log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);  }} @AT@ 5638 @LENGTH@ 91
------INS EnhancedForStatement@@for (ContainerStatus cs : containerStatuses) {  log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);} @TO@ Block@@ThenBody:{  log.debug("response has " + containerStatuses.size() + " completed containers");} @AT@ 5828 @LENGTH@ 142
---------INS SingleVariableDeclaration@@ContainerStatus cs @TO@ EnhancedForStatement@@for (ContainerStatus cs : containerStatuses) {  log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);} @AT@ 5833 @LENGTH@ 18
------------INS SimpleType@@ContainerStatus @TO@ SingleVariableDeclaration@@ContainerStatus cs @AT@ 5833 @LENGTH@ 15
------------INS SimpleName@@cs @TO@ SingleVariableDeclaration@@ContainerStatus cs @AT@ 5849 @LENGTH@ 2
---------INS SimpleName@@containerStatuses @TO@ EnhancedForStatement@@for (ContainerStatus cs : containerStatuses) {  log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);} @AT@ 5854 @LENGTH@ 17
---------INS ExpressionStatement@@MethodInvocation:log.debug("competed container: " + cs.getContainerId() + " with status="+ cs) @TO@ EnhancedForStatement@@for (ContainerStatus cs : containerStatuses) {  log.debug("competed container: " + cs.getContainerId() + " with status="+ cs);} @AT@ 5880 @LENGTH@ 79
------------INS MethodInvocation@@log.debug("competed container: " + cs.getContainerId() + " with status="+ cs) @TO@ ExpressionStatement@@MethodInvocation:log.debug("competed container: " + cs.getContainerId() + " with status="+ cs) @AT@ 5880 @LENGTH@ 78
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("competed container: " + cs.getContainerId() + " with status="+ cs) @AT@ 5880 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["competed container: " + cs.getContainerId() + " with status="+ cs] @TO@ MethodInvocation@@log.debug("competed container: " + cs.getContainerId() + " with status="+ cs) @AT@ 5884 @LENGTH@ 74
------------------INS InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @TO@ SimpleName@@MethodName:debug:["competed container: " + cs.getContainerId() + " with status="+ cs] @AT@ 5890 @LENGTH@ 67
---------------------INS StringLiteral@@"competed container: " @TO@ InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @AT@ 5890 @LENGTH@ 22
---------------------INS Operator@@+ @TO@ InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @AT@ 5912 @LENGTH@ 1
---------------------INS MethodInvocation@@cs.getContainerId() @TO@ InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @AT@ 5915 @LENGTH@ 19
------------------------INS SimpleName@@Name:cs @TO@ MethodInvocation@@cs.getContainerId() @AT@ 5915 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getContainerId:[] @TO@ MethodInvocation@@cs.getContainerId() @AT@ 5918 @LENGTH@ 16
---------------------INS StringLiteral@@" with status=" @TO@ InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @AT@ 5937 @LENGTH@ 15
---------------------INS SimpleName@@cs @TO@ InfixExpression@@"competed container: " + cs.getContainerId() + " with status="+ cs @AT@ 5955 @LENGTH@ 2


INS MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @TO@ TypeDeclaration@@[public]BundleUtils,  @AT@ 986 @LENGTH@ 133
---INS Modifier@@public @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 986 @LENGTH@ 6
---INS SimpleType@@Bundle @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 993 @LENGTH@ 6
---INS SimpleName@@MethodName:installBundle @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 1000 @LENGTH@ 13
---INS SingleVariableDeclaration@@String location @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 1014 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String location @AT@ 1014 @LENGTH@ 6
------INS SimpleName@@location @TO@ SingleVariableDeclaration@@String location @AT@ 1021 @LENGTH@ 8
---INS SimpleType@@BundleException @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 1038 @LENGTH@ 15
---INS ReturnStatement@@MethodInvocation:bundleContext.installBundle(location) @TO@ MethodDeclaration@@public, Bundle, MethodName:installBundle, String location, BundleException,  @AT@ 1068 @LENGTH@ 45
------INS MethodInvocation@@bundleContext.installBundle(location) @TO@ ReturnStatement@@MethodInvocation:bundleContext.installBundle(location) @AT@ 1075 @LENGTH@ 37
---------INS SimpleName@@Name:bundleContext @TO@ MethodInvocation@@bundleContext.installBundle(location) @AT@ 1075 @LENGTH@ 13
---------INS SimpleName@@MethodName:installBundle:[location] @TO@ MethodInvocation@@bundleContext.installBundle(location) @AT@ 1089 @LENGTH@ 23
------------INS SimpleName@@location @TO@ SimpleName@@MethodName:installBundle:[location] @AT@ 1103 @LENGTH@ 8


UPD VariableDeclarationStatement@@final File patches=new File(getModuleRoot(),Constants.PATCHES); @TO@ final File patches=new File(getModuleRoot(),PATCHES); @AT@ 2686 @LENGTH@ 66
---UPD VariableDeclarationFragment@@patches=new File(getModuleRoot(),Constants.PATCHES) @TO@ patches=new File(getModuleRoot(),PATCHES) @AT@ 2697 @LENGTH@ 54
------UPD ClassInstanceCreation@@File[getModuleRoot(), Constants.PATCHES] @TO@ File[getModuleRoot(), PATCHES] @AT@ 2707 @LENGTH@ 44
---------DEL QualifiedName@@Constants.PATCHES @AT@ 2733 @LENGTH@ 17
------------DEL SimpleName@@Constants @AT@ 2733 @LENGTH@ 9
------------DEL SimpleName@@PATCHES @AT@ 2743 @LENGTH@ 7
---------INS SimpleName@@PATCHES @TO@ ClassInstanceCreation@@File[getModuleRoot(), Constants.PATCHES] @AT@ 2789 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:registerRemoveOperation(resourceRegistration,new ServiceRemoveStepHandler(UndertowService.HANDLER,add),OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @TO@ MethodInvocation:registerRemoveOperation(resourceRegistration,new ServiceRemoveStepHandler(SERVICE_NAME,add){
  @Override protected ServiceName serviceName(  String name,  final PathAddress address){
    final String proxyName=address.getElement(address.size() - 2).getValue();
    return SERVICE_NAME.append(proxyName).append(name);
  }
}
,OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @AT@ 3513 @LENGTH@ 153
---UPD MethodInvocation@@registerRemoveOperation(resourceRegistration,new ServiceRemoveStepHandler(UndertowService.HANDLER,add),OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @TO@ registerRemoveOperation(resourceRegistration,new ServiceRemoveStepHandler(SERVICE_NAME,add){
  @Override protected ServiceName serviceName(  String name,  final PathAddress address){
    final String proxyName=address.getElement(address.size() - 2).getValue();
    return SERVICE_NAME.append(proxyName).append(name);
  }
}
,OperationEntry.Flag.RESTART_RESOURCE_SERVICES) @AT@ 3513 @LENGTH@ 152
------UPD SimpleName@@MethodName:registerRemoveOperation:[resourceRegistration, new ServiceRemoveStepHandler(UndertowService.HANDLER,add), OperationEntry.Flag.RESTART_RESOURCE_SERVICES] @TO@ MethodName:registerRemoveOperation:[resourceRegistration, new ServiceRemoveStepHandler(SERVICE_NAME,add){
  @Override protected ServiceName serviceName(  String name,  final PathAddress address){
    final String proxyName=address.getElement(address.size() - 2).getValue();
    return SERVICE_NAME.append(proxyName).append(name);
  }
}
, OperationEntry.Flag.RESTART_RESOURCE_SERVICES] @AT@ 3513 @LENGTH@ 152
---------UPD ClassInstanceCreation@@ServiceRemoveStepHandler[UndertowService.HANDLER, add] @TO@ ServiceRemoveStepHandler[SERVICE_NAME, add] @AT@ 3559 @LENGTH@ 58
------------DEL QualifiedName@@UndertowService.HANDLER @AT@ 3588 @LENGTH@ 23
---------------DEL SimpleName@@UndertowService @AT@ 3588 @LENGTH@ 15
---------------DEL SimpleName@@HANDLER @AT@ 3604 @LENGTH@ 7
------------INS SimpleName@@SERVICE_NAME @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[UndertowService.HANDLER, add] @AT@ 3588 @LENGTH@ 12
------------INS SimpleName@@add @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[UndertowService.HANDLER, add] @AT@ 3602 @LENGTH@ 3
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ServiceRemoveStepHandler[UndertowService.HANDLER, add] @AT@ 3607 @LENGTH@ 295
---------------INS MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3643 @LENGTH@ 249
------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3643 @LENGTH@ 9
------------------INS SimpleType@@ServiceName @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3653 @LENGTH@ 11
------------------INS SimpleName@@MethodName:serviceName @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3665 @LENGTH@ 11
------------------INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3677 @LENGTH@ 11
---------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 3677 @LENGTH@ 6
---------------------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 3684 @LENGTH@ 4
------------------INS SingleVariableDeclaration@@final PathAddress address @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3690 @LENGTH@ 25
---------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final PathAddress address @AT@ 3690 @LENGTH@ 5
---------------------INS SimpleType@@PathAddress @TO@ SingleVariableDeclaration@@final PathAddress address @AT@ 3696 @LENGTH@ 11
---------------------INS SimpleName@@address @TO@ SingleVariableDeclaration@@final PathAddress address @AT@ 3708 @LENGTH@ 7
------------------INS VariableDeclarationStatement@@final String proxyName=address.getElement(address.size() - 2).getValue(); @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3735 @LENGTH@ 75
---------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String proxyName=address.getElement(address.size() - 2).getValue(); @AT@ 3735 @LENGTH@ 5
---------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String proxyName=address.getElement(address.size() - 2).getValue(); @AT@ 3741 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@proxyName=address.getElement(address.size() - 2).getValue() @TO@ VariableDeclarationStatement@@final String proxyName=address.getElement(address.size() - 2).getValue(); @AT@ 3748 @LENGTH@ 61
------------------------INS SimpleName@@proxyName @TO@ VariableDeclarationFragment@@proxyName=address.getElement(address.size() - 2).getValue() @AT@ 3748 @LENGTH@ 9
------------------------INS MethodInvocation@@address.getElement(address.size() - 2).getValue() @TO@ VariableDeclarationFragment@@proxyName=address.getElement(address.size() - 2).getValue() @AT@ 3760 @LENGTH@ 49
---------------------------INS MethodInvocation@@MethodName:getElement:[address.size() - 2] @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 3760 @LENGTH@ 38
------------------------------INS InfixExpression@@address.size() - 2 @TO@ MethodInvocation@@MethodName:getElement:[address.size() - 2] @AT@ 3779 @LENGTH@ 18
---------------------------------INS MethodInvocation@@address.size() @TO@ InfixExpression@@address.size() - 2 @AT@ 3779 @LENGTH@ 14
------------------------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.size() @AT@ 3779 @LENGTH@ 7
------------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@address.size() @AT@ 3787 @LENGTH@ 6
---------------------------------INS Operator@@- @TO@ InfixExpression@@address.size() - 2 @AT@ 3793 @LENGTH@ 1
---------------------------------INS NumberLiteral@@2 @TO@ InfixExpression@@address.size() - 2 @AT@ 3796 @LENGTH@ 1
---------------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 3760 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 3799 @LENGTH@ 10
------------------INS ReturnStatement@@MethodInvocation:SERVICE_NAME.append(proxyName).append(name) @TO@ MethodDeclaration@@protected, ServiceName, MethodName:serviceName, String name, final PathAddress address,  @AT@ 3827 @LENGTH@ 51
---------------------INS MethodInvocation@@SERVICE_NAME.append(proxyName).append(name) @TO@ ReturnStatement@@MethodInvocation:SERVICE_NAME.append(proxyName).append(name) @AT@ 3834 @LENGTH@ 43
------------------------INS MethodInvocation@@MethodName:append:[proxyName] @TO@ MethodInvocation@@SERVICE_NAME.append(proxyName).append(name) @AT@ 3834 @LENGTH@ 30
---------------------------INS SimpleName@@proxyName @TO@ MethodInvocation@@MethodName:append:[proxyName] @AT@ 3854 @LENGTH@ 9
------------------------INS SimpleName@@Name:SERVICE_NAME @TO@ MethodInvocation@@SERVICE_NAME.append(proxyName).append(name) @AT@ 3834 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:append:[name] @TO@ MethodInvocation@@SERVICE_NAME.append(proxyName).append(name) @AT@ 3865 @LENGTH@ 12
---------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:append:[name] @AT@ 3872 @LENGTH@ 4
------------DEL SimpleName@@add @AT@ 3613 @LENGTH@ 3


UPD MethodDeclaration@@voidMethodName:FileModifyTask, MiscContentItem item, File target, File backup, ContentModification modification,  @TO@ voidMethodName:FileUpdateTask, MiscContentItem item, File target, File backup, ContentModification modification,  @AT@ 1491 @LENGTH@ 155
---UPD SimpleName@@MethodName:FileModifyTask @TO@ MethodName:FileUpdateTask @AT@ 1491 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:incrementJobCounter(getScheduler()) @TO@ MethodDeclaration@@private, void, MethodName:doAddJob, JobDetail job, Trigger trigger, SchedulerException,  @AT@ 9071 @LENGTH@ 36


DEL VariableDeclarationStatement@@final ModuleItem item=createContentItem(contentItem,itemHash); @AT@ 2356 @LENGTH@ 65
---DEL Modifier@@final @AT@ 2356 @LENGTH@ 5
---DEL SimpleType@@ModuleItem @AT@ 2362 @LENGTH@ 10
---DEL VariableDeclarationFragment@@item=createContentItem(contentItem,itemHash) @AT@ 2373 @LENGTH@ 47
------DEL SimpleName@@item @AT@ 2373 @LENGTH@ 4
------DEL MethodInvocation@@createContentItem(contentItem,itemHash) @AT@ 2380 @LENGTH@ 40
---------DEL SimpleName@@MethodName:createContentItem:[contentItem, itemHash] @AT@ 2380 @LENGTH@ 40
------------DEL SimpleName@@contentItem @AT@ 2398 @LENGTH@ 11
------------DEL SimpleName@@itemHash @AT@ 2411 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.instanceMap=new ConcurrentReferenceHashMap<Object,ManagedReference>(256,ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR,Runtime.getRuntime().availableProcessors(),ConcurrentReferenceHashMap.ReferenceType.STRONG,ConcurrentReferenceHashMap.ReferenceType.STRONG,EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)) @TO@ Assignment:this.instanceMap=new ConcurrentReferenceHashMap<Object,ManagedReference>(256,ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR,Runtime.getRuntime().availableProcessors(),ConcurrentReferenceHashMap.ReferenceType.STRONG,ConcurrentReferenceHashMap.ReferenceType.WEAK,EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)) @AT@ 1814 @LENGTH@ 404
---UPD Assignment@@this.instanceMap=new ConcurrentReferenceHashMap<Object,ManagedReference>(256,ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR,Runtime.getRuntime().availableProcessors(),ConcurrentReferenceHashMap.ReferenceType.STRONG,ConcurrentReferenceHashMap.ReferenceType.STRONG,EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)) @TO@ this.instanceMap=new ConcurrentReferenceHashMap<Object,ManagedReference>(256,ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR,Runtime.getRuntime().availableProcessors(),ConcurrentReferenceHashMap.ReferenceType.STRONG,ConcurrentReferenceHashMap.ReferenceType.WEAK,EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)) @AT@ 1814 @LENGTH@ 403
------UPD ClassInstanceCreation@@ConcurrentReferenceHashMap<Object,ManagedReference>[256, ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR, Runtime.getRuntime().availableProcessors(), ConcurrentReferenceHashMap.ReferenceType.STRONG, ConcurrentReferenceHashMap.ReferenceType.STRONG, EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)] @TO@ ConcurrentReferenceHashMap<Object,ManagedReference>[256, ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR, Runtime.getRuntime().availableProcessors(), ConcurrentReferenceHashMap.ReferenceType.STRONG, ConcurrentReferenceHashMap.ReferenceType.WEAK, EnumSet.of(ConcurrentReferenceHashMap.Option.IDENTITY_COMPARISONS)] @AT@ 1833 @LENGTH@ 384
---------UPD QualifiedName@@ConcurrentReferenceHashMap.ReferenceType.STRONG @TO@ ConcurrentReferenceHashMap.ReferenceType.WEAK @AT@ 2101 @LENGTH@ 47
------------UPD SimpleName@@STRONG @TO@ WEAK @AT@ 2142 @LENGTH@ 6


UPD IfStatement@@if (size != null && ref.getSize() != size) {  throw new IllegalArgumentException("Cannot use existing queue " + key + " as the existing queue size "+ (ref.getSize() != null ? ref.getSize() : Integer.MAX_VALUE)+ " does not match given queue size "+ size);} @TO@ if (size != null && !size.equals(ref.getSize())) {  throw new IllegalArgumentException("Cannot use existing queue " + key + " as the existing queue size "+ (ref.getSize() != null ? ref.getSize() : Integer.MAX_VALUE)+ " does not match given queue size "+ size);} @AT@ 3409 @LENGTH@ 385
---UPD InfixExpression@@size != null && ref.getSize() != size @TO@ size != null && !size.equals(ref.getSize()) @AT@ 3413 @LENGTH@ 37
------INS PrefixExpression@@!size.equals(ref.getSize()) @TO@ InfixExpression@@size != null && ref.getSize() != size @AT@ 3429 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!size.equals(ref.getSize()) @AT@ 3429 @LENGTH@ 1
---------INS MethodInvocation@@size.equals(ref.getSize()) @TO@ PrefixExpression@@!size.equals(ref.getSize()) @AT@ 3430 @LENGTH@ 26
------------INS SimpleName@@Name:size @TO@ MethodInvocation@@size.equals(ref.getSize()) @AT@ 3430 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:[ref.getSize()] @TO@ MethodInvocation@@size.equals(ref.getSize()) @AT@ 3435 @LENGTH@ 21
---------------INS MethodInvocation@@ref.getSize() @TO@ SimpleName@@MethodName:equals:[ref.getSize()] @AT@ 3442 @LENGTH@ 13
------------------MOV SimpleName@@Name:ref @TO@ MethodInvocation@@ref.getSize() @AT@ 3429 @LENGTH@ 3
------------------MOV SimpleName@@MethodName:getSize:[] @TO@ MethodInvocation@@ref.getSize() @AT@ 3433 @LENGTH@ 9
------DEL InfixExpression@@ref.getSize() != size @AT@ 3429 @LENGTH@ 21
---------DEL MethodInvocation@@ref.getSize() @AT@ 3429 @LENGTH@ 13
---------DEL Operator@@!= @AT@ 3442 @LENGTH@ 2
---------DEL SimpleName@@size @AT@ 3446 @LENGTH@ 4


UPD VariableDeclarationStatement@@DefaultCxfMesssageMapper beanBinding=new DefaultCxfMesssageMapper(); @TO@ DefaultCxfMessageMapper beanBinding=new DefaultCxfMessageMapper(); @AT@ 6058 @LENGTH@ 70
---UPD SimpleType@@DefaultCxfMesssageMapper @TO@ DefaultCxfMessageMapper @AT@ 6058 @LENGTH@ 24
---UPD VariableDeclarationFragment@@beanBinding=new DefaultCxfMesssageMapper() @TO@ beanBinding=new DefaultCxfMessageMapper() @AT@ 6083 @LENGTH@ 44
------UPD ClassInstanceCreation@@DefaultCxfMesssageMapper[] @TO@ DefaultCxfMessageMapper[] @AT@ 6097 @LENGTH@ 30
---------UPD SimpleType@@DefaultCxfMesssageMapper @TO@ DefaultCxfMessageMapper @AT@ 6101 @LENGTH@ 24


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricCreateTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]FabricCreateTest, FabricTestSupport @AT@ 1593 @LENGTH@ 3101
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricCreateTest, FabricTestSupport @AT@ 1710 @LENGTH@ 49


UPD IfStatement@@if (!dictionary.get(key).equals(String.valueOf(port))) {  dictionary.put(key,String.valueOf(port));  configuration.update(dictionary);} @TO@ if (!String.valueOf(port).equals(dictionary.get(key))) {  dictionary.put(key,String.valueOf(port));  configuration.update(dictionary);} @AT@ 20997 @LENGTH@ 191
---UPD PrefixExpression@@!dictionary.get(key).equals(String.valueOf(port)) @TO@ !String.valueOf(port).equals(dictionary.get(key)) @AT@ 21001 @LENGTH@ 49
------UPD MethodInvocation@@dictionary.get(key).equals(String.valueOf(port)) @TO@ String.valueOf(port).equals(dictionary.get(key)) @AT@ 21002 @LENGTH@ 48
---------UPD MethodInvocation@@MethodName:get:[key] @TO@ MethodName:valueOf:[port] @AT@ 21002 @LENGTH@ 19
------------UPD SimpleName@@key @TO@ port @AT@ 21017 @LENGTH@ 3
---------UPD SimpleName@@Name:dictionary @TO@ Name:String @AT@ 21002 @LENGTH@ 10
---------UPD SimpleName@@MethodName:equals:[String.valueOf(port)] @TO@ MethodName:equals:[dictionary.get(key)] @AT@ 21022 @LENGTH@ 28
------------UPD MethodInvocation@@String.valueOf(port) @TO@ dictionary.get(key) @AT@ 21029 @LENGTH@ 20
---------------UPD SimpleName@@Name:String @TO@ Name:dictionary @AT@ 21029 @LENGTH@ 6
---------------UPD SimpleName@@MethodName:valueOf:[port] @TO@ MethodName:get:[key] @AT@ 21036 @LENGTH@ 13
------------------UPD SimpleName@@port @TO@ key @AT@ 21044 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:XmlSignatureHelper,  @TO@ TypeDeclaration@@[public]XmlSignatureHelper,  @AT@ 2575 @LENGTH@ 59
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:XmlSignatureHelper,  @AT@ 2575 @LENGTH@ 7
---INS SimpleName@@MethodName:XmlSignatureHelper @TO@ MethodDeclaration@@private, voidMethodName:XmlSignatureHelper,  @AT@ 2583 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.Ip,"${zk:" + parent + "/resolver}") @TO@ MethodInvocation:service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.Ip,"${zk:" + name + "/${zk:"+ name+ "/resolver}}") @AT@ 14269 @LENGTH@ 117
---UPD MethodInvocation@@service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.Ip,"${zk:" + parent + "/resolver}") @TO@ service.getDataStore().setContainerAttribute(name,DataStore.ContainerAttribute.Ip,"${zk:" + name + "/${zk:"+ name+ "/resolver}}") @AT@ 14269 @LENGTH@ 116
------UPD SimpleName@@MethodName:setContainerAttribute:[name, DataStore.ContainerAttribute.Ip, "${zk:" + parent + "/resolver}"] @TO@ MethodName:setContainerAttribute:[name, DataStore.ContainerAttribute.Ip, "${zk:" + name + "/${zk:"+ name+ "/resolver}}"] @AT@ 14292 @LENGTH@ 93
---------UPD InfixExpression@@"${zk:" + parent + "/resolver}" @TO@ "${zk:" + name + "/${zk:"+ name+ "/resolver}}" @AT@ 14353 @LENGTH@ 31
------------UPD SimpleName@@parent @TO@ name @AT@ 14363 @LENGTH@ 6
------------INS StringLiteral@@"/${zk:" @TO@ InfixExpression@@"${zk:" + parent + "/resolver}" @AT@ 14370 @LENGTH@ 8
------------UPD StringLiteral@@"/resolver}" @TO@ "/resolver}}" @AT@ 14372 @LENGTH@ 12
------------INS SimpleName@@name @TO@ InfixExpression@@"${zk:" + parent + "/resolver}" @AT@ 14381 @LENGTH@ 4


INS IfStatement@@if (childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty())) {  throw new HiveException("Internal Hive error during operator initialization.");} @TO@ MethodDeclaration@@public, void, MethodName:initialize, Configuration hconf, ObjectInspector[] inputOIs, HiveException,  @AT@ 11888 @LENGTH@ 202
---INS InfixExpression@@childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty()) @TO@ IfStatement@@if (childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty())) {  throw new HiveException("Internal Hive error during operator initialization.");} @AT@ 11892 @LENGTH@ 92
------INS InfixExpression@@childOperatorsArray == null @TO@ InfixExpression@@childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty()) @AT@ 11892 @LENGTH@ 27
---------INS SimpleName@@childOperatorsArray @TO@ InfixExpression@@childOperatorsArray == null @AT@ 11892 @LENGTH@ 19
---------INS Operator@@== @TO@ InfixExpression@@childOperatorsArray == null @AT@ 11911 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@childOperatorsArray == null @AT@ 11915 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty()) @AT@ 11919 @LENGTH@ 2
------INS PrefixExpression@@!(childOperators == null || childOperators.isEmpty()) @TO@ InfixExpression@@childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty()) @AT@ 11931 @LENGTH@ 53
---------INS Operator@@! @TO@ PrefixExpression@@!(childOperators == null || childOperators.isEmpty()) @AT@ 11931 @LENGTH@ 1
---------INS ParenthesizedExpression@@(childOperators == null || childOperators.isEmpty()) @TO@ PrefixExpression@@!(childOperators == null || childOperators.isEmpty()) @AT@ 11932 @LENGTH@ 52
------------INS InfixExpression@@childOperators == null || childOperators.isEmpty() @TO@ ParenthesizedExpression@@(childOperators == null || childOperators.isEmpty()) @AT@ 11933 @LENGTH@ 50
---------------INS InfixExpression@@childOperators == null @TO@ InfixExpression@@childOperators == null || childOperators.isEmpty() @AT@ 11933 @LENGTH@ 22
------------------INS SimpleName@@childOperators @TO@ InfixExpression@@childOperators == null @AT@ 11933 @LENGTH@ 14
------------------INS Operator@@== @TO@ InfixExpression@@childOperators == null @AT@ 11947 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@childOperators == null @AT@ 11951 @LENGTH@ 4
---------------INS Operator@@|| @TO@ InfixExpression@@childOperators == null || childOperators.isEmpty() @AT@ 11955 @LENGTH@ 2
---------------INS MethodInvocation@@childOperators.isEmpty() @TO@ InfixExpression@@childOperators == null || childOperators.isEmpty() @AT@ 11959 @LENGTH@ 24
------------------INS SimpleName@@Name:childOperators @TO@ MethodInvocation@@childOperators.isEmpty() @AT@ 11959 @LENGTH@ 14
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@childOperators.isEmpty() @AT@ 11974 @LENGTH@ 9
---MOV Block@@ThenBody:{  throw new HiveException("Internal Hive error during operator initialization.");} @TO@ IfStatement@@if (childOperatorsArray == null && !(childOperators == null || childOperators.isEmpty())) {  throw new HiveException("Internal Hive error during operator initialization.");} @AT@ 25494 @LENGTH@ 104


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[@Deprecated, public]PropertyEditorTypeConverter, [TypeConverter] @AT@ 2106 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2106 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2113 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2121 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 2143 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2150 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("incompatible permission type " + permission.getClass()) @TO@ MethodInvocation:ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2333 @LENGTH@ 92
---DEL ClassInstanceCreation@@IllegalArgumentException["incompatible permission type " + permission.getClass()] @AT@ 2339 @LENGTH@ 85
------DEL New@@new @AT@ 2339 @LENGTH@ 3
------DEL SimpleType@@IllegalArgumentException @AT@ 2343 @LENGTH@ 24
------DEL InfixExpression@@"incompatible permission type " + permission.getClass() @AT@ 2368 @LENGTH@ 55
---------DEL StringLiteral@@"incompatible permission type " @AT@ 2368 @LENGTH@ 31
---------DEL Operator@@+ @AT@ 2399 @LENGTH@ 1
---------DEL MethodInvocation@@permission.getClass() @AT@ 2402 @LENGTH@ 21
---INS MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("incompatible permission type " + permission.getClass()) @AT@ 2363 @LENGTH@ 77
------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2363 @LENGTH@ 27
------INS SimpleName@@MethodName:incompatiblePermissionType:[permission.getClass()] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2391 @LENGTH@ 49
---------INS MethodInvocation@@permission.getClass() @TO@ SimpleName@@MethodName:incompatiblePermissionType:[permission.getClass()] @AT@ 2418 @LENGTH@ 21
------------MOV SimpleName@@Name:permission @TO@ MethodInvocation@@permission.getClass() @AT@ 2402 @LENGTH@ 10
------------MOV SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@permission.getClass() @AT@ 2413 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:placeholderResolvers.get(scheme).resolve(pid,key,toSubstitute) @TO@ MethodInvocation:placeholderResolvers.get(scheme).resolve(configs,pid,key,toSubstitute) @AT@ 2853 @LENGTH@ 72
---UPD MethodInvocation@@placeholderResolvers.get(scheme).resolve(pid,key,toSubstitute) @TO@ placeholderResolvers.get(scheme).resolve(configs,pid,key,toSubstitute) @AT@ 2860 @LENGTH@ 64
------UPD SimpleName@@MethodName:resolve:[pid, key, toSubstitute] @TO@ MethodName:resolve:[configs, pid, key, toSubstitute] @AT@ 2893 @LENGTH@ 31
---------INS SimpleName@@configs @TO@ SimpleName@@MethodName:resolve:[pid, key, toSubstitute] @AT@ 2901 @LENGTH@ 7


UPD TryStatement@@try {  if (isQueueing()) {    client.move(key,dbIndex);    return null;  }  if (isPipelined()) {    client.move(key,dbIndex);    return null;  }  return (jedis.move(key,dbIndex) == 1);} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  if (isQueueing()) {    transaction.move(key,dbIndex);    return null;  }  if (isPipelined()) {    pipeline.move(key,dbIndex);    return null;  }  return (jedis.move(key,dbIndex) == 1);} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 15872 @LENGTH@ 274
---UPD IfStatement@@if (isQueueing()) {  client.move(key,dbIndex);  return null;} @TO@ if (isQueueing()) {  transaction.move(key,dbIndex);  return null;} @AT@ 15881 @LENGTH@ 72
------UPD Block@@ThenBody:{  client.move(key,dbIndex);  return null;} @TO@ ThenBody:{  transaction.move(key,dbIndex);  return null;} @AT@ 15899 @LENGTH@ 54
---------UPD ExpressionStatement@@MethodInvocation:client.move(key,dbIndex) @TO@ MethodInvocation:transaction.move(key,dbIndex) @AT@ 15905 @LENGTH@ 26
------------UPD MethodInvocation@@client.move(key,dbIndex) @TO@ transaction.move(key,dbIndex) @AT@ 15905 @LENGTH@ 25
---------------UPD SimpleName@@Name:client @TO@ Name:transaction @AT@ 15905 @LENGTH@ 6
---UPD IfStatement@@if (isPipelined()) {  client.move(key,dbIndex);  return null;} @TO@ if (isPipelined()) {  pipeline.move(key,dbIndex);  return null;} @AT@ 15957 @LENGTH@ 73
------UPD Block@@ThenBody:{  client.move(key,dbIndex);  return null;} @TO@ ThenBody:{  pipeline.move(key,dbIndex);  return null;} @AT@ 15976 @LENGTH@ 54
---------UPD ExpressionStatement@@MethodInvocation:client.move(key,dbIndex) @TO@ MethodInvocation:pipeline.move(key,dbIndex) @AT@ 15982 @LENGTH@ 26
------------UPD MethodInvocation@@client.move(key,dbIndex) @TO@ pipeline.move(key,dbIndex) @AT@ 15982 @LENGTH@ 25
---------------UPD SimpleName@@Name:client @TO@ Name:pipeline @AT@ 15982 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @TO@ MethodDeclaration@@public, ModelNode, MethodName:fixModel, ModelNode modelNode,  @AT@ 4886 @LENGTH@ 140
---INS MethodInvocation@@modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @TO@ ExpressionStatement@@MethodInvocation:modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @AT@ 4886 @LENGTH@ 139
------INS MethodInvocation@@MethodName:get:[ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()] @TO@ MethodInvocation@@modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @AT@ 4886 @LENGTH@ 124
---------INS MethodInvocation@@ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName() @TO@ MethodInvocation@@MethodName:get:[ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()] @AT@ 4939 @LENGTH@ 70
------------INS QualifiedName@@Name:ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY @TO@ MethodInvocation@@ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName() @AT@ 4939 @LENGTH@ 60
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName() @AT@ 5000 @LENGTH@ 9
------INS MethodInvocation@@MethodName:get:[MOD_CLUSTER_CONFIG, CONFIGURATION] @TO@ MethodInvocation@@modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @AT@ 4886 @LENGTH@ 48
---------INS SimpleName@@MOD_CLUSTER_CONFIG @TO@ MethodInvocation@@MethodName:get:[MOD_CLUSTER_CONFIG, CONFIGURATION] @AT@ 4900 @LENGTH@ 18
---------INS SimpleName@@CONFIGURATION @TO@ MethodInvocation@@MethodName:get:[MOD_CLUSTER_CONFIG, CONFIGURATION] @AT@ 4920 @LENGTH@ 13
------INS SimpleName@@Name:modelNode @TO@ MethodInvocation@@modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @AT@ 4886 @LENGTH@ 9
------INS SimpleName@@MethodName:set:["DEFAULT"] @TO@ MethodInvocation@@modelNode.get(MOD_CLUSTER_CONFIG,CONFIGURATION).get(ModClusterConfigResourceDefinition.SESSION_DRAINING_STRATEGY.getName()).set("DEFAULT") @AT@ 5011 @LENGTH@ 14
---------INS StringLiteral@@"DEFAULT" @TO@ SimpleName@@MethodName:set:["DEFAULT"] @AT@ 5015 @LENGTH@ 9


UPD WhileStatement@@while (!Thread.currentThread().isInterrupted()) {  try {    operations.take().invoke();  } catch (  InterruptedException e) {    Thread.currentThread().interrupt();    break;  }catch (  Exception e) {    handleException(e);  }} @TO@ while (started.get() && !Thread.currentThread().isInterrupted()) {  try {    operations.take().invoke();  } catch (  InterruptedException e) {    Thread.currentThread().interrupt();    break;  }catch (  Exception e) {    handleException(e);  }} @AT@ 18323 @LENGTH@ 329
---INS InfixExpression@@started.get() && !Thread.currentThread().isInterrupted() @TO@ WhileStatement@@while (!Thread.currentThread().isInterrupted()) {  try {    operations.take().invoke();  } catch (  InterruptedException e) {    Thread.currentThread().interrupt();    break;  }catch (  Exception e) {    handleException(e);  }} @AT@ 18404 @LENGTH@ 56
------MOV PrefixExpression@@!Thread.currentThread().isInterrupted() @TO@ InfixExpression@@started.get() && !Thread.currentThread().isInterrupted() @AT@ 18330 @LENGTH@ 39
------INS MethodInvocation@@started.get() @TO@ InfixExpression@@started.get() && !Thread.currentThread().isInterrupted() @AT@ 18404 @LENGTH@ 13
---------INS SimpleName@@Name:started @TO@ MethodInvocation@@started.get() @AT@ 18404 @LENGTH@ 7
---------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@started.get() @AT@ 18412 @LENGTH@ 5
------INS Operator@@&& @TO@ InfixExpression@@started.get() && !Thread.currentThread().isInterrupted() @AT@ 18417 @LENGTH@ 2


UPD CatchClause@@catch (Throwable throwable) {  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @TO@ catch (Throwable throwable) {  if (!destroyed.get()) {    LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);  }} @AT@ 5386 @LENGTH@ 148
---INS IfStatement@@if (!destroyed.get()) {  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @TO@ CatchClause@@catch (Throwable throwable) {  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @AT@ 5432 @LENGTH@ 150
------INS PrefixExpression@@!destroyed.get() @TO@ IfStatement@@if (!destroyed.get()) {  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @AT@ 5436 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!destroyed.get() @AT@ 5436 @LENGTH@ 1
---------INS MethodInvocation@@destroyed.get() @TO@ PrefixExpression@@!destroyed.get() @AT@ 5437 @LENGTH@ 15
------------INS SimpleName@@Name:destroyed @TO@ MethodInvocation@@destroyed.get() @AT@ 5437 @LENGTH@ 9
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@destroyed.get() @AT@ 5447 @LENGTH@ 5
------INS Block@@ThenBody:{  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @TO@ IfStatement@@if (!destroyed.get()) {  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @AT@ 5454 @LENGTH@ 128
---------MOV ExpressionStatement@@MethodInvocation:LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable) @TO@ Block@@ThenBody:{  LOGGER.warn("Error creating service for ManagedServiceFactory " + getName(),throwable);} @AT@ 5432 @LENGTH@ 88


INS MethodDeclaration@@public, void, MethodName:testSelect,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 6679 @LENGTH@ 51
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 6679 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 6686 @LENGTH@ 4
---INS SimpleName@@MethodName:testSelect @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 6691 @LENGTH@ 10
---INS ExpressionStatement@@SuperMethodInvocation:super.testSelect() @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 6708 @LENGTH@ 19
------INS SuperMethodInvocation@@super.testSelect() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testSelect() @AT@ 6708 @LENGTH@ 18
---------INS SimpleName@@MethodName:testSelect:[] @TO@ SuperMethodInvocation@@super.testSelect() @AT@ 6714 @LENGTH@ 10


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]AutoClusterStartupTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]AutoClusterStartupTest, FabricTestSupport @AT@ 2059 @LENGTH@ 2091
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @AT@ 2152 @LENGTH@ 49


DEL FieldDeclaration@@public, static, final, String, [CHECK_RESOURCE_ACCESS="check-resource-access"] @AT@ 21523 @LENGTH@ 75
---DEL Modifier@@public @AT@ 21523 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21530 @LENGTH@ 6
---DEL Modifier@@final @AT@ 21537 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 21543 @LENGTH@ 6
---DEL VariableDeclarationFragment@@CHECK_RESOURCE_ACCESS="check-resource-access" @AT@ 21550 @LENGTH@ 47
------DEL SimpleName@@CHECK_RESOURCE_ACCESS @AT@ 21550 @LENGTH@ 21
------DEL StringLiteral@@"check-resource-access" @AT@ 21574 @LENGTH@ 23


UPD MethodDeclaration@@AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 31214 @LENGTH@ 38
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 31252 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 31252 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 31260 @LENGTH@ 17


UPD IfStatement@@if (endpoint.getDoneFileName() != null && !endpoint.isNoop() && complete) {  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @TO@ if (endpoint.getDoneFileName() != null && !endpoint.isNoop()) {  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  if (endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete) {    try {      boolean deleted=operations.deleteFile(doneFileName);      log.trace("Done file: {} was deleted: {}",doneFileName,deleted);      if (!deleted) {        log.warn("Done file: " + doneFileName + " could not be deleted");      }    } catch (    Exception e) {      handleException(e);    }  }} @AT@ 5076 @LENGTH@ 745
---DEL InfixExpression@@endpoint.getDoneFileName() != null && !endpoint.isNoop() && complete @AT@ 5080 @LENGTH@ 68
------DEL Operator@@&& @AT@ 5136 @LENGTH@ 2
------DEL SimpleName@@complete @AT@ 5140 @LENGTH@ 8
---MOV InfixExpression@@endpoint.getDoneFileName() != null && !endpoint.isNoop() @TO@ IfStatement@@if (endpoint.getDoneFileName() != null && !endpoint.isNoop() && complete) {  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5080 @LENGTH@ 56
---UPD Block@@ThenBody:{  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @TO@ ThenBody:{  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  if (endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete) {    try {      boolean deleted=operations.deleteFile(doneFileName);      log.trace("Done file: {} was deleted: {}",doneFileName,deleted);      if (!deleted) {        log.warn("Done file: " + doneFileName + " could not be deleted");      }    } catch (    Exception e) {      handleException(e);    }  }} @AT@ 5150 @LENGTH@ 671
------INS IfStatement@@if (endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete) {  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @TO@ Block@@ThenBody:{  String doneFileName=endpoint.createDoneFileName(absoluteFileName);  ObjectHelper.notEmpty(doneFileName,"doneFileName",endpoint);  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5436 @LENGTH@ 556
---------INS InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete @TO@ IfStatement@@if (endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete) {  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5440 @LENGTH@ 64
------------INS InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete @AT@ 5440 @LENGTH@ 52
---------------INS MethodInvocation@@endpoint.getDoneFileName().indexOf("{file:name") @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 @AT@ 5440 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:getDoneFileName:[] @TO@ MethodInvocation@@endpoint.getDoneFileName().indexOf("{file:name") @AT@ 5440 @LENGTH@ 26
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getDoneFileName().indexOf("{file:name") @AT@ 5440 @LENGTH@ 8
------------------INS SimpleName@@MethodName:indexOf:["{file:name"] @TO@ MethodInvocation@@endpoint.getDoneFileName().indexOf("{file:name") @AT@ 5467 @LENGTH@ 21
---------------------INS StringLiteral@@"{file:name" @TO@ SimpleName@@MethodName:indexOf:["{file:name"] @AT@ 5475 @LENGTH@ 12
---------------INS Operator@@> @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 @AT@ 5488 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 @AT@ 5491 @LENGTH@ 1
------------INS Operator@@|| @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete @AT@ 5492 @LENGTH@ 2
------------INS SimpleName@@complete @TO@ InfixExpression@@endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete @AT@ 5496 @LENGTH@ 8
---------INS Block@@ThenBody:{  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @TO@ IfStatement@@if (endpoint.getDoneFileName().indexOf("{file:name") > 0 || complete) {  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5506 @LENGTH@ 486
------------MOV TryStatement@@try {  boolean deleted=operations.deleteFile(doneFileName);  log.trace("Done file: {} was deleted: {}",doneFileName,deleted);  if (!deleted) {    log.warn("Done file: " + doneFileName + " could not be deleted");  }} catch (Exception e) {  handleException(e);} @TO@ Block@@ThenBody:{  try {    boolean deleted=operations.deleteFile(doneFileName);    log.trace("Done file: {} was deleted: {}",doneFileName,deleted);    if (!deleted) {      log.warn("Done file: " + doneFileName + " could not be deleted");    }  } catch (  Exception e) {    handleException(e);  }} @AT@ 5394 @LENGTH@ 417


UPD EnhancedForStatement@@for (Object listener : listeners) {  if (listener instanceof SkipListener) {    SkipListener<I,O> skipListener=(SkipListener<I,O>)listener;    skipListeners.add(skipListener);  }  if (listener instanceof StepExecutionListener) {    StepExecutionListener stepExecutionListener=(StepExecutionListener)listener;    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof javax.batch.api.listener.StepListener) {    StepExecutionListener stepExecutionListener=new StepListenerAdapter((javax.batch.api.listener.StepListener)listener);    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof ChunkListener) {    ChunkListener chunkListener=(ChunkListener)listener;    chunkListeners.add(chunkListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ChunkListener) {    ChunkListener chunkListener=new ChunkListenerAdapter((javax.batch.api.chunk.listener.ChunkListener)listener);    chunkListeners.add(chunkListener);  }  if (listener instanceof ItemReadListener) {    ItemReadListener<I> readListener=(ItemReadListener<I>)listener;    readListeners.add(readListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemReadListener) {    ItemReadListener itemListener=new ItemReadListenerAdapter((javax.batch.api.chunk.listener.ItemReadListener)listener);    readListeners.add(itemListener);  }  if (listener instanceof ItemWriteListener) {    ItemWriteListener<O> writeListener=(ItemWriteListener<O>)listener;    writeListeners.add(writeListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemWriteListener) {    ItemWriteListener itemListener=new ItemWriteListenerAdapter((javax.batch.api.chunk.listener.ItemWriteListener)listener);    writeListeners.add(itemListener);  }  if (listener instanceof ItemProcessListener) {    ItemProcessListener<I,O> processListener=(ItemProcessListener<I,O>)listener;    processListeners.add(processListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemProcessListener) {    ItemProcessListener itemListener=new ItemProcessListenerAdapter((javax.batch.api.chunk.listener.ItemProcessListener)listener);    processListeners.add(itemListener);  }} @TO@ for (Object listener : listeners) {  if (listener instanceof SkipListener) {    SkipListener<I,O> skipListener=(SkipListener<I,O>)listener;    skipListeners.add(skipListener);  }  if (listener instanceof SkipReadListener) {    SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);    skipListeners.add(skipListener);  }  if (listener instanceof SkipProcessListener) {    SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);    skipListeners.add(skipListener);  }  if (listener instanceof SkipWriteListener) {    SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);    skipListeners.add(skipListener);  }  if (listener instanceof StepExecutionListener) {    StepExecutionListener stepExecutionListener=(StepExecutionListener)listener;    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof javax.batch.api.listener.StepListener) {    StepExecutionListener stepExecutionListener=new StepListenerAdapter((javax.batch.api.listener.StepListener)listener);    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof ChunkListener) {    ChunkListener chunkListener=(ChunkListener)listener;    chunkListeners.add(chunkListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ChunkListener) {    ChunkListener chunkListener=new ChunkListenerAdapter((javax.batch.api.chunk.listener.ChunkListener)listener);    chunkListeners.add(chunkListener);  }  if (listener instanceof ItemReadListener) {    ItemReadListener<I> readListener=(ItemReadListener<I>)listener;    readListeners.add(readListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemReadListener) {    ItemReadListener itemListener=new ItemReadListenerAdapter((javax.batch.api.chunk.listener.ItemReadListener)listener);    readListeners.add(itemListener);  }  if (listener instanceof ItemWriteListener) {    ItemWriteListener<O> writeListener=(ItemWriteListener<O>)listener;    writeListeners.add(writeListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemWriteListener) {    ItemWriteListener itemListener=new ItemWriteListenerAdapter((javax.batch.api.chunk.listener.ItemWriteListener)listener);    writeListeners.add(itemListener);  }  if (listener instanceof ItemProcessListener) {    ItemProcessListener<I,O> processListener=(ItemProcessListener<I,O>)listener;    processListeners.add(processListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemProcessListener) {    ItemProcessListener itemListener=new ItemProcessListenerAdapter((javax.batch.api.chunk.listener.ItemProcessListener)listener);    processListeners.add(itemListener);  }} @AT@ 22344 @LENGTH@ 2286
---INS IfStatement@@if (listener instanceof SkipReadListener) {  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @TO@ EnhancedForStatement@@for (Object listener : listeners) {  if (listener instanceof SkipListener) {    SkipListener<I,O> skipListener=(SkipListener<I,O>)listener;    skipListeners.add(skipListener);  }  if (listener instanceof StepExecutionListener) {    StepExecutionListener stepExecutionListener=(StepExecutionListener)listener;    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof javax.batch.api.listener.StepListener) {    StepExecutionListener stepExecutionListener=new StepListenerAdapter((javax.batch.api.listener.StepListener)listener);    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof ChunkListener) {    ChunkListener chunkListener=(ChunkListener)listener;    chunkListeners.add(chunkListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ChunkListener) {    ChunkListener chunkListener=new ChunkListenerAdapter((javax.batch.api.chunk.listener.ChunkListener)listener);    chunkListeners.add(chunkListener);  }  if (listener instanceof ItemReadListener) {    ItemReadListener<I> readListener=(ItemReadListener<I>)listener;    readListeners.add(readListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemReadListener) {    ItemReadListener itemListener=new ItemReadListenerAdapter((javax.batch.api.chunk.listener.ItemReadListener)listener);    readListeners.add(itemListener);  }  if (listener instanceof ItemWriteListener) {    ItemWriteListener<O> writeListener=(ItemWriteListener<O>)listener;    writeListeners.add(writeListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemWriteListener) {    ItemWriteListener itemListener=new ItemWriteListenerAdapter((javax.batch.api.chunk.listener.ItemWriteListener)listener);    writeListeners.add(itemListener);  }  if (listener instanceof ItemProcessListener) {    ItemProcessListener<I,O> processListener=(ItemProcessListener<I,O>)listener;    processListeners.add(processListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemProcessListener) {    ItemProcessListener itemListener=new ItemProcessListenerAdapter((javax.batch.api.chunk.listener.ItemProcessListener)listener);    processListeners.add(itemListener);  }} @AT@ 22773 @LENGTH@ 182
------INS InstanceofExpression@@listener instanceof SkipReadListener @TO@ IfStatement@@if (listener instanceof SkipReadListener) {  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @AT@ 22776 @LENGTH@ 36
---------INS SimpleName@@listener @TO@ InstanceofExpression@@listener instanceof SkipReadListener @AT@ 22776 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@listener instanceof SkipReadListener @AT@ 22785 @LENGTH@ 10
---------INS SimpleType@@SkipReadListener @TO@ InstanceofExpression@@listener instanceof SkipReadListener @AT@ 22796 @LENGTH@ 16
------INS Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @TO@ IfStatement@@if (listener instanceof SkipReadListener) {  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @AT@ 22814 @LENGTH@ 141
---------INS VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null); @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @AT@ 22820 @LENGTH@ 93
------------INS SimpleType@@SkipListener @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null); @AT@ 22820 @LENGTH@ 12
------------INS VariableDeclarationFragment@@skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null) @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null); @AT@ 22833 @LENGTH@ 79
---------------INS SimpleName@@skipListener @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null) @AT@ 22833 @LENGTH@ 12
---------------INS ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null) @AT@ 22848 @LENGTH@ 64
------------------INS New@@new @TO@ ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @AT@ 22848 @LENGTH@ 3
------------------INS SimpleType@@SkipListenerAdapter @TO@ ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @AT@ 22852 @LENGTH@ 19
------------------INS CastExpression@@(SkipReadListener)listener @TO@ ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @AT@ 22872 @LENGTH@ 27
---------------------INS SimpleType@@SkipReadListener @TO@ CastExpression@@(SkipReadListener)listener @AT@ 22873 @LENGTH@ 16
---------------------INS SimpleName@@listener @TO@ CastExpression@@(SkipReadListener)listener @AT@ 22891 @LENGTH@ 8
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @AT@ 22901 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[(SkipReadListener)listener, null, null] @AT@ 22907 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter((SkipReadListener)listener,null,null);  skipListeners.add(skipListener);} @AT@ 22918 @LENGTH@ 32
------------INS MethodInvocation@@skipListeners.add(skipListener) @TO@ ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @AT@ 22918 @LENGTH@ 31
---------------INS SimpleName@@Name:skipListeners @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 22918 @LENGTH@ 13
---------------INS SimpleName@@MethodName:add:[skipListener] @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 22932 @LENGTH@ 17
------------------INS SimpleName@@skipListener @TO@ SimpleName@@MethodName:add:[skipListener] @AT@ 22936 @LENGTH@ 12
---INS IfStatement@@if (listener instanceof SkipProcessListener) {  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @TO@ EnhancedForStatement@@for (Object listener : listeners) {  if (listener instanceof SkipListener) {    SkipListener<I,O> skipListener=(SkipListener<I,O>)listener;    skipListeners.add(skipListener);  }  if (listener instanceof StepExecutionListener) {    StepExecutionListener stepExecutionListener=(StepExecutionListener)listener;    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof javax.batch.api.listener.StepListener) {    StepExecutionListener stepExecutionListener=new StepListenerAdapter((javax.batch.api.listener.StepListener)listener);    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof ChunkListener) {    ChunkListener chunkListener=(ChunkListener)listener;    chunkListeners.add(chunkListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ChunkListener) {    ChunkListener chunkListener=new ChunkListenerAdapter((javax.batch.api.chunk.listener.ChunkListener)listener);    chunkListeners.add(chunkListener);  }  if (listener instanceof ItemReadListener) {    ItemReadListener<I> readListener=(ItemReadListener<I>)listener;    readListeners.add(readListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemReadListener) {    ItemReadListener itemListener=new ItemReadListenerAdapter((javax.batch.api.chunk.listener.ItemReadListener)listener);    readListeners.add(itemListener);  }  if (listener instanceof ItemWriteListener) {    ItemWriteListener<O> writeListener=(ItemWriteListener<O>)listener;    writeListeners.add(writeListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemWriteListener) {    ItemWriteListener itemListener=new ItemWriteListenerAdapter((javax.batch.api.chunk.listener.ItemWriteListener)listener);    writeListeners.add(itemListener);  }  if (listener instanceof ItemProcessListener) {    ItemProcessListener<I,O> processListener=(ItemProcessListener<I,O>)listener;    processListeners.add(processListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemProcessListener) {    ItemProcessListener itemListener=new ItemProcessListenerAdapter((javax.batch.api.chunk.listener.ItemProcessListener)listener);    processListeners.add(itemListener);  }} @AT@ 22959 @LENGTH@ 187
------INS InstanceofExpression@@listener instanceof SkipProcessListener @TO@ IfStatement@@if (listener instanceof SkipProcessListener) {  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @AT@ 22962 @LENGTH@ 39
---------INS SimpleName@@listener @TO@ InstanceofExpression@@listener instanceof SkipProcessListener @AT@ 22962 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@listener instanceof SkipProcessListener @AT@ 22971 @LENGTH@ 10
---------INS SimpleType@@SkipProcessListener @TO@ InstanceofExpression@@listener instanceof SkipProcessListener @AT@ 22982 @LENGTH@ 19
------INS Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @TO@ IfStatement@@if (listener instanceof SkipProcessListener) {  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @AT@ 23003 @LENGTH@ 143
---------INS VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null); @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @AT@ 23009 @LENGTH@ 95
------------INS SimpleType@@SkipListener @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null); @AT@ 23009 @LENGTH@ 12
------------INS VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null) @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null); @AT@ 23022 @LENGTH@ 81
---------------INS SimpleName@@skipListener @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null) @AT@ 23022 @LENGTH@ 12
---------------INS ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null) @AT@ 23037 @LENGTH@ 66
------------------INS New@@new @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @AT@ 23037 @LENGTH@ 3
------------------INS SimpleType@@SkipListenerAdapter @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @AT@ 23041 @LENGTH@ 19
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @AT@ 23061 @LENGTH@ 4
------------------INS CastExpression@@(SkipProcessListener)listener @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @AT@ 23066 @LENGTH@ 30
---------------------INS SimpleType@@SkipProcessListener @TO@ CastExpression@@(SkipProcessListener)listener @AT@ 23067 @LENGTH@ 19
---------------------INS SimpleName@@listener @TO@ CastExpression@@(SkipProcessListener)listener @AT@ 23088 @LENGTH@ 8
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, (SkipProcessListener)listener, null] @AT@ 23098 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,(SkipProcessListener)listener,null);  skipListeners.add(skipListener);} @AT@ 23109 @LENGTH@ 32
------------INS MethodInvocation@@skipListeners.add(skipListener) @TO@ ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @AT@ 23109 @LENGTH@ 31
---------------INS SimpleName@@Name:skipListeners @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 23109 @LENGTH@ 13
---------------INS SimpleName@@MethodName:add:[skipListener] @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 23123 @LENGTH@ 17
------------------INS SimpleName@@skipListener @TO@ SimpleName@@MethodName:add:[skipListener] @AT@ 23127 @LENGTH@ 12
---INS IfStatement@@if (listener instanceof SkipWriteListener) {  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @TO@ EnhancedForStatement@@for (Object listener : listeners) {  if (listener instanceof SkipListener) {    SkipListener<I,O> skipListener=(SkipListener<I,O>)listener;    skipListeners.add(skipListener);  }  if (listener instanceof StepExecutionListener) {    StepExecutionListener stepExecutionListener=(StepExecutionListener)listener;    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof javax.batch.api.listener.StepListener) {    StepExecutionListener stepExecutionListener=new StepListenerAdapter((javax.batch.api.listener.StepListener)listener);    stepExecutionListeners.add(stepExecutionListener);  }  if (listener instanceof ChunkListener) {    ChunkListener chunkListener=(ChunkListener)listener;    chunkListeners.add(chunkListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ChunkListener) {    ChunkListener chunkListener=new ChunkListenerAdapter((javax.batch.api.chunk.listener.ChunkListener)listener);    chunkListeners.add(chunkListener);  }  if (listener instanceof ItemReadListener) {    ItemReadListener<I> readListener=(ItemReadListener<I>)listener;    readListeners.add(readListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemReadListener) {    ItemReadListener itemListener=new ItemReadListenerAdapter((javax.batch.api.chunk.listener.ItemReadListener)listener);    readListeners.add(itemListener);  }  if (listener instanceof ItemWriteListener) {    ItemWriteListener<O> writeListener=(ItemWriteListener<O>)listener;    writeListeners.add(writeListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemWriteListener) {    ItemWriteListener itemListener=new ItemWriteListenerAdapter((javax.batch.api.chunk.listener.ItemWriteListener)listener);    writeListeners.add(itemListener);  }  if (listener instanceof ItemProcessListener) {    ItemProcessListener<I,O> processListener=(ItemProcessListener<I,O>)listener;    processListeners.add(processListener);  }  if (listener instanceof javax.batch.api.chunk.listener.ItemProcessListener) {    ItemProcessListener itemListener=new ItemProcessListenerAdapter((javax.batch.api.chunk.listener.ItemProcessListener)listener);    processListeners.add(itemListener);  }} @AT@ 23150 @LENGTH@ 184
------INS InstanceofExpression@@listener instanceof SkipWriteListener @TO@ IfStatement@@if (listener instanceof SkipWriteListener) {  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @AT@ 23153 @LENGTH@ 37
---------INS SimpleName@@listener @TO@ InstanceofExpression@@listener instanceof SkipWriteListener @AT@ 23153 @LENGTH@ 8
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@listener instanceof SkipWriteListener @AT@ 23162 @LENGTH@ 10
---------INS SimpleType@@SkipWriteListener @TO@ InstanceofExpression@@listener instanceof SkipWriteListener @AT@ 23173 @LENGTH@ 17
------INS Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @TO@ IfStatement@@if (listener instanceof SkipWriteListener) {  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @AT@ 23192 @LENGTH@ 142
---------INS VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener); @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @AT@ 23198 @LENGTH@ 94
------------INS SimpleType@@SkipListener @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener); @AT@ 23198 @LENGTH@ 12
------------INS VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener) @TO@ VariableDeclarationStatement@@SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener); @AT@ 23211 @LENGTH@ 80
---------------INS SimpleName@@skipListener @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener) @AT@ 23211 @LENGTH@ 12
---------------INS ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @TO@ VariableDeclarationFragment@@skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener) @AT@ 23226 @LENGTH@ 65
------------------INS New@@new @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @AT@ 23226 @LENGTH@ 3
------------------INS SimpleType@@SkipListenerAdapter @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @AT@ 23230 @LENGTH@ 19
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @AT@ 23250 @LENGTH@ 4
------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @AT@ 23256 @LENGTH@ 4
------------------INS CastExpression@@(SkipWriteListener)listener @TO@ ClassInstanceCreation@@SkipListenerAdapter[null, null, (SkipWriteListener)listener] @AT@ 23262 @LENGTH@ 28
---------------------INS SimpleType@@SkipWriteListener @TO@ CastExpression@@(SkipWriteListener)listener @AT@ 23263 @LENGTH@ 17
---------------------INS SimpleName@@listener @TO@ CastExpression@@(SkipWriteListener)listener @AT@ 23282 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @TO@ Block@@ThenBody:{  SkipListener skipListener=new SkipListenerAdapter(null,null,(SkipWriteListener)listener);  skipListeners.add(skipListener);} @AT@ 23297 @LENGTH@ 32
------------INS MethodInvocation@@skipListeners.add(skipListener) @TO@ ExpressionStatement@@MethodInvocation:skipListeners.add(skipListener) @AT@ 23297 @LENGTH@ 31
---------------INS SimpleName@@Name:skipListeners @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 23297 @LENGTH@ 13
---------------INS SimpleName@@MethodName:add:[skipListener] @TO@ MethodInvocation@@skipListeners.add(skipListener) @AT@ 23311 @LENGTH@ 17
------------------INS SimpleName@@skipListener @TO@ SimpleName@@MethodName:add:[skipListener] @AT@ 23315 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:ParsingUtils.addBeanAliasAsMetadata(element,builder) @AT@ 1894 @LENGTH@ 54
---DEL MethodInvocation@@ParsingUtils.addBeanAliasAsMetadata(element,builder) @AT@ 1894 @LENGTH@ 53
------DEL SimpleName@@Name:ParsingUtils @AT@ 1894 @LENGTH@ 12
------DEL SimpleName@@MethodName:addBeanAliasAsMetadata:[element, builder] @AT@ 1907 @LENGTH@ 40
---------DEL SimpleName@@element @AT@ 1930 @LENGTH@ 7
---------DEL SimpleName@@builder @AT@ 1939 @LENGTH@ 7


INS MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 7004 @LENGTH@ 255
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7004 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7011 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 7011 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7015 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7023 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfiguration @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7031 @LENGTH@ 16
---INS SingleVariableDeclaration@@String pid @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7048 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String pid @AT@ 7048 @LENGTH@ 6
------INS SimpleName@@pid @TO@ SingleVariableDeclaration@@String pid @AT@ 7055 @LENGTH@ 3
---INS VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7070 @LENGTH@ 70
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @AT@ 7070 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7070 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7074 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 7082 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 7082 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7086 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 7094 @LENGTH@ 6
------INS VariableDeclarationFragment@@configurations=getConfigurations() @TO@ VariableDeclarationStatement@@Map<String,Map<String,String>> configurations=getConfigurations(); @AT@ 7103 @LENGTH@ 36
---------INS SimpleName@@configurations @TO@ VariableDeclarationFragment@@configurations=getConfigurations() @AT@ 7103 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:getConfigurations:[] @TO@ VariableDeclarationFragment@@configurations=getConfigurations() @AT@ 7120 @LENGTH@ 19
---INS IfStatement@@if (configurations != null) {  return configurations.get(pid);} @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7149 @LENGTH@ 83
------INS InfixExpression@@configurations != null @TO@ IfStatement@@if (configurations != null) {  return configurations.get(pid);} @AT@ 7153 @LENGTH@ 22
---------INS SimpleName@@configurations @TO@ InfixExpression@@configurations != null @AT@ 7153 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@configurations != null @AT@ 7167 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@configurations != null @AT@ 7171 @LENGTH@ 4
------INS Block@@ThenBody:{  return configurations.get(pid);} @TO@ IfStatement@@if (configurations != null) {  return configurations.get(pid);} @AT@ 7177 @LENGTH@ 55
---------INS ReturnStatement@@MethodInvocation:configurations.get(pid) @TO@ Block@@ThenBody:{  return configurations.get(pid);} @AT@ 7191 @LENGTH@ 31
------------INS MethodInvocation@@configurations.get(pid) @TO@ ReturnStatement@@MethodInvocation:configurations.get(pid) @AT@ 7198 @LENGTH@ 23
---------------INS SimpleName@@Name:configurations @TO@ MethodInvocation@@configurations.get(pid) @AT@ 7198 @LENGTH@ 14
---------------INS SimpleName@@MethodName:get:[pid] @TO@ MethodInvocation@@configurations.get(pid) @AT@ 7213 @LENGTH@ 8
------------------INS SimpleName@@pid @TO@ SimpleName@@MethodName:get:[pid] @AT@ 7217 @LENGTH@ 3
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getConfiguration, String pid,  @AT@ 7241 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 7248 @LENGTH@ 4


INS FieldDeclaration@@String, [someString] @TO@ TypeDeclaration@@WithDBRef,  @AT@ 14531 @LENGTH@ 18
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [someString] @AT@ 14531 @LENGTH@ 6
---INS VariableDeclarationFragment@@someString @TO@ FieldDeclaration@@String, [someString] @AT@ 14538 @LENGTH@ 10
------INS SimpleName@@someString @TO@ VariableDeclarationFragment@@someString @AT@ 14538 @LENGTH@ 10


INS MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @TO@ TypeDeclaration@@[public]StreamConsumer, DefaultConsumer[Runnable] @AT@ 8279 @LENGTH@ 249
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8279 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8287 @LENGTH@ 6
---INS SimpleName@@MethodName:readAhead @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8294 @LENGTH@ 9
---INS SingleVariableDeclaration@@BufferedReader br @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8304 @LENGTH@ 17
------INS SimpleType@@BufferedReader @TO@ SingleVariableDeclaration@@BufferedReader br @AT@ 8304 @LENGTH@ 14
------INS SimpleName@@br @TO@ SingleVariableDeclaration@@BufferedReader br @AT@ 8319 @LENGTH@ 2
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8330 @LENGTH@ 11
---INS IfStatement@@if (uri.equals("in")) {  return null;} else {  return br.readLine();} @TO@ MethodDeclaration@@private, String, MethodName:readAhead, BufferedReader br, IOException,  @AT@ 8352 @LENGTH@ 170
------INS MethodInvocation@@uri.equals("in") @TO@ IfStatement@@if (uri.equals("in")) {  return null;} else {  return br.readLine();} @AT@ 8356 @LENGTH@ 16
---------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.equals("in") @AT@ 8356 @LENGTH@ 3
---------INS SimpleName@@MethodName:equals:["in"] @TO@ MethodInvocation@@uri.equals("in") @AT@ 8360 @LENGTH@ 12
------------INS StringLiteral@@"in" @TO@ SimpleName@@MethodName:equals:["in"] @AT@ 8367 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (uri.equals("in")) {  return null;} else {  return br.readLine();} @AT@ 8374 @LENGTH@ 97
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 8449 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8456 @LENGTH@ 4
------INS Block@@ElseBody:{  return br.readLine();} @TO@ IfStatement@@if (uri.equals("in")) {  return null;} else {  return br.readLine();} @AT@ 8477 @LENGTH@ 45
---------INS ReturnStatement@@MethodInvocation:br.readLine() @TO@ Block@@ElseBody:{  return br.readLine();} @AT@ 8491 @LENGTH@ 21
------------INS MethodInvocation@@br.readLine() @TO@ ReturnStatement@@MethodInvocation:br.readLine() @AT@ 8498 @LENGTH@ 13
---------------INS SimpleName@@Name:br @TO@ MethodInvocation@@br.readLine() @AT@ 8498 @LENGTH@ 2
---------------INS SimpleName@@MethodName:readLine:[] @TO@ MethodInvocation@@br.readLine() @AT@ 8501 @LENGTH@ 10


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + SystemProperties.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),debugConfiguration("5005",false)} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + CreateEnsembleOptions.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182")} @AT@ 3725 @LENGTH@ 417
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + SystemProperties.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),debugConfiguration("5005",false)} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + CreateEnsembleOptions.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182")} @AT@ 3732 @LENGTH@ 409
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + SystemProperties.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),debugConfiguration("5005",false)} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + CreateEnsembleOptions.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182")} @AT@ 3744 @LENGTH@ 397
---------UPD ClassInstanceCreation@@VMOption["-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true"] @TO@ VMOption["-D" + CreateEnsembleOptions.ENSEMBLE_AUTOSTART + "=true"] @AT@ 3841 @LENGTH@ 66
------------UPD InfixExpression@@"-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true" @TO@ "-D" + CreateEnsembleOptions.ENSEMBLE_AUTOSTART + "=true" @AT@ 3854 @LENGTH@ 52
---------------UPD QualifiedName@@SystemProperties.ENSEMBLE_AUTOSTART @TO@ CreateEnsembleOptions.ENSEMBLE_AUTOSTART @AT@ 3861 @LENGTH@ 35
------------------UPD SimpleName@@SystemProperties @TO@ CreateEnsembleOptions @AT@ 3861 @LENGTH@ 16
---------UPD ClassInstanceCreation@@VMOption["-D" + SystemProperties.AGENT_AUTOSTART + "=false"] @TO@ VMOption["-D" + CreateEnsembleOptions.AGENT_AUTOSTART + "=false"] @AT@ 3925 @LENGTH@ 64
------------UPD InfixExpression@@"-D" + SystemProperties.AGENT_AUTOSTART + "=false" @TO@ "-D" + CreateEnsembleOptions.AGENT_AUTOSTART + "=false" @AT@ 3938 @LENGTH@ 50
---------------UPD QualifiedName@@SystemProperties.AGENT_AUTOSTART @TO@ CreateEnsembleOptions.AGENT_AUTOSTART @AT@ 3945 @LENGTH@ 32
------------------UPD SimpleName@@SystemProperties @TO@ CreateEnsembleOptions @AT@ 3945 @LENGTH@ 16
---------INS ClassInstanceCreation@@VMOption["-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182"] @TO@ ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ENSEMBLE_AUTOSTART + "=true"),new VMOption("-D" + SystemProperties.AGENT_AUTOSTART + "=false"),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_PORT + "=2182"),debugConfiguration("5005",false)} @AT@ 4059 @LENGTH@ 85
------------INS New@@new @TO@ ClassInstanceCreation@@VMOption["-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182"] @AT@ 4059 @LENGTH@ 3
------------INS SimpleType@@VMOption @TO@ ClassInstanceCreation@@VMOption["-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182"] @AT@ 4063 @LENGTH@ 8
------------INS InfixExpression@@"-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182" @TO@ ClassInstanceCreation@@VMOption["-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182"] @AT@ 4072 @LENGTH@ 71
---------------INS StringLiteral@@"-D" @TO@ InfixExpression@@"-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182" @AT@ 4072 @LENGTH@ 4
---------------INS Operator@@+ @TO@ InfixExpression@@"-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182" @AT@ 4076 @LENGTH@ 1
---------------INS QualifiedName@@CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT @TO@ InfixExpression@@"-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182" @AT@ 4079 @LENGTH@ 54
------------------INS SimpleName@@CreateEnsembleOptions @TO@ QualifiedName@@CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT @AT@ 4079 @LENGTH@ 21
------------------INS SimpleName@@ZOOKEEPER_SERVER_CONNECTION_PORT @TO@ QualifiedName@@CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT @AT@ 4101 @LENGTH@ 32
---------------INS StringLiteral@@"=2182" @TO@ InfixExpression@@"-D" + CreateEnsembleOptions.ZOOKEEPER_SERVER_CONNECTION_PORT + "=2182" @AT@ 4136 @LENGTH@ 7
---------DEL MethodInvocation@@debugConfiguration("5005",false) @AT@ 4099 @LENGTH@ 32
------------DEL SimpleName@@MethodName:debugConfiguration:["5005", false] @AT@ 4099 @LENGTH@ 32
---------------DEL StringLiteral@@"5005" @AT@ 4118 @LENGTH@ 6
---------------DEL BooleanLiteral@@false @AT@ 4125 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:brokerService.addConnector("stomp://localhost:61613?trace=true") @TO@ MethodInvocation:brokerService.addConnector("stomp://localhost:" + getPort() + "?trace=true") @AT@ 1304 @LENGTH@ 65
---UPD MethodInvocation@@brokerService.addConnector("stomp://localhost:61613?trace=true") @TO@ brokerService.addConnector("stomp://localhost:" + getPort() + "?trace=true") @AT@ 1304 @LENGTH@ 64
------UPD SimpleName@@MethodName:addConnector:["stomp://localhost:61613?trace=true"] @TO@ MethodName:addConnector:["stomp://localhost:" + getPort() + "?trace=true"] @AT@ 1318 @LENGTH@ 50
---------DEL StringLiteral@@"stomp://localhost:61613?trace=true" @AT@ 1331 @LENGTH@ 36
---------INS InfixExpression@@"stomp://localhost:" + getPort() + "?trace=true" @TO@ SimpleName@@MethodName:addConnector:["stomp://localhost:61613?trace=true"] @AT@ 1390 @LENGTH@ 48
------------INS StringLiteral@@"stomp://localhost:" @TO@ InfixExpression@@"stomp://localhost:" + getPort() + "?trace=true" @AT@ 1390 @LENGTH@ 20
------------INS Operator@@+ @TO@ InfixExpression@@"stomp://localhost:" + getPort() + "?trace=true" @AT@ 1410 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"stomp://localhost:" + getPort() + "?trace=true" @AT@ 1413 @LENGTH@ 9
------------INS StringLiteral@@"?trace=true" @TO@ InfixExpression@@"stomp://localhost:" + getPort() + "?trace=true" @AT@ 1425 @LENGTH@ 13


UPD TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  Container child1=fabricService.getContainer("child1");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));} @TO@ try {  System.err.println(executeCommand("admin:start child1"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT);  Container child1=fabricService.getContainer("child1");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));} @AT@ 2313 @LENGTH@ 759
---INS ExpressionStatement@@MethodInvocation:Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT) @TO@ TryStatement@@try {  System.err.println(executeCommand("admin:start child1"));  Thread.sleep(DEFAULT_TIMEOUT);  System.err.println(executeCommand("admin:list"));  String joinCommand="fabric:join -f --zookeeper-password " + fabricService.getZookeeperPassword() + " "+ fabricService.getZookeeperUrl();  System.err.println(executeCommand("ssh -l karaf -P karaf -p " + adminService.getInstance("child1").getSshPort() + " localhost "+ joinCommand));  Container child1=fabricService.getContainer("child1");  waitForProvisionSuccess(child1,PROVISION_TIMEOUT,TimeUnit.MILLISECONDS);  System.err.println(executeCommand("fabric:container-list"));}  finally {  System.err.println(executeCommand("admin:stop child1"));} @AT@ 2892 @LENGTH@ 70
------INS MethodInvocation@@Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT) @TO@ ExpressionStatement@@MethodInvocation:Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT) @AT@ 2892 @LENGTH@ 69
---------INS SimpleName@@Name:Provision @TO@ MethodInvocation@@Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT) @AT@ 2892 @LENGTH@ 9
---------INS SimpleName@@MethodName:containersExist:[Arrays.asList("child1"), PROVISION_TIMEOUT] @TO@ MethodInvocation@@Provision.containersExist(Arrays.asList("child1"),PROVISION_TIMEOUT) @AT@ 2902 @LENGTH@ 59
------------INS MethodInvocation@@Arrays.asList("child1") @TO@ SimpleName@@MethodName:containersExist:[Arrays.asList("child1"), PROVISION_TIMEOUT] @AT@ 2918 @LENGTH@ 23
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("child1") @AT@ 2918 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["child1"] @TO@ MethodInvocation@@Arrays.asList("child1") @AT@ 2925 @LENGTH@ 16
------------------INS StringLiteral@@"child1" @TO@ SimpleName@@MethodName:asList:["child1"] @AT@ 2932 @LENGTH@ 8
------------INS SimpleName@@PROVISION_TIMEOUT @TO@ SimpleName@@MethodName:containersExist:[Arrays.asList("child1"), PROVISION_TIMEOUT] @AT@ 2943 @LENGTH@ 17


UPD IfStatement@@if (files == null) {  return;} @TO@ if (files != null) {  for (  File f : files) {    recursiveDelete(f);  }} @AT@ 7486 @LENGTH@ 49
---UPD InfixExpression@@files == null @TO@ files != null @AT@ 7490 @LENGTH@ 13
------UPD Operator@@== @TO@ != @AT@ 7495 @LENGTH@ 2
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  for (  File f : files) {    recursiveDelete(f);  }} @AT@ 7504 @LENGTH@ 31
------DEL ReturnStatement@@ @AT@ 7518 @LENGTH@ 7
------MOV EnhancedForStatement@@for (File f : files) {  recursiveDelete(f);} @TO@ Block@@ThenBody:{  return;} @AT@ 7544 @LENGTH@ 63


UPD VariableDeclarationStatement@@Long timeInNanoSec=(t.getTime() * 1000000) + t.getNanos(); @TO@ Long timeInNanoSec=(t.getTime() * 1000000) + (t.getNanos() % 1000000); @AT@ 5606 @LENGTH@ 60
---UPD VariableDeclarationFragment@@timeInNanoSec=(t.getTime() * 1000000) + t.getNanos() @TO@ timeInNanoSec=(t.getTime() * 1000000) + (t.getNanos() % 1000000) @AT@ 5611 @LENGTH@ 54
------UPD InfixExpression@@(t.getTime() * 1000000) + t.getNanos() @TO@ (t.getTime() * 1000000) + (t.getNanos() % 1000000) @AT@ 5627 @LENGTH@ 38
---------INS ParenthesizedExpression@@(t.getNanos() % 1000000) @TO@ InfixExpression@@(t.getTime() * 1000000) + t.getNanos() @AT@ 5803 @LENGTH@ 24
------------INS InfixExpression@@t.getNanos() % 1000000 @TO@ ParenthesizedExpression@@(t.getNanos() % 1000000) @AT@ 5804 @LENGTH@ 22
---------------MOV MethodInvocation@@t.getNanos() @TO@ InfixExpression@@t.getNanos() % 1000000 @AT@ 5653 @LENGTH@ 12
---------------INS Operator@@% @TO@ InfixExpression@@t.getNanos() % 1000000 @AT@ 5816 @LENGTH@ 1
---------------INS NumberLiteral@@1000000 @TO@ InfixExpression@@t.getNanos() % 1000000 @AT@ 5819 @LENGTH@ 7


UPD VariableDeclarationStatement@@final File patches=new File(getBundleRepositoryRoot(),patchId); @TO@ final File patches=new File(getBundleRepositoryRoot(),PATCHES); @AT@ 2338 @LENGTH@ 66
---UPD VariableDeclarationFragment@@patches=new File(getBundleRepositoryRoot(),patchId) @TO@ patches=new File(getBundleRepositoryRoot(),PATCHES) @AT@ 2349 @LENGTH@ 54
------UPD ClassInstanceCreation@@File[getBundleRepositoryRoot(), patchId] @TO@ File[getBundleRepositoryRoot(), PATCHES] @AT@ 2359 @LENGTH@ 44
---------UPD SimpleName@@patchId @TO@ PATCHES @AT@ 2395 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue("Event listeners were cloned",cc2.getConfigurationListeners().isEmpty()) @TO@ MethodInvocation:assertTrue("Found duplicate event listeners",Collections.disjoint(cc2.getConfigurationListeners(),config.getConfigurationListeners())) @AT@ 13675 @LENGTH@ 102
---UPD MethodInvocation@@assertTrue("Event listeners were cloned",cc2.getConfigurationListeners().isEmpty()) @TO@ assertTrue("Found duplicate event listeners",Collections.disjoint(cc2.getConfigurationListeners(),config.getConfigurationListeners())) @AT@ 13675 @LENGTH@ 101
------UPD SimpleName@@MethodName:assertTrue:["Event listeners were cloned", cc2.getConfigurationListeners().isEmpty()] @TO@ MethodName:assertTrue:["Found duplicate event listeners", Collections.disjoint(cc2.getConfigurationListeners(),config.getConfigurationListeners())] @AT@ 13675 @LENGTH@ 101
---------UPD StringLiteral@@"Event listeners were cloned" @TO@ "Found duplicate event listeners" @AT@ 13686 @LENGTH@ 29
---------UPD MethodInvocation@@cc2.getConfigurationListeners().isEmpty() @TO@ Collections.disjoint(cc2.getConfigurationListeners(),config.getConfigurationListeners()) @AT@ 13717 @LENGTH@ 58
------------DEL MethodInvocation@@MethodName:getConfigurationListeners:[] @AT@ 13717 @LENGTH@ 48
------------UPD SimpleName@@Name:cc2 @TO@ Name:Collections @AT@ 13717 @LENGTH@ 3
------------INS SimpleName@@MethodName:disjoint:[cc2.getConfigurationListeners(), config.getConfigurationListeners()] @TO@ MethodInvocation@@cc2.getConfigurationListeners().isEmpty() @AT@ 13763 @LENGTH@ 94
---------------INS MethodInvocation@@cc2.getConfigurationListeners() @TO@ SimpleName@@MethodName:disjoint:[cc2.getConfigurationListeners(), config.getConfigurationListeners()] @AT@ 13772 @LENGTH@ 48
------------------INS SimpleName@@Name:cc2 @TO@ MethodInvocation@@cc2.getConfigurationListeners() @AT@ 13772 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getConfigurationListeners:[] @TO@ MethodInvocation@@cc2.getConfigurationListeners() @AT@ 13793 @LENGTH@ 27
---------------INS MethodInvocation@@config.getConfigurationListeners() @TO@ SimpleName@@MethodName:disjoint:[cc2.getConfigurationListeners(), config.getConfigurationListeners()] @AT@ 13822 @LENGTH@ 34
------------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@config.getConfigurationListeners() @AT@ 13766 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@config.getConfigurationListeners() @AT@ 13766 @LENGTH@ 9
------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getConfigurationListeners() @AT@ 13822 @LENGTH@ 6
------------UPD SimpleName@@MethodName:isEmpty:[] @TO@ MethodName:getConfigurationListeners:[] @AT@ 13766 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Assert.hasText(field,"Field must not be null or empty!") @TO@ MethodInvocation:Assert.hasText(field,"DocumentField must not be null or empty!") @AT@ 2224 @LENGTH@ 58
---UPD MethodInvocation@@Assert.hasText(field,"Field must not be null or empty!") @TO@ Assert.hasText(field,"DocumentField must not be null or empty!") @AT@ 2224 @LENGTH@ 57
------UPD SimpleName@@MethodName:hasText:[field, "Field must not be null or empty!"] @TO@ MethodName:hasText:[field, "DocumentField must not be null or empty!"] @AT@ 2231 @LENGTH@ 50
---------UPD StringLiteral@@"Field must not be null or empty!" @TO@ "DocumentField must not be null or empty!" @AT@ 2246 @LENGTH@ 34


UPD TypeDeclaration@@[@ContextConfiguration, public]FabricEndpointTest, AbstractJUnit4SpringContextTests @TO@ [@ContextConfiguration, @Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]FabricEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1243 @LENGTH@ 1619
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @TO@ TypeDeclaration@@[@ContextConfiguration, public]FabricEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1290 @LENGTH@ 53


UPD VariableDeclarationStatement@@StatisticsEndpoint answer=new StatisticsEndpoint(uri,this,getOrCreateQueue(uri,size),consumers); @TO@ StatisticsEndpoint answer=new StatisticsEndpoint(uri,this,null,consumers); @AT@ 2370 @LENGTH@ 102
---UPD VariableDeclarationFragment@@answer=new StatisticsEndpoint(uri,this,getOrCreateQueue(uri,size),consumers) @TO@ answer=new StatisticsEndpoint(uri,this,null,consumers) @AT@ 2389 @LENGTH@ 82
------UPD ClassInstanceCreation@@StatisticsEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @TO@ StatisticsEndpoint[uri, this, null, consumers] @AT@ 2398 @LENGTH@ 73
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@StatisticsEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @AT@ 2428 @LENGTH@ 4
---------DEL MethodInvocation@@getOrCreateQueue(uri,size) @AT@ 2432 @LENGTH@ 27
------------DEL SimpleName@@MethodName:getOrCreateQueue:[uri, size] @AT@ 2432 @LENGTH@ 27
---------------DEL SimpleName@@uri @AT@ 2449 @LENGTH@ 3
---------------DEL SimpleName@@size @AT@ 2454 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:checkRenamingStrategy,  @TO@ TypeDeclaration@@[public]ContextSourceTransactionManagerDelegate, AbstractCompensatingTransactionManagerDelegate @AT@ 5292 @LENGTH@ 355
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:checkRenamingStrategy,  @AT@ 5287 @LENGTH@ 4
---INS SimpleName@@MethodName:checkRenamingStrategy @TO@ MethodDeclaration@@void, MethodName:checkRenamingStrategy,  @AT@ 5292 @LENGTH@ 21
---INS IfStatement@@if (renamingStrategy instanceof DefaultTempEntryRenamingStrategy) {  log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.");} @TO@ MethodDeclaration@@void, MethodName:checkRenamingStrategy,  @AT@ 5327 @LENGTH@ 313
------INS InstanceofExpression@@renamingStrategy instanceof DefaultTempEntryRenamingStrategy @TO@ IfStatement@@if (renamingStrategy instanceof DefaultTempEntryRenamingStrategy) {  log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.");} @AT@ 5330 @LENGTH@ 60
---------INS SimpleName@@renamingStrategy @TO@ InstanceofExpression@@renamingStrategy instanceof DefaultTempEntryRenamingStrategy @AT@ 5330 @LENGTH@ 16
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@renamingStrategy instanceof DefaultTempEntryRenamingStrategy @AT@ 5347 @LENGTH@ 10
---------INS SimpleType@@DefaultTempEntryRenamingStrategy @TO@ InstanceofExpression@@renamingStrategy instanceof DefaultTempEntryRenamingStrategy @AT@ 5358 @LENGTH@ 32
------INS Block@@ThenBody:{  log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.");} @TO@ IfStatement@@if (renamingStrategy instanceof DefaultTempEntryRenamingStrategy) {  log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.");} @AT@ 5392 @LENGTH@ 248
---------INS ExpressionStatement@@MethodInvocation:log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.") @TO@ Block@@ThenBody:{  log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.");} @AT@ 5407 @LENGTH@ 222
------------INS MethodInvocation@@log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.") @TO@ ExpressionStatement@@MethodInvocation:log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.") @AT@ 5407 @LENGTH@ 221
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.") @AT@ 5407 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy."] @TO@ MethodInvocation@@log.warn("Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy.") @AT@ 5411 @LENGTH@ 217
------------------INS InfixExpression@@"Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy." @TO@ SimpleName@@MethodName:warn:["Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy."] @AT@ 5416 @LENGTH@ 211
---------------------INS StringLiteral@@"Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " @TO@ InfixExpression@@"Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy." @AT@ 5416 @LENGTH@ 84
---------------------INS Operator@@+ @TO@ InfixExpression@@"Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy." @AT@ 5500 @LENGTH@ 1
---------------------INS StringLiteral@@"see reference documentation for additional information on how to configure TempEntryRenamingStrategy." @TO@ InfixExpression@@"Using DefaultTempEntryRenamingStrategy. This is not advised for more complex use; " + "see reference documentation for additional information on how to configure TempEntryRenamingStrategy." @AT@ 5524 @LENGTH@ 103


UPD IfStatement@@if (!fileStatus.isDirectory()) {  if (log.isWarnEnabled()) {    log.warn("Skipping [" + rootDir.toUri().getPath() + "] because it does not denote a directory");  }  return Collections.emptySet();} @TO@ if (!fileStatus.isDir()) {  if (log.isWarnEnabled()) {    log.warn("Skipping [" + rootDir.toUri().getPath() + "] because it does not denote a directory");  }  return Collections.emptySet();} @AT@ 11391 @LENGTH@ 262
---UPD PrefixExpression@@!fileStatus.isDirectory() @TO@ !fileStatus.isDir() @AT@ 11395 @LENGTH@ 25
------UPD MethodInvocation@@fileStatus.isDirectory() @TO@ fileStatus.isDir() @AT@ 11396 @LENGTH@ 24
---------UPD SimpleName@@MethodName:isDirectory:[] @TO@ MethodName:isDir:[] @AT@ 11407 @LENGTH@ 13


UPD Block@@ElseBody:if (source != null) {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @TO@ ElseBody:if (source != null) {  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @AT@ 21687 @LENGTH@ 520
---UPD IfStatement@@if (source != null) {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @TO@ if (source != null) {  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @AT@ 21687 @LENGTH@ 520
------UPD Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ ElseBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------INS Block@@ThenBody:{  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} @TO@ IfStatement@@if (source != null) {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @AT@ 21746 @LENGTH@ 459
---------INS IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ Block@@ThenBody:{  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} @AT@ 21760 @LENGTH@ 435
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------INS InstanceofExpression@@source instanceof StaticService @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21764 @LENGTH@ 31
---------------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21764 @LENGTH@ 6
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21771 @LENGTH@ 10
---------------INS SimpleType@@StaticService @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21782 @LENGTH@ 13
------------INS Block@@ThenBody:{  id=source.getClass().getSimpleName();} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21797 @LENGTH@ 147
---------------INS ExpressionStatement@@Assignment:id=source.getClass().getSimpleName() @TO@ Block@@ThenBody:{  id=source.getClass().getSimpleName();} @AT@ 21891 @LENGTH@ 39
------------------INS Assignment@@id=source.getClass().getSimpleName() @TO@ ExpressionStatement@@Assignment:id=source.getClass().getSimpleName() @AT@ 21891 @LENGTH@ 38
---------------------INS SimpleName@@id @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21891 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21893 @LENGTH@ 1
---------------------INS MethodInvocation@@source.getClass().getSimpleName() @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 17
------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21914 @LENGTH@ 15
---UPD IfStatement@@if (source != null) {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @TO@ if (source != null) {  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @AT@ 21687 @LENGTH@ 520
------UPD Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ ElseBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------INS Block@@ThenBody:{  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} @TO@ IfStatement@@if (source != null) {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} else {  id=executorService.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(executorService)+ ")";} @AT@ 21746 @LENGTH@ 459
---------INS IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ Block@@ThenBody:{  if (source instanceof StaticService) {    id=source.getClass().getSimpleName();  } else {    id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";  }} @AT@ 21760 @LENGTH@ 435
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------MOV Block@@ThenBody:{  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21707 @LENGTH@ 233
------------INS InstanceofExpression@@source instanceof StaticService @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21764 @LENGTH@ 31
---------------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21764 @LENGTH@ 6
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21771 @LENGTH@ 10
---------------INS SimpleType@@StaticService @TO@ InstanceofExpression@@source instanceof StaticService @AT@ 21782 @LENGTH@ 13
------------INS Block@@ThenBody:{  id=source.getClass().getSimpleName();} @TO@ IfStatement@@if (source instanceof StaticService) {  id=source.getClass().getSimpleName();} else {  id=source.getClass().getSimpleName() + "(" + ObjectHelper.getIdentityHashCode(source)+ ")";} @AT@ 21797 @LENGTH@ 147
---------------INS ExpressionStatement@@Assignment:id=source.getClass().getSimpleName() @TO@ Block@@ThenBody:{  id=source.getClass().getSimpleName();} @AT@ 21891 @LENGTH@ 39
------------------INS Assignment@@id=source.getClass().getSimpleName() @TO@ ExpressionStatement@@Assignment:id=source.getClass().getSimpleName() @AT@ 21891 @LENGTH@ 38
---------------------INS SimpleName@@id @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21891 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21893 @LENGTH@ 1
---------------------INS MethodInvocation@@source.getClass().getSimpleName() @TO@ Assignment@@id=source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 17
------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21896 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@source.getClass().getSimpleName() @AT@ 21914 @LENGTH@ 15


UPD VariableDeclarationStatement@@ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end(); @TO@ ResourceTransformationDescriptionBuilder builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.ALWAYS,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end(); @AT@ 16079 @LENGTH@ 2116
---UPD VariableDeclarationFragment@@builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end() @TO@ builder=TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.ALWAYS,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end() @AT@ 16120 @LENGTH@ 2074
------UPD MethodInvocation@@TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end() @TO@ TransformationDescriptionBuilder.Factory.createSubsystemInstance().getAttributeBuilder().addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS,EJB3SubsystemRootResourceDefinition.ENABLE_STATISTICS).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).addRejectCheck(RejectAttributeChecker.DEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker(){
  @Override public String getRejectionLogMessage(  Map<String,ModelNode> attributes){
    return EjbMessages.MESSAGES.rejectTransformationDefinedDefaultMissingMethodPermissionsDenyAccess();
  }
  @Override protected boolean rejectAttribute(  PathAddress address,  String attributeName,  ModelNode attributeValue,  TransformationContext context){
    return attributeValue.isDefined() && attributeValue.asBoolean();
  }
}
,EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SECURITY_DOMAIN).setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_PASSIVATION_DISABLED_CACHE).setDiscard(DiscardAttributeChecker.ALWAYS,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS).setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(new ModelNode(false)),EJB3SubsystemRootResourceDefinition.DEFAULT_MISSING_METHOD_PERMISSIONS_DENY_ACCESS).end() @AT@ 16130 @LENGTH@ 2064
---------UPD MethodInvocation@@MethodName:setDiscard:[DiscardAttributeChecker.UNDEFINED, EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS] @TO@ MethodName:setDiscard:[DiscardAttributeChecker.ALWAYS, EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS] @AT@ 16130 @LENGTH@ 1849
------------UPD QualifiedName@@DiscardAttributeChecker.UNDEFINED @TO@ DiscardAttributeChecker.ALWAYS @AT@ 17876 @LENGTH@ 33
---------------UPD SimpleName@@UNDEFINED @TO@ ALWAYS @AT@ 17900 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:transMap.putIfAbsent(trans,new TUGIContainingTransport(trans)) @AT@ 3004 @LENGTH@ 64
---DEL MethodInvocation@@transMap.putIfAbsent(trans,new TUGIContainingTransport(trans)) @AT@ 3004 @LENGTH@ 63
------DEL SimpleName@@Name:transMap @AT@ 3004 @LENGTH@ 8
------DEL SimpleName@@MethodName:putIfAbsent:[trans, new TUGIContainingTransport(trans)] @AT@ 3013 @LENGTH@ 54
---------DEL SimpleName@@trans @AT@ 3025 @LENGTH@ 5
---------DEL ClassInstanceCreation@@TUGIContainingTransport[trans] @AT@ 3032 @LENGTH@ 34
------------DEL New@@new @AT@ 3032 @LENGTH@ 3
------------DEL SimpleType@@TUGIContainingTransport @AT@ 3036 @LENGTH@ 23
------------DEL SimpleName@@trans @AT@ 3060 @LENGTH@ 5


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ProfileEditTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ProfileEditTest, FabricTestSupport @AT@ 1301 @LENGTH@ 5038
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ProfileEditTest, FabricTestSupport @AT@ 1421 @LENGTH@ 49


UPD IfStatement@@if (type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @TO@ if (type != null && type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @AT@ 5887 @LENGTH@ 104
---INS InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @TO@ IfStatement@@if (type.equals(dataStorePlugin.getName())) {  updateServiceRegistration();} @AT@ 5891 @LENGTH@ 54
------MOV MethodInvocation@@type.equals(dataStorePlugin.getName()) @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 5891 @LENGTH@ 38
------INS InfixExpression@@type != null @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 5891 @LENGTH@ 12
---------INS SimpleName@@type @TO@ InfixExpression@@type != null @AT@ 5891 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@type != null @AT@ 5895 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@type != null @AT@ 5899 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@type != null && type.equals(dataStorePlugin.getName()) @AT@ 5903 @LENGTH@ 2


UPD VariableDeclarationStatement@@final File patches=new File(getBundleRepositoryRoot(),patchId); @TO@ final File patches=new File(getBundleRepositoryRoot(),PATCHES); @AT@ 2338 @LENGTH@ 66
---UPD VariableDeclarationFragment@@patches=new File(getBundleRepositoryRoot(),patchId) @TO@ patches=new File(getBundleRepositoryRoot(),PATCHES) @AT@ 2349 @LENGTH@ 54
------UPD ClassInstanceCreation@@File[getBundleRepositoryRoot(), patchId] @TO@ File[getBundleRepositoryRoot(), PATCHES] @AT@ 2359 @LENGTH@ 44
---------UPD SimpleName@@patchId @TO@ PATCHES @AT@ 2395 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:headerToJmsPropertyFallback,  @AT@ 4757 @LENGTH@ 214
---DEL Modifier@@public @AT@ 4757 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4764 @LENGTH@ 4
---DEL SimpleName@@MethodName:headerToJmsPropertyFallback @AT@ 4769 @LENGTH@ 27
---DEL VariableDeclarationStatement@@String expected="SOAPJMS_fooBarBaz"; @AT@ 4809 @LENGTH@ 38
------DEL SimpleType@@String @AT@ 4809 @LENGTH@ 6
------DEL VariableDeclarationFragment@@expected="SOAPJMS_fooBarBaz" @AT@ 4816 @LENGTH@ 30
---------DEL SimpleName@@expected @AT@ 4816 @LENGTH@ 8
---------DEL StringLiteral@@"SOAPJMS_fooBarBaz" @AT@ 4827 @LENGTH@ 19
---DEL VariableDeclarationStatement@@String result=JmsTransportUtils.headerToJmsProperty("Foo-Bar-Baz"); @AT@ 4856 @LENGTH@ 69
------DEL SimpleType@@String @AT@ 4856 @LENGTH@ 6
------DEL VariableDeclarationFragment@@result=JmsTransportUtils.headerToJmsProperty("Foo-Bar-Baz") @AT@ 4863 @LENGTH@ 61
---------DEL SimpleName@@result @AT@ 4863 @LENGTH@ 6
---------DEL MethodInvocation@@JmsTransportUtils.headerToJmsProperty("Foo-Bar-Baz") @AT@ 4872 @LENGTH@ 52
------------DEL SimpleName@@Name:JmsTransportUtils @AT@ 4872 @LENGTH@ 17
------------DEL SimpleName@@MethodName:headerToJmsProperty:["Foo-Bar-Baz"] @AT@ 4890 @LENGTH@ 34
---------------DEL StringLiteral@@"Foo-Bar-Baz" @AT@ 4910 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertEquals(expected,result) @AT@ 4934 @LENGTH@ 31
------DEL MethodInvocation@@assertEquals(expected,result) @AT@ 4934 @LENGTH@ 30
---------DEL SimpleName@@MethodName:assertEquals:[expected, result] @AT@ 4934 @LENGTH@ 30
------------DEL SimpleName@@expected @AT@ 4947 @LENGTH@ 8
------------DEL SimpleName@@result @AT@ 4957 @LENGTH@ 6


UPD TryStatement@@try {  URL url=new URL(urlText);  Handler<AsyncResult<NetSocket>> handler=new Handler<AsyncResult<NetSocket>>(){    public void handle(    final AsyncResult<NetSocket> asyncSocket){      NetSocket clientSocket=asyncSocket.result();      Pump.createPump(clientSocket,socket).start();      Pump.createPump(socket,clientSocket).start();    }  };  client=createClient(url,handler);} catch (MalformedURLException e) {  LOG.warn("Failed to parse URL: " + urlText + ". "+ e,e);} @TO@ try {  URL url=new URL(urlText);  Handler<AsyncResult<NetSocket>> handler=new Handler<AsyncResult<NetSocket>>(){    public void handle(    final AsyncResult<NetSocket> asyncSocket){      NetSocket clientSocket=asyncSocket.result();      Pump.createPump(clientSocket,socket).start();      Pump.createPump(socket,clientSocket).start();    }  };  client=createClient(url,handler);  System.out.println("Created client " + client);} catch (MalformedURLException e) {  LOG.warn("Failed to parse URL: " + urlText + ". "+ e,e);} @AT@ 2780 @LENGTH@ 866
---INS ExpressionStatement@@MethodInvocation:System.out.println("Created client " + client) @TO@ TryStatement@@try {  URL url=new URL(urlText);  Handler<AsyncResult<NetSocket>> handler=new Handler<AsyncResult<NetSocket>>(){    public void handle(    final AsyncResult<NetSocket> asyncSocket){      NetSocket clientSocket=asyncSocket.result();      Pump.createPump(clientSocket,socket).start();      Pump.createPump(socket,clientSocket).start();    }  };  client=createClient(url,handler);} catch (MalformedURLException e) {  LOG.warn("Failed to parse URL: " + urlText + ". "+ e,e);} @AT@ 3494 @LENGTH@ 47
------INS MethodInvocation@@System.out.println("Created client " + client) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("Created client " + client) @AT@ 3494 @LENGTH@ 46
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("Created client " + client) @AT@ 3494 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["Created client " + client] @TO@ MethodInvocation@@System.out.println("Created client " + client) @AT@ 3505 @LENGTH@ 35
------------INS InfixExpression@@"Created client " + client @TO@ SimpleName@@MethodName:println:["Created client " + client] @AT@ 3513 @LENGTH@ 26
---------------INS StringLiteral@@"Created client " @TO@ InfixExpression@@"Created client " + client @AT@ 3513 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Created client " + client @AT@ 3530 @LENGTH@ 1
---------------INS SimpleName@@client @TO@ InfixExpression@@"Created client " + client @AT@ 3533 @LENGTH@ 6


DEL MethodDeclaration@@public, void, MethodName:init,  @AT@ 1933 @LENGTH@ 26
---DEL Modifier@@public @AT@ 1933 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1940 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 1945 @LENGTH@ 4


INS MethodDeclaration@@public, boolean, MethodName:exists,  @TO@ TypeDeclaration@@[public]ProfileFacade, [Profile, HasId] @AT@ 6991 @LENGTH@ 118
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:exists,  @AT@ 6991 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:exists,  @AT@ 6998 @LENGTH@ 7
---INS SimpleName@@MethodName:exists @TO@ MethodDeclaration@@public, boolean, MethodName:exists,  @AT@ 7006 @LENGTH@ 6
---INS ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @TO@ MethodDeclaration@@public, boolean, MethodName:exists,  @AT@ 7025 @LENGTH@ 78
------INS ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @TO@ ThrowStatement@@ClassInstanceCreation:new UnsupportedOperationException("The method is not yet implemented.") @AT@ 7031 @LENGTH@ 71
---------INS New@@new @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 7031 @LENGTH@ 3
---------INS SimpleType@@UnsupportedOperationException @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 7035 @LENGTH@ 29
---------INS StringLiteral@@"The method is not yet implemented." @TO@ ClassInstanceCreation@@UnsupportedOperationException["The method is not yet implemented."] @AT@ 7065 @LENGTH@ 36


UPD VariableDeclarationStatement@@String httpUrl=getSshUrl(name,httpPort); @TO@ String httpUrl=getHttpUrl(name,httpPort); @AT@ 23126 @LENGTH@ 43
---UPD VariableDeclarationFragment@@httpUrl=getSshUrl(name,httpPort) @TO@ httpUrl=getHttpUrl(name,httpPort) @AT@ 23133 @LENGTH@ 35
------UPD MethodInvocation@@getSshUrl(name,httpPort) @TO@ getHttpUrl(name,httpPort) @AT@ 23143 @LENGTH@ 25
---------UPD SimpleName@@MethodName:getSshUrl:[name, httpPort] @TO@ MethodName:getHttpUrl:[name, httpPort] @AT@ 23143 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[public]SrpConnectionPipelineTxIntegrationTests, SrpConnectionTransactionIntegrationTests @AT@ 3266 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3266 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3273 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3278 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3306 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 3306 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 3312 @LENGTH@ 21


UPD IfStatement@@if (TestSupport.isPlatform("windows")) return; @TO@ if (isPlatform("windows")) {  return;} @AT@ 1553 @LENGTH@ 57
---UPD MethodInvocation@@TestSupport.isPlatform("windows") @TO@ isPlatform("windows") @AT@ 1556 @LENGTH@ 33
------DEL SimpleName@@Name:TestSupport @AT@ 1556 @LENGTH@ 11
---UPD Block@@ThenBody:return; @TO@ ThenBody:{  return;} @AT@ 1603 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:properties.putAll(getJobProperties()) @TO@ MethodDeclaration@@public, Properties, MethodName:getStepArtifactProperties, String stepName, String artifactName,  @AT@ 3600 @LENGTH@ 38
---INS MethodInvocation@@properties.putAll(getJobProperties()) @TO@ ExpressionStatement@@MethodInvocation:properties.putAll(getJobProperties()) @AT@ 3600 @LENGTH@ 37
------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.putAll(getJobProperties()) @AT@ 3600 @LENGTH@ 10
------INS SimpleName@@MethodName:putAll:[getJobProperties()] @TO@ MethodInvocation@@properties.putAll(getJobProperties()) @AT@ 3611 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getJobProperties:[] @TO@ SimpleName@@MethodName:putAll:[getJobProperties()] @AT@ 3618 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 29836 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 29836 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 29843 @LENGTH@ 4
---INS SimpleName@@MethodName:invokesQueryWithVarargsParametersCorrectly @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 29848 @LENGTH@ 42
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 29900 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 29900 @LENGTH@ 16
---INS VariableDeclarationStatement@@Collection<User> result=repository.findByIdIn(firstUser.getId(),secondUser.getId()); @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 29923 @LENGTH@ 87
------INS ParameterizedType@@Collection<User> @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdIn(firstUser.getId(),secondUser.getId()); @AT@ 29923 @LENGTH@ 16
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 29923 @LENGTH@ 10
---------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 29934 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findByIdIn(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationStatement@@Collection<User> result=repository.findByIdIn(firstUser.getId(),secondUser.getId()); @AT@ 29940 @LENGTH@ 69
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByIdIn(firstUser.getId(),secondUser.getId()) @AT@ 29940 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByIdIn(firstUser.getId(),secondUser.getId()) @TO@ VariableDeclarationFragment@@result=repository.findByIdIn(firstUser.getId(),secondUser.getId()) @AT@ 29949 @LENGTH@ 60
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByIdIn(firstUser.getId(),secondUser.getId()) @AT@ 29949 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByIdIn:[firstUser.getId(), secondUser.getId()] @TO@ MethodInvocation@@repository.findByIdIn(firstUser.getId(),secondUser.getId()) @AT@ 29960 @LENGTH@ 49
---------------INS MethodInvocation@@firstUser.getId() @TO@ SimpleName@@MethodName:findByIdIn:[firstUser.getId(), secondUser.getId()] @AT@ 29971 @LENGTH@ 17
------------------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getId() @AT@ 29971 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@firstUser.getId() @AT@ 29981 @LENGTH@ 7
---------------INS MethodInvocation@@secondUser.getId() @TO@ SimpleName@@MethodName:findByIdIn:[firstUser.getId(), secondUser.getId()] @AT@ 29990 @LENGTH@ 18
------------------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getId() @AT@ 29990 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@secondUser.getId() @AT@ 30001 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 30016 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(2)) @AT@ 30016 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(2)] @TO@ MethodInvocation@@assertThat(result,hasSize(2)) @AT@ 30016 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 30027 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(2) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(2)] @AT@ 30035 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 30035 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 30043 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@hasSize(2) @AT@ 30035 @LENGTH@ 10
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 30043 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:invokesQueryWithVarargsParametersCorrectly,  @AT@ 30051 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 30051 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 30051 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 30062 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 30070 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 30070 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 30079 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 30090 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 30070 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 30079 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 30090 @LENGTH@ 10


UPD MethodDeclaration@@public, static, JMXSubsystemRootResource, MethodName:create, AuditLogger auditLogger,  @TO@ public, static, JMXSubsystemRootResource, MethodName:create, ManagedAuditLogger auditLogger,  @AT@ 3545 @LENGTH@ 157
---UPD SingleVariableDeclaration@@AuditLogger auditLogger @TO@ ManagedAuditLogger auditLogger @AT@ 3591 @LENGTH@ 23
------UPD SimpleType@@AuditLogger @TO@ ManagedAuditLogger @AT@ 3591 @LENGTH@ 11


UPD TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes={RepositoryRestMvcConfiguration.class,JpaRepositoryConfig.class}), public]AbstractControllerIntegrationTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes={RepositoryRestMvcConfiguration.class}), public, abstract]AbstractControllerIntegrationTests,  @AT@ 1831 @LENGTH@ 1444
---UPD NormalAnnotation@@@ContextConfiguration(classes={RepositoryRestMvcConfiguration.class,JpaRepositoryConfig.class}) @TO@ @ContextConfiguration(classes={RepositoryRestMvcConfiguration.class}) @AT@ 1871 @LENGTH@ 100
---INS Modifier@@abstract @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes={RepositoryRestMvcConfiguration.class,JpaRepositoryConfig.class}), public]AbstractControllerIntegrationTests,  @AT@ 1883 @LENGTH@ 8


UPD TryStatement@@try {  Hashtable<String,Object> properties;  String version=ZkDefs.DEFAULT_VERSION;  String karafName=System.getProperty(SystemProperties.KARAF_NAME);  int minimumPort=options.getMinimumPort();  int maximumPort=options.getMaximumPort();  String zooKeeperServerHost=options.getBindAddress();  int zooKeeperServerPort=options.getZooKeeperServerPort();  int zooKeeperServerConnectionPort=options.getZooKeeperServerConnectionPort();  int mappedPort=mapPortToRange(zooKeeperServerPort,minimumPort,maximumPort);  String connectionUrl=getConnectionAddress() + ":" + zooKeeperServerConnectionPort;  createZooKeeeperServerConfig(zooKeeperServerHost,mappedPort,options);  CuratorFramework curator=createCuratorFramework(connectionUrl,options);  curator.start();  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  ConfiguredDataStoreFactory dataStoreFactory=new ConfiguredDataStoreFactory();  dataStoreFactory.setCurator(curator);  DataStore dataStore=dataStoreFactory.createDataStore();  if (options.isAutoImportEnabled()) {    ZookeeperImportUtils.importFromFileSystem(curator,options.getImportPath(),"/",null,null,false,false,false);  }  createDefault(curator,ZkPath.CONFIG_DEFAULT_VERSION.getPath(),version);  String defaultProfile=dataStore.getProfile(version,"default",true);  setData(curator,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),"${zk:" + karafName + "/ip}:"+ zooKeeperServerConnectionPort);  setData(curator,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  Properties zkProps=new Properties();  zkProps.setProperty("zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");  zkProps.setProperty("zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");  dataStore.setFileConfiguration(version,defaultProfile,"org.fusesource.fabric.zookeeper.properties",DataStoreHelpers.toBytes(zkProps));  String ensembleProfile=dataStore.getProfile(version,"fabric-ensemble-0000",true);  dataStore.setProfileAttribute(version,ensembleProfile,"abstract","true");  dataStore.setProfileAttribute(version,ensembleProfile,"hidden","true");  Properties ensembleProps=new Properties();  ensembleProps.put("tickTime","2000");  ensembleProps.put("initLimit","10");  ensembleProps.put("syncLimit","5");  ensembleProps.put("dataDir","data/zookeeper/0000");  loadPropertiesFrom(ensembleProps,options.getImportPath() + "/fabric/configs/versions/1.0/profiles/default/org.fusesource.fabric.zookeeper.server.properties");  dataStore.setFileConfiguration(version,ensembleProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(ensembleProps));  String ensembleServerProfile=dataStore.getProfile(version,"fabric-ensemble-0000-1",true);  dataStore.setProfileAttribute(version,ensembleServerProfile,"hidden","true");  dataStore.setProfileAttribute(version,ensembleServerProfile,"parents",ensembleProfile);  Properties serverProps=new Properties();  serverProps.put("clientPort",String.valueOf(mappedPort));  serverProps.put("clientPortAddress",zooKeeperServerHost);  dataStore.setFileConfiguration(version,ensembleServerProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(serverProps));  setData(curator,ZkPath.CONFIG_ENSEMBLES.getPath(),"0000");  setData(curator,ZkPath.CONFIG_ENSEMBLE.getPath("0000"),karafName);  String fabricProfile=dataStore.getProfile(version,"fabric",true);  Properties agentProps=DataStoreHelpers.toProperties(dataStore.getFileConfiguration(version,fabricProfile,"org.fusesource.fabric.agent.properties"));  agentProps.put("feature.fabric-commands","fabric-commands");  dataStore.setFileConfiguration(version,"fabric","org.fusesource.fabric.agent.properties",DataStoreHelpers.toBytes(agentProps));  createDefault(curator,ZkPath.CONFIG_CONTAINER.getPath(karafName),version);  StringBuilder profilesBuilder=new StringBuilder();  Set<String> profiles=options.getProfiles();  profilesBuilder.append("fabric").append(" ").append("fabric-ensemble-0000-1");  for (  String p : profiles) {    profilesBuilder.append(" ").append(p);  }  createDefault(curator,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,karafName),profilesBuilder.toString());  Map<String,String> configs=new HashMap<String,String>();  configs.put("encryption.enabled","${zk:/fabric/authentication/encryption.enabled}");  dataStore.setConfiguration(version,defaultProfile,"org.fusesource.fabric.jaas",configs);  createDefault(curator,"/fabric/authentication/encryption.enabled","true");  createDefault(curator,"/fabric/authentication/domain","karaf");  addUsersToZookeeper(curator,options.getUsers());  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),"PBEWithMD5AndDES");  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),options.getZookeeperPassword());  createZooKeeeperConfig(connectionUrl,options);  if (ensembleAutoStart) {    System.setProperty(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    org.apache.felix.utils.properties.Properties props=new org.apache.felix.utils.properties.Properties(file);    props.put(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    props.save();  }  startBundles(options);} catch (Exception e) {  throw new FabricException("Unable to create zookeeper server configuration",e);} @TO@ try {  Hashtable<String,Object> properties;  String version=ZkDefs.DEFAULT_VERSION;  String karafName=System.getProperty(SystemProperties.KARAF_NAME);  int minimumPort=options.getMinimumPort();  int maximumPort=options.getMaximumPort();  String zooKeeperServerHost=options.getBindAddress();  int zooKeeperServerPort=options.getZooKeeperServerPort();  int zooKeeperServerConnectionPort=options.getZooKeeperServerConnectionPort();  int mappedPort=mapPortToRange(zooKeeperServerPort,minimumPort,maximumPort);  String connectionUrl=getConnectionAddress() + ":" + zooKeeperServerConnectionPort;  createZooKeeeperServerConfig(zooKeeperServerHost,mappedPort,options);  CuratorFramework curator=createCuratorFramework(connectionUrl,options);  curator.start();  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  ConfiguredDataStoreFactory dataStoreFactory=new ConfiguredDataStoreFactory();  dataStoreFactory.setBootstrap(true);  dataStoreFactory.setCurator(curator);  DataStore dataStore=dataStoreFactory.createDataStore();  if (options.isAutoImportEnabled()) {    ZookeeperImportUtils.importFromFileSystem(curator,options.getImportPath(),"/",null,null,false,false,false);  }  createDefault(curator,ZkPath.CONFIG_DEFAULT_VERSION.getPath(),version);  String defaultProfile=dataStore.getProfile(version,"default",true);  setData(curator,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),"${zk:" + karafName + "/ip}:"+ zooKeeperServerConnectionPort);  setData(curator,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  Properties zkProps=new Properties();  zkProps.setProperty("zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");  zkProps.setProperty("zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");  dataStore.setFileConfiguration(version,defaultProfile,"org.fusesource.fabric.zookeeper.properties",DataStoreHelpers.toBytes(zkProps));  String ensembleProfile=dataStore.getProfile(version,"fabric-ensemble-0000",true);  dataStore.setProfileAttribute(version,ensembleProfile,"abstract","true");  dataStore.setProfileAttribute(version,ensembleProfile,"hidden","true");  Properties ensembleProps=new Properties();  ensembleProps.put("tickTime","2000");  ensembleProps.put("initLimit","10");  ensembleProps.put("syncLimit","5");  ensembleProps.put("dataDir","data/zookeeper/0000");  loadPropertiesFrom(ensembleProps,options.getImportPath() + "/fabric/configs/versions/1.0/profiles/default/org.fusesource.fabric.zookeeper.server.properties");  dataStore.setFileConfiguration(version,ensembleProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(ensembleProps));  String ensembleServerProfile=dataStore.getProfile(version,"fabric-ensemble-0000-1",true);  dataStore.setProfileAttribute(version,ensembleServerProfile,"hidden","true");  dataStore.setProfileAttribute(version,ensembleServerProfile,"parents",ensembleProfile);  Properties serverProps=new Properties();  serverProps.put("clientPort",String.valueOf(mappedPort));  serverProps.put("clientPortAddress",zooKeeperServerHost);  dataStore.setFileConfiguration(version,ensembleServerProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(serverProps));  setData(curator,ZkPath.CONFIG_ENSEMBLES.getPath(),"0000");  setData(curator,ZkPath.CONFIG_ENSEMBLE.getPath("0000"),karafName);  String fabricProfile=dataStore.getProfile(version,"fabric",true);  Properties agentProps=DataStoreHelpers.toProperties(dataStore.getFileConfiguration(version,fabricProfile,"org.fusesource.fabric.agent.properties"));  agentProps.put("feature.fabric-commands","fabric-commands");  dataStore.setFileConfiguration(version,"fabric","org.fusesource.fabric.agent.properties",DataStoreHelpers.toBytes(agentProps));  createDefault(curator,ZkPath.CONFIG_CONTAINER.getPath(karafName),version);  StringBuilder profilesBuilder=new StringBuilder();  Set<String> profiles=options.getProfiles();  profilesBuilder.append("fabric").append(" ").append("fabric-ensemble-0000-1");  for (  String p : profiles) {    profilesBuilder.append(" ").append(p);  }  createDefault(curator,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,karafName),profilesBuilder.toString());  Map<String,String> configs=new HashMap<String,String>();  configs.put("encryption.enabled","${zk:/fabric/authentication/encryption.enabled}");  dataStore.setConfiguration(version,defaultProfile,"org.fusesource.fabric.jaas",configs);  createDefault(curator,"/fabric/authentication/encryption.enabled","true");  createDefault(curator,"/fabric/authentication/domain","karaf");  addUsersToZookeeper(curator,options.getUsers());  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),"PBEWithMD5AndDES");  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),options.getZookeeperPassword());  createZooKeeeperConfig(connectionUrl,options);  if (ensembleAutoStart) {    System.setProperty(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    org.apache.felix.utils.properties.Properties props=new org.apache.felix.utils.properties.Properties(file);    props.put(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    props.save();  }  startBundles(options);} catch (Exception e) {  throw new FabricException("Unable to create zookeeper server configuration",e);} @AT@ 4570 @LENGTH@ 7150
---INS ExpressionStatement@@MethodInvocation:dataStoreFactory.setBootstrap(true) @TO@ TryStatement@@try {  Hashtable<String,Object> properties;  String version=ZkDefs.DEFAULT_VERSION;  String karafName=System.getProperty(SystemProperties.KARAF_NAME);  int minimumPort=options.getMinimumPort();  int maximumPort=options.getMaximumPort();  String zooKeeperServerHost=options.getBindAddress();  int zooKeeperServerPort=options.getZooKeeperServerPort();  int zooKeeperServerConnectionPort=options.getZooKeeperServerConnectionPort();  int mappedPort=mapPortToRange(zooKeeperServerPort,minimumPort,maximumPort);  String connectionUrl=getConnectionAddress() + ":" + zooKeeperServerConnectionPort;  createZooKeeeperServerConfig(zooKeeperServerHost,mappedPort,options);  CuratorFramework curator=createCuratorFramework(connectionUrl,options);  curator.start();  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();  ConfiguredDataStoreFactory dataStoreFactory=new ConfiguredDataStoreFactory();  dataStoreFactory.setCurator(curator);  DataStore dataStore=dataStoreFactory.createDataStore();  if (options.isAutoImportEnabled()) {    ZookeeperImportUtils.importFromFileSystem(curator,options.getImportPath(),"/",null,null,false,false,false);  }  createDefault(curator,ZkPath.CONFIG_DEFAULT_VERSION.getPath(),version);  String defaultProfile=dataStore.getProfile(version,"default",true);  setData(curator,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),"${zk:" + karafName + "/ip}:"+ zooKeeperServerConnectionPort);  setData(curator,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  Properties zkProps=new Properties();  zkProps.setProperty("zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");  zkProps.setProperty("zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");  dataStore.setFileConfiguration(version,defaultProfile,"org.fusesource.fabric.zookeeper.properties",DataStoreHelpers.toBytes(zkProps));  String ensembleProfile=dataStore.getProfile(version,"fabric-ensemble-0000",true);  dataStore.setProfileAttribute(version,ensembleProfile,"abstract","true");  dataStore.setProfileAttribute(version,ensembleProfile,"hidden","true");  Properties ensembleProps=new Properties();  ensembleProps.put("tickTime","2000");  ensembleProps.put("initLimit","10");  ensembleProps.put("syncLimit","5");  ensembleProps.put("dataDir","data/zookeeper/0000");  loadPropertiesFrom(ensembleProps,options.getImportPath() + "/fabric/configs/versions/1.0/profiles/default/org.fusesource.fabric.zookeeper.server.properties");  dataStore.setFileConfiguration(version,ensembleProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(ensembleProps));  String ensembleServerProfile=dataStore.getProfile(version,"fabric-ensemble-0000-1",true);  dataStore.setProfileAttribute(version,ensembleServerProfile,"hidden","true");  dataStore.setProfileAttribute(version,ensembleServerProfile,"parents",ensembleProfile);  Properties serverProps=new Properties();  serverProps.put("clientPort",String.valueOf(mappedPort));  serverProps.put("clientPortAddress",zooKeeperServerHost);  dataStore.setFileConfiguration(version,ensembleServerProfile,"org.fusesource.fabric.zookeeper.server-0000.properties",DataStoreHelpers.toBytes(serverProps));  setData(curator,ZkPath.CONFIG_ENSEMBLES.getPath(),"0000");  setData(curator,ZkPath.CONFIG_ENSEMBLE.getPath("0000"),karafName);  String fabricProfile=dataStore.getProfile(version,"fabric",true);  Properties agentProps=DataStoreHelpers.toProperties(dataStore.getFileConfiguration(version,fabricProfile,"org.fusesource.fabric.agent.properties"));  agentProps.put("feature.fabric-commands","fabric-commands");  dataStore.setFileConfiguration(version,"fabric","org.fusesource.fabric.agent.properties",DataStoreHelpers.toBytes(agentProps));  createDefault(curator,ZkPath.CONFIG_CONTAINER.getPath(karafName),version);  StringBuilder profilesBuilder=new StringBuilder();  Set<String> profiles=options.getProfiles();  profilesBuilder.append("fabric").append(" ").append("fabric-ensemble-0000-1");  for (  String p : profiles) {    profilesBuilder.append(" ").append(p);  }  createDefault(curator,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,karafName),profilesBuilder.toString());  Map<String,String> configs=new HashMap<String,String>();  configs.put("encryption.enabled","${zk:/fabric/authentication/encryption.enabled}");  dataStore.setConfiguration(version,defaultProfile,"org.fusesource.fabric.jaas",configs);  createDefault(curator,"/fabric/authentication/encryption.enabled","true");  createDefault(curator,"/fabric/authentication/domain","karaf");  addUsersToZookeeper(curator,options.getUsers());  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_ALGORITHM.getPath(),"PBEWithMD5AndDES");  createDefault(curator,ZkPath.AUTHENTICATION_CRYPT_PASSWORD.getPath(),options.getZookeeperPassword());  createZooKeeeperConfig(connectionUrl,options);  if (ensembleAutoStart) {    System.setProperty(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    File file=new File(System.getProperty("karaf.base") + "/etc/system.properties");    org.apache.felix.utils.properties.Properties props=new org.apache.felix.utils.properties.Properties(file);    props.put(SystemProperties.ENSEMBLE_AUTOSTART,Boolean.FALSE.toString());    props.save();  }  startBundles(options);} catch (Exception e) {  throw new FabricException("Unable to create zookeeper server configuration",e);} @AT@ 5686 @LENGTH@ 36
------INS MethodInvocation@@dataStoreFactory.setBootstrap(true) @TO@ ExpressionStatement@@MethodInvocation:dataStoreFactory.setBootstrap(true) @AT@ 5686 @LENGTH@ 35
---------INS SimpleName@@Name:dataStoreFactory @TO@ MethodInvocation@@dataStoreFactory.setBootstrap(true) @AT@ 5686 @LENGTH@ 16
---------INS SimpleName@@MethodName:setBootstrap:[true] @TO@ MethodInvocation@@dataStoreFactory.setBootstrap(true) @AT@ 5703 @LENGTH@ 18
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setBootstrap:[true] @AT@ 5716 @LENGTH@ 4


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 2869 @LENGTH@ 822
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 2913 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2913 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2913 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2917 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2925 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2925 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2929 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2937 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2946 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @TO@ MethodDeclaration@@public, void, MethodName:afterRun, Exception,  @AT@ 1627 @LENGTH@ 41
---INS MethodInvocation@@ServiceHelper.stopServices(camelContext) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.stopServices(camelContext) @AT@ 1627 @LENGTH@ 40
------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 1627 @LENGTH@ 13
------INS SimpleName@@MethodName:stopServices:[camelContext] @TO@ MethodInvocation@@ServiceHelper.stopServices(camelContext) @AT@ 1641 @LENGTH@ 26
---------INS SimpleName@@camelContext @TO@ SimpleName@@MethodName:stopServices:[camelContext] @AT@ 1654 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:filteredData.addAccessRestrictedResource(absoluteChildAddr) @TO@ MethodInvocation:localFilteredData.addAccessRestrictedResource(absoluteChildAddr) @AT@ 15877 @LENGTH@ 60
---UPD MethodInvocation@@filteredData.addAccessRestrictedResource(absoluteChildAddr) @TO@ localFilteredData.addAccessRestrictedResource(absoluteChildAddr) @AT@ 15877 @LENGTH@ 59
------UPD SimpleName@@Name:filteredData @TO@ Name:localFilteredData @AT@ 15877 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:setValue(new ELRequestMatcher(text)) @TO@ MethodInvocation:setValue(new org.springframework.security.web.util.matchers.ELRequestMatcher(text)) @AT@ 1324 @LENGTH@ 37
---UPD MethodInvocation@@setValue(new ELRequestMatcher(text)) @TO@ setValue(new org.springframework.security.web.util.matchers.ELRequestMatcher(text)) @AT@ 1324 @LENGTH@ 36
------UPD SimpleName@@MethodName:setValue:[new ELRequestMatcher(text)] @TO@ MethodName:setValue:[new org.springframework.security.web.util.matchers.ELRequestMatcher(text)] @AT@ 1324 @LENGTH@ 36
---------UPD ClassInstanceCreation@@ELRequestMatcher[text] @TO@ org.springframework.security.web.util.matchers.ELRequestMatcher[text] @AT@ 1333 @LENGTH@ 26
------------UPD SimpleType@@ELRequestMatcher @TO@ org.springframework.security.web.util.matchers.ELRequestMatcher @AT@ 1337 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertThat(mindAppmasterService.getPort(),greaterThan(0)) @TO@ MethodInvocation:assertThat(waitAndPollPort(),greaterThan(0)) @AT@ 1528 @LENGTH@ 59
---UPD MethodInvocation@@assertThat(mindAppmasterService.getPort(),greaterThan(0)) @TO@ assertThat(waitAndPollPort(),greaterThan(0)) @AT@ 1528 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertThat:[mindAppmasterService.getPort(), greaterThan(0)] @TO@ MethodName:assertThat:[waitAndPollPort(), greaterThan(0)] @AT@ 1528 @LENGTH@ 58
---------UPD MethodInvocation@@mindAppmasterService.getPort() @TO@ MethodName:waitAndPollPort:[] @AT@ 1539 @LENGTH@ 30
------------DEL SimpleName@@Name:mindAppmasterService @AT@ 1539 @LENGTH@ 20
------------DEL SimpleName@@MethodName:getPort:[] @AT@ 1560 @LENGTH@ 9


UPD IfStatement@@if (!DeploymentTypeMarker.isType(DeploymentType.EAR,deploymentUnit)) {  return;} @TO@ if (!DeploymentTypeMarker.isType(DeploymentType.EAR,deploymentUnit)) {  if (deploymentUnit.getParent() == null) {    deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);  }  return;} @AT@ 2328 @LENGTH@ 101
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  if (deploymentUnit.getParent() == null) {    deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);  }  return;} @AT@ 2398 @LENGTH@ 31
------INS IfStatement@@if (deploymentUnit.getParent() == null) {  deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);} @TO@ Block@@ThenBody:{  return;} @AT@ 2412 @LENGTH@ 146
---------INS InfixExpression@@deploymentUnit.getParent() == null @TO@ IfStatement@@if (deploymentUnit.getParent() == null) {  deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);} @AT@ 2415 @LENGTH@ 34
------------INS MethodInvocation@@deploymentUnit.getParent() @TO@ InfixExpression@@deploymentUnit.getParent() == null @AT@ 2415 @LENGTH@ 26
---------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getParent() @AT@ 2415 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@deploymentUnit.getParent() @AT@ 2430 @LENGTH@ 11
------------INS Operator@@== @TO@ InfixExpression@@deploymentUnit.getParent() == null @AT@ 2441 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@deploymentUnit.getParent() == null @AT@ 2445 @LENGTH@ 4
---------INS Block@@ThenBody:{  deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);} @TO@ IfStatement@@if (deploymentUnit.getParent() == null) {  deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);} @AT@ 2452 @LENGTH@ 106
------------INS ExpressionStatement@@MethodInvocation:deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true) @TO@ Block@@ThenBody:{  deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true);} @AT@ 2470 @LENGTH@ 74
---------------INS MethodInvocation@@deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true) @TO@ ExpressionStatement@@MethodInvocation:deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true) @AT@ 2470 @LENGTH@ 73
------------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true) @AT@ 2470 @LENGTH@ 14
------------------INS SimpleName@@MethodName:putAttachment:[AppClientAttachments.START_APP_CLIENT, true] @TO@ MethodInvocation@@deploymentUnit.putAttachment(AppClientAttachments.START_APP_CLIENT,true) @AT@ 2485 @LENGTH@ 58
---------------------INS QualifiedName@@AppClientAttachments.START_APP_CLIENT @TO@ SimpleName@@MethodName:putAttachment:[AppClientAttachments.START_APP_CLIENT, true] @AT@ 2499 @LENGTH@ 37
------------------------INS SimpleName@@AppClientAttachments @TO@ QualifiedName@@AppClientAttachments.START_APP_CLIENT @AT@ 2499 @LENGTH@ 20
------------------------INS SimpleName@@START_APP_CLIENT @TO@ QualifiedName@@AppClientAttachments.START_APP_CLIENT @AT@ 2520 @LENGTH@ 16
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:putAttachment:[AppClientAttachments.START_APP_CLIENT, true] @AT@ 2538 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new SecurityException("attempt to add a Permission to a readonly PermissionCollection") @TO@ MethodInvocation:ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 1952 @LENGTH@ 94
---DEL ClassInstanceCreation@@SecurityException["attempt to add a Permission to a readonly PermissionCollection"] @AT@ 1958 @LENGTH@ 87
------DEL New@@new @AT@ 1958 @LENGTH@ 3
------DEL SimpleType@@SecurityException @AT@ 1962 @LENGTH@ 17
------DEL StringLiteral@@"attempt to add a Permission to a readonly PermissionCollection" @AT@ 1980 @LENGTH@ 64
---INS MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @TO@ ThrowStatement@@ClassInstanceCreation:new SecurityException("attempt to add a Permission to a readonly PermissionCollection") @AT@ 2009 @LENGTH@ 60
------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 2009 @LENGTH@ 27
------INS SimpleName@@MethodName:permissionCollectionIsReadOnly:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionCollectionIsReadOnly() @AT@ 2037 @LENGTH@ 32


UPD CatchClause@@catch (NamingException e) {  return null;} @TO@ catch (NamingException|IllegalArgumentException e) {  return null;} @AT@ 3644 @LENGTH@ 86
---UPD SingleVariableDeclaration@@NamingException e @TO@ NamingException|IllegalArgumentException e @AT@ 3651 @LENGTH@ 17
------DEL SimpleType@@NamingException @AT@ 3651 @LENGTH@ 15
------INS UnionType@@NamingException|IllegalArgumentException @TO@ SingleVariableDeclaration@@NamingException e @AT@ 3774 @LENGTH@ 42
---------INS SimpleType@@NamingException @TO@ UnionType@@NamingException|IllegalArgumentException @AT@ 3774 @LENGTH@ 15
---------INS SimpleType@@IllegalArgumentException @TO@ UnionType@@NamingException|IllegalArgumentException @AT@ 3792 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @TO@ TypeDeclaration@@[public]TestOAuth2ClientContextFilter,  @AT@ 2234 @LENGTH@ 322
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2234 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2241 @LENGTH@ 4
---INS SimpleName@@MethodName:testCurrentUriWithInvalidQueryString @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2246 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2292 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2306 @LENGTH@ 67
------INS SimpleType@@OAuth2ClientContextFilter @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 2306 @LENGTH@ 25
------INS VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @TO@ VariableDeclarationStatement@@OAuth2ClientContextFilter filter=new OAuth2ClientContextFilter(); @AT@ 2332 @LENGTH@ 40
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 2332 @LENGTH@ 6
---------INS ClassInstanceCreation@@OAuth2ClientContextFilter[] @TO@ VariableDeclarationFragment@@filter=new OAuth2ClientContextFilter() @AT@ 2341 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 2341 @LENGTH@ 3
------------INS SimpleType@@OAuth2ClientContextFilter @TO@ ClassInstanceCreation@@OAuth2ClientContextFilter[] @AT@ 2345 @LENGTH@ 25
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2376 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2376 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2399 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2399 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2409 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2409 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2413 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar&code=XXXX&parm=%xx") @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2441 @LENGTH@ 53
------INS MethodInvocation@@request.setQueryString("foo=bar&code=XXXX&parm=%xx") @TO@ ExpressionStatement@@MethodInvocation:request.setQueryString("foo=bar&code=XXXX&parm=%xx") @AT@ 2441 @LENGTH@ 52
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setQueryString("foo=bar&code=XXXX&parm=%xx") @AT@ 2441 @LENGTH@ 7
---------INS SimpleName@@MethodName:setQueryString:["foo=bar&code=XXXX&parm=%xx"] @TO@ MethodInvocation@@request.setQueryString("foo=bar&code=XXXX&parm=%xx") @AT@ 2449 @LENGTH@ 44
------------INS StringLiteral@@"foo=bar&code=XXXX&parm=%xx" @TO@ SimpleName@@MethodName:setQueryString:["foo=bar&code=XXXX&parm=%xx"] @AT@ 2464 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:assertEquals(null,filter.calculateCurrentUri(request)) @TO@ MethodDeclaration@@public, void, MethodName:testCurrentUriWithInvalidQueryString, Exception,  @AT@ 2497 @LENGTH@ 56
------INS MethodInvocation@@assertEquals(null,filter.calculateCurrentUri(request)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(null,filter.calculateCurrentUri(request)) @AT@ 2497 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertEquals:[null, filter.calculateCurrentUri(request)] @TO@ MethodInvocation@@assertEquals(null,filter.calculateCurrentUri(request)) @AT@ 2497 @LENGTH@ 55
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:assertEquals:[null, filter.calculateCurrentUri(request)] @AT@ 2510 @LENGTH@ 4
------------INS MethodInvocation@@filter.calculateCurrentUri(request) @TO@ SimpleName@@MethodName:assertEquals:[null, filter.calculateCurrentUri(request)] @AT@ 2516 @LENGTH@ 35
---------------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 2516 @LENGTH@ 6
---------------INS SimpleName@@MethodName:calculateCurrentUri:[request] @TO@ MethodInvocation@@filter.calculateCurrentUri(request) @AT@ 2523 @LENGTH@ 28
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:calculateCurrentUri:[request] @AT@ 2543 @LENGTH@ 7


UPD VariableDeclarationStatement@@ContentModification moduleRemoved=new ContentModification(new ModuleItem(moduleName,existingHash),existingHash,REMOVE); @TO@ ContentModification moduleRemoved=new ContentModification(new ModuleItem(moduleName,NO_CONTENT),existingHash,REMOVE); @AT@ 4949 @LENGTH@ 124
---UPD VariableDeclarationFragment@@moduleRemoved=new ContentModification(new ModuleItem(moduleName,existingHash),existingHash,REMOVE) @TO@ moduleRemoved=new ContentModification(new ModuleItem(moduleName,NO_CONTENT),existingHash,REMOVE) @AT@ 4969 @LENGTH@ 103
------UPD ClassInstanceCreation@@ContentModification[new ModuleItem(moduleName,existingHash), existingHash, REMOVE] @TO@ ContentModification[new ModuleItem(moduleName,NO_CONTENT), existingHash, REMOVE] @AT@ 4985 @LENGTH@ 87
---------UPD ClassInstanceCreation@@ModuleItem[moduleName, existingHash] @TO@ ModuleItem[moduleName, NO_CONTENT] @AT@ 5009 @LENGTH@ 40
------------UPD SimpleName@@existingHash @TO@ NO_CONTENT @AT@ 5036 @LENGTH@ 12


INS MethodDeclaration@@Map<String,String>, MethodName:currentContainerConfigurationFiles,  @TO@ TypeDeclaration@@[public]FabricManagerMBean,  @AT@ 5375 @LENGTH@ 37
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 5355 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5355 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5359 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5367 @LENGTH@ 6
---INS SimpleName@@MethodName:currentContainerConfigurationFiles @TO@ MethodDeclaration@@Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 5375 @LENGTH@ 34


INS EnhancedForStatement@@for (org.springframework.batch.core.JobExecution jobExecution : previousExecutions) {  if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {    throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");  }} @TO@ MethodDeclaration@@public, long, MethodName:restart, long executionId, Properties params, JobExecutionAlreadyCompleteException, NoSuchJobExecutionException, JobExecutionNotMostRecentException, JobRestartException, JobSecurityException,  @AT@ 16258 @LENGTH@ 305
---INS SingleVariableDeclaration@@org.springframework.batch.core.JobExecution jobExecution @TO@ EnhancedForStatement@@for (org.springframework.batch.core.JobExecution jobExecution : previousExecutions) {  if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {    throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");  }} @AT@ 16263 @LENGTH@ 56
------INS SimpleType@@org.springframework.batch.core.JobExecution @TO@ SingleVariableDeclaration@@org.springframework.batch.core.JobExecution jobExecution @AT@ 16263 @LENGTH@ 43
------INS SimpleName@@jobExecution @TO@ SingleVariableDeclaration@@org.springframework.batch.core.JobExecution jobExecution @AT@ 16307 @LENGTH@ 12
---INS SimpleName@@previousExecutions @TO@ EnhancedForStatement@@for (org.springframework.batch.core.JobExecution jobExecution : previousExecutions) {  if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {    throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");  }} @AT@ 16322 @LENGTH@ 18
---INS IfStatement@@if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {  throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");} @TO@ EnhancedForStatement@@for (org.springframework.batch.core.JobExecution jobExecution : previousExecutions) {  if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {    throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");  }} @AT@ 16347 @LENGTH@ 212
------INS InfixExpression@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0 @TO@ IfStatement@@if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {  throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");} @AT@ 16350 @LENGTH@ 80
---------INS MethodInvocation@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) @TO@ InfixExpression@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0 @AT@ 16350 @LENGTH@ 76
------------INS MethodInvocation@@MethodName:getCreateTime:[] @TO@ MethodInvocation@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) @AT@ 16350 @LENGTH@ 28
------------INS SimpleName@@Name:jobExecution @TO@ MethodInvocation@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) @AT@ 16350 @LENGTH@ 12
------------INS SimpleName@@MethodName:compareTo:[previousJobExecution.getCreateTime()] @TO@ MethodInvocation@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) @AT@ 16379 @LENGTH@ 47
---------------INS MethodInvocation@@previousJobExecution.getCreateTime() @TO@ SimpleName@@MethodName:compareTo:[previousJobExecution.getCreateTime()] @AT@ 16389 @LENGTH@ 36
------------------INS SimpleName@@Name:previousJobExecution @TO@ MethodInvocation@@previousJobExecution.getCreateTime() @AT@ 16389 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getCreateTime:[] @TO@ MethodInvocation@@previousJobExecution.getCreateTime() @AT@ 16410 @LENGTH@ 15
---------INS Operator@@> @TO@ InfixExpression@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0 @AT@ 16426 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0 @AT@ 16429 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");} @TO@ IfStatement@@if (jobExecution.getCreateTime().compareTo(previousJobExecution.getCreateTime()) > 0) {  throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");} @AT@ 16432 @LENGTH@ 127
---------INS ThrowStatement@@ClassInstanceCreation:new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run") @TO@ Block@@ThenBody:{  throw new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run");} @AT@ 16438 @LENGTH@ 116
------------INS ClassInstanceCreation@@JobExecutionNotMostRecentException["The requested JobExecution to restart was not the most recently run"] @TO@ ThrowStatement@@ClassInstanceCreation:new JobExecutionNotMostRecentException("The requested JobExecution to restart was not the most recently run") @AT@ 16444 @LENGTH@ 109
---------------INS New@@new @TO@ ClassInstanceCreation@@JobExecutionNotMostRecentException["The requested JobExecution to restart was not the most recently run"] @AT@ 16444 @LENGTH@ 3
---------------INS SimpleType@@JobExecutionNotMostRecentException @TO@ ClassInstanceCreation@@JobExecutionNotMostRecentException["The requested JobExecution to restart was not the most recently run"] @AT@ 16448 @LENGTH@ 34
---------------INS StringLiteral@@"The requested JobExecution to restart was not the most recently run" @TO@ ClassInstanceCreation@@JobExecutionNotMostRecentException["The requested JobExecution to restart was not the most recently run"] @AT@ 16483 @LENGTH@ 69


UPD IfStatement@@if (baseURI == null) {  relatedURI=getUri(systemId);  resourceURI=relatedURI;} else {  String relatedPath=relatedURIMap.get(baseURI);  if (relatedPath == null) {    relatedPath=FileUtil.onlyPath(relatedURI);    if (relatedPath == null) {      relatedPath="";    }    relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId;    resourceURI=relatedURI;    relatedURIMap.put(baseURI,relatedPath);  } else {    resourceURI=relatedPath + "/" + systemId;    relatedURI=resourceURI;  }} @TO@ if (baseURI == null) {  relatedURI=FileUtil.compactPath(getUri(systemId),'/');  resourceURI=relatedURI;} else {  String relatedPath=relatedURIMap.get(baseURI);  if (relatedPath == null) {    relatedPath=FileUtil.onlyPath(relatedURI);    if (relatedPath == null) {      relatedPath="";    }    relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/');    resourceURI=relatedURI;    relatedURIMap.put(baseURI,relatedPath);  } else {    resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/');    relatedURI=resourceURI;  }} @AT@ 2689 @LENGTH@ 703
---UPD Block@@ThenBody:{  relatedURI=getUri(systemId);  resourceURI=relatedURI;} @TO@ ThenBody:{  relatedURI=FileUtil.compactPath(getUri(systemId),'/');  resourceURI=relatedURI;} @AT@ 2710 @LENGTH@ 92
------UPD ExpressionStatement@@Assignment:relatedURI=getUri(systemId) @TO@ Assignment:relatedURI=FileUtil.compactPath(getUri(systemId),'/') @AT@ 2724 @LENGTH@ 30
---------UPD Assignment@@relatedURI=getUri(systemId) @TO@ relatedURI=FileUtil.compactPath(getUri(systemId),'/') @AT@ 2724 @LENGTH@ 29
------------INS MethodInvocation@@FileUtil.compactPath(getUri(systemId),'/') @TO@ Assignment@@relatedURI=getUri(systemId) @AT@ 2737 @LENGTH@ 43
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(getUri(systemId),'/') @AT@ 2737 @LENGTH@ 8
---------------INS SimpleName@@MethodName:compactPath:[getUri(systemId), '/'] @TO@ MethodInvocation@@FileUtil.compactPath(getUri(systemId),'/') @AT@ 2746 @LENGTH@ 34
------------------MOV MethodInvocation@@getUri(systemId) @TO@ SimpleName@@MethodName:compactPath:[getUri(systemId), '/'] @AT@ 2737 @LENGTH@ 16
------------------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:compactPath:[getUri(systemId), '/'] @AT@ 2776 @LENGTH@ 3
---UPD Block@@ElseBody:{  String relatedPath=relatedURIMap.get(baseURI);  if (relatedPath == null) {    relatedPath=FileUtil.onlyPath(relatedURI);    if (relatedPath == null) {      relatedPath="";    }    relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId;    resourceURI=relatedURI;    relatedURIMap.put(baseURI,relatedPath);  } else {    resourceURI=relatedPath + "/" + systemId;    relatedURI=resourceURI;  }} @TO@ ElseBody:{  String relatedPath=relatedURIMap.get(baseURI);  if (relatedPath == null) {    relatedPath=FileUtil.onlyPath(relatedURI);    if (relatedPath == null) {      relatedPath="";    }    relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/');    resourceURI=relatedURI;    relatedURIMap.put(baseURI,relatedPath);  } else {    resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/');    relatedURI=resourceURI;  }} @AT@ 2808 @LENGTH@ 584
------UPD IfStatement@@if (relatedPath == null) {  relatedPath=FileUtil.onlyPath(relatedURI);  if (relatedPath == null) {    relatedPath="";  }  relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId;  resourceURI=relatedURI;  relatedURIMap.put(baseURI,relatedPath);} else {  resourceURI=relatedPath + "/" + systemId;  relatedURI=resourceURI;} @TO@ if (relatedPath == null) {  relatedPath=FileUtil.onlyPath(relatedURI);  if (relatedPath == null) {    relatedPath="";  }  relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/');  resourceURI=relatedURI;  relatedURIMap.put(baseURI,relatedPath);} else {  resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/');  relatedURI=resourceURI;} @AT@ 2883 @LENGTH@ 499
---------UPD Block@@ThenBody:{  relatedPath=FileUtil.onlyPath(relatedURI);  if (relatedPath == null) {    relatedPath="";  }  relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId;  resourceURI=relatedURI;  relatedURIMap.put(baseURI,relatedPath);} @TO@ ThenBody:{  relatedPath=FileUtil.onlyPath(relatedURI);  if (relatedPath == null) {    relatedPath="";  }  relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/');  resourceURI=relatedURI;  relatedURIMap.put(baseURI,relatedPath);} @AT@ 2908 @LENGTH@ 351
------------UPD ExpressionStatement@@Assignment:relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId @TO@ Assignment:relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/') @AT@ 3086 @LENGTH@ 60
---------------UPD Assignment@@relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId @TO@ relatedURI=FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/') @AT@ 3086 @LENGTH@ 59
------------------INS MethodInvocation@@FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/') @TO@ Assignment@@relatedURI=FileUtil.onlyPath(relatedURI) + "/" + systemId @AT@ 3126 @LENGTH@ 73
---------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/') @AT@ 3126 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:compactPath:[FileUtil.onlyPath(relatedURI) + "/" + systemId, '/'] @TO@ MethodInvocation@@FileUtil.compactPath(FileUtil.onlyPath(relatedURI) + "/" + systemId,'/') @AT@ 3135 @LENGTH@ 64
------------------------MOV InfixExpression@@FileUtil.onlyPath(relatedURI) + "/" + systemId @TO@ SimpleName@@MethodName:compactPath:[FileUtil.onlyPath(relatedURI) + "/" + systemId, '/'] @AT@ 3099 @LENGTH@ 46
------------------------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:compactPath:[FileUtil.onlyPath(relatedURI) + "/" + systemId, '/'] @AT@ 3195 @LENGTH@ 3
---------UPD Block@@ElseBody:{  resourceURI=relatedPath + "/" + systemId;  relatedURI=resourceURI;} @TO@ ElseBody:{  resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/');  relatedURI=resourceURI;} @AT@ 3265 @LENGTH@ 117
------------UPD ExpressionStatement@@Assignment:resourceURI=relatedPath + "/" + systemId @TO@ Assignment:resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/') @AT@ 3283 @LENGTH@ 43
---------------UPD Assignment@@resourceURI=relatedPath + "/" + systemId @TO@ resourceURI=FileUtil.compactPath(relatedPath + "/" + systemId,'/') @AT@ 3283 @LENGTH@ 42
------------------DEL InfixExpression@@relatedPath + "/" + systemId @AT@ 3297 @LENGTH@ 28
------------------INS MethodInvocation@@FileUtil.compactPath(relatedPath + "/" + systemId,'/') @TO@ Assignment@@resourceURI=relatedPath + "/" + systemId @AT@ 3351 @LENGTH@ 55
---------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath(relatedPath + "/" + systemId,'/') @AT@ 3351 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:compactPath:[relatedPath + "/" + systemId, '/'] @TO@ MethodInvocation@@FileUtil.compactPath(relatedPath + "/" + systemId,'/') @AT@ 3360 @LENGTH@ 46
------------------------INS InfixExpression@@relatedPath + "/" + systemId @TO@ SimpleName@@MethodName:compactPath:[relatedPath + "/" + systemId, '/'] @AT@ 3372 @LENGTH@ 28
---------------------------MOV SimpleName@@relatedPath @TO@ InfixExpression@@relatedPath + "/" + systemId @AT@ 3297 @LENGTH@ 11
---------------------------MOV Operator@@+ @TO@ InfixExpression@@relatedPath + "/" + systemId @AT@ 3308 @LENGTH@ 1
---------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@relatedPath + "/" + systemId @AT@ 3311 @LENGTH@ 3
---------------------------MOV SimpleName@@systemId @TO@ InfixExpression@@relatedPath + "/" + systemId @AT@ 3317 @LENGTH@ 8
------------------------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:compactPath:[relatedPath + "/" + systemId, '/'] @AT@ 3402 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCxfProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ExampleCxfProfileTest, FabricTestSupport @AT@ 1314 @LENGTH@ 1702
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCxfProfileTest, FabricTestSupport @AT@ 1438 @LENGTH@ 49


INS TryStatement@@try {  uri=builder.replaceQueryParam("code").build(true);} catch (IllegalArgumentException ex) {  return null;} @TO@ MethodDeclaration@@protected, String, MethodName:calculateCurrentUri, HttpServletRequest request, UnsupportedEncodingException,  @AT@ 4671 @LENGTH@ 287
---INS ExpressionStatement@@Assignment:uri=builder.replaceQueryParam("code").build(true) @TO@ TryStatement@@try {  uri=builder.replaceQueryParam("code").build(true);} catch (IllegalArgumentException ex) {  return null;} @AT@ 4683 @LENGTH@ 52
------INS Assignment@@uri=builder.replaceQueryParam("code").build(true) @TO@ ExpressionStatement@@Assignment:uri=builder.replaceQueryParam("code").build(true) @AT@ 4683 @LENGTH@ 51
---------MOV MethodInvocation@@builder.replaceQueryParam("code").build(true) @TO@ Assignment@@uri=builder.replaceQueryParam("code").build(true) @AT@ 4657 @LENGTH@ 45
---------INS SimpleName@@uri @TO@ Assignment@@uri=builder.replaceQueryParam("code").build(true) @AT@ 4683 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@uri=builder.replaceQueryParam("code").build(true) @AT@ 4686 @LENGTH@ 1
---INS CatchClause@@catch (IllegalArgumentException ex) {  return null;} @TO@ TryStatement@@try {  uri=builder.replaceQueryParam("code").build(true);} catch (IllegalArgumentException ex) {  return null;} @AT@ 4746 @LENGTH@ 212
------INS SingleVariableDeclaration@@IllegalArgumentException ex @TO@ CatchClause@@catch (IllegalArgumentException ex) {  return null;} @AT@ 4753 @LENGTH@ 27
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException ex @AT@ 4753 @LENGTH@ 24
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@IllegalArgumentException ex @AT@ 4778 @LENGTH@ 2
------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (IllegalArgumentException ex) {  return null;} @AT@ 4936 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4943 @LENGTH@ 4


UPD ReturnStatement@@BooleanLiteral:true @TO@ MethodInvocation:pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19584 @LENGTH@ 12
---INS MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 19576 @LENGTH@ 44
------INS SimpleName@@Name:pluggableMBeanServerImpl @TO@ MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19576 @LENGTH@ 24
------INS SimpleName@@MethodName:shouldLog:[readOnly] @TO@ MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19601 @LENGTH@ 19
---------INS SimpleName@@readOnly @TO@ SimpleName@@MethodName:shouldLog:[readOnly] @AT@ 19611 @LENGTH@ 8
---DEL BooleanLiteral@@true @AT@ 19591 @LENGTH@ 4


UPD TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));  Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());  Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));  Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());  Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));  Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());  Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());  Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 20772 @LENGTH@ 1356
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue()) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));  Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());  Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));  Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());  Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 21412 @LENGTH@ 104
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @TO@ TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertTrue(response.containsHeader(SessionOperationServlet.SESSION_ID));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.CREATED_SESSIONS));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.DESTROYED_SESSIONS));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.ADDED_ATTRIBUTES));  Assert.assertFalse(response.containsHeader(SessionOperationServlet.REPLACED_ATTRIBUTES));  Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());  Assert.assertFalse(response.containsHeader(SessionOperationServlet.BOUND_ATTRIBUTES));  Assert.assertTrue(response.containsHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES));  Assert.assertEquals(response.getFirstHeader(SessionOperationServlet.SESSION_ID).getValue(),response.getFirstHeader(SessionOperationServlet.DESTROYED_SESSIONS).getValue());  Assert.assertEquals("5",response.getFirstHeader(SessionOperationServlet.UNBOUND_ATTRIBUTES).getValue());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 21412 @LENGTH@ 87
------INS MethodInvocation@@Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @AT@ 21412 @LENGTH@ 86
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @AT@ 21412 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)] @TO@ MethodInvocation@@Assert.assertTrue(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @AT@ 21419 @LENGTH@ 79
------------INS MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @TO@ SimpleName@@MethodName:assertTrue:[response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)] @AT@ 21430 @LENGTH@ 67
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @AT@ 21430 @LENGTH@ 8
---------------INS SimpleName@@MethodName:containsHeader:[SessionOperationServlet.REMOVED_ATTRIBUTES] @TO@ MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @AT@ 21439 @LENGTH@ 58
------------------INS QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @TO@ SimpleName@@MethodName:containsHeader:[SessionOperationServlet.REMOVED_ATTRIBUTES] @AT@ 21454 @LENGTH@ 42
---------------------INS SimpleName@@SessionOperationServlet @TO@ QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @AT@ 21454 @LENGTH@ 23
---------------------INS SimpleName@@REMOVED_ATTRIBUTES @TO@ QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @AT@ 21478 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:this.startLimit=startLimit @TO@ Assignment:this.startLimit=startLimit == 0 ? Integer.MAX_VALUE : startLimit @AT@ 3866 @LENGTH@ 29
---UPD Assignment@@this.startLimit=startLimit @TO@ this.startLimit=startLimit == 0 ? Integer.MAX_VALUE : startLimit @AT@ 3866 @LENGTH@ 28
------DEL SimpleName@@startLimit @AT@ 3884 @LENGTH@ 10
------INS ConditionalExpression@@startLimit == 0 ? Integer.MAX_VALUE : startLimit @TO@ Assignment@@this.startLimit=startLimit @AT@ 3910 @LENGTH@ 48
---------INS InfixExpression@@startLimit == 0 @TO@ ConditionalExpression@@startLimit == 0 ? Integer.MAX_VALUE : startLimit @AT@ 3910 @LENGTH@ 15
------------INS SimpleName@@startLimit @TO@ InfixExpression@@startLimit == 0 @AT@ 3910 @LENGTH@ 10
------------INS Operator@@== @TO@ InfixExpression@@startLimit == 0 @AT@ 3920 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@startLimit == 0 @AT@ 3924 @LENGTH@ 1
---------INS QualifiedName@@Integer.MAX_VALUE @TO@ ConditionalExpression@@startLimit == 0 ? Integer.MAX_VALUE : startLimit @AT@ 3928 @LENGTH@ 17
------------INS SimpleName@@Integer @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 3928 @LENGTH@ 7
------------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 3936 @LENGTH@ 9
---------INS SimpleName@@startLimit @TO@ ConditionalExpression@@startLimit == 0 ? Integer.MAX_VALUE : startLimit @AT@ 3948 @LENGTH@ 10


DEL FieldDeclaration@@public, static, final, String, [CHECK_RESOURCE_ACCESS="check-resource-access"] @AT@ 21523 @LENGTH@ 75
---DEL Modifier@@public @AT@ 21523 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21530 @LENGTH@ 6
---DEL Modifier@@final @AT@ 21537 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 21543 @LENGTH@ 6
---DEL VariableDeclarationFragment@@CHECK_RESOURCE_ACCESS="check-resource-access" @AT@ 21550 @LENGTH@ 47
------DEL SimpleName@@CHECK_RESOURCE_ACCESS @AT@ 21550 @LENGTH@ 21
------DEL StringLiteral@@"check-resource-access" @AT@ 21574 @LENGTH@ 23


INS MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @TO@ TypeDeclaration@@[public]Helpers,  @AT@ 3112 @LENGTH@ 389
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3112 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3119 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3126 @LENGTH@ 4
---INS SimpleName@@MethodName:doContainerAction @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3131 @LENGTH@ 17
---INS SingleVariableDeclaration@@J4pClient j4p @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3149 @LENGTH@ 13
------INS SimpleType@@J4pClient @TO@ SingleVariableDeclaration@@J4pClient j4p @AT@ 3149 @LENGTH@ 9
------INS SimpleName@@j4p @TO@ SingleVariableDeclaration@@J4pClient j4p @AT@ 3159 @LENGTH@ 3
---INS SingleVariableDeclaration@@String action @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3164 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String action @AT@ 3164 @LENGTH@ 6
------INS SimpleName@@action @TO@ SingleVariableDeclaration@@String action @AT@ 3171 @LENGTH@ 6
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3179 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 3179 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 3186 @LENGTH@ 2
---INS TryStatement@@try {  J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id);  J4pExecResponse response=j4p.execute(request);} catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @TO@ MethodDeclaration@@public, static, void, MethodName:doContainerAction, J4pClient j4p, String action, String id,  @AT@ 3200 @LENGTH@ 295
------INS VariableDeclarationStatement@@J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id); @TO@ TryStatement@@try {  J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id);  J4pExecResponse response=j4p.execute(request);} catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @AT@ 3218 @LENGTH@ 87
---------INS SimpleType@@J4pExecRequest @TO@ VariableDeclarationStatement@@J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id); @AT@ 3218 @LENGTH@ 14
---------INS VariableDeclarationFragment@@request=createExecRequest(action + "Container(java.lang.String)",id) @TO@ VariableDeclarationStatement@@J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id); @AT@ 3233 @LENGTH@ 71
------------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=createExecRequest(action + "Container(java.lang.String)",id) @AT@ 3233 @LENGTH@ 7
------------INS MethodInvocation@@createExecRequest(action + "Container(java.lang.String)",id) @TO@ VariableDeclarationFragment@@request=createExecRequest(action + "Container(java.lang.String)",id) @AT@ 3243 @LENGTH@ 61
---------------INS SimpleName@@MethodName:createExecRequest:[action + "Container(java.lang.String)", id] @TO@ MethodInvocation@@createExecRequest(action + "Container(java.lang.String)",id) @AT@ 3243 @LENGTH@ 61
------------------INS InfixExpression@@action + "Container(java.lang.String)" @TO@ SimpleName@@MethodName:createExecRequest:[action + "Container(java.lang.String)", id] @AT@ 3261 @LENGTH@ 38
---------------------INS SimpleName@@action @TO@ InfixExpression@@action + "Container(java.lang.String)" @AT@ 3261 @LENGTH@ 6
---------------------INS Operator@@+ @TO@ InfixExpression@@action + "Container(java.lang.String)" @AT@ 3267 @LENGTH@ 1
---------------------INS StringLiteral@@"Container(java.lang.String)" @TO@ InfixExpression@@action + "Container(java.lang.String)" @AT@ 3270 @LENGTH@ 29
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:createExecRequest:[action + "Container(java.lang.String)", id] @AT@ 3301 @LENGTH@ 2
------INS VariableDeclarationStatement@@J4pExecResponse response=j4p.execute(request); @TO@ TryStatement@@try {  J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id);  J4pExecResponse response=j4p.execute(request);} catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @AT@ 3318 @LENGTH@ 48
---------INS SimpleType@@J4pExecResponse @TO@ VariableDeclarationStatement@@J4pExecResponse response=j4p.execute(request); @AT@ 3318 @LENGTH@ 15
---------INS VariableDeclarationFragment@@response=j4p.execute(request) @TO@ VariableDeclarationStatement@@J4pExecResponse response=j4p.execute(request); @AT@ 3334 @LENGTH@ 31
------------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=j4p.execute(request) @AT@ 3334 @LENGTH@ 8
------------INS MethodInvocation@@j4p.execute(request) @TO@ VariableDeclarationFragment@@response=j4p.execute(request) @AT@ 3345 @LENGTH@ 20
---------------INS SimpleName@@Name:j4p @TO@ MethodInvocation@@j4p.execute(request) @AT@ 3345 @LENGTH@ 3
---------------INS SimpleName@@MethodName:execute:[request] @TO@ MethodInvocation@@j4p.execute(request) @AT@ 3349 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:execute:[request] @AT@ 3357 @LENGTH@ 7
------INS CatchClause@@catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @TO@ TryStatement@@try {  J4pExecRequest request=createExecRequest(action + "Container(java.lang.String)",id);  J4pExecResponse response=j4p.execute(request);} catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @AT@ 3377 @LENGTH@ 118
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @AT@ 3384 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3384 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3394 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Failed to " + action + " container "+ id,e) @TO@ CatchClause@@catch (Exception e) {  throw new RuntimeException("Failed to " + action + " container "+ id,e);} @AT@ 3411 @LENGTH@ 74
------------INS ClassInstanceCreation@@RuntimeException["Failed to " + action + " container "+ id, e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Failed to " + action + " container "+ id,e) @AT@ 3417 @LENGTH@ 67
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Failed to " + action + " container "+ id, e] @AT@ 3417 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Failed to " + action + " container "+ id, e] @AT@ 3421 @LENGTH@ 16
---------------INS InfixExpression@@"Failed to " + action + " container "+ id @TO@ ClassInstanceCreation@@RuntimeException["Failed to " + action + " container "+ id, e] @AT@ 3438 @LENGTH@ 42
------------------INS StringLiteral@@"Failed to " @TO@ InfixExpression@@"Failed to " + action + " container "+ id @AT@ 3438 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to " + action + " container "+ id @AT@ 3450 @LENGTH@ 1
------------------INS SimpleName@@action @TO@ InfixExpression@@"Failed to " + action + " container "+ id @AT@ 3453 @LENGTH@ 6
------------------INS StringLiteral@@" container " @TO@ InfixExpression@@"Failed to " + action + " container "+ id @AT@ 3462 @LENGTH@ 13
------------------INS SimpleName@@id @TO@ InfixExpression@@"Failed to " + action + " container "+ id @AT@ 3478 @LENGTH@ 2
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException["Failed to " + action + " container "+ id, e] @AT@ 3482 @LENGTH@ 1


UPD TypeDeclaration@@[public]XmlSignatureHelper,  @TO@ [public, final]XmlSignatureHelper,  @AT@ 2531 @LENGTH@ 16177
---INS Modifier@@final @TO@ TypeDeclaration@@[public]XmlSignatureHelper,  @AT@ 2538 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4737 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 4737 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 4737 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 4745 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 4764 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.message(0).body(String.class).isEqualTo("") @TO@ MethodInvocation:mock.message(0).body(String.class).isEqualTo("Hello World") @AT@ 1673 @LENGTH@ 49
---UPD MethodInvocation@@mock.message(0).body(String.class).isEqualTo("") @TO@ mock.message(0).body(String.class).isEqualTo("Hello World") @AT@ 1673 @LENGTH@ 48
------UPD SimpleName@@MethodName:isEqualTo:[""] @TO@ MethodName:isEqualTo:["Hello World"] @AT@ 1708 @LENGTH@ 13
---------UPD StringLiteral@@"" @TO@ "Hello World" @AT@ 1718 @LENGTH@ 2


UPD VariableDeclarationStatement@@File timestampFile=new File(historyDir,CommonAttributes.TIMESTAMP); @TO@ File timestampFile=new File(historyDir,Constants.TIMESTAMP); @AT@ 3439 @LENGTH@ 70
---UPD VariableDeclarationFragment@@timestampFile=new File(historyDir,CommonAttributes.TIMESTAMP) @TO@ timestampFile=new File(historyDir,Constants.TIMESTAMP) @AT@ 3444 @LENGTH@ 64
------UPD ClassInstanceCreation@@File[historyDir, CommonAttributes.TIMESTAMP] @TO@ File[historyDir, Constants.TIMESTAMP] @AT@ 3460 @LENGTH@ 48
---------UPD QualifiedName@@CommonAttributes.TIMESTAMP @TO@ Constants.TIMESTAMP @AT@ 3481 @LENGTH@ 26
------------UPD SimpleName@@CommonAttributes @TO@ Constants @AT@ 3481 @LENGTH@ 16


UPD IfStatement@@if (type.isInstance(pair.getClass())) {  answer.put(pair.getName(),type.cast(pair.getClass()));} @TO@ if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @AT@ 2716 @LENGTH@ 133
---INS InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @TO@ IfStatement@@if (type.isInstance(pair.getClass())) {  answer.put(pair.getName(),type.cast(pair.getClass()));} @AT@ 2720 @LENGTH@ 78
------MOV MethodInvocation@@type.isInstance(pair.getClass()) @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 2720 @LENGTH@ 32
------INS Operator@@|| @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 2752 @LENGTH@ 2
------INS MethodInvocation@@type.getName().equals(pair.getClassName()) @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 2756 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 2756 @LENGTH@ 14
---------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 2756 @LENGTH@ 4
---------INS SimpleName@@MethodName:equals:[pair.getClassName()] @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 2771 @LENGTH@ 27
------------INS MethodInvocation@@pair.getClassName() @TO@ SimpleName@@MethodName:equals:[pair.getClassName()] @AT@ 2778 @LENGTH@ 19
---------------INS SimpleName@@Name:pair @TO@ MethodInvocation@@pair.getClassName() @AT@ 2778 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getClassName:[] @TO@ MethodInvocation@@pair.getClassName() @AT@ 2783 @LENGTH@ 14
---UPD Block@@ThenBody:{  answer.put(pair.getName(),type.cast(pair.getClass()));} @TO@ ThenBody:{  Object instance=context.lookup(pair.getName());  answer.put(pair.getName(),type.cast(instance));} @AT@ 2754 @LENGTH@ 95
------UPD ExpressionStatement@@MethodInvocation:answer.put(pair.getName(),type.cast(pair.getClass())) @TO@ MethodInvocation:answer.put(pair.getName(),type.cast(instance)) @AT@ 2776 @LENGTH@ 55
---------UPD MethodInvocation@@answer.put(pair.getName(),type.cast(pair.getClass())) @TO@ answer.put(pair.getName(),type.cast(instance)) @AT@ 2776 @LENGTH@ 54
------------UPD SimpleName@@MethodName:put:[pair.getName(), type.cast(pair.getClass())] @TO@ MethodName:put:[pair.getName(), type.cast(instance)] @AT@ 2783 @LENGTH@ 47
---------------UPD MethodInvocation@@type.cast(pair.getClass()) @TO@ type.cast(instance) @AT@ 2803 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:cast:[pair.getClass()] @TO@ MethodName:cast:[instance] @AT@ 2808 @LENGTH@ 21
---------------------DEL MethodInvocation@@pair.getClass() @AT@ 2813 @LENGTH@ 15
------------------------DEL SimpleName@@Name:pair @AT@ 2813 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 2818 @LENGTH@ 10
---------------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:cast:[pair.getClass()] @AT@ 2929 @LENGTH@ 8
------INS VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @TO@ Block@@ThenBody:{  answer.put(pair.getName(),type.cast(pair.getClass()));} @AT@ 2822 @LENGTH@ 49
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @AT@ 2822 @LENGTH@ 6
---------INS VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @TO@ VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @AT@ 2829 @LENGTH@ 41
------------INS SimpleName@@instance @TO@ VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @AT@ 2829 @LENGTH@ 8
------------INS MethodInvocation@@context.lookup(pair.getName()) @TO@ VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @AT@ 2840 @LENGTH@ 30
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.lookup(pair.getName()) @AT@ 2840 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lookup:[pair.getName()] @TO@ MethodInvocation@@context.lookup(pair.getName()) @AT@ 2848 @LENGTH@ 22
------------------INS MethodInvocation@@pair.getName() @TO@ SimpleName@@MethodName:lookup:[pair.getName()] @AT@ 2855 @LENGTH@ 14
---------------------INS SimpleName@@Name:pair @TO@ MethodInvocation@@pair.getName() @AT@ 2855 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@pair.getName() @AT@ 2860 @LENGTH@ 9


UPD VariableDeclarationStatement@@final Policy privilizedPolicy=weavableClass.getAnnotation(Privilized.class).value(); @TO@ final Policy privilizedPolicy=Policy.valueOf(weavableClass.getAnnotation(Privilized.class).value()); @AT@ 2214 @LENGTH@ 86
---UPD VariableDeclarationFragment@@privilizedPolicy=weavableClass.getAnnotation(Privilized.class).value() @TO@ privilizedPolicy=Policy.valueOf(weavableClass.getAnnotation(Privilized.class).value()) @AT@ 2227 @LENGTH@ 72
------INS MethodInvocation@@Policy.valueOf(weavableClass.getAnnotation(Privilized.class).value()) @TO@ VariableDeclarationFragment@@privilizedPolicy=weavableClass.getAnnotation(Privilized.class).value() @AT@ 2246 @LENGTH@ 69
---------INS SimpleName@@Name:Policy @TO@ MethodInvocation@@Policy.valueOf(weavableClass.getAnnotation(Privilized.class).value()) @AT@ 2246 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[weavableClass.getAnnotation(Privilized.class).value()] @TO@ MethodInvocation@@Policy.valueOf(weavableClass.getAnnotation(Privilized.class).value()) @AT@ 2253 @LENGTH@ 62
------------MOV MethodInvocation@@weavableClass.getAnnotation(Privilized.class).value() @TO@ SimpleName@@MethodName:valueOf:[weavableClass.getAnnotation(Privilized.class).value()] @AT@ 2246 @LENGTH@ 53


DEL ReturnStatement@@MethodInvocation:transMap.get(trans) @AT@ 3075 @LENGTH@ 27
---DEL MethodInvocation@@transMap.get(trans) @AT@ 3082 @LENGTH@ 19
------DEL SimpleName@@Name:transMap @AT@ 3082 @LENGTH@ 8
------DEL SimpleName@@MethodName:get:[trans] @AT@ 3091 @LENGTH@ 10
---------DEL SimpleName@@trans @AT@ 3095 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:availableResolvers.get(scheme).resolve(pid,key,toSubstitute) @TO@ MethodInvocation:availableResolvers.get(scheme).resolve(configs,pid,key,toSubstitute) @AT@ 9506 @LENGTH@ 70
---UPD MethodInvocation@@availableResolvers.get(scheme).resolve(pid,key,toSubstitute) @TO@ availableResolvers.get(scheme).resolve(configs,pid,key,toSubstitute) @AT@ 9513 @LENGTH@ 62
------UPD SimpleName@@MethodName:resolve:[pid, key, toSubstitute] @TO@ MethodName:resolve:[configs, pid, key, toSubstitute] @AT@ 9544 @LENGTH@ 31
---------INS SimpleName@@configs @TO@ SimpleName@@MethodName:resolve:[pid, key, toSubstitute] @AT@ 9552 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, Log, [LOG=LogFactory.getLog(TestLdap.class)] @TO@ private, static, final, Log, [LOG=LogFactory.getLog(SchemaToJavaAdITest.class)] @AT@ 1463 @LENGTH@ 65
---UPD VariableDeclarationFragment@@LOG=LogFactory.getLog(TestLdap.class) @TO@ LOG=LogFactory.getLog(SchemaToJavaAdITest.class) @AT@ 1488 @LENGTH@ 39
------UPD MethodInvocation@@LogFactory.getLog(TestLdap.class) @TO@ LogFactory.getLog(SchemaToJavaAdITest.class) @AT@ 1494 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getLog:[TestLdap.class] @TO@ MethodName:getLog:[SchemaToJavaAdITest.class] @AT@ 1505 @LENGTH@ 22
------------UPD TypeLiteral@@TestLdap.class @TO@ SchemaToJavaAdITest.class @AT@ 1512 @LENGTH@ 14


UPD IfStatement@@if (service.requiresReload()) {  throw MESSAGES.serverRequiresReload();} @TO@ if (service.requiresRestart()) {  throw MESSAGES.serverRequiresRestart();} @AT@ 2533 @LENGTH@ 92
---UPD MethodInvocation@@service.requiresReload() @TO@ service.requiresRestart() @AT@ 2537 @LENGTH@ 24
------UPD SimpleName@@MethodName:requiresReload:[] @TO@ MethodName:requiresRestart:[] @AT@ 2545 @LENGTH@ 16
---UPD Block@@ThenBody:{  throw MESSAGES.serverRequiresReload();} @TO@ ThenBody:{  throw MESSAGES.serverRequiresRestart();} @AT@ 2563 @LENGTH@ 62
------UPD ThrowStatement@@MethodInvocation:MESSAGES.serverRequiresReload() @TO@ MethodInvocation:MESSAGES.serverRequiresRestart() @AT@ 2577 @LENGTH@ 38
---------UPD MethodInvocation@@MESSAGES.serverRequiresReload() @TO@ MESSAGES.serverRequiresRestart() @AT@ 2583 @LENGTH@ 31
------------UPD SimpleName@@MethodName:serverRequiresReload:[] @TO@ MethodName:serverRequiresRestart:[] @AT@ 2592 @LENGTH@ 22


UPD IfStatement@@if (!running) {  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_SUBMIT_TO_RUNNING);  console.printInfo("Status: Running\n");  running=true;} @TO@ if (!running) {  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_SUBMIT_TO_RUNNING);  console.printInfo("Status: Running\n");  for (  String s : progressMap.keySet()) {    perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);  }  running=true;} @AT@ 3427 @LENGTH@ 196
---UPD Block@@ThenBody:{  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_SUBMIT_TO_RUNNING);  console.printInfo("Status: Running\n");  running=true;} @TO@ ThenBody:{  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_SUBMIT_TO_RUNNING);  console.printInfo("Status: Running\n");  for (  String s : progressMap.keySet()) {    perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);  }  running=true;} @AT@ 3441 @LENGTH@ 182
------INS EnhancedForStatement@@for (String s : progressMap.keySet()) {  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);} @TO@ Block@@ThenBody:{  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_SUBMIT_TO_RUNNING);  console.printInfo("Status: Running\n");  running=true;} @AT@ 3594 @LENGTH@ 138
---------INS SingleVariableDeclaration@@String s @TO@ EnhancedForStatement@@for (String s : progressMap.keySet()) {  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);} @AT@ 3599 @LENGTH@ 8
------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 3599 @LENGTH@ 6
------------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 3606 @LENGTH@ 1
---------INS MethodInvocation@@progressMap.keySet() @TO@ EnhancedForStatement@@for (String s : progressMap.keySet()) {  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);} @AT@ 3609 @LENGTH@ 20
------------INS SimpleName@@Name:progressMap @TO@ MethodInvocation@@progressMap.keySet() @AT@ 3609 @LENGTH@ 11
------------INS SimpleName@@MethodName:keySet:[] @TO@ MethodInvocation@@progressMap.keySet() @AT@ 3621 @LENGTH@ 8
---------INS ExpressionStatement@@MethodInvocation:perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s) @TO@ EnhancedForStatement@@for (String s : progressMap.keySet()) {  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s);} @AT@ 3649 @LENGTH@ 67
------------INS MethodInvocation@@perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s) @TO@ ExpressionStatement@@MethodInvocation:perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s) @AT@ 3649 @LENGTH@ 66
---------------INS SimpleName@@Name:perfLogger @TO@ MethodInvocation@@perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s) @AT@ 3649 @LENGTH@ 10
---------------INS SimpleName@@MethodName:PerfLogBegin:[CLASS_NAME, PerfLogger.TEZ_RUN_VERTEX + s] @TO@ MethodInvocation@@perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_RUN_VERTEX + s) @AT@ 3660 @LENGTH@ 55
------------------INS SimpleName@@CLASS_NAME @TO@ SimpleName@@MethodName:PerfLogBegin:[CLASS_NAME, PerfLogger.TEZ_RUN_VERTEX + s] @AT@ 3673 @LENGTH@ 10
------------------INS InfixExpression@@PerfLogger.TEZ_RUN_VERTEX + s @TO@ SimpleName@@MethodName:PerfLogBegin:[CLASS_NAME, PerfLogger.TEZ_RUN_VERTEX + s] @AT@ 3685 @LENGTH@ 29
---------------------INS QualifiedName@@PerfLogger.TEZ_RUN_VERTEX @TO@ InfixExpression@@PerfLogger.TEZ_RUN_VERTEX + s @AT@ 3685 @LENGTH@ 25
------------------------INS SimpleName@@PerfLogger @TO@ QualifiedName@@PerfLogger.TEZ_RUN_VERTEX @AT@ 3685 @LENGTH@ 10
------------------------INS SimpleName@@TEZ_RUN_VERTEX @TO@ QualifiedName@@PerfLogger.TEZ_RUN_VERTEX @AT@ 3696 @LENGTH@ 14
---------------------INS Operator@@+ @TO@ InfixExpression@@PerfLogger.TEZ_RUN_VERTEX + s @AT@ 3710 @LENGTH@ 1
---------------------INS SimpleName@@s @TO@ InfixExpression@@PerfLogger.TEZ_RUN_VERTEX + s @AT@ 3713 @LENGTH@ 1


UPD TryStatement@@try {  if (waitForProvisioning) {    Provision.waitForContainerStatus(containers,provisionTimeOut);  }  if (assertProvisioningResult) {    Provision.assertSuccess(containers,provisionTimeOut);  }} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  if (waitForProvisioning) {    Provision.containerStatus(containers,provisionTimeOut);  }  if (assertProvisioningResult) {    Provision.provisioningSuccess(containers,provisionTimeOut);  }} catch (Exception e) {  throw new FabricException(e);} @AT@ 8334 @LENGTH@ 387
---UPD IfStatement@@if (waitForProvisioning) {  Provision.waitForContainerStatus(containers,provisionTimeOut);} @TO@ if (waitForProvisioning) {  Provision.containerStatus(containers,provisionTimeOut);} @AT@ 8356 @LENGTH@ 128
------UPD Block@@ThenBody:{  Provision.waitForContainerStatus(containers,provisionTimeOut);} @TO@ ThenBody:{  Provision.containerStatus(containers,provisionTimeOut);} @AT@ 8381 @LENGTH@ 103
---------UPD ExpressionStatement@@MethodInvocation:Provision.waitForContainerStatus(containers,provisionTimeOut) @TO@ MethodInvocation:Provision.containerStatus(containers,provisionTimeOut) @AT@ 8403 @LENGTH@ 63
------------UPD MethodInvocation@@Provision.waitForContainerStatus(containers,provisionTimeOut) @TO@ Provision.containerStatus(containers,provisionTimeOut) @AT@ 8403 @LENGTH@ 62
---------------UPD SimpleName@@MethodName:waitForContainerStatus:[containers, provisionTimeOut] @TO@ MethodName:containerStatus:[containers, provisionTimeOut] @AT@ 8413 @LENGTH@ 52
---UPD IfStatement@@if (assertProvisioningResult) {  Provision.assertSuccess(containers,provisionTimeOut);} @TO@ if (assertProvisioningResult) {  Provision.provisioningSuccess(containers,provisionTimeOut);} @AT@ 8501 @LENGTH@ 124
------UPD Block@@ThenBody:{  Provision.assertSuccess(containers,provisionTimeOut);} @TO@ ThenBody:{  Provision.provisioningSuccess(containers,provisionTimeOut);} @AT@ 8531 @LENGTH@ 94
---------UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(containers,provisionTimeOut) @TO@ MethodInvocation:Provision.provisioningSuccess(containers,provisionTimeOut) @AT@ 8553 @LENGTH@ 54
------------UPD MethodInvocation@@Provision.assertSuccess(containers,provisionTimeOut) @TO@ Provision.provisioningSuccess(containers,provisionTimeOut) @AT@ 8553 @LENGTH@ 53
---------------UPD SimpleName@@MethodName:assertSuccess:[containers, provisionTimeOut] @TO@ MethodName:provisioningSuccess:[containers, provisionTimeOut] @AT@ 8563 @LENGTH@ 43


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[public]DefaultTypeConverter, BaseTypeConverterRegistry @AT@ 1498 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1498 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1505 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1513 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1535 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1542 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(discoverers.get(1).getClass().getName()).isEqualTo("org.springframework.core.DefaultParameterNameDiscoverer") @TO@ MethodInvocation:assertThat(discoverers.get(2).getClass().getName()).isEqualTo("org.springframework.core.DefaultParameterNameDiscoverer") @AT@ 5269 @LENGTH@ 121
---UPD MethodInvocation@@assertThat(discoverers.get(1).getClass().getName()).isEqualTo("org.springframework.core.DefaultParameterNameDiscoverer") @TO@ assertThat(discoverers.get(2).getClass().getName()).isEqualTo("org.springframework.core.DefaultParameterNameDiscoverer") @AT@ 5269 @LENGTH@ 120
------UPD MethodInvocation@@MethodName:assertThat:[discoverers.get(1).getClass().getName()] @TO@ MethodName:assertThat:[discoverers.get(2).getClass().getName()] @AT@ 5269 @LENGTH@ 51
---------UPD MethodInvocation@@discoverers.get(1).getClass().getName() @TO@ discoverers.get(2).getClass().getName() @AT@ 5280 @LENGTH@ 39
------------UPD MethodInvocation@@MethodName:get:[1] @TO@ MethodName:get:[2] @AT@ 5280 @LENGTH@ 18
---------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 5296 @LENGTH@ 1


UPD IfStatement@@if (stopServices) {  final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);  for (  final Endpoint ep : dep.getService().getEndpoints()) {    EndpointService.uninstall(ep,unit);  }} else {  super.stop(dep);} @TO@ if (stopServices) {  final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);  EndpointService.uninstall(ep,unit);} @AT@ 2349 @LENGTH@ 304


UPD ReturnStatement@@MethodInvocation:current.getPatchIDs() @TO@ ClassInstanceCreation:new ArrayList<String>(patchIds) @AT@ 1805 @LENGTH@ 29
---INS ClassInstanceCreation@@ArrayList<String>[patchIds] @TO@ ReturnStatement@@MethodInvocation:current.getPatchIDs() @AT@ 1797 @LENGTH@ 31
------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1797 @LENGTH@ 3
------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1801 @LENGTH@ 17
---------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 1801 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 1811 @LENGTH@ 6
------INS SimpleName@@patchIds @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1819 @LENGTH@ 8
---DEL MethodInvocation@@current.getPatchIDs() @AT@ 1812 @LENGTH@ 21
------DEL SimpleName@@Name:current @AT@ 1812 @LENGTH@ 7
------DEL SimpleName@@MethodName:getPatchIDs:[] @AT@ 1820 @LENGTH@ 13


UPD TypeDeclaration@@[private, static]Bean, [BeanMBean] @TO@ [public, static]Bean, [BeanMBean] @AT@ 38697 @LENGTH@ 256
---UPD Modifier@@private @TO@ public @AT@ 38697 @LENGTH@ 7


INS FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @TO@ TypeDeclaration@@[public, final]PatchUtils,  @AT@ 9737 @LENGTH@ 69
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9737 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9745 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9752 @LENGTH@ 5
---INS ArrayType@@char[] @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9758 @LENGTH@ 6
------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 9758 @LENGTH@ 4
---INS VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @TO@ FieldDeclaration@@private, static, final, char[], [table="0123456789abcdef".toCharArray()] @AT@ 9765 @LENGTH@ 40
------INS SimpleName@@table @TO@ VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @AT@ 9765 @LENGTH@ 5
------INS MethodInvocation@@"0123456789abcdef".toCharArray() @TO@ VariableDeclarationFragment@@table="0123456789abcdef".toCharArray() @AT@ 9773 @LENGTH@ 32
---------INS StringLiteral@@"0123456789abcdef" @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 9773 @LENGTH@ 18
---------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 9792 @LENGTH@ 13


UPD IfStatement@@if (log.isDebugEnabled()) {  log.debug("response has " + allocatedContainers.size() + " new containers");} @TO@ if (log.isDebugEnabled()) {  log.debug("response has " + allocatedContainers.size() + " new containers");  for (  Container c : allocatedContainers) {    log.debug("new container: " + c.getId());  }} @AT@ 5092 @LENGTH@ 112
---UPD Block@@ThenBody:{  log.debug("response has " + allocatedContainers.size() + " new containers");} @TO@ ThenBody:{  log.debug("response has " + allocatedContainers.size() + " new containers");  for (  Container c : allocatedContainers) {    log.debug("new container: " + c.getId());  }} @AT@ 5117 @LENGTH@ 87
------INS EnhancedForStatement@@for (Container c : allocatedContainers) {  log.debug("new container: " + c.getId());} @TO@ Block@@ThenBody:{  log.debug("response has " + allocatedContainers.size() + " new containers");} @AT@ 5204 @LENGTH@ 94
---------INS SingleVariableDeclaration@@Container c @TO@ EnhancedForStatement@@for (Container c : allocatedContainers) {  log.debug("new container: " + c.getId());} @AT@ 5209 @LENGTH@ 11
------------INS SimpleType@@Container @TO@ SingleVariableDeclaration@@Container c @AT@ 5209 @LENGTH@ 9
------------INS SimpleName@@c @TO@ SingleVariableDeclaration@@Container c @AT@ 5219 @LENGTH@ 1
---------INS SimpleName@@allocatedContainers @TO@ EnhancedForStatement@@for (Container c : allocatedContainers) {  log.debug("new container: " + c.getId());} @AT@ 5223 @LENGTH@ 19
---------INS ExpressionStatement@@MethodInvocation:log.debug("new container: " + c.getId()) @TO@ EnhancedForStatement@@for (Container c : allocatedContainers) {  log.debug("new container: " + c.getId());} @AT@ 5251 @LENGTH@ 41
------------INS MethodInvocation@@log.debug("new container: " + c.getId()) @TO@ ExpressionStatement@@MethodInvocation:log.debug("new container: " + c.getId()) @AT@ 5251 @LENGTH@ 40
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.debug("new container: " + c.getId()) @AT@ 5251 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["new container: " + c.getId()] @TO@ MethodInvocation@@log.debug("new container: " + c.getId()) @AT@ 5255 @LENGTH@ 36
------------------INS InfixExpression@@"new container: " + c.getId() @TO@ SimpleName@@MethodName:debug:["new container: " + c.getId()] @AT@ 5261 @LENGTH@ 29
---------------------INS StringLiteral@@"new container: " @TO@ InfixExpression@@"new container: " + c.getId() @AT@ 5261 @LENGTH@ 17
---------------------INS Operator@@+ @TO@ InfixExpression@@"new container: " + c.getId() @AT@ 5278 @LENGTH@ 1
---------------------INS MethodInvocation@@c.getId() @TO@ InfixExpression@@"new container: " + c.getId() @AT@ 5281 @LENGTH@ 9
------------------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getId() @AT@ 5281 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@c.getId() @AT@ 5283 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 7624 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 7624 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 7631 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 7636 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 7664 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 7664 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 7670 @LENGTH@ 21


UPD TypeDeclaration@@[public]ZkConfigTest, AbstractZkConnectorTestSupport @TO@ [@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests"), public]ZkConfigTest, AbstractZkConnectorTestSupport @AT@ 1027 @LENGTH@ 1331
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests") @TO@ TypeDeclaration@@[public]ZkConfigTest, AbstractZkConnectorTestSupport @AT@ 1052 @LENGTH@ 57


DEL ExpressionStatement@@MethodInvocation:System.out.println("Init upgrade handler") @AT@ 2167 @LENGTH@ 43
---DEL MethodInvocation@@System.out.println("Init upgrade handler") @AT@ 2167 @LENGTH@ 42
------DEL QualifiedName@@Name:System.out @AT@ 2167 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["Init upgrade handler"] @AT@ 2178 @LENGTH@ 31
---------DEL StringLiteral@@"Init upgrade handler" @AT@ 2186 @LENGTH@ 22


INS MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @TO@ TypeDeclaration@@[public]IoUtils,  @AT@ 6727 @LENGTH@ 202
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6727 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6734 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6741 @LENGTH@ 4
---INS SimpleName@@MethodName:newFile @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6746 @LENGTH@ 7
---INS SingleVariableDeclaration@@File baseDir @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6754 @LENGTH@ 12
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File baseDir @AT@ 6754 @LENGTH@ 4
------INS SimpleName@@baseDir @TO@ SingleVariableDeclaration@@File baseDir @AT@ 6759 @LENGTH@ 7
---INS SingleVariableDeclaration@@String... segments @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6768 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... segments @AT@ 6768 @LENGTH@ 6
------INS SimpleName@@segments @TO@ SingleVariableDeclaration@@String... segments @AT@ 6778 @LENGTH@ 8
---INS VariableDeclarationStatement@@File f=baseDir; @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6798 @LENGTH@ 17
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File f=baseDir; @AT@ 6798 @LENGTH@ 4
------INS VariableDeclarationFragment@@f=baseDir @TO@ VariableDeclarationStatement@@File f=baseDir; @AT@ 6803 @LENGTH@ 11
---------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f=baseDir @AT@ 6803 @LENGTH@ 1
---------INS SimpleName@@baseDir @TO@ VariableDeclarationFragment@@f=baseDir @AT@ 6807 @LENGTH@ 7
---INS EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6824 @LENGTH@ 81
------INS SingleVariableDeclaration@@String segment @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6829 @LENGTH@ 14
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String segment @AT@ 6829 @LENGTH@ 6
---------INS SimpleName@@segment @TO@ SingleVariableDeclaration@@String segment @AT@ 6836 @LENGTH@ 7
------INS SimpleName@@segments @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6846 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:f=new File(f,segment) @TO@ EnhancedForStatement@@for (String segment : segments) {  f=new File(f,segment);} @AT@ 6870 @LENGTH@ 25
---------INS Assignment@@f=new File(f,segment) @TO@ ExpressionStatement@@Assignment:f=new File(f,segment) @AT@ 6870 @LENGTH@ 24
------------INS SimpleName@@f @TO@ Assignment@@f=new File(f,segment) @AT@ 6870 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@f=new File(f,segment) @AT@ 6871 @LENGTH@ 1
------------INS ClassInstanceCreation@@File[f, segment] @TO@ Assignment@@f=new File(f,segment) @AT@ 6874 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6874 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6878 @LENGTH@ 4
---------------INS SimpleName@@f @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6883 @LENGTH@ 1
---------------INS SimpleName@@segment @TO@ ClassInstanceCreation@@File[f, segment] @AT@ 6886 @LENGTH@ 7
---INS ReturnStatement@@SimpleName:f @TO@ MethodDeclaration@@public, static, File, MethodName:newFile, File baseDir, String... segments,  @AT@ 6914 @LENGTH@ 9
------INS SimpleName@@f @TO@ ReturnStatement@@SimpleName:f @AT@ 6921 @LENGTH@ 1


UPD IfStatement@@if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @TO@ if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));  } else {    assertThat("stderr file is not empty: " + content,file.length(),is(0l));  }} @AT@ 3390 @LENGTH@ 342
---UPD Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @TO@ ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));  } else {    assertThat("stderr file is not empty: " + content,file.length(),is(0l));  }} @AT@ 3429 @LENGTH@ 303
------INS IfStatement@@if (content.contains("Unable to load realm info from SCDynamicStore")) {  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} else {  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @TO@ Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3610 @LENGTH@ 409
---------INS MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @TO@ IfStatement@@if (content.contains("Unable to load realm info from SCDynamicStore")) {  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} else {  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3614 @LENGTH@ 65
------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @AT@ 3614 @LENGTH@ 7
------------INS SimpleName@@MethodName:contains:["Unable to load realm info from SCDynamicStore"] @TO@ MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @AT@ 3622 @LENGTH@ 57
---------------INS StringLiteral@@"Unable to load realm info from SCDynamicStore" @TO@ SimpleName@@MethodName:contains:["Unable to load realm info from SCDynamicStore"] @AT@ 3631 @LENGTH@ 47
---------INS Block@@ThenBody:{  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} @TO@ IfStatement@@if (content.contains("Unable to load realm info from SCDynamicStore")) {  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} else {  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3681 @LENGTH@ 201
------------INS ExpressionStatement@@MethodInvocation:assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l)) @TO@ Block@@ThenBody:{  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} @AT@ 3794 @LENGTH@ 82
---------------INS MethodInvocation@@assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l)) @TO@ ExpressionStatement@@MethodInvocation:assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l)) @AT@ 3794 @LENGTH@ 81
------------------INS SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @TO@ MethodInvocation@@assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l)) @AT@ 3794 @LENGTH@ 81
---------------------INS InfixExpression@@"stderr file is not empty: " + content @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3805 @LENGTH@ 38
------------------------INS StringLiteral@@"stderr file is not empty: " @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3805 @LENGTH@ 28
------------------------INS Operator@@+ @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3833 @LENGTH@ 1
------------------------INS SimpleName@@content @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3836 @LENGTH@ 7
---------------------INS MethodInvocation@@file.length() @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3845 @LENGTH@ 13
------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.length() @AT@ 3845 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file.length() @AT@ 3850 @LENGTH@ 8
---------------------INS MethodInvocation@@lessThan(100l) @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3860 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------INS SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @TO@ MethodInvocation@@assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l)) @AT@ 3794 @LENGTH@ 81
---------------------INS InfixExpression@@"stderr file is not empty: " + content @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3805 @LENGTH@ 38
------------------------INS StringLiteral@@"stderr file is not empty: " @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3805 @LENGTH@ 28
------------------------INS Operator@@+ @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3833 @LENGTH@ 1
------------------------INS SimpleName@@content @TO@ InfixExpression@@"stderr file is not empty: " + content @AT@ 3836 @LENGTH@ 7
---------------------INS MethodInvocation@@file.length() @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3845 @LENGTH@ 13
------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.length() @AT@ 3845 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file.length() @AT@ 3850 @LENGTH@ 8
---------------------INS MethodInvocation@@lessThan(100l) @TO@ SimpleName@@MethodName:assertThat:["stderr file is not empty: " + content, file.length(), lessThan(100l)] @AT@ 3860 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 3860 @LENGTH@ 14
---------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 3869 @LENGTH@ 4
---------INS Block@@ElseBody:{  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @TO@ IfStatement@@if (content.contains("Unable to load realm info from SCDynamicStore")) {  assertThat("stderr file is not empty: " + content,file.length(),lessThan(100l));} else {  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3888 @LENGTH@ 131
------------MOV ExpressionStatement@@MethodInvocation:assertThat("stderr file is not empty: " + content,file.length(),is(0l)) @TO@ Block@@ElseBody:{  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3653 @LENGTH@ 74
------------MOV ExpressionStatement@@MethodInvocation:assertThat("stderr file is not empty: " + content,file.length(),is(0l)) @TO@ Block@@ElseBody:{  assertThat("stderr file is not empty: " + content,file.length(),is(0l));} @AT@ 3653 @LENGTH@ 74


UPD IfStatement@@if ("foo".equals(req.getHeader("Upgrade"))) {  ComponentInterceptor.resetInterceptions();  req.upgrade(TestHttpUpgradeHandler.class);  resp.setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);  resp.setHeader("Upgrade","foo");  resp.setHeader("Connection","Upgrade");  System.out.println("Upgrade request processed");} else {  resp.setStatus(500);} @TO@ if ("foo".equals(req.getHeader("Upgrade"))) {  ComponentInterceptor.resetInterceptions();  req.upgrade(TestHttpUpgradeHandler.class);  resp.setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);  resp.setHeader("Upgrade","foo");  resp.setHeader("Connection","Upgrade");} else {  resp.setStatus(500);} @AT@ 1717 @LENGTH@ 447
---UPD Block@@ThenBody:{  ComponentInterceptor.resetInterceptions();  req.upgrade(TestHttpUpgradeHandler.class);  resp.setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);  resp.setHeader("Upgrade","foo");  resp.setHeader("Connection","Upgrade");  System.out.println("Upgrade request processed");} @TO@ ThenBody:{  ComponentInterceptor.resetInterceptions();  req.upgrade(TestHttpUpgradeHandler.class);  resp.setStatus(HttpServletResponse.SC_SWITCHING_PROTOCOLS);  resp.setHeader("Upgrade","foo");  resp.setHeader("Connection","Upgrade");} @AT@ 1761 @LENGTH@ 353
------DEL ExpressionStatement@@MethodInvocation:System.out.println("Upgrade request processed") @AT@ 2056 @LENGTH@ 48
---------DEL MethodInvocation@@System.out.println("Upgrade request processed") @AT@ 2056 @LENGTH@ 47
------------DEL QualifiedName@@Name:System.out @AT@ 2056 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:["Upgrade request processed"] @AT@ 2067 @LENGTH@ 36
---------------DEL StringLiteral@@"Upgrade request processed" @AT@ 2075 @LENGTH@ 27


UPD IfStatement@@if (message.contains("14807") || message.contains("14883")) {  throw e;} else if (message.contains("13456")) {  filtered.add(JmxInterfaceStringUtils.toDashCase(attributeName));} else {  throw new RuntimeException(e);} @TO@ if (message.contains("14807") || message.contains("14883") || message.contains("11340")) {  throw e;} else if (message.contains("13456")) {  filtered.add(JmxInterfaceStringUtils.toDashCase(attributeName));} else {  throw new RuntimeException(e);} @AT@ 8588 @LENGTH@ 325
---UPD InfixExpression@@message.contains("14807") || message.contains("14883") @TO@ message.contains("14807") || message.contains("14883") || message.contains("11340") @AT@ 8592 @LENGTH@ 54
------INS MethodInvocation@@message.contains("11340") @TO@ InfixExpression@@message.contains("14807") || message.contains("14883") @AT@ 8650 @LENGTH@ 25
---------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.contains("11340") @AT@ 8650 @LENGTH@ 7
---------INS SimpleName@@MethodName:contains:["11340"] @TO@ MethodInvocation@@message.contains("11340") @AT@ 8658 @LENGTH@ 17
------------INS StringLiteral@@"11340" @TO@ SimpleName@@MethodName:contains:["11340"] @AT@ 8667 @LENGTH@ 7


INS IfStatement@@if (results.isEmpty()) {  throw new NoSuchJobException("Job name: " + name + " not found.");} @TO@ MethodDeclaration@@public, List<Long>, MethodName:getRunningExecutions, String name, NoSuchJobException, JobSecurityException,  @AT@ 13845 @LENGTH@ 97
---INS MethodInvocation@@results.isEmpty() @TO@ IfStatement@@if (results.isEmpty()) {  throw new NoSuchJobException("Job name: " + name + " not found.");} @AT@ 13848 @LENGTH@ 17
------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.isEmpty() @AT@ 13848 @LENGTH@ 7
------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@results.isEmpty() @AT@ 13856 @LENGTH@ 9
---INS Block@@ThenBody:{  throw new NoSuchJobException("Job name: " + name + " not found.");} @TO@ IfStatement@@if (results.isEmpty()) {  throw new NoSuchJobException("Job name: " + name + " not found.");} @AT@ 13867 @LENGTH@ 75
------INS ThrowStatement@@ClassInstanceCreation:new NoSuchJobException("Job name: " + name + " not found.") @TO@ Block@@ThenBody:{  throw new NoSuchJobException("Job name: " + name + " not found.");} @AT@ 13872 @LENGTH@ 66
---------INS ClassInstanceCreation@@NoSuchJobException["Job name: " + name + " not found."] @TO@ ThrowStatement@@ClassInstanceCreation:new NoSuchJobException("Job name: " + name + " not found.") @AT@ 13878 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@NoSuchJobException["Job name: " + name + " not found."] @AT@ 13878 @LENGTH@ 3
------------INS SimpleType@@NoSuchJobException @TO@ ClassInstanceCreation@@NoSuchJobException["Job name: " + name + " not found."] @AT@ 13882 @LENGTH@ 18
------------INS InfixExpression@@"Job name: " + name + " not found." @TO@ ClassInstanceCreation@@NoSuchJobException["Job name: " + name + " not found."] @AT@ 13901 @LENGTH@ 35
---------------INS StringLiteral@@"Job name: " @TO@ InfixExpression@@"Job name: " + name + " not found." @AT@ 13901 @LENGTH@ 12
---------------INS Operator@@+ @TO@ InfixExpression@@"Job name: " + name + " not found." @AT@ 13913 @LENGTH@ 1
---------------INS SimpleName@@name @TO@ InfixExpression@@"Job name: " + name + " not found." @AT@ 13916 @LENGTH@ 4
---------------INS StringLiteral@@" not found." @TO@ InfixExpression@@"Job name: " + name + " not found." @AT@ 13923 @LENGTH@ 13


UPD FieldDeclaration@@private, long, [timeout=3000] @TO@ private, long, [timeout=30000] @AT@ 1507 @LENGTH@ 28
---UPD VariableDeclarationFragment@@timeout=3000 @TO@ timeout=30000 @AT@ 1520 @LENGTH@ 14
------UPD NumberLiteral@@3000 @TO@ 30000 @AT@ 1530 @LENGTH@ 4


UPD IfStatement@@if (!targetHash.equals(expected)) {  PatchLogger.ROOT_LOGGER.warnf("wrong content has for item (%s) ",item);} @TO@ if (!Arrays.equals(expected,targetHash)) {  PatchLogger.ROOT_LOGGER.warnf("wrong content has for item (%s) ",item);} @AT@ 2487 @LENGTH@ 227
---UPD PrefixExpression@@!targetHash.equals(expected) @TO@ !Arrays.equals(expected,targetHash) @AT@ 2490 @LENGTH@ 29
------UPD MethodInvocation@@targetHash.equals(expected) @TO@ Arrays.equals(expected,targetHash) @AT@ 2492 @LENGTH@ 27
---------UPD SimpleName@@Name:targetHash @TO@ Name:Arrays @AT@ 2492 @LENGTH@ 10
---------UPD SimpleName@@MethodName:equals:[expected] @TO@ MethodName:equals:[expected, targetHash] @AT@ 2503 @LENGTH@ 16
------------INS SimpleName@@targetHash @TO@ SimpleName@@MethodName:equals:[expected] @AT@ 2541 @LENGTH@ 10


UPD IfStatement@@if (page.getExceptionType() == null || page.getExceptionType().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass());} @TO@ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType()));} else if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @AT@ 26658 @LENGTH@ 411
---UPD InfixExpression@@page.getExceptionType() == null || page.getExceptionType().isEmpty() @TO@ page.getExceptionType() != null && !page.getExceptionType().isEmpty() @AT@ 26662 @LENGTH@ 68
------UPD InfixExpression@@page.getExceptionType() == null @TO@ page.getExceptionType() != null @AT@ 26662 @LENGTH@ 31
---------UPD Operator@@== @TO@ != @AT@ 26685 @LENGTH@ 2
------UPD Operator@@|| @TO@ && @AT@ 26693 @LENGTH@ 2
------INS PrefixExpression@@!page.getExceptionType().isEmpty() @TO@ InfixExpression@@page.getExceptionType() == null || page.getExceptionType().isEmpty() @AT@ 26697 @LENGTH@ 34
---------INS Operator@@! @TO@ PrefixExpression@@!page.getExceptionType().isEmpty() @AT@ 26697 @LENGTH@ 1
---------INS MethodInvocation@@page.getExceptionType().isEmpty() @TO@ PrefixExpression@@!page.getExceptionType().isEmpty() @AT@ 26698 @LENGTH@ 33
------------MOV MethodInvocation@@MethodName:getExceptionType:[] @TO@ MethodInvocation@@page.getExceptionType().isEmpty() @AT@ 26697 @LENGTH@ 23
------------MOV SimpleName@@Name:page @TO@ MethodInvocation@@page.getExceptionType().isEmpty() @AT@ 26697 @LENGTH@ 4
------------MOV SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@page.getExceptionType().isEmpty() @AT@ 26721 @LENGTH@ 9
------DEL MethodInvocation@@page.getExceptionType().isEmpty() @AT@ 26697 @LENGTH@ 33
---UPD Block@@ElseBody:{  errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass());} @TO@ ThenBody:{  errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType()));} @AT@ 26871 @LENGTH@ 198
------UPD ExpressionStatement@@Assignment:errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass()) @TO@ Assignment:errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType())) @AT@ 26897 @LENGTH@ 150
---------UPD Assignment@@errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass()) @TO@ errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType())) @AT@ 26897 @LENGTH@ 149
------------UPD ClassInstanceCreation@@ErrorPage[page.getLocation(), (Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass()] @TO@ ErrorPage[page.getLocation(), (Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType())] @AT@ 26909 @LENGTH@ 137
---------------UPD CastExpression@@(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass() @TO@ (Class<? extends Throwable>)module.getClassLoader().loadClass(page.getExceptionType()) @AT@ 26943 @LENGTH@ 102
------------------UPD MethodInvocation@@classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass() @TO@ module.getClassLoader().loadClass(page.getExceptionType()) @AT@ 26972 @LENGTH@ 73
---------------------INS MethodInvocation@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass() @AT@ 26834 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:loadClass:[page.getExceptionType()] @TO@ MethodInvocation@@classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass() @AT@ 26858 @LENGTH@ 34
------------------------INS MethodInvocation@@page.getExceptionType() @TO@ SimpleName@@MethodName:loadClass:[page.getExceptionType()] @AT@ 26868 @LENGTH@ 23
---------------------------MOV SimpleName@@Name:page @TO@ MethodInvocation@@page.getExceptionType() @AT@ 27004 @LENGTH@ 4
---------------------------MOV SimpleName@@MethodName:getExceptionType:[] @TO@ MethodInvocation@@page.getExceptionType() @AT@ 27009 @LENGTH@ 18
---------------------DEL MethodInvocation@@MethodName:classIndex:[page.getExceptionType()] @AT@ 26972 @LENGTH@ 56
------------------------DEL MethodInvocation@@page.getExceptionType() @AT@ 27004 @LENGTH@ 23
---------------------UPD SimpleName@@Name:classReflectionIndex @TO@ Name:module @AT@ 26972 @LENGTH@ 20
---------------------DEL SimpleName@@MethodName:getModuleClass:[] @AT@ 27029 @LENGTH@ 16
---INS Block@@ElseBody:if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @TO@ IfStatement@@if (page.getExceptionType() == null || page.getExceptionType().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation(),(Class<? extends Throwable>)classReflectionIndex.classIndex(page.getExceptionType()).getModuleClass());} @AT@ 26922 @LENGTH@ 298
------INS IfStatement@@if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @TO@ Block@@ElseBody:if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @AT@ 26922 @LENGTH@ 298
---------MOV Block@@ThenBody:{  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} @TO@ IfStatement@@if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @AT@ 26732 @LENGTH@ 133
---------INS InfixExpression@@page.getErrorCode() != null && !page.getErrorCode().isEmpty() @TO@ IfStatement@@if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @AT@ 26925 @LENGTH@ 61
------------INS InfixExpression@@page.getErrorCode() != null @TO@ InfixExpression@@page.getErrorCode() != null && !page.getErrorCode().isEmpty() @AT@ 26925 @LENGTH@ 27
---------------INS MethodInvocation@@page.getErrorCode() @TO@ InfixExpression@@page.getErrorCode() != null @AT@ 26925 @LENGTH@ 19
------------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getErrorCode() @AT@ 26925 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@page.getErrorCode() @AT@ 26930 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@page.getErrorCode() != null @AT@ 26944 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@page.getErrorCode() != null @AT@ 26948 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@page.getErrorCode() != null && !page.getErrorCode().isEmpty() @AT@ 26952 @LENGTH@ 2
------------INS PrefixExpression@@!page.getErrorCode().isEmpty() @TO@ InfixExpression@@page.getErrorCode() != null && !page.getErrorCode().isEmpty() @AT@ 26956 @LENGTH@ 30
---------------INS Operator@@! @TO@ PrefixExpression@@!page.getErrorCode().isEmpty() @AT@ 26956 @LENGTH@ 1
---------------INS MethodInvocation@@page.getErrorCode().isEmpty() @TO@ PrefixExpression@@!page.getErrorCode().isEmpty() @AT@ 26957 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@page.getErrorCode().isEmpty() @AT@ 26957 @LENGTH@ 19
------------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getErrorCode().isEmpty() @AT@ 26957 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@page.getErrorCode().isEmpty() @AT@ 26977 @LENGTH@ 9
---------INS Block@@ElseBody:{  errorPage=new ErrorPage(page.getLocation());} @TO@ IfStatement@@if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) {  errorPage=new ErrorPage(page.getLocation(),Integer.parseInt(page.getErrorCode()));} else {  errorPage=new ErrorPage(page.getLocation());} @AT@ 27126 @LENGTH@ 94
------------INS ExpressionStatement@@Assignment:errorPage=new ErrorPage(page.getLocation()) @TO@ Block@@ElseBody:{  errorPage=new ErrorPage(page.getLocation());} @AT@ 27152 @LENGTH@ 46
---------------INS Assignment@@errorPage=new ErrorPage(page.getLocation()) @TO@ ExpressionStatement@@Assignment:errorPage=new ErrorPage(page.getLocation()) @AT@ 27152 @LENGTH@ 45
------------------INS SimpleName@@errorPage @TO@ Assignment@@errorPage=new ErrorPage(page.getLocation()) @AT@ 27152 @LENGTH@ 9
------------------INS Operator@@= @TO@ Assignment@@errorPage=new ErrorPage(page.getLocation()) @AT@ 27161 @LENGTH@ 1
------------------INS ClassInstanceCreation@@ErrorPage[page.getLocation()] @TO@ Assignment@@errorPage=new ErrorPage(page.getLocation()) @AT@ 27164 @LENGTH@ 33
---------------------INS New@@new @TO@ ClassInstanceCreation@@ErrorPage[page.getLocation()] @AT@ 27164 @LENGTH@ 3
---------------------INS SimpleType@@ErrorPage @TO@ ClassInstanceCreation@@ErrorPage[page.getLocation()] @AT@ 27168 @LENGTH@ 9
---------------------INS MethodInvocation@@page.getLocation() @TO@ ClassInstanceCreation@@ErrorPage[page.getLocation()] @AT@ 27178 @LENGTH@ 18
------------------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getLocation() @AT@ 27178 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getLocation:[] @TO@ MethodInvocation@@page.getLocation() @AT@ 27183 @LENGTH@ 13


INS MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @TO@ TypeDeclaration@@PluggableMBeanServerImpl, [PluggableMBeanServer] @AT@ 3479 @LENGTH@ 87
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3471 @LENGTH@ 7
---INS SimpleName@@MethodName:shouldLog @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3479 @LENGTH@ 9
---INS SingleVariableDeclaration@@boolean readOnly @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3489 @LENGTH@ 16
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean readOnly @AT@ 3489 @LENGTH@ 7
------INS SimpleName@@readOnly @TO@ SingleVariableDeclaration@@boolean readOnly @AT@ 3497 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:auditLoggerInfo.shouldLog(readOnly) @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3517 @LENGTH@ 43
------INS MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @TO@ ReturnStatement@@MethodInvocation:auditLoggerInfo.shouldLog(readOnly) @AT@ 3524 @LENGTH@ 35
---------INS SimpleName@@Name:auditLoggerInfo @TO@ MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @AT@ 3524 @LENGTH@ 15
---------INS SimpleName@@MethodName:shouldLog:[readOnly] @TO@ MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @AT@ 3540 @LENGTH@ 19
------------INS SimpleName@@readOnly @TO@ SimpleName@@MethodName:shouldLog:[readOnly] @AT@ 3550 @LENGTH@ 8


UPD VariableDeclarationStatement@@ModelNode connectorRefs=resource.getModel().get(CONNECTOR_REFS.getName()); @TO@ final ModelNode connectorRefs=resource.getModel().get(CONNECTOR_REFS.getName()); @AT@ 3506 @LENGTH@ 76
---INS Modifier@@final @TO@ VariableDeclarationStatement@@ModelNode connectorRefs=resource.getModel().get(CONNECTOR_REFS.getName()); @AT@ 3559 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new AuthorizationResult(AuthorizationResult.Decision.DENY,new ModelNode("Permission denied")) @TO@ ClassInstanceCreation:new AuthorizationResult(AuthorizationResult.Decision.DENY,new ModelNode(ControllerMessages.MESSAGES.permissionDenied())) @AT@ 5007 @LENGTH@ 102
---UPD ClassInstanceCreation@@AuthorizationResult[AuthorizationResult.Decision.DENY, new ModelNode("Permission denied")] @TO@ AuthorizationResult[AuthorizationResult.Decision.DENY, new ModelNode(ControllerMessages.MESSAGES.permissionDenied())] @AT@ 5014 @LENGTH@ 94
------UPD ClassInstanceCreation@@ModelNode["Permission denied"] @TO@ ModelNode[ControllerMessages.MESSAGES.permissionDenied()] @AT@ 5073 @LENGTH@ 34
---------DEL StringLiteral@@"Permission denied" @AT@ 5087 @LENGTH@ 19
---------INS MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @TO@ ClassInstanceCreation@@ModelNode["Permission denied"] @AT@ 5108 @LENGTH@ 46
------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @AT@ 5108 @LENGTH@ 27
------------INS SimpleName@@MethodName:permissionDenied:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.permissionDenied() @AT@ 5136 @LENGTH@ 18


INS IfStatement@@if (attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName())) {  return;} @TO@ MethodDeclaration@@private, void, MethodName:applyOperationToHornetQService, final OperationContext context, String name, String attributeName, ModelNode value, ServiceController<?> hqService,  @AT@ 6254 @LENGTH@ 163
---INS InfixExpression@@attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @TO@ IfStatement@@if (attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName())) {  return;} @AT@ 6257 @LENGTH@ 127
------INS MethodInvocation@@attributeName.equals(Common.CONNECTOR.getName()) @TO@ InfixExpression@@attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @AT@ 6257 @LENGTH@ 48
---------INS SimpleName@@Name:attributeName @TO@ MethodInvocation@@attributeName.equals(Common.CONNECTOR.getName()) @AT@ 6257 @LENGTH@ 13
---------INS SimpleName@@MethodName:equals:[Common.CONNECTOR.getName()] @TO@ MethodInvocation@@attributeName.equals(Common.CONNECTOR.getName()) @AT@ 6271 @LENGTH@ 34
------------INS MethodInvocation@@Common.CONNECTOR.getName() @TO@ SimpleName@@MethodName:equals:[Common.CONNECTOR.getName()] @AT@ 6278 @LENGTH@ 26
---------------INS QualifiedName@@Name:Common.CONNECTOR @TO@ MethodInvocation@@Common.CONNECTOR.getName() @AT@ 6278 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@Common.CONNECTOR.getName() @AT@ 6295 @LENGTH@ 9
------INS Operator@@|| @TO@ InfixExpression@@attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @AT@ 6305 @LENGTH@ 2
------INS MethodInvocation@@attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @TO@ InfixExpression@@attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @AT@ 6325 @LENGTH@ 59
---------INS SimpleName@@Name:attributeName @TO@ MethodInvocation@@attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @AT@ 6325 @LENGTH@ 13
---------INS SimpleName@@MethodName:equals:[Common.DISCOVERY_GROUP_NAME.getName()] @TO@ MethodInvocation@@attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName()) @AT@ 6339 @LENGTH@ 45
------------INS MethodInvocation@@Common.DISCOVERY_GROUP_NAME.getName() @TO@ SimpleName@@MethodName:equals:[Common.DISCOVERY_GROUP_NAME.getName()] @AT@ 6346 @LENGTH@ 37
---------------INS QualifiedName@@Name:Common.DISCOVERY_GROUP_NAME @TO@ MethodInvocation@@Common.DISCOVERY_GROUP_NAME.getName() @AT@ 6346 @LENGTH@ 27
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@Common.DISCOVERY_GROUP_NAME.getName() @AT@ 6374 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (attributeName.equals(Common.CONNECTOR.getName()) || attributeName.equals(Common.DISCOVERY_GROUP_NAME.getName())) {  return;} @AT@ 6386 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6400 @LENGTH@ 7


DEL MethodDeclaration@@public, static, String, MethodName:stripUrl, String url,  @AT@ 4179 @LENGTH@ 686
---DEL Modifier@@public @AT@ 4179 @LENGTH@ 6
---DEL Modifier@@static @AT@ 4186 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 4193 @LENGTH@ 6
---DEL SimpleName@@MethodName:stripUrl @AT@ 4200 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String url @AT@ 4209 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 4209 @LENGTH@ 6
------DEL SimpleName@@url @AT@ 4216 @LENGTH@ 3
---DEL VariableDeclarationStatement@@String strippedUrl=url; @AT@ 4231 @LENGTH@ 25
------DEL SimpleType@@String @AT@ 4231 @LENGTH@ 6
------DEL VariableDeclarationFragment@@strippedUrl=url @AT@ 4238 @LENGTH@ 17
---------DEL SimpleName@@strippedUrl @AT@ 4238 @LENGTH@ 11
---------DEL SimpleName@@url @AT@ 4252 @LENGTH@ 3
---DEL VariableDeclarationStatement@@Matcher matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl); @AT@ 4265 @LENGTH@ 64
------DEL SimpleType@@Matcher @AT@ 4265 @LENGTH@ 7
------DEL VariableDeclarationFragment@@matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl) @AT@ 4273 @LENGTH@ 55
---------DEL SimpleName@@matcher @AT@ 4273 @LENGTH@ 7
---------DEL MethodInvocation@@IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl) @AT@ 4283 @LENGTH@ 45
------------DEL SimpleName@@Name:IGNORED_PROTOCOL_PATTERN @AT@ 4283 @LENGTH@ 24
------------DEL SimpleName@@MethodName:matcher:[strippedUrl] @AT@ 4308 @LENGTH@ 20
---------------DEL SimpleName@@strippedUrl @AT@ 4316 @LENGTH@ 11
---DEL WhileStatement@@while (matcher.matches()) {  String protocol=matcher.group(1);  strippedUrl=strippedUrl.substring(protocol.length() + 1);  matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl);} @AT@ 4338 @LENGTH@ 226
------DEL MethodInvocation@@matcher.matches() @AT@ 4345 @LENGTH@ 17
---------DEL SimpleName@@Name:matcher @AT@ 4345 @LENGTH@ 7
---------DEL SimpleName@@MethodName:matches:[] @AT@ 4353 @LENGTH@ 9
------DEL Block@@WhileBody:{  String protocol=matcher.group(1);  strippedUrl=strippedUrl.substring(protocol.length() + 1);  matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl);} @AT@ 4364 @LENGTH@ 200
---------DEL VariableDeclarationStatement@@String protocol=matcher.group(1); @AT@ 4378 @LENGTH@ 35
------------DEL SimpleType@@String @AT@ 4378 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@protocol=matcher.group(1) @AT@ 4385 @LENGTH@ 27
---------------DEL SimpleName@@protocol @AT@ 4385 @LENGTH@ 8
---------------DEL MethodInvocation@@matcher.group(1) @AT@ 4396 @LENGTH@ 16
------------------DEL SimpleName@@Name:matcher @AT@ 4396 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:group:[1] @AT@ 4404 @LENGTH@ 8
---------------------DEL NumberLiteral@@1 @AT@ 4410 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:strippedUrl=strippedUrl.substring(protocol.length() + 1) @AT@ 4426 @LENGTH@ 59
------------DEL Assignment@@strippedUrl=strippedUrl.substring(protocol.length() + 1) @AT@ 4426 @LENGTH@ 58
---------------DEL SimpleName@@strippedUrl @AT@ 4426 @LENGTH@ 11
---------------DEL Operator@@= @AT@ 4437 @LENGTH@ 1
---------------DEL MethodInvocation@@strippedUrl.substring(protocol.length() + 1) @AT@ 4440 @LENGTH@ 44
------------------DEL SimpleName@@Name:strippedUrl @AT@ 4440 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:substring:[protocol.length() + 1] @AT@ 4452 @LENGTH@ 32
---------------------DEL InfixExpression@@protocol.length() + 1 @AT@ 4462 @LENGTH@ 21
------------------------DEL MethodInvocation@@protocol.length() @AT@ 4462 @LENGTH@ 17
---------------------------DEL SimpleName@@Name:protocol @AT@ 4462 @LENGTH@ 8
---------------------------DEL SimpleName@@MethodName:length:[] @AT@ 4471 @LENGTH@ 8
------------------------DEL Operator@@+ @AT@ 4479 @LENGTH@ 1
------------------------DEL NumberLiteral@@1 @AT@ 4482 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl) @AT@ 4498 @LENGTH@ 56
------------DEL Assignment@@matcher=IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl) @AT@ 4498 @LENGTH@ 55
---------------DEL SimpleName@@matcher @AT@ 4498 @LENGTH@ 7
---------------DEL Operator@@= @AT@ 4505 @LENGTH@ 1
---------------DEL MethodInvocation@@IGNORED_PROTOCOL_PATTERN.matcher(strippedUrl) @AT@ 4508 @LENGTH@ 45
------------------DEL SimpleName@@Name:IGNORED_PROTOCOL_PATTERN @AT@ 4508 @LENGTH@ 24
------------------DEL SimpleName@@MethodName:matcher:[strippedUrl] @AT@ 4533 @LENGTH@ 20
---------------------DEL SimpleName@@strippedUrl @AT@ 4541 @LENGTH@ 11
---DEL IfStatement@@if (strippedUrl.contains("?")) {  strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('?'));} @AT@ 4573 @LENGTH@ 124
------DEL MethodInvocation@@strippedUrl.contains("?") @AT@ 4577 @LENGTH@ 25
---------DEL SimpleName@@Name:strippedUrl @AT@ 4577 @LENGTH@ 11
---------DEL SimpleName@@MethodName:contains:["?"] @AT@ 4589 @LENGTH@ 13
------------DEL StringLiteral@@"?" @AT@ 4598 @LENGTH@ 3
------DEL Block@@ThenBody:{  strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('?'));} @AT@ 4604 @LENGTH@ 93
---------DEL ExpressionStatement@@Assignment:strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('?')) @AT@ 4618 @LENGTH@ 69
------------DEL Assignment@@strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('?')) @AT@ 4618 @LENGTH@ 68
---------------DEL SimpleName@@strippedUrl @AT@ 4618 @LENGTH@ 11
---------------DEL Operator@@= @AT@ 4629 @LENGTH@ 1
---------------DEL MethodInvocation@@strippedUrl.substring(0,strippedUrl.lastIndexOf('?')) @AT@ 4632 @LENGTH@ 54
------------------DEL SimpleName@@Name:strippedUrl @AT@ 4632 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:substring:[0, strippedUrl.lastIndexOf('?')] @AT@ 4644 @LENGTH@ 42
---------------------DEL NumberLiteral@@0 @AT@ 4654 @LENGTH@ 1
---------------------DEL MethodInvocation@@strippedUrl.lastIndexOf('?') @AT@ 4657 @LENGTH@ 28
------------------------DEL SimpleName@@Name:strippedUrl @AT@ 4657 @LENGTH@ 11
------------------------DEL SimpleName@@MethodName:lastIndexOf:['?'] @AT@ 4669 @LENGTH@ 16
---------------------------DEL CharacterLiteral@@'?' @AT@ 4681 @LENGTH@ 3
---DEL IfStatement@@if (strippedUrl.contains("#")) {  strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('#'));} @AT@ 4706 @LENGTH@ 124
------DEL MethodInvocation@@strippedUrl.contains("#") @AT@ 4710 @LENGTH@ 25
---------DEL SimpleName@@Name:strippedUrl @AT@ 4710 @LENGTH@ 11
---------DEL SimpleName@@MethodName:contains:["#"] @AT@ 4722 @LENGTH@ 13
------------DEL StringLiteral@@"#" @AT@ 4731 @LENGTH@ 3
------DEL Block@@ThenBody:{  strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('#'));} @AT@ 4737 @LENGTH@ 93
---------DEL ExpressionStatement@@Assignment:strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('#')) @AT@ 4751 @LENGTH@ 69
------------DEL Assignment@@strippedUrl=strippedUrl.substring(0,strippedUrl.lastIndexOf('#')) @AT@ 4751 @LENGTH@ 68
---------------DEL SimpleName@@strippedUrl @AT@ 4751 @LENGTH@ 11
---------------DEL Operator@@= @AT@ 4762 @LENGTH@ 1
---------------DEL MethodInvocation@@strippedUrl.substring(0,strippedUrl.lastIndexOf('#')) @AT@ 4765 @LENGTH@ 54
------------------DEL SimpleName@@Name:strippedUrl @AT@ 4765 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:substring:[0, strippedUrl.lastIndexOf('#')] @AT@ 4777 @LENGTH@ 42
---------------------DEL NumberLiteral@@0 @AT@ 4787 @LENGTH@ 1
---------------------DEL MethodInvocation@@strippedUrl.lastIndexOf('#') @AT@ 4790 @LENGTH@ 28
------------------------DEL SimpleName@@Name:strippedUrl @AT@ 4790 @LENGTH@ 11
------------------------DEL SimpleName@@MethodName:lastIndexOf:['#'] @AT@ 4802 @LENGTH@ 16
---------------------------DEL CharacterLiteral@@'#' @AT@ 4814 @LENGTH@ 3
---DEL ReturnStatement@@SimpleName:strippedUrl @AT@ 4840 @LENGTH@ 19
------DEL SimpleName@@strippedUrl @AT@ 4847 @LENGTH@ 11


INS MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]PortExposingTcpSocketSupportNioTests,  @AT@ 1701 @LENGTH@ 299
---INS Modifier@@private @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1701 @LENGTH@ 7
---INS PrimitiveType@@int @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1709 @LENGTH@ 3
---INS SimpleName@@MethodName:waitAndPollPort @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1713 @LENGTH@ 15
---INS VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1735 @LENGTH@ 42
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @AT@ 1735 @LENGTH@ 3
------INS VariableDeclarationFragment@@port=mindAppmasterService.getPort() @TO@ VariableDeclarationStatement@@int port=mindAppmasterService.getPort(); @AT@ 1739 @LENGTH@ 37
---------INS SimpleName@@port @TO@ VariableDeclarationFragment@@port=mindAppmasterService.getPort() @AT@ 1739 @LENGTH@ 4
---------INS MethodInvocation@@mindAppmasterService.getPort() @TO@ VariableDeclarationFragment@@port=mindAppmasterService.getPort() @AT@ 1746 @LENGTH@ 30
------------INS SimpleName@@Name:mindAppmasterService @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1746 @LENGTH@ 20
------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1767 @LENGTH@ 9
---INS ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1780 @LENGTH@ 202
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1785 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1785 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 1789 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 1789 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 1793 @LENGTH@ 1
------INS InfixExpression@@i < 10 @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1796 @LENGTH@ 4
---------INS SimpleName@@i @TO@ InfixExpression@@i < 10 @AT@ 1796 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < 10 @AT@ 1797 @LENGTH@ 1
---------INS NumberLiteral@@10 @TO@ InfixExpression@@i < 10 @AT@ 1798 @LENGTH@ 2
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1802 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 1802 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 1804 @LENGTH@ 2
------INS IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @TO@ ForStatement@@for (int i=0; i < 10; i++) {  if (port > 0) {    break;  } else {    try {      Thread.sleep(1000);    } catch (    InterruptedException e) {    }    port=mindAppmasterService.getPort();  }} @AT@ 1812 @LENGTH@ 166
---------INS InfixExpression@@port > 0 @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1816 @LENGTH@ 8
------------INS SimpleName@@port @TO@ InfixExpression@@port > 0 @AT@ 1816 @LENGTH@ 4
------------INS Operator@@> @TO@ InfixExpression@@port > 0 @AT@ 1820 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@port > 0 @AT@ 1823 @LENGTH@ 1
---------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1826 @LENGTH@ 17
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 1832 @LENGTH@ 6
---------INS Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @TO@ IfStatement@@if (port > 0) {  break;} else {  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1849 @LENGTH@ 129
------------INS TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @TO@ Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1855 @LENGTH@ 75
---------------INS ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 1866 @LENGTH@ 19
------------------INS MethodInvocation@@Thread.sleep(1000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 1866 @LENGTH@ 18
---------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1866 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:sleep:[1000] @TO@ MethodInvocation@@Thread.sleep(1000) @AT@ 1873 @LENGTH@ 11
------------------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:sleep:[1000] @AT@ 1879 @LENGTH@ 4
---------------INS CatchClause@@catch (InterruptedException e) {} @TO@ TryStatement@@try {  Thread.sleep(1000);} catch (InterruptedException e) {} @AT@ 1892 @LENGTH@ 38
------------------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {} @AT@ 1899 @LENGTH@ 22
---------------------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 1899 @LENGTH@ 20
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 1920 @LENGTH@ 1
------------INS ExpressionStatement@@Assignment:port=mindAppmasterService.getPort() @TO@ Block@@ElseBody:{  try {    Thread.sleep(1000);  } catch (  InterruptedException e) {  }  port=mindAppmasterService.getPort();} @AT@ 1935 @LENGTH@ 38
---------------INS Assignment@@port=mindAppmasterService.getPort() @TO@ ExpressionStatement@@Assignment:port=mindAppmasterService.getPort() @AT@ 1935 @LENGTH@ 37
------------------INS SimpleName@@port @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1935 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1939 @LENGTH@ 1
------------------INS MethodInvocation@@mindAppmasterService.getPort() @TO@ Assignment@@port=mindAppmasterService.getPort() @AT@ 1942 @LENGTH@ 30
---------------------INS SimpleName@@Name:mindAppmasterService @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1942 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@mindAppmasterService.getPort() @AT@ 1963 @LENGTH@ 9
---INS ReturnStatement@@SimpleName:port @TO@ MethodDeclaration@@private, int, MethodName:waitAndPollPort,  @AT@ 1985 @LENGTH@ 12
------INS SimpleName@@port @TO@ ReturnStatement@@SimpleName:port @AT@ 1992 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @TO@ TypeDeclaration@@[public]ContextSourceAndDataSourceTransactionManager, DataSourceTransactionManager @AT@ 9125 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9125 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9132 @LENGTH@ 4
---INS SimpleName@@MethodName:afterPropertiesSet @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9137 @LENGTH@ 18
---INS ExpressionStatement@@SuperMethodInvocation:super.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9169 @LENGTH@ 27
------INS SuperMethodInvocation@@super.afterPropertiesSet() @TO@ ExpressionStatement@@SuperMethodInvocation:super.afterPropertiesSet() @AT@ 9169 @LENGTH@ 26
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ SuperMethodInvocation@@super.afterPropertiesSet() @AT@ 9175 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:ldapManagerDelegate.checkRenamingStrategy() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet,  @AT@ 9206 @LENGTH@ 44
------INS MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @TO@ ExpressionStatement@@MethodInvocation:ldapManagerDelegate.checkRenamingStrategy() @AT@ 9206 @LENGTH@ 43
---------INS SimpleName@@Name:ldapManagerDelegate @TO@ MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @AT@ 9206 @LENGTH@ 19
---------INS SimpleName@@MethodName:checkRenamingStrategy:[] @TO@ MethodInvocation@@ldapManagerDelegate.checkRenamingStrategy() @AT@ 9226 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @TO@ MethodDeclaration@@private, LegacyControllerKernelServicesProxy, MethodName:install, AbstractKernelServicesImpl mainServices, ModelInitializer modelInitializer, ModelWriteSanitizer modelWriteSanitizer, List<String> contentRepositoryContents, List<ModelNode> bootOperations, Exception,  @AT@ 31539 @LENGTH@ 69
---INS MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @TO@ ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31539 @LENGTH@ 68
------INS SimpleName@@Name:classLoaderBuilder @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31539 @LENGTH@ 18
------INS SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.modules.*"] @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.modules.*") @AT@ 31558 @LENGTH@ 49
---------INS StringLiteral@@"org.jboss.modules.*" @TO@ SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.modules.*"] @AT@ 31585 @LENGTH@ 21


UPD IfStatement@@if (existing == null) {  typeConfigs.put(key,applicationTypeConfig);} else if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @TO@ if (existing == null) {  typeConfigs.put(key,applicationTypeConfig);} else {  assert existing.isCompatibleWith(applicationTypeConfig) : "incompatible " + applicationTypeConfig.getClass().getSimpleName();} @AT@ 5927 @LENGTH@ 407
---UPD Block@@ElseBody:if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @TO@ ElseBody:{  assert existing.isCompatibleWith(applicationTypeConfig) : "incompatible " + applicationTypeConfig.getClass().getSimpleName();} @AT@ 6031 @LENGTH@ 303
------DEL IfStatement@@if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6031 @LENGTH@ 303
---------DEL PrefixExpression@@!existing.isCompatibleWith(applicationTypeConfig) @AT@ 6035 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6035 @LENGTH@ 1
---------DEL Block@@ThenBody:{  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6086 @LENGTH@ 248
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("incompatible ApplicationTypeConfig") @AT@ 6250 @LENGTH@ 70
---------------DEL ClassInstanceCreation@@IllegalStateException["incompatible ApplicationTypeConfig"] @AT@ 6256 @LENGTH@ 63
------------------DEL New@@new @AT@ 6256 @LENGTH@ 3
------------------DEL SimpleType@@IllegalStateException @AT@ 6260 @LENGTH@ 21
------------------DEL StringLiteral@@"incompatible ApplicationTypeConfig" @AT@ 6282 @LENGTH@ 36
------INS AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @TO@ Block@@ElseBody:if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6195 @LENGTH@ 149
---------MOV MethodInvocation@@existing.isCompatibleWith(applicationTypeConfig) @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6036 @LENGTH@ 48
---------INS InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6277 @LENGTH@ 66
------------INS StringLiteral@@"incompatible " @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6277 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6292 @LENGTH@ 1
------------INS MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 32
---------------INS SimpleName@@Name:applicationTypeConfig @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6328 @LENGTH@ 15


UPD VariableDeclarationStatement@@Module module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)); @TO@ Module module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)); @AT@ 9458 @LENGTH@ 92
---UPD VariableDeclarationFragment@@module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)) @TO@ module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)) @AT@ 9465 @LENGTH@ 84
------UPD MethodInvocation@@Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)) @TO@ Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)) @AT@ 9474 @LENGTH@ 75
---------UPD SimpleName@@MethodName:getModuleFromCallerModuleLoader:[ModuleIdentifier.create(moduleName)] @TO@ MethodName:getModuleFromCallerModuleLoader:[ModuleIdentifier.fromString(moduleName)] @AT@ 9481 @LENGTH@ 68
------------UPD MethodInvocation@@ModuleIdentifier.create(moduleName) @TO@ ModuleIdentifier.fromString(moduleName) @AT@ 9513 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:create:[moduleName] @TO@ MethodName:fromString:[moduleName] @AT@ 9530 @LENGTH@ 18


UPD FieldDeclaration@@private, final, static, ObjectMapper, [mapper=new ObjectMapper()] @TO@ private, static, final, ObjectMapper, [MAPPER=new ObjectMapper()] @AT@ 1162 @LENGTH@ 62
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, ObjectMapper, [mapper=new ObjectMapper()] @AT@ 1171 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1176 @LENGTH@ 6
---UPD VariableDeclarationFragment@@mapper=new ObjectMapper() @TO@ MAPPER=new ObjectMapper() @AT@ 1196 @LENGTH@ 27
------UPD SimpleName@@mapper @TO@ MAPPER @AT@ 1196 @LENGTH@ 6


UPD FieldDeclaration@@AttributeDefinition, [CONNECTOR=new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).build()] @TO@ AttributeDefinition, [CONNECTOR=new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).setRestartAllServices().build()] @AT@ 6658 @LENGTH@ 1757
---UPD VariableDeclarationFragment@@CONNECTOR=new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).build() @TO@ CONNECTOR=new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).setRestartAllServices().build() @AT@ 6678 @LENGTH@ 1736
------UPD MethodInvocation@@new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).build() @TO@ new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).setRestartAllServices().build() @AT@ 6690 @LENGTH@ 1724
---------INS MethodInvocation@@MethodName:setRestartAllServices:[] @TO@ MethodInvocation@@new SimpleMapAttributeDefinition.Builder(CommonAttributes.CONNECTOR,true).setAlternatives(CommonAttributes.DISCOVERY_GROUP_NAME).setAttributeMarshaller(AttributeMarshallers.CONNECTORS_MARSHALLER).setCorrector(new ParameterCorrector(){
  @Override public ModelNode correct(  ModelNode newValue,  ModelNode currentValue){
    if (newValue.getType() != ModelType.LIST) {
      return newValue;
    }
 else {
      ModelNode correctValue=new ModelNode();
      for (      ModelNode node : newValue.asList()) {
        correctValue.get(node.asString());
      }
      return correctValue;
    }
  }
}
).build() @AT@ 6690 @LENGTH@ 1740


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=oAuth2RequestFactory.createStoredAuthorizationRequest(authorizationRequest); @TO@ OAuth2Request storedOAuth2Request=oAuth2RequestFactory.createOAuth2Request(authorizationRequest); @AT@ 6571 @LENGTH@ 112
---UPD VariableDeclarationFragment@@storedOAuth2Request=oAuth2RequestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ storedOAuth2Request=oAuth2RequestFactory.createOAuth2Request(authorizationRequest) @AT@ 6585 @LENGTH@ 97
------UPD MethodInvocation@@oAuth2RequestFactory.createStoredAuthorizationRequest(authorizationRequest) @TO@ oAuth2RequestFactory.createOAuth2Request(authorizationRequest) @AT@ 6607 @LENGTH@ 75
---------UPD SimpleName@@MethodName:createStoredAuthorizationRequest:[authorizationRequest] @TO@ MethodName:createOAuth2Request:[authorizationRequest] @AT@ 6628 @LENGTH@ 54


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-641] Fix fabric smoke CreateChildContainerTest"), public]CreateChildContainerTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CreateChildContainerTest, FabricTestSupport @AT@ 1395 @LENGTH@ 1050
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-641] Fix fabric smoke CreateChildContainerTest") @AT@ 1488 @LENGTH@ 65


INS MethodDeclaration@@public, void, MethodName:testRestrictive,  @TO@ TypeDeclaration@@[public]CombinationManagementPermissionTestCase,  @AT@ 2971 @LENGTH@ 206
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2971 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2978 @LENGTH@ 4
---INS SimpleName@@MethodName:testRestrictive @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2983 @LENGTH@ 15
---INS VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 3069 @LENGTH@ 59
------INS ArrayType@@CombinationPolicy[] @TO@ VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @AT@ 3069 @LENGTH@ 19
---------INS SimpleType@@CombinationPolicy @TO@ ArrayType@@CombinationPolicy[] @AT@ 3069 @LENGTH@ 17
------INS VariableDeclarationFragment@@policySet=CombinationPolicy.values() @TO@ VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @AT@ 3089 @LENGTH@ 38
---------INS SimpleName@@policySet @TO@ VariableDeclarationFragment@@policySet=CombinationPolicy.values() @AT@ 3089 @LENGTH@ 9
---------INS MethodInvocation@@CombinationPolicy.values() @TO@ VariableDeclarationFragment@@policySet=CombinationPolicy.values() @AT@ 3101 @LENGTH@ 26
------------INS SimpleName@@Name:CombinationPolicy @TO@ MethodInvocation@@CombinationPolicy.values() @AT@ 3101 @LENGTH@ 17
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@CombinationPolicy.values() @AT@ 3119 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,policySet.length) @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 3137 @LENGTH@ 34
------INS MethodInvocation@@assertEquals(2,policySet.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,policySet.length) @AT@ 3137 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertEquals:[2, policySet.length] @TO@ MethodInvocation@@assertEquals(2,policySet.length) @AT@ 3137 @LENGTH@ 33
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, policySet.length] @AT@ 3150 @LENGTH@ 1
------------INS QualifiedName@@policySet.length @TO@ SimpleName@@MethodName:assertEquals:[2, policySet.length] @AT@ 3153 @LENGTH@ 16
---------------INS SimpleName@@policySet @TO@ QualifiedName@@policySet.length @AT@ 3153 @LENGTH@ 9
---------------INS SimpleName@@length @TO@ QualifiedName@@policySet.length @AT@ 3163 @LENGTH@ 6


INS MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @TO@ TypeDeclaration@@[public]IoUtils,  @AT@ 6310 @LENGTH@ 247
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6310 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6317 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6324 @LENGTH@ 4
---INS SimpleName@@MethodName:mkdir @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6329 @LENGTH@ 5
---INS SingleVariableDeclaration@@File parent @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6335 @LENGTH@ 11
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File parent @AT@ 6335 @LENGTH@ 4
------INS SimpleName@@parent @TO@ SingleVariableDeclaration@@File parent @AT@ 6340 @LENGTH@ 6
---INS SingleVariableDeclaration@@String... segments @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6348 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... segments @AT@ 6348 @LENGTH@ 6
------INS SimpleName@@segments @TO@ SingleVariableDeclaration@@String... segments @AT@ 6358 @LENGTH@ 8
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6375 @LENGTH@ 11
---INS VariableDeclarationStatement@@File dir=parent; @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6397 @LENGTH@ 18
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File dir=parent; @AT@ 6397 @LENGTH@ 4
------INS VariableDeclarationFragment@@dir=parent @TO@ VariableDeclarationStatement@@File dir=parent; @AT@ 6402 @LENGTH@ 12
---------INS SimpleName@@dir @TO@ VariableDeclarationFragment@@dir=parent @AT@ 6402 @LENGTH@ 3
---------INS SimpleName@@parent @TO@ VariableDeclarationFragment@@dir=parent @AT@ 6408 @LENGTH@ 6
---INS EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6424 @LENGTH@ 85
------INS SingleVariableDeclaration@@String segment @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6429 @LENGTH@ 14
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String segment @AT@ 6429 @LENGTH@ 6
---------INS SimpleName@@segment @TO@ SingleVariableDeclaration@@String segment @AT@ 6436 @LENGTH@ 7
------INS SimpleName@@segments @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6446 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:dir=new File(dir,segment) @TO@ EnhancedForStatement@@for (String segment : segments) {  dir=new File(dir,segment);} @AT@ 6470 @LENGTH@ 29
---------INS Assignment@@dir=new File(dir,segment) @TO@ ExpressionStatement@@Assignment:dir=new File(dir,segment) @AT@ 6470 @LENGTH@ 28
------------INS SimpleName@@dir @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6470 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6473 @LENGTH@ 1
------------INS ClassInstanceCreation@@File[dir, segment] @TO@ Assignment@@dir=new File(dir,segment) @AT@ 6476 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6476 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6480 @LENGTH@ 4
---------------INS SimpleName@@dir @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6485 @LENGTH@ 3
---------------INS SimpleName@@segment @TO@ ClassInstanceCreation@@File[dir, segment] @AT@ 6490 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:dir.mkdirs() @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6518 @LENGTH@ 13
------INS MethodInvocation@@dir.mkdirs() @TO@ ExpressionStatement@@MethodInvocation:dir.mkdirs() @AT@ 6518 @LENGTH@ 12
---------INS SimpleName@@Name:dir @TO@ MethodInvocation@@dir.mkdirs() @AT@ 6518 @LENGTH@ 3
---------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@dir.mkdirs() @AT@ 6522 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:dir @TO@ MethodDeclaration@@public, static, File, MethodName:mkdir, File parent, String... segments, IOException,  @AT@ 6540 @LENGTH@ 11
------INS SimpleName@@dir @TO@ ReturnStatement@@SimpleName:dir @AT@ 6547 @LENGTH@ 3


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build()] @AT@ 1696 @LENGTH@ 289
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build() @AT@ 1729 @LENGTH@ 255
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build() @AT@ 1742 @LENGTH@ 242
---------UPD MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.NAME] @TO@ MethodName:setParameters:[NAME] @AT@ 1742 @LENGTH@ 191
------------DEL QualifiedName@@GlobalOperationHandlers.NAME @AT@ 1904 @LENGTH@ 28
---------------DEL SimpleName@@GlobalOperationHandlers @AT@ 1904 @LENGTH@ 23
---------------DEL SimpleName@@NAME @AT@ 1928 @LENGTH@ 4
------------INS SimpleName@@NAME @TO@ MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.NAME] @AT@ 2082 @LENGTH@ 4


UPD IfStatement@@if (isPipelined()) {  pipeline(new LettuceStatusResult(getAsyncConnection().setrange(key,start,value)));} @TO@ if (isPipelined()) {  pipeline(new LettuceStatusResult(getAsyncConnection().setrange(key,start,value)));  return;} @AT@ 27729 @LENGTH@ 114
---UPD Block@@ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setrange(key,start,value)));} @TO@ ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setrange(key,start,value)));  return;} @AT@ 27748 @LENGTH@ 95
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  pipeline(new LettuceStatusResult(getAsyncConnection().setrange(key,start,value)));} @AT@ 27855 @LENGTH@ 7


DEL FieldDeclaration@@String, [OPERATOR_PREFIX="$"] @AT@ 892 @LENGTH@ 29
---DEL SimpleType@@String @AT@ 892 @LENGTH@ 6
---DEL VariableDeclarationFragment@@OPERATOR_PREFIX="$" @AT@ 899 @LENGTH@ 21
------DEL SimpleName@@OPERATOR_PREFIX @AT@ 899 @LENGTH@ 15
------DEL StringLiteral@@"$" @AT@ 917 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:form.set("client_id",resource.getClientId()) @AT@ 2353 @LENGTH@ 46
---DEL MethodInvocation@@form.set("client_id",resource.getClientId()) @AT@ 2353 @LENGTH@ 45
------DEL SimpleName@@Name:form @AT@ 2353 @LENGTH@ 4
------DEL SimpleName@@MethodName:set:["client_id", resource.getClientId()] @AT@ 2358 @LENGTH@ 40
---------DEL StringLiteral@@"client_id" @AT@ 2362 @LENGTH@ 11
---------DEL MethodInvocation@@resource.getClientId() @AT@ 2375 @LENGTH@ 22
------------DEL SimpleName@@Name:resource @AT@ 2375 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getClientId:[] @AT@ 2384 @LENGTH@ 13


MOV FieldDeclaration@@private, String, [beanName] @TO@ TypeDeclaration@@[public]RegionLookupFactoryBean, [FactoryBean<Region<K,V>>, InitializingBean, BeanNameAware] @AT@ 1581 @LENGTH@ 24


UPD IfStatement@@if (profileDir.isDirectory()) {  String profileId=profileDir.getName();  String toProfileDirName=convertProfileIdToDirectory(profileId);  File toProfileDir=new File(toFile,toProfileDirName);  toProfileDir.mkdirs();  recursiveCopyAndAdd(git,profileDir,toProfileDir,pattern,true);} else {  recursiveCopyAndAdd(git,profileDir,toFile,pattern,true);} @TO@ if (isProfileDirectory(profileDir)) {  String profileId=profileDir.getName();  String toProfileDirName=convertProfileIdToDirectory(profileId);  File toProfileDir=new File(toFile,toProfileDirName);  toProfileDir.mkdirs();  recursiveCopyAndAdd(git,profileDir,toProfileDir,pattern,true);} else {  recursiveCopyAndAdd(git,profileDir,toFile,pattern,false);} @AT@ 47422 @LENGTH@ 508
---UPD MethodInvocation@@profileDir.isDirectory() @TO@ isProfileDirectory(profileDir) @AT@ 47426 @LENGTH@ 24
------DEL SimpleName@@Name:profileDir @AT@ 47426 @LENGTH@ 10
------DEL SimpleName@@MethodName:isDirectory:[] @AT@ 47437 @LENGTH@ 13
------INS SimpleName@@MethodName:isProfileDirectory:[profileDir] @TO@ MethodInvocation@@profileDir.isDirectory() @AT@ 47477 @LENGTH@ 30
---------INS SimpleName@@profileDir @TO@ SimpleName@@MethodName:isProfileDirectory:[profileDir] @AT@ 47496 @LENGTH@ 10
---UPD Block@@ElseBody:{  recursiveCopyAndAdd(git,profileDir,toFile,pattern,true);} @TO@ ElseBody:{  recursiveCopyAndAdd(git,profileDir,toFile,pattern,false);} @AT@ 47830 @LENGTH@ 100
------UPD ExpressionStatement@@MethodInvocation:recursiveCopyAndAdd(git,profileDir,toFile,pattern,true) @TO@ MethodInvocation:recursiveCopyAndAdd(git,profileDir,toFile,pattern,false) @AT@ 47852 @LENGTH@ 60
---------UPD MethodInvocation@@recursiveCopyAndAdd(git,profileDir,toFile,pattern,true) @TO@ recursiveCopyAndAdd(git,profileDir,toFile,pattern,false) @AT@ 47852 @LENGTH@ 59
------------UPD SimpleName@@MethodName:recursiveCopyAndAdd:[git, profileDir, toFile, pattern, true] @TO@ MethodName:recursiveCopyAndAdd:[git, profileDir, toFile, pattern, false] @AT@ 47852 @LENGTH@ 59
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 47906 @LENGTH@ 4


UPD EnhancedForStatement@@for (Map.Entry<String,String> entry : configuration.entrySet()) {  String path=entry.getKey();  String content=entry.getValue();  String resourcePath=path.substring(path.indexOf("/"));  copyToContent(installDir,resourcePath,content);} @TO@ for (Map.Entry<String,String> entry : configuration.entrySet()) {  String path=entry.getKey();  String content=entry.getValue();  int slashIndex=path.indexOf("/");  String resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path;  copyToContent(installDir,resourcePath,content);} @AT@ 2202 @LENGTH@ 296
---UPD VariableDeclarationStatement@@String resourcePath=path.substring(path.indexOf("/")); @TO@ int slashIndex=path.indexOf("/"); @AT@ 2370 @LENGTH@ 56
------DEL SimpleType@@String @AT@ 2370 @LENGTH@ 6
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@String resourcePath=path.substring(path.indexOf("/")); @AT@ 2370 @LENGTH@ 3
------UPD VariableDeclarationFragment@@resourcePath=path.substring(path.indexOf("/")) @TO@ slashIndex=path.indexOf("/") @AT@ 2377 @LENGTH@ 48
---------INS SimpleName@@slashIndex @TO@ VariableDeclarationFragment@@resourcePath=path.substring(path.indexOf("/")) @AT@ 2374 @LENGTH@ 10
---------DEL SimpleName@@resourcePath @AT@ 2377 @LENGTH@ 12
---------DEL MethodInvocation@@path.substring(path.indexOf("/")) @AT@ 2392 @LENGTH@ 33
------------DEL SimpleName@@Name:path @AT@ 2392 @LENGTH@ 4
------------DEL SimpleName@@MethodName:substring:[path.indexOf("/")] @AT@ 2397 @LENGTH@ 28
---------MOV MethodInvocation@@path.indexOf("/") @TO@ VariableDeclarationFragment@@resourcePath=path.substring(path.indexOf("/")) @AT@ 2407 @LENGTH@ 17
---INS VariableDeclarationStatement@@String resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path; @TO@ EnhancedForStatement@@for (Map.Entry<String,String> entry : configuration.entrySet()) {  String path=entry.getKey();  String content=entry.getValue();  String resourcePath=path.substring(path.indexOf("/"));  copyToContent(installDir,resourcePath,content);} @AT@ 2418 @LENGTH@ 72
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path; @AT@ 2418 @LENGTH@ 6
------INS VariableDeclarationFragment@@resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path @TO@ VariableDeclarationStatement@@String resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path; @AT@ 2425 @LENGTH@ 64
---------INS SimpleName@@resourcePath @TO@ VariableDeclarationFragment@@resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path @AT@ 2425 @LENGTH@ 12
---------INS ConditionalExpression@@slashIndex > 0 ? path.substring(slashIndex) : path @TO@ VariableDeclarationFragment@@resourcePath=slashIndex > 0 ? path.substring(slashIndex) : path @AT@ 2440 @LENGTH@ 49
------------INS InfixExpression@@slashIndex > 0 @TO@ ConditionalExpression@@slashIndex > 0 ? path.substring(slashIndex) : path @AT@ 2440 @LENGTH@ 14
---------------INS SimpleName@@slashIndex @TO@ InfixExpression@@slashIndex > 0 @AT@ 2440 @LENGTH@ 10
---------------INS Operator@@> @TO@ InfixExpression@@slashIndex > 0 @AT@ 2450 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@slashIndex > 0 @AT@ 2453 @LENGTH@ 1
------------INS MethodInvocation@@path.substring(slashIndex) @TO@ ConditionalExpression@@slashIndex > 0 ? path.substring(slashIndex) : path @AT@ 2457 @LENGTH@ 26
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.substring(slashIndex) @AT@ 2457 @LENGTH@ 4
---------------INS SimpleName@@MethodName:substring:[slashIndex] @TO@ MethodInvocation@@path.substring(slashIndex) @AT@ 2462 @LENGTH@ 21
------------------INS SimpleName@@slashIndex @TO@ SimpleName@@MethodName:substring:[slashIndex] @AT@ 2472 @LENGTH@ 10
------------INS SimpleName@@path @TO@ ConditionalExpression@@slashIndex > 0 ? path.substring(slashIndex) : path @AT@ 2485 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:callback.done(sync) @TO@ MethodDeclaration@@public, boolean, MethodName:doInAsyncProducer, Producer producer, AsyncProcessor asyncProducer, final Exchange exchange, ExchangePattern exchangePattern, final AsyncCallback callback,  @AT@ 15196 @LENGTH@ 20
---INS MethodInvocation@@callback.done(sync) @TO@ ExpressionStatement@@MethodInvocation:callback.done(sync) @AT@ 15196 @LENGTH@ 19
------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(sync) @AT@ 15196 @LENGTH@ 8
------INS SimpleName@@MethodName:done:[sync] @TO@ MethodInvocation@@callback.done(sync) @AT@ 15205 @LENGTH@ 10
---------INS SimpleName@@sync @TO@ SimpleName@@MethodName:done:[sync] @AT@ 15210 @LENGTH@ 4


UPD MethodDeclaration@@private, Option, MethodName:envAsSystemProperty, String name,  @TO@ public, Option, MethodName:envAsSystemProperty, String name,  @AT@ 14501 @LENGTH@ 101
---UPD Modifier@@private @TO@ public @AT@ 14501 @LENGTH@ 7


DEL MethodDeclaration@@CredentialsProvider, MethodName:getCredentialsProvider,  @AT@ 1152 @LENGTH@ 25
---DEL SimpleType@@CredentialsProvider @AT@ 1132 @LENGTH@ 19
---DEL SimpleName@@MethodName:getCredentialsProvider @AT@ 1152 @LENGTH@ 22


UPD Block@@ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  if (params.isAlphabetic()) {    arrays.add(ALPHA);  }} @TO@ ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  Boolean isAlpha=params.isAlphabetic();  if (isAlpha != null && isAlpha) {    arrays.add(ALPHA);  }} @AT@ 58503 @LENGTH@ 575
---UPD IfStatement@@if (params.isAlphabetic()) {  arrays.add(ALPHA);} @TO@ if (isAlpha != null && isAlpha) {  arrays.add(ALPHA);} @AT@ 59018 @LENGTH@ 56
------DEL MethodInvocation@@params.isAlphabetic() @AT@ 59022 @LENGTH@ 21
---------DEL SimpleName@@Name:params @AT@ 59022 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isAlphabetic:[] @AT@ 59029 @LENGTH@ 14
------INS InfixExpression@@isAlpha != null && isAlpha @TO@ IfStatement@@if (params.isAlphabetic()) {  arrays.add(ALPHA);} @AT@ 59066 @LENGTH@ 26
---------INS InfixExpression@@isAlpha != null @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 59066 @LENGTH@ 15
------------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null @AT@ 59066 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@isAlpha != null @AT@ 59073 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@isAlpha != null @AT@ 59077 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 59081 @LENGTH@ 2
---------INS SimpleName@@isAlpha @TO@ InfixExpression@@isAlpha != null && isAlpha @AT@ 59085 @LENGTH@ 7
---INS VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @TO@ Block@@ThenBody:{  if (params.getByPattern() != null) {    arrays.add(BY);    arrays.add(params.getByPattern());  }  if (params.getLimit() != null) {    arrays.add(limit(params.getLimit().getStart(),params.getLimit().getCount()));  }  if (params.getGetPattern() != null) {    byte[][] pattern=params.getGetPattern();    for (    byte[] bs : pattern) {      arrays.add(GET);      arrays.add(bs);    }  }  if (params.getOrder() != null) {    arrays.add(params.getOrder().name().getBytes(Charsets.UTF_8));  }  if (params.isAlphabetic()) {    arrays.add(ALPHA);  }} @AT@ 59018 @LENGTH@ 40
------INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 59018 @LENGTH@ 7
------INS VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @TO@ VariableDeclarationStatement@@Boolean isAlpha=params.isAlphabetic(); @AT@ 59026 @LENGTH@ 31
---------INS SimpleName@@isAlpha @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 59026 @LENGTH@ 7
---------INS MethodInvocation@@params.isAlphabetic() @TO@ VariableDeclarationFragment@@isAlpha=params.isAlphabetic() @AT@ 59036 @LENGTH@ 21
------------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 59036 @LENGTH@ 6
------------INS SimpleName@@MethodName:isAlphabetic:[] @TO@ MethodInvocation@@params.isAlphabetic() @AT@ 59043 @LENGTH@ 14


UPD IfStatement@@if (!StringUtils.isEmpty(exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class))) messageName=exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class); else messageName=configuration.getMessageName(); @TO@ if (!StringUtils.isEmpty(exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class))) {  messageName=exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class);} else {  messageName=configuration.getMessageName();} @AT@ 2336 @LENGTH@ 268
---UPD Block@@ThenBody:messageName=exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class); @TO@ ThenBody:{  messageName=exchange.getIn().getHeader(AvroConstants.AVRO_MESSAGE_NAME,String.class);} @AT@ 2446 @LENGTH@ 88
---UPD Block@@ElseBody:messageName=configuration.getMessageName(); @TO@ ElseBody:{  messageName=configuration.getMessageName();} @AT@ 2559 @LENGTH@ 45


INS EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  if (ep.getLifecycleHandler() != null) {    ep.getLifecycleHandler().stop(ep);  }  if (stopServices) {    final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);    EndpointService.uninstall(ep,unit);  }} @TO@ MethodDeclaration@@public, void, MethodName:stop, Deployment dep,  @AT@ 2349 @LENGTH@ 379
---MOV IfStatement@@if (stopServices) {  final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);  for (  final Endpoint ep : dep.getService().getEndpoints()) {    EndpointService.uninstall(ep,unit);  }} else {  super.stop(dep);} @TO@ EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  if (ep.getLifecycleHandler() != null) {    ep.getLifecycleHandler().stop(ep);  }  if (stopServices) {    final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);    EndpointService.uninstall(ep,unit);  }} @AT@ 2349 @LENGTH@ 304
---INS SingleVariableDeclaration@@final Endpoint ep @TO@ EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  if (ep.getLifecycleHandler() != null) {    ep.getLifecycleHandler().stop(ep);  }  if (stopServices) {    final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);    EndpointService.uninstall(ep,unit);  }} @AT@ 2354 @LENGTH@ 17
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Endpoint ep @AT@ 2354 @LENGTH@ 5
------INS SimpleType@@Endpoint @TO@ SingleVariableDeclaration@@final Endpoint ep @AT@ 2360 @LENGTH@ 8
------INS SimpleName@@ep @TO@ SingleVariableDeclaration@@final Endpoint ep @AT@ 2369 @LENGTH@ 2
---INS MethodInvocation@@dep.getService().getEndpoints() @TO@ EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  if (ep.getLifecycleHandler() != null) {    ep.getLifecycleHandler().stop(ep);  }  if (stopServices) {    final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);    EndpointService.uninstall(ep,unit);  }} @AT@ 2374 @LENGTH@ 31
------INS MethodInvocation@@MethodName:getService:[] @TO@ MethodInvocation@@dep.getService().getEndpoints() @AT@ 2374 @LENGTH@ 16
------INS SimpleName@@Name:dep @TO@ MethodInvocation@@dep.getService().getEndpoints() @AT@ 2374 @LENGTH@ 3
------INS SimpleName@@MethodName:getEndpoints:[] @TO@ MethodInvocation@@dep.getService().getEndpoints() @AT@ 2391 @LENGTH@ 14
---INS IfStatement@@if (ep.getLifecycleHandler() != null) {  ep.getLifecycleHandler().stop(ep);} @TO@ EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  if (ep.getLifecycleHandler() != null) {    ep.getLifecycleHandler().stop(ep);  }  if (stopServices) {    final DeploymentUnit unit=getRequiredAttachment(dep,DeploymentUnit.class);    EndpointService.uninstall(ep,unit);  }} @AT@ 2421 @LENGTH@ 104
------INS InfixExpression@@ep.getLifecycleHandler() != null @TO@ IfStatement@@if (ep.getLifecycleHandler() != null) {  ep.getLifecycleHandler().stop(ep);} @AT@ 2425 @LENGTH@ 32
---------INS MethodInvocation@@ep.getLifecycleHandler() @TO@ InfixExpression@@ep.getLifecycleHandler() != null @AT@ 2425 @LENGTH@ 24
------------INS SimpleName@@Name:ep @TO@ MethodInvocation@@ep.getLifecycleHandler() @AT@ 2425 @LENGTH@ 2
------------INS SimpleName@@MethodName:getLifecycleHandler:[] @TO@ MethodInvocation@@ep.getLifecycleHandler() @AT@ 2428 @LENGTH@ 21
---------INS Operator@@!= @TO@ InfixExpression@@ep.getLifecycleHandler() != null @AT@ 2449 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@ep.getLifecycleHandler() != null @AT@ 2453 @LENGTH@ 4
------INS Block@@ThenBody:{  ep.getLifecycleHandler().stop(ep);} @TO@ IfStatement@@if (ep.getLifecycleHandler() != null) {  ep.getLifecycleHandler().stop(ep);} @AT@ 2459 @LENGTH@ 66
---------INS ExpressionStatement@@MethodInvocation:ep.getLifecycleHandler().stop(ep) @TO@ Block@@ThenBody:{  ep.getLifecycleHandler().stop(ep);} @AT@ 2477 @LENGTH@ 34
------------INS MethodInvocation@@ep.getLifecycleHandler().stop(ep) @TO@ ExpressionStatement@@MethodInvocation:ep.getLifecycleHandler().stop(ep) @AT@ 2477 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:getLifecycleHandler:[] @TO@ MethodInvocation@@ep.getLifecycleHandler().stop(ep) @AT@ 2477 @LENGTH@ 24
---------------INS SimpleName@@Name:ep @TO@ MethodInvocation@@ep.getLifecycleHandler().stop(ep) @AT@ 2477 @LENGTH@ 2
---------------INS SimpleName@@MethodName:stop:[ep] @TO@ MethodInvocation@@ep.getLifecycleHandler().stop(ep) @AT@ 2502 @LENGTH@ 8
------------------INS SimpleName@@ep @TO@ SimpleName@@MethodName:stop:[ep] @AT@ 2507 @LENGTH@ 2


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 18039 @LENGTH@ 752
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 18106 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 18106 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 18114 @LENGTH@ 17


INS MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 110777 @LENGTH@ 23
---INS SimpleType@@SecurityException @TO@ MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @AT@ 110759 @LENGTH@ 17
---INS SimpleName@@MethodName:illegalMultipleRoles @TO@ MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @AT@ 110777 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:from("activemq:topic:foo").routeId("a").to("mock:a") @TO@ MethodInvocation:from("activemq:topic:foo").routeId("a").to("log:a","mock:a") @AT@ 4390 @LENGTH@ 74
---UPD MethodInvocation@@from("activemq:topic:foo").routeId("a").to("mock:a") @TO@ from("activemq:topic:foo").routeId("a").to("log:a","mock:a") @AT@ 4390 @LENGTH@ 73
------UPD SimpleName@@MethodName:to:["mock:a"] @TO@ MethodName:to:["log:a", "mock:a"] @AT@ 4451 @LENGTH@ 12
---------INS StringLiteral@@"log:a" @TO@ SimpleName@@MethodName:to:["mock:a"] @AT@ 4454 @LENGTH@ 7


UPD TryStatement@@try {  SessionState.start(new CliSessionState(hiveConf));} catch (RuntimeException re) {  assertTrue(re.getCause().getCause() instanceof MetaException);} @TO@ try {  SessionState.start(new CliSessionState(hiveConf));  fail("Expected exception");} catch (RuntimeException re) {  assertTrue(re.getCause().getCause() instanceof MetaException);} @AT@ 3494 @LENGTH@ 173
---INS ExpressionStatement@@MethodInvocation:fail("Expected exception") @TO@ TryStatement@@try {  SessionState.start(new CliSessionState(hiveConf));} catch (RuntimeException re) {  assertTrue(re.getCause().getCause() instanceof MetaException);} @AT@ 3563 @LENGTH@ 27
------INS MethodInvocation@@fail("Expected exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Expected exception") @AT@ 3563 @LENGTH@ 26
---------INS SimpleName@@MethodName:fail:["Expected exception"] @TO@ MethodInvocation@@fail("Expected exception") @AT@ 3563 @LENGTH@ 26
------------INS StringLiteral@@"Expected exception" @TO@ SimpleName@@MethodName:fail:["Expected exception"] @AT@ 3568 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3324 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 3324 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3324 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3332 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 3351 @LENGTH@ 4


UPD TypeDeclaration@@[public]TimerListenerManager, ServiceSupport[Runnable, CamelContextAware] @TO@ [public]TimerListenerManager, ServiceSupport[Runnable, CamelContextAware, StaticService] @AT@ 1527 @LENGTH@ 3689
---INS SimpleType@@StaticService @TO@ TypeDeclaration@@[public]TimerListenerManager, ServiceSupport[Runnable, CamelContextAware] @AT@ 1663 @LENGTH@ 13


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build()] @AT@ 1696 @LENGTH@ 289
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build() @AT@ 1729 @LENGTH@ 255
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.NAME).setRuntimeOnly().build() @TO@ new SimpleOperationDefinitionBuilder(ModelDescriptionConstants.UNDEFINE_ATTRIBUTE_OPERATION,ControllerResolver.getResolver("global")).setParameters(NAME).setRuntimeOnly().build() @AT@ 1742 @LENGTH@ 242
---------UPD MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.NAME] @TO@ MethodName:setParameters:[NAME] @AT@ 1742 @LENGTH@ 191
------------DEL QualifiedName@@GlobalOperationHandlers.NAME @AT@ 1904 @LENGTH@ 28
---------------DEL SimpleName@@GlobalOperationHandlers @AT@ 1904 @LENGTH@ 23
---------------DEL SimpleName@@NAME @AT@ 1928 @LENGTH@ 4
------------INS SimpleName@@NAME @TO@ MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.NAME] @AT@ 2082 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(value1,redisTemplate.boundValueOps(key1).get()) @TO@ MethodInvocation:assertThat(redisTemplate.boundValueOps(key1).get(),isEqual(value1)) @AT@ 3865 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals(value1,redisTemplate.boundValueOps(key1).get()) @TO@ assertThat(redisTemplate.boundValueOps(key1).get(),isEqual(value1)) @AT@ 3865 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:[value1, redisTemplate.boundValueOps(key1).get()] @TO@ MethodName:assertThat:[redisTemplate.boundValueOps(key1).get(), isEqual(value1)] @AT@ 3865 @LENGTH@ 61
---------INS MethodInvocation@@isEqual(value1) @TO@ SimpleName@@MethodName:assertEquals:[value1, redisTemplate.boundValueOps(key1).get()] @AT@ 3917 @LENGTH@ 15
------------INS SimpleName@@MethodName:isEqual:[value1] @TO@ MethodInvocation@@isEqual(value1) @AT@ 3917 @LENGTH@ 15
---------------MOV SimpleName@@value1 @TO@ SimpleName@@MethodName:isEqual:[value1] @AT@ 3878 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEqual:[value1] @TO@ MethodInvocation@@isEqual(value1) @AT@ 3917 @LENGTH@ 15
---------------MOV SimpleName@@value1 @TO@ SimpleName@@MethodName:isEqual:[value1] @AT@ 3878 @LENGTH@ 6


UPD TypeDeclaration@@[public]TestKeystore,  @TO@ [public, final]TestKeystore,  @AT@ 1264 @LENGTH@ 1076
---INS Modifier@@final @TO@ TypeDeclaration@@[public]TestKeystore,  @AT@ 1271 @LENGTH@ 5


INS MethodDeclaration@@private, voidMethodName:MyConverter,  @TO@ TypeDeclaration@@[@Converter, public]MyConverter,  @AT@ 989 @LENGTH@ 52
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:MyConverter,  @AT@ 989 @LENGTH@ 7
---INS SimpleName@@MethodName:MyConverter @TO@ MethodDeclaration@@private, voidMethodName:MyConverter,  @AT@ 997 @LENGTH@ 11


UPD FieldDeclaration@@static, final, SensitiveTargetAccessConstraintDefinition, [WEB_CONNECTOR_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",true,false,false))] @TO@ static, final, SensitiveTargetAccessConstraintDefinition, [WEB_CONNECTOR_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",false,false,false))] @AT@ 5976 @LENGTH@ 225
---UPD VariableDeclarationFragment@@WEB_CONNECTOR_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",true,false,false)) @TO@ WEB_CONNECTOR_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",false,false,false)) @AT@ 6031 @LENGTH@ 169
------UPD ClassInstanceCreation@@SensitiveTargetAccessConstraintDefinition[new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",true,false,false)] @TO@ SensitiveTargetAccessConstraintDefinition[new SensitivityClassification(SUBSYSTEM_NAME,"web-connector",false,false,false)] @AT@ 6058 @LENGTH@ 142
---------UPD ClassInstanceCreation@@SensitivityClassification[SUBSYSTEM_NAME, "web-connector", true, false, false] @TO@ SensitivityClassification[SUBSYSTEM_NAME, "web-connector", false, false, false] @AT@ 6117 @LENGTH@ 82
------------UPD BooleanLiteral@@true @TO@ false @AT@ 6180 @LENGTH@ 4


UPD TypeDeclaration@@[public]SharedProducerServicePool, DefaultProducerServicePool[ShutdownableService] @TO@ [public]SharedProducerServicePool, DefaultProducerServicePool[ShutdownableService, StaticService] @AT@ 1045 @LENGTH@ 606
---INS SimpleType@@StaticService @TO@ TypeDeclaration@@[public]SharedProducerServicePool, DefaultProducerServicePool[ShutdownableService] @AT@ 1190 @LENGTH@ 13


MOV FieldDeclaration@@public, static, final, GlobalConfiguration, [GLOBAL_CONFIGURATION=new GlobalConfigurationBuilder().globalJmxStatistics().allowDuplicateDomains(true).build()] @TO@ TypeDeclaration@@[public]InfinispanIdempotentRepositoryTest,  @AT@ 1548 @LENGTH@ 154


UPD IfStatement@@if (entry == null) {  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @TO@ if (entry == null) {  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);  String elementId=element.getId();  if (contentProvider != null) {    try {      File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);      File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);      File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);      contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));    } catch (    Exception e) {      throw new PatchingException("failed to resolve content for " + element);    }  }} @AT@ 4237 @LENGTH@ 235
---UPD Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @TO@ ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);  String elementId=element.getId();  if (contentProvider != null) {    try {      File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);      File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);      File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);      contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));    } catch (    Exception e) {      throw new PatchingException("failed to resolve content for " + element);    }  }} @AT@ 4256 @LENGTH@ 216
------INS VariableDeclarationStatement@@String elementId=element.getId(); @TO@ Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @AT@ 4813 @LENGTH@ 35
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String elementId=element.getId(); @AT@ 4813 @LENGTH@ 6
---------INS VariableDeclarationFragment@@elementId=element.getId() @TO@ VariableDeclarationStatement@@String elementId=element.getId(); @AT@ 4820 @LENGTH@ 27
------------INS SimpleName@@elementId @TO@ VariableDeclarationFragment@@elementId=element.getId() @AT@ 4820 @LENGTH@ 9
------------INS MethodInvocation@@element.getId() @TO@ VariableDeclarationFragment@@elementId=element.getId() @AT@ 4832 @LENGTH@ 15
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getId() @AT@ 4832 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@element.getId() @AT@ 4840 @LENGTH@ 7
------INS IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @TO@ Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @AT@ 4933 @LENGTH@ 711
---------INS InfixExpression@@contentProvider != null @TO@ IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4937 @LENGTH@ 23
------------INS SimpleName@@contentProvider @TO@ InfixExpression@@contentProvider != null @AT@ 4937 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@contentProvider != null @AT@ 4952 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@contentProvider != null @AT@ 4956 @LENGTH@ 4
---------INS Block@@ThenBody:{  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @TO@ IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4962 @LENGTH@ 682
------------INS TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ Block@@ThenBody:{  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4980 @LENGTH@ 650
---------------INS VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5006 @LENGTH@ 102
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @AT@ 5006 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @AT@ 5011 @LENGTH@ 96
---------------------INS SimpleName@@miscRoot @TO@ VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5011 @LENGTH@ 8
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5022 @LENGTH@ 85
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5022 @LENGTH@ 85
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5030 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5056 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5067 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5067 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5077 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5091 @LENGTH@ 9
---------------------------INS SimpleName@@MISC @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5102 @LENGTH@ 4
---------------INS VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5129 @LENGTH@ 107
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @AT@ 5129 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @AT@ 5134 @LENGTH@ 101
---------------------INS SimpleName@@moduleRoot @TO@ VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5134 @LENGTH@ 10
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5147 @LENGTH@ 88
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5147 @LENGTH@ 88
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5155 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5181 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5192 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5192 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5202 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5216 @LENGTH@ 9
---------------------------INS SimpleName@@MODULES @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5227 @LENGTH@ 7
---------------INS VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5257 @LENGTH@ 107
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @AT@ 5257 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @AT@ 5262 @LENGTH@ 101
---------------------INS SimpleName@@bundleRoot @TO@ VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5262 @LENGTH@ 10
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5275 @LENGTH@ 88
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5275 @LENGTH@ 88
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5283 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5309 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5320 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5320 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5330 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5344 @LENGTH@ 9
---------------------------INS SimpleName@@BUNDLES @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5355 @LENGTH@ 7
---------------INS ExpressionStatement@@MethodInvocation:contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5385 @LENGTH@ 94
------------------INS MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @TO@ ExpressionStatement@@MethodInvocation:contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5385 @LENGTH@ 93
---------------------INS SimpleName@@Name:contentLoaders @TO@ MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5385 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @TO@ MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5400 @LENGTH@ 78
------------------------INS MethodInvocation@@element.getId() @TO@ SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @AT@ 5404 @LENGTH@ 15
---------------------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getId() @AT@ 5404 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@element.getId() @AT@ 5412 @LENGTH@ 7
------------------------INS ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @TO@ SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @AT@ 5421 @LENGTH@ 56
---------------------------INS New@@new @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5421 @LENGTH@ 3
---------------------------INS SimpleType@@PatchContentLoader @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5425 @LENGTH@ 18
---------------------------INS SimpleName@@miscRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5444 @LENGTH@ 8
---------------------------INS SimpleName@@bundleRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5454 @LENGTH@ 10
---------------------------INS SimpleName@@moduleRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5466 @LENGTH@ 10
---------------INS CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5498 @LENGTH@ 132
------------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5505 @LENGTH@ 11
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5505 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5515 @LENGTH@ 1
------------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException("failed to resolve content for " + element) @TO@ CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5540 @LENGTH@ 72
---------------------INS ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException("failed to resolve content for " + element) @AT@ 5546 @LENGTH@ 65
------------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5546 @LENGTH@ 3
------------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5550 @LENGTH@ 17
------------------------INS InfixExpression@@"failed to resolve content for " + element @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5568 @LENGTH@ 42
---------------------------INS StringLiteral@@"failed to resolve content for " @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5568 @LENGTH@ 32
---------------------------INS Operator@@+ @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5600 @LENGTH@ 1
---------------------------INS SimpleName@@element @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5603 @LENGTH@ 7


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @Ignore("camel-optaplanner feature does not yet work"), public]CamelOptaplannerTest, AbstractFeatureTest @TO@ [@RunWith(JUnit4TestRunner.class), public]CamelOptaplannerTest, AbstractFeatureTest @AT@ 1056 @LENGTH@ 436
---DEL SingleMemberAnnotation@@@Ignore("camel-optaplanner feature does not yet work") @AT@ 1089 @LENGTH@ 54


INS MethodDeclaration@@public, void, MethodName:testSelect,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 8741 @LENGTH@ 51
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 8741 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 8748 @LENGTH@ 4
---INS SimpleName@@MethodName:testSelect @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 8753 @LENGTH@ 10
---INS ExpressionStatement@@SuperMethodInvocation:super.testSelect() @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 8770 @LENGTH@ 19
------INS SuperMethodInvocation@@super.testSelect() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testSelect() @AT@ 8770 @LENGTH@ 18
---------INS SimpleName@@MethodName:testSelect:[] @TO@ SuperMethodInvocation@@super.testSelect() @AT@ 8776 @LENGTH@ 10


INS IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @TO@ MethodDeclaration@@public, void, MethodName:addUnderlyingPermission, ManagementPermission underlyingPermission,  @AT@ 2283 @LENGTH@ 171
---INS InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @TO@ IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2287 @LENGTH@ 84
------INS InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2287 @LENGTH@ 48
---------INS SimpleName@@combinationPolicy @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2287 @LENGTH@ 17
---------INS Operator@@== @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2304 @LENGTH@ 2
---------INS QualifiedName@@CombinationPolicy.REJECTING @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2308 @LENGTH@ 27
------------INS SimpleName@@CombinationPolicy @TO@ QualifiedName@@CombinationPolicy.REJECTING @AT@ 2308 @LENGTH@ 17
------------INS SimpleName@@REJECTING @TO@ QualifiedName@@CombinationPolicy.REJECTING @AT@ 2326 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2335 @LENGTH@ 2
------INS InfixExpression@@underlyingPermissions.size() > 0 @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2339 @LENGTH@ 32
---------INS MethodInvocation@@underlyingPermissions.size() @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2339 @LENGTH@ 28
------------INS SimpleName@@Name:underlyingPermissions @TO@ MethodInvocation@@underlyingPermissions.size() @AT@ 2339 @LENGTH@ 21
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@underlyingPermissions.size() @AT@ 2361 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2367 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2370 @LENGTH@ 1
---INS Block@@ThenBody:{  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @TO@ IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2373 @LENGTH@ 81
------INS ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.illegalMultipleRoles() @TO@ Block@@ThenBody:{  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2387 @LENGTH@ 57
---------INS MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @TO@ ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2393 @LENGTH@ 50
------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2393 @LENGTH@ 27
------------INS SimpleName@@MethodName:illegalMultipleRoles:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2421 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:LOGGER.log(Level.WARNING,String.format("Failed to uploade metadata: %s due to %s",path,e)) @TO@ MethodInvocation:LOGGER.log(Level.WARNING,String.format("Failed to upload metadata: %s due to %s",path,e)) @AT@ 10806 @LENGTH@ 94
---UPD MethodInvocation@@LOGGER.log(Level.WARNING,String.format("Failed to uploade metadata: %s due to %s",path,e)) @TO@ LOGGER.log(Level.WARNING,String.format("Failed to upload metadata: %s due to %s",path,e)) @AT@ 10806 @LENGTH@ 93
------UPD SimpleName@@MethodName:log:[Level.WARNING, String.format("Failed to uploade metadata: %s due to %s",path,e)] @TO@ MethodName:log:[Level.WARNING, String.format("Failed to upload metadata: %s due to %s",path,e)] @AT@ 10813 @LENGTH@ 86
---------UPD MethodInvocation@@String.format("Failed to uploade metadata: %s due to %s",path,e) @TO@ String.format("Failed to upload metadata: %s due to %s",path,e) @AT@ 10832 @LENGTH@ 66
------------UPD SimpleName@@MethodName:format:["Failed to uploade metadata: %s due to %s", path, e] @TO@ MethodName:format:["Failed to upload metadata: %s due to %s", path, e] @AT@ 10839 @LENGTH@ 59
---------------UPD StringLiteral@@"Failed to uploade metadata: %s due to %s" @TO@ "Failed to upload metadata: %s due to %s" @AT@ 10846 @LENGTH@ 42


UPD TypeDeclaration@@[public]MasterEndpointFailoverTest,  @TO@ [@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]MasterEndpointFailoverTest,  @AT@ 1347 @LENGTH@ 4044
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @TO@ TypeDeclaration@@[public]MasterEndpointFailoverTest,  @AT@ 1373 @LENGTH@ 53


UPD VariableDeclarationStatement@@Exchange exchange=consumer.endpoint.createRabbitExchange(envelope); @TO@ Exchange exchange=consumer.endpoint.createRabbitExchange(envelope,body); @AT@ 4026 @LENGTH@ 69
---UPD VariableDeclarationFragment@@exchange=consumer.endpoint.createRabbitExchange(envelope) @TO@ exchange=consumer.endpoint.createRabbitExchange(envelope,body) @AT@ 4035 @LENGTH@ 59
------UPD MethodInvocation@@consumer.endpoint.createRabbitExchange(envelope) @TO@ consumer.endpoint.createRabbitExchange(envelope,body) @AT@ 4046 @LENGTH@ 48
---------UPD SimpleName@@MethodName:createRabbitExchange:[envelope] @TO@ MethodName:createRabbitExchange:[envelope, body] @AT@ 4064 @LENGTH@ 30
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:createRabbitExchange:[envelope] @AT@ 4095 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @TO@ TypeDeclaration@@[public]FileUtils,  @AT@ 3790 @LENGTH@ 487
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3790 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3797 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3804 @LENGTH@ 7
---INS SimpleName@@MethodName:waitForFiles @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3812 @LENGTH@ 12
---INS SingleVariableDeclaration@@File... files @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3825 @LENGTH@ 13
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File... files @AT@ 3825 @LENGTH@ 4
------INS SimpleName@@files @TO@ SingleVariableDeclaration@@File... files @AT@ 3833 @LENGTH@ 5
---INS VariableDeclarationStatement@@long exitTime=20000 + System.currentTimeMillis(); @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3850 @LENGTH@ 51
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long exitTime=20000 + System.currentTimeMillis(); @AT@ 3850 @LENGTH@ 4
------INS VariableDeclarationFragment@@exitTime=20000 + System.currentTimeMillis() @TO@ VariableDeclarationStatement@@long exitTime=20000 + System.currentTimeMillis(); @AT@ 3855 @LENGTH@ 45
---------INS SimpleName@@exitTime @TO@ VariableDeclarationFragment@@exitTime=20000 + System.currentTimeMillis() @AT@ 3855 @LENGTH@ 8
---------INS InfixExpression@@20000 + System.currentTimeMillis() @TO@ VariableDeclarationFragment@@exitTime=20000 + System.currentTimeMillis() @AT@ 3866 @LENGTH@ 34
------------INS NumberLiteral@@20000 @TO@ InfixExpression@@20000 + System.currentTimeMillis() @AT@ 3866 @LENGTH@ 5
------------INS Operator@@+ @TO@ InfixExpression@@20000 + System.currentTimeMillis() @AT@ 3871 @LENGTH@ 1
------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@20000 + System.currentTimeMillis() @AT@ 3874 @LENGTH@ 26
---------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 3874 @LENGTH@ 6
---------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 3881 @LENGTH@ 19
---INS DoStatement@@do {  boolean allExist=true;  for (  File file : files) {    if (!file.exists()) {      allExist=false;      break;    }  }  if (allExist) {    return true;  }} while (System.currentTimeMillis() < exitTime); @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 3910 @LENGTH@ 339
------INS VariableDeclarationStatement@@boolean allExist=true; @TO@ DoStatement@@do {  boolean allExist=true;  for (  File file : files) {    if (!file.exists()) {      allExist=false;      break;    }  }  if (allExist) {    return true;  }} while (System.currentTimeMillis() < exitTime); @AT@ 3927 @LENGTH@ 24
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean allExist=true; @AT@ 3927 @LENGTH@ 7
---------INS VariableDeclarationFragment@@allExist=true @TO@ VariableDeclarationStatement@@boolean allExist=true; @AT@ 3935 @LENGTH@ 15
------------INS SimpleName@@allExist @TO@ VariableDeclarationFragment@@allExist=true @AT@ 3935 @LENGTH@ 8
------------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@allExist=true @AT@ 3946 @LENGTH@ 4
------INS EnhancedForStatement@@for (File file : files) {  if (!file.exists()) {    allExist=false;    break;  }} @TO@ DoStatement@@do {  boolean allExist=true;  for (  File file : files) {    if (!file.exists()) {      allExist=false;      break;    }  }  if (allExist) {    return true;  }} while (System.currentTimeMillis() < exitTime); @AT@ 3964 @LENGTH@ 158
---------INS SingleVariableDeclaration@@File file @TO@ EnhancedForStatement@@for (File file : files) {  if (!file.exists()) {    allExist=false;    break;  }} @AT@ 3968 @LENGTH@ 9
------------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 3968 @LENGTH@ 4
------------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 3973 @LENGTH@ 4
---------INS SimpleName@@files @TO@ EnhancedForStatement@@for (File file : files) {  if (!file.exists()) {    allExist=false;    break;  }} @AT@ 3980 @LENGTH@ 5
---------INS IfStatement@@if (!file.exists()) {  allExist=false;  break;} @TO@ EnhancedForStatement@@for (File file : files) {  if (!file.exists()) {    allExist=false;    break;  }} @AT@ 4005 @LENGTH@ 103
------------INS PrefixExpression@@!file.exists() @TO@ IfStatement@@if (!file.exists()) {  allExist=false;  break;} @AT@ 4008 @LENGTH@ 14
---------------INS Operator@@! @TO@ PrefixExpression@@!file.exists() @AT@ 4008 @LENGTH@ 1
---------------INS MethodInvocation@@file.exists() @TO@ PrefixExpression@@!file.exists() @AT@ 4009 @LENGTH@ 13
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 4009 @LENGTH@ 4
------------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 4014 @LENGTH@ 8
------------INS Block@@ThenBody:{  allExist=false;  break;} @TO@ IfStatement@@if (!file.exists()) {  allExist=false;  break;} @AT@ 4024 @LENGTH@ 84
---------------INS ExpressionStatement@@Assignment:allExist=false @TO@ Block@@ThenBody:{  allExist=false;  break;} @AT@ 4046 @LENGTH@ 17
------------------INS Assignment@@allExist=false @TO@ ExpressionStatement@@Assignment:allExist=false @AT@ 4046 @LENGTH@ 16
---------------------INS SimpleName@@allExist @TO@ Assignment@@allExist=false @AT@ 4046 @LENGTH@ 8
---------------------INS Operator@@= @TO@ Assignment@@allExist=false @AT@ 4054 @LENGTH@ 1
---------------------INS BooleanLiteral@@false @TO@ Assignment@@allExist=false @AT@ 4057 @LENGTH@ 5
---------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  allExist=false;  break;} @AT@ 4084 @LENGTH@ 6
------INS IfStatement@@if (allExist) {  return true;} @TO@ DoStatement@@do {  boolean allExist=true;  for (  File file : files) {    if (!file.exists()) {      allExist=false;      break;    }  }  if (allExist) {    return true;  }} while (System.currentTimeMillis() < exitTime); @AT@ 4135 @LENGTH@ 57
---------INS SimpleName@@allExist @TO@ IfStatement@@if (allExist) {  return true;} @AT@ 4138 @LENGTH@ 8
---------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (allExist) {  return true;} @AT@ 4148 @LENGTH@ 44
------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 4166 @LENGTH@ 12
---------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4173 @LENGTH@ 4
------INS InfixExpression@@System.currentTimeMillis() < exitTime @TO@ DoStatement@@do {  boolean allExist=true;  for (  File file : files) {    if (!file.exists()) {      allExist=false;      break;    }  }  if (allExist) {    return true;  }} while (System.currentTimeMillis() < exitTime); @AT@ 4210 @LENGTH@ 37
---------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.currentTimeMillis() < exitTime @AT@ 4210 @LENGTH@ 26
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4210 @LENGTH@ 6
------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4217 @LENGTH@ 19
---------INS Operator@@< @TO@ InfixExpression@@System.currentTimeMillis() < exitTime @AT@ 4236 @LENGTH@ 1
---------INS SimpleName@@exitTime @TO@ InfixExpression@@System.currentTimeMillis() < exitTime @AT@ 4239 @LENGTH@ 8
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:waitForFiles, File... files,  @AT@ 4258 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4265 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:connection.select(1) @TO@ SuperMethodInvocation:super.testSelect() @AT@ 7066 @LENGTH@ 21
---DEL MethodInvocation@@connection.select(1) @AT@ 7066 @LENGTH@ 20
------DEL SimpleName@@Name:connection @AT@ 7066 @LENGTH@ 10
------DEL SimpleName@@MethodName:select:[1] @AT@ 7077 @LENGTH@ 9
---------DEL NumberLiteral@@1 @AT@ 7084 @LENGTH@ 1
---INS SuperMethodInvocation@@super.testSelect() @TO@ ExpressionStatement@@MethodInvocation:connection.select(1) @AT@ 7066 @LENGTH@ 18
------INS SimpleName@@MethodName:testSelect:[] @TO@ SuperMethodInvocation@@super.testSelect() @AT@ 7072 @LENGTH@ 10


UPD Block@@ThenBody:{  final String comment=in.readLine().trim();  token.content.append(comment);  token.type=COMMENT;  return token;} @TO@ ThenBody:{  String line=in.readLine();  if (line == null) {    token.type=EOF;    return token;  }  final String comment=line.trim();  token.content.append(comment);  token.type=COMMENT;  return token;} @AT@ 3236 @LENGTH@ 171
---UPD VariableDeclarationStatement@@final String comment=in.readLine().trim(); @TO@ final String comment=line.trim(); @AT@ 3250 @LENGTH@ 44
------UPD VariableDeclarationFragment@@comment=in.readLine().trim() @TO@ comment=line.trim() @AT@ 3263 @LENGTH@ 30
---------UPD MethodInvocation@@in.readLine().trim() @TO@ line.trim() @AT@ 3273 @LENGTH@ 20
------------DEL MethodInvocation@@MethodName:readLine:[] @AT@ 3273 @LENGTH@ 13
------------UPD SimpleName@@Name:in @TO@ Name:line @AT@ 3273 @LENGTH@ 2
---INS VariableDeclarationStatement@@String line=in.readLine(); @TO@ Block@@ThenBody:{  final String comment=in.readLine().trim();  token.content.append(comment);  token.type=COMMENT;  return token;} @AT@ 3250 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String line=in.readLine(); @AT@ 3250 @LENGTH@ 6
------INS VariableDeclarationFragment@@line=in.readLine() @TO@ VariableDeclarationStatement@@String line=in.readLine(); @AT@ 3257 @LENGTH@ 20
---------INS SimpleName@@line @TO@ VariableDeclarationFragment@@line=in.readLine() @AT@ 3257 @LENGTH@ 4
---------INS MethodInvocation@@in.readLine() @TO@ VariableDeclarationFragment@@line=in.readLine() @AT@ 3264 @LENGTH@ 13
------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.readLine() @AT@ 3264 @LENGTH@ 2
------------INS SimpleName@@MethodName:readLine:[] @TO@ MethodInvocation@@in.readLine() @AT@ 3267 @LENGTH@ 10
---INS IfStatement@@if (line == null) {  token.type=EOF;  return token;} @TO@ Block@@ThenBody:{  final String comment=in.readLine().trim();  token.content.append(comment);  token.type=COMMENT;  return token;} @AT@ 3291 @LENGTH@ 180
------INS InfixExpression@@line == null @TO@ IfStatement@@if (line == null) {  token.type=EOF;  return token;} @AT@ 3295 @LENGTH@ 12
---------INS SimpleName@@line @TO@ InfixExpression@@line == null @AT@ 3295 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@line == null @AT@ 3299 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@line == null @AT@ 3303 @LENGTH@ 4
------INS Block@@ThenBody:{  token.type=EOF;  return token;} @TO@ IfStatement@@if (line == null) {  token.type=EOF;  return token;} @AT@ 3309 @LENGTH@ 162
---------INS ExpressionStatement@@Assignment:token.type=EOF @TO@ Block@@ThenBody:{  token.type=EOF;  return token;} @AT@ 3327 @LENGTH@ 17
------------INS Assignment@@token.type=EOF @TO@ ExpressionStatement@@Assignment:token.type=EOF @AT@ 3327 @LENGTH@ 16
---------------INS QualifiedName@@token.type @TO@ Assignment@@token.type=EOF @AT@ 3327 @LENGTH@ 10
------------------INS SimpleName@@token @TO@ QualifiedName@@token.type @AT@ 3327 @LENGTH@ 5
------------------INS SimpleName@@type @TO@ QualifiedName@@token.type @AT@ 3333 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@token.type=EOF @AT@ 3337 @LENGTH@ 1
---------------INS SimpleName@@EOF @TO@ Assignment@@token.type=EOF @AT@ 3340 @LENGTH@ 3
---------INS ReturnStatement@@SimpleName:token @TO@ Block@@ThenBody:{  token.type=EOF;  return token;} @AT@ 3428 @LENGTH@ 13
------------INS SimpleName@@token @TO@ ReturnStatement@@SimpleName:token @AT@ 3435 @LENGTH@ 5


UPD MethodDeclaration@@abstract, boolean, MethodName:compare, AuditLogHandler other,  @TO@ abstract, boolean, MethodName:isDifferent, AuditLogHandler other,  @AT@ 3581 @LENGTH@ 48
---UPD SimpleName@@MethodName:compare @TO@ MethodName:isDifferent @AT@ 3598 @LENGTH@ 7


UPD VariableDeclarationStatement@@String db_dir=getTestDir() + "/hbasedb"; @TO@ String db_dir=new Path(getTestDir(),"hbasedb").toString(); @AT@ 7378 @LENGTH@ 42
---UPD VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @TO@ db_dir=new Path(getTestDir(),"hbasedb").toString() @AT@ 7385 @LENGTH@ 34
------INS MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @TO@ VariableDeclarationFragment@@db_dir=getTestDir() + "/hbasedb" @AT@ 7394 @LENGTH@ 44
---------INS ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @TO@ MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @AT@ 7394 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 7394 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 7398 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:getTestDir:[] @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 7403 @LENGTH@ 12
------------INS StringLiteral@@"hbasedb" @TO@ ClassInstanceCreation@@Path[getTestDir(), "hbasedb"] @AT@ 7417 @LENGTH@ 9
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@new Path(getTestDir(),"hbasedb").toString() @AT@ 7428 @LENGTH@ 10
------DEL InfixExpression@@getTestDir() + "/hbasedb" @AT@ 7394 @LENGTH@ 25
---------DEL MethodInvocation@@MethodName:getTestDir:[] @AT@ 7394 @LENGTH@ 12
---------DEL Operator@@+ @AT@ 7406 @LENGTH@ 1
---------DEL StringLiteral@@"/hbasedb" @AT@ 7409 @LENGTH@ 10


INS IfStatement@@if (mavenDownloadProxyServlet != null) {  this.mavenDownloadProxyServlet.stop();} @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 6346 @LENGTH@ 101
---INS InfixExpression@@mavenDownloadProxyServlet != null @TO@ IfStatement@@if (mavenDownloadProxyServlet != null) {  this.mavenDownloadProxyServlet.stop();} @AT@ 6350 @LENGTH@ 33
------INS SimpleName@@mavenDownloadProxyServlet @TO@ InfixExpression@@mavenDownloadProxyServlet != null @AT@ 6350 @LENGTH@ 25
------INS Operator@@!= @TO@ InfixExpression@@mavenDownloadProxyServlet != null @AT@ 6375 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@mavenDownloadProxyServlet != null @AT@ 6379 @LENGTH@ 4
---INS Block@@ThenBody:{  this.mavenDownloadProxyServlet.stop();} @TO@ IfStatement@@if (mavenDownloadProxyServlet != null) {  this.mavenDownloadProxyServlet.stop();} @AT@ 6385 @LENGTH@ 62
------MOV ExpressionStatement@@MethodInvocation:this.mavenDownloadProxyServlet.stop() @TO@ Block@@ThenBody:{  this.mavenDownloadProxyServlet.stop();} @AT@ 6346 @LENGTH@ 38


UPD VariableDeclarationStatement@@String value=cfg.get(key); @TO@ String value=(String)cfg.get(key); @AT@ 8499 @LENGTH@ 28
---UPD VariableDeclarationFragment@@value=cfg.get(key) @TO@ value=(String)cfg.get(key) @AT@ 8506 @LENGTH@ 20
------INS CastExpression@@(String)cfg.get(key) @TO@ VariableDeclarationFragment@@value=cfg.get(key) @AT@ 8514 @LENGTH@ 20
---------MOV MethodInvocation@@cfg.get(key) @TO@ CastExpression@@(String)cfg.get(key) @AT@ 8514 @LENGTH@ 12
---------INS SimpleType@@String @TO@ CastExpression@@(String)cfg.get(key) @AT@ 8515 @LENGTH@ 6


UPD VariableDeclarationStatement@@DefaultCxfMesssageMapper mapper=new DefaultCxfMesssageMapper(); @TO@ DefaultCxfMessageMapper mapper=new DefaultCxfMessageMapper(); @AT@ 1486 @LENGTH@ 65
---UPD SimpleType@@DefaultCxfMesssageMapper @TO@ DefaultCxfMessageMapper @AT@ 1486 @LENGTH@ 24
---UPD VariableDeclarationFragment@@mapper=new DefaultCxfMesssageMapper() @TO@ mapper=new DefaultCxfMessageMapper() @AT@ 1511 @LENGTH@ 39
------UPD ClassInstanceCreation@@DefaultCxfMesssageMapper[] @TO@ DefaultCxfMessageMapper[] @AT@ 1520 @LENGTH@ 30
---------UPD SimpleType@@DefaultCxfMesssageMapper @TO@ DefaultCxfMessageMapper @AT@ 1524 @LENGTH@ 24


INS IfStatement@@if (rawValues == null) {  return null;} @TO@ MethodDeclaration@@Set<TypedTuple<V>>, MethodName:deserializeTupleValues, Set<Tuple> rawValues,  @AT@ 3970 @LENGTH@ 43
---INS InfixExpression@@rawValues == null @TO@ IfStatement@@if (rawValues == null) {  return null;} @AT@ 3973 @LENGTH@ 17
------INS SimpleName@@rawValues @TO@ InfixExpression@@rawValues == null @AT@ 3973 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@rawValues == null @AT@ 3982 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@rawValues == null @AT@ 3986 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (rawValues == null) {  return null;} @AT@ 3992 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 3997 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4004 @LENGTH@ 4


UPD EnhancedForStatement@@for (String version : gitVersions) {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ for (String version : gitVersions) {  if (!remoteBranches.containsKey(version)) {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } else   if (!localBranches.containsKey(version)) {    git.branchCreate().setName(version).call();    git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    }  }} @AT@ 9085 @LENGTH@ 672
---INS IfStatement@@if (!remoteBranches.containsKey(version)) {  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ EnhancedForStatement@@for (String version : gitVersions) {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9166 @LENGTH@ 1145
------INS PrefixExpression@@!remoteBranches.containsKey(version) @TO@ IfStatement@@if (!remoteBranches.containsKey(version)) {  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9170 @LENGTH@ 36
---------INS Operator@@! @TO@ PrefixExpression@@!remoteBranches.containsKey(version) @AT@ 9170 @LENGTH@ 1
---------INS MethodInvocation@@remoteBranches.containsKey(version) @TO@ PrefixExpression@@!remoteBranches.containsKey(version) @AT@ 9171 @LENGTH@ 35
------------INS SimpleName@@Name:remoteBranches @TO@ MethodInvocation@@remoteBranches.containsKey(version) @AT@ 9171 @LENGTH@ 14
------------INS SimpleName@@MethodName:containsKey:[version] @TO@ MethodInvocation@@remoteBranches.containsKey(version) @AT@ 9186 @LENGTH@ 20
---------------INS SimpleName@@version @TO@ SimpleName@@MethodName:containsKey:[version] @AT@ 9198 @LENGTH@ 7
------INS Block@@ThenBody:{  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} @TO@ IfStatement@@if (!remoteBranches.containsKey(version)) {  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9208 @LENGTH@ 126
---------INS ExpressionStatement@@MethodInvocation:git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @TO@ Block@@ThenBody:{  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} @AT@ 9226 @LENGTH@ 94
------------INS MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @TO@ ExpressionStatement@@MethodInvocation:git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9226 @LENGTH@ 93
---------------INS MethodInvocation@@MethodName:setForce:[true] @TO@ MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9226 @LENGTH@ 86
------------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setForce:[true] @AT@ 9307 @LENGTH@ 4
---------------INS MethodInvocation@@MethodName:setBranchNames:[localBranches.get(version).getName()] @TO@ MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9226 @LENGTH@ 71
------------------INS MethodInvocation@@localBranches.get(version).getName() @TO@ MethodInvocation@@MethodName:setBranchNames:[localBranches.get(version).getName()] @AT@ 9260 @LENGTH@ 36
---------------------INS MethodInvocation@@MethodName:get:[version] @TO@ MethodInvocation@@localBranches.get(version).getName() @AT@ 9260 @LENGTH@ 26
------------------------INS SimpleName@@version @TO@ MethodInvocation@@MethodName:get:[version] @AT@ 9278 @LENGTH@ 7
---------------------INS SimpleName@@Name:localBranches @TO@ MethodInvocation@@localBranches.get(version).getName() @AT@ 9260 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@localBranches.get(version).getName() @AT@ 9287 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:branchDelete:[] @TO@ MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9226 @LENGTH@ 18
---------------INS SimpleName@@Name:git @TO@ MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9226 @LENGTH@ 3
---------------INS SimpleName@@MethodName:call:[] @TO@ MethodInvocation@@git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call() @AT@ 9313 @LENGTH@ 6
------INS Block@@ElseBody:if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ IfStatement@@if (!remoteBranches.containsKey(version)) {  git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9393 @LENGTH@ 918
---------INS IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ Block@@ElseBody:if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9393 @LENGTH@ 918
------------INS PrefixExpression@@!localBranches.containsKey(version) @TO@ IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9397 @LENGTH@ 35
---------------INS Operator@@! @TO@ PrefixExpression@@!localBranches.containsKey(version) @AT@ 9397 @LENGTH@ 1
---------------INS MethodInvocation@@localBranches.containsKey(version) @TO@ PrefixExpression@@!localBranches.containsKey(version) @AT@ 9398 @LENGTH@ 34
------------------INS SimpleName@@Name:localBranches @TO@ MethodInvocation@@localBranches.containsKey(version) @AT@ 9398 @LENGTH@ 13
------------------INS SimpleName@@MethodName:containsKey:[version] @TO@ MethodInvocation@@localBranches.containsKey(version) @AT@ 9412 @LENGTH@ 20
---------------------INS SimpleName@@version @TO@ SimpleName@@MethodName:containsKey:[version] @AT@ 9424 @LENGTH@ 7
------------INS Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} @TO@ IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9434 @LENGTH@ 194
---------------INS ExpressionStatement@@MethodInvocation:git.branchCreate().setName(version).call() @TO@ Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} @AT@ 9452 @LENGTH@ 43
------------------INS MethodInvocation@@git.branchCreate().setName(version).call() @TO@ ExpressionStatement@@MethodInvocation:git.branchCreate().setName(version).call() @AT@ 9452 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:setName:[version] @TO@ MethodInvocation@@git.branchCreate().setName(version).call() @AT@ 9452 @LENGTH@ 35
------------------------INS SimpleName@@version @TO@ MethodInvocation@@MethodName:setName:[version] @AT@ 9479 @LENGTH@ 7
---------------------INS MethodInvocation@@MethodName:branchCreate:[] @TO@ MethodInvocation@@git.branchCreate().setName(version).call() @AT@ 9452 @LENGTH@ 18
---------------------INS SimpleName@@Name:git @TO@ MethodInvocation@@git.branchCreate().setName(version).call() @AT@ 9452 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:call:[] @TO@ MethodInvocation@@git.branchCreate().setName(version).call() @AT@ 9488 @LENGTH@ 6
---------------INS ExpressionStatement@@MethodInvocation:git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @TO@ Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} @AT@ 9512 @LENGTH@ 102
------------------INS MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @TO@ ExpressionStatement@@MethodInvocation:git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9512 @LENGTH@ 101
---------------------INS MethodInvocation@@MethodName:setRef:[remoteBranches.get(version).getName()] @TO@ MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9512 @LENGTH@ 94
------------------------INS MethodInvocation@@remoteBranches.get(version).getName() @TO@ MethodInvocation@@MethodName:setRef:[remoteBranches.get(version).getName()] @AT@ 9568 @LENGTH@ 37
---------------------------INS MethodInvocation@@MethodName:get:[version] @TO@ MethodInvocation@@remoteBranches.get(version).getName() @AT@ 9568 @LENGTH@ 27
------------------------------INS SimpleName@@version @TO@ MethodInvocation@@MethodName:get:[version] @AT@ 9587 @LENGTH@ 7
---------------------------INS SimpleName@@Name:remoteBranches @TO@ MethodInvocation@@remoteBranches.get(version).getName() @AT@ 9568 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@remoteBranches.get(version).getName() @AT@ 9596 @LENGTH@ 9
---------------------INS MethodInvocation@@MethodName:setMode:[ResetCommand.ResetType.HARD] @TO@ MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9512 @LENGTH@ 48
------------------------INS QualifiedName@@ResetCommand.ResetType.HARD @TO@ MethodInvocation@@MethodName:setMode:[ResetCommand.ResetType.HARD] @AT@ 9532 @LENGTH@ 27
---------------------------INS QualifiedName@@ResetCommand.ResetType @TO@ QualifiedName@@ResetCommand.ResetType.HARD @AT@ 9532 @LENGTH@ 22
------------------------------INS SimpleName@@ResetCommand @TO@ QualifiedName@@ResetCommand.ResetType @AT@ 9532 @LENGTH@ 12
------------------------------INS SimpleName@@ResetType @TO@ QualifiedName@@ResetCommand.ResetType @AT@ 9545 @LENGTH@ 9
---------------------------INS SimpleName@@HARD @TO@ QualifiedName@@ResetCommand.ResetType.HARD @AT@ 9555 @LENGTH@ 4
---------------------INS MethodInvocation@@MethodName:reset:[] @TO@ MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9512 @LENGTH@ 11
---------------------INS SimpleName@@Name:git @TO@ MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9512 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:call:[] @TO@ MethodInvocation@@git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call() @AT@ 9607 @LENGTH@ 6
------------INS Block@@ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9634 @LENGTH@ 677
---------------MOV VariableDeclarationStatement@@String localCommit=localBranches.get(version).getObjectId().getName(); @TO@ Block@@ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9134 @LENGTH@ 72
---------------MOV VariableDeclarationStatement@@String remoteCommit=remoteBranches.get(version).getObjectId().getName(); @TO@ Block@@ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9219 @LENGTH@ 74
---------------MOV IfStatement@@if (!localCommit.equals(remoteCommit)) {  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();} @TO@ Block@@ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @AT@ 9306 @LENGTH@ 441


INS MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @TO@ TypeDeclaration@@[public]FabricManagerMBean,  @AT@ 5021 @LENGTH@ 62
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 5008 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 5008 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 5013 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 5021 @LENGTH@ 25
---INS SingleVariableDeclaration@@String versionId @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 5047 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String versionId @AT@ 5047 @LENGTH@ 6
------INS SimpleName@@versionId @TO@ SingleVariableDeclaration@@String versionId @AT@ 5054 @LENGTH@ 9
---INS SingleVariableDeclaration@@String profileId @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 5065 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String profileId @AT@ 5065 @LENGTH@ 6
------INS SimpleName@@profileId @TO@ SingleVariableDeclaration@@String profileId @AT@ 5072 @LENGTH@ 9


INS MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @TO@ TypeDeclaration@@[public]PatchingAssert,  @AT@ 7813 @LENGTH@ 828
---INS Modifier@@static @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7813 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7820 @LENGTH@ 4
---INS SimpleName@@MethodName:assertPatchHasBeenRolledBack @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7825 @LENGTH@ 28
---INS SingleVariableDeclaration@@PatchingResult result @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7854 @LENGTH@ 21
------INS SimpleType@@PatchingResult @TO@ SingleVariableDeclaration@@PatchingResult result @AT@ 7854 @LENGTH@ 14
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@PatchingResult result @AT@ 7869 @LENGTH@ 6
---INS SingleVariableDeclaration@@Patch patch @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7877 @LENGTH@ 11
------INS SimpleType@@Patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 7877 @LENGTH@ 5
------INS SimpleName@@patch @TO@ SingleVariableDeclaration@@Patch patch @AT@ 7883 @LENGTH@ 5
---INS SingleVariableDeclaration@@PatchInfo expectedPatchInfo @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7890 @LENGTH@ 27
------INS SimpleType@@PatchInfo @TO@ SingleVariableDeclaration@@PatchInfo expectedPatchInfo @AT@ 7890 @LENGTH@ 9
------INS SimpleName@@expectedPatchInfo @TO@ SingleVariableDeclaration@@PatchInfo expectedPatchInfo @AT@ 7900 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 7929 @LENGTH@ 83
------INS MethodInvocation@@assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @AT@ 7929 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @TO@ MethodInvocation@@assertFalse("encountered problems: " + result.getProblems(),result.hasFailures()) @AT@ 7929 @LENGTH@ 82
------------INS InfixExpression@@"encountered problems: " + result.getProblems() @TO@ SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @AT@ 7941 @LENGTH@ 47
---------------INS StringLiteral@@"encountered problems: " @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7941 @LENGTH@ 24
---------------INS Operator@@+ @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7965 @LENGTH@ 1
---------------INS MethodInvocation@@result.getProblems() @TO@ InfixExpression@@"encountered problems: " + result.getProblems() @AT@ 7968 @LENGTH@ 20
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getProblems() @AT@ 7968 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProblems:[] @TO@ MethodInvocation@@result.getProblems() @AT@ 7975 @LENGTH@ 13
------------INS MethodInvocation@@result.hasFailures() @TO@ SimpleName@@MethodName:assertFalse:["encountered problems: " + result.getProblems(), result.hasFailures()] @AT@ 7990 @LENGTH@ 20
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.hasFailures() @AT@ 7990 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hasFailures:[] @TO@ MethodInvocation@@result.hasFailures() @AT@ 7997 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8021 @LENGTH@ 81
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @AT@ 8021 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getVersion(),result.getPatchInfo().getVersion()) @AT@ 8021 @LENGTH@ 80
------------INS MethodInvocation@@expectedPatchInfo.getVersion() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @AT@ 8034 @LENGTH@ 30
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getVersion() @AT@ 8034 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@expectedPatchInfo.getVersion() @AT@ 8052 @LENGTH@ 12
------------INS MethodInvocation@@result.getPatchInfo().getVersion() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getVersion(), result.getPatchInfo().getVersion()] @AT@ 8066 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8066 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8066 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 8088 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8111 @LENGTH@ 91
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @AT@ 8111 @LENGTH@ 90
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getCumulativeID(),result.getPatchInfo().getCumulativeID()) @AT@ 8111 @LENGTH@ 90
------------INS MethodInvocation@@expectedPatchInfo.getCumulativeID() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @AT@ 8124 @LENGTH@ 35
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getCumulativeID() @AT@ 8124 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getCumulativeID:[] @TO@ MethodInvocation@@expectedPatchInfo.getCumulativeID() @AT@ 8142 @LENGTH@ 17
------------INS MethodInvocation@@result.getPatchInfo().getCumulativeID() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getCumulativeID(), result.getPatchInfo().getCumulativeID()] @AT@ 8161 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8161 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8161 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCumulativeID:[] @TO@ MethodInvocation@@result.getPatchInfo().getCumulativeID() @AT@ 8183 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8211 @LENGTH@ 83
------INS MethodInvocation@@assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @AT@ 8211 @LENGTH@ 82
---------INS SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @TO@ MethodInvocation@@assertEquals(expectedPatchInfo.getPatchIDs(),result.getPatchInfo().getPatchIDs()) @AT@ 8211 @LENGTH@ 82
------------INS MethodInvocation@@expectedPatchInfo.getPatchIDs() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @AT@ 8224 @LENGTH@ 31
---------------INS SimpleName@@Name:expectedPatchInfo @TO@ MethodInvocation@@expectedPatchInfo.getPatchIDs() @AT@ 8224 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@expectedPatchInfo.getPatchIDs() @AT@ 8242 @LENGTH@ 13
------------INS MethodInvocation@@result.getPatchInfo().getPatchIDs() @TO@ SimpleName@@MethodName:assertEquals:[expectedPatchInfo.getPatchIDs(), result.getPatchInfo().getPatchIDs()] @AT@ 8257 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8257 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8257 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs() @AT@ 8279 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8304 @LENGTH@ 106
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @AT@ 8304 @LENGTH@ 105
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())) @AT@ 8304 @LENGTH@ 105
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId())] @AT@ 8326 @LENGTH@ 82
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8326 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getModulePatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getModulePatchDirectory(patch.getPatchId()) @AT@ 8365 @LENGTH@ 43
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getModulePatchDirectory:[patch.getPatchId()] @AT@ 8389 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8389 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8395 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8419 @LENGTH@ 107
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @AT@ 8419 @LENGTH@ 106
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())) @AT@ 8419 @LENGTH@ 106
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId())] @AT@ 8441 @LENGTH@ 83
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8441 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBundlesPatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getBundlesPatchDirectory(patch.getPatchId()) @AT@ 8480 @LENGTH@ 44
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getBundlesPatchDirectory:[patch.getPatchId()] @AT@ 8505 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8505 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8511 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @TO@ MethodDeclaration@@static, void, MethodName:assertPatchHasBeenRolledBack, PatchingResult result, Patch patch, PatchInfo expectedPatchInfo,  @AT@ 8535 @LENGTH@ 100
------INS MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @TO@ ExpressionStatement@@MethodInvocation:assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @AT@ 8535 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())] @TO@ MethodInvocation@@assertDirDoesNotExist(result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())) @AT@ 8535 @LENGTH@ 99
------------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @TO@ SimpleName@@MethodName:assertDirDoesNotExist:[result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId())] @AT@ 8557 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8557 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPatchDirectory:[patch.getPatchId()] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getPatchDirectory(patch.getPatchId()) @AT@ 8596 @LENGTH@ 37
------------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:getPatchDirectory:[patch.getPatchId()] @AT@ 8614 @LENGTH@ 18
---------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8614 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 8620 @LENGTH@ 12


UPD IfStatement@@if (context.isRegisterTransformers()) {  registerTransformers_1_1(registration);  registerTransformers_1_2(registration);} @TO@ if (context.isRegisterTransformers()) {  registerTransformers_1_1(registration);  registerTransformers_1_2(registration);  registerTransformers_1_3(registration);} @AT@ 5774 @LENGTH@ 153
---UPD Block@@ThenBody:{  registerTransformers_1_1(registration);  registerTransformers_1_2(registration);} @TO@ ThenBody:{  registerTransformers_1_1(registration);  registerTransformers_1_2(registration);  registerTransformers_1_3(registration);} @AT@ 5812 @LENGTH@ 115
------INS ExpressionStatement@@MethodInvocation:registerTransformers_1_3(registration) @TO@ Block@@ThenBody:{  registerTransformers_1_1(registration);  registerTransformers_1_2(registration);} @AT@ 5930 @LENGTH@ 39
---------INS MethodInvocation@@registerTransformers_1_3(registration) @TO@ ExpressionStatement@@MethodInvocation:registerTransformers_1_3(registration) @AT@ 5930 @LENGTH@ 38
------------INS SimpleName@@MethodName:registerTransformers_1_3:[registration] @TO@ MethodInvocation@@registerTransformers_1_3(registration) @AT@ 5930 @LENGTH@ 38
---------------INS SimpleName@@registration @TO@ SimpleName@@MethodName:registerTransformers_1_3:[registration] @AT@ 5955 @LENGTH@ 12


DEL VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @AT@ 1663 @LENGTH@ 42
---DEL Modifier@@final @AT@ 1663 @LENGTH@ 5
---DEL SimpleType@@PatchInfo @AT@ 1669 @LENGTH@ 9
---DEL VariableDeclarationFragment@@info=service.getValue() @AT@ 1679 @LENGTH@ 25
------DEL SimpleName@@info @AT@ 1679 @LENGTH@ 4
------DEL MethodInvocation@@service.getValue() @AT@ 1686 @LENGTH@ 18
---------DEL SimpleName@@Name:service @AT@ 1686 @LENGTH@ 7
---------DEL SimpleName@@MethodName:getValue:[] @AT@ 1694 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertProfileConfiguration(version,importedProfile,agentPID,"parents","camel") @TO@ MethodInvocation:assertProfileConfiguration(version,importedProfile,agentPID,"parents","feature-camel") @AT@ 5503 @LENGTH@ 99
---UPD MethodInvocation@@assertProfileConfiguration(version,importedProfile,agentPID,"parents","camel") @TO@ assertProfileConfiguration(version,importedProfile,agentPID,"parents","feature-camel") @AT@ 5503 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertProfileConfiguration:[version, importedProfile, agentPID, "parents", "camel"] @TO@ MethodName:assertProfileConfiguration:[version, importedProfile, agentPID, "parents", "feature-camel"] @AT@ 5503 @LENGTH@ 98
---------UPD StringLiteral@@"camel" @TO@ "feature-camel" @AT@ 5593 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.info("Job failed. Cleaning up temporary directory [{}].",src) @TO@ MethodInvocation:LOG.info("Job failed. Try cleaning up temporary directory [{}].",src) @AT@ 7201 @LENGTH@ 67
---UPD MethodInvocation@@LOG.info("Job failed. Cleaning up temporary directory [{}].",src) @TO@ LOG.info("Job failed. Try cleaning up temporary directory [{}].",src) @AT@ 7201 @LENGTH@ 66
------UPD SimpleName@@MethodName:info:["Job failed. Cleaning up temporary directory [{}].", src] @TO@ MethodName:info:["Job failed. Try cleaning up temporary directory [{}].", src] @AT@ 7205 @LENGTH@ 62
---------UPD StringLiteral@@"Job failed. Cleaning up temporary directory [{}]." @TO@ "Job failed. Try cleaning up temporary directory [{}]." @AT@ 7210 @LENGTH@ 51


INS MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @TO@ TypeDeclaration@@[@Transactional, @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes=SampleConfig.class), public]MappedTypeRepositoryIntegrationTests,  @AT@ 2503 @LENGTH@ 380
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2503 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2510 @LENGTH@ 4
---INS SimpleName@@MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2515 @LENGTH@ 58
---INS ExpressionStatement@@MethodInvocation:concreteRepository1.save(new ConcreteType1("foo")) @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2581 @LENGTH@ 51
------INS MethodInvocation@@concreteRepository1.save(new ConcreteType1("foo")) @TO@ ExpressionStatement@@MethodInvocation:concreteRepository1.save(new ConcreteType1("foo")) @AT@ 2581 @LENGTH@ 50
---------INS SimpleName@@Name:concreteRepository1 @TO@ MethodInvocation@@concreteRepository1.save(new ConcreteType1("foo")) @AT@ 2581 @LENGTH@ 19
---------INS SimpleName@@MethodName:save:[new ConcreteType1("foo")] @TO@ MethodInvocation@@concreteRepository1.save(new ConcreteType1("foo")) @AT@ 2601 @LENGTH@ 30
------------INS ClassInstanceCreation@@ConcreteType1["foo"] @TO@ SimpleName@@MethodName:save:[new ConcreteType1("foo")] @AT@ 2606 @LENGTH@ 24
---------------INS New@@new @TO@ ClassInstanceCreation@@ConcreteType1["foo"] @AT@ 2606 @LENGTH@ 3
---------------INS SimpleType@@ConcreteType1 @TO@ ClassInstanceCreation@@ConcreteType1["foo"] @AT@ 2610 @LENGTH@ 13
---------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@ConcreteType1["foo"] @AT@ 2624 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:concreteRepository2.save(new ConcreteType2("foo")) @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2635 @LENGTH@ 51
------INS MethodInvocation@@concreteRepository2.save(new ConcreteType2("foo")) @TO@ ExpressionStatement@@MethodInvocation:concreteRepository2.save(new ConcreteType2("foo")) @AT@ 2635 @LENGTH@ 50
---------INS SimpleName@@Name:concreteRepository2 @TO@ MethodInvocation@@concreteRepository2.save(new ConcreteType2("foo")) @AT@ 2635 @LENGTH@ 19
---------INS SimpleName@@MethodName:save:[new ConcreteType2("foo")] @TO@ MethodInvocation@@concreteRepository2.save(new ConcreteType2("foo")) @AT@ 2655 @LENGTH@ 30
------------INS ClassInstanceCreation@@ConcreteType2["foo"] @TO@ SimpleName@@MethodName:save:[new ConcreteType2("foo")] @AT@ 2660 @LENGTH@ 24
---------------INS New@@new @TO@ ClassInstanceCreation@@ConcreteType2["foo"] @AT@ 2660 @LENGTH@ 3
---------------INS SimpleType@@ConcreteType2 @TO@ ClassInstanceCreation@@ConcreteType2["foo"] @AT@ 2664 @LENGTH@ 13
---------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@ConcreteType2["foo"] @AT@ 2678 @LENGTH@ 5
---INS VariableDeclarationStatement@@Page<ConcreteType2> page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")); @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2690 @LENGTH@ 140
------INS ParameterizedType@@Page<ConcreteType2> @TO@ VariableDeclarationStatement@@Page<ConcreteType2> page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")); @AT@ 2690 @LENGTH@ 19
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<ConcreteType2> @AT@ 2690 @LENGTH@ 4
---------INS SimpleType@@ConcreteType2 @TO@ ParameterizedType@@Page<ConcreteType2> @AT@ 2695 @LENGTH@ 13
------INS VariableDeclarationFragment@@page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @TO@ VariableDeclarationStatement@@Page<ConcreteType2> page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")); @AT@ 2710 @LENGTH@ 119
---------INS SimpleName@@page @TO@ VariableDeclarationFragment@@page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @AT@ 2710 @LENGTH@ 4
---------INS MethodInvocation@@concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @TO@ VariableDeclarationFragment@@page=concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @AT@ 2717 @LENGTH@ 112
------------INS SimpleName@@Name:concreteRepository2 @TO@ MethodInvocation@@concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @AT@ 2717 @LENGTH@ 19
------------INS SimpleName@@MethodName:findByAttribute1Custom:["foo", new PageRequest(0,10,Sort.Direction.DESC,"attribute1")] @TO@ MethodInvocation@@concreteRepository2.findByAttribute1Custom("foo",new PageRequest(0,10,Sort.Direction.DESC,"attribute1")) @AT@ 2737 @LENGTH@ 92
---------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:findByAttribute1Custom:["foo", new PageRequest(0,10,Sort.Direction.DESC,"attribute1")] @AT@ 2760 @LENGTH@ 5
---------------INS ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @TO@ SimpleName@@MethodName:findByAttribute1Custom:["foo", new PageRequest(0,10,Sort.Direction.DESC,"attribute1")] @AT@ 2767 @LENGTH@ 61
------------------INS New@@new @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2767 @LENGTH@ 3
------------------INS SimpleType@@PageRequest @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2771 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2783 @LENGTH@ 1
------------------INS NumberLiteral@@10 @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2786 @LENGTH@ 2
------------------INS QualifiedName@@Sort.Direction.DESC @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2794 @LENGTH@ 19
---------------------INS QualifiedName@@Sort.Direction @TO@ QualifiedName@@Sort.Direction.DESC @AT@ 2794 @LENGTH@ 14
------------------------INS SimpleName@@Sort @TO@ QualifiedName@@Sort.Direction @AT@ 2794 @LENGTH@ 4
------------------------INS SimpleName@@Direction @TO@ QualifiedName@@Sort.Direction @AT@ 2799 @LENGTH@ 9
---------------------INS SimpleName@@DESC @TO@ QualifiedName@@Sort.Direction.DESC @AT@ 2809 @LENGTH@ 4
------------------INS StringLiteral@@"attribute1" @TO@ ClassInstanceCreation@@PageRequest[0, 10, Sort.Direction.DESC, "attribute1"] @AT@ 2815 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(page.getNumberOfElements(),is(1)) @TO@ MethodDeclaration@@public, void, MethodName:supportForPaginationCustomQueryMethodsWithEntityExpression,  @AT@ 2834 @LENGTH@ 46
------INS MethodInvocation@@assertThat(page.getNumberOfElements(),is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.getNumberOfElements(),is(1)) @AT@ 2834 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[page.getNumberOfElements(), is(1)] @TO@ MethodInvocation@@assertThat(page.getNumberOfElements(),is(1)) @AT@ 2834 @LENGTH@ 45
------------INS MethodInvocation@@page.getNumberOfElements() @TO@ SimpleName@@MethodName:assertThat:[page.getNumberOfElements(), is(1)] @AT@ 2845 @LENGTH@ 26
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getNumberOfElements() @AT@ 2845 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getNumberOfElements:[] @TO@ MethodInvocation@@page.getNumberOfElements() @AT@ 2850 @LENGTH@ 21
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[page.getNumberOfElements(), is(1)] @AT@ 2873 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 2873 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 2876 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 2873 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 2876 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup(SyslogHandlerTestCase.SyslogHandlerTestCaseSetup.class), public]SyslogHandlerTestCase,  @TO@ [@RunWith(Arquillian.class), @ServerSetup(SyslogHandlerTestCase.SyslogHandlerTestCaseSetup.class), @Ignore("WFLY-1584 - Events may not be getting fired before the file read is done."), public]SyslogHandlerTestCase,  @AT@ 2825 @LENGTH@ 8618
---INS SingleMemberAnnotation@@@Ignore("WFLY-1584 - Events may not be getting fired before the file read is done.") @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup(SyslogHandlerTestCase.SyslogHandlerTestCaseSetup.class), public]SyslogHandlerTestCase,  @AT@ 2945 @LENGTH@ 84


UPD ExpressionStatement@@MethodInvocation:this.profiles(System.getProperty(VERSION,DEFAULT_VERSION)) @TO@ MethodInvocation:this.version(System.getProperty(VERSION,DEFAULT_VERSION)) @AT@ 2089 @LENGTH@ 60
---UPD MethodInvocation@@this.profiles(System.getProperty(VERSION,DEFAULT_VERSION)) @TO@ this.version(System.getProperty(VERSION,DEFAULT_VERSION)) @AT@ 2089 @LENGTH@ 59
------UPD SimpleName@@MethodName:profiles:[System.getProperty(VERSION,DEFAULT_VERSION)] @TO@ MethodName:version:[System.getProperty(VERSION,DEFAULT_VERSION)] @AT@ 2094 @LENGTH@ 54


DEL VariableDeclarationStatement@@long WAIT_2=200; @AT@ 7047 @LENGTH@ 18
---DEL PrimitiveType@@long @AT@ 7047 @LENGTH@ 4
---DEL VariableDeclarationFragment@@WAIT_2=200 @AT@ 7052 @LENGTH@ 12
------DEL SimpleName@@WAIT_2 @AT@ 7052 @LENGTH@ 6
------DEL NumberLiteral@@200 @AT@ 7061 @LENGTH@ 3


UPD SwitchStatement@@switch (count) {case 0:  if (!arg.contains("=")) {    String[] argSplit=arg.split(",");    ctxConfigPath=argSplit[0];    if (argSplit.length > 1) {      childCtxConfigPath=argSplit[1];    }  }break;case 1:if (!arg.contains("=")) {beanIdentifier=arg;} else {params.add(arg);}break;default :break;} @TO@ switch (count) {case 0:  if (!arg.contains("=")) {    String[] argSplit=arg.split(",");    ctxConfigPath=argSplit[0];    if (argSplit.length > 1) {      childCtxConfigPath=argSplit[1];    }  }break;case 1:if (!arg.contains("=")) {beanIdentifier=arg;} else {params.add(arg);}break;default :params.add(arg);break;} @AT@ 8870 @LENGTH@ 407
---INS ExpressionStatement@@MethodInvocation:params.add(arg) @TO@ SwitchStatement@@switch (count) {case 0:  if (!arg.contains("=")) {    String[] argSplit=arg.split(",");    ctxConfigPath=argSplit[0];    if (argSplit.length > 1) {      childCtxConfigPath=argSplit[1];    }  }break;case 1:if (!arg.contains("=")) {beanIdentifier=arg;} else {params.add(arg);}break;default :break;} @AT@ 9232 @LENGTH@ 16
------INS MethodInvocation@@params.add(arg) @TO@ ExpressionStatement@@MethodInvocation:params.add(arg) @AT@ 9232 @LENGTH@ 15
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.add(arg) @AT@ 9232 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[arg] @TO@ MethodInvocation@@params.add(arg) @AT@ 9239 @LENGTH@ 8
------------INS SimpleName@@arg @TO@ SimpleName@@MethodName:add:[arg] @AT@ 9243 @LENGTH@ 3


UPD TryStatement@@try {  socket=new Socket(host,port);  out=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));  out.write("GET /" + contextRoot + "TestUpgradeServlet HTTP/1.1"+ CRLF);  out.write("Host: " + host + ":"+ port+ CRLF);  out.write("Upgrade: foo" + CRLF);  out.write("Connection: Upgrade" + CRLF);  out.write(CRLF);  out.flush();  System.out.println("Upgrade requested");  in=new BufferedReader(new InputStreamReader(socket.getInputStream()));  String line=null;  while ((line=in.readLine()) != null) {    System.out.println(line);    if ("".equals(line)) {      break;    }  }  out.write("dummy request" + CRLF);  out.flush();  System.out.println("Dummy request sent");  StringBuilder buffer=new StringBuilder();  while (!(line=in.readLine()).equals("END")) {    System.out.println(line);    buffer.append(line);  }  response=buffer.toString();}  finally {  if (out != null) {    try {      out.close();    } catch (    Exception e) {      e.printStackTrace();    }  }  if (in != null) {    try {      in.close();    } catch (    Exception e) {      e.printStackTrace();    }  }  if (socket != null) {    try {      socket.close();    } catch (    Exception e) {      e.printStackTrace();    }  }} @TO@ try {  socket=new Socket(host,port);  out=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));  out.write("GET /" + contextRoot + "TestUpgradeServlet HTTP/1.1"+ CRLF);  out.write("Host: " + host + ":"+ port+ CRLF);  out.write("Upgrade: foo" + CRLF);  out.write("Connection: Upgrade" + CRLF);  out.write(CRLF);  out.flush();  in=new BufferedReader(new InputStreamReader(socket.getInputStream()));  String line=null;  while ((line=in.readLine()) != null) {    if ("".equals(line)) {      break;    }  }  out.write("dummy request#");  out.flush();  StringBuilder buffer=new StringBuilder();  while (!(line=in.readLine()).equals("END")) {    buffer.append(line);  }  response=buffer.toString();}  finally {  if (out != null) {    try {      out.close();    } catch (    Exception e) {      e.printStackTrace();    }  }  if (in != null) {    try {      in.close();    } catch (    Exception e) {      e.printStackTrace();    }  }  if (socket != null) {    try {      socket.close();    } catch (    Exception e) {      e.printStackTrace();    }  }} @AT@ 3191 @LENGTH@ 1986
---DEL ExpressionStatement@@MethodInvocation:System.out.println("Upgrade requested") @AT@ 3686 @LENGTH@ 40
------DEL MethodInvocation@@System.out.println("Upgrade requested") @AT@ 3686 @LENGTH@ 39
---------DEL QualifiedName@@Name:System.out @AT@ 3686 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:["Upgrade requested"] @AT@ 3697 @LENGTH@ 28
------------DEL StringLiteral@@"Upgrade requested" @AT@ 3705 @LENGTH@ 19
---UPD WhileStatement@@while ((line=in.readLine()) != null) {  System.out.println(line);  if ("".equals(line)) {    break;  }} @TO@ while ((line=in.readLine()) != null) {  if ("".equals(line)) {    break;  }} @AT@ 3910 @LENGTH@ 180
------UPD Block@@WhileBody:{  System.out.println(line);  if ("".equals(line)) {    break;  }} @TO@ WhileBody:{  if ("".equals(line)) {    break;  }} @AT@ 3949 @LENGTH@ 141
---------DEL ExpressionStatement@@MethodInvocation:System.out.println(line) @AT@ 3967 @LENGTH@ 25
------------DEL MethodInvocation@@System.out.println(line) @AT@ 3967 @LENGTH@ 24
---------------DEL QualifiedName@@Name:System.out @AT@ 3967 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:println:[line] @AT@ 3978 @LENGTH@ 13
------------------DEL SimpleName@@line @AT@ 3986 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:out.write("dummy request" + CRLF) @TO@ MethodInvocation:out.write("dummy request#") @AT@ 4138 @LENGTH@ 34
------UPD MethodInvocation@@out.write("dummy request" + CRLF) @TO@ out.write("dummy request#") @AT@ 4138 @LENGTH@ 33
---------UPD SimpleName@@MethodName:write:["dummy request" + CRLF] @TO@ MethodName:write:["dummy request#"] @AT@ 4142 @LENGTH@ 29
------------INS StringLiteral@@"dummy request#" @TO@ SimpleName@@MethodName:write:["dummy request" + CRLF] @AT@ 4007 @LENGTH@ 16
------------DEL InfixExpression@@"dummy request" + CRLF @AT@ 4148 @LENGTH@ 22
---------------DEL StringLiteral@@"dummy request" @AT@ 4148 @LENGTH@ 15
---------------DEL Operator@@+ @AT@ 4163 @LENGTH@ 1
---------------DEL SimpleName@@CRLF @AT@ 4166 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:System.out.println("Dummy request sent") @AT@ 4210 @LENGTH@ 41
------DEL MethodInvocation@@System.out.println("Dummy request sent") @AT@ 4210 @LENGTH@ 40
---------DEL QualifiedName@@Name:System.out @AT@ 4210 @LENGTH@ 10
---------DEL SimpleName@@MethodName:println:["Dummy request sent"] @AT@ 4221 @LENGTH@ 29
------------DEL StringLiteral@@"Dummy request sent" @AT@ 4229 @LENGTH@ 20
---UPD WhileStatement@@while (!(line=in.readLine()).equals("END")) {  System.out.println(line);  buffer.append(line);} @TO@ while (!(line=in.readLine()).equals("END")) {  buffer.append(line);} @AT@ 4363 @LENGTH@ 140
------UPD Block@@WhileBody:{  System.out.println(line);  buffer.append(line);} @TO@ WhileBody:{  buffer.append(line);} @AT@ 4409 @LENGTH@ 94
---------DEL ExpressionStatement@@MethodInvocation:System.out.println(line) @AT@ 4427 @LENGTH@ 25
------------DEL MethodInvocation@@System.out.println(line) @AT@ 4427 @LENGTH@ 24
---------------DEL QualifiedName@@Name:System.out @AT@ 4427 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:println:[line] @AT@ 4438 @LENGTH@ 13
------------------DEL SimpleName@@line @AT@ 4446 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-638] Fix fabric smoke ContainerRegistrationTest"), public]ContainerRegistrationTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerRegistrationTest, FabricTestSupport @AT@ 928 @LENGTH@ 2184
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-638] Fix fabric smoke ContainerRegistrationTest") @AT@ 1021 @LENGTH@ 66


UPD ExpressionStatement@@MethodInvocation:updateRequest.addFile((File)body,null) @TO@ MethodInvocation:updateRequest.addFile((File)body,mimeType) @AT@ 3973 @LENGTH@ 41
---UPD MethodInvocation@@updateRequest.addFile((File)body,null) @TO@ updateRequest.addFile((File)body,mimeType) @AT@ 3973 @LENGTH@ 40
------UPD SimpleName@@MethodName:addFile:[(File)body, null] @TO@ MethodName:addFile:[(File)body, mimeType] @AT@ 3987 @LENGTH@ 26
---------INS SimpleName@@mimeType @TO@ SimpleName@@MethodName:addFile:[(File)body, null] @AT@ 4008 @LENGTH@ 8
---------DEL NullLiteral@@null @AT@ 4008 @LENGTH@ 4


UPD VariableDeclarationStatement@@ServiceBuilder<ReverseProxyHostService> builder=context.getServiceTarget().addService(SERVICE_NAME.append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler); @TO@ ServiceBuilder<ReverseProxyHostService> builder=context.getServiceTarget().addService(SERVICE_NAME.append(proxyName).append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler); @AT@ 4369 @LENGTH@ 244
---UPD VariableDeclarationFragment@@builder=context.getServiceTarget().addService(SERVICE_NAME.append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler) @TO@ builder=context.getServiceTarget().addService(SERVICE_NAME.append(proxyName).append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler) @AT@ 4409 @LENGTH@ 203
------UPD MethodInvocation@@context.getServiceTarget().addService(SERVICE_NAME.append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler) @TO@ context.getServiceTarget().addService(SERVICE_NAME.append(proxyName).append(name),service).addDependency(UndertowService.HANDLER.append(proxyName),ProxyHandler.class,service.proxyHandler) @AT@ 4419 @LENGTH@ 193
---------UPD MethodInvocation@@MethodName:addService:[SERVICE_NAME.append(name), service] @TO@ MethodName:addService:[SERVICE_NAME.append(proxyName).append(name), service] @AT@ 4419 @LENGTH@ 73
------------UPD MethodInvocation@@SERVICE_NAME.append(name) @TO@ SERVICE_NAME.append(proxyName).append(name) @AT@ 4457 @LENGTH@ 25
---------------INS MethodInvocation@@MethodName:append:[proxyName] @TO@ MethodInvocation@@SERVICE_NAME.append(name) @AT@ 4742 @LENGTH@ 30
------------------INS SimpleName@@proxyName @TO@ MethodInvocation@@MethodName:append:[proxyName] @AT@ 4762 @LENGTH@ 9


UPD MethodDeclaration@@DBObject, MethodName:toDbObject,  @TO@ DBObject, MethodName:toDBObject, AggregationOperationContext context,  @AT@ 1040 @LENGTH@ 13
---UPD SimpleName@@MethodName:toDbObject @TO@ MethodName:toDBObject @AT@ 1040 @LENGTH@ 10
---INS SingleVariableDeclaration@@AggregationOperationContext context @TO@ MethodDeclaration@@DBObject, MethodName:toDbObject,  @AT@ 1104 @LENGTH@ 35
------INS SimpleType@@AggregationOperationContext @TO@ SingleVariableDeclaration@@AggregationOperationContext context @AT@ 1104 @LENGTH@ 27
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@AggregationOperationContext context @AT@ 1132 @LENGTH@ 7


UPD FieldDeclaration@@private, static, Set<String>, [ALLOWED_TRANSFORM_ALGORITHMS=new HashSet<String>(4)] @TO@ private, static, final, Set<String>, [ALLOWED_TRANSFORM_ALGORITHMS=new HashSet<String>(4)] @AT@ 1409 @LENGTH@ 81
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, Set<String>, [ALLOWED_TRANSFORM_ALGORITHMS=new HashSet<String>(4)] @AT@ 1424 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:PropertyPath.from(field.getName(),type) @TO@ MethodInvocation:PropertyPath.from(field.getTarget(),type) @AT@ 3213 @LENGTH@ 41
---UPD MethodInvocation@@PropertyPath.from(field.getName(),type) @TO@ PropertyPath.from(field.getTarget(),type) @AT@ 3213 @LENGTH@ 40
------UPD SimpleName@@MethodName:from:[field.getName(), type] @TO@ MethodName:from:[field.getTarget(), type] @AT@ 3226 @LENGTH@ 27
---------UPD MethodInvocation@@field.getName() @TO@ field.getTarget() @AT@ 3231 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getTarget:[] @AT@ 3237 @LENGTH@ 9


UPD TypeDeclaration@@[public]StreamCachingStrategy, [Service] @TO@ [public]StreamCachingStrategy, [StaticService] @AT@ 1066 @LENGTH@ 5580
---UPD SimpleType@@Service @TO@ StaticService @AT@ 1113 @LENGTH@ 7


UPD MethodDeclaration@@protected, void, MethodName:parseJdbcStoreElementAndEnrichOperation, final XMLExtendedStreamReader reader, ModelNode operation, XMLStreamException,  @TO@ protected, void, MethodName:parseJdbcStoreElementAndEnrichOperation, final XMLExtendedStreamReader reader, final ModelNode logStoreOperation, ModelNode operation, XMLStreamException,  @AT@ 9032 @LENGTH@ 1979
---INS SingleVariableDeclaration@@final ModelNode logStoreOperation @TO@ MethodDeclaration@@protected, void, MethodName:parseJdbcStoreElementAndEnrichOperation, final XMLExtendedStreamReader reader, ModelNode operation, XMLStreamException,  @AT@ 9144 @LENGTH@ 33
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode logStoreOperation @AT@ 9144 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode logStoreOperation @AT@ 9150 @LENGTH@ 9
------INS SimpleName@@logStoreOperation @TO@ SingleVariableDeclaration@@final ModelNode logStoreOperation @AT@ 9160 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @TO@ MethodDeclaration@@protected, void, MethodName:parseJdbcStoreElementAndEnrichOperation, final XMLExtendedStreamReader reader, ModelNode operation, XMLStreamException,  @AT@ 9236 @LENGTH@ 78
------INS MethodInvocation@@logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @TO@ ExpressionStatement@@MethodInvocation:logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @AT@ 9236 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:get:[LogStoreConstants.LOG_STORE_TYPE.getName()] @TO@ MethodInvocation@@logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @AT@ 9236 @LENGTH@ 65
------------INS MethodInvocation@@LogStoreConstants.LOG_STORE_TYPE.getName() @TO@ MethodInvocation@@MethodName:get:[LogStoreConstants.LOG_STORE_TYPE.getName()] @AT@ 9258 @LENGTH@ 42
---------------INS QualifiedName@@Name:LogStoreConstants.LOG_STORE_TYPE @TO@ MethodInvocation@@LogStoreConstants.LOG_STORE_TYPE.getName() @AT@ 9258 @LENGTH@ 32
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@LogStoreConstants.LOG_STORE_TYPE.getName() @AT@ 9291 @LENGTH@ 9
---------INS SimpleName@@Name:logStoreOperation @TO@ MethodInvocation@@logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @AT@ 9236 @LENGTH@ 17
---------INS SimpleName@@MethodName:set:["jdbc"] @TO@ MethodInvocation@@logStoreOperation.get(LogStoreConstants.LOG_STORE_TYPE.getName()).set("jdbc") @AT@ 9302 @LENGTH@ 11
------------INS StringLiteral@@"jdbc" @TO@ SimpleName@@MethodName:set:["jdbc"] @AT@ 9306 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:adminService.createInstance(containerName,sshPort,rmiServerPort,rmiRegistryPort,null,jvmOptsBuilder.toString(),collectionAsString(features),featuresUrls) @TO@ MethodInvocation:adminService.createInstance(containerName,sshPort,rmiRegistryPort,rmiServerPort,null,jvmOptsBuilder.toString(),collectionAsString(features),featuresUrls) @AT@ 8405 @LENGTH@ 257
---UPD MethodInvocation@@adminService.createInstance(containerName,sshPort,rmiServerPort,rmiRegistryPort,null,jvmOptsBuilder.toString(),collectionAsString(features),featuresUrls) @TO@ adminService.createInstance(containerName,sshPort,rmiRegistryPort,rmiServerPort,null,jvmOptsBuilder.toString(),collectionAsString(features),featuresUrls) @AT@ 8405 @LENGTH@ 256
------UPD SimpleName@@MethodName:createInstance:[containerName, sshPort, rmiServerPort, rmiRegistryPort, null, jvmOptsBuilder.toString(), collectionAsString(features), featuresUrls] @TO@ MethodName:createInstance:[containerName, sshPort, rmiRegistryPort, rmiServerPort, null, jvmOptsBuilder.toString(), collectionAsString(features), featuresUrls] @AT@ 8418 @LENGTH@ 243
---------UPD SimpleName@@rmiServerPort @TO@ rmiRegistryPort @AT@ 8521 @LENGTH@ 13
---------UPD SimpleName@@rmiRegistryPort @TO@ rmiServerPort @AT@ 8568 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @TO@ MethodDeclaration@@public, static, void, MethodName:writeRef, final File file, final String ref, IOException,  @AT@ 3377 @LENGTH@ 28
---INS MethodInvocation@@mkdir(file.getParentFile()) @TO@ ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @AT@ 3377 @LENGTH@ 27
------INS SimpleName@@MethodName:mkdir:[file.getParentFile()] @TO@ MethodInvocation@@mkdir(file.getParentFile()) @AT@ 3377 @LENGTH@ 27
---------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:mkdir:[file.getParentFile()] @AT@ 3383 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 3383 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 3388 @LENGTH@ 15


UPD VariableDeclarationStatement@@String stagingId=Integer.toString(container.getId().getApplicationAttemptId().getApplicationId().getId()); @TO@ String stagingId=container.getId().getApplicationAttemptId().getApplicationId().toString(); @AT@ 3170 @LENGTH@ 108
---UPD VariableDeclarationFragment@@stagingId=Integer.toString(container.getId().getApplicationAttemptId().getApplicationId().getId()) @TO@ stagingId=container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3177 @LENGTH@ 100
------DEL MethodInvocation@@Integer.toString(container.getId().getApplicationAttemptId().getApplicationId().getId()) @AT@ 3189 @LENGTH@ 88
---------DEL SimpleName@@Name:Integer @AT@ 3189 @LENGTH@ 7
---------DEL SimpleName@@MethodName:toString:[container.getId().getApplicationAttemptId().getApplicationId().getId()] @AT@ 3197 @LENGTH@ 80
------------DEL MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().getId() @AT@ 3206 @LENGTH@ 70
------INS MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @TO@ VariableDeclarationFragment@@stagingId=Integer.toString(container.getId().getApplicationAttemptId().getApplicationId().getId()) @AT@ 3189 @LENGTH@ 73
---------MOV MethodInvocation@@MethodName:getApplicationId:[] @TO@ MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3206 @LENGTH@ 62
---------MOV MethodInvocation@@MethodName:getApplicationAttemptId:[] @TO@ MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3206 @LENGTH@ 43
---------MOV MethodInvocation@@MethodName:getId:[] @TO@ MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3206 @LENGTH@ 17
---------MOV SimpleName@@Name:container @TO@ MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3206 @LENGTH@ 9
---------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@container.getId().getApplicationAttemptId().getApplicationId().toString() @AT@ 3269 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:builder.overrideItem(override.toString()) @TO@ MethodInvocation:builder.overrideItem(override.asString()) @AT@ 4766 @LENGTH@ 42
---UPD MethodInvocation@@builder.overrideItem(override.toString()) @TO@ builder.overrideItem(override.asString()) @AT@ 4766 @LENGTH@ 41
------UPD SimpleName@@MethodName:overrideItem:[override.toString()] @TO@ MethodName:overrideItem:[override.asString()] @AT@ 4774 @LENGTH@ 33
---------UPD MethodInvocation@@override.toString() @TO@ override.asString() @AT@ 4787 @LENGTH@ 19
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:asString:[] @AT@ 4796 @LENGTH@ 10


INS ThrowStatement@@ClassInstanceCreation:new IndexOutOfBoundsException("The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!") @TO@ MethodDeclaration@@protected, int, MethodName:getDataPolicyEnumerationSize,  @AT@ 1214 @LENGTH@ 170
---INS ClassInstanceCreation@@IndexOutOfBoundsException["The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!"] @TO@ ThrowStatement@@ClassInstanceCreation:new IndexOutOfBoundsException("The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!") @AT@ 1220 @LENGTH@ 163
------INS New@@new @TO@ ClassInstanceCreation@@IndexOutOfBoundsException["The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!"] @AT@ 1220 @LENGTH@ 3
------INS SimpleType@@IndexOutOfBoundsException @TO@ ClassInstanceCreation@@IndexOutOfBoundsException["The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!"] @AT@ 1224 @LENGTH@ 25
------INS InfixExpression@@"The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!" @TO@ ClassInstanceCreation@@IndexOutOfBoundsException["The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!"] @AT@ 1250 @LENGTH@ 132
---------INS StringLiteral@@"The size of the Data Policy enumeration could not be determined" @TO@ InfixExpression@@"The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!" @AT@ 1250 @LENGTH@ 65
---------INS Operator@@+ @TO@ InfixExpression@@"The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!" @AT@ 1315 @LENGTH@ 1
---------INS StringLiteral@@" because the ordinal based on Byte.MAX_VALUE was exhausted!" @TO@ InfixExpression@@"The size of the Data Policy enumeration could not be determined" + " because the ordinal based on Byte.MAX_VALUE was exhausted!" @AT@ 1321 @LENGTH@ 61


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 2335 @LENGTH@ 439
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 2380 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2380 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2380 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2384 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2392 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2392 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2396 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2404 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2413 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:assertFolderExists("Should have imported an mq/ReadMe.md file!",getLocalGitFile("fabric/profiles/mq/ReadMe.md")) @TO@ MethodDeclaration@@public, void, MethodName:testDataStore, Exception,  @AT@ 5244 @LENGTH@ 114
---INS MethodInvocation@@assertFolderExists("Should have imported an mq/ReadMe.md file!",getLocalGitFile("fabric/profiles/mq/ReadMe.md")) @TO@ ExpressionStatement@@MethodInvocation:assertFolderExists("Should have imported an mq/ReadMe.md file!",getLocalGitFile("fabric/profiles/mq/ReadMe.md")) @AT@ 5244 @LENGTH@ 113
------INS SimpleName@@MethodName:assertFolderExists:["Should have imported an mq/ReadMe.md file!", getLocalGitFile("fabric/profiles/mq/ReadMe.md")] @TO@ MethodInvocation@@assertFolderExists("Should have imported an mq/ReadMe.md file!",getLocalGitFile("fabric/profiles/mq/ReadMe.md")) @AT@ 5244 @LENGTH@ 113
---------INS StringLiteral@@"Should have imported an mq/ReadMe.md file!" @TO@ SimpleName@@MethodName:assertFolderExists:["Should have imported an mq/ReadMe.md file!", getLocalGitFile("fabric/profiles/mq/ReadMe.md")] @AT@ 5263 @LENGTH@ 44
---------INS MethodInvocation@@getLocalGitFile("fabric/profiles/mq/ReadMe.md") @TO@ SimpleName@@MethodName:assertFolderExists:["Should have imported an mq/ReadMe.md file!", getLocalGitFile("fabric/profiles/mq/ReadMe.md")] @AT@ 5309 @LENGTH@ 47
------------INS SimpleName@@MethodName:getLocalGitFile:["fabric/profiles/mq/ReadMe.md"] @TO@ MethodInvocation@@getLocalGitFile("fabric/profiles/mq/ReadMe.md") @AT@ 5309 @LENGTH@ 47
---------------INS StringLiteral@@"fabric/profiles/mq/ReadMe.md" @TO@ SimpleName@@MethodName:getLocalGitFile:["fabric/profiles/mq/ReadMe.md"] @AT@ 5325 @LENGTH@ 30
------------INS SimpleName@@MethodName:getLocalGitFile:["fabric/profiles/mq/ReadMe.md"] @TO@ MethodInvocation@@getLocalGitFile("fabric/profiles/mq/ReadMe.md") @AT@ 5309 @LENGTH@ 47
---------------INS StringLiteral@@"fabric/profiles/mq/ReadMe.md" @TO@ SimpleName@@MethodName:getLocalGitFile:["fabric/profiles/mq/ReadMe.md"] @AT@ 5325 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 7201 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7201 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7208 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7213 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7244 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 7244 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 7250 @LENGTH@ 24


INS IfStatement@@if (getCamelContexts().size() > 0) {  getCamelContexts().get(0).stop();} @TO@ MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 3540 @LENGTH@ 92
---INS InfixExpression@@getCamelContexts().size() > 0 @TO@ IfStatement@@if (getCamelContexts().size() > 0) {  getCamelContexts().get(0).stop();} @AT@ 3544 @LENGTH@ 29
------INS MethodInvocation@@getCamelContexts().size() @TO@ InfixExpression@@getCamelContexts().size() > 0 @AT@ 3544 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:getCamelContexts:[] @TO@ MethodInvocation@@getCamelContexts().size() @AT@ 3544 @LENGTH@ 18
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@getCamelContexts().size() @AT@ 3563 @LENGTH@ 6
------INS Operator@@> @TO@ InfixExpression@@getCamelContexts().size() > 0 @AT@ 3569 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ InfixExpression@@getCamelContexts().size() > 0 @AT@ 3572 @LENGTH@ 1
---INS Block@@ThenBody:{  getCamelContexts().get(0).stop();} @TO@ IfStatement@@if (getCamelContexts().size() > 0) {  getCamelContexts().get(0).stop();} @AT@ 3575 @LENGTH@ 57
------MOV ExpressionStatement@@MethodInvocation:getCamelContexts().get(0).stop() @TO@ Block@@ThenBody:{  getCamelContexts().get(0).stop();} @AT@ 3540 @LENGTH@ 33


UPD Block@@ThenBody:{  byte[] bytes=ZkPath.loadURL(curator,containerPath);  String text=new String(bytes);  int idx=text.indexOf("\"http");  String answer=text;  if (idx > 0) {    int endIdx=text.indexOf('\"',idx + 5);    if (endIdx > 0) {      answer=text.substring(idx + 1,endIdx);      if (answer.length() > 0) {        return answer;      }    }  }} @TO@ ThenBody:{  byte[] bytes=ZkPath.loadURL(curator,containerPath);  String text=new String(bytes);  String prefix="\"services\":[\"";  int idx=text.indexOf(prefix);  String answer=text;  if (idx > 0) {    int startIndex=idx + prefix.length();    int endIdx=text.indexOf("\"]",startIndex);    if (endIdx > 0) {      answer=text.substring(startIndex,endIdx);      if (answer.length() > 0) {        answer=ZooKeeperUtils.getSubstitutedData(curator,answer);        return answer;      }    }  }} @AT@ 20311 @LENGTH@ 796
---UPD VariableDeclarationStatement@@int idx=text.indexOf("\"http"); @TO@ int idx=text.indexOf(prefix); @AT@ 20709 @LENGTH@ 33
------UPD VariableDeclarationFragment@@idx=text.indexOf("\"http") @TO@ idx=text.indexOf(prefix) @AT@ 20713 @LENGTH@ 28
---------UPD MethodInvocation@@text.indexOf("\"http") @TO@ text.indexOf(prefix) @AT@ 20719 @LENGTH@ 22
------------UPD SimpleName@@MethodName:indexOf:["\"http"] @TO@ MethodName:indexOf:[prefix] @AT@ 20724 @LENGTH@ 17
---------------DEL StringLiteral@@"\"http" @AT@ 20732 @LENGTH@ 8
---------------INS SimpleName@@prefix @TO@ SimpleName@@MethodName:indexOf:["\"http"] @AT@ 20841 @LENGTH@ 6
---INS VariableDeclarationStatement@@String prefix="\"services\":[\""; @TO@ Block@@ThenBody:{  byte[] bytes=ZkPath.loadURL(curator,containerPath);  String text=new String(bytes);  int idx=text.indexOf("\"http");  String answer=text;  if (idx > 0) {    int endIdx=text.indexOf('\"',idx + 5);    if (endIdx > 0) {      answer=text.substring(idx + 1,endIdx);      if (answer.length() > 0) {        return answer;      }    }  }} @AT@ 20770 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String prefix="\"services\":[\""; @AT@ 20770 @LENGTH@ 6
------INS VariableDeclarationFragment@@prefix="\"services\":[\"" @TO@ VariableDeclarationStatement@@String prefix="\"services\":[\""; @AT@ 20777 @LENGTH@ 27
---------INS SimpleName@@prefix @TO@ VariableDeclarationFragment@@prefix="\"services\":[\"" @AT@ 20777 @LENGTH@ 6
---------INS StringLiteral@@"\"services\":[\"" @TO@ VariableDeclarationFragment@@prefix="\"services\":[\"" @AT@ 20786 @LENGTH@ 18
---UPD IfStatement@@if (idx > 0) {  int endIdx=text.indexOf('\"',idx + 5);  if (endIdx > 0) {    answer=text.substring(idx + 1,endIdx);    if (answer.length() > 0) {      return answer;    }  }} @TO@ if (idx > 0) {  int startIndex=idx + prefix.length();  int endIdx=text.indexOf("\"]",startIndex);  if (endIdx > 0) {    answer=text.substring(startIndex,endIdx);    if (answer.length() > 0) {      answer=ZooKeeperUtils.getSubstitutedData(curator,answer);      return answer;    }  }} @AT@ 20789 @LENGTH@ 308
------UPD Block@@ThenBody:{  int endIdx=text.indexOf('\"',idx + 5);  if (endIdx > 0) {    answer=text.substring(idx + 1,endIdx);    if (answer.length() > 0) {      return answer;    }  }} @TO@ ThenBody:{  int startIndex=idx + prefix.length();  int endIdx=text.indexOf("\"]",startIndex);  if (endIdx > 0) {    answer=text.substring(startIndex,endIdx);    if (answer.length() > 0) {      answer=ZooKeeperUtils.getSubstitutedData(curator,answer);      return answer;    }  }} @AT@ 20802 @LENGTH@ 295
---------UPD VariableDeclarationStatement@@int endIdx=text.indexOf('\"',idx + 5); @TO@ int endIdx=text.indexOf("\"]",startIndex); @AT@ 20820 @LENGTH@ 41
------------UPD VariableDeclarationFragment@@endIdx=text.indexOf('\"',idx + 5) @TO@ endIdx=text.indexOf("\"]",startIndex) @AT@ 20824 @LENGTH@ 36
---------------UPD MethodInvocation@@text.indexOf('\"',idx + 5) @TO@ text.indexOf("\"]",startIndex) @AT@ 20833 @LENGTH@ 27
------------------UPD SimpleName@@MethodName:indexOf:['\"', idx + 5] @TO@ MethodName:indexOf:["\"]", startIndex] @AT@ 20838 @LENGTH@ 22
---------------------DEL CharacterLiteral@@'\"' @AT@ 20846 @LENGTH@ 4
---------------------DEL InfixExpression@@idx + 5 @AT@ 20852 @LENGTH@ 7
------------------------DEL SimpleName@@idx @AT@ 20852 @LENGTH@ 3
------------------------DEL Operator@@+ @AT@ 20855 @LENGTH@ 1
------------------------DEL NumberLiteral@@5 @AT@ 20858 @LENGTH@ 1
---------------------INS StringLiteral@@"\"]" @TO@ SimpleName@@MethodName:indexOf:['\"', idx + 5] @AT@ 21009 @LENGTH@ 5
---------------------INS SimpleName@@startIndex @TO@ SimpleName@@MethodName:indexOf:['\"', idx + 5] @AT@ 21016 @LENGTH@ 10
---------UPD IfStatement@@if (endIdx > 0) {  answer=text.substring(idx + 1,endIdx);  if (answer.length() > 0) {    return answer;  }} @TO@ if (endIdx > 0) {  answer=text.substring(startIndex,endIdx);  if (answer.length() > 0) {    answer=ZooKeeperUtils.getSubstitutedData(curator,answer);    return answer;  }} @AT@ 20878 @LENGTH@ 205
------------UPD Block@@ThenBody:{  answer=text.substring(idx + 1,endIdx);  if (answer.length() > 0) {    return answer;  }} @TO@ ThenBody:{  answer=text.substring(startIndex,endIdx);  if (answer.length() > 0) {    answer=ZooKeeperUtils.getSubstitutedData(curator,answer);    return answer;  }} @AT@ 20894 @LENGTH@ 189
---------------UPD ExpressionStatement@@Assignment:answer=text.substring(idx + 1,endIdx) @TO@ Assignment:answer=text.substring(startIndex,endIdx) @AT@ 20916 @LENGTH@ 41
------------------UPD Assignment@@answer=text.substring(idx + 1,endIdx) @TO@ answer=text.substring(startIndex,endIdx) @AT@ 20916 @LENGTH@ 40
---------------------UPD MethodInvocation@@text.substring(idx + 1,endIdx) @TO@ text.substring(startIndex,endIdx) @AT@ 20925 @LENGTH@ 31
------------------------UPD SimpleName@@MethodName:substring:[idx + 1, endIdx] @TO@ MethodName:substring:[startIndex, endIdx] @AT@ 20930 @LENGTH@ 26
---------------------------DEL InfixExpression@@idx + 1 @AT@ 20940 @LENGTH@ 7
------------------------------DEL SimpleName@@idx @AT@ 20940 @LENGTH@ 3
------------------------------DEL Operator@@+ @AT@ 20943 @LENGTH@ 1
------------------------------DEL NumberLiteral@@1 @AT@ 20946 @LENGTH@ 1
---------------------------INS SimpleName@@startIndex @TO@ SimpleName@@MethodName:substring:[idx + 1, endIdx] @AT@ 21107 @LENGTH@ 10
---------------UPD IfStatement@@if (answer.length() > 0) {  return answer;} @TO@ if (answer.length() > 0) {  answer=ZooKeeperUtils.getSubstitutedData(curator,answer);  return answer;} @AT@ 20978 @LENGTH@ 87
------------------UPD Block@@ThenBody:{  return answer;} @TO@ ThenBody:{  answer=ZooKeeperUtils.getSubstitutedData(curator,answer);  return answer;} @AT@ 21003 @LENGTH@ 62
---------------------INS ExpressionStatement@@Assignment:answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @TO@ Block@@ThenBody:{  return answer;} @AT@ 21252 @LENGTH@ 60
------------------------INS Assignment@@answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @TO@ ExpressionStatement@@Assignment:answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21252 @LENGTH@ 59
---------------------------INS SimpleName@@answer @TO@ Assignment@@answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21252 @LENGTH@ 6
---------------------------INS Operator@@= @TO@ Assignment@@answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21258 @LENGTH@ 1
---------------------------INS MethodInvocation@@ZooKeeperUtils.getSubstitutedData(curator,answer) @TO@ Assignment@@answer=ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21261 @LENGTH@ 50
------------------------------INS SimpleName@@Name:ZooKeeperUtils @TO@ MethodInvocation@@ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21261 @LENGTH@ 14
------------------------------INS SimpleName@@MethodName:getSubstitutedData:[curator, answer] @TO@ MethodInvocation@@ZooKeeperUtils.getSubstitutedData(curator,answer) @AT@ 21276 @LENGTH@ 35
---------------------------------INS SimpleName@@curator @TO@ SimpleName@@MethodName:getSubstitutedData:[curator, answer] @AT@ 21295 @LENGTH@ 7
---------------------------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:getSubstitutedData:[curator, answer] @AT@ 21304 @LENGTH@ 6
---------INS VariableDeclarationStatement@@int startIndex=idx + prefix.length(); @TO@ Block@@ThenBody:{  int endIdx=text.indexOf('\"',idx + 5);  if (endIdx > 0) {    answer=text.substring(idx + 1,endIdx);    if (answer.length() > 0) {      return answer;    }  }} @AT@ 20927 @LENGTH@ 39
------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int startIndex=idx + prefix.length(); @AT@ 20927 @LENGTH@ 3
------------INS VariableDeclarationFragment@@startIndex=idx + prefix.length() @TO@ VariableDeclarationStatement@@int startIndex=idx + prefix.length(); @AT@ 20931 @LENGTH@ 34
---------------INS SimpleName@@startIndex @TO@ VariableDeclarationFragment@@startIndex=idx + prefix.length() @AT@ 20931 @LENGTH@ 10
---------------INS InfixExpression@@idx + prefix.length() @TO@ VariableDeclarationFragment@@startIndex=idx + prefix.length() @AT@ 20944 @LENGTH@ 21
------------------INS SimpleName@@idx @TO@ InfixExpression@@idx + prefix.length() @AT@ 20944 @LENGTH@ 3
------------------INS Operator@@+ @TO@ InfixExpression@@idx + prefix.length() @AT@ 20947 @LENGTH@ 1
------------------INS MethodInvocation@@prefix.length() @TO@ InfixExpression@@idx + prefix.length() @AT@ 20950 @LENGTH@ 15
---------------------INS SimpleName@@Name:prefix @TO@ MethodInvocation@@prefix.length() @AT@ 20950 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@prefix.length() @AT@ 20957 @LENGTH@ 8


INS VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @TO@ MethodDeclaration@@protected, void, MethodName:addModule, CommandContext ctx, final ParsedCommandLine parsedCmd, CommandLineException,  @AT@ 10429 @LENGTH@ 138
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10429 @LENGTH@ 5
---INS SimpleType@@FilenameTabCompleter @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10435 @LENGTH@ 20
---INS VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10456 @LENGTH@ 110
------INS SimpleName@@pathCompleter @TO@ VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10456 @LENGTH@ 13
------INS ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @TO@ VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10472 @LENGTH@ 94
---------INS MethodInvocation@@Util.isWindows() @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10472 @LENGTH@ 16
------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.isWindows() @AT@ 10472 @LENGTH@ 4
------------INS SimpleName@@MethodName:isWindows:[] @TO@ MethodInvocation@@Util.isWindows() @AT@ 10477 @LENGTH@ 11
---------INS ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10491 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10491 @LENGTH@ 3
------------INS SimpleType@@WindowsFilenameTabCompleter @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10495 @LENGTH@ 27
------------INS SimpleName@@ctx @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10523 @LENGTH@ 3
---------INS ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10530 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10530 @LENGTH@ 3
------------INS SimpleType@@DefaultFilenameTabCompleter @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10534 @LENGTH@ 27
------------INS SimpleName@@ctx @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10562 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertIsSatisfied(1000,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:assertIsSatisfied(2000,TimeUnit.MILLISECONDS) @AT@ 3127 @LENGTH@ 47
---UPD MethodInvocation@@assertIsSatisfied(1000,TimeUnit.MILLISECONDS) @TO@ assertIsSatisfied(2000,TimeUnit.MILLISECONDS) @AT@ 3127 @LENGTH@ 46
------UPD SimpleName@@MethodName:assertIsSatisfied:[1000, TimeUnit.MILLISECONDS] @TO@ MethodName:assertIsSatisfied:[2000, TimeUnit.MILLISECONDS] @AT@ 3127 @LENGTH@ 46
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 3145 @LENGTH@ 4


INS IfStatement@@if (serverControl == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ MethodDeclaration@@private, void, MethodName:applyOperationToHornetQService, final OperationContext context, ModelNode operation, String attributeName, ServiceController<?> hqService,  @AT@ 7019 @LENGTH@ 144
---INS InfixExpression@@serverControl == null @TO@ IfStatement@@if (serverControl == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 7023 @LENGTH@ 21
------INS SimpleName@@serverControl @TO@ InfixExpression@@serverControl == null @AT@ 7023 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@serverControl == null @AT@ 7036 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@serverControl == null @AT@ 7040 @LENGTH@ 4
---INS Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ IfStatement@@if (serverControl == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 7046 @LENGTH@ 117
------INS ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 7060 @LENGTH@ 73
---------INS MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 7060 @LENGTH@ 72
------------INS SimpleName@@Name:ManagementUtil @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 7060 @LENGTH@ 14
------------INS SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 7075 @LENGTH@ 57
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 7113 @LENGTH@ 7
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 7122 @LENGTH@ 9
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 7146 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("activemq:topic:foo").routeId("b").to("mock:b") @TO@ MethodInvocation:from("activemq:topic:foo").routeId("b").to("log:b","mock:b") @AT@ 4482 @LENGTH@ 74
---UPD MethodInvocation@@from("activemq:topic:foo").routeId("b").to("mock:b") @TO@ from("activemq:topic:foo").routeId("b").to("log:b","mock:b") @AT@ 4482 @LENGTH@ 73
------UPD SimpleName@@MethodName:to:["mock:b"] @TO@ MethodName:to:["log:b", "mock:b"] @AT@ 4543 @LENGTH@ 12
---------INS StringLiteral@@"log:b" @TO@ SimpleName@@MethodName:to:["mock:b"] @AT@ 4555 @LENGTH@ 7


UPD FieldDeclaration@@static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build()] @TO@ static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build()] @AT@ 2771 @LENGTH@ 388
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @AT@ 2804 @LENGTH@ 354
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(GlobalOperationHandlers.CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @TO@ new SimpleOperationDefinitionBuilder(READ_CHILDREN_NAMES_OPERATION,ControllerResolver.getResolver("global")).setParameters(CHILD_TYPE).setReadOnly().setRuntimeOnly().setReplyType(ModelType.LIST).setReplyValueType(ModelType.STRING).build() @AT@ 2817 @LENGTH@ 341
---------UPD MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.CHILD_TYPE] @TO@ MethodName:setParameters:[CHILD_TYPE] @AT@ 2817 @LENGTH@ 172
------------DEL QualifiedName@@GlobalOperationHandlers.CHILD_TYPE @AT@ 2954 @LENGTH@ 34
---------------DEL SimpleName@@GlobalOperationHandlers @AT@ 2954 @LENGTH@ 23
---------------DEL SimpleName@@CHILD_TYPE @AT@ 2978 @LENGTH@ 10
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:setParameters:[GlobalOperationHandlers.CHILD_TYPE] @AT@ 3047 @LENGTH@ 10


UPD IfStatement@@if (value.isDefined() && value.equals(SLOT_DEFAULT_VALUE)) {  return DISCARD.transformOperation(context,address,operation);} else {  return new TransformedOperation(operation,new RejectionWithFailurePolicy(MESSAGES.invalidJSFSlotValue(value.asString())),OperationResultTransformer.ORIGINAL_RESULT);} @TO@ if (value.isDefined() && SLOT_DEFAULT_VALUE.equals(value.asString())) {  return DISCARD.transformOperation(context,address,operation);} else {  return new TransformedOperation(operation,new RejectionWithFailurePolicy(MESSAGES.invalidJSFSlotValue(value.asString())),OperationResultTransformer.ORIGINAL_RESULT);} @AT@ 6658 @LENGTH@ 455
---UPD InfixExpression@@value.isDefined() && value.equals(SLOT_DEFAULT_VALUE) @TO@ value.isDefined() && SLOT_DEFAULT_VALUE.equals(value.asString()) @AT@ 6662 @LENGTH@ 53
------UPD MethodInvocation@@value.equals(SLOT_DEFAULT_VALUE) @TO@ SLOT_DEFAULT_VALUE.equals(value.asString()) @AT@ 6683 @LENGTH@ 32
---------UPD SimpleName@@Name:value @TO@ Name:SLOT_DEFAULT_VALUE @AT@ 6683 @LENGTH@ 5
---------UPD SimpleName@@MethodName:equals:[SLOT_DEFAULT_VALUE] @TO@ MethodName:equals:[value.asString()] @AT@ 6689 @LENGTH@ 26
------------DEL SimpleName@@SLOT_DEFAULT_VALUE @AT@ 6696 @LENGTH@ 18
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:equals:[SLOT_DEFAULT_VALUE] @AT@ 6709 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 6709 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 6715 @LENGTH@ 10


INS MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames,  @TO@ TypeDeclaration@@[public]Profile, [Comparable<Profile>, HasId] @AT@ 2364 @LENGTH@ 28
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames,  @AT@ 2351 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2351 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2356 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@List<String>, MethodName:getConfigurationFileNames,  @AT@ 2364 @LENGTH@ 25


UPD TryStatement@@try {  this.deployer.deploy(DEP1);  RemoteLatch latch=(RemoteLatch)context.lookup("ejb:/dep1/LatchBean!" + RemoteLatch.class.getName());  final ModelNode op=new ModelNode();  op.get(ModelDescriptionConstants.ADDRESS);  op.get(ModelDescriptionConstants.OP_ADDR).set(new ModelNode());  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.SHUTDOWN);  ManagementOperations.executeOperation(client,op);  Thread.sleep(1000);  Assert.assertEquals("Real hello",latch.getEchoMessage());  latch.testDone();  while (managementClient.isServerInRunningState()) {    Thread.sleep(50);  }}  finally {  try {    if (!managementClient.isServerInRunningState()) {      container.start(CONTAINER);    }    this.deployer.undeploy(DEP1);    this.container.stop(CONTAINER);  } catch (  Exception e) {    logger.warn("Exception during container shutdown",e);  }  client.close();} @TO@ try {  this.deployer.deploy(DEP1);  RemoteLatch latch=(RemoteLatch)context.lookup("ejb:/dep1/LatchBean!" + RemoteLatch.class.getName());  final ModelNode op=new ModelNode();  op.get(ModelDescriptionConstants.ADDRESS);  op.get(ModelDescriptionConstants.OP_ADDR).set(new ModelNode());  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.SHUTDOWN);  ManagementOperations.executeOperation(client,op);  Thread.sleep(1000);  Assert.assertEquals("Real hello",latch.getEchoMessage());  final RemoteLatch asynchronousProxy=EJBClient.asynchronous(latch);  asynchronousProxy.testDone();  while (managementClient.isServerInRunningState()) {    Thread.sleep(50);  }}  finally {  try {    if (!managementClient.isServerInRunningState()) {      container.start(CONTAINER);    }    this.deployer.undeploy(DEP1);    this.container.stop(CONTAINER);  } catch (  Exception e) {    logger.warn("Exception during container shutdown",e);  }  client.close();} @AT@ 4895 @LENGTH@ 1444
---UPD ExpressionStatement@@MethodInvocation:latch.testDone() @TO@ MethodInvocation:asynchronousProxy.testDone() @AT@ 5785 @LENGTH@ 17
------UPD MethodInvocation@@latch.testDone() @TO@ asynchronousProxy.testDone() @AT@ 5785 @LENGTH@ 16
---------UPD SimpleName@@Name:latch @TO@ Name:asynchronousProxy @AT@ 5785 @LENGTH@ 5
---INS VariableDeclarationStatement@@final RemoteLatch asynchronousProxy=EJBClient.asynchronous(latch); @TO@ TryStatement@@try {  this.deployer.deploy(DEP1);  RemoteLatch latch=(RemoteLatch)context.lookup("ejb:/dep1/LatchBean!" + RemoteLatch.class.getName());  final ModelNode op=new ModelNode();  op.get(ModelDescriptionConstants.ADDRESS);  op.get(ModelDescriptionConstants.OP_ADDR).set(new ModelNode());  op.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.SHUTDOWN);  ManagementOperations.executeOperation(client,op);  Thread.sleep(1000);  Assert.assertEquals("Real hello",latch.getEchoMessage());  latch.testDone();  while (managementClient.isServerInRunningState()) {    Thread.sleep(50);  }}  finally {  try {    if (!managementClient.isServerInRunningState()) {      container.start(CONTAINER);    }    this.deployer.undeploy(DEP1);    this.container.stop(CONTAINER);  } catch (  Exception e) {    logger.warn("Exception during container shutdown",e);  }  client.close();} @AT@ 6404 @LENGTH@ 68
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final RemoteLatch asynchronousProxy=EJBClient.asynchronous(latch); @AT@ 6404 @LENGTH@ 5
------INS SimpleType@@RemoteLatch @TO@ VariableDeclarationStatement@@final RemoteLatch asynchronousProxy=EJBClient.asynchronous(latch); @AT@ 6410 @LENGTH@ 11
------INS VariableDeclarationFragment@@asynchronousProxy=EJBClient.asynchronous(latch) @TO@ VariableDeclarationStatement@@final RemoteLatch asynchronousProxy=EJBClient.asynchronous(latch); @AT@ 6422 @LENGTH@ 49
---------INS SimpleName@@asynchronousProxy @TO@ VariableDeclarationFragment@@asynchronousProxy=EJBClient.asynchronous(latch) @AT@ 6422 @LENGTH@ 17
---------INS MethodInvocation@@EJBClient.asynchronous(latch) @TO@ VariableDeclarationFragment@@asynchronousProxy=EJBClient.asynchronous(latch) @AT@ 6442 @LENGTH@ 29
------------INS SimpleName@@Name:EJBClient @TO@ MethodInvocation@@EJBClient.asynchronous(latch) @AT@ 6442 @LENGTH@ 9
------------INS SimpleName@@MethodName:asynchronous:[latch] @TO@ MethodInvocation@@EJBClient.asynchronous(latch) @AT@ 6452 @LENGTH@ 19
---------------INS SimpleName@@latch @TO@ SimpleName@@MethodName:asynchronous:[latch] @AT@ 6465 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:setConfiguredApplication, boolean configuredApplication,  @TO@ public, void, MethodName:setConfiguredApplication, Boolean configuredApplication,  @AT@ 2881 @LENGTH@ 135
---UPD SingleVariableDeclaration@@boolean configuredApplication @TO@ Boolean configuredApplication @AT@ 2918 @LENGTH@ 29
------DEL PrimitiveType@@boolean @AT@ 2918 @LENGTH@ 7
------INS SimpleType@@Boolean @TO@ SingleVariableDeclaration@@boolean configuredApplication @AT@ 2918 @LENGTH@ 7


UPD IfStatement@@if (type.isInstance(pair.getClass())) {  answer.add(type.cast(pair.getClass()));} @TO@ if (type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName())) {  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @AT@ 3255 @LENGTH@ 117
---UPD Block@@ThenBody:{  answer.add(type.cast(pair.getClass()));} @TO@ ThenBody:{  Object instance=context.lookup(pair.getName());  answer.add(type.cast(instance));} @AT@ 3293 @LENGTH@ 79
------UPD ExpressionStatement@@MethodInvocation:answer.add(type.cast(pair.getClass())) @TO@ MethodInvocation:answer.add(type.cast(instance)) @AT@ 3315 @LENGTH@ 39
---------UPD MethodInvocation@@answer.add(type.cast(pair.getClass())) @TO@ answer.add(type.cast(instance)) @AT@ 3315 @LENGTH@ 38
------------UPD SimpleName@@MethodName:add:[type.cast(pair.getClass())] @TO@ MethodName:add:[type.cast(instance)] @AT@ 3322 @LENGTH@ 31
---------------UPD MethodInvocation@@type.cast(pair.getClass()) @TO@ type.cast(instance) @AT@ 3326 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:cast:[pair.getClass()] @TO@ MethodName:cast:[instance] @AT@ 3331 @LENGTH@ 21
---------------------DEL MethodInvocation@@pair.getClass() @AT@ 3336 @LENGTH@ 15
------------------------DEL SimpleName@@Name:pair @AT@ 3336 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 3341 @LENGTH@ 10
---------------------INS SimpleName@@instance @TO@ SimpleName@@MethodName:cast:[pair.getClass()] @AT@ 3561 @LENGTH@ 8
------INS VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @TO@ Block@@ThenBody:{  answer.add(type.cast(pair.getClass()));} @AT@ 3470 @LENGTH@ 49
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @AT@ 3470 @LENGTH@ 6
---------INS VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @TO@ VariableDeclarationStatement@@Object instance=context.lookup(pair.getName()); @AT@ 3477 @LENGTH@ 41
------------INS SimpleName@@instance @TO@ VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @AT@ 3477 @LENGTH@ 8
------------INS MethodInvocation@@context.lookup(pair.getName()) @TO@ VariableDeclarationFragment@@instance=context.lookup(pair.getName()) @AT@ 3488 @LENGTH@ 30
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.lookup(pair.getName()) @AT@ 3488 @LENGTH@ 7
---------------INS SimpleName@@MethodName:lookup:[pair.getName()] @TO@ MethodInvocation@@context.lookup(pair.getName()) @AT@ 3496 @LENGTH@ 22
------------------INS MethodInvocation@@pair.getName() @TO@ SimpleName@@MethodName:lookup:[pair.getName()] @AT@ 3503 @LENGTH@ 14
---------------------INS SimpleName@@Name:pair @TO@ MethodInvocation@@pair.getName() @AT@ 3503 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@pair.getName() @AT@ 3508 @LENGTH@ 9
---INS InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @TO@ IfStatement@@if (type.isInstance(pair.getClass())) {  answer.add(type.cast(pair.getClass()));} @AT@ 3368 @LENGTH@ 78
------MOV MethodInvocation@@type.isInstance(pair.getClass()) @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 3259 @LENGTH@ 32
------INS Operator@@|| @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 3400 @LENGTH@ 2
------INS MethodInvocation@@type.getName().equals(pair.getClassName()) @TO@ InfixExpression@@type.isInstance(pair.getClass()) || type.getName().equals(pair.getClassName()) @AT@ 3404 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 3404 @LENGTH@ 14
---------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 3404 @LENGTH@ 4
---------INS SimpleName@@MethodName:equals:[pair.getClassName()] @TO@ MethodInvocation@@type.getName().equals(pair.getClassName()) @AT@ 3419 @LENGTH@ 27
------------INS MethodInvocation@@pair.getClassName() @TO@ SimpleName@@MethodName:equals:[pair.getClassName()] @AT@ 3426 @LENGTH@ 19
---------------INS SimpleName@@Name:pair @TO@ MethodInvocation@@pair.getClassName() @AT@ 3426 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getClassName:[] @TO@ MethodInvocation@@pair.getClassName() @AT@ 3431 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:untrackConfiguration, Runnable callback,  @TO@ public, void, MethodName:unTrackConfiguration, Runnable callback,  @AT@ 1576 @LENGTH@ 146
---UPD SimpleName@@MethodName:untrackConfiguration @TO@ MethodName:unTrackConfiguration @AT@ 1588 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertEquals(importedProfile + ".profileAttributes[parent]","camel",parent) @TO@ MethodInvocation:assertEquals(importedProfile + ".profileAttributes[parent]","feature-camel",parent) @AT@ 5978 @LENGTH@ 78
---UPD MethodInvocation@@assertEquals(importedProfile + ".profileAttributes[parent]","camel",parent) @TO@ assertEquals(importedProfile + ".profileAttributes[parent]","feature-camel",parent) @AT@ 5978 @LENGTH@ 77
------UPD SimpleName@@MethodName:assertEquals:[importedProfile + ".profileAttributes[parent]", "camel", parent] @TO@ MethodName:assertEquals:[importedProfile + ".profileAttributes[parent]", "feature-camel", parent] @AT@ 5978 @LENGTH@ 77
---------UPD StringLiteral@@"camel" @TO@ "feature-camel" @AT@ 6039 @LENGTH@ 7


MOV MethodDeclaration@@protected, void, MethodName:doParseRegion, Element element, ParserContext parserContext, BeanDefinitionBuilder builder, boolean subRegion,  @TO@ TypeDeclaration@@LookupRegionParser, AbstractRegionParser @AT@ 1191 @LENGTH@ 570


INS MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @TO@ TypeDeclaration@@[public]EeSubsystemTestCase, AbstractSubsystemBaseTest @AT@ 2818 @LENGTH@ 301
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 2818 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 2825 @LENGTH@ 4
---INS SimpleName@@MethodName:testTransformers712 @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 2830 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 2859 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:testTransformers712(ModelTestControllerVersion.V7_1_2_FINAL) @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 3052 @LENGTH@ 61
------INS MethodInvocation@@testTransformers712(ModelTestControllerVersion.V7_1_2_FINAL) @TO@ ExpressionStatement@@MethodInvocation:testTransformers712(ModelTestControllerVersion.V7_1_2_FINAL) @AT@ 3052 @LENGTH@ 60
---------INS SimpleName@@MethodName:testTransformers712:[ModelTestControllerVersion.V7_1_2_FINAL] @TO@ MethodInvocation@@testTransformers712(ModelTestControllerVersion.V7_1_2_FINAL) @AT@ 3052 @LENGTH@ 60
------------INS QualifiedName@@ModelTestControllerVersion.V7_1_2_FINAL @TO@ SimpleName@@MethodName:testTransformers712:[ModelTestControllerVersion.V7_1_2_FINAL] @AT@ 3072 @LENGTH@ 39
---------------INS SimpleName@@ModelTestControllerVersion @TO@ QualifiedName@@ModelTestControllerVersion.V7_1_2_FINAL @AT@ 3072 @LENGTH@ 26
---------------INS SimpleName@@V7_1_2_FINAL @TO@ QualifiedName@@ModelTestControllerVersion.V7_1_2_FINAL @AT@ 3099 @LENGTH@ 12


INS MethodDeclaration@@protected, int, MethodName:getPort,  @TO@ TypeDeclaration@@[public, abstract]StompBaseTest, CamelTestSupport @AT@ 1105 @LENGTH@ 53
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, int, MethodName:getPort,  @AT@ 1105 @LENGTH@ 9
---INS PrimitiveType@@int @TO@ MethodDeclaration@@protected, int, MethodName:getPort,  @AT@ 1115 @LENGTH@ 3
---INS SimpleName@@MethodName:getPort @TO@ MethodDeclaration@@protected, int, MethodName:getPort,  @AT@ 1119 @LENGTH@ 7
---INS ReturnStatement@@NumberLiteral:61613 @TO@ MethodDeclaration@@protected, int, MethodName:getPort,  @AT@ 1139 @LENGTH@ 13
------INS NumberLiteral@@61613 @TO@ ReturnStatement@@NumberLiteral:61613 @AT@ 1146 @LENGTH@ 5


UPD VariableDeclarationStatement@@OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()); @TO@ OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()); @AT@ 1919 @LENGTH@ 290
---UPD VariableDeclarationFragment@@clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 1933 @LENGTH@ 275
------UPD MethodInvocation@@RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 1956 @LENGTH@ 252
---------UPD SimpleName@@MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensionProperties()] @TO@ MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensions()] @AT@ 1976 @LENGTH@ 232
------------UPD MethodInvocation@@request.getExtensionProperties() @TO@ request.getExtensions() @AT@ 2175 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getExtensionProperties:[] @TO@ MethodName:getExtensions:[] @AT@ 2183 @LENGTH@ 24


UPD ReturnStatement@@MethodInvocation:uniqueId.toString() @TO@ MethodInvocation:UNIQUE_ID.toString() @AT@ 4495 @LENGTH@ 27
---UPD MethodInvocation@@uniqueId.toString() @TO@ UNIQUE_ID.toString() @AT@ 4502 @LENGTH@ 19
------UPD SimpleName@@Name:uniqueId @TO@ Name:UNIQUE_ID @AT@ 4502 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @TO@ TypeDeclaration@@[public]ContextSourceTransactionManager, AbstractPlatformTransactionManager @AT@ 9064 @LENGTH@ 101
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 9064 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 9071 @LENGTH@ 4
---INS SimpleName@@MethodName:afterPropertiesSet @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 9076 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 9104 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:delegate.checkRenamingStrategy() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 9125 @LENGTH@ 33
------INS MethodInvocation@@delegate.checkRenamingStrategy() @TO@ ExpressionStatement@@MethodInvocation:delegate.checkRenamingStrategy() @AT@ 9125 @LENGTH@ 32
---------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.checkRenamingStrategy() @AT@ 9125 @LENGTH@ 8
---------INS SimpleName@@MethodName:checkRenamingStrategy:[] @TO@ MethodInvocation@@delegate.checkRenamingStrategy() @AT@ 9134 @LENGTH@ 23


UPD ForStatement@@for (byte ordinal=0; true; ordinal++) {  try {    DataPolicy.fromOrdinal(ordinal);  } catch (  Exception e) {    return ordinal;  }} @TO@ for (byte ordinal=0; ordinal < Byte.MAX_VALUE; ordinal++) {  try {    DataPolicy.fromOrdinal(ordinal);  } catch (  Exception e) {    return ordinal;  }} @AT@ 1027 @LENGTH@ 146
---DEL BooleanLiteral@@true @AT@ 1050 @LENGTH@ 4
---INS InfixExpression@@ordinal < Byte.MAX_VALUE @TO@ ForStatement@@for (byte ordinal=0; true; ordinal++) {  try {    DataPolicy.fromOrdinal(ordinal);  } catch (  Exception e) {    return ordinal;  }} @AT@ 1067 @LENGTH@ 24
------INS SimpleName@@ordinal @TO@ InfixExpression@@ordinal < Byte.MAX_VALUE @AT@ 1067 @LENGTH@ 7
------INS Operator@@< @TO@ InfixExpression@@ordinal < Byte.MAX_VALUE @AT@ 1074 @LENGTH@ 1
------INS QualifiedName@@Byte.MAX_VALUE @TO@ InfixExpression@@ordinal < Byte.MAX_VALUE @AT@ 1077 @LENGTH@ 14
---------INS SimpleName@@Byte @TO@ QualifiedName@@Byte.MAX_VALUE @AT@ 1077 @LENGTH@ 4
---------INS SimpleName@@MAX_VALUE @TO@ QualifiedName@@Byte.MAX_VALUE @AT@ 1082 @LENGTH@ 9


INS VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2968 @LENGTH@ 105
---INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @AT@ 2968 @LENGTH@ 9
---INS VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @TO@ VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @AT@ 2978 @LENGTH@ 94
------INS SimpleName@@hostsAttribute @TO@ VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2978 @LENGTH@ 14
------INS MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @TO@ VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2995 @LENGTH@ 77
---------INS QualifiedName@@Name:HostScopedRolesResourceDefinition.HOSTS @TO@ MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2995 @LENGTH@ 39
---------INS SimpleName@@MethodName:resolveModelAttribute:[context, model] @TO@ MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 3035 @LENGTH@ 37
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:resolveModelAttribute:[context, model] @AT@ 3057 @LENGTH@ 7
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:resolveModelAttribute:[context, model] @AT@ 3066 @LENGTH@ 5


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 2004 @LENGTH@ 471
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 2048 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2048 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2048 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2052 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 2060 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 2060 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2064 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 2072 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 2081 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), public]Jackson2JsonMessageConverterTests,  @AT@ 4404 @LENGTH@ 223
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4404 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4411 @LENGTH@ 4
---INS SimpleName@@MethodName:testAmqp330StringArray @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4416 @LENGTH@ 22
---INS VariableDeclarationStatement@@String[] testData={"test"}; @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4445 @LENGTH@ 29
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] testData={"test"}; @AT@ 4445 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4445 @LENGTH@ 6
------INS VariableDeclarationFragment@@testData={"test"} @TO@ VariableDeclarationStatement@@String[] testData={"test"}; @AT@ 4454 @LENGTH@ 19
---------INS SimpleName@@testData @TO@ VariableDeclarationFragment@@testData={"test"} @AT@ 4454 @LENGTH@ 8
---------INS ArrayInitializer@@{"test"} @TO@ VariableDeclarationFragment@@testData={"test"} @AT@ 4465 @LENGTH@ 8
------------INS StringLiteral@@"test" @TO@ ArrayInitializer@@{"test"} @AT@ 4466 @LENGTH@ 6
---INS VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4477 @LENGTH@ 73
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4477 @LENGTH@ 7
------INS VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationStatement@@Message message=converter.toMessage(testData,new MessageProperties()); @AT@ 4485 @LENGTH@ 64
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4485 @LENGTH@ 7
---------INS MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @TO@ VariableDeclarationFragment@@message=converter.toMessage(testData,new MessageProperties()) @AT@ 4495 @LENGTH@ 54
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4495 @LENGTH@ 9
------------INS SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @TO@ MethodInvocation@@converter.toMessage(testData,new MessageProperties()) @AT@ 4505 @LENGTH@ 44
---------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4515 @LENGTH@ 8
---------------INS ClassInstanceCreation@@MessageProperties[] @TO@ SimpleName@@MethodName:toMessage:[testData, new MessageProperties()] @AT@ 4525 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4525 @LENGTH@ 3
------------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 4529 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ MethodDeclaration@@public, void, MethodName:testAmqp330StringArray,  @AT@ 4553 @LENGTH@ 71
------INS MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4553 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @TO@ MethodInvocation@@assertArrayEquals(testData,(Object[])converter.fromMessage(message)) @AT@ 4553 @LENGTH@ 70
------------INS SimpleName@@testData @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4571 @LENGTH@ 8
------------INS CastExpression@@(Object[])converter.fromMessage(message) @TO@ SimpleName@@MethodName:assertArrayEquals:[testData, (Object[])converter.fromMessage(message)] @AT@ 4581 @LENGTH@ 41
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4582 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 4582 @LENGTH@ 6
---------------INS MethodInvocation@@converter.fromMessage(message) @TO@ CastExpression@@(Object[])converter.fromMessage(message) @AT@ 4592 @LENGTH@ 30
------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4592 @LENGTH@ 9
------------------INS SimpleName@@MethodName:fromMessage:[message] @TO@ MethodInvocation@@converter.fromMessage(message) @AT@ 4602 @LENGTH@ 20
---------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:fromMessage:[message] @AT@ 4614 @LENGTH@ 7


INS MethodDeclaration@@Collection<User>, MethodName:findByIdIn, @Param("ids") Integer... ids,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 8152 @LENGTH@ 41
---INS ParameterizedType@@Collection<User> @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdIn, @Param("ids") Integer... ids,  @AT@ 8135 @LENGTH@ 16
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<User> @AT@ 8135 @LENGTH@ 10
------INS SimpleType@@User @TO@ ParameterizedType@@Collection<User> @AT@ 8146 @LENGTH@ 4
---INS SimpleName@@MethodName:findByIdIn @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdIn, @Param("ids") Integer... ids,  @AT@ 8152 @LENGTH@ 10
---INS SingleVariableDeclaration@@@Param("ids") Integer... ids @TO@ MethodDeclaration@@Collection<User>, MethodName:findByIdIn, @Param("ids") Integer... ids,  @AT@ 8163 @LENGTH@ 28
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@@Param("ids") Integer... ids @AT@ 8177 @LENGTH@ 7
------INS SimpleName@@ids @TO@ SingleVariableDeclaration@@@Param("ids") Integer... ids @AT@ 8188 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE) @TO@ MethodDeclaration@@public, static, void, MethodName:install, final ServiceTarget serviceTarget, final Endpoint endpoint, final DeploymentUnit unit,  @AT@ 9067 @LENGTH@ 74
---INS MethodInvocation@@builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE) @TO@ ExpressionStatement@@MethodInvocation:builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE) @AT@ 9067 @LENGTH@ 73
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE) @AT@ 9067 @LENGTH@ 7
------INS SimpleName@@MethodName:addDependency:[DependencyType.REQUIRED, WSServices.CONFIG_SERVICE] @TO@ MethodInvocation@@builder.addDependency(DependencyType.REQUIRED,WSServices.CONFIG_SERVICE) @AT@ 9075 @LENGTH@ 65
---------INS QualifiedName@@DependencyType.REQUIRED @TO@ SimpleName@@MethodName:addDependency:[DependencyType.REQUIRED, WSServices.CONFIG_SERVICE] @AT@ 9089 @LENGTH@ 23
------------INS SimpleName@@DependencyType @TO@ QualifiedName@@DependencyType.REQUIRED @AT@ 9089 @LENGTH@ 14
------------INS SimpleName@@REQUIRED @TO@ QualifiedName@@DependencyType.REQUIRED @AT@ 9104 @LENGTH@ 8
---------INS QualifiedName@@WSServices.CONFIG_SERVICE @TO@ SimpleName@@MethodName:addDependency:[DependencyType.REQUIRED, WSServices.CONFIG_SERVICE] @AT@ 9114 @LENGTH@ 25
------------INS SimpleName@@WSServices @TO@ QualifiedName@@WSServices.CONFIG_SERVICE @AT@ 9114 @LENGTH@ 10
------------INS SimpleName@@CONFIG_SERVICE @TO@ QualifiedName@@WSServices.CONFIG_SERVICE @AT@ 9125 @LENGTH@ 14


UPD Block@@ThenBody:{  ReduceSinkOperator rs=(ReduceSinkOperator)topOp;  plan.setKeyDesc(rs.getConf().getKeySerializeInfo());  int tag=Math.max(0,rs.getConf().getTag());  List<TableDesc> tagToSchema=plan.getTagToValueDesc();  while (tag + 1 > tagToSchema.size()) {    tagToSchema.add(null);  }  tagToSchema.set(tag,rs.getConf().getValueSerializeInfo());} @TO@ ThenBody:{  ReduceSinkOperator rs=(ReduceSinkOperator)topOp;  setKeyAndValueDesc(plan,rs);} @AT@ 29563 @LENGTH@ 388
---UPD ExpressionStatement@@MethodInvocation:plan.setKeyDesc(rs.getConf().getKeySerializeInfo()) @TO@ MethodInvocation:work.setKeyDesc(rs.getConf().getKeySerializeInfo()) @AT@ 29629 @LENGTH@ 52
---DEL VariableDeclarationStatement@@List<TableDesc> tagToSchema=plan.getTagToValueDesc(); @AT@ 29740 @LENGTH@ 55
------DEL ParameterizedType@@List<TableDesc> @AT@ 29740 @LENGTH@ 15
---------DEL SimpleType@@List @AT@ 29740 @LENGTH@ 4
---------DEL SimpleType@@TableDesc @AT@ 29745 @LENGTH@ 9
------DEL VariableDeclarationFragment@@tagToSchema=plan.getTagToValueDesc() @AT@ 29756 @LENGTH@ 38
---------DEL SimpleName@@tagToSchema @AT@ 29756 @LENGTH@ 11
---------DEL MethodInvocation@@plan.getTagToValueDesc() @AT@ 29770 @LENGTH@ 24
------------DEL SimpleName@@Name:plan @AT@ 29770 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getTagToValueDesc:[] @AT@ 29775 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:setKeyAndValueDesc(plan,rs) @TO@ Block@@ThenBody:{  ReduceSinkOperator rs=(ReduceSinkOperator)topOp;  plan.setKeyDesc(rs.getConf().getKeySerializeInfo());  int tag=Math.max(0,rs.getConf().getTag());  List<TableDesc> tagToSchema=plan.getTagToValueDesc();  while (tag + 1 > tagToSchema.size()) {    tagToSchema.add(null);  }  tagToSchema.set(tag,rs.getConf().getValueSerializeInfo());} @AT@ 30132 @LENGTH@ 29
------INS MethodInvocation@@setKeyAndValueDesc(plan,rs) @TO@ ExpressionStatement@@MethodInvocation:setKeyAndValueDesc(plan,rs) @AT@ 30132 @LENGTH@ 28
---------INS SimpleName@@MethodName:setKeyAndValueDesc:[plan, rs] @TO@ MethodInvocation@@setKeyAndValueDesc(plan,rs) @AT@ 30132 @LENGTH@ 28
------------INS SimpleName@@plan @TO@ SimpleName@@MethodName:setKeyAndValueDesc:[plan, rs] @AT@ 30151 @LENGTH@ 4
------------INS SimpleName@@rs @TO@ SimpleName@@MethodName:setKeyAndValueDesc:[plan, rs] @AT@ 30157 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:setCreateOptions, O createOptions,  @TO@ public, void, MethodName:setCreateOptions, CreateContainerOptions createOptions,  @AT@ 1757 @LENGTH@ 97
---UPD SingleVariableDeclaration@@O createOptions @TO@ CreateContainerOptions createOptions @AT@ 1786 @LENGTH@ 15
------UPD SimpleType@@O @TO@ CreateContainerOptions @AT@ 1786 @LENGTH@ 1
---UPD ExpressionStatement@@Assignment:this.createOptions=createOptions @TO@ Assignment:this.createOptions=(O)createOptions @AT@ 1813 @LENGTH@ 35
------UPD Assignment@@this.createOptions=createOptions @TO@ this.createOptions=(O)createOptions @AT@ 1813 @LENGTH@ 34
---------DEL SimpleName@@createOptions @AT@ 1834 @LENGTH@ 13
---------INS CastExpression@@(O)createOptions @TO@ Assignment@@this.createOptions=createOptions @AT@ 1855 @LENGTH@ 17
------------INS SimpleType@@O @TO@ CastExpression@@(O)createOptions @AT@ 1856 @LENGTH@ 1
------------INS SimpleName@@createOptions @TO@ CastExpression@@(O)createOptions @AT@ 1859 @LENGTH@ 13


UPD IfStatement@@if (content.isDirectory() && pathMatcher.matchStart(fullPattern,currPath + "/")) {  doRetrieveMatchingFiles(fullPattern,content.getPath(),result);} @TO@ if (content.isDir() && pathMatcher.matchStart(fullPattern,currPath + "/")) {  doRetrieveMatchingFiles(fullPattern,content.getPath(),result);} @AT@ 13126 @LENGTH@ 157
---UPD InfixExpression@@content.isDirectory() && pathMatcher.matchStart(fullPattern,currPath + "/") @TO@ content.isDir() && pathMatcher.matchStart(fullPattern,currPath + "/") @AT@ 13130 @LENGTH@ 76
------UPD MethodInvocation@@content.isDirectory() @TO@ content.isDir() @AT@ 13130 @LENGTH@ 21
---------UPD SimpleName@@MethodName:isDirectory:[] @TO@ MethodName:isDir:[] @AT@ 13138 @LENGTH@ 13


UPD TypeDeclaration@@[@Ignore("[FABRIC-677] Fix tooling camel ActiveMQLocalCamelFacadeTest"), public]ActiveMQLocalCamelFacadeTest, CamelTestSupport @TO@ [public]ActiveMQLocalCamelFacadeTest, CamelTestSupport @AT@ 1314 @LENGTH@ 2980
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-677] Fix tooling camel ActiveMQLocalCamelFacadeTest") @AT@ 1314 @LENGTH@ 70


UPD IfStatement@@if (isPipelined()) {  pipeline(pipeline.select(dbIndex));} @TO@ if (isPipelined()) {  pipeline(pipeline.select(dbIndex));  return;} @AT@ 14262 @LENGTH@ 65
---UPD Block@@ThenBody:{  pipeline(pipeline.select(dbIndex));} @TO@ ThenBody:{  pipeline(pipeline.select(dbIndex));  return;} @AT@ 14281 @LENGTH@ 46
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  pipeline(pipeline.select(dbIndex));} @AT@ 14327 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @TO@ private, void, MethodName:testTransformers712, ModelTestControllerVersion controllerVersion, Exception,  @AT@ 2819 @LENGTH@ 2297
---UPD Modifier@@public @TO@ private @AT@ 2819 @LENGTH@ 6
---INS SingleVariableDeclaration@@ModelTestControllerVersion controllerVersion @TO@ MethodDeclaration@@public, void, MethodName:testTransformers712, Exception,  @AT@ 3158 @LENGTH@ 44
------INS SimpleType@@ModelTestControllerVersion @TO@ SingleVariableDeclaration@@ModelTestControllerVersion controllerVersion @AT@ 3158 @LENGTH@ 26
------INS SimpleName@@controllerVersion @TO@ SingleVariableDeclaration@@ModelTestControllerVersion controllerVersion @AT@ 3185 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startServices(producerContext) @TO@ MethodInvocation:ServiceHelper.startServices(consumerContext1,consumerContext2,producerContext) @AT@ 3382 @LENGTH@ 45
---UPD MethodInvocation@@ServiceHelper.startServices(producerContext) @TO@ ServiceHelper.startServices(consumerContext1,consumerContext2,producerContext) @AT@ 3382 @LENGTH@ 44
------UPD SimpleName@@MethodName:startServices:[producerContext] @TO@ MethodName:startServices:[consumerContext1, consumerContext2, producerContext] @AT@ 3396 @LENGTH@ 30
---------INS SimpleName@@consumerContext1 @TO@ SimpleName@@MethodName:startServices:[producerContext] @AT@ 3330 @LENGTH@ 16
---------INS SimpleName@@consumerContext2 @TO@ SimpleName@@MethodName:startServices:[producerContext] @AT@ 3348 @LENGTH@ 16


UPD VariableDeclarationStatement@@Resource resource=injectionPoint.getAnnotated().getAnnotation(Resource.class); @TO@ Resource resource=getResourceAnnotated(injectionPoint).getAnnotation(Resource.class); @AT@ 4033 @LENGTH@ 80
---UPD VariableDeclarationFragment@@resource=injectionPoint.getAnnotated().getAnnotation(Resource.class) @TO@ resource=getResourceAnnotated(injectionPoint).getAnnotation(Resource.class) @AT@ 4042 @LENGTH@ 70
------UPD MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(Resource.class) @TO@ getResourceAnnotated(injectionPoint).getAnnotation(Resource.class) @AT@ 4053 @LENGTH@ 59
---------DEL MethodInvocation@@MethodName:getAnnotated:[] @AT@ 4053 @LENGTH@ 29
---------UPD SimpleName@@Name:injectionPoint @TO@ injectionPoint @AT@ 4053 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @TO@ MethodInvocation@@injectionPoint.getAnnotated().getAnnotation(Resource.class) @AT@ 4140 @LENGTH@ 36
------------MOV SimpleName@@Name:injectionPoint @TO@ MethodInvocation@@MethodName:getResourceAnnotated:[injectionPoint] @AT@ 4053 @LENGTH@ 14


INS VariableDeclarationStatement@@List<org.springframework.batch.core.JobExecution> previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()); @TO@ MethodDeclaration@@public, long, MethodName:restart, long executionId, Properties params, JobExecutionAlreadyCompleteException, NoSuchJobExecutionException, JobExecutionNotMostRecentException, JobRestartException, JobSecurityException,  @AT@ 16115 @LENGTH@ 139
---INS ParameterizedType@@List<org.springframework.batch.core.JobExecution> @TO@ VariableDeclarationStatement@@List<org.springframework.batch.core.JobExecution> previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()); @AT@ 16115 @LENGTH@ 49
------INS SimpleType@@List @TO@ ParameterizedType@@List<org.springframework.batch.core.JobExecution> @AT@ 16115 @LENGTH@ 4
------INS SimpleType@@org.springframework.batch.core.JobExecution @TO@ ParameterizedType@@List<org.springframework.batch.core.JobExecution> @AT@ 16120 @LENGTH@ 43
---INS VariableDeclarationFragment@@previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @TO@ VariableDeclarationStatement@@List<org.springframework.batch.core.JobExecution> previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()); @AT@ 16165 @LENGTH@ 88
------INS SimpleName@@previousExecutions @TO@ VariableDeclarationFragment@@previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @AT@ 16165 @LENGTH@ 18
------INS MethodInvocation@@jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @TO@ VariableDeclarationFragment@@previousExecutions=jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @AT@ 16186 @LENGTH@ 67
---------INS SimpleName@@Name:jobExplorer @TO@ MethodInvocation@@jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @AT@ 16186 @LENGTH@ 11
---------INS SimpleName@@MethodName:getJobExecutions:[previousJobExecution.getJobInstance()] @TO@ MethodInvocation@@jobExplorer.getJobExecutions(previousJobExecution.getJobInstance()) @AT@ 16198 @LENGTH@ 55
------------INS MethodInvocation@@previousJobExecution.getJobInstance() @TO@ SimpleName@@MethodName:getJobExecutions:[previousJobExecution.getJobInstance()] @AT@ 16215 @LENGTH@ 37
---------------INS SimpleName@@Name:previousJobExecution @TO@ MethodInvocation@@previousJobExecution.getJobInstance() @AT@ 16215 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getJobInstance:[] @TO@ MethodInvocation@@previousJobExecution.getJobInstance() @AT@ 16236 @LENGTH@ 16


UPD TypeDeclaration@@[public]ZkBridgeNamespaceHandlerTest, AbstractZkConnectorTestSupport @TO@ [@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests"), public]ZkBridgeNamespaceHandlerTest, AbstractZkConnectorTestSupport @AT@ 1285 @LENGTH@ 1156
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests") @TO@ TypeDeclaration@@[public]ZkBridgeNamespaceHandlerTest, AbstractZkConnectorTestSupport @AT@ 1285 @LENGTH@ 57


UPD VariableDeclarationStatement@@final String childType=GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString(); @TO@ final String childType=CHILD_TYPE.resolveModelAttribute(context,operation).asString(); @AT@ 3456 @LENGTH@ 113
---UPD VariableDeclarationFragment@@childType=GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @TO@ childType=CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3469 @LENGTH@ 99
------UPD MethodInvocation@@GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @TO@ CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3481 @LENGTH@ 87
---------DEL QualifiedName@@Name:GlobalOperationHandlers.CHILD_TYPE @AT@ 3481 @LENGTH@ 34
---------INS SimpleName@@Name:CHILD_TYPE @TO@ MethodInvocation@@GlobalOperationHandlers.CHILD_TYPE.resolveModelAttribute(context,operation).asString() @AT@ 3550 @LENGTH@ 10


INS MethodDeclaration@@protected, Set<SkipListener<? super I,? super O>>, MethodName:getSkipListeners,  @TO@ TypeDeclaration@@[public]FaultTolerantStepBuilder, SimpleStepBuilder<I,O> @AT@ 22401 @LENGTH@ 97
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Set<SkipListener<? super I,? super O>>, MethodName:getSkipListeners,  @AT@ 22401 @LENGTH@ 9
---INS ParameterizedType@@Set<SkipListener<? super I,? super O>> @TO@ MethodDeclaration@@protected, Set<SkipListener<? super I,? super O>>, MethodName:getSkipListeners,  @AT@ 22411 @LENGTH@ 39
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<SkipListener<? super I,? super O>> @AT@ 22411 @LENGTH@ 3
------INS ParameterizedType@@SkipListener<? super I,? super O> @TO@ ParameterizedType@@Set<SkipListener<? super I,? super O>> @AT@ 22415 @LENGTH@ 34
---------INS SimpleType@@SkipListener @TO@ ParameterizedType@@SkipListener<? super I,? super O> @AT@ 22415 @LENGTH@ 12
---------INS WildcardType@@? @TO@ ParameterizedType@@SkipListener<? super I,? super O> @AT@ 22428 @LENGTH@ 9
---------INS WildcardType@@? @TO@ ParameterizedType@@SkipListener<? super I,? super O> @AT@ 22439 @LENGTH@ 9
---INS SimpleName@@MethodName:getSkipListeners @TO@ MethodDeclaration@@protected, Set<SkipListener<? super I,? super O>>, MethodName:getSkipListeners,  @AT@ 22451 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:skipListeners @TO@ MethodDeclaration@@protected, Set<SkipListener<? super I,? super O>>, MethodName:getSkipListeners,  @AT@ 22474 @LENGTH@ 21
------INS SimpleName@@skipListeners @TO@ ReturnStatement@@SimpleName:skipListeners @AT@ 22481 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:PatchResourceRegistration.registerPatchModel(hostRegistration) @TO@ MethodInvocation:hostRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 19553 @LENGTH@ 63
---UPD MethodInvocation@@PatchResourceRegistration.registerPatchModel(hostRegistration) @TO@ hostRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 19553 @LENGTH@ 62
------UPD SimpleName@@Name:PatchResourceRegistration @TO@ Name:hostRegistration @AT@ 19553 @LENGTH@ 25
------UPD SimpleName@@MethodName:registerPatchModel:[hostRegistration] @TO@ MethodName:registerSubModel:[PatchResourceDefinition.INSTANCE] @AT@ 19579 @LENGTH@ 36
---------INS QualifiedName@@PatchResourceDefinition.INSTANCE @TO@ SimpleName@@MethodName:registerPatchModel:[hostRegistration] @AT@ 19585 @LENGTH@ 32
------------INS SimpleName@@PatchResourceDefinition @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 19585 @LENGTH@ 23
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 19609 @LENGTH@ 8
---------DEL SimpleName@@hostRegistration @AT@ 19598 @LENGTH@ 16


INS MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @TO@ TypeDeclaration@@[public]QuartzConsumer, DefaultConsumer @AT@ 1396 @LENGTH@ 121
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1396 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1406 @LENGTH@ 4
---INS SimpleName@@MethodName:doResume @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1411 @LENGTH@ 8
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1429 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doResume() @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1449 @LENGTH@ 17
------INS SuperMethodInvocation@@super.doResume() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doResume() @AT@ 1449 @LENGTH@ 16
---------INS SimpleName@@MethodName:doResume:[] @TO@ SuperMethodInvocation@@super.doResume() @AT@ 1455 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:getEndpoint().consumerStarted(this) @TO@ MethodDeclaration@@protected, void, MethodName:doResume, Exception,  @AT@ 1475 @LENGTH@ 36
------INS MethodInvocation@@getEndpoint().consumerStarted(this) @TO@ ExpressionStatement@@MethodInvocation:getEndpoint().consumerStarted(this) @AT@ 1475 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().consumerStarted(this) @AT@ 1475 @LENGTH@ 13
---------INS SimpleName@@MethodName:consumerStarted:[this] @TO@ MethodInvocation@@getEndpoint().consumerStarted(this) @AT@ 1489 @LENGTH@ 21
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:consumerStarted:[this] @AT@ 1505 @LENGTH@ 4


UPD VariableDeclarationStatement@@String data=INI_DATA.substring(0,INI_DATA.length() - 2) + "nolist = 1,2, 3"; @TO@ String data=INI_DATA.substring(0,INI_DATA.length() - LINE_SEPARATOR.length()) + "nolist = 1,2, 3"; @AT@ 9388 @LENGTH@ 119
---UPD VariableDeclarationFragment@@data=INI_DATA.substring(0,INI_DATA.length() - 2) + "nolist = 1,2, 3" @TO@ data=INI_DATA.substring(0,INI_DATA.length() - LINE_SEPARATOR.length()) + "nolist = 1,2, 3" @AT@ 9395 @LENGTH@ 111
------UPD InfixExpression@@INI_DATA.substring(0,INI_DATA.length() - 2) + "nolist = 1,2, 3" @TO@ INI_DATA.substring(0,INI_DATA.length() - LINE_SEPARATOR.length()) + "nolist = 1,2, 3" @AT@ 9418 @LENGTH@ 88
---------UPD MethodInvocation@@INI_DATA.substring(0,INI_DATA.length() - 2) @TO@ INI_DATA.substring(0,INI_DATA.length() - LINE_SEPARATOR.length()) @AT@ 9418 @LENGTH@ 44
------------UPD SimpleName@@MethodName:substring:[0, INI_DATA.length() - 2] @TO@ MethodName:substring:[0, INI_DATA.length() - LINE_SEPARATOR.length()] @AT@ 9427 @LENGTH@ 35
---------------UPD InfixExpression@@INI_DATA.length() - 2 @TO@ INI_DATA.length() - LINE_SEPARATOR.length() @AT@ 9440 @LENGTH@ 21
------------------INS MethodInvocation@@LINE_SEPARATOR.length() @TO@ InfixExpression@@INI_DATA.length() - 2 @AT@ 9460 @LENGTH@ 23
---------------------INS SimpleName@@Name:LINE_SEPARATOR @TO@ MethodInvocation@@LINE_SEPARATOR.length() @AT@ 9460 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@LINE_SEPARATOR.length() @AT@ 9475 @LENGTH@ 8
------------------DEL NumberLiteral@@2 @AT@ 9460 @LENGTH@ 1


DEL IfStatement@@if (out == null) {  l4j.trace("Close called no row");} @AT@ 12293 @LENGTH@ 64
---DEL InfixExpression@@out == null @AT@ 12297 @LENGTH@ 11
------DEL SimpleName@@out @AT@ 12297 @LENGTH@ 3
------DEL Operator@@== @AT@ 12300 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 12304 @LENGTH@ 4
---DEL Block@@ThenBody:{  l4j.trace("Close called no row");} @AT@ 12310 @LENGTH@ 47
------DEL ExpressionStatement@@MethodInvocation:l4j.trace("Close called no row") @AT@ 12318 @LENGTH@ 33
---------DEL MethodInvocation@@l4j.trace("Close called no row") @AT@ 12318 @LENGTH@ 32
------------DEL SimpleName@@Name:l4j @AT@ 12318 @LENGTH@ 3
------------DEL SimpleName@@MethodName:trace:["Close called no row"] @AT@ 12322 @LENGTH@ 28
---------------DEL StringLiteral@@"Close called no row" @AT@ 12328 @LENGTH@ 21


INS IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @TO@ MethodDeclaration@@public, void, MethodName:execute, final PatchingTaskContext context, IOException,  @AT@ 4581 @LENGTH@ 97
---INS InfixExpression@@rollbackAction != null @TO@ IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @AT@ 4585 @LENGTH@ 22
------INS SimpleName@@rollbackAction @TO@ InfixExpression@@rollbackAction != null @AT@ 4585 @LENGTH@ 14
------INS Operator@@!= @TO@ InfixExpression@@rollbackAction != null @AT@ 4599 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@rollbackAction != null @AT@ 4603 @LENGTH@ 4
---INS Block@@ThenBody:{  context.recordRollbackAction(rollbackAction);} @TO@ IfStatement@@if (rollbackAction != null) {  context.recordRollbackAction(rollbackAction);} @AT@ 4609 @LENGTH@ 69
------MOV ExpressionStatement@@MethodInvocation:context.recordRollbackAction(rollbackAction) @TO@ Block@@ThenBody:{  context.recordRollbackAction(rollbackAction);} @AT@ 4581 @LENGTH@ 45


UPD IfStatement@@if (baseOnTarget) {  LdapTestUtils.clearSubContexts(targetContextSource,DistinguishedName.EMPTY_PATH);} else {  LdapTestUtils.clearSubContexts(targetContextSource,new DistinguishedName(defaultPartitionSuffix));} @TO@ if (baseOnTarget) {  LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.emptyLdapName());} else {  LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.newLdapName(defaultPartitionSuffix));} @AT@ 3241 @LENGTH@ 225
---UPD Block@@ThenBody:{  LdapTestUtils.clearSubContexts(targetContextSource,DistinguishedName.EMPTY_PATH);} @TO@ ThenBody:{  LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.emptyLdapName());} @AT@ 3259 @LENGTH@ 91
------UPD ExpressionStatement@@MethodInvocation:LdapTestUtils.clearSubContexts(targetContextSource,DistinguishedName.EMPTY_PATH) @TO@ MethodInvocation:LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.emptyLdapName()) @AT@ 3264 @LENGTH@ 82
---------UPD MethodInvocation@@LdapTestUtils.clearSubContexts(targetContextSource,DistinguishedName.EMPTY_PATH) @TO@ LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.emptyLdapName()) @AT@ 3264 @LENGTH@ 81
------------UPD SimpleName@@MethodName:clearSubContexts:[targetContextSource, DistinguishedName.EMPTY_PATH] @TO@ MethodName:clearSubContexts:[targetContextSource, LdapUtils.emptyLdapName()] @AT@ 3278 @LENGTH@ 67
---------------INS MethodInvocation@@LdapUtils.emptyLdapName() @TO@ SimpleName@@MethodName:clearSubContexts:[targetContextSource, DistinguishedName.EMPTY_PATH] @AT@ 3311 @LENGTH@ 25
------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.emptyLdapName() @AT@ 3311 @LENGTH@ 9
------------------INS SimpleName@@MethodName:emptyLdapName:[] @TO@ MethodInvocation@@LdapUtils.emptyLdapName() @AT@ 3321 @LENGTH@ 15
---------------DEL QualifiedName@@DistinguishedName.EMPTY_PATH @AT@ 3316 @LENGTH@ 28
------------------DEL SimpleName@@DistinguishedName @AT@ 3316 @LENGTH@ 17
------------------DEL SimpleName@@EMPTY_PATH @AT@ 3334 @LENGTH@ 10
---UPD Block@@ElseBody:{  LdapTestUtils.clearSubContexts(targetContextSource,new DistinguishedName(defaultPartitionSuffix));} @TO@ ElseBody:{  LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.newLdapName(defaultPartitionSuffix));} @AT@ 3358 @LENGTH@ 108
------UPD ExpressionStatement@@MethodInvocation:LdapTestUtils.clearSubContexts(targetContextSource,new DistinguishedName(defaultPartitionSuffix)) @TO@ MethodInvocation:LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.newLdapName(defaultPartitionSuffix)) @AT@ 3363 @LENGTH@ 99
---------UPD MethodInvocation@@LdapTestUtils.clearSubContexts(targetContextSource,new DistinguishedName(defaultPartitionSuffix)) @TO@ LdapTestUtils.clearSubContexts(targetContextSource,LdapUtils.newLdapName(defaultPartitionSuffix)) @AT@ 3363 @LENGTH@ 98
------------UPD SimpleName@@MethodName:clearSubContexts:[targetContextSource, new DistinguishedName(defaultPartitionSuffix)] @TO@ MethodName:clearSubContexts:[targetContextSource, LdapUtils.newLdapName(defaultPartitionSuffix)] @AT@ 3377 @LENGTH@ 84
---------------INS MethodInvocation@@LdapUtils.newLdapName(defaultPartitionSuffix) @TO@ SimpleName@@MethodName:clearSubContexts:[targetContextSource, new DistinguishedName(defaultPartitionSuffix)] @AT@ 3407 @LENGTH@ 45
------------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName(defaultPartitionSuffix) @AT@ 3407 @LENGTH@ 9
------------------INS SimpleName@@MethodName:newLdapName:[defaultPartitionSuffix] @TO@ MethodInvocation@@LdapUtils.newLdapName(defaultPartitionSuffix) @AT@ 3417 @LENGTH@ 35
---------------------INS SimpleName@@defaultPartitionSuffix @TO@ SimpleName@@MethodName:newLdapName:[defaultPartitionSuffix] @AT@ 3429 @LENGTH@ 22
---------------DEL ClassInstanceCreation@@DistinguishedName[defaultPartitionSuffix] @AT@ 3415 @LENGTH@ 45
------------------DEL New@@new @AT@ 3415 @LENGTH@ 3
------------------DEL SimpleType@@DistinguishedName @AT@ 3419 @LENGTH@ 17
------------------DEL SimpleName@@defaultPartitionSuffix @AT@ 3437 @LENGTH@ 22


UPD VariableDeclarationStatement@@RepositoryLinkBuilder builder=new RepositoryLinkBuilder(metadata,URI.create("{id}")); @TO@ RepositoryLinkBuilder builder=new RepositoryLinkBuilder(metadata,null).slash("{id}"); @AT@ 4998 @LENGTH@ 88
---UPD VariableDeclarationFragment@@builder=new RepositoryLinkBuilder(metadata,URI.create("{id}")) @TO@ builder=new RepositoryLinkBuilder(metadata,null).slash("{id}") @AT@ 5020 @LENGTH@ 65
------INS MethodInvocation@@new RepositoryLinkBuilder(metadata,null).slash("{id}") @TO@ VariableDeclarationFragment@@builder=new RepositoryLinkBuilder(metadata,URI.create("{id}")) @AT@ 5008 @LENGTH@ 55
---------INS ClassInstanceCreation@@RepositoryLinkBuilder[metadata, null] @TO@ MethodInvocation@@new RepositoryLinkBuilder(metadata,null).slash("{id}") @AT@ 5008 @LENGTH@ 41
------------MOV New@@new @TO@ ClassInstanceCreation@@RepositoryLinkBuilder[metadata, null] @AT@ 5030 @LENGTH@ 3
------------MOV SimpleType@@RepositoryLinkBuilder @TO@ ClassInstanceCreation@@RepositoryLinkBuilder[metadata, null] @AT@ 5034 @LENGTH@ 21
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@RepositoryLinkBuilder[metadata, null] @AT@ 5044 @LENGTH@ 4
------------MOV SimpleName@@metadata @TO@ ClassInstanceCreation@@RepositoryLinkBuilder[metadata, null] @AT@ 5056 @LENGTH@ 8
---------MOV SimpleName@@MethodName:create:["{id}"] @TO@ MethodInvocation@@new RepositoryLinkBuilder(metadata,null).slash("{id}") @AT@ 5070 @LENGTH@ 14
------DEL ClassInstanceCreation@@RepositoryLinkBuilder[metadata, URI.create("{id}")] @AT@ 5030 @LENGTH@ 55
---------DEL MethodInvocation@@URI.create("{id}") @AT@ 5066 @LENGTH@ 18
------------DEL SimpleName@@Name:URI @AT@ 5066 @LENGTH@ 3


UPD VariableDeclarationStatement@@OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()); @TO@ OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()); @AT@ 1905 @LENGTH@ 290
---UPD VariableDeclarationFragment@@clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ clientAuthentication=RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 1919 @LENGTH@ 275
------UPD MethodInvocation@@RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensionProperties()) @TO@ RequestTokenFactory.createOAuth2Request(request.getRequestParameters(),request.getClientId(),request.getAuthorities(),request.isApproved(),request.getScope(),request.getResourceIds(),request.getRedirectUri(),request.getExtensions()) @AT@ 1942 @LENGTH@ 252
---------UPD SimpleName@@MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensionProperties()] @TO@ MethodName:createOAuth2Request:[request.getRequestParameters(), request.getClientId(), request.getAuthorities(), request.isApproved(), request.getScope(), request.getResourceIds(), request.getRedirectUri(), request.getExtensions()] @AT@ 1962 @LENGTH@ 232
------------UPD MethodInvocation@@request.getExtensionProperties() @TO@ request.getExtensions() @AT@ 2161 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getExtensionProperties:[] @TO@ MethodName:getExtensions:[] @AT@ 2169 @LENGTH@ 24


UPD MethodDeclaration@@public, Group<T>, T, MethodName:createGroup, String path, Class<T> clazz,  @TO@ public, Group<T>, T extends NodeState, MethodName:createGroup, String path, Class<T> clazz,  @AT@ 1094 @LENGTH@ 128


UPD FieldDeclaration@@private, final, Set<ManagementPermission>, [underlyingPermissions=new HashSet<ManagementPermission>()] @TO@ private, final, List<ManagementPermission>, [underlyingPermissions=new ArrayList<ManagementPermission>()] @AT@ 1664 @LENGTH@ 100
---UPD ParameterizedType@@Set<ManagementPermission> @TO@ List<ManagementPermission> @AT@ 1678 @LENGTH@ 25
------UPD SimpleType@@Set @TO@ List @AT@ 1678 @LENGTH@ 3
---UPD VariableDeclarationFragment@@underlyingPermissions=new HashSet<ManagementPermission>() @TO@ underlyingPermissions=new ArrayList<ManagementPermission>() @AT@ 1704 @LENGTH@ 59
------UPD ClassInstanceCreation@@HashSet<ManagementPermission>[] @TO@ ArrayList<ManagementPermission>[] @AT@ 1728 @LENGTH@ 35
---------UPD ParameterizedType@@HashSet<ManagementPermission> @TO@ ArrayList<ManagementPermission> @AT@ 1732 @LENGTH@ 29
------------UPD SimpleType@@HashSet @TO@ ArrayList @AT@ 1732 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:logger.info("CLI command: " + command) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getResourceLoaderPathsForModule, String module, boolean throwExceptionOnError, Exception,  @AT@ 13088 @LENGTH@ 39
---INS MethodInvocation@@logger.info("CLI command: " + command) @TO@ ExpressionStatement@@MethodInvocation:logger.info("CLI command: " + command) @AT@ 13088 @LENGTH@ 38
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.info("CLI command: " + command) @AT@ 13088 @LENGTH@ 6
------INS SimpleName@@MethodName:info:["CLI command: " + command] @TO@ MethodInvocation@@logger.info("CLI command: " + command) @AT@ 13095 @LENGTH@ 31
---------INS InfixExpression@@"CLI command: " + command @TO@ SimpleName@@MethodName:info:["CLI command: " + command] @AT@ 13100 @LENGTH@ 25
------------INS StringLiteral@@"CLI command: " @TO@ InfixExpression@@"CLI command: " + command @AT@ 13100 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"CLI command: " + command @AT@ 13115 @LENGTH@ 1
------------INS SimpleName@@command @TO@ InfixExpression@@"CLI command: " + command @AT@ 13118 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @TO@ MethodDeclaration@@public, void, MethodName:testAddModule, Exception,  @AT@ 4172 @LENGTH@ 80
---INS MethodInvocation@@tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @TO@ ExpressionStatement@@MethodInvocation:tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @AT@ 4172 @LENGTH@ 79
------INS SimpleName@@MethodName:tree:[result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()] @TO@ MethodInvocation@@tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()) @AT@ 4172 @LENGTH@ 79
---------INS MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @TO@ SimpleName@@MethodName:tree:[result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome()] @AT@ 4177 @LENGTH@ 73
------------INS MethodInvocation@@MethodName:getInstalledImage:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 21
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4177 @LENGTH@ 6
------------INS SimpleName@@MethodName:getJbossHome:[] @TO@ MethodInvocation@@result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome() @AT@ 4236 @LENGTH@ 14


INS FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @TO@ TypeDeclaration@@[public, abstract]DefaultCheckersAndConverter, DiscardAttributeChecker.DefaultDiscardAttributeChecker[RejectAttributeChecker, AttributeConverter] @AT@ 1898 @LENGTH@ 85
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @AT@ 1898 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @AT@ 1906 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @AT@ 1913 @LENGTH@ 5
---INS SimpleType@@Pattern @TO@ FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @AT@ 1919 @LENGTH@ 7
---INS VariableDeclarationFragment@@EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*") @TO@ FieldDeclaration@@private, static, final, Pattern, [EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*")] @AT@ 1927 @LENGTH@ 55
------INS SimpleName@@EXPRESSION_PATTERN @TO@ VariableDeclarationFragment@@EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*") @AT@ 1927 @LENGTH@ 18
------INS MethodInvocation@@Pattern.compile(".*\\$\\{.*\\}.*") @TO@ VariableDeclarationFragment@@EXPRESSION_PATTERN=Pattern.compile(".*\\$\\{.*\\}.*") @AT@ 1948 @LENGTH@ 34
---------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile(".*\\$\\{.*\\}.*") @AT@ 1948 @LENGTH@ 7
---------INS SimpleName@@MethodName:compile:[".*\\$\\{.*\\}.*"] @TO@ MethodInvocation@@Pattern.compile(".*\\$\\{.*\\}.*") @AT@ 1956 @LENGTH@ 26
------------INS StringLiteral@@".*\\$\\{.*\\}.*" @TO@ SimpleName@@MethodName:compile:[".*\\$\\{.*\\}.*"] @AT@ 1964 @LENGTH@ 17


UPD VariableDeclarationStatement@@String updatePolicy=readProperty(properties,UPDATE_POLICY_PROPERTY,"always"); @TO@ String updatePolicy=readProperty(properties,UPDATE_POLICY_PROPERTY,RepositoryPolicy.UPDATE_POLICY_ALWAYS); @AT@ 4701 @LENGTH@ 81
---UPD VariableDeclarationFragment@@updatePolicy=readProperty(properties,UPDATE_POLICY_PROPERTY,"always") @TO@ updatePolicy=readProperty(properties,UPDATE_POLICY_PROPERTY,RepositoryPolicy.UPDATE_POLICY_ALWAYS) @AT@ 4708 @LENGTH@ 73
------UPD MethodInvocation@@readProperty(properties,UPDATE_POLICY_PROPERTY,"always") @TO@ readProperty(properties,UPDATE_POLICY_PROPERTY,RepositoryPolicy.UPDATE_POLICY_ALWAYS) @AT@ 4723 @LENGTH@ 58
---------UPD SimpleName@@MethodName:readProperty:[properties, UPDATE_POLICY_PROPERTY, "always"] @TO@ MethodName:readProperty:[properties, UPDATE_POLICY_PROPERTY, RepositoryPolicy.UPDATE_POLICY_ALWAYS] @AT@ 4723 @LENGTH@ 58
------------DEL StringLiteral@@"always" @AT@ 4772 @LENGTH@ 8
------------INS QualifiedName@@RepositoryPolicy.UPDATE_POLICY_ALWAYS @TO@ SimpleName@@MethodName:readProperty:[properties, UPDATE_POLICY_PROPERTY, "always"] @AT@ 4873 @LENGTH@ 37
---------------INS SimpleName@@RepositoryPolicy @TO@ QualifiedName@@RepositoryPolicy.UPDATE_POLICY_ALWAYS @AT@ 4873 @LENGTH@ 16
---------------INS SimpleName@@UPDATE_POLICY_ALWAYS @TO@ QualifiedName@@RepositoryPolicy.UPDATE_POLICY_ALWAYS @AT@ 4890 @LENGTH@ 20


DEL MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 1979 @LENGTH@ 29
---DEL Modifier@@public @AT@ 1979 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1986 @LENGTH@ 4
---DEL SimpleName@@MethodName:destroy @AT@ 1991 @LENGTH@ 7


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerUpgradeAndRollbackTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ContainerUpgradeAndRollbackTest, FabricTestSupport @AT@ 1280 @LENGTH@ 6071
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerUpgradeAndRollbackTest, FabricTestSupport @AT@ 1398 @LENGTH@ 49


INS MethodDeclaration@@String, MethodName:undefineAttributeWithoutAlternative, String name,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]MessagingMessages,  @AT@ 22512 @LENGTH@ 49
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:undefineAttributeWithoutAlternative, String name,  @AT@ 22505 @LENGTH@ 6
---INS SimpleName@@MethodName:undefineAttributeWithoutAlternative @TO@ MethodDeclaration@@String, MethodName:undefineAttributeWithoutAlternative, String name,  @AT@ 22512 @LENGTH@ 35
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@String, MethodName:undefineAttributeWithoutAlternative, String name,  @AT@ 22548 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 22548 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 22555 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("encryptedpassword",resolver.resolve(null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")) @TO@ MethodInvocation:assertEquals("encryptedpassword",resolver.resolve(null,null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")) @AT@ 2075 @LENGTH@ 117
---UPD MethodInvocation@@assertEquals("encryptedpassword",resolver.resolve(null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")) @TO@ assertEquals("encryptedpassword",resolver.resolve(null,null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")) @AT@ 2075 @LENGTH@ 116
------UPD SimpleName@@MethodName:assertEquals:["encryptedpassword", resolver.resolve(null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")] @TO@ MethodName:assertEquals:["encryptedpassword", resolver.resolve(null,null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=")] @AT@ 2075 @LENGTH@ 116
---------UPD MethodInvocation@@resolver.resolve(null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=") @TO@ resolver.resolve(null,null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ=") @AT@ 2108 @LENGTH@ 82
------------UPD SimpleName@@MethodName:resolve:[null, null, "crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ="] @TO@ MethodName:resolve:[null, null, null, "crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ="] @AT@ 2117 @LENGTH@ 73
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolve:[null, null, "crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ="] @AT@ 2137 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @TO@ MethodInvocation:Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue()) @AT@ 21412 @LENGTH@ 88
---UPD MethodInvocation@@Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)) @TO@ Assert.assertEquals("a",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue()) @AT@ 21412 @LENGTH@ 87
------UPD SimpleName@@MethodName:assertFalse:[response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)] @TO@ MethodName:assertEquals:["a", response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue()] @AT@ 21419 @LENGTH@ 80
---------UPD MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @TO@ response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue() @AT@ 21431 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:getFirstHeader:[SessionOperationServlet.REMOVED_ATTRIBUTES] @TO@ MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @AT@ 21436 @LENGTH@ 67
---------------INS QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @TO@ MethodInvocation@@MethodName:getFirstHeader:[SessionOperationServlet.REMOVED_ATTRIBUTES] @AT@ 21460 @LENGTH@ 42
------------------MOV SimpleName@@SessionOperationServlet @TO@ QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @AT@ 21455 @LENGTH@ 23
------------------MOV SimpleName@@REMOVED_ATTRIBUTES @TO@ QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @AT@ 21479 @LENGTH@ 18
------------DEL SimpleName@@MethodName:containsHeader:[SessionOperationServlet.REMOVED_ATTRIBUTES] @AT@ 21440 @LENGTH@ 58
---------------DEL QualifiedName@@SessionOperationServlet.REMOVED_ATTRIBUTES @AT@ 21455 @LENGTH@ 42
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES) @AT@ 21504 @LENGTH@ 10
---------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:assertFalse:[response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES)] @AT@ 21432 @LENGTH@ 3


UPD IfStatement@@if (name.startsWith(prefix)) {  name=name.substring(prefix.length());} @TO@ if (name.startsWith(prefix)) {  name=name.substring(prefix.length());  if (!name.equals(MASTER_BRANCH)) {    answer.add(name);  }} @AT@ 12615 @LENGTH@ 116
---UPD Block@@ThenBody:{  name=name.substring(prefix.length());} @TO@ ThenBody:{  name=name.substring(prefix.length());  if (!name.equals(MASTER_BRANCH)) {    answer.add(name);  }} @AT@ 12644 @LENGTH@ 87
------MOV IfStatement@@if (!name.equals(MASTER_BRANCH)) {  answer.add(name);} @TO@ Block@@ThenBody:{  name=name.substring(prefix.length());} @AT@ 12752 @LENGTH@ 98


UPD EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  List<RecordProcessor> processorList=new Vector<RecordProcessor>(size);  if (processors != null) {    for (    RecordProcessor pr : processors) {      try {        RecordProcessor clone=(RecordProcessor)pr.clone();        processorList.add(clone);      } catch (      final CloneNotSupportedException ex) {        throw new RuntimeException(ex);      }    }  }  ep.setRecordProcessors(processorList);} @TO@ for (final Endpoint ep : dep.getService().getEndpoints()) {  List<RecordProcessor> processorList=new Vector<RecordProcessor>(size);  for (  RecordProcessor pr : processors) {    try {      RecordProcessor clone=(RecordProcessor)pr.clone();      processorList.add(clone);    } catch (    final CloneNotSupportedException ex) {      throw new RuntimeException(ex);    }  }  ep.setRecordProcessors(processorList);} @AT@ 2390 @LENGTH@ 604
---DEL IfStatement@@if (processors != null) {  for (  RecordProcessor pr : processors) {    try {      RecordProcessor clone=(RecordProcessor)pr.clone();      processorList.add(clone);    } catch (    final CloneNotSupportedException ex) {      throw new RuntimeException(ex);    }  }} @AT@ 2543 @LENGTH@ 393
------DEL InfixExpression@@processors != null @AT@ 2547 @LENGTH@ 18
---------DEL SimpleName@@processors @AT@ 2547 @LENGTH@ 10
---------DEL Operator@@!= @AT@ 2557 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2561 @LENGTH@ 4
------DEL Block@@ThenBody:{  for (  RecordProcessor pr : processors) {    try {      RecordProcessor clone=(RecordProcessor)pr.clone();      processorList.add(clone);    } catch (    final CloneNotSupportedException ex) {      throw new RuntimeException(ex);    }  }} @AT@ 2567 @LENGTH@ 369
---MOV EnhancedForStatement@@for (RecordProcessor pr : processors) {  try {    RecordProcessor clone=(RecordProcessor)pr.clone();    processorList.add(clone);  } catch (  final CloneNotSupportedException ex) {    throw new RuntimeException(ex);  }} @TO@ EnhancedForStatement@@for (final Endpoint ep : dep.getService().getEndpoints()) {  List<RecordProcessor> processorList=new Vector<RecordProcessor>(size);  if (processors != null) {    for (    RecordProcessor pr : processors) {      try {        RecordProcessor clone=(RecordProcessor)pr.clone();        processorList.add(clone);      } catch (      final CloneNotSupportedException ex) {        throw new RuntimeException(ex);      }    }  }  ep.setRecordProcessors(processorList);} @AT@ 2582 @LENGTH@ 342


UPD FieldDeclaration@@private, static, final, String, [YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130&newerThan=127"] @TO@ private, static, final, String, [YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127"] @AT@ 1006 @LENGTH@ 207
---UPD VariableDeclarationFragment@@YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130&newerThan=127" @TO@ YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127" @AT@ 1034 @LENGTH@ 178
------INS InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127" @TO@ VariableDeclarationFragment@@YAMMER_MESSAGES_CONSUMER="yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130&newerThan=127" @AT@ 1061 @LENGTH@ 164
---------INS StringLiteral@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" @TO@ InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127" @AT@ 1061 @LENGTH@ 137
---------INS Operator@@+ @TO@ InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127" @AT@ 1198 @LENGTH@ 1
---------INS StringLiteral@@"&newerThan=127" @TO@ InfixExpression@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130" + "&newerThan=127" @AT@ 1209 @LENGTH@ 16
------DEL StringLiteral@@"yammer:messages?consumerKey=aConsumerKey&consumerSecret=aConsumerSecretKey&accessToken=aAccessToken&limit=1&threaded=true&olderThan=130&newerThan=127" @AT@ 1061 @LENGTH@ 151


DEL MethodDeclaration@@public, void, MethodName:shouldCreateComplexIdForGroupOperationWithSingleComplexIdField,  @AT@ 1896 @LENGTH@ 424
---DEL Modifier@@public @AT@ 1896 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1903 @LENGTH@ 4
---DEL SimpleName@@MethodName:shouldCreateComplexIdForGroupOperationWithSingleComplexIdField @AT@ 1908 @LENGTH@ 62


UPD IfStatement@@if (value.isDefined() && value.equals(SLOT_DEFAULT_VALUE)) {  return DISCARD.transformOperation(context,address,operation);} else {  return new TransformedOperation(operation,new RejectionWithFailurePolicy(MESSAGES.invalidJSFSlotValue(value.asString())),OperationResultTransformer.ORIGINAL_RESULT);} @TO@ if (value.isDefined() && SLOT_DEFAULT_VALUE.equals(value.asString())) {  return DISCARD.transformOperation(context,address,operation);} else {  return new TransformedOperation(operation,new RejectionWithFailurePolicy(MESSAGES.invalidJSFSlotValue(value.asString())),OperationResultTransformer.ORIGINAL_RESULT);} @AT@ 6658 @LENGTH@ 455
---UPD InfixExpression@@value.isDefined() && value.equals(SLOT_DEFAULT_VALUE) @TO@ value.isDefined() && SLOT_DEFAULT_VALUE.equals(value.asString()) @AT@ 6662 @LENGTH@ 53
------UPD MethodInvocation@@value.equals(SLOT_DEFAULT_VALUE) @TO@ SLOT_DEFAULT_VALUE.equals(value.asString()) @AT@ 6683 @LENGTH@ 32
---------UPD SimpleName@@Name:value @TO@ Name:SLOT_DEFAULT_VALUE @AT@ 6683 @LENGTH@ 5
---------UPD SimpleName@@MethodName:equals:[SLOT_DEFAULT_VALUE] @TO@ MethodName:equals:[value.asString()] @AT@ 6689 @LENGTH@ 26
------------DEL SimpleName@@SLOT_DEFAULT_VALUE @AT@ 6696 @LENGTH@ 18
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:equals:[SLOT_DEFAULT_VALUE] @AT@ 6709 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 6709 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 6715 @LENGTH@ 10


UPD FieldDeclaration@@private, long, [shutdownTimeout=DEFAULT_SHUTDOWN_TIMEOUT] @TO@ private, volatile, long, [shutdownTimeout=DEFAULT_SHUTDOWN_TIMEOUT] @AT@ 3381 @LENGTH@ 56
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, long, [shutdownTimeout=DEFAULT_SHUTDOWN_TIMEOUT] @AT@ 3389 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 9785 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9785 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9792 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9797 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 9828 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 9828 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 9834 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:System.err.println(executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")) @TO@ MethodInvocation:System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")) @AT@ 3486 @LENGTH@ 153
---UPD MethodInvocation@@System.err.println(executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")) @TO@ System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")) @AT@ 3486 @LENGTH@ 152
------UPD SimpleName@@MethodName:println:[executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")] @TO@ MethodName:println:[executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort")] @AT@ 3497 @LENGTH@ 141
---------UPD MethodInvocation@@executeCommand("fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort") @TO@ executeCommand("fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort") @AT@ 3505 @LENGTH@ 132
------------UPD SimpleName@@MethodName:executeCommand:["fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort"] @TO@ MethodName:executeCommand:["fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort"] @AT@ 3505 @LENGTH@ 132
---------------UPD InfixExpression@@"fabric:container-connect " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort" @TO@ "fabric:container-connect -u admin -p admin " + child1.getId() + " config:proplist --pid org.apache.karaf.management | grep rmiServerPort" @AT@ 3520 @LENGTH@ 116
------------------UPD StringLiteral@@"fabric:container-connect " @TO@ "fabric:container-connect -u admin -p admin " @AT@ 3520 @LENGTH@ 27


INS MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @TO@ TypeDeclaration@@[public]SqlPagingQueryUtils,  @AT@ 9661 @LENGTH@ 132
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9661 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9668 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9675 @LENGTH@ 6
---INS SimpleName@@MethodName:buildSortClause @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9682 @LENGTH@ 15
---INS SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9698 @LENGTH@ 39
------INS SimpleType@@AbstractSqlPagingQueryProvider @TO@ SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @AT@ 9698 @LENGTH@ 30
------INS SimpleName@@provider @TO@ SingleVariableDeclaration@@AbstractSqlPagingQueryProvider provider @AT@ 9729 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:buildSortClause(provider.getSortKeys()) @TO@ MethodDeclaration@@public, static, String, MethodName:buildSortClause, AbstractSqlPagingQueryProvider provider,  @AT@ 9743 @LENGTH@ 47
------INS MethodInvocation@@buildSortClause(provider.getSortKeys()) @TO@ ReturnStatement@@MethodInvocation:buildSortClause(provider.getSortKeys()) @AT@ 9750 @LENGTH@ 39
---------INS SimpleName@@MethodName:buildSortClause:[provider.getSortKeys()] @TO@ MethodInvocation@@buildSortClause(provider.getSortKeys()) @AT@ 9750 @LENGTH@ 39
------------INS MethodInvocation@@provider.getSortKeys() @TO@ SimpleName@@MethodName:buildSortClause:[provider.getSortKeys()] @AT@ 9766 @LENGTH@ 22
---------------INS SimpleName@@Name:provider @TO@ MethodInvocation@@provider.getSortKeys() @AT@ 9766 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getSortKeys:[] @TO@ MethodInvocation@@provider.getSortKeys() @AT@ 9775 @LENGTH@ 13


INS TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @TO@ MethodDeclaration@@public, void, MethodName:testRejecting,  @AT@ 2824 @LENGTH@ 125
---INS ExpressionStatement@@MethodInvocation:cmp.addUnderlyingPermission(ACCESS_2) @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2842 @LENGTH@ 38
------INS MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @TO@ ExpressionStatement@@MethodInvocation:cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2842 @LENGTH@ 37
---------INS SimpleName@@Name:cmp @TO@ MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2842 @LENGTH@ 3
---------INS SimpleName@@MethodName:addUnderlyingPermission:[ACCESS_2] @TO@ MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2846 @LENGTH@ 33
------------INS SimpleName@@ACCESS_2 @TO@ SimpleName@@MethodName:addUnderlyingPermission:[ACCESS_2] @AT@ 2870 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:fail() @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2893 @LENGTH@ 7
------INS MethodInvocation@@MethodName:fail:[] @TO@ ExpressionStatement@@MethodInvocation:fail() @AT@ 2893 @LENGTH@ 6
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2911 @LENGTH@ 38
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 2918 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2918 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2928 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(Arrays.asList(new Container[]{brokerContainer}),PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(Arrays.asList(new Container[]{brokerContainer}),PROVISION_TIMEOUT) @AT@ 2547 @LENGTH@ 92
---UPD MethodInvocation@@Provision.assertSuccess(Arrays.asList(new Container[]{brokerContainer}),PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(Arrays.asList(new Container[]{brokerContainer}),PROVISION_TIMEOUT) @AT@ 2547 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertSuccess:[Arrays.asList(new Container[]{brokerContainer}), PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[Arrays.asList(new Container[]{brokerContainer}), PROVISION_TIMEOUT] @AT@ 2557 @LENGTH@ 81


UPD MethodDeclaration@@private, PatchingResult, MethodName:execute, File workDir, ContentVerificationPolicy policy, PatchingException,  @TO@ private, PatchingResult, MethodName:execute, final File workDir, ContentVerificationPolicy policy, PatchingException,  @AT@ 2256 @LENGTH@ 1250
---UPD SingleVariableDeclaration@@File workDir @TO@ final File workDir @AT@ 2287 @LENGTH@ 12
------INS Modifier@@final @TO@ SingleVariableDeclaration@@File workDir @AT@ 2287 @LENGTH@ 5
---UPD VariableDeclarationStatement@@final PatchContentProvider provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public void cleanup(){
  }
}
; @TO@ final PatchContentProvider provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public File getPatchContentRootDir(){
    return workDir;
  }
  @Override public void cleanup(){
  }
}
; @AT@ 2448 @LENGTH@ 333
------UPD VariableDeclarationFragment@@provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public void cleanup(){
  }
}
 @TO@ provider=new PatchContentProvider(){
  @Override public PatchContentLoader getLoader(  String patchId){
    return loader;
  }
  @Override public File getPatchContentRootDir(){
    return workDir;
  }
  @Override public void cleanup(){
  }
}
 @AT@ 2475 @LENGTH@ 305


UPD ExpressionStatement@@MethodInvocation:from("mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true&orderedThreadPoolExecutor=false").delay(1000).to("mock:result") @TO@ MethodInvocation:from("mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false").delay(1000).to("mock:result") @AT@ 2533 @LENGTH@ 175
---UPD MethodInvocation@@from("mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true&orderedThreadPoolExecutor=false").delay(1000).to("mock:result") @TO@ from("mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false").delay(1000).to("mock:result") @AT@ 2533 @LENGTH@ 174
------UPD MethodInvocation@@MethodName:from:["mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true&orderedThreadPoolExecutor=false"] @TO@ MethodName:from:["mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false"] @AT@ 2533 @LENGTH@ 94
---------INS InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @TO@ MethodInvocation@@MethodName:from:["mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true&orderedThreadPoolExecutor=false"] @AT@ 2402 @LENGTH@ 100
------------INS StringLiteral@@"mina2:udp://127.0.0.1:" @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @AT@ 2402 @LENGTH@ 24
------------INS Operator@@+ @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @AT@ 2426 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @AT@ 2429 @LENGTH@ 9
------------INS StringLiteral@@"?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @AT@ 2441 @LENGTH@ 61
---------DEL StringLiteral@@"mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true&orderedThreadPoolExecutor=false" @AT@ 2538 @LENGTH@ 88


UPD IfStatement@@if (!handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @TO@ if (handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @AT@ 9674 @LENGTH@ 240
---DEL PrefixExpression@@!handler.isDifferent(existing) @AT@ 9678 @LENGTH@ 30
------DEL Operator@@! @AT@ 9678 @LENGTH@ 1
---MOV MethodInvocation@@handler.isDifferent(existing) @TO@ IfStatement@@if (!handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @AT@ 9679 @LENGTH@ 29


UPD MethodDeclaration@@public, void, MethodName:JiraLdap234ITest,  @TO@ public, void, MethodName:jiraLdap234ITest,  @AT@ 6941 @LENGTH@ 1506
---UPD SimpleName@@MethodName:JiraLdap234ITest @TO@ MethodName:jiraLdap234ITest @AT@ 6953 @LENGTH@ 16


INS IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @TO@ MethodDeclaration@@public, void, MethodName:addUnderlyingPermission, ManagementPermission underlyingPermission,  @AT@ 2283 @LENGTH@ 171
---INS InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @TO@ IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2287 @LENGTH@ 84
------INS InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2287 @LENGTH@ 48
---------INS SimpleName@@combinationPolicy @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2287 @LENGTH@ 17
---------INS Operator@@== @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2304 @LENGTH@ 2
---------INS QualifiedName@@CombinationPolicy.REJECTING @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING @AT@ 2308 @LENGTH@ 27
------------INS SimpleName@@CombinationPolicy @TO@ QualifiedName@@CombinationPolicy.REJECTING @AT@ 2308 @LENGTH@ 17
------------INS SimpleName@@REJECTING @TO@ QualifiedName@@CombinationPolicy.REJECTING @AT@ 2326 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2335 @LENGTH@ 2
------INS InfixExpression@@underlyingPermissions.size() > 0 @TO@ InfixExpression@@combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0 @AT@ 2339 @LENGTH@ 32
---------INS MethodInvocation@@underlyingPermissions.size() @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2339 @LENGTH@ 28
------------INS SimpleName@@Name:underlyingPermissions @TO@ MethodInvocation@@underlyingPermissions.size() @AT@ 2339 @LENGTH@ 21
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@underlyingPermissions.size() @AT@ 2361 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2367 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@underlyingPermissions.size() > 0 @AT@ 2370 @LENGTH@ 1
---INS Block@@ThenBody:{  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @TO@ IfStatement@@if (combinationPolicy == CombinationPolicy.REJECTING && underlyingPermissions.size() > 0) {  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2373 @LENGTH@ 81
------INS ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.illegalMultipleRoles() @TO@ Block@@ThenBody:{  throw ControllerMessages.MESSAGES.illegalMultipleRoles();} @AT@ 2387 @LENGTH@ 57
---------INS MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @TO@ ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2393 @LENGTH@ 50
------------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2393 @LENGTH@ 27
------------INS SimpleName@@MethodName:illegalMultipleRoles:[] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.illegalMultipleRoles() @AT@ 2421 @LENGTH@ 22


UPD VariableDeclarationStatement@@final PatchInfo info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @TO@ final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1515 @LENGTH@ 122
---UPD SimpleType@@PatchInfo @TO@ PatchInfoService @AT@ 1521 @LENGTH@ 9
---UPD VariableDeclarationFragment@@info=(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1531 @LENGTH@ 105
------UPD SimpleName@@info @TO@ service @AT@ 1531 @LENGTH@ 4
------UPD CastExpression@@(PatchInfo)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @TO@ (PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1538 @LENGTH@ 98
---------UPD SimpleType@@PatchInfo @TO@ PatchInfoService @AT@ 1539 @LENGTH@ 9


UPD VariableDeclarationStatement@@List<String> containers=service.getDataStore().getContainers(); @TO@ List<String> containers=service.getDataStore().getEnsembleContainers(); @AT@ 2690 @LENGTH@ 65
---UPD VariableDeclarationFragment@@containers=service.getDataStore().getContainers() @TO@ containers=service.getDataStore().getEnsembleContainers() @AT@ 2703 @LENGTH@ 51
------UPD MethodInvocation@@service.getDataStore().getContainers() @TO@ service.getDataStore().getEnsembleContainers() @AT@ 2716 @LENGTH@ 38
---------UPD SimpleName@@MethodName:getContainers:[] @TO@ MethodName:getEnsembleContainers:[] @AT@ 2739 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:fail("content not found module for " + moduleName + " in "+ asList(modulesPath)) @TO@ MethodInvocation:fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5708 @LENGTH@ 82
---UPD MethodInvocation@@fail("content not found module for " + moduleName + " in "+ asList(modulesPath)) @TO@ fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5708 @LENGTH@ 81
------UPD SimpleName@@MethodName:fail:["content not found module for " + moduleName + " in "+ asList(modulesPath)] @TO@ MethodName:fail:["content not found bundle for " + moduleName + " in "+ asList(bundlesPath)] @AT@ 5708 @LENGTH@ 81
---------UPD InfixExpression@@"content not found module for " + moduleName + " in "+ asList(modulesPath) @TO@ "content not found bundle for " + moduleName + " in "+ asList(bundlesPath) @AT@ 5713 @LENGTH@ 75
------------UPD StringLiteral@@"content not found module for " @TO@ "content not found bundle for " @AT@ 5713 @LENGTH@ 31
------------UPD MethodInvocation@@asList(modulesPath) @TO@ asList(bundlesPath) @AT@ 5769 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:asList:[modulesPath] @TO@ MethodName:asList:[bundlesPath] @AT@ 5769 @LENGTH@ 19
------------------UPD SimpleName@@modulesPath @TO@ bundlesPath @AT@ 5776 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:asList:[modulesPath] @TO@ MethodName:asList:[bundlesPath] @AT@ 5769 @LENGTH@ 19
------------------UPD SimpleName@@modulesPath @TO@ bundlesPath @AT@ 5776 @LENGTH@ 11


UPD TryStatement@@try {  logger.info("Waiting for workers to finish.");  boolean finished=cancellationLock.await(shutdownTimeout,TimeUnit.MILLISECONDS);  if (finished) {    logger.info("Successfully waited for workers to finish.");  } else {    logger.info("Workers not finished.  Forcing connections to close.");  }} catch (InterruptedException e) {  Thread.currentThread().interrupt();  logger.warn("Interrupted waiting for workers.  Continuing with shutdown.");} @TO@ try {  for (  BlockingQueueConsumer consumer : this.consumers) {    consumer.setQuiesce(this.shutdownTimeout);  }  logger.info("Waiting for workers to finish.");  boolean finished=cancellationLock.await(shutdownTimeout,TimeUnit.MILLISECONDS);  if (finished) {    logger.info("Successfully waited for workers to finish.");  } else {    logger.info("Workers not finished.  Forcing connections to close.");  }} catch (InterruptedException e) {  Thread.currentThread().interrupt();  logger.warn("Interrupted waiting for workers.  Continuing with shutdown.");} @AT@ 13239 @LENGTH@ 472
---INS EnhancedForStatement@@for (BlockingQueueConsumer consumer : this.consumers) {  consumer.setQuiesce(this.shutdownTimeout);} @TO@ TryStatement@@try {  logger.info("Waiting for workers to finish.");  boolean finished=cancellationLock.await(shutdownTimeout,TimeUnit.MILLISECONDS);  if (finished) {    logger.info("Successfully waited for workers to finish.");  } else {    logger.info("Workers not finished.  Forcing connections to close.");  }} catch (InterruptedException e) {  Thread.currentThread().interrupt();  logger.warn("Interrupted waiting for workers.  Continuing with shutdown.");} @AT@ 13257 @LENGTH@ 107
------INS SingleVariableDeclaration@@BlockingQueueConsumer consumer @TO@ EnhancedForStatement@@for (BlockingQueueConsumer consumer : this.consumers) {  consumer.setQuiesce(this.shutdownTimeout);} @AT@ 13262 @LENGTH@ 30
---------INS SimpleType@@BlockingQueueConsumer @TO@ SingleVariableDeclaration@@BlockingQueueConsumer consumer @AT@ 13262 @LENGTH@ 21
---------INS SimpleName@@consumer @TO@ SingleVariableDeclaration@@BlockingQueueConsumer consumer @AT@ 13284 @LENGTH@ 8
------INS FieldAccess@@this.consumers @TO@ EnhancedForStatement@@for (BlockingQueueConsumer consumer : this.consumers) {  consumer.setQuiesce(this.shutdownTimeout);} @AT@ 13295 @LENGTH@ 14
---------INS ThisExpression@@this @TO@ FieldAccess@@this.consumers @AT@ 13295 @LENGTH@ 4
---------INS SimpleName@@consumers @TO@ FieldAccess@@this.consumers @AT@ 13300 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:consumer.setQuiesce(this.shutdownTimeout) @TO@ EnhancedForStatement@@for (BlockingQueueConsumer consumer : this.consumers) {  consumer.setQuiesce(this.shutdownTimeout);} @AT@ 13317 @LENGTH@ 42
---------INS MethodInvocation@@consumer.setQuiesce(this.shutdownTimeout) @TO@ ExpressionStatement@@MethodInvocation:consumer.setQuiesce(this.shutdownTimeout) @AT@ 13317 @LENGTH@ 41
------------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.setQuiesce(this.shutdownTimeout) @AT@ 13317 @LENGTH@ 8
------------INS SimpleName@@MethodName:setQuiesce:[this.shutdownTimeout] @TO@ MethodInvocation@@consumer.setQuiesce(this.shutdownTimeout) @AT@ 13326 @LENGTH@ 32
---------------INS FieldAccess@@this.shutdownTimeout @TO@ SimpleName@@MethodName:setQuiesce:[this.shutdownTimeout] @AT@ 13337 @LENGTH@ 20
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.shutdownTimeout @AT@ 13337 @LENGTH@ 4
------------------INS SimpleName@@shutdownTimeout @TO@ FieldAccess@@this.shutdownTimeout @AT@ 13342 @LENGTH@ 15


UPD IfStatement@@if (DataFormat.PAYLOAD == message.get(DataFormat.class)) {  CxfPayload<?> payload=(CxfPayload<?>)params[0];  List<Source> elements=payload.getBodySources();  BindingOperationInfo boi=message.get(BindingOperationInfo.class);  MessageContentsList content=new MessageContentsList();  int i=0;  for (  MessagePartInfo partInfo : boi.getInput().getMessageParts()) {    if (elements.size() > i) {      if (isSkipPayloadMessagePartCheck()) {        content.put(partInfo,elements.get(i++));      } else {        String name=findName(elements,i);        if (partInfo.getConcreteName().getLocalPart().equals(name)) {          content.put(partInfo,elements.get(i++));        }      }    }  }  if (elements != null && content.size() < elements.size()) {    LOG.warn("Cannot set right payload parameters. Please check the BindingOperation and PayLoadMessage.");    throw new IllegalArgumentException("The PayLoad elements cannot fit with the message parts of the BindingOperation. Please check the BindingOperation and PayLoadMessage.");  }  message.setContent(List.class,content);  message.put(Header.HEADER_LIST,payload.getHeaders());} else {  super.setParameters(params,message);} @TO@ if (DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload) {  CxfPayload<?> payload=(CxfPayload<?>)params[0];  List<Source> elements=payload.getBodySources();  BindingOperationInfo boi=message.get(BindingOperationInfo.class);  MessageContentsList content=new MessageContentsList();  int i=0;  for (  MessagePartInfo partInfo : boi.getInput().getMessageParts()) {    if (elements.size() > i) {      if (isSkipPayloadMessagePartCheck()) {        content.put(partInfo,elements.get(i++));      } else {        String name=findName(elements,i);        if (partInfo.getConcreteName().getLocalPart().equals(name)) {          content.put(partInfo,elements.get(i++));        }      }    }  }  if (elements != null && content.size() < elements.size()) {    LOG.warn("Cannot set right payload parameters. Please check the BindingOperation and PayLoadMessage.");    throw new IllegalArgumentException("The PayLoad elements cannot fit with the message parts of the BindingOperation. Please check the BindingOperation and PayLoadMessage.");  }  message.setContent(List.class,content);  message.put(Header.HEADER_LIST,payload.getHeaders());} else {  super.setParameters(params,message);} @AT@ 33149 @LENGTH@ 1655
---INS InfixExpression@@DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload @TO@ IfStatement@@if (DataFormat.PAYLOAD == message.get(DataFormat.class)) {  CxfPayload<?> payload=(CxfPayload<?>)params[0];  List<Source> elements=payload.getBodySources();  BindingOperationInfo boi=message.get(BindingOperationInfo.class);  MessageContentsList content=new MessageContentsList();  int i=0;  for (  MessagePartInfo partInfo : boi.getInput().getMessageParts()) {    if (elements.size() > i) {      if (isSkipPayloadMessagePartCheck()) {        content.put(partInfo,elements.get(i++));      } else {        String name=findName(elements,i);        if (partInfo.getConcreteName().getLocalPart().equals(name)) {          content.put(partInfo,elements.get(i++));        }      }    }  }  if (elements != null && content.size() < elements.size()) {    LOG.warn("Cannot set right payload parameters. Please check the BindingOperation and PayLoadMessage.");    throw new IllegalArgumentException("The PayLoad elements cannot fit with the message parts of the BindingOperation. Please check the BindingOperation and PayLoadMessage.");  }  message.setContent(List.class,content);  message.put(Header.HEADER_LIST,payload.getHeaders());} else {  super.setParameters(params,message);} @AT@ 33344 @LENGTH@ 86
------MOV InfixExpression@@DataFormat.PAYLOAD == message.get(DataFormat.class) @TO@ InfixExpression@@DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload @AT@ 33153 @LENGTH@ 51
------INS Operator@@&& @TO@ InfixExpression@@DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload @AT@ 33395 @LENGTH@ 2
------INS InstanceofExpression@@params[0] instanceof CxfPayload @TO@ InfixExpression@@DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload @AT@ 33399 @LENGTH@ 31
---------INS ArrayAccess@@params[0] @TO@ InstanceofExpression@@params[0] instanceof CxfPayload @AT@ 33399 @LENGTH@ 9
------------INS SimpleName@@params @TO@ ArrayAccess@@params[0] @AT@ 33399 @LENGTH@ 6
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@params[0] @AT@ 33406 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@params[0] instanceof CxfPayload @AT@ 33409 @LENGTH@ 10
---------INS SimpleType@@CxfPayload @TO@ InstanceofExpression@@params[0] instanceof CxfPayload @AT@ 33420 @LENGTH@ 10


UPD IfStatement@@if (currOp.getParentOperators() == null) {  break;} @TO@ if ((currOp.getParentOperators() == null) || (currOp.getParentOperators().isEmpty())) {  break;} @AT@ 11500 @LENGTH@ 69
---INS InfixExpression@@(currOp.getParentOperators() == null) || (currOp.getParentOperators().isEmpty()) @TO@ IfStatement@@if (currOp.getParentOperators() == null) {  break;} @AT@ 11504 @LENGTH@ 80
------INS ParenthesizedExpression@@(currOp.getParentOperators() == null) @TO@ InfixExpression@@(currOp.getParentOperators() == null) || (currOp.getParentOperators().isEmpty()) @AT@ 11504 @LENGTH@ 37
---------MOV InfixExpression@@currOp.getParentOperators() == null @TO@ ParenthesizedExpression@@(currOp.getParentOperators() == null) @AT@ 11504 @LENGTH@ 35
------INS Operator@@|| @TO@ InfixExpression@@(currOp.getParentOperators() == null) || (currOp.getParentOperators().isEmpty()) @AT@ 11541 @LENGTH@ 2
------INS ParenthesizedExpression@@(currOp.getParentOperators().isEmpty()) @TO@ InfixExpression@@(currOp.getParentOperators() == null) || (currOp.getParentOperators().isEmpty()) @AT@ 11545 @LENGTH@ 39
---------INS MethodInvocation@@currOp.getParentOperators().isEmpty() @TO@ ParenthesizedExpression@@(currOp.getParentOperators().isEmpty()) @AT@ 11546 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:getParentOperators:[] @TO@ MethodInvocation@@currOp.getParentOperators().isEmpty() @AT@ 11546 @LENGTH@ 27
------------INS SimpleName@@Name:currOp @TO@ MethodInvocation@@currOp.getParentOperators().isEmpty() @AT@ 11546 @LENGTH@ 6
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@currOp.getParentOperators().isEmpty() @AT@ 11574 @LENGTH@ 9


INS MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @TO@ TypeDeclaration@@[public, final]MessageHelper,  @AT@ 14822 @LENGTH@ 384
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14822 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14829 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14836 @LENGTH@ 6
---INS SimpleName@@MethodName:dumpMessageHistoryStacktrace @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14843 @LENGTH@ 28
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14872 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 14872 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 14881 @LENGTH@ 8
---INS SingleVariableDeclaration@@ExchangeFormatter exchangeFormatter @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14891 @LENGTH@ 35
------INS SimpleType@@ExchangeFormatter @TO@ SingleVariableDeclaration@@ExchangeFormatter exchangeFormatter @AT@ 14891 @LENGTH@ 17
------INS SimpleName@@exchangeFormatter @TO@ SingleVariableDeclaration@@ExchangeFormatter exchangeFormatter @AT@ 14909 @LENGTH@ 17
---INS SingleVariableDeclaration@@boolean logStackTrace @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 14928 @LENGTH@ 21
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean logStackTrace @AT@ 14928 @LENGTH@ 7
------INS SimpleName@@logStackTrace @TO@ SingleVariableDeclaration@@boolean logStackTrace @AT@ 14936 @LENGTH@ 13
---INS TryStatement@@try {  return doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace);} catch (Exception e) {  return "";} @TO@ MethodDeclaration@@public, static, String, MethodName:dumpMessageHistoryStacktrace, Exchange exchange, ExchangeFormatter exchangeFormatter, boolean logStackTrace,  @AT@ 15035 @LENGTH@ 165
------INS ReturnStatement@@MethodInvocation:doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace) @TO@ TryStatement@@try {  return doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace);} catch (Exception e) {  return "";} @AT@ 15053 @LENGTH@ 82
---------INS MethodInvocation@@doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace) @TO@ ReturnStatement@@MethodInvocation:doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace) @AT@ 15060 @LENGTH@ 74
------------INS SimpleName@@MethodName:doDumpMessageHistoryStacktrace:[exchange, exchangeFormatter, logStackTrace] @TO@ MethodInvocation@@doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace) @AT@ 15060 @LENGTH@ 74
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:doDumpMessageHistoryStacktrace:[exchange, exchangeFormatter, logStackTrace] @AT@ 15091 @LENGTH@ 8
---------------INS SimpleName@@exchangeFormatter @TO@ SimpleName@@MethodName:doDumpMessageHistoryStacktrace:[exchange, exchangeFormatter, logStackTrace] @AT@ 15101 @LENGTH@ 17
---------------INS SimpleName@@logStackTrace @TO@ SimpleName@@MethodName:doDumpMessageHistoryStacktrace:[exchange, exchangeFormatter, logStackTrace] @AT@ 15120 @LENGTH@ 13
------INS CatchClause@@catch (Exception e) {  return "";} @TO@ TryStatement@@try {  return doDumpMessageHistoryStacktrace(exchange,exchangeFormatter,logStackTrace);} catch (Exception e) {  return "";} @AT@ 15146 @LENGTH@ 54
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  return "";} @AT@ 15153 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 15153 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 15163 @LENGTH@ 1
---------INS ReturnStatement@@StringLiteral:"" @TO@ CatchClause@@catch (Exception e) {  return "";} @AT@ 15180 @LENGTH@ 10
------------INS StringLiteral@@"" @TO@ ReturnStatement@@StringLiteral:"" @AT@ 15187 @LENGTH@ 2


UPD VariableDeclarationStatement@@PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME); @TO@ final PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue(); @AT@ 1957 @LENGTH@ 122
---INS Modifier@@final @TO@ VariableDeclarationStatement@@PatchInfoService service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME); @AT@ 1957 @LENGTH@ 5
---UPD VariableDeclarationFragment@@service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ service=(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1974 @LENGTH@ 104
------UPD CastExpression@@(PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ (PatchInfoService)context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 1984 @LENGTH@ 94
---------UPD MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @TO@ context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME).getValue() @AT@ 2003 @LENGTH@ 75
------------INS MethodInvocation@@MethodName:getRequiredService:[PatchInfoService.NAME] @TO@ MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @AT@ 2009 @LENGTH@ 75
---------------INS QualifiedName@@PatchInfoService.NAME @TO@ MethodInvocation@@MethodName:getRequiredService:[PatchInfoService.NAME] @AT@ 2062 @LENGTH@ 21
------------------MOV SimpleName@@PatchInfoService @TO@ QualifiedName@@PatchInfoService.NAME @AT@ 2056 @LENGTH@ 16
------------------MOV SimpleName@@NAME @TO@ QualifiedName@@PatchInfoService.NAME @AT@ 2073 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getRequiredService:[PatchInfoService.NAME] @AT@ 2037 @LENGTH@ 41
---------------DEL QualifiedName@@PatchInfoService.NAME @AT@ 2056 @LENGTH@ 21
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.getServiceRegistry(false).getRequiredService(PatchInfoService.NAME) @AT@ 2085 @LENGTH@ 10


INS IfStatement@@if (controllerVersion.isEap()) {  ignoreThisTestIfEAPRepositoryIsNotReachable();} @TO@ MethodDeclaration@@private, void, MethodName:testTransformersDiscardGlobalModules1_0_0, ModelTestControllerVersion controllerVersion, Exception,  @AT@ 11907 @LENGTH@ 101
---INS MethodInvocation@@controllerVersion.isEap() @TO@ IfStatement@@if (controllerVersion.isEap()) {  ignoreThisTestIfEAPRepositoryIsNotReachable();} @AT@ 11911 @LENGTH@ 25
------INS SimpleName@@Name:controllerVersion @TO@ MethodInvocation@@controllerVersion.isEap() @AT@ 11911 @LENGTH@ 17
------INS SimpleName@@MethodName:isEap:[] @TO@ MethodInvocation@@controllerVersion.isEap() @AT@ 11929 @LENGTH@ 7
---INS Block@@ThenBody:{  ignoreThisTestIfEAPRepositoryIsNotReachable();} @TO@ IfStatement@@if (controllerVersion.isEap()) {  ignoreThisTestIfEAPRepositoryIsNotReachable();} @AT@ 11938 @LENGTH@ 70
------INS ExpressionStatement@@MethodInvocation:ignoreThisTestIfEAPRepositoryIsNotReachable() @TO@ Block@@ThenBody:{  ignoreThisTestIfEAPRepositoryIsNotReachable();} @AT@ 11952 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:ignoreThisTestIfEAPRepositoryIsNotReachable:[] @TO@ ExpressionStatement@@MethodInvocation:ignoreThisTestIfEAPRepositoryIsNotReachable() @AT@ 11952 @LENGTH@ 45


UPD VariableDeclarationStatement@@final String attributeName=operation.require(GlobalOperationHandlers.NAME.getName()).asString(); @TO@ final String attributeName=operation.require(NAME.getName()).asString(); @AT@ 3409 @LENGTH@ 98
---UPD VariableDeclarationFragment@@attributeName=operation.require(GlobalOperationHandlers.NAME.getName()).asString() @TO@ attributeName=operation.require(NAME.getName()).asString() @AT@ 3422 @LENGTH@ 84
------UPD MethodInvocation@@operation.require(GlobalOperationHandlers.NAME.getName()).asString() @TO@ operation.require(NAME.getName()).asString() @AT@ 3438 @LENGTH@ 68
---------UPD MethodInvocation@@MethodName:require:[GlobalOperationHandlers.NAME.getName()] @TO@ MethodName:require:[NAME.getName()] @AT@ 3438 @LENGTH@ 57
------------UPD MethodInvocation@@GlobalOperationHandlers.NAME.getName() @TO@ NAME.getName() @AT@ 3456 @LENGTH@ 38
---------------INS SimpleName@@Name:NAME @TO@ MethodInvocation@@GlobalOperationHandlers.NAME.getName() @AT@ 3436 @LENGTH@ 4
---------------DEL QualifiedName@@Name:GlobalOperationHandlers.NAME @AT@ 3456 @LENGTH@ 28


UPD IfStatement@@if (data.length() > 0) {  sb.append(" ");} @TO@ if (sb.length() > 0) {  sb.append(" ");} @AT@ 4130 @LENGTH@ 86
---UPD InfixExpression@@data.length() > 0 @TO@ sb.length() > 0 @AT@ 4134 @LENGTH@ 17
------UPD MethodInvocation@@data.length() @TO@ sb.length() @AT@ 4134 @LENGTH@ 13
---------UPD SimpleName@@Name:data @TO@ Name:sb @AT@ 4134 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThat(mindAppmasterService.getPort(),greaterThan(0)) @TO@ MethodInvocation:assertThat(waitAndPollPort(),greaterThan(0)) @AT@ 1528 @LENGTH@ 59
---UPD MethodInvocation@@assertThat(mindAppmasterService.getPort(),greaterThan(0)) @TO@ assertThat(waitAndPollPort(),greaterThan(0)) @AT@ 1528 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertThat:[mindAppmasterService.getPort(), greaterThan(0)] @TO@ MethodName:assertThat:[waitAndPollPort(), greaterThan(0)] @AT@ 1528 @LENGTH@ 58
---------UPD MethodInvocation@@mindAppmasterService.getPort() @TO@ MethodName:waitAndPollPort:[] @AT@ 1539 @LENGTH@ 30
------------DEL SimpleName@@Name:mindAppmasterService @AT@ 1539 @LENGTH@ 20
------------DEL SimpleName@@MethodName:getPort:[] @AT@ 1560 @LENGTH@ 9


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build(); @AT@ 4835 @LENGTH@ 364
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build() @AT@ 4841 @LENGTH@ 357
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.CUMULATIVE).setResultingVersion(info.getVersion() + "-CP").addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setCumulativeType(info.getVersion(),info.getVersion() + "-CP").addContentModification(moduleAdded).build() @AT@ 4849 @LENGTH@ 349
---------DEL MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @AT@ 4849 @LENGTH@ 271
------------DEL MethodInvocation@@info.getVersion() @AT@ 5102 @LENGTH@ 17
---------------DEL SimpleName@@Name:info @AT@ 5102 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getVersion:[] @AT@ 5107 @LENGTH@ 12
---------UPD MethodInvocation@@MethodName:setResultingVersion:[info.getVersion() + "-CP"] @TO@ MethodName:setCumulativeType:[info.getVersion(), info.getVersion() + "-CP"] @AT@ 4849 @LENGTH@ 222
------------INS MethodInvocation@@info.getVersion() @TO@ MethodInvocation@@MethodName:setResultingVersion:[info.getVersion() + "-CP"] @AT@ 4980 @LENGTH@ 17
---------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getVersion() @AT@ 4980 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@info.getVersion() @AT@ 4985 @LENGTH@ 12
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.CUMULATIVE] @AT@ 4849 @LENGTH@ 158
------------DEL QualifiedName@@PatchType.CUMULATIVE @AT@ 4986 @LENGTH@ 20
---------------DEL SimpleName@@PatchType @AT@ 4986 @LENGTH@ 9
---------------DEL SimpleName@@CUMULATIVE @AT@ 4996 @LENGTH@ 10


UPD MethodDeclaration@@public, Group<T>, T, MethodName:createMultiGroup, String path, Class<T> clazz,  @TO@ public, Group<T>, T extends NodeState, MethodName:createMultiGroup, String path, Class<T> clazz,  @AT@ 1242 @LENGTH@ 138


MOV ExpressionStatement@@MethodInvocation:activateComponent() @TO@ MethodDeclaration@@void, MethodName:activate, IOException,  @AT@ 2253 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:decorated().retainAll(coll) @TO@ MethodInvocation:decorated().retainAll(null) @AT@ 4971 @LENGTH@ 35
---UPD MethodInvocation@@decorated().retainAll(coll) @TO@ decorated().retainAll(null) @AT@ 4978 @LENGTH@ 27
------UPD SimpleName@@MethodName:retainAll:[coll] @TO@ MethodName:retainAll:[null] @AT@ 4990 @LENGTH@ 15
---------DEL SimpleName@@coll @AT@ 5000 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:retainAll:[coll] @AT@ 5140 @LENGTH@ 4


UPD ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @TO@ MethodInvocation:Collections.emptyList() @AT@ 1305 @LENGTH@ 30
---INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 1277 @LENGTH@ 23
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1277 @LENGTH@ 11
------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1289 @LENGTH@ 11
---DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 1312 @LENGTH@ 22
------DEL SimpleName@@Collections @AT@ 1312 @LENGTH@ 11
------DEL SimpleName@@EMPTY_LIST @AT@ 1324 @LENGTH@ 10


INS MethodDeclaration@@void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partition,  @TO@ TypeDeclaration@@[public]HadoopShims,  @AT@ 13319 @LENGTH@ 60
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partition,  @AT@ 13314 @LENGTH@ 4
---INS SimpleName@@MethodName:setTotalOrderPartitionFile @TO@ MethodDeclaration@@void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partition,  @AT@ 13319 @LENGTH@ 26
---INS SingleVariableDeclaration@@JobConf jobConf @TO@ MethodDeclaration@@void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partition,  @AT@ 13346 @LENGTH@ 15
------INS SimpleType@@JobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 13346 @LENGTH@ 7
------INS SimpleName@@jobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 13354 @LENGTH@ 7
---INS SingleVariableDeclaration@@Path partition @TO@ MethodDeclaration@@void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partition,  @AT@ 13363 @LENGTH@ 14
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path partition @AT@ 13363 @LENGTH@ 4
------INS SimpleName@@partition @TO@ SingleVariableDeclaration@@Path partition @AT@ 13368 @LENGTH@ 9


UPD MethodDeclaration@@static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @TO@ public, static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @AT@ 3065 @LENGTH@ 497
---INS Modifier@@public @TO@ MethodDeclaration@@static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @AT@ 3065 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @AT@ 2696 @LENGTH@ 145
---UPD MethodInvocation@@Provision.waitForContainerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @AT@ 2696 @LENGTH@ 144
------UPD SimpleName@@MethodName:waitForContainerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @TO@ MethodName:containerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @AT@ 2706 @LENGTH@ 134


INS MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @TO@ TypeDeclaration@@IdentityPatchContext, [PatchContentProvider] @AT@ 3968 @LENGTH@ 101
---INS Modifier@@public @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3968 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3975 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3980 @LENGTH@ 22
---INS ReturnStatement@@MethodInvocation:contentProvider.getPatchContentRootDir() @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 4015 @LENGTH@ 48
------INS MethodInvocation@@contentProvider.getPatchContentRootDir() @TO@ ReturnStatement@@MethodInvocation:contentProvider.getPatchContentRootDir() @AT@ 4022 @LENGTH@ 40
---------INS SimpleName@@Name:contentProvider @TO@ MethodInvocation@@contentProvider.getPatchContentRootDir() @AT@ 4022 @LENGTH@ 15
---------INS SimpleName@@MethodName:getPatchContentRootDir:[] @TO@ MethodInvocation@@contentProvider.getPatchContentRootDir() @AT@ 4038 @LENGTH@ 24


DEL MethodDeclaration@@ObjectName, MethodName:getObjectNameForSingleService, CamelContext context, Service service, MalformedObjectNameException,  @AT@ 2826 @LENGTH@ 105
---DEL SimpleType@@ObjectName @AT@ 2815 @LENGTH@ 10
---DEL SimpleName@@MethodName:getObjectNameForSingleService @AT@ 2826 @LENGTH@ 29
---DEL SingleVariableDeclaration@@CamelContext context @AT@ 2856 @LENGTH@ 20
------DEL SimpleType@@CamelContext @AT@ 2856 @LENGTH@ 12
------DEL SimpleName@@context @AT@ 2869 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Service service @AT@ 2878 @LENGTH@ 15
------DEL SimpleType@@Service @AT@ 2878 @LENGTH@ 7
------DEL SimpleName@@service @AT@ 2886 @LENGTH@ 7
---DEL SimpleType@@MalformedObjectNameException @AT@ 2902 @LENGTH@ 28


UPD MethodDeclaration@@private, void, MethodName:awaitHostController, long start, InterruptedException, TimeoutException,  @TO@ public, void, MethodName:awaitHostController, long start, InterruptedException, TimeoutException,  @AT@ 19854 @LENGTH@ 738
---UPD Modifier@@private @TO@ public @AT@ 19854 @LENGTH@ 7


UPD IfStatement@@if (resultAction == OperationContext.ResultAction.KEEP) {  service.reloadRequired();  context.restartRequired();  result.commit();} else {  result.rollback();} @TO@ if (resultAction == OperationContext.ResultAction.KEEP) {  result.commit();} else {  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3417 @LENGTH@ 292
---UPD Block@@ThenBody:{  service.reloadRequired();  context.restartRequired();  result.commit();} @TO@ ThenBody:{  result.commit();} @AT@ 3472 @LENGTH@ 165
------DEL ExpressionStatement@@MethodInvocation:service.reloadRequired() @AT@ 3498 @LENGTH@ 25
---------DEL MethodInvocation@@service.reloadRequired() @AT@ 3498 @LENGTH@ 24
------------DEL SimpleName@@Name:service @AT@ 3498 @LENGTH@ 7
------------DEL SimpleName@@MethodName:reloadRequired:[] @AT@ 3506 @LENGTH@ 16
---UPD Block@@ElseBody:{  result.rollback();} @TO@ ElseBody:{  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3643 @LENGTH@ 66
------INS ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3648 @LENGTH@ 31
---------INS MethodInvocation@@service.clearRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @AT@ 3648 @LENGTH@ 30
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3648 @LENGTH@ 7
------------INS SimpleName@@MethodName:clearRestartRequired:[] @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3656 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3704 @LENGTH@ 32
---------INS MethodInvocation@@context.revertRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @AT@ 3704 @LENGTH@ 31
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3704 @LENGTH@ 7
------------INS SimpleName@@MethodName:revertRestartRequired:[] @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3712 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4481 @LENGTH@ 197
---INS MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @TO@ ExpressionStatement@@MethodInvocation:from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4481 @LENGTH@ 196
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4481 @LENGTH@ 157
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 4625 @LENGTH@ 12
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4481 @LENGTH@ 108
------INS MethodInvocation@@MethodName:routeId:["bar"] @TO@ MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4481 @LENGTH@ 92
---------INS StringLiteral@@"bar" @TO@ MethodInvocation@@MethodName:routeId:["bar"] @AT@ 4567 @LENGTH@ 5
------INS MethodInvocation@@MethodName:from:["file:target/done2?doneFileName=${file:name}.done"] @TO@ MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4481 @LENGTH@ 56
---------INS StringLiteral@@"file:target/done2?doneFileName=${file:name}.done" @TO@ MethodInvocation@@MethodName:from:["file:target/done2?doneFileName=${file:name}.done"] @AT@ 4486 @LENGTH@ 50
------INS SimpleName@@MethodName:to:["mock:result"] @TO@ MethodInvocation@@from("file:target/done2?doneFileName=${file:name}.done").routeId("bar").noAutoStartup().convertBodyTo(String.class).to("mock:result") @AT@ 4660 @LENGTH@ 17
---------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:to:["mock:result"] @AT@ 4663 @LENGTH@ 13


UPD IfStatement@@if (bundle.startsWith("mvn:")) {  return bundle;} else {  int idx=bundle.indexOf(":mvn:",1);  if (idx > 0) {    return bundle.substring(idx + 1);  }} @TO@ if (bundle.startsWith("mvn:")) {  return bundle.substring(4);} else {  int idx=bundle.indexOf(":mvn:",1);  if (idx > 0) {    return bundle.substring(idx + 5);  }} @AT@ 5019 @LENGTH@ 227
---UPD Block@@ThenBody:{  return bundle;} @TO@ ThenBody:{  return bundle.substring(4);} @AT@ 5050 @LENGTH@ 38
------UPD ReturnStatement@@SimpleName:bundle @TO@ MethodInvocation:bundle.substring(4) @AT@ 5064 @LENGTH@ 14
---------INS MethodInvocation@@bundle.substring(4) @TO@ ReturnStatement@@SimpleName:bundle @AT@ 5071 @LENGTH@ 19
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.substring(4) @AT@ 5071 @LENGTH@ 6
------------INS SimpleName@@MethodName:substring:[4] @TO@ MethodInvocation@@bundle.substring(4) @AT@ 5078 @LENGTH@ 12
---------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:substring:[4] @AT@ 5088 @LENGTH@ 1
---------DEL SimpleName@@bundle @AT@ 5071 @LENGTH@ 6
---UPD Block@@ElseBody:{  int idx=bundle.indexOf(":mvn:",1);  if (idx > 0) {    return bundle.substring(idx + 1);  }} @TO@ ElseBody:{  int idx=bundle.indexOf(":mvn:",1);  if (idx > 0) {    return bundle.substring(idx + 5);  }} @AT@ 5094 @LENGTH@ 152
------UPD IfStatement@@if (idx > 0) {  return bundle.substring(idx + 1);} @TO@ if (idx > 0) {  return bundle.substring(idx + 5);} @AT@ 5158 @LENGTH@ 78
---------UPD Block@@ThenBody:{  return bundle.substring(idx + 1);} @TO@ ThenBody:{  return bundle.substring(idx + 5);} @AT@ 5171 @LENGTH@ 65
------------UPD ReturnStatement@@MethodInvocation:bundle.substring(idx + 1) @TO@ MethodInvocation:bundle.substring(idx + 5) @AT@ 5189 @LENGTH@ 33
---------------UPD MethodInvocation@@bundle.substring(idx + 1) @TO@ bundle.substring(idx + 5) @AT@ 5196 @LENGTH@ 25
------------------UPD SimpleName@@MethodName:substring:[idx + 1] @TO@ MethodName:substring:[idx + 5] @AT@ 5203 @LENGTH@ 18
---------------------UPD InfixExpression@@idx + 1 @TO@ idx + 5 @AT@ 5213 @LENGTH@ 7
------------------------UPD NumberLiteral@@1 @TO@ 5 @AT@ 5219 @LENGTH@ 1


INS MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @TO@ TypeDeclaration@@[public]FabricManager, [FabricManagerMBean] @AT@ 25831 @LENGTH@ 372
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25831 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25838 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 25838 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 25843 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25851 @LENGTH@ 25
---INS SingleVariableDeclaration@@String versionId @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25877 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String versionId @AT@ 25877 @LENGTH@ 6
------INS SimpleName@@versionId @TO@ SingleVariableDeclaration@@String versionId @AT@ 25884 @LENGTH@ 9
---INS SingleVariableDeclaration@@String profileId @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25895 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String profileId @AT@ 25895 @LENGTH@ 6
------INS SimpleName@@profileId @TO@ SingleVariableDeclaration@@String profileId @AT@ 25902 @LENGTH@ 9
---INS VariableDeclarationStatement@@Version version=getFabricService().getVersion(versionId); @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25923 @LENGTH@ 59
------INS SimpleType@@Version @TO@ VariableDeclarationStatement@@Version version=getFabricService().getVersion(versionId); @AT@ 25923 @LENGTH@ 7
------INS VariableDeclarationFragment@@version=getFabricService().getVersion(versionId) @TO@ VariableDeclarationStatement@@Version version=getFabricService().getVersion(versionId); @AT@ 25931 @LENGTH@ 50
---------INS SimpleName@@version @TO@ VariableDeclarationFragment@@version=getFabricService().getVersion(versionId) @AT@ 25931 @LENGTH@ 7
---------INS MethodInvocation@@getFabricService().getVersion(versionId) @TO@ VariableDeclarationFragment@@version=getFabricService().getVersion(versionId) @AT@ 25941 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:getFabricService:[] @TO@ MethodInvocation@@getFabricService().getVersion(versionId) @AT@ 25941 @LENGTH@ 18
------------INS SimpleName@@MethodName:getVersion:[versionId] @TO@ MethodInvocation@@getFabricService().getVersion(versionId) @AT@ 25960 @LENGTH@ 21
---------------INS SimpleName@@versionId @TO@ SimpleName@@MethodName:getVersion:[versionId] @AT@ 25971 @LENGTH@ 9
---INS VariableDeclarationStatement@@Profile profile=version.getProfile(profileId); @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 25991 @LENGTH@ 48
------INS SimpleType@@Profile @TO@ VariableDeclarationStatement@@Profile profile=version.getProfile(profileId); @AT@ 25991 @LENGTH@ 7
------INS VariableDeclarationFragment@@profile=version.getProfile(profileId) @TO@ VariableDeclarationStatement@@Profile profile=version.getProfile(profileId); @AT@ 25999 @LENGTH@ 39
---------INS SimpleName@@profile @TO@ VariableDeclarationFragment@@profile=version.getProfile(profileId) @AT@ 25999 @LENGTH@ 7
---------INS MethodInvocation@@version.getProfile(profileId) @TO@ VariableDeclarationFragment@@profile=version.getProfile(profileId) @AT@ 26009 @LENGTH@ 29
------------INS SimpleName@@Name:version @TO@ MethodInvocation@@version.getProfile(profileId) @AT@ 26009 @LENGTH@ 7
------------INS SimpleName@@MethodName:getProfile:[profileId] @TO@ MethodInvocation@@version.getProfile(profileId) @AT@ 26017 @LENGTH@ 21
---------------INS SimpleName@@profileId @TO@ SimpleName@@MethodName:getProfile:[profileId] @AT@ 26028 @LENGTH@ 9
---INS IfStatement@@if (profile != null) {  return profile.getConfigurationFileNames();} else {  return new ArrayList<String>();} @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames, String versionId, String profileId,  @AT@ 26048 @LENGTH@ 149
------INS InfixExpression@@profile != null @TO@ IfStatement@@if (profile != null) {  return profile.getConfigurationFileNames();} else {  return new ArrayList<String>();} @AT@ 26052 @LENGTH@ 15
---------INS SimpleName@@profile @TO@ InfixExpression@@profile != null @AT@ 26052 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@profile != null @AT@ 26059 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@profile != null @AT@ 26063 @LENGTH@ 4
------INS Block@@ThenBody:{  return profile.getConfigurationFileNames();} @TO@ IfStatement@@if (profile != null) {  return profile.getConfigurationFileNames();} else {  return new ArrayList<String>();} @AT@ 26069 @LENGTH@ 67
---------INS ReturnStatement@@MethodInvocation:profile.getConfigurationFileNames() @TO@ Block@@ThenBody:{  return profile.getConfigurationFileNames();} @AT@ 26083 @LENGTH@ 43
------------INS MethodInvocation@@profile.getConfigurationFileNames() @TO@ ReturnStatement@@MethodInvocation:profile.getConfigurationFileNames() @AT@ 26090 @LENGTH@ 35
---------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 26090 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getConfigurationFileNames:[] @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 26098 @LENGTH@ 27
------INS Block@@ElseBody:{  return new ArrayList<String>();} @TO@ IfStatement@@if (profile != null) {  return profile.getConfigurationFileNames();} else {  return new ArrayList<String>();} @AT@ 26142 @LENGTH@ 55
---------INS ReturnStatement@@ClassInstanceCreation:new ArrayList<String>() @TO@ Block@@ElseBody:{  return new ArrayList<String>();} @AT@ 26156 @LENGTH@ 31
------------INS ClassInstanceCreation@@ArrayList<String>[] @TO@ ReturnStatement@@ClassInstanceCreation:new ArrayList<String>() @AT@ 26163 @LENGTH@ 23
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 26163 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[] @AT@ 26167 @LENGTH@ 17
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 26167 @LENGTH@ 9
------------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 26177 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:privilizedVisitor.visitEnum("value",Type.getType(Policy.class).getDescriptor(),policy.name()) @TO@ MethodInvocation:privilizedVisitor.visit("value",policy.name()) @AT@ 2691 @LENGTH@ 96
---UPD MethodInvocation@@privilizedVisitor.visitEnum("value",Type.getType(Policy.class).getDescriptor(),policy.name()) @TO@ privilizedVisitor.visit("value",policy.name()) @AT@ 2691 @LENGTH@ 95
------UPD SimpleName@@MethodName:visitEnum:["value", Type.getType(Policy.class).getDescriptor(), policy.name()] @TO@ MethodName:visit:["value", policy.name()] @AT@ 2709 @LENGTH@ 77
---------DEL MethodInvocation@@Type.getType(Policy.class).getDescriptor() @AT@ 2728 @LENGTH@ 42
------------DEL MethodInvocation@@MethodName:getType:[Policy.class] @AT@ 2728 @LENGTH@ 26
---------------DEL TypeLiteral@@Policy.class @AT@ 2741 @LENGTH@ 12
------------DEL SimpleName@@Name:Type @AT@ 2728 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getDescriptor:[] @AT@ 2755 @LENGTH@ 15


UPD IfStatement@@if (!targetHash.equals(expected)) {  PatchLogger.ROOT_LOGGER.warnf("wrong content has for item (%s) ",item);} @TO@ if (!Arrays.equals(expected,targetHash)) {  PatchLogger.ROOT_LOGGER.warnf("wrong content has for item (%s) ",item);} @AT@ 2487 @LENGTH@ 227
---UPD PrefixExpression@@!targetHash.equals(expected) @TO@ !Arrays.equals(expected,targetHash) @AT@ 2490 @LENGTH@ 29
------UPD MethodInvocation@@targetHash.equals(expected) @TO@ Arrays.equals(expected,targetHash) @AT@ 2492 @LENGTH@ 27
---------UPD SimpleName@@Name:targetHash @TO@ Name:Arrays @AT@ 2492 @LENGTH@ 10
---------UPD SimpleName@@MethodName:equals:[expected] @TO@ MethodName:equals:[expected, targetHash] @AT@ 2503 @LENGTH@ 16
------------INS SimpleName@@targetHash @TO@ SimpleName@@MethodName:equals:[expected] @AT@ 2541 @LENGTH@ 10


INS IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:commonChecks, HttpServerExchange exchange, Exception,  @AT@ 4728 @LENGTH@ 144
---INS MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @TO@ IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @AT@ 4732 @LENGTH@ 64
------INS MethodInvocation@@MethodName:getQueryParameters:[] @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4732 @LENGTH@ 29
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4732 @LENGTH@ 8
------INS SimpleName@@MethodName:containsKey:[LogoutHandler.CONTEXT] @TO@ MethodInvocation@@exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT) @AT@ 4762 @LENGTH@ 34
---------INS QualifiedName@@LogoutHandler.CONTEXT @TO@ SimpleName@@MethodName:containsKey:[LogoutHandler.CONTEXT] @AT@ 4774 @LENGTH@ 21
------------INS SimpleName@@LogoutHandler @TO@ QualifiedName@@LogoutHandler.CONTEXT @AT@ 4774 @LENGTH@ 13
------------INS SimpleName@@CONTEXT @TO@ QualifiedName@@LogoutHandler.CONTEXT @AT@ 4788 @LENGTH@ 7
---INS Block@@ThenBody:{  contextLogout(exchange);  return false;} @TO@ IfStatement@@if (exchange.getQueryParameters().containsKey(LogoutHandler.CONTEXT)) {  contextLogout(exchange);  return false;} @AT@ 4798 @LENGTH@ 74
------INS ExpressionStatement@@MethodInvocation:contextLogout(exchange) @TO@ Block@@ThenBody:{  contextLogout(exchange);  return false;} @AT@ 4812 @LENGTH@ 24
---------INS MethodInvocation@@contextLogout(exchange) @TO@ ExpressionStatement@@MethodInvocation:contextLogout(exchange) @AT@ 4812 @LENGTH@ 23
------------INS SimpleName@@MethodName:contextLogout:[exchange] @TO@ MethodInvocation@@contextLogout(exchange) @AT@ 4812 @LENGTH@ 23
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:contextLogout:[exchange] @AT@ 4826 @LENGTH@ 8
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  contextLogout(exchange);  return false;} @AT@ 4849 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 4856 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new ContentModification(item,targetHash,ModificationType.MODIFY) @TO@ NullLiteral:null @AT@ 2430 @LENGTH@ 74
---INS NullLiteral@@null @TO@ ReturnStatement@@ClassInstanceCreation:new ContentModification(item,targetHash,ModificationType.MODIFY) @AT@ 2420 @LENGTH@ 4
---DEL ClassInstanceCreation@@ContentModification[item, targetHash, ModificationType.MODIFY] @AT@ 2437 @LENGTH@ 66
------DEL New@@new @AT@ 2437 @LENGTH@ 3
------DEL SimpleType@@ContentModification @AT@ 2441 @LENGTH@ 19
------DEL SimpleName@@item @AT@ 2461 @LENGTH@ 4
------DEL SimpleName@@targetHash @AT@ 2467 @LENGTH@ 10
------DEL QualifiedName@@ModificationType.MODIFY @AT@ 2479 @LENGTH@ 23
---------DEL SimpleName@@ModificationType @AT@ 2479 @LENGTH@ 16
---------DEL SimpleName@@MODIFY @AT@ 2496 @LENGTH@ 6


MOV FieldDeclaration@@private, String, [name] @TO@ TypeDeclaration@@[public]RegionLookupFactoryBean, [FactoryBean<Region<K,V>>, InitializingBean, BeanNameAware] @AT@ 1636 @LENGTH@ 20


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build(); @AT@ 3667 @LENGTH@ 297
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 3673 @LENGTH@ 290
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 3681 @LENGTH@ 282
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 3681 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 3681 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 3818 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 3818 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 3828 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:MessageHelper.resetStreamCache(copy.getIn()) @TO@ MethodDeclaration@@protected, Exchange, MethodName:prepareExchangeForRoutingSlip, Exchange current, Endpoint endpoint,  @AT@ 10764 @LENGTH@ 45
---INS MethodInvocation@@MessageHelper.resetStreamCache(copy.getIn()) @TO@ ExpressionStatement@@MethodInvocation:MessageHelper.resetStreamCache(copy.getIn()) @AT@ 10764 @LENGTH@ 44
------INS SimpleName@@Name:MessageHelper @TO@ MethodInvocation@@MessageHelper.resetStreamCache(copy.getIn()) @AT@ 10764 @LENGTH@ 13
------INS SimpleName@@MethodName:resetStreamCache:[copy.getIn()] @TO@ MethodInvocation@@MessageHelper.resetStreamCache(copy.getIn()) @AT@ 10778 @LENGTH@ 30
---------INS MethodInvocation@@copy.getIn() @TO@ SimpleName@@MethodName:resetStreamCache:[copy.getIn()] @AT@ 10795 @LENGTH@ 12
------------INS SimpleName@@Name:copy @TO@ MethodInvocation@@copy.getIn() @AT@ 10795 @LENGTH@ 4
------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@copy.getIn() @AT@ 10800 @LENGTH@ 7


INS VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2968 @LENGTH@ 105
---INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @AT@ 2968 @LENGTH@ 9
---INS VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @TO@ VariableDeclarationStatement@@ModelNode hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model); @AT@ 2978 @LENGTH@ 94
------INS SimpleName@@hostsAttribute @TO@ VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2978 @LENGTH@ 14
------INS MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @TO@ VariableDeclarationFragment@@hostsAttribute=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2995 @LENGTH@ 77
---------INS QualifiedName@@Name:HostScopedRolesResourceDefinition.HOSTS @TO@ MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 2995 @LENGTH@ 39
---------INS SimpleName@@MethodName:resolveModelAttribute:[context, model] @TO@ MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model) @AT@ 3035 @LENGTH@ 37
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:resolveModelAttribute:[context, model] @AT@ 3057 @LENGTH@ 7
------------INS SimpleName@@model @TO@ SimpleName@@MethodName:resolveModelAttribute:[context, model] @AT@ 3066 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 9601 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 9601 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 9608 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 9613 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 9641 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 9641 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 9647 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:current.getCumulativeID() @TO@ SimpleName:cumulative @AT@ 1702 @LENGTH@ 33
---DEL MethodInvocation@@current.getCumulativeID() @AT@ 1709 @LENGTH@ 25
------DEL SimpleName@@Name:current @AT@ 1709 @LENGTH@ 7
------DEL SimpleName@@MethodName:getCumulativeID:[] @AT@ 1717 @LENGTH@ 17
---INS SimpleName@@cumulative @TO@ ReturnStatement@@MethodInvocation:current.getCumulativeID() @AT@ 1709 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertTrue(builder.matches(5,TimeUnit.SECONDS)) @TO@ MethodDeclaration@@public, void, MethodName:testStreamCacheToFileShouldBeDeletedInCaseOfResponse, Exception,  @AT@ 1838 @LENGTH@ 49
---INS MethodInvocation@@assertTrue(builder.matches(5,TimeUnit.SECONDS)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(builder.matches(5,TimeUnit.SECONDS)) @AT@ 1838 @LENGTH@ 48
------INS SimpleName@@MethodName:assertTrue:[builder.matches(5,TimeUnit.SECONDS)] @TO@ MethodInvocation@@assertTrue(builder.matches(5,TimeUnit.SECONDS)) @AT@ 1838 @LENGTH@ 48
---------INS MethodInvocation@@builder.matches(5,TimeUnit.SECONDS) @TO@ SimpleName@@MethodName:assertTrue:[builder.matches(5,TimeUnit.SECONDS)] @AT@ 1849 @LENGTH@ 36
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.matches(5,TimeUnit.SECONDS) @AT@ 1849 @LENGTH@ 7
------------INS SimpleName@@MethodName:matches:[5, TimeUnit.SECONDS] @TO@ MethodInvocation@@builder.matches(5,TimeUnit.SECONDS) @AT@ 1857 @LENGTH@ 28
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:matches:[5, TimeUnit.SECONDS] @AT@ 1865 @LENGTH@ 1
---------------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:matches:[5, TimeUnit.SECONDS] @AT@ 1868 @LENGTH@ 16
------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1868 @LENGTH@ 8
------------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 1877 @LENGTH@ 7


INS MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @TO@ TypeDeclaration@@[public]PreAuthenticatedGrantedAuthoritiesUserDetailsService, [AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken>] @AT@ 2499 @LENGTH@ 175
---MOV ReturnStatement@@MethodInvocation:createuserDetails(token,authorities) @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2206 @LENGTH@ 45
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2499 @LENGTH@ 9
---INS SimpleType@@UserDetails @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2509 @LENGTH@ 11
---INS SimpleName@@MethodName:createUserDetails @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2521 @LENGTH@ 17
---INS SingleVariableDeclaration@@Authentication token @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2539 @LENGTH@ 20
------INS SimpleType@@Authentication @TO@ SingleVariableDeclaration@@Authentication token @AT@ 2539 @LENGTH@ 14
------INS SimpleName@@token @TO@ SingleVariableDeclaration@@Authentication token @AT@ 2554 @LENGTH@ 5
---INS SingleVariableDeclaration@@Collection<? extends GrantedAuthority> authorities @TO@ MethodDeclaration@@protected, UserDetails, MethodName:createUserDetails, Authentication token, Collection<? extends GrantedAuthority> authorities,  @AT@ 2561 @LENGTH@ 50
------INS ParameterizedType@@Collection<? extends GrantedAuthority> @TO@ SingleVariableDeclaration@@Collection<? extends GrantedAuthority> authorities @AT@ 2561 @LENGTH@ 38
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<? extends GrantedAuthority> @AT@ 2561 @LENGTH@ 10
---------INS WildcardType@@? @TO@ ParameterizedType@@Collection<? extends GrantedAuthority> @AT@ 2572 @LENGTH@ 26
------INS SimpleName@@authorities @TO@ SingleVariableDeclaration@@Collection<? extends GrantedAuthority> authorities @AT@ 2600 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @WebAppConfiguration, @ContextConfiguration(classes=RepositoryRestMvcConfiguration.class), public, abstract]AbstractWebIntegrationTests,  @AT@ 6031 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6031 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6038 @LENGTH@ 4
---INS SimpleName@@MethodName:exposesSchemasForResourcesExposed @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6043 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6086 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6101 @LENGTH@ 48
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @AT@ 6101 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=request("/") @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=request("/"); @AT@ 6125 @LENGTH@ 23
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=request("/") @AT@ 6125 @LENGTH@ 8
---------INS MethodInvocation@@request("/") @TO@ VariableDeclarationFragment@@response=request("/") @AT@ 6136 @LENGTH@ 12
------------INS SimpleName@@MethodName:request:["/"] @TO@ MethodInvocation@@request("/") @AT@ 6136 @LENGTH@ 12
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:request:["/"] @AT@ 6144 @LENGTH@ 3
---INS EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @TO@ MethodDeclaration@@public, void, MethodName:exposesSchemasForResourcesExposed, Exception,  @AT@ 6153 @LENGTH@ 335
------INS SingleVariableDeclaration@@String rel @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @AT@ 6158 @LENGTH@ 10
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String rel @AT@ 6158 @LENGTH@ 6
---------INS SimpleName@@rel @TO@ SingleVariableDeclaration@@String rel @AT@ 6165 @LENGTH@ 3
------INS MethodInvocation@@MethodName:expectedRootLinkRels:[] @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @AT@ 6171 @LENGTH@ 22
------INS VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @AT@ 6201 @LENGTH@ 48
---------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @AT@ 6201 @LENGTH@ 4
---------INS VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @TO@ VariableDeclarationStatement@@Link link=assertHasLinkWithRel(rel,response); @AT@ 6206 @LENGTH@ 42
------------INS SimpleName@@link @TO@ VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @AT@ 6206 @LENGTH@ 4
------------INS MethodInvocation@@assertHasLinkWithRel(rel,response) @TO@ VariableDeclarationFragment@@link=assertHasLinkWithRel(rel,response) @AT@ 6213 @LENGTH@ 35
---------------INS SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @TO@ MethodInvocation@@assertHasLinkWithRel(rel,response) @AT@ 6213 @LENGTH@ 35
------------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @AT@ 6234 @LENGTH@ 3
------------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertHasLinkWithRel:[rel, response] @AT@ 6239 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:request(link) @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @AT@ 6269 @LENGTH@ 14
---------INS MethodInvocation@@request(link) @TO@ ExpressionStatement@@MethodInvocation:request(link) @AT@ 6269 @LENGTH@ 13
------------INS SimpleName@@MethodName:request:[link] @TO@ MethodInvocation@@request(link) @AT@ 6269 @LENGTH@ 13
---------------INS SimpleName@@link @TO@ SimpleName@@MethodName:request:[link] @AT@ 6277 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=assertHasLinkWithRel(rel,response);  request(link);  mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk());} @AT@ 6336 @LENGTH@ 148
---------INS MethodInvocation@@mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @TO@ ExpressionStatement@@MethodInvocation:mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @AT@ 6336 @LENGTH@ 147
------------INS MethodInvocation@@MethodName:perform:[get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))] @TO@ MethodInvocation@@mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @AT@ 6336 @LENGTH@ 112
---------------INS MethodInvocation@@get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json")) @TO@ MethodInvocation@@MethodName:perform:[get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))] @AT@ 6348 @LENGTH@ 99
------------------INS MethodInvocation@@MethodName:get:[link.getHref() + "/schema"] @TO@ MethodInvocation@@get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json")) @AT@ 6348 @LENGTH@ 31
---------------------INS InfixExpression@@link.getHref() + "/schema" @TO@ MethodInvocation@@MethodName:get:[link.getHref() + "/schema"] @AT@ 6352 @LENGTH@ 26
------------------------INS MethodInvocation@@link.getHref() @TO@ InfixExpression@@link.getHref() + "/schema" @AT@ 6352 @LENGTH@ 14
---------------------------INS SimpleName@@Name:link @TO@ MethodInvocation@@link.getHref() @AT@ 6352 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@link.getHref() @AT@ 6357 @LENGTH@ 9
------------------------INS Operator@@+ @TO@ InfixExpression@@link.getHref() + "/schema" @AT@ 6366 @LENGTH@ 1
------------------------INS StringLiteral@@"/schema" @TO@ InfixExpression@@link.getHref() + "/schema" @AT@ 6369 @LENGTH@ 9
------------------INS SimpleName@@MethodName:accept:[MediaType.parseMediaType("application/schema+json")] @TO@ MethodInvocation@@get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json")) @AT@ 6388 @LENGTH@ 59
---------------------INS MethodInvocation@@MediaType.parseMediaType("application/schema+json") @TO@ SimpleName@@MethodName:accept:[MediaType.parseMediaType("application/schema+json")] @AT@ 6395 @LENGTH@ 51
------------------------INS SimpleName@@Name:MediaType @TO@ MethodInvocation@@MediaType.parseMediaType("application/schema+json") @AT@ 6395 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:parseMediaType:["application/schema+json"] @TO@ MethodInvocation@@MediaType.parseMediaType("application/schema+json") @AT@ 6405 @LENGTH@ 41
---------------------------INS StringLiteral@@"application/schema+json" @TO@ SimpleName@@MethodName:parseMediaType:["application/schema+json"] @AT@ 6420 @LENGTH@ 25
------------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @AT@ 6336 @LENGTH@ 3
------------INS SimpleName@@MethodName:andExpect:[status().isOk()] @TO@ MethodInvocation@@mvc.perform(get(link.getHref() + "/schema").accept(MediaType.parseMediaType("application/schema+json"))).andExpect(status().isOk()) @AT@ 6457 @LENGTH@ 26
---------------INS MethodInvocation@@status().isOk() @TO@ SimpleName@@MethodName:andExpect:[status().isOk()] @AT@ 6467 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isOk() @AT@ 6467 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isOk:[] @TO@ MethodInvocation@@status().isOk() @AT@ 6476 @LENGTH@ 6


UPD Block@@ThenBody:{  classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION));} @TO@ ThenBody:{  Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION);  classification.setConfiguredApplication(confValue);} @AT@ 6172 @LENGTH@ 123
---UPD ExpressionStatement@@MethodInvocation:classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION)) @TO@ MethodInvocation:classification.setConfiguredApplication(confValue) @AT@ 6190 @LENGTH@ 91
------UPD MethodInvocation@@classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION)) @TO@ classification.setConfiguredApplication(confValue) @AT@ 6190 @LENGTH@ 90
---------UPD SimpleName@@MethodName:setConfiguredApplication:[readValue(context,value,CONFIGURED_APPLICATION)] @TO@ MethodName:setConfiguredApplication:[confValue] @AT@ 6205 @LENGTH@ 75
------------INS SimpleName@@confValue @TO@ SimpleName@@MethodName:setConfiguredApplication:[readValue(context,value,CONFIGURED_APPLICATION)] @AT@ 6351 @LENGTH@ 9
---INS VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @TO@ Block@@ThenBody:{  classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION));} @AT@ 6224 @LENGTH@ 70
------INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @AT@ 6224 @LENGTH@ 7
------INS VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @TO@ VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @AT@ 6232 @LENGTH@ 61
---------MOV MethodInvocation@@readValue(context,value,CONFIGURED_APPLICATION) @TO@ VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @AT@ 6230 @LENGTH@ 49
---------INS SimpleName@@confValue @TO@ VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @AT@ 6232 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:line2=br.readLine() @TO@ Assignment:line2=readAhead(br) @AT@ 5964 @LENGTH@ 22
---UPD Assignment@@line2=br.readLine() @TO@ line2=readAhead(br) @AT@ 5964 @LENGTH@ 21
------UPD MethodInvocation@@br.readLine() @TO@ readAhead(br) @AT@ 5972 @LENGTH@ 13
---------DEL SimpleName@@Name:br @AT@ 5972 @LENGTH@ 2
---------UPD SimpleName@@MethodName:readLine:[] @TO@ MethodName:readAhead:[br] @AT@ 5975 @LENGTH@ 10
------------INS SimpleName@@br @TO@ SimpleName@@MethodName:readLine:[] @AT@ 5982 @LENGTH@ 2


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCamelCxfTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ExampleCamelCxfTest, FabricTestSupport @AT@ 1359 @LENGTH@ 1785
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCamelCxfTest, FabricTestSupport @AT@ 1481 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:directoryService.setWorkingDirectory(new File(System.getProperty("java.io.tmpdir") + "/apacheds-test")) @TO@ MethodInvocation:directoryService.setWorkingDirectory(new File(System.getProperty("java.io.tmpdir") + "/apacheds-test1")) @AT@ 1951 @LENGTH@ 104
---UPD MethodInvocation@@directoryService.setWorkingDirectory(new File(System.getProperty("java.io.tmpdir") + "/apacheds-test")) @TO@ directoryService.setWorkingDirectory(new File(System.getProperty("java.io.tmpdir") + "/apacheds-test1")) @AT@ 1951 @LENGTH@ 103
------UPD SimpleName@@MethodName:setWorkingDirectory:[new File(System.getProperty("java.io.tmpdir") + "/apacheds-test")] @TO@ MethodName:setWorkingDirectory:[new File(System.getProperty("java.io.tmpdir") + "/apacheds-test1")] @AT@ 1968 @LENGTH@ 86
---------UPD ClassInstanceCreation@@File[System.getProperty("java.io.tmpdir") + "/apacheds-test"] @TO@ File[System.getProperty("java.io.tmpdir") + "/apacheds-test1"] @AT@ 1988 @LENGTH@ 65
------------UPD InfixExpression@@System.getProperty("java.io.tmpdir") + "/apacheds-test" @TO@ System.getProperty("java.io.tmpdir") + "/apacheds-test1" @AT@ 1997 @LENGTH@ 55
---------------UPD StringLiteral@@"/apacheds-test" @TO@ "/apacheds-test1" @AT@ 2036 @LENGTH@ 16


DEL MethodDeclaration@@public, ObjectName, MethodName:getObjectNameForService, CamelContext context, Service service, MalformedObjectNameException,  @AT@ 11687 @LENGTH@ 590
---DEL Modifier@@public @AT@ 11687 @LENGTH@ 6
---DEL SimpleType@@ObjectName @AT@ 11694 @LENGTH@ 10
---DEL SimpleName@@MethodName:getObjectNameForService @AT@ 11705 @LENGTH@ 23
---DEL SingleVariableDeclaration@@CamelContext context @AT@ 11729 @LENGTH@ 20
------DEL SimpleType@@CamelContext @AT@ 11729 @LENGTH@ 12
------DEL SimpleName@@context @AT@ 11742 @LENGTH@ 7
---DEL SingleVariableDeclaration@@Service service @AT@ 11751 @LENGTH@ 15
------DEL SimpleType@@Service @AT@ 11751 @LENGTH@ 7
------DEL SimpleName@@service @AT@ 11759 @LENGTH@ 7
---DEL SimpleType@@MalformedObjectNameException @AT@ 11775 @LENGTH@ 28
---DEL VariableDeclarationStatement@@StringBuilder buffer=new StringBuilder(); @AT@ 11814 @LENGTH@ 43
------DEL SimpleType@@StringBuilder @AT@ 11814 @LENGTH@ 13
------DEL VariableDeclarationFragment@@buffer=new StringBuilder() @AT@ 11828 @LENGTH@ 28
---------DEL SimpleName@@buffer @AT@ 11828 @LENGTH@ 6
---------DEL ClassInstanceCreation@@StringBuilder[] @AT@ 11837 @LENGTH@ 19
------------DEL New@@new @AT@ 11837 @LENGTH@ 3
------------DEL SimpleType@@StringBuilder @AT@ 11841 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:buffer.append(domainName).append(":") @AT@ 11866 @LENGTH@ 38
------DEL MethodInvocation@@buffer.append(domainName).append(":") @AT@ 11866 @LENGTH@ 37
---------DEL MethodInvocation@@MethodName:append:[domainName] @AT@ 11866 @LENGTH@ 25
------------DEL SimpleName@@domainName @AT@ 11880 @LENGTH@ 10
---------DEL SimpleName@@Name:buffer @AT@ 11866 @LENGTH@ 6
---------DEL SimpleName@@MethodName:append:[":"] @AT@ 11892 @LENGTH@ 11
------------DEL StringLiteral@@":" @AT@ 11899 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:buffer.append(KEY_CONTEXT + "=").append(getContextId(context)).append(",") @AT@ 11913 @LENGTH@ 75
------DEL MethodInvocation@@buffer.append(KEY_CONTEXT + "=").append(getContextId(context)).append(",") @AT@ 11913 @LENGTH@ 74
---------DEL MethodInvocation@@MethodName:append:[getContextId(context)] @AT@ 11913 @LENGTH@ 62
------------DEL MethodInvocation@@getContextId(context) @AT@ 11953 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:getContextId:[context] @AT@ 11953 @LENGTH@ 21
------------------DEL SimpleName@@context @AT@ 11966 @LENGTH@ 7
---------DEL MethodInvocation@@MethodName:append:[KEY_CONTEXT + "="] @AT@ 11913 @LENGTH@ 32
------------DEL InfixExpression@@KEY_CONTEXT + "=" @AT@ 11927 @LENGTH@ 17
---------------DEL SimpleName@@KEY_CONTEXT @AT@ 11927 @LENGTH@ 11
---------------DEL Operator@@+ @AT@ 11938 @LENGTH@ 1
---------------DEL StringLiteral@@"=" @AT@ 11941 @LENGTH@ 3
---------DEL SimpleName@@Name:buffer @AT@ 11913 @LENGTH@ 6
---------DEL SimpleName@@MethodName:append:[","] @AT@ 11976 @LENGTH@ 11
------------DEL StringLiteral@@"," @AT@ 11983 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:buffer.append(KEY_TYPE + "=" + TYPE_SERVICE+ ",") @AT@ 11997 @LENGTH@ 51
------DEL MethodInvocation@@buffer.append(KEY_TYPE + "=" + TYPE_SERVICE+ ",") @AT@ 11997 @LENGTH@ 50
---------DEL SimpleName@@Name:buffer @AT@ 11997 @LENGTH@ 6
---------DEL SimpleName@@MethodName:append:[KEY_TYPE + "=" + TYPE_SERVICE+ ","] @AT@ 12004 @LENGTH@ 43
------------DEL InfixExpression@@KEY_TYPE + "=" + TYPE_SERVICE+ "," @AT@ 12011 @LENGTH@ 35
---------------DEL SimpleName@@KEY_TYPE @AT@ 12011 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 12019 @LENGTH@ 1
---------------DEL StringLiteral@@"=" @AT@ 12022 @LENGTH@ 3
---------------DEL SimpleName@@TYPE_SERVICE @AT@ 12028 @LENGTH@ 12
---------------DEL StringLiteral@@"," @AT@ 12043 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:buffer.append(KEY_NAME + "=").append(service.getClass().getSimpleName()).append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12057 @LENGTH@ 173
------DEL MethodInvocation@@buffer.append(KEY_NAME + "=").append(service.getClass().getSimpleName()).append("(").append(ObjectHelper.getIdentityHashCode(service)).append(")") @AT@ 12057 @LENGTH@ 172
---------DEL MethodInvocation@@MethodName:append:["("] @AT@ 12057 @LENGTH@ 110
------------DEL StringLiteral@@"(" @AT@ 12163 @LENGTH@ 3
---------DEL MethodInvocation@@MethodName:append:[service.getClass().getSimpleName()] @AT@ 12057 @LENGTH@ 85
------------DEL MethodInvocation@@service.getClass().getSimpleName() @AT@ 12107 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 12107 @LENGTH@ 18
---------------DEL SimpleName@@Name:service @AT@ 12107 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 12126 @LENGTH@ 15
---------DEL MethodInvocation@@MethodName:append:[KEY_NAME + "="] @AT@ 12057 @LENGTH@ 29
------------DEL InfixExpression@@KEY_NAME + "=" @AT@ 12071 @LENGTH@ 14
---------------DEL SimpleName@@KEY_NAME @AT@ 12071 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 12079 @LENGTH@ 1
---------------DEL StringLiteral@@"=" @AT@ 12082 @LENGTH@ 3
---------DEL SimpleName@@Name:buffer @AT@ 12057 @LENGTH@ 6
---------DEL SimpleName@@MethodName:append:[")"] @AT@ 12218 @LENGTH@ 11
------------DEL StringLiteral@@")" @AT@ 12225 @LENGTH@ 3
---DEL ReturnStatement@@MethodInvocation:createObjectName(buffer) @AT@ 12239 @LENGTH@ 32
------DEL MethodInvocation@@createObjectName(buffer) @AT@ 12246 @LENGTH@ 24
---------DEL SimpleName@@MethodName:createObjectName:[buffer] @AT@ 12246 @LENGTH@ 24
------------DEL SimpleName@@buffer @AT@ 12263 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:nameValidator.registerValidator(GlobalOperationHandlers.NAME.getName(),new StringLengthValidator(1)) @TO@ MethodInvocation:nameValidator.registerValidator(NAME.getName(),new StringLengthValidator(1)) @AT@ 3129 @LENGTH@ 102
---UPD MethodInvocation@@nameValidator.registerValidator(GlobalOperationHandlers.NAME.getName(),new StringLengthValidator(1)) @TO@ nameValidator.registerValidator(NAME.getName(),new StringLengthValidator(1)) @AT@ 3129 @LENGTH@ 101
------UPD SimpleName@@MethodName:registerValidator:[GlobalOperationHandlers.NAME.getName(), new StringLengthValidator(1)] @TO@ MethodName:registerValidator:[NAME.getName(), new StringLengthValidator(1)] @AT@ 3143 @LENGTH@ 87
---------UPD MethodInvocation@@GlobalOperationHandlers.NAME.getName() @TO@ NAME.getName() @AT@ 3161 @LENGTH@ 38
------------DEL QualifiedName@@Name:GlobalOperationHandlers.NAME @AT@ 3161 @LENGTH@ 28
------------INS SimpleName@@Name:NAME @TO@ MethodInvocation@@GlobalOperationHandlers.NAME.getName() @AT@ 3165 @LENGTH@ 4


UPD VariableDeclarationStatement@@ConnectionFactory connectionFactory=new ActiveMQConnectionFactory("vm://localhost?broker.persistent=false"); @TO@ ConnectionFactory connectionFactory=CamelJmsTestHelper.createConnectionFactory(); @AT@ 3445 @LENGTH@ 110
---UPD VariableDeclarationFragment@@connectionFactory=new ActiveMQConnectionFactory("vm://localhost?broker.persistent=false") @TO@ connectionFactory=CamelJmsTestHelper.createConnectionFactory() @AT@ 3463 @LENGTH@ 91
------INS MethodInvocation@@CamelJmsTestHelper.createConnectionFactory() @TO@ VariableDeclarationFragment@@connectionFactory=new ActiveMQConnectionFactory("vm://localhost?broker.persistent=false") @AT@ 3404 @LENGTH@ 44
---------INS SimpleName@@Name:CamelJmsTestHelper @TO@ MethodInvocation@@CamelJmsTestHelper.createConnectionFactory() @AT@ 3404 @LENGTH@ 18
---------INS SimpleName@@MethodName:createConnectionFactory:[] @TO@ MethodInvocation@@CamelJmsTestHelper.createConnectionFactory() @AT@ 3423 @LENGTH@ 25
------DEL ClassInstanceCreation@@ActiveMQConnectionFactory["vm://localhost?broker.persistent=false"] @AT@ 3483 @LENGTH@ 71
---------DEL New@@new @AT@ 3483 @LENGTH@ 3
---------DEL SimpleType@@ActiveMQConnectionFactory @AT@ 3487 @LENGTH@ 25
---------DEL StringLiteral@@"vm://localhost?broker.persistent=false" @AT@ 3513 @LENGTH@ 40


INS FieldDeclaration@@String[], [foo] @TO@ TypeDeclaration@@Address,  @AT@ 4333 @LENGTH@ 13
---INS ArrayType@@String[] @TO@ FieldDeclaration@@String[], [foo] @AT@ 4333 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 4333 @LENGTH@ 6
---INS VariableDeclarationFragment@@foo @TO@ FieldDeclaration@@String[], [foo] @AT@ 4342 @LENGTH@ 3
------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo @AT@ 4342 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2810 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 2810 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2810 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 2818 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 2837 @LENGTH@ 4


UPD FieldDeclaration@@private, static, ServiceRegistry, [registry] @TO@ private, static, volatile, ServiceRegistry, [registry] @AT@ 1905 @LENGTH@ 40
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, static, ServiceRegistry, [registry] @AT@ 1920 @LENGTH@ 8


UPD TypeDeclaration@@[@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]MasterEndpointFailoverTest,  @TO@ [public]MasterEndpointFailoverTest,  @AT@ 1373 @LENGTH@ 4098
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @AT@ 1373 @LENGTH@ 53


UPD MethodDeclaration@@long, MethodName:getKeepAliveTime,  @TO@ int, MethodName:getKeepAliveTime,  @AT@ 1218 @LENGTH@ 19
---UPD PrimitiveType@@long @TO@ int @AT@ 1213 @LENGTH@ 4


UPD TypeDeclaration@@[public]CachingGitDataStoreTest, GitDataStoreTest @TO@ [@Ignore("[FABRIC-535] Fix fabric/fabric-git-hawtio tests"), public]CachingGitDataStoreTest, GitDataStoreTest @AT@ 677 @LENGTH@ 162
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-535] Fix fabric/fabric-git-hawtio tests") @TO@ TypeDeclaration@@[public]CachingGitDataStoreTest, GitDataStoreTest @AT@ 695 @LENGTH@ 58


UPD FieldDeclaration@@private, static, int, [commits=0] @TO@ private, static, int, [commits] @AT@ 1086 @LENGTH@ 31
---UPD VariableDeclarationFragment@@commits=0 @TO@ commits @AT@ 1105 @LENGTH@ 11
------DEL NumberLiteral@@0 @AT@ 1115 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new ArrayList(parentData.getChildren()) @TO@ ClassInstanceCreation:new ArrayList<String>(parentData.getChildren()) @AT@ 17468 @LENGTH@ 47
---UPD ClassInstanceCreation@@ArrayList[parentData.getChildren()] @TO@ ArrayList<String>[parentData.getChildren()] @AT@ 17475 @LENGTH@ 39
------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[parentData.getChildren()] @AT@ 17479 @LENGTH@ 17
---------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 17479 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 17489 @LENGTH@ 6
------DEL SimpleType@@ArrayList @AT@ 17479 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[abstract, public]AbstractConnectionPipelineIntegrationTests, AbstractConnectionIntegrationTests @AT@ 3374 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3374 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3381 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3386 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 3417 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 3417 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 3423 @LENGTH@ 24


DEL ExpressionStatement@@MethodInvocation:NettyHelper.close(channel) @AT@ 21435 @LENGTH@ 27
---DEL MethodInvocation@@NettyHelper.close(channel) @AT@ 21435 @LENGTH@ 26
------DEL SimpleName@@Name:NettyHelper @AT@ 21435 @LENGTH@ 11
------DEL SimpleName@@MethodName:close:[channel] @AT@ 21447 @LENGTH@ 14
---------DEL SimpleName@@channel @AT@ 21453 @LENGTH@ 7


DEL TryStatement@@try {  group.close();} catch (IOException e) {} @AT@ 4128 @LENGTH@ 98
---DEL ExpressionStatement@@MethodInvocation:group.close() @AT@ 4146 @LENGTH@ 14
---DEL CatchClause@@catch (IOException e) {} @AT@ 4171 @LENGTH@ 55
------DEL SingleVariableDeclaration@@IOException e @AT@ 4178 @LENGTH@ 13
---------DEL SimpleType@@IOException @AT@ 4178 @LENGTH@ 11
---------DEL SimpleName@@e @AT@ 4190 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(containers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @AT@ 2977 @LENGTH@ 55
---UPD MethodInvocation@@Provision.assertSuccess(containers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(containers,PROVISION_TIMEOUT) @AT@ 2977 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertSuccess:[containers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[containers, PROVISION_TIMEOUT] @AT@ 2987 @LENGTH@ 44


INS MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MediaTypeRequestMatcherTests,  @AT@ 7857 @LENGTH@ 496
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 7857 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 7864 @LENGTH@ 4
---INS SimpleName@@MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 7869 @LENGTH@ 41
---INS SimpleType@@HttpMediaTypeNotAcceptableException @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 7920 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:when(negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))).thenReturn(Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))) @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 7966 @LENGTH@ 159
------INS MethodInvocation@@when(negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))).thenReturn(Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))) @TO@ ExpressionStatement@@MethodInvocation:when(negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))).thenReturn(Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))) @AT@ 7966 @LENGTH@ 158
---------INS MethodInvocation@@MethodName:when:[negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))] @TO@ MethodInvocation@@when(negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))).thenReturn(Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))) @AT@ 7966 @LENGTH@ 72
------------INS MethodInvocation@@negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class)) @TO@ MethodInvocation@@MethodName:when:[negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))] @AT@ 7971 @LENGTH@ 66
---------------INS SimpleName@@Name:negotiationStrategy @TO@ MethodInvocation@@negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class)) @AT@ 7971 @LENGTH@ 19
---------------INS SimpleName@@MethodName:resolveMediaTypes:[any(NativeWebRequest.class)] @TO@ MethodInvocation@@negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class)) @AT@ 7991 @LENGTH@ 46
------------------INS MethodInvocation@@any(NativeWebRequest.class) @TO@ SimpleName@@MethodName:resolveMediaTypes:[any(NativeWebRequest.class)] @AT@ 8009 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:any:[NativeWebRequest.class] @TO@ MethodInvocation@@any(NativeWebRequest.class) @AT@ 8009 @LENGTH@ 27
------------------------INS TypeLiteral@@NativeWebRequest.class @TO@ SimpleName@@MethodName:any:[NativeWebRequest.class] @AT@ 8013 @LENGTH@ 22
---------INS SimpleName@@MethodName:thenReturn:[Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))] @TO@ MethodInvocation@@when(negotiationStrategy.resolveMediaTypes(any(NativeWebRequest.class))).thenReturn(Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))) @AT@ 8039 @LENGTH@ 85
------------INS MethodInvocation@@Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8")) @TO@ SimpleName@@MethodName:thenReturn:[Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8"))] @AT@ 8050 @LENGTH@ 73
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8")) @AT@ 8050 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[MediaType.TEXT_PLAIN, MediaType.parseMediaType("*/*;q=0.8")] @TO@ MethodInvocation@@Arrays.asList(MediaType.TEXT_PLAIN,MediaType.parseMediaType("*/*;q=0.8")) @AT@ 8057 @LENGTH@ 66
------------------INS QualifiedName@@MediaType.TEXT_PLAIN @TO@ SimpleName@@MethodName:asList:[MediaType.TEXT_PLAIN, MediaType.parseMediaType("*/*;q=0.8")] @AT@ 8064 @LENGTH@ 20
---------------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.TEXT_PLAIN @AT@ 8064 @LENGTH@ 9
---------------------INS SimpleName@@TEXT_PLAIN @TO@ QualifiedName@@MediaType.TEXT_PLAIN @AT@ 8074 @LENGTH@ 10
------------------INS MethodInvocation@@MediaType.parseMediaType("*/*;q=0.8") @TO@ SimpleName@@MethodName:asList:[MediaType.TEXT_PLAIN, MediaType.parseMediaType("*/*;q=0.8")] @AT@ 8085 @LENGTH@ 37
---------------------INS SimpleName@@Name:MediaType @TO@ MethodInvocation@@MediaType.parseMediaType("*/*;q=0.8") @AT@ 8085 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:parseMediaType:["*/*;q=0.8"] @TO@ MethodInvocation@@MediaType.parseMediaType("*/*;q=0.8") @AT@ 8095 @LENGTH@ 27
------------------------INS StringLiteral@@"*/*;q=0.8" @TO@ SimpleName@@MethodName:parseMediaType:["*/*;q=0.8"] @AT@ 8110 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 8134 @LENGTH@ 80
------INS Assignment@@matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @TO@ ExpressionStatement@@Assignment:matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @AT@ 8134 @LENGTH@ 79
---------INS SimpleName@@matcher @TO@ Assignment@@matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @AT@ 8134 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @AT@ 8141 @LENGTH@ 1
---------INS ClassInstanceCreation@@MediaTypeRequestMatcher[negotiationStrategy, MediaType.TEXT_HTML] @TO@ Assignment@@matcher=new MediaTypeRequestMatcher(negotiationStrategy,MediaType.TEXT_HTML) @AT@ 8144 @LENGTH@ 69
------------INS New@@new @TO@ ClassInstanceCreation@@MediaTypeRequestMatcher[negotiationStrategy, MediaType.TEXT_HTML] @AT@ 8144 @LENGTH@ 3
------------INS SimpleType@@MediaTypeRequestMatcher @TO@ ClassInstanceCreation@@MediaTypeRequestMatcher[negotiationStrategy, MediaType.TEXT_HTML] @AT@ 8148 @LENGTH@ 23
------------INS SimpleName@@negotiationStrategy @TO@ ClassInstanceCreation@@MediaTypeRequestMatcher[negotiationStrategy, MediaType.TEXT_HTML] @AT@ 8172 @LENGTH@ 19
------------INS QualifiedName@@MediaType.TEXT_HTML @TO@ ClassInstanceCreation@@MediaTypeRequestMatcher[negotiationStrategy, MediaType.TEXT_HTML] @AT@ 8193 @LENGTH@ 19
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.TEXT_HTML @AT@ 8193 @LENGTH@ 9
---------------INS SimpleName@@TEXT_HTML @TO@ QualifiedName@@MediaType.TEXT_HTML @AT@ 8203 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 8223 @LENGTH@ 67
------INS MethodInvocation@@matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @TO@ ExpressionStatement@@MethodInvocation:matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 8223 @LENGTH@ 66
---------INS SimpleName@@Name:matcher @TO@ MethodInvocation@@matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 8223 @LENGTH@ 7
---------INS SimpleName@@MethodName:setIgnoredMediaTypes:[Collections.singleton(MediaType.ALL)] @TO@ MethodInvocation@@matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL)) @AT@ 8231 @LENGTH@ 58
------------INS MethodInvocation@@Collections.singleton(MediaType.ALL) @TO@ SimpleName@@MethodName:setIgnoredMediaTypes:[Collections.singleton(MediaType.ALL)] @AT@ 8252 @LENGTH@ 36
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(MediaType.ALL) @AT@ 8252 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singleton:[MediaType.ALL] @TO@ MethodInvocation@@Collections.singleton(MediaType.ALL) @AT@ 8264 @LENGTH@ 24
------------------INS QualifiedName@@MediaType.ALL @TO@ SimpleName@@MethodName:singleton:[MediaType.ALL] @AT@ 8274 @LENGTH@ 13
---------------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.ALL @AT@ 8274 @LENGTH@ 9
---------------------INS SimpleName@@ALL @TO@ QualifiedName@@MediaType.ALL @AT@ 8284 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(matcher.matches(request)).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:mediaAllQ08AndTextPlainIgnoreMediaTypeAll, HttpMediaTypeNotAcceptableException,  @AT@ 8300 @LENGTH@ 47
------INS MethodInvocation@@assertThat(matcher.matches(request)).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(matcher.matches(request)).isFalse() @AT@ 8300 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:assertThat:[matcher.matches(request)] @TO@ MethodInvocation@@assertThat(matcher.matches(request)).isFalse() @AT@ 8300 @LENGTH@ 36
------------INS MethodInvocation@@matcher.matches(request) @TO@ MethodInvocation@@MethodName:assertThat:[matcher.matches(request)] @AT@ 8311 @LENGTH@ 24
---------------INS SimpleName@@Name:matcher @TO@ MethodInvocation@@matcher.matches(request) @AT@ 8311 @LENGTH@ 7
---------------INS SimpleName@@MethodName:matches:[request] @TO@ MethodInvocation@@matcher.matches(request) @AT@ 8319 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:matches:[request] @AT@ 8327 @LENGTH@ 7
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(matcher.matches(request)).isFalse() @AT@ 8337 @LENGTH@ 9


UPD IfStatement@@if (batchProperty != null) {  field.set(artifact,batchProperty);} @TO@ if (StringUtils.hasText(batchProperty)) {  field.set(artifact,batchProperty);} @AT@ 4463 @LENGTH@ 77
---DEL InfixExpression@@batchProperty != null @AT@ 4467 @LENGTH@ 21
------DEL SimpleName@@batchProperty @AT@ 4467 @LENGTH@ 13
------DEL Operator@@!= @AT@ 4480 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 4484 @LENGTH@ 4
---INS MethodInvocation@@StringUtils.hasText(batchProperty) @TO@ IfStatement@@if (batchProperty != null) {  field.set(artifact,batchProperty);} @AT@ 4512 @LENGTH@ 34
------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(batchProperty) @AT@ 4512 @LENGTH@ 11
------INS SimpleName@@MethodName:hasText:[batchProperty] @TO@ MethodInvocation@@StringUtils.hasText(batchProperty) @AT@ 4524 @LENGTH@ 22
---------INS SimpleName@@batchProperty @TO@ SimpleName@@MethodName:hasText:[batchProperty] @AT@ 4532 @LENGTH@ 13


INS MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2689 @LENGTH@ 84
---INS Modifier@@public @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2689 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2696 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2701 @LENGTH@ 22
---INS ReturnStatement@@SimpleName:workDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 2744 @LENGTH@ 15
------INS SimpleName@@workDir @TO@ ReturnStatement@@SimpleName:workDir @AT@ 2751 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new RedirectMismatchException("A redirect_uri must be supplied.") @TO@ ClassInstanceCreation:new InvalidRequestException("A redirect_uri must be supplied.") @AT@ 2929 @LENGTH@ 72
---UPD ClassInstanceCreation@@RedirectMismatchException["A redirect_uri must be supplied."] @TO@ InvalidRequestException["A redirect_uri must be supplied."] @AT@ 2935 @LENGTH@ 65
------UPD SimpleType@@RedirectMismatchException @TO@ InvalidRequestException @AT@ 2939 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:fail("couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)) @TO@ MethodInvocation:fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5162 @LENGTH@ 79
---UPD MethodInvocation@@fail("couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)) @TO@ fail("content not found bundle for " + moduleName + " in "+ asList(bundlesPath)) @AT@ 5162 @LENGTH@ 78
------UPD SimpleName@@MethodName:fail:["couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath)] @TO@ MethodName:fail:["content not found bundle for " + moduleName + " in "+ asList(bundlesPath)] @AT@ 5162 @LENGTH@ 78
---------UPD InfixExpression@@"couln't not find bundle '" + moduleName + "' in "+ asList(bundlesPath) @TO@ "content not found bundle for " + moduleName + " in "+ asList(bundlesPath) @AT@ 5167 @LENGTH@ 72
------------UPD StringLiteral@@"couln't not find bundle '" @TO@ "content not found bundle for " @AT@ 5167 @LENGTH@ 27
------------UPD StringLiteral@@"' in " @TO@ " in " @AT@ 5210 @LENGTH@ 7


UPD FieldDeclaration@@static, final, SensitiveTargetAccessConstraintDefinition, [WEB_VALVE_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",true,false,false))] @TO@ static, final, SensitiveTargetAccessConstraintDefinition, [WEB_VALVE_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",false,false,false))] @AT@ 6207 @LENGTH@ 217
---UPD VariableDeclarationFragment@@WEB_VALVE_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",true,false,false)) @TO@ WEB_VALVE_CONSTRAINT=new SensitiveTargetAccessConstraintDefinition(new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",false,false,false)) @AT@ 6262 @LENGTH@ 161
------UPD ClassInstanceCreation@@SensitiveTargetAccessConstraintDefinition[new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",true,false,false)] @TO@ SensitiveTargetAccessConstraintDefinition[new SensitivityClassification(SUBSYSTEM_NAME,"web-valve",false,false,false)] @AT@ 6285 @LENGTH@ 138
---------UPD ClassInstanceCreation@@SensitivityClassification[SUBSYSTEM_NAME, "web-valve", true, false, false] @TO@ SensitivityClassification[SUBSYSTEM_NAME, "web-valve", false, false, false] @AT@ 6344 @LENGTH@ 78
------------UPD BooleanLiteral@@true @TO@ false @AT@ 6403 @LENGTH@ 4


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(SalesforceEndpoint.class)] @AT@ 1451 @LENGTH@ 84
---DEL Modifier@@private @AT@ 1451 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1459 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1466 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1472 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(SalesforceEndpoint.class) @AT@ 1479 @LENGTH@ 55
------DEL SimpleName@@LOG @AT@ 1479 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(SalesforceEndpoint.class) @AT@ 1485 @LENGTH@ 49
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1485 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[SalesforceEndpoint.class] @AT@ 1499 @LENGTH@ 35
------------DEL TypeLiteral@@SalesforceEndpoint.class @AT@ 1509 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:verify(mockConnection).close() @TO@ MethodInvocation:verify(mockConnection).close(anyInt()) @AT@ 12213 @LENGTH@ 31
---UPD MethodInvocation@@verify(mockConnection).close() @TO@ verify(mockConnection).close(anyInt()) @AT@ 12213 @LENGTH@ 30
------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:close:[anyInt()] @AT@ 12236 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:anyInt:[] @TO@ SimpleName@@MethodName:close:[] @AT@ 12286 @LENGTH@ 8


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResponse,  @AT@ 35294 @LENGTH@ 3601
---UPD ExpressionStatement@@MethodInvocation:op.get(OP).set(ReadResourceHandler.DEFINITION.getName()) @TO@ MethodInvocation:op.get(OP).set(isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS) @AT@ 35411 @LENGTH@ 57
------UPD MethodInvocation@@op.get(OP).set(ReadResourceHandler.DEFINITION.getName()) @TO@ op.get(OP).set(isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS) @AT@ 35411 @LENGTH@ 56
---------UPD SimpleName@@MethodName:set:[ReadResourceHandler.DEFINITION.getName()] @TO@ MethodName:set:[isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS] @AT@ 35422 @LENGTH@ 45
------------DEL MethodInvocation@@ReadResourceHandler.DEFINITION.getName() @AT@ 35426 @LENGTH@ 40
---------------DEL QualifiedName@@Name:ReadResourceHandler.DEFINITION @AT@ 35426 @LENGTH@ 30
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 35457 @LENGTH@ 9
------------INS ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @TO@ SimpleName@@MethodName:set:[ReadResourceHandler.DEFINITION.getName()] @AT@ 35527 @LENGTH@ 121
---------------INS SimpleName@@isDefaultResponse @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35527 @LENGTH@ 17
---------------INS QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35547 @LENGTH@ 53
------------------INS SimpleName@@GlobalOperationHandlers @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @AT@ 35547 @LENGTH@ 23
------------------INS SimpleName@@CHECK_DEFAULT_RESOURCE_ACCESS @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS @AT@ 35571 @LENGTH@ 29
---------------INS QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @TO@ ConditionalExpression@@isDefaultResponse ? GlobalOperationHandlers.CHECK_DEFAULT_RESOURCE_ACCESS : GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35603 @LENGTH@ 45
------------------INS SimpleName@@GlobalOperationHandlers @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35603 @LENGTH@ 23
------------------INS SimpleName@@CHECK_RESOURCE_ACCESS @TO@ QualifiedName@@GlobalOperationHandlers.CHECK_RESOURCE_ACCESS @AT@ 35627 @LENGTH@ 21
---INS SingleVariableDeclaration@@boolean isDefaultResponse @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 35435 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 35435 @LENGTH@ 7
------INS SimpleName@@isDefaultResponse @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 35443 @LENGTH@ 17
---UPD IfStatement@@if (attributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @TO@ if (attributes) {  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @AT@ 37122 @LENGTH@ 1741
------UPD Block@@ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @TO@ ThenBody:{  ImmutableManagementResourceRegistration mrr=authResp.targetResource.getResourceRegistration();  if (!authResp.attributesComplete) {    for (    String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {      TargetAttribute targetAttribute=null;      if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);        authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));      }      for (      Action.ActionEffect actionEffect : ALL) {        AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);        if (authResult == null) {          Action action=authResp.standardAction.limitAction(actionEffect);          if (targetAttribute == null) {            targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);          }          authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);          authResp.addAttributeResult(attr,actionEffect,authResult);        }      }    }    authResp.attributesComplete=true;  }} @AT@ 37138 @LENGTH@ 1725
---------UPD IfStatement@@if (!authResp.attributesComplete) {  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @TO@ if (!authResp.attributesComplete) {  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @AT@ 37261 @LENGTH@ 1592
------------UPD Block@@ThenBody:{  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @TO@ ThenBody:{  for (  String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {    TargetAttribute targetAttribute=null;    if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);      authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));    }    for (    Action.ActionEffect actionEffect : ALL) {      AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);      if (authResult == null) {        Action action=authResp.standardAction.limitAction(actionEffect);        if (targetAttribute == null) {          targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);        }        authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);        authResp.addAttributeResult(attr,actionEffect,authResult);      }    }  }  authResp.attributesComplete=true;} @AT@ 37295 @LENGTH@ 1558
---------------UPD EnhancedForStatement@@for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  TargetAttribute targetAttribute=null;  if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr);    }    Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);    authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));  }  for (  Action.ActionEffect actionEffect : ALL) {    AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);    if (authResult == null) {      Action action=authResp.standardAction.limitAction(actionEffect);      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr);      }      authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);      authResp.addAttributeResult(attr,actionEffect,authResult);    }  }} @TO@ for (String attr : mrr.getAttributeNames(PathAddress.EMPTY_ADDRESS)) {  TargetAttribute targetAttribute=null;  if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);    }    Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);    authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));  }  for (  Action.ActionEffect actionEffect : ALL) {    AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);    if (authResult == null) {      Action action=authResp.standardAction.limitAction(actionEffect);      if (targetAttribute == null) {        targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);      }      authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);      authResp.addAttributeResult(attr,actionEffect,authResult);    }  }} @AT@ 37313 @LENGTH@ 1474
------------------UPD IfStatement@@if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @TO@ if (authResp.getAttributeResult(attr,ActionEffect.ACCESS) == null) {  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @AT@ 37464 @LENGTH@ 533
---------------------UPD Block@@ThenBody:{  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @TO@ ThenBody:{  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  Action action=authResp.standardAction.limitAction(ActionEffect.ACCESS);  authResp.addAttributeResult(attr,ActionEffect.ACCESS,modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute));} @AT@ 37532 @LENGTH@ 465
------------------------UPD IfStatement@@if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 37558 @LENGTH@ 141
---------------------------UPD Block@@ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 37587 @LENGTH@ 112
------------------------------UPD ExpressionStatement@@Assignment:targetAttribute=createTargetAttribute(authResp,attr) @TO@ Assignment:targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37617 @LENGTH@ 56
---------------------------------UPD Assignment@@targetAttribute=createTargetAttribute(authResp,attr) @TO@ targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37617 @LENGTH@ 55
------------------------------------UPD MethodInvocation@@createTargetAttribute(authResp,attr) @TO@ createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 37635 @LENGTH@ 37
---------------------------------------UPD SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @TO@ MethodName:createTargetAttribute:[authResp, attr, isDefaultResponse] @AT@ 37635 @LENGTH@ 37
------------------------------------------INS SimpleName@@isDefaultResponse @TO@ SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @AT@ 37855 @LENGTH@ 17
------------------UPD EnhancedForStatement@@for (Action.ActionEffect actionEffect : ALL) {  AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);  if (authResult == null) {    Action action=authResp.standardAction.limitAction(actionEffect);    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr);    }    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);    authResp.addAttributeResult(attr,actionEffect,authResult);  }} @TO@ for (Action.ActionEffect actionEffect : ALL) {  AuthorizationResult authResult=authResp.getAttributeResult(attr,actionEffect);  if (authResult == null) {    Action action=authResp.standardAction.limitAction(actionEffect);    if (targetAttribute == null) {      targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);    }    authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);    authResp.addAttributeResult(attr,actionEffect,authResult);  }} @AT@ 38018 @LENGTH@ 751
---------------------UPD IfStatement@@if (authResult == null) {  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @TO@ if (authResult == null) {  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @AT@ 38195 @LENGTH@ 552
------------------------UPD Block@@ThenBody:{  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @TO@ ThenBody:{  Action action=authResp.standardAction.limitAction(actionEffect);  if (targetAttribute == null) {    targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);  }  authResult=modelController.getAuthorizer().authorize(getCaller(),callEnvironment,action,targetAttribute);  authResp.addAttributeResult(attr,actionEffect,authResult);} @AT@ 38219 @LENGTH@ 528
---------------------------UPD IfStatement@@if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ if (targetAttribute == null) {  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 38344 @LENGTH@ 149
------------------------------UPD Block@@ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr);} @TO@ ThenBody:{  targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse);} @AT@ 38373 @LENGTH@ 120
---------------------------------UPD ExpressionStatement@@Assignment:targetAttribute=createTargetAttribute(authResp,attr) @TO@ Assignment:targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38407 @LENGTH@ 56
------------------------------------UPD Assignment@@targetAttribute=createTargetAttribute(authResp,attr) @TO@ targetAttribute=createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38407 @LENGTH@ 55
---------------------------------------UPD MethodInvocation@@createTargetAttribute(authResp,attr) @TO@ createTargetAttribute(authResp,attr,isDefaultResponse) @AT@ 38425 @LENGTH@ 37
------------------------------------------UPD SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @TO@ MethodName:createTargetAttribute:[authResp, attr, isDefaultResponse] @AT@ 38425 @LENGTH@ 37
---------------------------------------------INS SimpleName@@isDefaultResponse @TO@ SimpleName@@MethodName:createTargetAttribute:[authResp, attr] @AT@ 38664 @LENGTH@ 17


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCamelProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ExampleCamelProfileTest, FabricTestSupport @AT@ 1542 @LENGTH@ 2353
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleCamelProfileTest, FabricTestSupport @AT@ 1662 @LENGTH@ 49


UPD ExpressionStatement@@Assignment:iterator=IteratorUtils.arrayListIterator(null) @TO@ Assignment:iterator=IteratorUtils.arrayListIterator((Object[])null) @AT@ 10484 @LENGTH@ 49
---UPD Assignment@@iterator=IteratorUtils.arrayListIterator(null) @TO@ iterator=IteratorUtils.arrayListIterator((Object[])null) @AT@ 10484 @LENGTH@ 48
------UPD MethodInvocation@@IteratorUtils.arrayListIterator(null) @TO@ IteratorUtils.arrayListIterator((Object[])null) @AT@ 10495 @LENGTH@ 37
---------UPD SimpleName@@MethodName:arrayListIterator:[null] @TO@ MethodName:arrayListIterator:[(Object[])null] @AT@ 10509 @LENGTH@ 23
------------DEL NullLiteral@@null @AT@ 10527 @LENGTH@ 4
------------INS CastExpression@@(Object[])null @TO@ SimpleName@@MethodName:arrayListIterator:[null] @AT@ 10538 @LENGTH@ 15
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])null @AT@ 10539 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 10539 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ CastExpression@@(Object[])null @AT@ 10549 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @TO@ MethodDeclaration@@public, static, void, MethodName:writeRefs, final File file, final List<String> refs, IOException,  @AT@ 3728 @LENGTH@ 28
---INS MethodInvocation@@mkdir(file.getParentFile()) @TO@ ExpressionStatement@@MethodInvocation:mkdir(file.getParentFile()) @AT@ 3728 @LENGTH@ 27
------INS SimpleName@@MethodName:mkdir:[file.getParentFile()] @TO@ MethodInvocation@@mkdir(file.getParentFile()) @AT@ 3728 @LENGTH@ 27
---------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:mkdir:[file.getParentFile()] @AT@ 3734 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 3734 @LENGTH@ 4
------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 3739 @LENGTH@ 15


DEL FieldDeclaration@@protected, boolean, [single] @AT@ 1533 @LENGTH@ 25
---DEL Modifier@@protected @AT@ 1533 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1543 @LENGTH@ 7
---DEL VariableDeclarationFragment@@single @AT@ 1551 @LENGTH@ 6
------DEL SimpleName@@single @AT@ 1551 @LENGTH@ 6


UPD IfStatement@@if (port > 0 && isFixedPort == false) {  port+=socketBindings.getPortOffset();} @TO@ if (!isFixedPort) {  port+=socketBindings.getPortOffset();} @AT@ 4021 @LENGTH@ 101
---DEL InfixExpression@@port > 0 && isFixedPort == false @AT@ 4025 @LENGTH@ 32
------DEL InfixExpression@@port > 0 @AT@ 4025 @LENGTH@ 8
---------DEL SimpleName@@port @AT@ 4025 @LENGTH@ 4
---------DEL Operator@@> @AT@ 4029 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 4032 @LENGTH@ 1
------DEL Operator@@&& @AT@ 4033 @LENGTH@ 2
------DEL InfixExpression@@isFixedPort == false @AT@ 4037 @LENGTH@ 20
---------DEL SimpleName@@isFixedPort @AT@ 4037 @LENGTH@ 11
---------DEL Operator@@== @AT@ 4048 @LENGTH@ 2
---------DEL BooleanLiteral@@false @AT@ 4052 @LENGTH@ 5
---INS PrefixExpression@@!isFixedPort @TO@ IfStatement@@if (port > 0 && isFixedPort == false) {  port+=socketBindings.getPortOffset();} @AT@ 4025 @LENGTH@ 12
------INS Operator@@! @TO@ PrefixExpression@@!isFixedPort @AT@ 4025 @LENGTH@ 1
------INS SimpleName@@isFixedPort @TO@ PrefixExpression@@!isFixedPort @AT@ 4026 @LENGTH@ 11


UPD IfStatement@@if (service.requiresReload()) {  throw MESSAGES.serverRequiresReload();} @TO@ if (service.requiresRestart()) {  throw MESSAGES.serverRequiresRestart();} @AT@ 2533 @LENGTH@ 92
---UPD MethodInvocation@@service.requiresReload() @TO@ service.requiresRestart() @AT@ 2537 @LENGTH@ 24
------UPD SimpleName@@MethodName:requiresReload:[] @TO@ MethodName:requiresRestart:[] @AT@ 2545 @LENGTH@ 16
---UPD Block@@ThenBody:{  throw MESSAGES.serverRequiresReload();} @TO@ ThenBody:{  throw MESSAGES.serverRequiresRestart();} @AT@ 2563 @LENGTH@ 62
------UPD ThrowStatement@@MethodInvocation:MESSAGES.serverRequiresReload() @TO@ MethodInvocation:MESSAGES.serverRequiresRestart() @AT@ 2577 @LENGTH@ 38
---------UPD MethodInvocation@@MESSAGES.serverRequiresReload() @TO@ MESSAGES.serverRequiresRestart() @AT@ 2583 @LENGTH@ 31
------------UPD SimpleName@@MethodName:serverRequiresReload:[] @TO@ MethodName:serverRequiresRestart:[] @AT@ 2592 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())) @TO@ MethodInvocation:resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())) @AT@ 4702 @LENGTH@ 130
---UPD MethodInvocation@@resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())) @TO@ resourceRegistration.registerSubModel(new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())) @AT@ 4702 @LENGTH@ 129
------UPD SimpleName@@MethodName:registerSubModel:[new JmxAuditLoggerResourceDefinition((ManagedAuditLogger)auditLoggerInfo.getAuditLogger())] @TO@ MethodName:registerSubModel:[new JmxAuditLoggerResourceDefinition(auditLoggerInfo.getAuditLogger())] @AT@ 4723 @LENGTH@ 108
---------UPD ClassInstanceCreation@@JmxAuditLoggerResourceDefinition[(ManagedAuditLogger)auditLoggerInfo.getAuditLogger()] @TO@ JmxAuditLoggerResourceDefinition[auditLoggerInfo.getAuditLogger()] @AT@ 4740 @LENGTH@ 90
------------INS MethodInvocation@@auditLoggerInfo.getAuditLogger() @TO@ ClassInstanceCreation@@JmxAuditLoggerResourceDefinition[(ManagedAuditLogger)auditLoggerInfo.getAuditLogger()] @AT@ 4692 @LENGTH@ 32
---------------MOV SimpleName@@Name:auditLoggerInfo @TO@ MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4797 @LENGTH@ 15
---------------MOV SimpleName@@MethodName:getAuditLogger:[] @TO@ MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4813 @LENGTH@ 16
------------DEL CastExpression@@(ManagedAuditLogger)auditLoggerInfo.getAuditLogger() @AT@ 4777 @LENGTH@ 52
---------------DEL SimpleType@@ManagedAuditLogger @AT@ 4778 @LENGTH@ 18
---------------DEL MethodInvocation@@auditLoggerInfo.getAuditLogger() @AT@ 4797 @LENGTH@ 32


INS MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @TO@ TypeDeclaration@@[public]MongoTemplate, [MongoOperations, ApplicationContextAware] @AT@ 47769 @LENGTH@ 233
---INS Modifier@@public @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47769 @LENGTH@ 6
---INS ParameterizedType@@AggregationResults<T> @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47780 @LENGTH@ 21
------INS SimpleType@@AggregationResults @TO@ ParameterizedType@@AggregationResults<T> @AT@ 47780 @LENGTH@ 18
------INS SimpleType@@T @TO@ ParameterizedType@@AggregationResults<T> @AT@ 47799 @LENGTH@ 1
---INS SimpleName@@MethodName:aggregate @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47802 @LENGTH@ 9
---INS SingleVariableDeclaration@@String inputCollectionName @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47812 @LENGTH@ 26
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String inputCollectionName @AT@ 47812 @LENGTH@ 6
------INS SimpleName@@inputCollectionName @TO@ SingleVariableDeclaration@@String inputCollectionName @AT@ 47819 @LENGTH@ 19
---INS SingleVariableDeclaration@@Class<T> entityClass @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47840 @LENGTH@ 20
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> entityClass @AT@ 47840 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 47840 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 47846 @LENGTH@ 1
------INS SimpleName@@entityClass @TO@ SingleVariableDeclaration@@Class<T> entityClass @AT@ 47849 @LENGTH@ 11
---INS SingleVariableDeclaration@@AggregationOperation... operations @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47862 @LENGTH@ 34
------INS SimpleType@@AggregationOperation @TO@ SingleVariableDeclaration@@AggregationOperation... operations @AT@ 47862 @LENGTH@ 20
------INS SimpleName@@operations @TO@ SingleVariableDeclaration@@AggregationOperation... operations @AT@ 47886 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:aggregate(inputCollectionName,new AggregationPipeline(operations),entityClass) @TO@ MethodDeclaration@@public, AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 47908 @LENGTH@ 88
------INS MethodInvocation@@aggregate(inputCollectionName,new AggregationPipeline(operations),entityClass) @TO@ ReturnStatement@@MethodInvocation:aggregate(inputCollectionName,new AggregationPipeline(operations),entityClass) @AT@ 47915 @LENGTH@ 80
---------INS SimpleName@@MethodName:aggregate:[inputCollectionName, new AggregationPipeline(operations), entityClass] @TO@ MethodInvocation@@aggregate(inputCollectionName,new AggregationPipeline(operations),entityClass) @AT@ 47915 @LENGTH@ 80
------------INS SimpleName@@inputCollectionName @TO@ SimpleName@@MethodName:aggregate:[inputCollectionName, new AggregationPipeline(operations), entityClass] @AT@ 47925 @LENGTH@ 19
------------INS ClassInstanceCreation@@AggregationPipeline[operations] @TO@ SimpleName@@MethodName:aggregate:[inputCollectionName, new AggregationPipeline(operations), entityClass] @AT@ 47946 @LENGTH@ 35
---------------INS New@@new @TO@ ClassInstanceCreation@@AggregationPipeline[operations] @AT@ 47946 @LENGTH@ 3
---------------INS SimpleType@@AggregationPipeline @TO@ ClassInstanceCreation@@AggregationPipeline[operations] @AT@ 47950 @LENGTH@ 19
---------------INS SimpleName@@operations @TO@ ClassInstanceCreation@@AggregationPipeline[operations] @AT@ 47970 @LENGTH@ 10
------------INS SimpleName@@entityClass @TO@ SimpleName@@MethodName:aggregate:[inputCollectionName, new AggregationPipeline(operations), entityClass] @AT@ 47983 @LENGTH@ 11


INS IfStatement@@if (mavenUploadProxyServlet != null) {  this.mavenUploadProxyServlet.stop();} @TO@ MethodDeclaration@@public, void, MethodName:destroy,  @AT@ 6457 @LENGTH@ 97
---INS InfixExpression@@mavenUploadProxyServlet != null @TO@ IfStatement@@if (mavenUploadProxyServlet != null) {  this.mavenUploadProxyServlet.stop();} @AT@ 6461 @LENGTH@ 31
------INS SimpleName@@mavenUploadProxyServlet @TO@ InfixExpression@@mavenUploadProxyServlet != null @AT@ 6461 @LENGTH@ 23
------INS Operator@@!= @TO@ InfixExpression@@mavenUploadProxyServlet != null @AT@ 6484 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@mavenUploadProxyServlet != null @AT@ 6488 @LENGTH@ 4
---INS Block@@ThenBody:{  this.mavenUploadProxyServlet.stop();} @TO@ IfStatement@@if (mavenUploadProxyServlet != null) {  this.mavenUploadProxyServlet.stop();} @AT@ 6494 @LENGTH@ 60
------MOV ExpressionStatement@@MethodInvocation:this.mavenUploadProxyServlet.stop() @TO@ Block@@ThenBody:{  this.mavenUploadProxyServlet.stop();} @AT@ 6393 @LENGTH@ 36


UPD MethodDeclaration@@private, static, void, MethodName:parseAuthorization_1_3, final XMLExtendedStreamReader reader, final Namespace expectedNs, final ModelNode realmAdd, final List<ModelNode> list, XMLStreamException,  @TO@ private, static, void, MethodName:parseAuthorization_1_3, final XMLExtendedStreamReader reader, final Namespace expectedNs, final ModelNode realmAddress, final List<ModelNode> list, XMLStreamException,  @AT@ 78176 @LENGTH@ 1326
---UPD SingleVariableDeclaration@@final ModelNode realmAdd @TO@ final ModelNode realmAddress @AT@ 78297 @LENGTH@ 24
------UPD SimpleName@@realmAdd @TO@ realmAddress @AT@ 78313 @LENGTH@ 8
---DEL VariableDeclarationStatement@@ModelNode realmAddress=realmAdd.get(OP_ADDR); @AT@ 78387 @LENGTH@ 47
------DEL SimpleType@@ModelNode @AT@ 78387 @LENGTH@ 9
------DEL VariableDeclarationFragment@@realmAddress=realmAdd.get(OP_ADDR) @AT@ 78397 @LENGTH@ 36
---------DEL SimpleName@@realmAddress @AT@ 78397 @LENGTH@ 12
---------DEL MethodInvocation@@realmAdd.get(OP_ADDR) @AT@ 78412 @LENGTH@ 21
------------DEL SimpleName@@Name:realmAdd @AT@ 78412 @LENGTH@ 8
------------DEL SimpleName@@MethodName:get:[OP_ADDR] @AT@ 78421 @LENGTH@ 12
---------------DEL SimpleName@@OP_ADDR @AT@ 78425 @LENGTH@ 7


UPD TypeDeclaration@@[public]GitDataStoreTest,  @TO@ [@Ignore("[FABRIC-535] Fix fabric/fabric-git-hawtio tests"), public]GitDataStoreTest,  @AT@ 1698 @LENGTH@ 16480
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-535] Fix fabric/fabric-git-hawtio tests") @TO@ TypeDeclaration@@[public]GitDataStoreTest,  @AT@ 1678 @LENGTH@ 58


UPD IfStatement@@if (configuration.isReflectionProtocol()) requestor=new AvroReflectRequestor(configuration.getProtocol(),transceiver); else requestor=new AvroSpecificRequestor(configuration.getProtocol(),transceiver); @TO@ if (configuration.isReflectionProtocol()) {  requestor=new AvroReflectRequestor(configuration.getProtocol(),transceiver);} else {  requestor=new AvroSpecificRequestor(configuration.getProtocol(),transceiver);} @AT@ 1852 @LENGTH@ 262
---UPD Block@@ThenBody:requestor=new AvroReflectRequestor(configuration.getProtocol(),transceiver); @TO@ ThenBody:{  requestor=new AvroReflectRequestor(configuration.getProtocol(),transceiver);} @AT@ 1913 @LENGTH@ 79
---UPD Block@@ElseBody:requestor=new AvroSpecificRequestor(configuration.getProtocol(),transceiver); @TO@ ElseBody:{  requestor=new AvroSpecificRequestor(configuration.getProtocol(),transceiver);} @AT@ 2034 @LENGTH@ 80


UPD TryStatement@@try {  Git git=getGit();  Repository repository=git.getRepository();  String originalBranch=repository.getBranch();  CredentialsProvider credentialsProvider=getCredentialsProvider();  if (personIdent == null) {    personIdent=new PersonIdent(repository);  }  if (GitHelpers.hasGitHead(git)) {    git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").call();  }  if (pullFirst) {    doPull(git,credentialsProvider);  }  RevCommit statusBefore=CommitUtils.getHead(repository);  GitContext context=new GitContext();  T answer=operation.call(git,context);  boolean requirePush=context.isRequirePush();  if (context.isRequireCommit()) {    requirePush=true;    String message=context.getCommitMessage().toString();    if (message.length() == 0) {      LOG.warn("No commit message from " + operation + ". Please add one! :)");    }    git.commit().setMessage(message).call();  }  git.checkout().setName(originalBranch).call();  if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {    doPush(git,context,credentialsProvider);    fireChangeNotifications();  }  return answer;} catch (Exception e) {  throw new FabricException(e);} @TO@ try {  Git git=getGit();  Repository repository=git.getRepository();  CredentialsProvider credentialsProvider=getCredentialsProvider();  if (personIdent == null) {    personIdent=new PersonIdent(repository);  }  if (GitHelpers.hasGitHead(git)) {    git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").call();  }  if (pullFirst) {    doPull(git,credentialsProvider);  }  String originalBranch=repository.getBranch();  RevCommit statusBefore=CommitUtils.getHead(repository);  GitContext context=new GitContext();  T answer=operation.call(git,context);  boolean requirePush=context.isRequirePush();  if (context.isRequireCommit()) {    requirePush=true;    String message=context.getCommitMessage().toString();    if (message.length() == 0) {      LOG.warn("No commit message from " + operation + ". Please add one! :)");    }    git.commit().setMessage(message).call();  }  git.checkout().setName(originalBranch).call();  if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {    fireChangeNotifications();  }  return answer;} catch (Exception e) {  throw new FabricException(e);} @AT@ 32742 @LENGTH@ 1904
---MOV VariableDeclarationStatement@@String originalBranch=repository.getBranch(); @TO@ TryStatement@@try {  Git git=getGit();  Repository repository=git.getRepository();  String originalBranch=repository.getBranch();  CredentialsProvider credentialsProvider=getCredentialsProvider();  if (personIdent == null) {    personIdent=new PersonIdent(repository);  }  if (GitHelpers.hasGitHead(git)) {    git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").call();  }  if (pullFirst) {    doPull(git,credentialsProvider);  }  RevCommit statusBefore=CommitUtils.getHead(repository);  GitContext context=new GitContext();  T answer=operation.call(git,context);  boolean requirePush=context.isRequirePush();  if (context.isRequireCommit()) {    requirePush=true;    String message=context.getCommitMessage().toString();    if (message.length() == 0) {      LOG.warn("No commit message from " + operation + ". Please add one! :)");    }    git.commit().setMessage(message).call();  }  git.checkout().setName(originalBranch).call();  if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {    doPush(git,context,credentialsProvider);    fireChangeNotifications();  }  return answer;} catch (Exception e) {  throw new FabricException(e);} @AT@ 32861 @LENGTH@ 47
---UPD IfStatement@@if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {  doPush(git,context,credentialsProvider);  fireChangeNotifications();} @TO@ if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {  fireChangeNotifications();} @AT@ 34312 @LENGTH@ 207
------UPD Block@@ThenBody:{  doPush(git,context,credentialsProvider);  fireChangeNotifications();} @TO@ ThenBody:{  fireChangeNotifications();} @AT@ 34390 @LENGTH@ 129
---------DEL ExpressionStatement@@MethodInvocation:doPush(git,context,credentialsProvider) @AT@ 34412 @LENGTH@ 42
------------DEL MethodInvocation@@doPush(git,context,credentialsProvider) @AT@ 34412 @LENGTH@ 41
---------------DEL SimpleName@@MethodName:doPush:[git, context, credentialsProvider] @AT@ 34412 @LENGTH@ 41
------------------DEL SimpleName@@git @AT@ 34419 @LENGTH@ 3
------------------DEL SimpleName@@context @AT@ 34424 @LENGTH@ 7
------------------DEL SimpleName@@credentialsProvider @AT@ 34433 @LENGTH@ 19


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EnsembleTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]EnsembleTest, FabricTestSupport @AT@ 1961 @LENGTH@ 14365
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EnsembleTest, FabricTestSupport @AT@ 2054 @LENGTH@ 49


UPD IfStatement@@if (endpointHandlers.size() > 0) {  mapping.registerEndpointHandlers(endpointClass,endpointHandlers);} @TO@ if (endpointHandlers.size() > 0) {  mapping.registerEndpointHandlers(endpointClass,endpointHandlers);} else {  WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile);} @AT@ 6399 @LENGTH@ 131
---INS Block@@ElseBody:{  WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile);} @TO@ IfStatement@@if (endpointHandlers.size() > 0) {  mapping.registerEndpointHandlers(endpointClass,endpointHandlers);} @AT@ 6578 @LENGTH@ 101
------INS ExpressionStatement@@MethodInvocation:WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile) @TO@ Block@@ElseBody:{  WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile);} @AT@ 6596 @LENGTH@ 69
---------INS MethodInvocation@@WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile) @TO@ ExpressionStatement@@MethodInvocation:WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile) @AT@ 6596 @LENGTH@ 68
------------INS QualifiedName@@Name:WSLogger.ROOT_LOGGER @TO@ MethodInvocation@@WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile) @AT@ 6596 @LENGTH@ 20
------------INS SimpleName@@MethodName:invalidHandlerChainFile:[handlerChainConfigFile] @TO@ MethodInvocation@@WSLogger.ROOT_LOGGER.invalidHandlerChainFile(handlerChainConfigFile) @AT@ 6617 @LENGTH@ 47
---------------INS SimpleName@@handlerChainConfigFile @TO@ SimpleName@@MethodName:invalidHandlerChainFile:[handlerChainConfigFile] @AT@ 6641 @LENGTH@ 22


UPD VariableDeclarationStatement@@OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null); @TO@ OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null); @AT@ 3903 @LENGTH@ 161
---UPD VariableDeclarationFragment@@clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null) @TO@ clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null) @AT@ 3917 @LENGTH@ 146
------UPD MethodInvocation@@RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null) @TO@ RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null) @AT@ 3940 @LENGTH@ 123
---------UPD SimpleName@@MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null] @TO@ MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null, null] @AT@ 3960 @LENGTH@ 103
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null] @AT@ 4064 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]Input,  @TO@ [public]Input,  @AT@ 1626 @LENGTH@ 1396
---DEL Modifier@@static @AT@ 1633 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:answer.setHeaders(inputMessage.getHeaders()) @TO@ MethodInvocation:answer.getHeaders().putAll(inputMessage.getHeaders()) @AT@ 3626 @LENGTH@ 45
---UPD MethodInvocation@@answer.setHeaders(inputMessage.getHeaders()) @TO@ answer.getHeaders().putAll(inputMessage.getHeaders()) @AT@ 3626 @LENGTH@ 44
------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@answer.setHeaders(inputMessage.getHeaders()) @AT@ 3626 @LENGTH@ 19
------UPD SimpleName@@MethodName:setHeaders:[inputMessage.getHeaders()] @TO@ MethodName:putAll:[inputMessage.getHeaders()] @AT@ 3633 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:testToPrimitive,  @TO@ TypeDeclaration@@[public]TestDefaultConversionHandler,  @AT@ 10562 @LENGTH@ 214
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10562 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10569 @LENGTH@ 4
---INS SimpleName@@MethodName:testToPrimitive @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10574 @LENGTH@ 15
---INS VariableDeclarationStatement@@Long value=20130819214935L; @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10606 @LENGTH@ 29
------INS SimpleType@@Long @TO@ VariableDeclarationStatement@@Long value=20130819214935L; @AT@ 10606 @LENGTH@ 4
------INS VariableDeclarationFragment@@value=20130819214935L @TO@ VariableDeclarationStatement@@Long value=20130819214935L; @AT@ 10611 @LENGTH@ 23
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=20130819214935L @AT@ 10611 @LENGTH@ 5
---------INS NumberLiteral@@20130819214935L @TO@ VariableDeclarationFragment@@value=20130819214935L @AT@ 10619 @LENGTH@ 15
---INS VariableDeclarationStatement@@Object result=handler.to(value.toString(),Long.TYPE,null); @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10644 @LENGTH@ 62
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=handler.to(value.toString(),Long.TYPE,null); @AT@ 10644 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=handler.to(value.toString(),Long.TYPE,null) @TO@ VariableDeclarationStatement@@Object result=handler.to(value.toString(),Long.TYPE,null); @AT@ 10651 @LENGTH@ 54
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=handler.to(value.toString(),Long.TYPE,null) @AT@ 10651 @LENGTH@ 6
---------INS MethodInvocation@@handler.to(value.toString(),Long.TYPE,null) @TO@ VariableDeclarationFragment@@result=handler.to(value.toString(),Long.TYPE,null) @AT@ 10660 @LENGTH@ 45
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.to(value.toString(),Long.TYPE,null) @AT@ 10660 @LENGTH@ 7
------------INS SimpleName@@MethodName:to:[value.toString(), Long.TYPE, null] @TO@ MethodInvocation@@handler.to(value.toString(),Long.TYPE,null) @AT@ 10668 @LENGTH@ 37
---------------INS MethodInvocation@@value.toString() @TO@ SimpleName@@MethodName:to:[value.toString(), Long.TYPE, null] @AT@ 10671 @LENGTH@ 16
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 10671 @LENGTH@ 5
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 10677 @LENGTH@ 10
---------------INS QualifiedName@@Long.TYPE @TO@ SimpleName@@MethodName:to:[value.toString(), Long.TYPE, null] @AT@ 10689 @LENGTH@ 9
------------------INS SimpleName@@Long @TO@ QualifiedName@@Long.TYPE @AT@ 10689 @LENGTH@ 4
------------------INS SimpleName@@TYPE @TO@ QualifiedName@@Long.TYPE @AT@ 10694 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:to:[value.toString(), Long.TYPE, null] @AT@ 10700 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong conversion result",value,result) @TO@ MethodDeclaration@@public, void, MethodName:testToPrimitive,  @AT@ 10715 @LENGTH@ 55
------INS MethodInvocation@@assertEquals("Wrong conversion result",value,result) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong conversion result",value,result) @AT@ 10715 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertEquals:["Wrong conversion result", value, result] @TO@ MethodInvocation@@assertEquals("Wrong conversion result",value,result) @AT@ 10715 @LENGTH@ 54
------------INS StringLiteral@@"Wrong conversion result" @TO@ SimpleName@@MethodName:assertEquals:["Wrong conversion result", value, result] @AT@ 10728 @LENGTH@ 25
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertEquals:["Wrong conversion result", value, result] @AT@ 10755 @LENGTH@ 5
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertEquals:["Wrong conversion result", value, result] @AT@ 10762 @LENGTH@ 6


UPD MethodDeclaration@@OperationFailedException, MethodName:serverRequiresReload,  @TO@ OperationFailedException, MethodName:serverRequiresRestart,  @AT@ 4776 @LENGTH@ 23
---UPD SimpleName@@MethodName:serverRequiresReload @TO@ MethodName:serverRequiresRestart @AT@ 4776 @LENGTH@ 20


UPD VariableDeclarationStatement@@MapJoinOperator mapJoinOp=MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true,false); @TO@ MapJoinOperator mapJoinOp=MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true); @AT@ 5679 @LENGTH@ 207
---UPD VariableDeclarationFragment@@mapJoinOp=MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true,false) @TO@ mapJoinOp=MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true) @AT@ 5695 @LENGTH@ 190
------UPD MethodInvocation@@MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true,false) @TO@ MapJoinProcessor.convertJoinOpMapJoinOp(context.conf,parseContext.getOpParseCtx(),joinOp,parseContext.getJoinContext().get(joinOp),bigTablePosition,true) @AT@ 5707 @LENGTH@ 178
---------UPD SimpleName@@MethodName:convertJoinOpMapJoinOp:[context.conf, parseContext.getOpParseCtx(), joinOp, parseContext.getJoinContext().get(joinOp), bigTablePosition, true, false] @TO@ MethodName:convertJoinOpMapJoinOp:[context.conf, parseContext.getOpParseCtx(), joinOp, parseContext.getJoinContext().get(joinOp), bigTablePosition, true] @AT@ 5731 @LENGTH@ 154
------------DEL BooleanLiteral@@false @AT@ 5879 @LENGTH@ 5


UPD ForStatement@@for (int i=0; i < 100; i++) {  String out=template.requestBody("netty-http:http://localhost:{{port}}/foo?param" + i + "=value"+ i,"Hello World",String.class);  assertEquals("param" + i + "=value"+ i,out);} @TO@ for (int i=0; i < 10; i++) {  String out=template.requestBody("netty-http:http://localhost:{{port}}/foo?param" + i + "=value"+ i,"Hello World",String.class);  assertEquals("param" + i + "=value"+ i,out);} @AT@ 1827 @LENGTH@ 245
---UPD InfixExpression@@i < 100 @TO@ i < 10 @AT@ 1843 @LENGTH@ 7
------UPD NumberLiteral@@100 @TO@ 10 @AT@ 1847 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(Double.valueOf(Double.valueOf((String)v1) + 3.4),map.increment(k1,3.4)) @TO@ MethodInvocation:assertEquals(twoDForm.format(Double.valueOf((String)v1) + 3.4),twoDForm.format(map.increment(k1,3.4))) @AT@ 6391 @LENGTH@ 87
---UPD MethodInvocation@@assertEquals(Double.valueOf(Double.valueOf((String)v1) + 3.4),map.increment(k1,3.4)) @TO@ assertEquals(twoDForm.format(Double.valueOf((String)v1) + 3.4),twoDForm.format(map.increment(k1,3.4))) @AT@ 6391 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertEquals:[Double.valueOf(Double.valueOf((String)v1) + 3.4), map.increment(k1,3.4)] @TO@ MethodName:assertEquals:[twoDForm.format(Double.valueOf((String)v1) + 3.4), twoDForm.format(map.increment(k1,3.4))] @AT@ 6391 @LENGTH@ 86
---------UPD MethodInvocation@@Double.valueOf(Double.valueOf((String)v1) + 3.4) @TO@ twoDForm.format(Double.valueOf((String)v1) + 3.4) @AT@ 6404 @LENGTH@ 48
------------UPD SimpleName@@Name:Double @TO@ Name:twoDForm @AT@ 6404 @LENGTH@ 6
------------UPD SimpleName@@MethodName:valueOf:[Double.valueOf((String)v1) + 3.4] @TO@ MethodName:format:[Double.valueOf((String)v1) + 3.4] @AT@ 6411 @LENGTH@ 41
---------INS MethodInvocation@@twoDForm.format(map.increment(k1,3.4)) @TO@ SimpleName@@MethodName:assertEquals:[Double.valueOf(Double.valueOf((String)v1) + 3.4), map.increment(k1,3.4)] @AT@ 6541 @LENGTH@ 39
------------INS SimpleName@@Name:twoDForm @TO@ MethodInvocation@@twoDForm.format(map.increment(k1,3.4)) @AT@ 6541 @LENGTH@ 8
------------INS SimpleName@@MethodName:format:[map.increment(k1,3.4)] @TO@ MethodInvocation@@twoDForm.format(map.increment(k1,3.4)) @AT@ 6550 @LENGTH@ 30
---------------MOV MethodInvocation@@map.increment(k1,3.4) @TO@ SimpleName@@MethodName:format:[map.increment(k1,3.4)] @AT@ 6454 @LENGTH@ 22
---------------MOV MethodInvocation@@map.increment(k1,3.4) @TO@ SimpleName@@MethodName:format:[map.increment(k1,3.4)] @AT@ 6454 @LENGTH@ 22


UPD IfStatement@@if (cd.getTabAlias().equalsIgnoreCase(epc.getTabAlias()) && cd.getIsPartitionColOrVirtualCol()) {  newcd=cd.clone();} else {  newcd=new ExprNodeConstantDesc(cd.getTypeInfo(),null);  epc.setHasNonPartCols(true);} @TO@ if (cd.getTabAlias().equalsIgnoreCase(epc.getTabAlias()) && cd.getIsPartitionColOrVirtualCol()) {  newcd=cd.clone();} else {  newcd=new ExprNodeConstantDesc(cd.getTypeInfo(),null);} @AT@ 2436 @LENGTH@ 261
---UPD Block@@ElseBody:{  newcd=new ExprNodeConstantDesc(cd.getTypeInfo(),null);  epc.setHasNonPartCols(true);} @TO@ ElseBody:{  newcd=new ExprNodeConstantDesc(cd.getTypeInfo(),null);} @AT@ 2585 @LENGTH@ 112
------DEL ExpressionStatement@@MethodInvocation:epc.setHasNonPartCols(true) @AT@ 2661 @LENGTH@ 28
---------DEL MethodInvocation@@epc.setHasNonPartCols(true) @AT@ 2661 @LENGTH@ 27
------------DEL SimpleName@@Name:epc @AT@ 2661 @LENGTH@ 3
------------DEL SimpleName@@MethodName:setHasNonPartCols:[true] @AT@ 2665 @LENGTH@ 23
---------------DEL BooleanLiteral@@true @AT@ 2683 @LENGTH@ 4


UPD ReturnStatement@@NullLiteral:null @TO@ ClassInstanceCreation:new HashSet<Class<? extends Annotation>>() @AT@ 3941 @LENGTH@ 12
---INS ClassInstanceCreation@@HashSet<Class<? extends Annotation>>[] @TO@ ReturnStatement@@NullLiteral:null @AT@ 3948 @LENGTH@ 42
------INS New@@new @TO@ ClassInstanceCreation@@HashSet<Class<? extends Annotation>>[] @AT@ 3948 @LENGTH@ 3
------INS ParameterizedType@@HashSet<Class<? extends Annotation>> @TO@ ClassInstanceCreation@@HashSet<Class<? extends Annotation>>[] @AT@ 3952 @LENGTH@ 36
---------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<Class<? extends Annotation>> @AT@ 3952 @LENGTH@ 7
---------INS ParameterizedType@@Class<? extends Annotation> @TO@ ParameterizedType@@HashSet<Class<? extends Annotation>> @AT@ 3960 @LENGTH@ 27
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Annotation> @AT@ 3960 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Annotation> @AT@ 3966 @LENGTH@ 20
---DEL NullLiteral@@null @AT@ 3948 @LENGTH@ 4


UPD IfStatement@@if (resultAction == OperationContext.ResultAction.KEEP) {  service.reloadRequired();  context.restartRequired();  result.commit();} else {  result.rollback();} @TO@ if (resultAction == OperationContext.ResultAction.KEEP) {  result.commit();} else {  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3576 @LENGTH@ 292
---UPD Block@@ThenBody:{  service.reloadRequired();  context.restartRequired();  result.commit();} @TO@ ThenBody:{  result.commit();} @AT@ 3631 @LENGTH@ 165
------DEL ExpressionStatement@@MethodInvocation:service.reloadRequired() @AT@ 3657 @LENGTH@ 25
---------DEL MethodInvocation@@service.reloadRequired() @AT@ 3657 @LENGTH@ 24
------------DEL SimpleName@@Name:service @AT@ 3657 @LENGTH@ 7
------------DEL SimpleName@@MethodName:reloadRequired:[] @AT@ 3665 @LENGTH@ 16
---UPD Block@@ElseBody:{  result.rollback();} @TO@ ElseBody:{  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3802 @LENGTH@ 66
------INS ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3807 @LENGTH@ 31
---------INS MethodInvocation@@service.clearRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @AT@ 3807 @LENGTH@ 30
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3807 @LENGTH@ 7
------------INS SimpleName@@MethodName:clearRestartRequired:[] @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3815 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3863 @LENGTH@ 32
---------INS MethodInvocation@@context.revertRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @AT@ 3863 @LENGTH@ 31
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3863 @LENGTH@ 7
------------INS SimpleName@@MethodName:revertRestartRequired:[] @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3871 @LENGTH@ 23


UPD ReturnStatement@@InfixExpression:path.equals(ZkPath.CONFIG_ENSEMBLES.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_URL.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath())|| path.equals(ZkPath.CONFIG_CONTAINER.getPath(NAME)) @TO@ InfixExpression:path.equals(ZkPath.CONFIG_ENSEMBLES.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_URL.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath())|| path.equals(ZkPath.CONFIG_CONTAINER.getPath(NAME))|| (currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME))) @AT@ 7943 @LENGTH@ 255
---UPD InfixExpression@@path.equals(ZkPath.CONFIG_ENSEMBLES.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_URL.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath())|| path.equals(ZkPath.CONFIG_CONTAINER.getPath(NAME)) @TO@ path.equals(ZkPath.CONFIG_ENSEMBLES.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_URL.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath())|| path.equals(ZkPath.CONFIG_CONTAINER.getPath(NAME))|| (currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME))) @AT@ 7950 @LENGTH@ 247
------INS ParenthesizedExpression@@(currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME))) @TO@ InfixExpression@@path.equals(ZkPath.CONFIG_ENSEMBLES.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_URL.getPath()) || path.equals(ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath())|| path.equals(ZkPath.CONFIG_CONTAINER.getPath(NAME)) @AT@ 8276 @LENGTH@ 103
---------INS InfixExpression@@currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @TO@ ParenthesizedExpression@@(currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME))) @AT@ 8277 @LENGTH@ 101
------------INS InfixExpression@@currentVersion != null @TO@ InfixExpression@@currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @AT@ 8277 @LENGTH@ 22
---------------INS SimpleName@@currentVersion @TO@ InfixExpression@@currentVersion != null @AT@ 8277 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@currentVersion != null @AT@ 8291 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@currentVersion != null @AT@ 8295 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @AT@ 8299 @LENGTH@ 2
------------INS MethodInvocation@@path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @TO@ InfixExpression@@currentVersion != null && path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @AT@ 8303 @LENGTH@ 75
---------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @AT@ 8303 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:[ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)] @TO@ MethodInvocation@@path.equals(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)) @AT@ 8308 @LENGTH@ 70
------------------INS MethodInvocation@@ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME) @TO@ SimpleName@@MethodName:equals:[ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME)] @AT@ 8315 @LENGTH@ 62
---------------------INS QualifiedName@@Name:ZkPath.CONFIG_VERSIONS_CONTAINER @TO@ MethodInvocation@@ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME) @AT@ 8315 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:getPath:[currentVersion, NAME] @TO@ MethodInvocation@@ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(currentVersion,NAME) @AT@ 8348 @LENGTH@ 29
------------------------INS SimpleName@@currentVersion @TO@ SimpleName@@MethodName:getPath:[currentVersion, NAME] @AT@ 8356 @LENGTH@ 14
------------------------INS SimpleName@@NAME @TO@ SimpleName@@MethodName:getPath:[currentVersion, NAME] @AT@ 8372 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo(ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN")).andExpect(method(GET)).andRespond(withSuccess(new ClassPathResource("testdata/profile_full.json",getClass()),MediaType.APPLICATION_JSON)) @TO@ MethodInvocation:mockServer.expect(requestTo(LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN")).andExpect(method(GET)).andRespond(withSuccess(new ClassPathResource("testdata/profile_full.json",getClass()),MediaType.APPLICATION_JSON)) @AT@ 2474 @LENGTH@ 275
---UPD MethodInvocation@@mockServer.expect(requestTo(ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN")).andExpect(method(GET)).andRespond(withSuccess(new ClassPathResource("testdata/profile_full.json",getClass()),MediaType.APPLICATION_JSON)) @TO@ mockServer.expect(requestTo(LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN")).andExpect(method(GET)).andRespond(withSuccess(new ClassPathResource("testdata/profile_full.json",getClass()),MediaType.APPLICATION_JSON)) @AT@ 2474 @LENGTH@ 274
------UPD MethodInvocation@@MethodName:expect:[requestTo(ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN")] @TO@ MethodName:expect:[requestTo(LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN")] @AT@ 2474 @LENGTH@ 130
---------UPD MethodInvocation@@requestTo(ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN") @TO@ requestTo(LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN") @AT@ 2492 @LENGTH@ 111
------------UPD SimpleName@@MethodName:requestTo:[ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN"] @TO@ MethodName:requestTo:[LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN"] @AT@ 2492 @LENGTH@ 111
---------------UPD InfixExpression@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN" @TO@ LinkedInTemplate.BASE_URL + "~" + ProfileTemplate.FULL_PROFILE_FIELDS+ "&oauth2_access_token=ACCESS_TOKEN" @AT@ 2502 @LENGTH@ 100
------------------DEL MethodInvocation@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") @AT@ 2502 @LENGTH@ 62
---------------------DEL QualifiedName@@Name:ProfileTemplate.PROFILE_URL_FULL @AT@ 2502 @LENGTH@ 32
---------------------DEL SimpleName@@MethodName:replaceFirst:["\\{id\\}", "~"] @AT@ 2535 @LENGTH@ 29
------------------------DEL StringLiteral@@"\\{id\\}" @AT@ 2548 @LENGTH@ 10
------------------------DEL StringLiteral@@"~" @AT@ 2560 @LENGTH@ 3
------------------INS QualifiedName@@LinkedInTemplate.BASE_URL @TO@ InfixExpression@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN" @AT@ 2502 @LENGTH@ 25
---------------------INS SimpleName@@LinkedInTemplate @TO@ QualifiedName@@LinkedInTemplate.BASE_URL @AT@ 2502 @LENGTH@ 16
---------------------INS SimpleName@@BASE_URL @TO@ QualifiedName@@LinkedInTemplate.BASE_URL @AT@ 2519 @LENGTH@ 8
------------------INS Operator@@+ @TO@ InfixExpression@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN" @AT@ 2527 @LENGTH@ 1
------------------INS StringLiteral@@"~" @TO@ InfixExpression@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN" @AT@ 2530 @LENGTH@ 3
------------------INS QualifiedName@@ProfileTemplate.FULL_PROFILE_FIELDS @TO@ InfixExpression@@ProfileTemplate.PROFILE_URL_FULL.replaceFirst("\\{id\\}","~") + "&oauth2_access_token=ACCESS_TOKEN" @AT@ 2536 @LENGTH@ 35
---------------------INS SimpleName@@ProfileTemplate @TO@ QualifiedName@@ProfileTemplate.FULL_PROFILE_FIELDS @AT@ 2536 @LENGTH@ 15
---------------------INS SimpleName@@FULL_PROFILE_FIELDS @TO@ QualifiedName@@ProfileTemplate.FULL_PROFILE_FIELDS @AT@ 2552 @LENGTH@ 19
------------------DEL Operator@@+ @AT@ 2564 @LENGTH@ 1


INS IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @TO@ MethodDeclaration@@PatchingResult, MethodName:finish, final Patch patch, PatchingException,  @AT@ 10930 @LENGTH@ 772
---INS PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @TO@ IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10934 @LENGTH@ 42
------INS Operator@@! @TO@ PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10934 @LENGTH@ 1
------INS MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @TO@ PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10935 @LENGTH@ 41
---------INS QualifiedName@@Name:PatchInfo.BASE @TO@ MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10935 @LENGTH@ 14
---------INS SimpleName@@MethodName:equals:[patch.getPatchId()] @TO@ MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10950 @LENGTH@ 26
------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:equals:[patch.getPatchId()] @AT@ 10957 @LENGTH@ 18
---------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 10957 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 10963 @LENGTH@ 12
---INS Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @TO@ IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10978 @LENGTH@ 724
------INS VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10992 @LENGTH@ 108
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 10992 @LENGTH@ 5
---------INS SimpleType@@File @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 10998 @LENGTH@ 4
---------INS VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 11003 @LENGTH@ 96
------------INS SimpleName@@appliedPatchXml @TO@ VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @AT@ 11003 @LENGTH@ 15
------------INS ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @TO@ VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @AT@ 11021 @LENGTH@ 78
---------------INS New@@new @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11021 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11025 @LENGTH@ 4
---------------INS MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11030 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11030 @LENGTH@ 21
------------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11030 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getPatchDirectory:[patchId] @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11052 @LENGTH@ 26
---------------------INS SimpleName@@patchId @TO@ SimpleName@@MethodName:getPatchDirectory:[patchId] @AT@ 11070 @LENGTH@ 7
---------------INS QualifiedName@@PatchXml.PATCH_XML @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11080 @LENGTH@ 18
------------------INS SimpleName@@PatchXml @TO@ QualifiedName@@PatchXml.PATCH_XML @AT@ 11080 @LENGTH@ 8
------------------INS SimpleName@@PATCH_XML @TO@ QualifiedName@@PatchXml.PATCH_XML @AT@ 11089 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:appliedPatchXml.getParentFile().mkdir() @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 11199 @LENGTH@ 40
---------INS MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @TO@ ExpressionStatement@@MethodInvocation:appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 31
------------INS SimpleName@@Name:appliedPatchXml @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 15
------------INS SimpleName@@MethodName:mkdir:[] @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11231 @LENGTH@ 7
------INS TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 11252 @LENGTH@ 440
---------INS VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11274 @LENGTH@ 62
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11274 @LENGTH@ 5
------------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11280 @LENGTH@ 12
------------INS VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11293 @LENGTH@ 42
---------------INS SimpleName@@os @TO@ VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @AT@ 11293 @LENGTH@ 2
---------------INS ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @TO@ VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @AT@ 11298 @LENGTH@ 37
------------------INS New@@new @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11298 @LENGTH@ 3
------------------INS SimpleType@@FileOutputStream @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11302 @LENGTH@ 16
------------------INS SimpleName@@appliedPatchXml @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11319 @LENGTH@ 15
---------INS TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11353 @LENGTH@ 146
------------INS ExpressionStatement@@MethodInvocation:PatchXml.marshal(os,patch) @TO@ TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @AT@ 11379 @LENGTH@ 28
---------------INS MethodInvocation@@PatchXml.marshal(os,patch) @TO@ ExpressionStatement@@MethodInvocation:PatchXml.marshal(os,patch) @AT@ 11379 @LENGTH@ 27
------------------INS SimpleName@@Name:PatchXml @TO@ MethodInvocation@@PatchXml.marshal(os,patch) @AT@ 11379 @LENGTH@ 8
------------------INS SimpleName@@MethodName:marshal:[os, patch] @TO@ MethodInvocation@@PatchXml.marshal(os,patch) @AT@ 11388 @LENGTH@ 18
---------------------INS SimpleName@@os @TO@ SimpleName@@MethodName:marshal:[os, patch] @AT@ 11396 @LENGTH@ 2
---------------------INS SimpleName@@patch @TO@ SimpleName@@MethodName:marshal:[os, patch] @AT@ 11400 @LENGTH@ 5
------------INS Block@@FinallyBody:{  PatchUtils.safeClose(os);} @TO@ TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @AT@ 11434 @LENGTH@ 65
---------------INS ExpressionStatement@@MethodInvocation:PatchUtils.safeClose(os) @TO@ Block@@FinallyBody:{  PatchUtils.safeClose(os);} @AT@ 11456 @LENGTH@ 25
------------------INS MethodInvocation@@PatchUtils.safeClose(os) @TO@ ExpressionStatement@@MethodInvocation:PatchUtils.safeClose(os) @AT@ 11456 @LENGTH@ 24
---------------------INS SimpleName@@Name:PatchUtils @TO@ MethodInvocation@@PatchUtils.safeClose(os) @AT@ 11456 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:safeClose:[os] @TO@ MethodInvocation@@PatchUtils.safeClose(os) @AT@ 11467 @LENGTH@ 13
------------------------INS SimpleName@@os @TO@ SimpleName@@MethodName:safeClose:[os] @AT@ 11477 @LENGTH@ 2
---------INS CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11514 @LENGTH@ 92
------------INS SingleVariableDeclaration@@XMLStreamException e @TO@ CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @AT@ 11521 @LENGTH@ 20
---------------INS SimpleType@@XMLStreamException @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 11521 @LENGTH@ 18
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 11540 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @TO@ CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @AT@ 11561 @LENGTH@ 31
---------------INS ClassInstanceCreation@@PatchingException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @AT@ 11567 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11567 @LENGTH@ 3
------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11571 @LENGTH@ 17
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11589 @LENGTH@ 1
---------INS CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11607 @LENGTH@ 85
------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @AT@ 11614 @LENGTH@ 13
---------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 11614 @LENGTH@ 11
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 11626 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @TO@ CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @AT@ 11647 @LENGTH@ 31
---------------INS ClassInstanceCreation@@PatchingException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @AT@ 11653 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11653 @LENGTH@ 3
------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11657 @LENGTH@ 17
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11675 @LENGTH@ 1


UPD IfStatement@@if ((jdbcURI.getPath().equals("")) && (jdbcURI.getHost() == null)) {  throw new IllegalArgumentException("Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>");} @TO@ if ((jdbcURI.getAuthority() != null) && (jdbcURI.getHost() == null)) {  throw new IllegalArgumentException("Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?");} @AT@ 6716 @LENGTH@ 205
---UPD InfixExpression@@(jdbcURI.getPath().equals("")) && (jdbcURI.getHost() == null) @TO@ (jdbcURI.getAuthority() != null) && (jdbcURI.getHost() == null) @AT@ 6719 @LENGTH@ 59
------UPD ParenthesizedExpression@@(jdbcURI.getPath().equals("")) @TO@ (jdbcURI.getAuthority() != null) @AT@ 6719 @LENGTH@ 30
---------DEL MethodInvocation@@jdbcURI.getPath().equals("") @AT@ 6720 @LENGTH@ 28
------------DEL MethodInvocation@@MethodName:getPath:[] @AT@ 6720 @LENGTH@ 17
---------INS InfixExpression@@jdbcURI.getAuthority() != null @TO@ ParenthesizedExpression@@(jdbcURI.getPath().equals("")) @AT@ 6860 @LENGTH@ 30
------------INS MethodInvocation@@jdbcURI.getAuthority() @TO@ InfixExpression@@jdbcURI.getAuthority() != null @AT@ 6860 @LENGTH@ 22
---------------MOV SimpleName@@Name:jdbcURI @TO@ MethodInvocation@@jdbcURI.getAuthority() @AT@ 6720 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:equals:[""] @TO@ MethodInvocation@@jdbcURI.getAuthority() @AT@ 6738 @LENGTH@ 10
------------------DEL StringLiteral@@"" @AT@ 6745 @LENGTH@ 2
------------INS Operator@@!= @TO@ InfixExpression@@jdbcURI.getAuthority() != null @AT@ 6882 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@jdbcURI.getAuthority() != null @AT@ 6886 @LENGTH@ 4
---UPD Block@@ThenBody:{  throw new IllegalArgumentException("Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>");} @TO@ ThenBody:{  throw new IllegalArgumentException("Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?");} @AT@ 6779 @LENGTH@ 142
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>") @TO@ ClassInstanceCreation:new IllegalArgumentException("Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?") @AT@ 6788 @LENGTH@ 127
---------UPD ClassInstanceCreation@@IllegalArgumentException["Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>"] @TO@ IllegalArgumentException["Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?"] @AT@ 6794 @LENGTH@ 120
------------DEL StringLiteral@@"Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>" @AT@ 6823 @LENGTH@ 90
------------INS InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?" @TO@ ClassInstanceCreation@@IllegalArgumentException["Bad URL format and it should be in the format of jdbc:hive2://<hostame>:<port>/<DB_name>"] @AT@ 6965 @LENGTH@ 169
---------------INS InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?" @AT@ 6965 @LENGTH@ 84
------------------INS StringLiteral@@"Bad URL format. Hostname not found " @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " @AT@ 6965 @LENGTH@ 37
------------------INS Operator@@+ @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " @AT@ 7002 @LENGTH@ 1
------------------INS StringLiteral@@" in authority part of the url: " @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " @AT@ 7016 @LENGTH@ 33
---------------INS Operator@@+ @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?" @AT@ 7049 @LENGTH@ 1
---------------INS MethodInvocation@@jdbcURI.getAuthority() @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?" @AT@ 7052 @LENGTH@ 22
------------------INS SimpleName@@Name:jdbcURI @TO@ MethodInvocation@@jdbcURI.getAuthority() @AT@ 7052 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getAuthority:[] @TO@ MethodInvocation@@jdbcURI.getAuthority() @AT@ 7060 @LENGTH@ 14
---------------INS StringLiteral@@". Are you missing a '/' after the hostname ?" @TO@ InfixExpression@@"Bad URL format. Hostname not found " + " in authority part of the url: " + jdbcURI.getAuthority() + ". Are you missing a '/' after the hostname ?" @AT@ 7088 @LENGTH@ 46


UPD TryStatement@@try {  idGeneratorPort=Integer.parseInt(System.getProperty(PROPERTY_IDGENERATOR_PORT,"0"));  LOG.trace("Using port {}",idGeneratorPort);  hostName=InetAddressUtil.getLocalHostName();  ss=new ServerSocket(idGeneratorPort);  stub="-" + ss.getLocalPort() + "-"+ System.currentTimeMillis()+ "-";  Thread.sleep(100);  ss.close();} catch (Exception ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Cannot generate unique stub by using DNS and binding to local port: " + idGeneratorPort,ioe);  } else {    LOG.warn("Cannot generate unique stub by using DNS and binding to local port: " + idGeneratorPort + " due "+ ioe.getMessage());  }} finally {  IOHelper.close(ss);} @TO@ try {  idGeneratorPort=Integer.parseInt(System.getProperty(PROPERTY_IDGENERATOR_PORT,"0"));  LOG.trace("Using port {}",idGeneratorPort);  hostName=InetAddressUtil.getLocalHostName();  ss=new ServerSocket(idGeneratorPort);  stub="-" + ss.getLocalPort() + "-"+ System.currentTimeMillis()+ "-";  Thread.sleep(100);  ss.close();} catch (Exception ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Cannot generate unique stub by using DNS and binding to local port: " + idGeneratorPort,ioe);  } else {    LOG.warn("Cannot generate unique stub by using DNS and binding to local port: " + idGeneratorPort + " due "+ ioe.getMessage());  }} finally {  try {    ss.close();  } catch (  IOException ioe) {    if (LOG.isTraceEnabled()) {      LOG.trace("Closing the server socket failed",ioe);    } else {      LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());    }  }} @AT@ 2651 @LENGTH@ 915
---UPD Block@@FinallyBody:{  IOHelper.close(ss);} @TO@ FinallyBody:{  try {    ss.close();  } catch (  IOException ioe) {    if (LOG.isTraceEnabled()) {      LOG.trace("Closing the server socket failed",ioe);    } else {      LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());    }  }} @AT@ 3515 @LENGTH@ 51
------INS TryStatement@@try {  ss.close();} catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @TO@ Block@@FinallyBody:{  IOHelper.close(ss);} @AT@ 3522 @LENGTH@ 484
---------INS ExpressionStatement@@MethodInvocation:ss.close() @TO@ TryStatement@@try {  ss.close();} catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @AT@ 3659 @LENGTH@ 11
------------MOV MethodInvocation@@IOHelper.close(ss) @TO@ ExpressionStatement@@MethodInvocation:ss.close() @AT@ 3533 @LENGTH@ 18
---------------UPD SimpleName@@Name:IOHelper @TO@ Name:ss @AT@ 3533 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:close:[ss] @TO@ MethodName:close:[] @AT@ 3542 @LENGTH@ 9
------------------DEL SimpleName@@ss @AT@ 3548 @LENGTH@ 2
---------INS CatchClause@@catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @TO@ TryStatement@@try {  ss.close();} catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @AT@ 3689 @LENGTH@ 317
------------INS SingleVariableDeclaration@@IOException ioe @TO@ CatchClause@@catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @AT@ 3696 @LENGTH@ 15
---------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException ioe @AT@ 3696 @LENGTH@ 11
---------------INS SimpleName@@ioe @TO@ SingleVariableDeclaration@@IOException ioe @AT@ 3708 @LENGTH@ 3
------------INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Closing the server socket failed",ioe);} else {  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @TO@ CatchClause@@catch (IOException ioe) {  if (LOG.isTraceEnabled()) {    LOG.trace("Closing the server socket failed",ioe);  } else {    LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());  }} @AT@ 3735 @LENGTH@ 253
---------------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Closing the server socket failed",ioe);} else {  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @AT@ 3739 @LENGTH@ 20
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3739 @LENGTH@ 3
------------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 3743 @LENGTH@ 16
---------------INS Block@@ThenBody:{  LOG.trace("Closing the server socket failed",ioe);} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Closing the server socket failed",ioe);} else {  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @AT@ 3761 @LENGTH@ 99
------------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Closing the server socket failed",ioe) @TO@ Block@@ThenBody:{  LOG.trace("Closing the server socket failed",ioe);} @AT@ 3787 @LENGTH@ 51
---------------------INS MethodInvocation@@LOG.trace("Closing the server socket failed",ioe) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Closing the server socket failed",ioe) @AT@ 3787 @LENGTH@ 50
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Closing the server socket failed",ioe) @AT@ 3787 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:trace:["Closing the server socket failed", ioe] @TO@ MethodInvocation@@LOG.trace("Closing the server socket failed",ioe) @AT@ 3791 @LENGTH@ 46
---------------------------INS StringLiteral@@"Closing the server socket failed" @TO@ SimpleName@@MethodName:trace:["Closing the server socket failed", ioe] @AT@ 3797 @LENGTH@ 34
---------------------------INS SimpleName@@ioe @TO@ SimpleName@@MethodName:trace:["Closing the server socket failed", ioe] @AT@ 3833 @LENGTH@ 3
---------------INS Block@@ElseBody:{  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Closing the server socket failed",ioe);} else {  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @AT@ 3866 @LENGTH@ 122
------------------INS ExpressionStatement@@MethodInvocation:LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage()) @TO@ Block@@ElseBody:{  LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage());} @AT@ 3892 @LENGTH@ 74
---------------------INS MethodInvocation@@LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage()) @AT@ 3892 @LENGTH@ 73
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage()) @AT@ 3892 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:warn:["Closing the server socket failed" + " due " + ioe.getMessage()] @TO@ MethodInvocation@@LOG.warn("Closing the server socket failed" + " due " + ioe.getMessage()) @AT@ 3896 @LENGTH@ 69
---------------------------INS InfixExpression@@"Closing the server socket failed" + " due " + ioe.getMessage() @TO@ SimpleName@@MethodName:warn:["Closing the server socket failed" + " due " + ioe.getMessage()] @AT@ 3901 @LENGTH@ 63
------------------------------INS StringLiteral@@"Closing the server socket failed" @TO@ InfixExpression@@"Closing the server socket failed" + " due " + ioe.getMessage() @AT@ 3901 @LENGTH@ 34
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Closing the server socket failed" + " due " + ioe.getMessage() @AT@ 3935 @LENGTH@ 1
------------------------------INS StringLiteral@@" due " @TO@ InfixExpression@@"Closing the server socket failed" + " due " + ioe.getMessage() @AT@ 3938 @LENGTH@ 7
------------------------------INS MethodInvocation@@ioe.getMessage() @TO@ InfixExpression@@"Closing the server socket failed" + " due " + ioe.getMessage() @AT@ 3948 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:ioe @TO@ MethodInvocation@@ioe.getMessage() @AT@ 3948 @LENGTH@ 3
---------------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ioe.getMessage() @AT@ 3952 @LENGTH@ 12
------DEL ExpressionStatement@@MethodInvocation:IOHelper.close(ss) @AT@ 3533 @LENGTH@ 19


UPD Block@@ElseBody:if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @TO@ ElseBody:if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5108 @LENGTH@ 84
---UPD IfStatement@@if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @TO@ if (content.contains("Unable to load realm info from SCDynamicStore")) {  assertThat(file.length(),lessThan(100l));} else {  assertThat(file.length(),is(0l));} @AT@ 5108 @LENGTH@ 84
---INS IfStatement@@if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @TO@ Block@@ElseBody:if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @AT@ 5154 @LENGTH@ 510
------MOV MethodInvocation@@file.getName().endsWith("stderr") @TO@ IfStatement@@if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5112 @LENGTH@ 33
------INS Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @TO@ IfStatement@@if (file.getName().endsWith("stderr")) {  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5193 @LENGTH@ 471
---------MOV IfStatement@@if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @TO@ Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5108 @LENGTH@ 84
------------UPD Block@@ThenBody:{  assertThat(file.length(),is(0l));} @TO@ ElseBody:{  assertThat(file.length(),is(0l));} @AT@ 5147 @LENGTH@ 45
------------INS MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @TO@ IfStatement@@if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @AT@ 5378 @LENGTH@ 65
---------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @AT@ 5378 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["Unable to load realm info from SCDynamicStore"] @TO@ MethodInvocation@@content.contains("Unable to load realm info from SCDynamicStore") @AT@ 5386 @LENGTH@ 57
------------------INS StringLiteral@@"Unable to load realm info from SCDynamicStore" @TO@ SimpleName@@MethodName:contains:["Unable to load realm info from SCDynamicStore"] @AT@ 5395 @LENGTH@ 47
------------INS Block@@ThenBody:{  assertThat(file.length(),lessThan(100l));} @TO@ IfStatement@@if (file.getName().endsWith("stderr")) {  assertThat(file.length(),is(0l));} @AT@ 5445 @LENGTH@ 161
---------------INS ExpressionStatement@@MethodInvocation:assertThat(file.length(),lessThan(100l)) @TO@ Block@@ThenBody:{  assertThat(file.length(),lessThan(100l));} @AT@ 5558 @LENGTH@ 42
------------------INS MethodInvocation@@assertThat(file.length(),lessThan(100l)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(file.length(),lessThan(100l)) @AT@ 5558 @LENGTH@ 41
---------------------INS SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @TO@ MethodInvocation@@assertThat(file.length(),lessThan(100l)) @AT@ 5558 @LENGTH@ 41
------------------------INS MethodInvocation@@file.length() @TO@ SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @AT@ 5569 @LENGTH@ 13
---------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.length() @AT@ 5569 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file.length() @AT@ 5574 @LENGTH@ 8
------------------------INS MethodInvocation@@lessThan(100l) @TO@ SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @AT@ 5584 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @TO@ MethodInvocation@@assertThat(file.length(),lessThan(100l)) @AT@ 5558 @LENGTH@ 41
------------------------INS MethodInvocation@@file.length() @TO@ SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @AT@ 5569 @LENGTH@ 13
---------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.length() @AT@ 5569 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file.length() @AT@ 5574 @LENGTH@ 8
------------------------INS MethodInvocation@@lessThan(100l) @TO@ SimpleName@@MethodName:assertThat:[file.length(), lessThan(100l)] @AT@ 5584 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:lessThan:[100l] @TO@ MethodInvocation@@lessThan(100l) @AT@ 5584 @LENGTH@ 14
------------------------------INS NumberLiteral@@100l @TO@ SimpleName@@MethodName:lessThan:[100l] @AT@ 5593 @LENGTH@ 4
---------INS VariableDeclarationStatement@@String content=""; @TO@ Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5199 @LENGTH@ 20
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String content=""; @AT@ 5199 @LENGTH@ 6
------------INS VariableDeclarationFragment@@content="" @TO@ VariableDeclarationStatement@@String content=""; @AT@ 5206 @LENGTH@ 12
---------------INS SimpleName@@content @TO@ VariableDeclarationFragment@@content="" @AT@ 5206 @LENGTH@ 7
---------------INS StringLiteral@@"" @TO@ VariableDeclarationFragment@@content="" @AT@ 5216 @LENGTH@ 2
---------INS IfStatement@@if (file.length() > 0) {  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @TO@ Block@@ThenBody:{  String content="";  if (file.length() > 0) {    Scanner scanner=new Scanner(file);    content=scanner.useDelimiter("\\A").next();    scanner.close();  }  if (content.contains("Unable to load realm info from SCDynamicStore")) {    assertThat(file.length(),lessThan(100l));  } else {    assertThat(file.length(),is(0l));  }} @AT@ 5224 @LENGTH@ 145
------------INS InfixExpression@@file.length() > 0 @TO@ IfStatement@@if (file.length() > 0) {  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @AT@ 5228 @LENGTH@ 17
---------------INS MethodInvocation@@file.length() @TO@ InfixExpression@@file.length() > 0 @AT@ 5228 @LENGTH@ 13
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.length() @AT@ 5228 @LENGTH@ 4
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file.length() @AT@ 5233 @LENGTH@ 8
---------------INS Operator@@> @TO@ InfixExpression@@file.length() > 0 @AT@ 5241 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@file.length() > 0 @AT@ 5244 @LENGTH@ 1
------------INS Block@@ThenBody:{  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @TO@ IfStatement@@if (file.length() > 0) {  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @AT@ 5247 @LENGTH@ 122
---------------INS VariableDeclarationStatement@@Scanner scanner=new Scanner(file); @TO@ Block@@ThenBody:{  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @AT@ 5254 @LENGTH@ 36
------------------INS SimpleType@@Scanner @TO@ VariableDeclarationStatement@@Scanner scanner=new Scanner(file); @AT@ 5254 @LENGTH@ 7
------------------INS VariableDeclarationFragment@@scanner=new Scanner(file) @TO@ VariableDeclarationStatement@@Scanner scanner=new Scanner(file); @AT@ 5262 @LENGTH@ 27
---------------------INS SimpleName@@scanner @TO@ VariableDeclarationFragment@@scanner=new Scanner(file) @AT@ 5262 @LENGTH@ 7
---------------------INS ClassInstanceCreation@@Scanner[file] @TO@ VariableDeclarationFragment@@scanner=new Scanner(file) @AT@ 5272 @LENGTH@ 17
------------------------INS New@@new @TO@ ClassInstanceCreation@@Scanner[file] @AT@ 5272 @LENGTH@ 3
------------------------INS SimpleType@@Scanner @TO@ ClassInstanceCreation@@Scanner[file] @AT@ 5276 @LENGTH@ 7
------------------------INS SimpleName@@file @TO@ ClassInstanceCreation@@Scanner[file] @AT@ 5284 @LENGTH@ 4
---------------INS ExpressionStatement@@Assignment:content=scanner.useDelimiter("\\A").next() @TO@ Block@@ThenBody:{  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @AT@ 5296 @LENGTH@ 45
------------------INS Assignment@@content=scanner.useDelimiter("\\A").next() @TO@ ExpressionStatement@@Assignment:content=scanner.useDelimiter("\\A").next() @AT@ 5296 @LENGTH@ 44
---------------------INS SimpleName@@content @TO@ Assignment@@content=scanner.useDelimiter("\\A").next() @AT@ 5296 @LENGTH@ 7
---------------------INS Operator@@= @TO@ Assignment@@content=scanner.useDelimiter("\\A").next() @AT@ 5303 @LENGTH@ 1
---------------------INS MethodInvocation@@scanner.useDelimiter("\\A").next() @TO@ Assignment@@content=scanner.useDelimiter("\\A").next() @AT@ 5306 @LENGTH@ 34
------------------------INS MethodInvocation@@MethodName:useDelimiter:["\\A"] @TO@ MethodInvocation@@scanner.useDelimiter("\\A").next() @AT@ 5306 @LENGTH@ 27
---------------------------INS StringLiteral@@"\\A" @TO@ MethodInvocation@@MethodName:useDelimiter:["\\A"] @AT@ 5327 @LENGTH@ 5
------------------------INS SimpleName@@Name:scanner @TO@ MethodInvocation@@scanner.useDelimiter("\\A").next() @AT@ 5306 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@scanner.useDelimiter("\\A").next() @AT@ 5334 @LENGTH@ 6
---------------INS ExpressionStatement@@MethodInvocation:scanner.close() @TO@ Block@@ThenBody:{  Scanner scanner=new Scanner(file);  content=scanner.useDelimiter("\\A").next();  scanner.close();} @AT@ 5347 @LENGTH@ 16
------------------INS MethodInvocation@@scanner.close() @TO@ ExpressionStatement@@MethodInvocation:scanner.close() @AT@ 5347 @LENGTH@ 15
---------------------INS SimpleName@@Name:scanner @TO@ MethodInvocation@@scanner.close() @AT@ 5347 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@scanner.close() @AT@ 5355 @LENGTH@ 7


INS MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpTracedMessages, String nodeId,  @TO@ TypeDeclaration@@[public]CamelFabricTracerMBean,  @AT@ 1160 @LENGTH@ 34
---INS ParameterizedType@@List<FabricTracerEventMessage> @TO@ MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpTracedMessages, String nodeId,  @AT@ 1129 @LENGTH@ 30
------INS SimpleType@@List @TO@ ParameterizedType@@List<FabricTracerEventMessage> @AT@ 1129 @LENGTH@ 4
------INS SimpleType@@FabricTracerEventMessage @TO@ ParameterizedType@@List<FabricTracerEventMessage> @AT@ 1134 @LENGTH@ 24
---INS SimpleName@@MethodName:dumpTracedMessages @TO@ MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpTracedMessages, String nodeId,  @AT@ 1160 @LENGTH@ 18
---INS SingleVariableDeclaration@@String nodeId @TO@ MethodDeclaration@@List<FabricTracerEventMessage>, MethodName:dumpTracedMessages, String nodeId,  @AT@ 1179 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String nodeId @AT@ 1179 @LENGTH@ 6
------INS SimpleName@@nodeId @TO@ SingleVariableDeclaration@@String nodeId @AT@ 1186 @LENGTH@ 6


UPD EnhancedForStatement@@for (NMToken token : allocateResponse.getNMTokens()) {  String nodeId=token.getNodeId().toString();  if (log.isDebugEnabled()) {    log.info("Token from allocateResponse token=" + token);    if (NMTokenCache.containsNMToken(nodeId)) {      log.debug("Replacing token for : " + nodeId);    } else {      log.debug("Received new token for : " + nodeId);    }  }  NMTokenCache.setNMToken(nodeId,token.getToken());} @TO@ for (NMToken token : allocateResponse.getNMTokens()) {  String nodeId=token.getNodeId().toString();  if (log.isDebugEnabled()) {    log.info("Token from allocateResponse token=" + token);    if (tokenCache.containsNMToken(nodeId)) {      log.debug("Replacing token for : " + nodeId);    } else {      log.debug("Received new token for : " + nodeId);    }  }  tokenCache.setNMToken(nodeId,token.getToken());} @AT@ 6811 @LENGTH@ 429
---UPD IfStatement@@if (log.isDebugEnabled()) {  log.info("Token from allocateResponse token=" + token);  if (NMTokenCache.containsNMToken(nodeId)) {    log.debug("Replacing token for : " + nodeId);  } else {    log.debug("Received new token for : " + nodeId);  }} @TO@ if (log.isDebugEnabled()) {  log.info("Token from allocateResponse token=" + token);  if (tokenCache.containsNMToken(nodeId)) {    log.debug("Replacing token for : " + nodeId);  } else {    log.debug("Received new token for : " + nodeId);  }} @AT@ 6918 @LENGTH@ 264
------UPD Block@@ThenBody:{  log.info("Token from allocateResponse token=" + token);  if (NMTokenCache.containsNMToken(nodeId)) {    log.debug("Replacing token for : " + nodeId);  } else {    log.debug("Received new token for : " + nodeId);  }} @TO@ ThenBody:{  log.info("Token from allocateResponse token=" + token);  if (tokenCache.containsNMToken(nodeId)) {    log.debug("Replacing token for : " + nodeId);  } else {    log.debug("Received new token for : " + nodeId);  }} @AT@ 6944 @LENGTH@ 238
---------UPD IfStatement@@if (NMTokenCache.containsNMToken(nodeId)) {  log.debug("Replacing token for : " + nodeId);} else {  log.debug("Received new token for : " + nodeId);} @TO@ if (tokenCache.containsNMToken(nodeId)) {  log.debug("Replacing token for : " + nodeId);} else {  log.debug("Received new token for : " + nodeId);} @AT@ 7010 @LENGTH@ 167
------------UPD MethodInvocation@@NMTokenCache.containsNMToken(nodeId) @TO@ tokenCache.containsNMToken(nodeId) @AT@ 7014 @LENGTH@ 36
---------------UPD SimpleName@@Name:NMTokenCache @TO@ Name:tokenCache @AT@ 7014 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:NMTokenCache.setNMToken(nodeId,token.getToken()) @TO@ MethodInvocation:tokenCache.setNMToken(nodeId,token.getToken()) @AT@ 7186 @LENGTH@ 50
------UPD MethodInvocation@@NMTokenCache.setNMToken(nodeId,token.getToken()) @TO@ tokenCache.setNMToken(nodeId,token.getToken()) @AT@ 7186 @LENGTH@ 49
---------UPD SimpleName@@Name:NMTokenCache @TO@ Name:tokenCache @AT@ 7186 @LENGTH@ 12


UPD ReturnStatement@@ConditionalExpression:p.configurations != null ? p.configurations.get(fileName) : null @TO@ ConditionalExpression:p != null && p.configurations != null ? p.configurations.get(fileName) : null @AT@ 7213 @LENGTH@ 72
---UPD ConditionalExpression@@p.configurations != null ? p.configurations.get(fileName) : null @TO@ p != null && p.configurations != null ? p.configurations.get(fileName) : null @AT@ 7220 @LENGTH@ 64
------INS InfixExpression@@p != null && p.configurations != null @TO@ ConditionalExpression@@p.configurations != null ? p.configurations.get(fileName) : null @AT@ 7236 @LENGTH@ 37
---------MOV InfixExpression@@p.configurations != null @TO@ InfixExpression@@p != null && p.configurations != null @AT@ 7220 @LENGTH@ 24
---------INS InfixExpression@@p != null @TO@ InfixExpression@@p != null && p.configurations != null @AT@ 7236 @LENGTH@ 9
------------INS SimpleName@@p @TO@ InfixExpression@@p != null @AT@ 7236 @LENGTH@ 1
------------INS Operator@@!= @TO@ InfixExpression@@p != null @AT@ 7237 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@p != null @AT@ 7241 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@p != null && p.configurations != null @AT@ 7245 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 7280 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@p.configurations != null ? p.configurations.get(fileName) : null @AT@ 7309 @LENGTH@ 4


MOV ExpressionStatement@@MethodInvocation:getInInterceptorNames().add(WSDLGetInterceptor.class.getName()) @TO@ MethodDeclaration@@public, void, MethodName:initialize, Server server, Bus bus,  @AT@ 3396 @LENGTH@ 64


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]JRedisConnectionIntegrationTests, AbstractConnectionIntegrationTests @AT@ 12743 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 12743 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 12750 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 12755 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 12783 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 12783 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 12789 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:this.options.remove(options) @TO@ MethodInvocation:this.options.remove(option) @AT@ 6061 @LENGTH@ 36
---UPD MethodInvocation@@this.options.remove(options) @TO@ this.options.remove(option) @AT@ 6068 @LENGTH@ 28
------UPD SimpleName@@MethodName:remove:[options] @TO@ MethodName:remove:[option] @AT@ 6081 @LENGTH@ 15
---------UPD SimpleName@@options @TO@ option @AT@ 6088 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:verify(mockConnection,atLeastOnce()).close() @TO@ MethodInvocation:verify(mockConnection,atLeastOnce()).close(anyInt()) @AT@ 2070 @LENGTH@ 46
---UPD MethodInvocation@@verify(mockConnection,atLeastOnce()).close() @TO@ verify(mockConnection,atLeastOnce()).close(anyInt()) @AT@ 2070 @LENGTH@ 45
------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:close:[anyInt()] @AT@ 2108 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:anyInt:[] @TO@ SimpleName@@MethodName:close:[] @AT@ 2157 @LENGTH@ 8


UPD ReturnStatement@@ClassInstanceCreation:new File(getInstallationMetadata(),patchId) @TO@ MethodInvocation:newFile(getInstallationMetadata(),PATCHES,patchId) @AT@ 9730 @LENGTH@ 52
---DEL ClassInstanceCreation@@File[getInstallationMetadata(), patchId] @AT@ 9737 @LENGTH@ 44
------DEL New@@new @AT@ 9737 @LENGTH@ 3
------DEL SimpleType@@File @AT@ 9741 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:getInstallationMetadata:[] @AT@ 9746 @LENGTH@ 25
------DEL SimpleName@@patchId @AT@ 9773 @LENGTH@ 7
---INS MethodInvocation@@newFile(getInstallationMetadata(),PATCHES,patchId) @TO@ ReturnStatement@@ClassInstanceCreation:new File(getInstallationMetadata(),patchId) @AT@ 9744 @LENGTH@ 52
------INS SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @TO@ MethodInvocation@@newFile(getInstallationMetadata(),PATCHES,patchId) @AT@ 9744 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:getInstallationMetadata:[] @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9752 @LENGTH@ 25
---------INS SimpleName@@PATCHES @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9779 @LENGTH@ 7
---------INS SimpleName@@patchId @TO@ SimpleName@@MethodName:newFile:[getInstallationMetadata(), PATCHES, patchId] @AT@ 9788 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Number of CommandMarkers is incorrect",5,shell.getSimpleParser().getCommandMarkers().size()) @TO@ MethodInvocation:Assert.assertEquals("Number of CommandMarkers is incorrect",9,shell.getSimpleParser().getCommandMarkers().size()) @AT@ 597 @LENGTH@ 116
---UPD MethodInvocation@@Assert.assertEquals("Number of CommandMarkers is incorrect",5,shell.getSimpleParser().getCommandMarkers().size()) @TO@ Assert.assertEquals("Number of CommandMarkers is incorrect",9,shell.getSimpleParser().getCommandMarkers().size()) @AT@ 597 @LENGTH@ 115
------UPD SimpleName@@MethodName:assertEquals:["Number of CommandMarkers is incorrect", 5, shell.getSimpleParser().getCommandMarkers().size()] @TO@ MethodName:assertEquals:["Number of CommandMarkers is incorrect", 9, shell.getSimpleParser().getCommandMarkers().size()] @AT@ 604 @LENGTH@ 108
---------UPD NumberLiteral@@5 @TO@ 9 @AT@ 658 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Provision.assertSuccess(dosgiCamelContainers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.provisioningSuccess(dosgiCamelContainers,PROVISION_TIMEOUT) @AT@ 4119 @LENGTH@ 65
---UPD MethodInvocation@@Provision.assertSuccess(dosgiCamelContainers,PROVISION_TIMEOUT) @TO@ Provision.provisioningSuccess(dosgiCamelContainers,PROVISION_TIMEOUT) @AT@ 4119 @LENGTH@ 64
------UPD SimpleName@@MethodName:assertSuccess:[dosgiCamelContainers, PROVISION_TIMEOUT] @TO@ MethodName:provisioningSuccess:[dosgiCamelContainers, PROVISION_TIMEOUT] @AT@ 4129 @LENGTH@ 54


UPD ReturnStatement@@ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ZOOKEEPER_PASSWORD + "=systempassword")} @TO@ ArrayCreation:new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_PASSWORD + "=systempassword")} @AT@ 3923 @LENGTH@ 202
---UPD ArrayCreation@@new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ZOOKEEPER_PASSWORD + "=systempassword")} @TO@ new Option[]{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_PASSWORD + "=systempassword")} @AT@ 3930 @LENGTH@ 194
------UPD ArrayInitializer@@{new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + SystemProperties.ZOOKEEPER_PASSWORD + "=systempassword")} @TO@ {new DefaultCompositeOption(fabricDistributionConfiguration()),new VMOption("-D" + CreateEnsembleOptions.ZOOKEEPER_PASSWORD + "=systempassword")} @AT@ 3942 @LENGTH@ 182
---------UPD ClassInstanceCreation@@VMOption["-D" + SystemProperties.ZOOKEEPER_PASSWORD + "=systempassword"] @TO@ VMOption["-D" + CreateEnsembleOptions.ZOOKEEPER_PASSWORD + "=systempassword"] @AT@ 4039 @LENGTH@ 74
------------UPD InfixExpression@@"-D" + SystemProperties.ZOOKEEPER_PASSWORD + "=systempassword" @TO@ "-D" + CreateEnsembleOptions.ZOOKEEPER_PASSWORD + "=systempassword" @AT@ 4052 @LENGTH@ 60
---------------UPD QualifiedName@@SystemProperties.ZOOKEEPER_PASSWORD @TO@ CreateEnsembleOptions.ZOOKEEPER_PASSWORD @AT@ 4058 @LENGTH@ 35
------------------UPD SimpleName@@SystemProperties @TO@ CreateEnsembleOptions @AT@ 4058 @LENGTH@ 16


UPD MethodDeclaration@@public, static, ExprNodeDesc, MethodName:genPruner, String tabAlias, ExprNodeDesc pred, boolean hasNonPartCols, SemanticException,  @TO@ public, static, ExprNodeDesc, MethodName:genPruner, String tabAlias, ExprNodeDesc pred, SemanticException,  @AT@ 3362 @LENGTH@ 681
---DEL SingleVariableDeclaration@@boolean hasNonPartCols @AT@ 3441 @LENGTH@ 22
------DEL PrimitiveType@@boolean @AT@ 3441 @LENGTH@ 7
------DEL SimpleName@@hasNonPartCols @AT@ 3449 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:hasNonPartCols=pprCtx.getHasNonPartCols() @AT@ 3880 @LENGTH@ 44
------DEL Assignment@@hasNonPartCols=pprCtx.getHasNonPartCols() @AT@ 3880 @LENGTH@ 43
---------DEL SimpleName@@hasNonPartCols @AT@ 3880 @LENGTH@ 14
---------DEL Operator@@= @AT@ 3894 @LENGTH@ 1
---------DEL MethodInvocation@@pprCtx.getHasNonPartCols() @AT@ 3897 @LENGTH@ 26
------------DEL SimpleName@@Name:pprCtx @AT@ 3897 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getHasNonPartCols:[] @AT@ 3904 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:getService(ConfigurationAdmin.class,ref) @TO@ CastExpression:(ConfigurationAdmin)getService(ref) @AT@ 4261 @LENGTH@ 49
---DEL MethodInvocation@@getService(ConfigurationAdmin.class,ref) @AT@ 4268 @LENGTH@ 41
---INS CastExpression@@(ConfigurationAdmin)getService(ref) @TO@ ReturnStatement@@MethodInvocation:getService(ConfigurationAdmin.class,ref) @AT@ 4268 @LENGTH@ 36
------INS SimpleType@@ConfigurationAdmin @TO@ CastExpression@@(ConfigurationAdmin)getService(ref) @AT@ 4269 @LENGTH@ 18
------INS MethodInvocation@@getService(ref) @TO@ CastExpression@@(ConfigurationAdmin)getService(ref) @AT@ 4289 @LENGTH@ 15
---------MOV SimpleName@@MethodName:getService:[ConfigurationAdmin.class, ref] @TO@ MethodInvocation@@getService(ref) @AT@ 4268 @LENGTH@ 41
------------DEL TypeLiteral@@ConfigurationAdmin.class @AT@ 4279 @LENGTH@ 24


INS VariableDeclarationStatement@@String rel=getRel(); @TO@ MethodDeclaration@@public, String, MethodName:getSingleResourceRel,  @AT@ 4086 @LENGTH@ 22
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String rel=getRel(); @AT@ 4086 @LENGTH@ 6
---INS VariableDeclarationFragment@@rel=getRel() @TO@ VariableDeclarationStatement@@String rel=getRel(); @AT@ 4093 @LENGTH@ 14
------INS SimpleName@@rel @TO@ VariableDeclarationFragment@@rel=getRel() @AT@ 4093 @LENGTH@ 3
------INS MethodInvocation@@MethodName:getRel:[] @TO@ VariableDeclarationFragment@@rel=getRel() @AT@ 4099 @LENGTH@ 8


UPD Block@@ThenBody:{  dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));} @TO@ ThenBody:{  dictionary.put("jclouds.ec2.ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner")));  dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner")));} @AT@ 4176 @LENGTH@ 118
---UPD ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ec2.ami-owners",props.get("owner")) @TO@ MethodInvocation:dictionary.put("jclouds.ec2.ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4206 @LENGTH@ 61
------UPD MethodInvocation@@dictionary.put("jclouds.ec2.ami-owners",props.get("owner")) @TO@ String.format(AMI_QUERY_FORMAT,props.get("owner")) @AT@ 4206 @LENGTH@ 60
------INS MethodInvocation@@dictionary.put("jclouds.ec2.ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @TO@ ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ec2.ami-owners",props.get("owner")) @AT@ 4328 @LENGTH@ 91
---------INS SimpleName@@Name:dictionary @TO@ MethodInvocation@@dictionary.put("jclouds.ec2.ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4328 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["jclouds.ec2.ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @TO@ MethodInvocation@@dictionary.put("jclouds.ec2.ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4339 @LENGTH@ 80
------------MOV MethodInvocation@@dictionary.put("jclouds.ec2.ami-owners",props.get("owner")) @TO@ SimpleName@@MethodName:put:["jclouds.ec2.ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @AT@ 4206 @LENGTH@ 60
---------------UPD SimpleName@@Name:dictionary @TO@ Name:String @AT@ 4206 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:put:["jclouds.ec2.ami-owners", props.get("owner")] @TO@ MethodName:format:[AMI_QUERY_FORMAT, props.get("owner")] @AT@ 4217 @LENGTH@ 49
------------------DEL StringLiteral@@"jclouds.ec2.ami-owners" @AT@ 4221 @LENGTH@ 24
------------------INS SimpleName@@AMI_QUERY_FORMAT @TO@ SimpleName@@MethodName:put:["jclouds.ec2.ami-owners", props.get("owner")] @AT@ 4382 @LENGTH@ 16
------------INS StringLiteral@@"jclouds.ec2.ami-query" @TO@ SimpleName@@MethodName:put:["jclouds.ec2.ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @AT@ 4343 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @TO@ Block@@ThenBody:{  dictionary.put("jclouds.ec2.ami-owners",props.get("owner"));} @AT@ 4449 @LENGTH@ 95
------INS MethodInvocation@@dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @TO@ ExpressionStatement@@MethodInvocation:dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4449 @LENGTH@ 94
---------INS SimpleName@@Name:dictionary @TO@ MethodInvocation@@dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4449 @LENGTH@ 10
---------INS SimpleName@@MethodName:put:["jclouds.ec2.cc-ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @TO@ MethodInvocation@@dictionary.put("jclouds.ec2.cc-ami-query",String.format(AMI_QUERY_FORMAT,props.get("owner"))) @AT@ 4460 @LENGTH@ 83
------------INS StringLiteral@@"jclouds.ec2.cc-ami-query" @TO@ SimpleName@@MethodName:put:["jclouds.ec2.cc-ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @AT@ 4464 @LENGTH@ 26
------------INS MethodInvocation@@String.format(AMI_QUERY_FORMAT,props.get("owner")) @TO@ SimpleName@@MethodName:put:["jclouds.ec2.cc-ami-query", String.format(AMI_QUERY_FORMAT,props.get("owner"))] @AT@ 4492 @LENGTH@ 50
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format(AMI_QUERY_FORMAT,props.get("owner")) @AT@ 4492 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:[AMI_QUERY_FORMAT, props.get("owner")] @TO@ MethodInvocation@@String.format(AMI_QUERY_FORMAT,props.get("owner")) @AT@ 4499 @LENGTH@ 43
------------------INS SimpleName@@AMI_QUERY_FORMAT @TO@ SimpleName@@MethodName:format:[AMI_QUERY_FORMAT, props.get("owner")] @AT@ 4506 @LENGTH@ 16
------------------INS MethodInvocation@@props.get("owner") @TO@ SimpleName@@MethodName:format:[AMI_QUERY_FORMAT, props.get("owner")] @AT@ 4523 @LENGTH@ 18
---------------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.get("owner") @AT@ 4523 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:["owner"] @TO@ MethodInvocation@@props.get("owner") @AT@ 4529 @LENGTH@ 12
------------------------INS StringLiteral@@"owner" @TO@ SimpleName@@MethodName:get:["owner"] @AT@ 4533 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new FileModifyTask(item,target,backup,modification) @TO@ ClassInstanceCreation:new FileUpdateTask(item,target,backup,modification) @AT@ 4519 @LENGTH@ 62
---UPD ClassInstanceCreation@@FileModifyTask[item, target, backup, modification] @TO@ FileUpdateTask[item, target, backup, modification] @AT@ 4526 @LENGTH@ 54
------UPD SimpleType@@FileModifyTask @TO@ FileUpdateTask @AT@ 4530 @LENGTH@ 14


UPD MethodDeclaration@@Group<T>, T, MethodName:createMultiGroup, String path, Class<T> clazz,  @TO@ Group<T>, T extends NodeState, MethodName:createMultiGroup, String path, Class<T> clazz,  @AT@ 773 @LENGTH@ 46


INS ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @TO@ MethodDeclaration@@private, LegacyControllerKernelServicesProxy, MethodName:install, AbstractKernelServicesImpl mainServices, ModelInitializer modelInitializer, ModelWriteSanitizer modelWriteSanitizer, List<String> contentRepositoryContents, List<ModelNode> bootOperations, Exception,  @AT@ 31675 @LENGTH@ 72
---INS MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @TO@ ExpressionStatement@@MethodInvocation:classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31675 @LENGTH@ 71
------INS SimpleName@@Name:classLoaderBuilder @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31675 @LENGTH@ 18
------INS SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.logmanager.*"] @TO@ MethodInvocation@@classLoaderBuilder.addParentFirstClassPattern("org.jboss.logmanager.*") @AT@ 31694 @LENGTH@ 52
---------INS StringLiteral@@"org.jboss.logmanager.*" @TO@ SimpleName@@MethodName:addParentFirstClassPattern:["org.jboss.logmanager.*"] @AT@ 31721 @LENGTH@ 24


INS ExpressionStatement@@MethodInvocation:FileUtil.removeDir(new File(dir)) @TO@ MethodDeclaration@@public, static, ConnectionFactory, MethodName:createPersistentConnectionFactory, String options,  @AT@ 3328 @LENGTH@ 34
---INS MethodInvocation@@FileUtil.removeDir(new File(dir)) @TO@ ExpressionStatement@@MethodInvocation:FileUtil.removeDir(new File(dir)) @AT@ 3328 @LENGTH@ 33
------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.removeDir(new File(dir)) @AT@ 3328 @LENGTH@ 8
------INS SimpleName@@MethodName:removeDir:[new File(dir)] @TO@ MethodInvocation@@FileUtil.removeDir(new File(dir)) @AT@ 3337 @LENGTH@ 24
---------INS ClassInstanceCreation@@File[dir] @TO@ SimpleName@@MethodName:removeDir:[new File(dir)] @AT@ 3347 @LENGTH@ 13
------------INS New@@new @TO@ ClassInstanceCreation@@File[dir] @AT@ 3347 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[dir] @AT@ 3351 @LENGTH@ 4
------------INS SimpleName@@dir @TO@ ClassInstanceCreation@@File[dir] @AT@ 3356 @LENGTH@ 3


UPD IfStatement@@if (coreValidity == false) {  goon=handleSignatureValidationFailed(valContext,signature);} @TO@ if (!coreValidity) {  goon=handleSignatureValidationFailed(valContext,signature);} @AT@ 5643 @LENGTH@ 115
---DEL InfixExpression@@coreValidity == false @AT@ 5647 @LENGTH@ 21
------DEL SimpleName@@coreValidity @AT@ 5647 @LENGTH@ 12
------DEL Operator@@== @AT@ 5659 @LENGTH@ 2
------DEL BooleanLiteral@@false @AT@ 5663 @LENGTH@ 5
---INS PrefixExpression@@!coreValidity @TO@ IfStatement@@if (coreValidity == false) {  goon=handleSignatureValidationFailed(valContext,signature);} @AT@ 5651 @LENGTH@ 13
------INS Operator@@! @TO@ PrefixExpression@@!coreValidity @AT@ 5651 @LENGTH@ 1
------INS SimpleName@@coreValidity @TO@ PrefixExpression@@!coreValidity @AT@ 5652 @LENGTH@ 12


UPD TypeDeclaration@@[public]MyCustomCodec,  @TO@ [public, final]MyCustomCodec,  @AT@ 1269 @LENGTH@ 1570
---INS Modifier@@final @TO@ TypeDeclaration@@[public]MyCustomCodec,  @AT@ 1276 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:current.getPatchIDs() @TO@ ClassInstanceCreation:new ArrayList<String>(patchIds) @AT@ 1805 @LENGTH@ 29
---INS ClassInstanceCreation@@ArrayList<String>[patchIds] @TO@ ReturnStatement@@MethodInvocation:current.getPatchIDs() @AT@ 1797 @LENGTH@ 31
------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1797 @LENGTH@ 3
------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1801 @LENGTH@ 17
---------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 1801 @LENGTH@ 9
---------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 1811 @LENGTH@ 6
------INS SimpleName@@patchIds @TO@ ClassInstanceCreation@@ArrayList<String>[patchIds] @AT@ 1819 @LENGTH@ 8
---DEL MethodInvocation@@current.getPatchIDs() @AT@ 1812 @LENGTH@ 21
------DEL SimpleName@@Name:current @AT@ 1812 @LENGTH@ 7
------DEL SimpleName@@MethodName:getPatchIDs:[] @AT@ 1820 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:MessageHelper.resetStreamCache(exchange.getIn()) @TO@ MethodDeclaration@@public, void, MethodName:begin,  @AT@ 4263 @LENGTH@ 49
---INS MethodInvocation@@MessageHelper.resetStreamCache(exchange.getIn()) @TO@ ExpressionStatement@@MethodInvocation:MessageHelper.resetStreamCache(exchange.getIn()) @AT@ 4263 @LENGTH@ 48
------INS SimpleName@@Name:MessageHelper @TO@ MethodInvocation@@MessageHelper.resetStreamCache(exchange.getIn()) @AT@ 4263 @LENGTH@ 13
------INS SimpleName@@MethodName:resetStreamCache:[exchange.getIn()] @TO@ MethodInvocation@@MessageHelper.resetStreamCache(exchange.getIn()) @AT@ 4277 @LENGTH@ 34
---------INS MethodInvocation@@exchange.getIn() @TO@ SimpleName@@MethodName:resetStreamCache:[exchange.getIn()] @AT@ 4294 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 4294 @LENGTH@ 8
------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 4303 @LENGTH@ 7


UPD MethodDeclaration@@public, Map<String,String>, MethodName:createContainers, Map<String,String> options,  @TO@ public, Map<String,String>, MethodName:createContainers, Map<String,Object> options,  @AT@ 4540 @LENGTH@ 1937
---UPD SingleVariableDeclaration@@Map<String,String> options @TO@ Map<String,Object> options @AT@ 4584 @LENGTH@ 27
------UPD ParameterizedType@@Map<String,String> @TO@ Map<String,Object> @AT@ 4584 @LENGTH@ 19
---------UPD SimpleType@@String @TO@ Object @AT@ 4596 @LENGTH@ 6
---UPD VariableDeclarationStatement@@String providerType=options.get("providerType"); @TO@ String providerType=(String)options.get("providerType"); @AT@ 4744 @LENGTH@ 50
------UPD VariableDeclarationFragment@@providerType=options.get("providerType") @TO@ providerType=(String)options.get("providerType") @AT@ 4751 @LENGTH@ 42
---------INS CastExpression@@(String)options.get("providerType") @TO@ VariableDeclarationFragment@@providerType=options.get("providerType") @AT@ 4766 @LENGTH@ 36
------------MOV MethodInvocation@@options.get("providerType") @TO@ CastExpression@@(String)options.get("providerType") @AT@ 4766 @LENGTH@ 27
------------INS SimpleType@@String @TO@ CastExpression@@(String)options.get("providerType") @AT@ 4767 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true) @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:createContainers, Map<String,String> options,  @AT@ 5130 @LENGTH@ 83
------INS MethodInvocation@@mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true) @TO@ ExpressionStatement@@MethodInvocation:mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true) @AT@ 5130 @LENGTH@ 82
---------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true) @AT@ 5130 @LENGTH@ 6
---------INS SimpleName@@MethodName:configure:[DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true] @TO@ MethodInvocation@@mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true) @AT@ 5137 @LENGTH@ 75
------------INS QualifiedName@@DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY @TO@ SimpleName@@MethodName:configure:[DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true] @AT@ 5147 @LENGTH@ 58
---------------INS QualifiedName@@DeserializationConfig.Feature @TO@ QualifiedName@@DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY @AT@ 5147 @LENGTH@ 29
------------------INS SimpleName@@DeserializationConfig @TO@ QualifiedName@@DeserializationConfig.Feature @AT@ 5147 @LENGTH@ 21
------------------INS SimpleName@@Feature @TO@ QualifiedName@@DeserializationConfig.Feature @AT@ 5169 @LENGTH@ 7
---------------INS SimpleName@@ACCEPT_SINGLE_VALUE_AS_ARRAY @TO@ QualifiedName@@DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY @AT@ 5177 @LENGTH@ 28
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:configure:[DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true] @AT@ 5207 @LENGTH@ 4
---INS VariableDeclarationStatement@@Object profileObject=options.get("profiles"); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:createContainers, Map<String,String> options,  @AT@ 5973 @LENGTH@ 47
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object profileObject=options.get("profiles"); @AT@ 5973 @LENGTH@ 6
------INS VariableDeclarationFragment@@profileObject=options.get("profiles") @TO@ VariableDeclarationStatement@@Object profileObject=options.get("profiles"); @AT@ 5980 @LENGTH@ 39
---------INS SimpleName@@profileObject @TO@ VariableDeclarationFragment@@profileObject=options.get("profiles") @AT@ 5980 @LENGTH@ 13
---------INS MethodInvocation@@options.get("profiles") @TO@ VariableDeclarationFragment@@profileObject=options.get("profiles") @AT@ 5996 @LENGTH@ 23
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.get("profiles") @AT@ 5996 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:["profiles"] @TO@ MethodInvocation@@options.get("profiles") @AT@ 6004 @LENGTH@ 15
---------------INS StringLiteral@@"profiles" @TO@ SimpleName@@MethodName:get:["profiles"] @AT@ 6008 @LENGTH@ 10
---INS IfStatement@@if (profileObject != null) {  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:createContainers, Map<String,String> options,  @AT@ 6030 @LENGTH@ 154
------INS InfixExpression@@profileObject != null @TO@ IfStatement@@if (profileObject != null) {  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @AT@ 6034 @LENGTH@ 21
---------INS SimpleName@@profileObject @TO@ InfixExpression@@profileObject != null @AT@ 6034 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@profileObject != null @AT@ 6047 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@profileObject != null @AT@ 6051 @LENGTH@ 4
------INS Block@@ThenBody:{  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @TO@ IfStatement@@if (profileObject != null) {  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @AT@ 6057 @LENGTH@ 127
---------INS VariableDeclarationStatement@@List profiles=mapper.convertValue(profileObject,List.class); @TO@ Block@@ThenBody:{  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @AT@ 6071 @LENGTH@ 63
------------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List profiles=mapper.convertValue(profileObject,List.class); @AT@ 6071 @LENGTH@ 4
------------INS VariableDeclarationFragment@@profiles=mapper.convertValue(profileObject,List.class) @TO@ VariableDeclarationStatement@@List profiles=mapper.convertValue(profileObject,List.class); @AT@ 6076 @LENGTH@ 57
---------------INS SimpleName@@profiles @TO@ VariableDeclarationFragment@@profiles=mapper.convertValue(profileObject,List.class) @AT@ 6076 @LENGTH@ 8
---------------INS MethodInvocation@@mapper.convertValue(profileObject,List.class) @TO@ VariableDeclarationFragment@@profiles=mapper.convertValue(profileObject,List.class) @AT@ 6087 @LENGTH@ 46
------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.convertValue(profileObject,List.class) @AT@ 6087 @LENGTH@ 6
------------------INS SimpleName@@MethodName:convertValue:[profileObject, List.class] @TO@ MethodInvocation@@mapper.convertValue(profileObject,List.class) @AT@ 6094 @LENGTH@ 39
---------------------INS SimpleName@@profileObject @TO@ SimpleName@@MethodName:convertValue:[profileObject, List.class] @AT@ 6107 @LENGTH@ 13
---------------------INS TypeLiteral@@List.class @TO@ SimpleName@@MethodName:convertValue:[profileObject, List.class] @AT@ 6122 @LENGTH@ 10
---------INS ExpressionStatement@@MethodInvocation:builder.profiles(profiles) @TO@ Block@@ThenBody:{  List profiles=mapper.convertValue(profileObject,List.class);  builder.profiles(profiles);} @AT@ 6147 @LENGTH@ 27
------------INS MethodInvocation@@builder.profiles(profiles) @TO@ ExpressionStatement@@MethodInvocation:builder.profiles(profiles) @AT@ 6147 @LENGTH@ 26
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.profiles(profiles) @AT@ 6147 @LENGTH@ 7
---------------INS SimpleName@@MethodName:profiles:[profiles] @TO@ MethodInvocation@@builder.profiles(profiles) @AT@ 6155 @LENGTH@ 18
------------------INS SimpleName@@profiles @TO@ SimpleName@@MethodName:profiles:[profiles] @AT@ 6164 @LENGTH@ 8


UPD IfStatement@@if (nodeList instanceof Node) {  Node node=(Node)nodeList;  String s=xml.toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} else {  int size=nodeList.getLength();  for (int i=0; i < size; i++) {    Node node=nodeList.item(i);    String s=xml.toString(node,exchange);    if (ObjectHelper.isNotEmpty(s)) {      found=true;      buffer.append(s);    }  }} @TO@ if (nodeList instanceof Node) {  Node node=(Node)nodeList;  String s=toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} else {  int size=nodeList.getLength();  for (int i=0; i < size; i++) {    Node node=nodeList.item(i);    String s=toString(node,exchange);    if (ObjectHelper.isNotEmpty(s)) {      found=true;      buffer.append(s);    }  }} @AT@ 1961 @LENGTH@ 694
---UPD Block@@ThenBody:{  Node node=(Node)nodeList;  String s=xml.toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} @TO@ ThenBody:{  Node node=(Node)nodeList;  String s=toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} @AT@ 1991 @LENGTH@ 229
------UPD VariableDeclarationStatement@@String s=xml.toString(node,exchange); @TO@ String s=toString(node,exchange); @AT@ 2046 @LENGTH@ 40
---------UPD VariableDeclarationFragment@@s=xml.toString(node,exchange) @TO@ s=toString(node,exchange) @AT@ 2053 @LENGTH@ 32
------------UPD MethodInvocation@@xml.toString(node,exchange) @TO@ toString(node,exchange) @AT@ 2057 @LENGTH@ 28
---------------DEL SimpleName@@Name:xml @AT@ 2057 @LENGTH@ 3
---UPD Block@@ElseBody:{  int size=nodeList.getLength();  for (int i=0; i < size; i++) {    Node node=nodeList.item(i);    String s=xml.toString(node,exchange);    if (ObjectHelper.isNotEmpty(s)) {      found=true;      buffer.append(s);    }  }} @TO@ ElseBody:{  int size=nodeList.getLength();  for (int i=0; i < size; i++) {    Node node=nodeList.item(i);    String s=toString(node,exchange);    if (ObjectHelper.isNotEmpty(s)) {      found=true;      buffer.append(s);    }  }} @AT@ 2226 @LENGTH@ 429
------UPD ForStatement@@for (int i=0; i < size; i++) {  Node node=nodeList.item(i);  String s=xml.toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} @TO@ for (int i=0; i < size; i++) {  Node node=nodeList.item(i);  String s=toString(node,exchange);  if (ObjectHelper.isNotEmpty(s)) {    found=true;    buffer.append(s);  }} @AT@ 2356 @LENGTH@ 289
---------UPD VariableDeclarationStatement@@String s=xml.toString(node,exchange); @TO@ String s=toString(node,exchange); @AT@ 2451 @LENGTH@ 40
------------UPD VariableDeclarationFragment@@s=xml.toString(node,exchange) @TO@ s=toString(node,exchange) @AT@ 2458 @LENGTH@ 32
---------------INS MethodInvocation@@toString(node,exchange) @TO@ VariableDeclarationFragment@@s=xml.toString(node,exchange) @AT@ 2458 @LENGTH@ 24
------------------INS SimpleName@@MethodName:toString:[node, exchange] @TO@ MethodInvocation@@toString(node,exchange) @AT@ 2458 @LENGTH@ 24
---------------------INS SimpleName@@node @TO@ SimpleName@@MethodName:toString:[node, exchange] @AT@ 2467 @LENGTH@ 4
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:toString:[node, exchange] @AT@ 2473 @LENGTH@ 8


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 13453 @LENGTH@ 135
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 13520 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 13520 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 13528 @LENGTH@ 17
---UPD ReturnStatement@@MethodInvocation:primaryContext.authorizeResource(attributes) @TO@ MethodInvocation:primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 13530 @LENGTH@ 52
------UPD MethodInvocation@@primaryContext.authorizeResource(attributes) @TO@ primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 13537 @LENGTH@ 44
---------UPD SimpleName@@MethodName:authorizeResource:[attributes] @TO@ MethodName:authorizeResource:[attributes, isDefaultResource] @AT@ 13552 @LENGTH@ 29
------------INS SimpleName@@isDefaultResource @TO@ SimpleName@@MethodName:authorizeResource:[attributes] @AT@ 13609 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @TO@ MethodInvocation:builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @AT@ 3992 @LENGTH@ 250
---UPD MethodInvocation@@builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @TO@ builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @AT@ 3992 @LENGTH@ 249
------UPD SimpleName@@MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @TO@ MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @AT@ 4000 @LENGTH@ 241
---------INS MethodInvocation@@Collections.<String>emptySet() @TO@ SimpleName@@MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @AT@ 4374 @LENGTH@ 30
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 4374 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 4394 @LENGTH@ 10


DEL MethodDeclaration@@protected, void, MethodName:registerBeanDefinition, BeanDefinitionHolder definition, BeanDefinitionRegistry registry,  @AT@ 2018 @LENGTH@ 242
---DEL Modifier@@protected @AT@ 2018 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 2028 @LENGTH@ 4
---DEL SimpleName@@MethodName:registerBeanDefinition @AT@ 2033 @LENGTH@ 22
---DEL SingleVariableDeclaration@@BeanDefinitionHolder definition @AT@ 2056 @LENGTH@ 31
------DEL SimpleType@@BeanDefinitionHolder @AT@ 2056 @LENGTH@ 20
------DEL SimpleName@@definition @AT@ 2077 @LENGTH@ 10
---DEL SingleVariableDeclaration@@BeanDefinitionRegistry registry @AT@ 2089 @LENGTH@ 31
------DEL SimpleType@@BeanDefinitionRegistry @AT@ 2089 @LENGTH@ 22
------DEL SimpleName@@registry @AT@ 2112 @LENGTH@ 8
---DEL ExpressionStatement@@SuperMethodInvocation:super.registerBeanDefinition(ParsingUtils.replaceBeanAliasAsMetadata(definition),registry) @AT@ 2165 @LENGTH@ 92
------DEL SuperMethodInvocation@@super.registerBeanDefinition(ParsingUtils.replaceBeanAliasAsMetadata(definition),registry) @AT@ 2165 @LENGTH@ 91
---------DEL SimpleName@@MethodName:registerBeanDefinition:[ParsingUtils.replaceBeanAliasAsMetadata(definition), registry] @AT@ 2171 @LENGTH@ 22
---------DEL MethodInvocation@@ParsingUtils.replaceBeanAliasAsMetadata(definition) @AT@ 2194 @LENGTH@ 51
------------DEL SimpleName@@Name:ParsingUtils @AT@ 2194 @LENGTH@ 12
------------DEL SimpleName@@MethodName:replaceBeanAliasAsMetadata:[definition] @AT@ 2207 @LENGTH@ 38
---------------DEL SimpleName@@definition @AT@ 2234 @LENGTH@ 10
---------DEL SimpleName@@registry @AT@ 2247 @LENGTH@ 8


UPD TryStatement@@try {  return restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class);} catch (UnsupportedEncodingException unlikely) {  unlikely.printStackTrace();  throw new ApiException("linkedin","Unlikely unsupported encoding error",unlikely);} @TO@ try {  URI uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build();  return restOperations.exchange(uri,HttpMethod.GET,new HttpEntity<String>(""),LinkedInProfile.class).getBody();} catch (UnsupportedEncodingException unlikely) {  unlikely.printStackTrace();  throw new ApiException("linkedin","Unlikely unsupported encoding error",unlikely);} @AT@ 3097 @LENGTH@ 340
---UPD ReturnStatement@@MethodInvocation:restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class) @TO@ MethodInvocation:restOperations.exchange(uri,HttpMethod.GET,new HttpEntity<String>(""),LinkedInProfile.class).getBody() @AT@ 3106 @LENGTH@ 156
------UPD MethodInvocation@@restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class) @TO@ restOperations.exchange(uri,HttpMethod.GET,new HttpEntity<String>(""),LinkedInProfile.class).getBody() @AT@ 3113 @LENGTH@ 148
---------DEL SimpleName@@MethodName:getForObject:[URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(), LinkedInProfile.class] @AT@ 3128 @LENGTH@ 133
------------DEL TypeLiteral@@LinkedInProfile.class @AT@ 3239 @LENGTH@ 21
---------INS MethodInvocation@@MethodName:exchange:[uri, HttpMethod.GET, new HttpEntity<String>(""), LinkedInProfile.class] @TO@ MethodInvocation@@restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class) @AT@ 3312 @LENGTH@ 95
------------INS SimpleName@@uri @TO@ MethodInvocation@@MethodName:exchange:[uri, HttpMethod.GET, new HttpEntity<String>(""), LinkedInProfile.class] @AT@ 3336 @LENGTH@ 3
------------INS QualifiedName@@HttpMethod.GET @TO@ MethodInvocation@@MethodName:exchange:[uri, HttpMethod.GET, new HttpEntity<String>(""), LinkedInProfile.class] @AT@ 3341 @LENGTH@ 14
---------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.GET @AT@ 3341 @LENGTH@ 10
---------------INS SimpleName@@GET @TO@ QualifiedName@@HttpMethod.GET @AT@ 3352 @LENGTH@ 3
------------INS ClassInstanceCreation@@HttpEntity<String>[""] @TO@ MethodInvocation@@MethodName:exchange:[uri, HttpMethod.GET, new HttpEntity<String>(""), LinkedInProfile.class] @AT@ 3357 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@HttpEntity<String>[""] @AT@ 3357 @LENGTH@ 3
---------------INS ParameterizedType@@HttpEntity<String> @TO@ ClassInstanceCreation@@HttpEntity<String>[""] @AT@ 3361 @LENGTH@ 18
------------------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<String> @AT@ 3361 @LENGTH@ 10
------------------INS SimpleType@@String @TO@ ParameterizedType@@HttpEntity<String> @AT@ 3372 @LENGTH@ 6
---------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@HttpEntity<String>[""] @AT@ 3380 @LENGTH@ 2
------------INS TypeLiteral@@LinkedInProfile.class @TO@ MethodInvocation@@MethodName:exchange:[uri, HttpMethod.GET, new HttpEntity<String>(""), LinkedInProfile.class] @AT@ 3385 @LENGTH@ 21
---------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class) @AT@ 3408 @LENGTH@ 9
---INS VariableDeclarationStatement@@URI uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(); @TO@ TryStatement@@try {  return restOperations.getForObject(URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(),LinkedInProfile.class);} catch (UnsupportedEncodingException unlikely) {  unlikely.printStackTrace();  throw new ApiException("linkedin","Unlikely unsupported encoding error",unlikely);} @AT@ 3194 @LENGTH@ 107
------INS SimpleType@@URI @TO@ VariableDeclarationStatement@@URI uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(); @AT@ 3194 @LENGTH@ 3
------INS VariableDeclarationFragment@@uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build() @TO@ VariableDeclarationStatement@@URI uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build(); @AT@ 3198 @LENGTH@ 102
---------MOV MethodInvocation@@URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build() @TO@ VariableDeclarationFragment@@uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build() @AT@ 3141 @LENGTH@ 96
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=URIBuilder.fromUri(BASE_URL + "url=" + URLEncoder.encode(url,"UTF-8")+ PROFILE_FIELDS).build() @AT@ 3198 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]DuplicateBundlesTest, EsbTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-520] Fix esb-itests"), public]DuplicateBundlesTest, EsbTestSupport @AT@ 1884 @LENGTH@ 2269
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-520] Fix esb-itests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]DuplicateBundlesTest, EsbTestSupport @AT@ 2002 @LENGTH@ 38


DEL MethodDeclaration@@private, Closeable, MethodName:exportExplodedWar, final boolean war, final VirtualFile file, IOException,  @AT@ 13623 @LENGTH@ 349
---DEL Modifier@@private @AT@ 13623 @LENGTH@ 7
---DEL SimpleType@@Closeable @AT@ 13631 @LENGTH@ 9
---DEL SimpleName@@MethodName:exportExplodedWar @AT@ 13641 @LENGTH@ 17
---DEL SingleVariableDeclaration@@final boolean war @AT@ 13659 @LENGTH@ 17
------DEL Modifier@@final @AT@ 13659 @LENGTH@ 5
------DEL PrimitiveType@@boolean @AT@ 13665 @LENGTH@ 7
------DEL SimpleName@@war @AT@ 13673 @LENGTH@ 3
---DEL SingleVariableDeclaration@@final VirtualFile file @AT@ 13678 @LENGTH@ 22
------DEL Modifier@@final @AT@ 13678 @LENGTH@ 5
------DEL SimpleType@@VirtualFile @AT@ 13684 @LENGTH@ 11
------DEL SimpleName@@file @AT@ 13696 @LENGTH@ 4
---DEL SimpleType@@IOException @AT@ 13709 @LENGTH@ 11
---DEL IfStatement@@if (war && !file.isFile()) {  File warContent=file.getPhysicalFile();  VFSUtils.recursiveCopy(file,warContent.getParentFile());  return VFS.mountReal(warContent,file);} @AT@ 13731 @LENGTH@ 214
------DEL InfixExpression@@war && !file.isFile() @AT@ 13735 @LENGTH@ 21
---------DEL SimpleName@@war @AT@ 13735 @LENGTH@ 3
---------DEL Operator@@&& @AT@ 13738 @LENGTH@ 2
---------DEL PrefixExpression@@!file.isFile() @AT@ 13742 @LENGTH@ 14
------------DEL Operator@@! @AT@ 13742 @LENGTH@ 1
------------DEL MethodInvocation@@file.isFile() @AT@ 13743 @LENGTH@ 13
---------------DEL SimpleName@@Name:file @AT@ 13743 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:isFile:[] @AT@ 13748 @LENGTH@ 8
------DEL Block@@ThenBody:{  File warContent=file.getPhysicalFile();  VFSUtils.recursiveCopy(file,warContent.getParentFile());  return VFS.mountReal(warContent,file);} @AT@ 13758 @LENGTH@ 187
---------DEL VariableDeclarationStatement@@File warContent=file.getPhysicalFile(); @AT@ 13772 @LENGTH@ 41
------------DEL SimpleType@@File @AT@ 13772 @LENGTH@ 4
------------DEL VariableDeclarationFragment@@warContent=file.getPhysicalFile() @AT@ 13777 @LENGTH@ 35
---------------DEL SimpleName@@warContent @AT@ 13777 @LENGTH@ 10
---------------DEL MethodInvocation@@file.getPhysicalFile() @AT@ 13790 @LENGTH@ 22
------------------DEL SimpleName@@Name:file @AT@ 13790 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getPhysicalFile:[] @AT@ 13795 @LENGTH@ 17
---------DEL ExpressionStatement@@MethodInvocation:VFSUtils.recursiveCopy(file,warContent.getParentFile()) @AT@ 13826 @LENGTH@ 57
------------DEL MethodInvocation@@VFSUtils.recursiveCopy(file,warContent.getParentFile()) @AT@ 13826 @LENGTH@ 56
---------------DEL SimpleName@@Name:VFSUtils @AT@ 13826 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:recursiveCopy:[file, warContent.getParentFile()] @AT@ 13835 @LENGTH@ 47
------------------DEL SimpleName@@file @AT@ 13849 @LENGTH@ 4
------------------DEL MethodInvocation@@warContent.getParentFile() @AT@ 13855 @LENGTH@ 26
---------------------DEL SimpleName@@Name:warContent @AT@ 13855 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:getParentFile:[] @AT@ 13866 @LENGTH@ 15
---------DEL ReturnStatement@@MethodInvocation:VFS.mountReal(warContent,file) @AT@ 13896 @LENGTH@ 39
------------DEL MethodInvocation@@VFS.mountReal(warContent,file) @AT@ 13903 @LENGTH@ 31
---------------DEL SimpleName@@Name:VFS @AT@ 13903 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:mountReal:[warContent, file] @AT@ 13907 @LENGTH@ 27
------------------DEL SimpleName@@warContent @AT@ 13917 @LENGTH@ 10
------------------DEL SimpleName@@file @AT@ 13929 @LENGTH@ 4
---DEL ReturnStatement@@NullLiteral:null @AT@ 13954 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 13961 @LENGTH@ 4


INS MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @TO@ TypeDeclaration@@[public, abstract]DefaultCheckersAndConverter, DiscardAttributeChecker.DefaultDiscardAttributeChecker[RejectAttributeChecker, AttributeConverter] @AT@ 4356 @LENGTH@ 234
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @AT@ 4356 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @AT@ 4366 @LENGTH@ 7
---INS SimpleName@@MethodName:checkForExpression @TO@ MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @AT@ 4374 @LENGTH@ 18
---INS SingleVariableDeclaration@@final ModelNode node @TO@ MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @AT@ 4393 @LENGTH@ 20
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode node @AT@ 4393 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode node @AT@ 4399 @LENGTH@ 9
------INS SimpleName@@node @TO@ SingleVariableDeclaration@@final ModelNode node @AT@ 4409 @LENGTH@ 4
---INS ReturnStatement@@InfixExpression:(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @TO@ MethodDeclaration@@protected, boolean, MethodName:checkForExpression, final ModelNode node,  @AT@ 4425 @LENGTH@ 159
------INS InfixExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @TO@ ReturnStatement@@InfixExpression:(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4432 @LENGTH@ 151
---------INS ParenthesizedExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) @TO@ InfixExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4432 @LENGTH@ 78
------------INS InfixExpression@@node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING @TO@ ParenthesizedExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) @AT@ 4433 @LENGTH@ 76
---------------INS InfixExpression@@node.getType() == ModelType.EXPRESSION @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING @AT@ 4433 @LENGTH@ 38
------------------INS MethodInvocation@@node.getType() @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION @AT@ 4433 @LENGTH@ 14
---------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.getType() @AT@ 4433 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@node.getType() @AT@ 4438 @LENGTH@ 9
------------------INS Operator@@== @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION @AT@ 4447 @LENGTH@ 2
------------------INS QualifiedName@@ModelType.EXPRESSION @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION @AT@ 4451 @LENGTH@ 20
---------------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 4451 @LENGTH@ 9
---------------------INS SimpleName@@EXPRESSION @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 4461 @LENGTH@ 10
---------------INS Operator@@|| @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING @AT@ 4471 @LENGTH@ 2
---------------INS InfixExpression@@node.getType() == ModelType.STRING @TO@ InfixExpression@@node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING @AT@ 4475 @LENGTH@ 34
------------------INS MethodInvocation@@node.getType() @TO@ InfixExpression@@node.getType() == ModelType.STRING @AT@ 4475 @LENGTH@ 14
---------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.getType() @AT@ 4475 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@node.getType() @AT@ 4480 @LENGTH@ 9
------------------INS Operator@@== @TO@ InfixExpression@@node.getType() == ModelType.STRING @AT@ 4489 @LENGTH@ 2
------------------INS QualifiedName@@ModelType.STRING @TO@ InfixExpression@@node.getType() == ModelType.STRING @AT@ 4493 @LENGTH@ 16
---------------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 4493 @LENGTH@ 9
---------------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 4503 @LENGTH@ 6
---------INS Operator@@&& @TO@ InfixExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4510 @LENGTH@ 2
---------INS MethodInvocation@@EXPRESSION_PATTERN.matcher(node.asString()).matches() @TO@ InfixExpression@@(node.getType() == ModelType.EXPRESSION || node.getType() == ModelType.STRING) && EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4530 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:matcher:[node.asString()] @TO@ MethodInvocation@@EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4530 @LENGTH@ 43
---------------INS MethodInvocation@@node.asString() @TO@ MethodInvocation@@MethodName:matcher:[node.asString()] @AT@ 4557 @LENGTH@ 15
------------------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.asString() @AT@ 4557 @LENGTH@ 4
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@node.asString() @AT@ 4562 @LENGTH@ 10
------------INS SimpleName@@Name:EXPRESSION_PATTERN @TO@ MethodInvocation@@EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4530 @LENGTH@ 18
------------INS SimpleName@@MethodName:matches:[] @TO@ MethodInvocation@@EXPRESSION_PATTERN.matcher(node.asString()).matches() @AT@ 4574 @LENGTH@ 9


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]CreateChildContainerTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]CreateChildContainerTest, FabricTestSupport @AT@ 1799 @LENGTH@ 3723
---DEL SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @AT@ 1892 @LENGTH@ 49


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public, final]LookupInjectionSource, InjectionSource @AT@ 3564 @LENGTH@ 78
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3564 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3571 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3578 @LENGTH@ 8
---INS ReturnStatement@@InfixExpression:"lookup (" + lookupName + ")" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3599 @LENGTH@ 37
------INS InfixExpression@@"lookup (" + lookupName + ")" @TO@ ReturnStatement@@InfixExpression:"lookup (" + lookupName + ")" @AT@ 3606 @LENGTH@ 29
---------INS StringLiteral@@"lookup (" @TO@ InfixExpression@@"lookup (" + lookupName + ")" @AT@ 3606 @LENGTH@ 10
---------INS Operator@@+ @TO@ InfixExpression@@"lookup (" + lookupName + ")" @AT@ 3616 @LENGTH@ 1
---------INS SimpleName@@lookupName @TO@ InfixExpression@@"lookup (" + lookupName + ")" @AT@ 3619 @LENGTH@ 10
---------INS StringLiteral@@")" @TO@ InfixExpression@@"lookup (" + lookupName + ")" @AT@ 3632 @LENGTH@ 3


UPD MethodDeclaration@@void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, OutputCollector out,  @TO@ void, MethodName:init, JobConf jconf, MRTaskReporter mrReporter, Map<String,LogicalInput> inputs, Map<String,OutputCollector> outMap,  @AT@ 2241 @LENGTH@ 836
---UPD SingleVariableDeclaration@@OutputCollector out @TO@ Map<String,OutputCollector> outMap @AT@ 2328 @LENGTH@ 19
------DEL SimpleType@@OutputCollector @AT@ 2328 @LENGTH@ 15
------INS ParameterizedType@@Map<String,OutputCollector> @TO@ SingleVariableDeclaration@@OutputCollector out @AT@ 2344 @LENGTH@ 28
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2344 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2348 @LENGTH@ 6
---------INS SimpleType@@OutputCollector @TO@ ParameterizedType@@Map<String,OutputCollector> @AT@ 2356 @LENGTH@ 15
------UPD SimpleName@@out @TO@ outMap @AT@ 2344 @LENGTH@ 3
---UPD ExpressionStatement@@Assignment:this.out=out @TO@ Assignment:this.outMap=outMap @AT@ 2436 @LENGTH@ 15
------UPD Assignment@@this.out=out @TO@ this.outMap=outMap @AT@ 2436 @LENGTH@ 14
---------UPD FieldAccess@@this.out @TO@ this.outMap @AT@ 2436 @LENGTH@ 8
------------UPD SimpleName@@out @TO@ outMap @AT@ 2441 @LENGTH@ 3
---------UPD SimpleName@@out @TO@ outMap @AT@ 2447 @LENGTH@ 3


MOV ExpressionStatement@@MethodInvocation:session.invalidate() @TO@ MethodDeclaration@@public, void, MethodName:invalidate, HttpServerExchange exchange,  @AT@ 4132 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(job,partitionFile) @TO@ MethodInvocation:ShimLoader.getHadoopShims().setTotalOrderPartitionFile(job,partitionFile) @AT@ 19777 @LENGTH@ 59
---UPD MethodInvocation@@TotalOrderPartitioner.setPartitionFile(job,partitionFile) @TO@ ShimLoader.getHadoopShims().setTotalOrderPartitionFile(job,partitionFile) @AT@ 19777 @LENGTH@ 58
------INS MethodInvocation@@MethodName:getHadoopShims:[] @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(job,partitionFile) @AT@ 19718 @LENGTH@ 27
------UPD SimpleName@@Name:TotalOrderPartitioner @TO@ Name:ShimLoader @AT@ 19777 @LENGTH@ 21
------UPD SimpleName@@MethodName:setPartitionFile:[job, partitionFile] @TO@ MethodName:setTotalOrderPartitionFile:[job, partitionFile] @AT@ 19799 @LENGTH@ 36


UPD MethodDeclaration@@T, MethodName:call, Git git, Exception,  @TO@ T, MethodName:call, Git git, GitContext context, Exception,  @AT@ 804 @LENGTH@ 31
---INS SingleVariableDeclaration@@GitContext context @TO@ MethodDeclaration@@T, MethodName:call, Git git, Exception,  @AT@ 818 @LENGTH@ 18
------INS SimpleType@@GitContext @TO@ SingleVariableDeclaration@@GitContext context @AT@ 818 @LENGTH@ 10
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@GitContext context @AT@ 829 @LENGTH@ 7


UPD VariableDeclarationStatement@@Collection collection=(Collection)result; @TO@ Collection<?> collection=(Collection<?>)result; @AT@ 7697 @LENGTH@ 44
---INS ParameterizedType@@Collection<?> @TO@ VariableDeclarationStatement@@Collection collection=(Collection)result; @AT@ 7697 @LENGTH@ 13
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 7697 @LENGTH@ 10
------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 7708 @LENGTH@ 1
---DEL SimpleType@@Collection @AT@ 7697 @LENGTH@ 10
---UPD VariableDeclarationFragment@@collection=(Collection)result @TO@ collection=(Collection<?>)result @AT@ 7708 @LENGTH@ 32
------UPD CastExpression@@(Collection)result @TO@ (Collection<?>)result @AT@ 7721 @LENGTH@ 19
---------DEL SimpleType@@Collection @AT@ 7722 @LENGTH@ 10
---------INS ParameterizedType@@Collection<?> @TO@ CastExpression@@(Collection)result @AT@ 7725 @LENGTH@ 13
------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 7725 @LENGTH@ 10
------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 7736 @LENGTH@ 1


UPD IfStatement@@if (existing == null) {  sensitivities.put(key,sensitivity);} else if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @TO@ if (existing == null) {  sensitivities.put(key,sensitivity);} else {  assert existing.isCompatibleWith(sensitivity) : "incompatible " + sensitivity.getClass().getSimpleName();} @AT@ 6429 @LENGTH@ 370
---UPD Block@@ElseBody:if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @TO@ ElseBody:{  assert existing.isCompatibleWith(sensitivity) : "incompatible " + sensitivity.getClass().getSimpleName();} @AT@ 6525 @LENGTH@ 274
------DEL IfStatement@@if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6525 @LENGTH@ 274
---------DEL PrefixExpression@@!existing.isCompatibleWith(sensitivity) @AT@ 6529 @LENGTH@ 39
------------DEL Operator@@! @AT@ 6529 @LENGTH@ 1
---------DEL Block@@ThenBody:{  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6570 @LENGTH@ 229
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("incompatible Sensitivity") @AT@ 6725 @LENGTH@ 60
---------------DEL ClassInstanceCreation@@IllegalStateException["incompatible Sensitivity"] @AT@ 6731 @LENGTH@ 53
------------------DEL New@@new @AT@ 6731 @LENGTH@ 3
------------------DEL SimpleType@@IllegalStateException @AT@ 6735 @LENGTH@ 21
------------------DEL StringLiteral@@"incompatible Sensitivity" @AT@ 6757 @LENGTH@ 26
------INS AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @TO@ Block@@ElseBody:if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6692 @LENGTH@ 129
---------MOV MethodInvocation@@existing.isCompatibleWith(sensitivity) @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6530 @LENGTH@ 38
---------INS InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6764 @LENGTH@ 56
------------INS StringLiteral@@"incompatible " @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6764 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6779 @LENGTH@ 1
------------INS MethodInvocation@@sensitivity.getClass().getSimpleName() @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 22
---------------INS SimpleName@@Name:sensitivity @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6805 @LENGTH@ 15


INS MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @TO@ TypeDeclaration@@IdentityPatchContext, [PatchContentProvider] @AT@ 3968 @LENGTH@ 101
---INS Modifier@@public @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3968 @LENGTH@ 6
---INS SimpleType@@File @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3975 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 3980 @LENGTH@ 22
---INS ReturnStatement@@MethodInvocation:contentProvider.getPatchContentRootDir() @TO@ MethodDeclaration@@public, File, MethodName:getPatchContentRootDir,  @AT@ 4015 @LENGTH@ 48
------INS MethodInvocation@@contentProvider.getPatchContentRootDir() @TO@ ReturnStatement@@MethodInvocation:contentProvider.getPatchContentRootDir() @AT@ 4022 @LENGTH@ 40
---------INS SimpleName@@Name:contentProvider @TO@ MethodInvocation@@contentProvider.getPatchContentRootDir() @AT@ 4022 @LENGTH@ 15
---------INS SimpleName@@MethodName:getPatchContentRootDir:[] @TO@ MethodInvocation@@contentProvider.getPatchContentRootDir() @AT@ 4038 @LENGTH@ 24


UPD TypeDeclaration@@[private]BeanMBean,  @TO@ [public]BeanMBean,  @AT@ 38604 @LENGTH@ 87
---UPD Modifier@@private @TO@ public @AT@ 38604 @LENGTH@ 7


UPD Block@@ThenBody:{  String originalSessionId=session.getId();  session=applySessionFixation(request);  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @TO@ ThenBody:{  String originalSessionId;  String newSessionId;  Object mutex=WebUtils.getSessionMutex(session);synchronized (mutex) {    originalSessionId=session.getId();    session=applySessionFixation(request);    newSessionId=session.getId();  }  if (originalSessionId.equals(newSessionId)) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @AT@ 3105 @LENGTH@ 538
---INS VariableDeclarationStatement@@String originalSessionId; @TO@ Block@@ThenBody:{  String originalSessionId=session.getId();  session=applySessionFixation(request);  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @AT@ 3166 @LENGTH@ 25
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String originalSessionId; @AT@ 3170 @LENGTH@ 6
------INS VariableDeclarationFragment@@originalSessionId @TO@ VariableDeclarationStatement@@String originalSessionId; @AT@ 3173 @LENGTH@ 17
---------MOV SimpleName@@originalSessionId @TO@ VariableDeclarationFragment@@originalSessionId @AT@ 3177 @LENGTH@ 17
---DEL VariableDeclarationStatement@@String originalSessionId=session.getId(); @AT@ 3170 @LENGTH@ 43
------DEL VariableDeclarationFragment@@originalSessionId=session.getId() @AT@ 3177 @LENGTH@ 35
---------DEL MethodInvocation@@session.getId() @AT@ 3197 @LENGTH@ 15
---INS VariableDeclarationStatement@@String newSessionId; @TO@ Block@@ThenBody:{  String originalSessionId=session.getId();  session=applySessionFixation(request);  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @AT@ 3204 @LENGTH@ 20
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String newSessionId; @AT@ 3204 @LENGTH@ 6
------INS VariableDeclarationFragment@@newSessionId @TO@ VariableDeclarationStatement@@String newSessionId; @AT@ 3211 @LENGTH@ 12
---------INS SimpleName@@newSessionId @TO@ VariableDeclarationFragment@@newSessionId @AT@ 3211 @LENGTH@ 12
---INS VariableDeclarationStatement@@Object mutex=WebUtils.getSessionMutex(session); @TO@ Block@@ThenBody:{  String originalSessionId=session.getId();  session=applySessionFixation(request);  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @AT@ 3237 @LENGTH@ 49
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object mutex=WebUtils.getSessionMutex(session); @AT@ 3237 @LENGTH@ 6
------INS VariableDeclarationFragment@@mutex=WebUtils.getSessionMutex(session) @TO@ VariableDeclarationStatement@@Object mutex=WebUtils.getSessionMutex(session); @AT@ 3244 @LENGTH@ 41
---------INS SimpleName@@mutex @TO@ VariableDeclarationFragment@@mutex=WebUtils.getSessionMutex(session) @AT@ 3244 @LENGTH@ 5
---------INS MethodInvocation@@WebUtils.getSessionMutex(session) @TO@ VariableDeclarationFragment@@mutex=WebUtils.getSessionMutex(session) @AT@ 3252 @LENGTH@ 33
------------INS SimpleName@@Name:WebUtils @TO@ MethodInvocation@@WebUtils.getSessionMutex(session) @AT@ 3252 @LENGTH@ 8
------------INS SimpleName@@MethodName:getSessionMutex:[session] @TO@ MethodInvocation@@WebUtils.getSessionMutex(session) @AT@ 3261 @LENGTH@ 24
---------------INS SimpleName@@session @TO@ SimpleName@@MethodName:getSessionMutex:[session] @AT@ 3277 @LENGTH@ 7
---UPD IfStatement@@if (originalSessionId.equals(session.getId())) {  logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");} @TO@ if (originalSessionId.equals(newSessionId)) {  logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");} @AT@ 3281 @LENGTH@ 278
------UPD MethodInvocation@@originalSessionId.equals(session.getId()) @TO@ originalSessionId.equals(newSessionId) @AT@ 3285 @LENGTH@ 41
---------UPD SimpleName@@MethodName:equals:[session.getId()] @TO@ MethodName:equals:[newSessionId] @AT@ 3303 @LENGTH@ 23
------------DEL MethodInvocation@@session.getId() @AT@ 3310 @LENGTH@ 15
---------------DEL SimpleName@@Name:session @AT@ 3310 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getId:[] @AT@ 3318 @LENGTH@ 7
------------INS SimpleName@@newSessionId @TO@ SimpleName@@MethodName:equals:[session.getId()] @AT@ 3591 @LENGTH@ 12
---INS SynchronizedStatement@@synchronized (mutex) {  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @TO@ Block@@ThenBody:{  String originalSessionId=session.getId();  session=applySessionFixation(request);  if (originalSessionId.equals(session.getId())) {    logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks");  }  onSessionChange(originalSessionId,session,authentication);} @AT@ 3299 @LENGTH@ 249
------INS SimpleName@@mutex @TO@ SynchronizedStatement@@synchronized (mutex) {  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @AT@ 3312 @LENGTH@ 5
------INS Block@@SyncBody:{  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @TO@ SynchronizedStatement@@synchronized (mutex) {  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @AT@ 3319 @LENGTH@ 229
---------MOV ExpressionStatement@@Assignment:session=applySessionFixation(request) @TO@ Block@@SyncBody:{  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @AT@ 3227 @LENGTH@ 40
---------INS ExpressionStatement@@Assignment:originalSessionId=session.getId() @TO@ Block@@SyncBody:{  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @AT@ 3392 @LENGTH@ 36
------------INS Assignment@@originalSessionId=session.getId() @TO@ ExpressionStatement@@Assignment:originalSessionId=session.getId() @AT@ 3392 @LENGTH@ 35
---------------INS SimpleName@@originalSessionId @TO@ Assignment@@originalSessionId=session.getId() @AT@ 3392 @LENGTH@ 17
---------------INS Operator@@= @TO@ Assignment@@originalSessionId=session.getId() @AT@ 3409 @LENGTH@ 1
---------------INS MethodInvocation@@session.getId() @TO@ Assignment@@originalSessionId=session.getId() @AT@ 3412 @LENGTH@ 15
------------------MOV SimpleName@@Name:session @TO@ MethodInvocation@@session.getId() @AT@ 3197 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@session.getId() @AT@ 3205 @LENGTH@ 7
---------INS ExpressionStatement@@Assignment:newSessionId=session.getId() @TO@ Block@@SyncBody:{  originalSessionId=session.getId();  session=applySessionFixation(request);  newSessionId=session.getId();} @AT@ 3503 @LENGTH@ 31
------------INS Assignment@@newSessionId=session.getId() @TO@ ExpressionStatement@@Assignment:newSessionId=session.getId() @AT@ 3503 @LENGTH@ 30
---------------INS SimpleName@@newSessionId @TO@ Assignment@@newSessionId=session.getId() @AT@ 3503 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@newSessionId=session.getId() @AT@ 3515 @LENGTH@ 1
---------------INS MethodInvocation@@session.getId() @TO@ Assignment@@newSessionId=session.getId() @AT@ 3518 @LENGTH@ 15
------------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.getId() @AT@ 3518 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@session.getId() @AT@ 3526 @LENGTH@ 7


UPD TryStatement@@try {  Repository repository=git.getRepository();  StoredConfig config=repository.getConfig();  String url=config.getString("remote",remote,"url");  if (Strings.isNullOrBlank(url)) {    if (LOG.isDebugEnabled()) {      LOG.debug("No remote repository defined for the git repository at " + GitHelpers.getRootGitDirectory(git) + " so not doing a pull");    }    return;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Performing a fetch in git repository " + GitHelpers.getRootGitDirectory(git) + " on remote URL: "+ url);  }  RevCommit statusBefore=CommitUtils.getHead(repository);  try {    git.fetch().setCredentialsProvider(credentialsProvider).setRemote(remote).call();  } catch (  Exception e) {    LOG.debug("Fetch failed: " + e,e);  }  Map<String,Ref> localBranches=new HashMap<String,Ref>();  Map<String,Ref> remoteBranches=new HashMap<String,Ref>();  Set<String> gitVersions=new HashSet<String>();  for (  Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {    if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {      String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());      if (!name.endsWith("-tmp")) {        remoteBranches.put(name,ref);        gitVersions.add(name);      }    } else     if (ref.getName().startsWith("refs/heads/")) {      String name=ref.getName().substring(("refs/heads/").length());      if (!name.endsWith("-tmp")) {        localBranches.put(name,ref);        gitVersions.add(name);      }    }  }  for (  String version : gitVersions) {    if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }    } else     if (!localBranches.containsKey(version)) {      git.branchCreate().setName(version).call();      git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();    } else {      String localCommit=localBranches.get(version).getObjectId().getName();      String remoteCommit=remoteBranches.get(version).getObjectId().getName();      if (!localCommit.equals(remoteCommit)) {        git.clean().setCleanDirectories(true).call();        git.checkout().setName("HEAD").setForce(true).call();        git.checkout().setName(version).setForce(true).call();        MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      }    }  }  RevCommit statusAfter=CommitUtils.getHead(repository);  if (hasChanged(statusBefore,statusAfter)) {    LOG.debug("Changed after pull!");    if (credentialsProvider != null) {      File profilesDirectory=getProfilesDirectory(git);    }    fireChangeNotifications();  }} catch (Throwable e) {  LOG.error("Failed to pull from the remote git repo " + GitHelpers.getRootGitDirectory(git) + ". Reason: "+ e,e);} @TO@ try {  Repository repository=git.getRepository();  StoredConfig config=repository.getConfig();  String url=config.getString("remote",remote,"url");  if (Strings.isNullOrBlank(url)) {    if (LOG.isDebugEnabled()) {      LOG.debug("No remote repository defined for the git repository at " + GitHelpers.getRootGitDirectory(git) + " so not doing a pull");    }    return;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Performing a fetch in git repository " + GitHelpers.getRootGitDirectory(git) + " on remote URL: "+ url);  }  boolean hasChanged=false;  try {    git.fetch().setCredentialsProvider(credentialsProvider).setRemote(remote).call();  } catch (  Exception e) {    LOG.debug("Fetch failed: " + e,e);  }  Map<String,Ref> localBranches=new HashMap<String,Ref>();  Map<String,Ref> remoteBranches=new HashMap<String,Ref>();  Set<String> gitVersions=new HashSet<String>();  for (  Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {    if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {      String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());      if (!name.endsWith("-tmp")) {        remoteBranches.put(name,ref);        gitVersions.add(name);      }    } else     if (ref.getName().startsWith("refs/heads/")) {      String name=ref.getName().substring(("refs/heads/").length());      if (!name.endsWith("-tmp")) {        localBranches.put(name,ref);        gitVersions.add(name);      }    }  }  for (  String version : gitVersions) {    if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }      hasChanged=true;    } else     if (!localBranches.containsKey(version)) {      git.branchCreate().setName(version).call();      git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();      hasChanged=true;    } else {      String localCommit=localBranches.get(version).getObjectId().getName();      String remoteCommit=remoteBranches.get(version).getObjectId().getName();      if (!localCommit.equals(remoteCommit)) {        git.clean().setCleanDirectories(true).call();        git.checkout().setName("HEAD").setForce(true).call();        git.checkout().setName(version).setForce(true).call();        MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();        if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {          hasChanged=true;        }      }    }  }  if (hasChanged) {    LOG.debug("Changed after pull!");    if (credentialsProvider != null) {      File profilesDirectory=getProfilesDirectory(git);    }    fireChangeNotifications();  }} catch (Throwable e) {  LOG.error("Failed to pull from the remote git repo " + GitHelpers.getRootGitDirectory(git) + ". Reason: "+ e,e);} @AT@ 37721 @LENGTH@ 5116
---DEL VariableDeclarationStatement@@RevCommit statusBefore=CommitUtils.getHead(repository); @AT@ 39037 @LENGTH@ 57
------DEL SimpleType@@RevCommit @AT@ 39037 @LENGTH@ 9
------DEL VariableDeclarationFragment@@statusBefore=CommitUtils.getHead(repository) @AT@ 39047 @LENGTH@ 46
---------DEL SimpleName@@statusBefore @AT@ 39047 @LENGTH@ 12
---------DEL MethodInvocation@@CommitUtils.getHead(repository) @AT@ 39062 @LENGTH@ 31
------------DEL SimpleName@@Name:CommitUtils @AT@ 39062 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getHead:[repository] @AT@ 39074 @LENGTH@ 19
---------------DEL SimpleName@@repository @AT@ 39082 @LENGTH@ 10
---UPD EnhancedForStatement@@for (String version : gitVersions) {  if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }  } else   if (!localBranches.containsKey(version)) {    git.branchCreate().setName(version).call();    git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    }  }} @TO@ for (String version : gitVersions) {  if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {    try {      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    } catch (    CannotDeleteCurrentBranchException ex) {      git.checkout().setName(MASTER_BRANCH).setForce(true).call();      git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();    }    hasChanged=true;  } else   if (!localBranches.containsKey(version)) {    git.branchCreate().setName(version).call();    git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();    hasChanged=true;  } else {    String localCommit=localBranches.get(version).getObjectId().getName();    String remoteCommit=remoteBranches.get(version).getObjectId().getName();    if (!localCommit.equals(remoteCommit)) {      git.clean().setCleanDirectories(true).call();      git.checkout().setName("HEAD").setForce(true).call();      git.checkout().setName(version).setForce(true).call();      MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {        hasChanged=true;      }    }  }} @AT@ 40429 @LENGTH@ 1689
------UPD IfStatement@@if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} else if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 40532 @LENGTH@ 1572
---------UPD Block@@ThenBody:{  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }} @TO@ ThenBody:{  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }  hasChanged=true;} @AT@ 40608 @LENGTH@ 459
------------INS ExpressionStatement@@Assignment:hasChanged=true @TO@ Block@@ThenBody:{  try {    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  } catch (  CannotDeleteCurrentBranchException ex) {    git.checkout().setName(MASTER_BRANCH).setForce(true).call();    git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();  }} @AT@ 40978 @LENGTH@ 18
---------------INS Assignment@@hasChanged=true @TO@ ExpressionStatement@@Assignment:hasChanged=true @AT@ 40978 @LENGTH@ 17
------------------INS SimpleName@@hasChanged @TO@ Assignment@@hasChanged=true @AT@ 40978 @LENGTH@ 10
------------------INS Operator@@= @TO@ Assignment@@hasChanged=true @AT@ 40988 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@hasChanged=true @AT@ 40991 @LENGTH@ 4
---------UPD Block@@ElseBody:if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ ElseBody:if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41134 @LENGTH@ 970
------------UPD IfStatement@@if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ if (!localBranches.containsKey(version)) {  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} else {  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41134 @LENGTH@ 970
---------------UPD Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} @TO@ ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();  hasChanged=true;} @AT@ 41175 @LENGTH@ 206
------------------INS ExpressionStatement@@Assignment:hasChanged=true @TO@ Block@@ThenBody:{  git.branchCreate().setName(version).call();  git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();} @AT@ 41331 @LENGTH@ 18
---------------------INS Assignment@@hasChanged=true @TO@ ExpressionStatement@@Assignment:hasChanged=true @AT@ 41331 @LENGTH@ 17
------------------------INS SimpleName@@hasChanged @TO@ Assignment@@hasChanged=true @AT@ 41331 @LENGTH@ 10
------------------------INS Operator@@= @TO@ Assignment@@hasChanged=true @AT@ 41341 @LENGTH@ 1
------------------------INS BooleanLiteral@@true @TO@ Assignment@@hasChanged=true @AT@ 41344 @LENGTH@ 4
---------------UPD Block@@ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  }} @TO@ ElseBody:{  String localCommit=localBranches.get(version).getObjectId().getName();  String remoteCommit=remoteBranches.get(version).getObjectId().getName();  if (!localCommit.equals(remoteCommit)) {    git.clean().setCleanDirectories(true).call();    git.checkout().setName("HEAD").setForce(true).call();    git.checkout().setName(version).setForce(true).call();    MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();    if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {      hasChanged=true;    }  }} @AT@ 41387 @LENGTH@ 717
------------------UPD IfStatement@@if (!localCommit.equals(remoteCommit)) {  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();} @TO@ if (!localCommit.equals(remoteCommit)) {  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {    hasChanged=true;  }} @AT@ 41597 @LENGTH@ 489
---------------------UPD Block@@ThenBody:{  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();} @TO@ ThenBody:{  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();  if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {    hasChanged=true;  }} @AT@ 41636 @LENGTH@ 450
------------------------INS IfStatement@@if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {  hasChanged=true;} @TO@ Block@@ThenBody:{  git.clean().setCleanDirectories(true).call();  git.checkout().setName("HEAD").setForce(true).call();  git.checkout().setName(version).setForce(true).call();  MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();} @AT@ 42025 @LENGTH@ 149
---------------------------INS InfixExpression@@result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE @TO@ IfStatement@@if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {  hasChanged=true;} @AT@ 42029 @LENGTH@ 69
------------------------------INS MethodInvocation@@result.getMergeStatus() @TO@ InfixExpression@@result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE @AT@ 42029 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getMergeStatus() @AT@ 42029 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getMergeStatus:[] @TO@ MethodInvocation@@result.getMergeStatus() @AT@ 42036 @LENGTH@ 16
------------------------------INS Operator@@!= @TO@ InfixExpression@@result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE @AT@ 42052 @LENGTH@ 2
------------------------------INS QualifiedName@@MergeResult.MergeStatus.ALREADY_UP_TO_DATE @TO@ InfixExpression@@result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE @AT@ 42056 @LENGTH@ 42
---------------------------------INS QualifiedName@@MergeResult.MergeStatus @TO@ QualifiedName@@MergeResult.MergeStatus.ALREADY_UP_TO_DATE @AT@ 42056 @LENGTH@ 23
------------------------------------INS SimpleName@@MergeResult @TO@ QualifiedName@@MergeResult.MergeStatus @AT@ 42056 @LENGTH@ 11
------------------------------------INS SimpleName@@MergeStatus @TO@ QualifiedName@@MergeResult.MergeStatus @AT@ 42068 @LENGTH@ 11
---------------------------------INS SimpleName@@ALREADY_UP_TO_DATE @TO@ QualifiedName@@MergeResult.MergeStatus.ALREADY_UP_TO_DATE @AT@ 42080 @LENGTH@ 18
---------------------------INS Block@@ThenBody:{  hasChanged=true;} @TO@ IfStatement@@if (result.getMergeStatus() != MergeResult.MergeStatus.ALREADY_UP_TO_DATE) {  hasChanged=true;} @AT@ 42100 @LENGTH@ 74
------------------------------INS ExpressionStatement@@Assignment:hasChanged=true @TO@ Block@@ThenBody:{  hasChanged=true;} @AT@ 42130 @LENGTH@ 18
---------------------------------INS Assignment@@hasChanged=true @TO@ ExpressionStatement@@Assignment:hasChanged=true @AT@ 42130 @LENGTH@ 17
------------------------------------INS SimpleName@@hasChanged @TO@ Assignment@@hasChanged=true @AT@ 42130 @LENGTH@ 10
------------------------------------INS Operator@@= @TO@ Assignment@@hasChanged=true @AT@ 42140 @LENGTH@ 1
------------------------------------INS BooleanLiteral@@true @TO@ Assignment@@hasChanged=true @AT@ 42143 @LENGTH@ 4
---UPD VariableDeclarationStatement@@RevCommit statusAfter=CommitUtils.getHead(repository); @TO@ boolean hasChanged=false; @AT@ 42131 @LENGTH@ 56
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@RevCommit statusAfter=CommitUtils.getHead(repository); @AT@ 38975 @LENGTH@ 7
------DEL SimpleType@@RevCommit @AT@ 42131 @LENGTH@ 9
------UPD VariableDeclarationFragment@@statusAfter=CommitUtils.getHead(repository) @TO@ hasChanged=false @AT@ 42141 @LENGTH@ 45
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@statusAfter=CommitUtils.getHead(repository) @AT@ 38996 @LENGTH@ 5
---------UPD SimpleName@@statusAfter @TO@ hasChanged @AT@ 42141 @LENGTH@ 11
---------DEL MethodInvocation@@CommitUtils.getHead(repository) @AT@ 42155 @LENGTH@ 31
------------DEL SimpleName@@Name:CommitUtils @AT@ 42155 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getHead:[repository] @AT@ 42167 @LENGTH@ 19
---------------DEL SimpleName@@repository @AT@ 42175 @LENGTH@ 10
---MOV VariableDeclarationStatement@@RevCommit statusAfter=CommitUtils.getHead(repository); @TO@ TryStatement@@try {  Repository repository=git.getRepository();  StoredConfig config=repository.getConfig();  String url=config.getString("remote",remote,"url");  if (Strings.isNullOrBlank(url)) {    if (LOG.isDebugEnabled()) {      LOG.debug("No remote repository defined for the git repository at " + GitHelpers.getRootGitDirectory(git) + " so not doing a pull");    }    return;  }  if (LOG.isDebugEnabled()) {    LOG.debug("Performing a fetch in git repository " + GitHelpers.getRootGitDirectory(git) + " on remote URL: "+ url);  }  RevCommit statusBefore=CommitUtils.getHead(repository);  try {    git.fetch().setCredentialsProvider(credentialsProvider).setRemote(remote).call();  } catch (  Exception e) {    LOG.debug("Fetch failed: " + e,e);  }  Map<String,Ref> localBranches=new HashMap<String,Ref>();  Map<String,Ref> remoteBranches=new HashMap<String,Ref>();  Set<String> gitVersions=new HashSet<String>();  for (  Ref ref : git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call()) {    if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {      String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());      if (!name.endsWith("-tmp")) {        remoteBranches.put(name,ref);        gitVersions.add(name);      }    } else     if (ref.getName().startsWith("refs/heads/")) {      String name=ref.getName().substring(("refs/heads/").length());      if (!name.endsWith("-tmp")) {        localBranches.put(name,ref);        gitVersions.add(name);      }    }  }  for (  String version : gitVersions) {    if (!version.equals(MASTER_BRANCH) && !remoteBranches.containsKey(version)) {      try {        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      } catch (      CannotDeleteCurrentBranchException ex) {        git.checkout().setName(MASTER_BRANCH).setForce(true).call();        git.branchDelete().setBranchNames(localBranches.get(version).getName()).setForce(true).call();      }    } else     if (!localBranches.containsKey(version)) {      git.branchCreate().setName(version).call();      git.reset().setMode(ResetCommand.ResetType.HARD).setRef(remoteBranches.get(version).getName()).call();    } else {      String localCommit=localBranches.get(version).getObjectId().getName();      String remoteCommit=remoteBranches.get(version).getObjectId().getName();      if (!localCommit.equals(remoteCommit)) {        git.clean().setCleanDirectories(true).call();        git.checkout().setName("HEAD").setForce(true).call();        git.checkout().setName(version).setForce(true).call();        MergeResult result=git.merge().setStrategy(MergeStrategy.THEIRS).include(remoteBranches.get(version).getObjectId()).call();      }    }  }  RevCommit statusAfter=CommitUtils.getHead(repository);  if (hasChanged(statusBefore,statusAfter)) {    LOG.debug("Changed after pull!");    if (credentialsProvider != null) {      File profilesDirectory=getProfilesDirectory(git);    }    fireChangeNotifications();  }} catch (Throwable e) {  LOG.error("Failed to pull from the remote git repo " + GitHelpers.getRootGitDirectory(git) + ". Reason: "+ e,e);} @AT@ 42131 @LENGTH@ 56
---UPD IfStatement@@if (hasChanged(statusBefore,statusAfter)) {  LOG.debug("Changed after pull!");  if (credentialsProvider != null) {    File profilesDirectory=getProfilesDirectory(git);  }  fireChangeNotifications();} @TO@ if (hasChanged) {  LOG.debug("Changed after pull!");  if (credentialsProvider != null) {    File profilesDirectory=getProfilesDirectory(git);  }  fireChangeNotifications();} @AT@ 42200 @LENGTH@ 399
------DEL MethodInvocation@@hasChanged(statusBefore,statusAfter) @AT@ 42204 @LENGTH@ 37
---------DEL SimpleName@@MethodName:hasChanged:[statusBefore, statusAfter] @AT@ 42204 @LENGTH@ 37
------------DEL SimpleName@@statusBefore @AT@ 42215 @LENGTH@ 12
------------DEL SimpleName@@statusAfter @AT@ 42229 @LENGTH@ 11
------INS SimpleName@@hasChanged @TO@ IfStatement@@if (hasChanged(statusBefore,statusAfter)) {  LOG.debug("Changed after pull!");  if (credentialsProvider != null) {    File profilesDirectory=getProfilesDirectory(git);  }  fireChangeNotifications();} @AT@ 42295 @LENGTH@ 10


UPD IfStatement@@if (existing == null) {  typeConfigs.put(key,applicationTypeConfig);} else if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @TO@ if (existing == null) {  typeConfigs.put(key,applicationTypeConfig);} else {  assert existing.isCompatibleWith(applicationTypeConfig) : "incompatible " + applicationTypeConfig.getClass().getSimpleName();} @AT@ 5927 @LENGTH@ 407
---UPD Block@@ElseBody:if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @TO@ ElseBody:{  assert existing.isCompatibleWith(applicationTypeConfig) : "incompatible " + applicationTypeConfig.getClass().getSimpleName();} @AT@ 6031 @LENGTH@ 303
------DEL IfStatement@@if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6031 @LENGTH@ 303
---------DEL PrefixExpression@@!existing.isCompatibleWith(applicationTypeConfig) @AT@ 6035 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6035 @LENGTH@ 1
---------DEL Block@@ThenBody:{  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6086 @LENGTH@ 248
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("incompatible ApplicationTypeConfig") @AT@ 6250 @LENGTH@ 70
---------------DEL ClassInstanceCreation@@IllegalStateException["incompatible ApplicationTypeConfig"] @AT@ 6256 @LENGTH@ 63
------------------DEL New@@new @AT@ 6256 @LENGTH@ 3
------------------DEL SimpleType@@IllegalStateException @AT@ 6260 @LENGTH@ 21
------------------DEL StringLiteral@@"incompatible ApplicationTypeConfig" @AT@ 6282 @LENGTH@ 36
------INS AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @TO@ Block@@ElseBody:if (!existing.isCompatibleWith(applicationTypeConfig)) {  throw new IllegalStateException("incompatible ApplicationTypeConfig");} @AT@ 6195 @LENGTH@ 149
---------MOV MethodInvocation@@existing.isCompatibleWith(applicationTypeConfig) @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6036 @LENGTH@ 48
---------INS InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(applicationTypeConfig), Msg-InfixExpression:"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6277 @LENGTH@ 66
------------INS StringLiteral@@"incompatible " @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6277 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6292 @LENGTH@ 1
------------INS MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @TO@ InfixExpression@@"incompatible " + applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 32
---------------INS SimpleName@@Name:applicationTypeConfig @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6295 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@applicationTypeConfig.getClass().getSimpleName() @AT@ 6328 @LENGTH@ 15


UPD FieldDeclaration@@public, static, final, long, [DEFAULT_SPOOL_THRESHOLD=128 * 1024] @TO@ long, [DEFAULT_SPOOL_THRESHOLD=128 * 1024] @AT@ 1294 @LENGTH@ 62
---DEL Modifier@@public @AT@ 1294 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1301 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1308 @LENGTH@ 5


MOV ExpressionStatement@@Assignment:messageReceived=true @TO@ MethodDeclaration@@public, void, MethodName:messageReceived, ChannelHandlerContext ctx, MessageEvent messageEvent, Exception,  @AT@ 5315 @LENGTH@ 23


INS MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @TO@ TypeDeclaration@@[public]MongoOperations,  @AT@ 13420 @LENGTH@ 99
---INS ParameterizedType@@AggregationResults<T> @TO@ MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 13398 @LENGTH@ 21
------INS SimpleType@@AggregationResults @TO@ ParameterizedType@@AggregationResults<T> @AT@ 13398 @LENGTH@ 18
------INS SimpleType@@T @TO@ ParameterizedType@@AggregationResults<T> @AT@ 13417 @LENGTH@ 1
---INS SimpleName@@MethodName:aggregate @TO@ MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 13420 @LENGTH@ 9
---INS SingleVariableDeclaration@@String inputCollectionName @TO@ MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 13430 @LENGTH@ 26
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String inputCollectionName @AT@ 13430 @LENGTH@ 6
------INS SimpleName@@inputCollectionName @TO@ SingleVariableDeclaration@@String inputCollectionName @AT@ 13437 @LENGTH@ 19
---INS SingleVariableDeclaration@@Class<T> entityClass @TO@ MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 13458 @LENGTH@ 20
------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> entityClass @AT@ 13458 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 13458 @LENGTH@ 5
---------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 13464 @LENGTH@ 1
------INS SimpleName@@entityClass @TO@ SingleVariableDeclaration@@Class<T> entityClass @AT@ 13467 @LENGTH@ 11
---INS SingleVariableDeclaration@@AggregationOperation... operations @TO@ MethodDeclaration@@AggregationResults<T>, T, MethodName:aggregate, String inputCollectionName, Class<T> entityClass, AggregationOperation... operations,  @AT@ 13483 @LENGTH@ 34
------INS SimpleType@@AggregationOperation @TO@ SingleVariableDeclaration@@AggregationOperation... operations @AT@ 13483 @LENGTH@ 20
------INS SimpleName@@operations @TO@ SingleVariableDeclaration@@AggregationOperation... operations @AT@ 13507 @LENGTH@ 10


INS MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @TO@ TypeDeclaration@@[public]InstallationManager,  @AT@ 388 @LENGTH@ 23
---INS SimpleType@@InstalledIdentity @TO@ MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @AT@ 370 @LENGTH@ 17
---INS SimpleName@@MethodName:getInstalledIdentity @TO@ MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @AT@ 388 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:Thread.currentThread().wait(WAIT_FOR_LOCK) @TO@ MethodInvocation:Thread.sleep(WAIT_FOR_LOCK) @AT@ 5311 @LENGTH@ 43
---UPD MethodInvocation@@Thread.currentThread().wait(WAIT_FOR_LOCK) @TO@ Thread.sleep(WAIT_FOR_LOCK) @AT@ 5311 @LENGTH@ 42
------DEL MethodInvocation@@MethodName:currentThread:[] @AT@ 5311 @LENGTH@ 22
------UPD SimpleName@@MethodName:wait:[WAIT_FOR_LOCK] @TO@ MethodName:sleep:[WAIT_FOR_LOCK] @AT@ 5334 @LENGTH@ 19


INS MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @TO@ TypeDeclaration@@[public]InstallationManager,  @AT@ 388 @LENGTH@ 23
---INS SimpleType@@InstalledIdentity @TO@ MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @AT@ 370 @LENGTH@ 17
---INS SimpleName@@MethodName:getInstalledIdentity @TO@ MethodDeclaration@@InstalledIdentity, MethodName:getInstalledIdentity,  @AT@ 388 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertThat(mappings.getMappingFor(Person.class).isExported(),is(false)) @TO@ MethodInvocation:assertThat(mappings.getMappingFor(Person.class).isExported(),is(true)) @AT@ 2006 @LENGTH@ 73
---UPD MethodInvocation@@assertThat(mappings.getMappingFor(Person.class).isExported(),is(false)) @TO@ assertThat(mappings.getMappingFor(Person.class).isExported(),is(true)) @AT@ 2006 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertThat:[mappings.getMappingFor(Person.class).isExported(), is(false)] @TO@ MethodName:assertThat:[mappings.getMappingFor(Person.class).isExported(), is(true)] @AT@ 2006 @LENGTH@ 72
---------UPD MethodInvocation@@is(false) @TO@ is(true) @AT@ 2068 @LENGTH@ 9
------------UPD SimpleName@@MethodName:is:[false] @TO@ MethodName:is:[true] @AT@ 2068 @LENGTH@ 9
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 2071 @LENGTH@ 5
------------UPD SimpleName@@MethodName:is:[false] @TO@ MethodName:is:[true] @AT@ 2068 @LENGTH@ 9
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 2071 @LENGTH@ 5


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [PROXY_LIST=SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().build()] @TO@ static, final, SimpleAttributeDefinition, [PROXY_LIST=SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().setValidator(new ProxyListValidator()).build()] @AT@ 3205 @LENGTH@ 241
---UPD VariableDeclarationFragment@@PROXY_LIST=SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().build() @TO@ PROXY_LIST=SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().setValidator(new ProxyListValidator()).build() @AT@ 3244 @LENGTH@ 201
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().build() @TO@ SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().setValidator(new ProxyListValidator()).build() @AT@ 3257 @LENGTH@ 188
---------INS MethodInvocation@@MethodName:setValidator:[new ProxyListValidator()] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.PROXY_LIST,ModelType.STRING,true).setAllowExpression(true).setRestartAllServices().build() @AT@ 3257 @LENGTH@ 219
------------INS ClassInstanceCreation@@ProxyListValidator[] @TO@ MethodInvocation@@MethodName:setValidator:[new ProxyListValidator()] @AT@ 3451 @LENGTH@ 24
---------------INS New@@new @TO@ ClassInstanceCreation@@ProxyListValidator[] @AT@ 3451 @LENGTH@ 3
---------------INS SimpleType@@ProxyListValidator @TO@ ClassInstanceCreation@@ProxyListValidator[] @AT@ 3455 @LENGTH@ 18


UPD TypeDeclaration@@[@ContextConfiguration, public]RestletDomainServiceTest, AbstractJUnit4SpringContextTests @TO@ [@ContextConfiguration, @Ignore("CAMEL-6770"), public]RestletDomainServiceTest, AbstractJUnit4SpringContextTests @AT@ 1205 @LENGTH@ 1090
---INS SingleMemberAnnotation@@@Ignore("CAMEL-6770") @TO@ TypeDeclaration@@[@ContextConfiguration, public]RestletDomainServiceTest, AbstractJUnit4SpringContextTests @AT@ 1252 @LENGTH@ 21


UPD FieldDeclaration@@private, boolean, [verbose=false] @TO@ private, boolean, [verbose] @AT@ 1424 @LENGTH@ 32
---UPD VariableDeclarationFragment@@verbose=false @TO@ verbose @AT@ 1440 @LENGTH@ 15
------DEL BooleanLiteral@@false @AT@ 1450 @LENGTH@ 5


INS MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @TO@ TypeDeclaration@@[public]FabricManager, [FabricManagerMBean] @AT@ 26402 @LENGTH@ 466
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26402 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26409 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 26409 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 26413 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 26421 @LENGTH@ 6
---INS SimpleName@@MethodName:currentContainerConfigurationFiles @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26429 @LENGTH@ 34
---INS VariableDeclarationStatement@@String containerName=getCurrentContainerName(); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26476 @LENGTH@ 49
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String containerName=getCurrentContainerName(); @AT@ 26476 @LENGTH@ 6
------INS VariableDeclarationFragment@@containerName=getCurrentContainerName() @TO@ VariableDeclarationStatement@@String containerName=getCurrentContainerName(); @AT@ 26483 @LENGTH@ 41
---------INS SimpleName@@containerName @TO@ VariableDeclarationFragment@@containerName=getCurrentContainerName() @AT@ 26483 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:getCurrentContainerName:[] @TO@ VariableDeclarationFragment@@containerName=getCurrentContainerName() @AT@ 26499 @LENGTH@ 25
---INS VariableDeclarationStatement@@FabricServiceImpl service=getFabricService(); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26534 @LENGTH@ 47
------INS SimpleType@@FabricServiceImpl @TO@ VariableDeclarationStatement@@FabricServiceImpl service=getFabricService(); @AT@ 26534 @LENGTH@ 17
------INS VariableDeclarationFragment@@service=getFabricService() @TO@ VariableDeclarationStatement@@FabricServiceImpl service=getFabricService(); @AT@ 26552 @LENGTH@ 28
---------INS SimpleName@@service @TO@ VariableDeclarationFragment@@service=getFabricService() @AT@ 26552 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getFabricService:[] @TO@ VariableDeclarationFragment@@service=getFabricService() @AT@ 26562 @LENGTH@ 18
---INS VariableDeclarationStatement@@Container container=service.getContainer(containerName); @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26590 @LENGTH@ 58
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container container=service.getContainer(containerName); @AT@ 26590 @LENGTH@ 9
------INS VariableDeclarationFragment@@container=service.getContainer(containerName) @TO@ VariableDeclarationStatement@@Container container=service.getContainer(containerName); @AT@ 26600 @LENGTH@ 47
---------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=service.getContainer(containerName) @AT@ 26600 @LENGTH@ 9
---------INS MethodInvocation@@service.getContainer(containerName) @TO@ VariableDeclarationFragment@@container=service.getContainer(containerName) @AT@ 26612 @LENGTH@ 35
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getContainer(containerName) @AT@ 26612 @LENGTH@ 7
------------INS SimpleName@@MethodName:getContainer:[containerName] @TO@ MethodInvocation@@service.getContainer(containerName) @AT@ 26620 @LENGTH@ 27
---------------INS SimpleName@@containerName @TO@ SimpleName@@MethodName:getContainer:[containerName] @AT@ 26633 @LENGTH@ 13
---INS IfStatement@@if (container != null) {  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26657 @LENGTH@ 159
------INS InfixExpression@@container != null @TO@ IfStatement@@if (container != null) {  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @AT@ 26661 @LENGTH@ 17
---------INS SimpleName@@container @TO@ InfixExpression@@container != null @AT@ 26661 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@container != null @AT@ 26670 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@container != null @AT@ 26674 @LENGTH@ 4
------INS Block@@ThenBody:{  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @TO@ IfStatement@@if (container != null) {  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @AT@ 26680 @LENGTH@ 136
---------INS VariableDeclarationStatement@@Profile[] profiles=container.getProfiles(); @TO@ Block@@ThenBody:{  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @AT@ 26694 @LENGTH@ 45
------------INS ArrayType@@Profile[] @TO@ VariableDeclarationStatement@@Profile[] profiles=container.getProfiles(); @AT@ 26694 @LENGTH@ 9
---------------INS SimpleType@@Profile @TO@ ArrayType@@Profile[] @AT@ 26694 @LENGTH@ 7
------------INS VariableDeclarationFragment@@profiles=container.getProfiles() @TO@ VariableDeclarationStatement@@Profile[] profiles=container.getProfiles(); @AT@ 26704 @LENGTH@ 34
---------------INS SimpleName@@profiles @TO@ VariableDeclarationFragment@@profiles=container.getProfiles() @AT@ 26704 @LENGTH@ 8
---------------INS MethodInvocation@@container.getProfiles() @TO@ VariableDeclarationFragment@@profiles=container.getProfiles() @AT@ 26715 @LENGTH@ 23
------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.getProfiles() @AT@ 26715 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getProfiles:[] @TO@ MethodInvocation@@container.getProfiles() @AT@ 26725 @LENGTH@ 13
---------INS ReturnStatement@@MethodInvocation:Profiles.getConfigurationFileNameMap(profiles) @TO@ Block@@ThenBody:{  Profile[] profiles=container.getProfiles();  return Profiles.getConfigurationFileNameMap(profiles);} @AT@ 26752 @LENGTH@ 54
------------INS MethodInvocation@@Profiles.getConfigurationFileNameMap(profiles) @TO@ ReturnStatement@@MethodInvocation:Profiles.getConfigurationFileNameMap(profiles) @AT@ 26759 @LENGTH@ 46
---------------INS SimpleName@@Name:Profiles @TO@ MethodInvocation@@Profiles.getConfigurationFileNameMap(profiles) @AT@ 26759 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getConfigurationFileNameMap:[profiles] @TO@ MethodInvocation@@Profiles.getConfigurationFileNameMap(profiles) @AT@ 26768 @LENGTH@ 37
------------------INS SimpleName@@profiles @TO@ SimpleName@@MethodName:getConfigurationFileNameMap:[profiles] @AT@ 26796 @LENGTH@ 8
---INS ReturnStatement@@ClassInstanceCreation:new HashMap<String,String>() @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:currentContainerConfigurationFiles,  @AT@ 26825 @LENGTH@ 37
------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ ReturnStatement@@ClassInstanceCreation:new HashMap<String,String>() @AT@ 26832 @LENGTH@ 29
---------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 26832 @LENGTH@ 3
---------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 26836 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 26836 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 26844 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 26852 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:mock.message(0).body(String.class).isEqualTo("Hello World") @TO@ MethodInvocation:mock.message(0).body(InputStream.class).convertToString().isEqualTo("Hello World") @AT@ 1601 @LENGTH@ 60
---UPD MethodInvocation@@mock.message(0).body(String.class).isEqualTo("Hello World") @TO@ mock.message(0).body(InputStream.class).convertToString().isEqualTo("Hello World") @AT@ 1601 @LENGTH@ 59
------INS MethodInvocation@@MethodName:convertToString:[] @TO@ MethodInvocation@@mock.message(0).body(String.class).isEqualTo("Hello World") @AT@ 1601 @LENGTH@ 57
------UPD MethodInvocation@@MethodName:body:[String.class] @TO@ MethodName:body:[InputStream.class] @AT@ 1601 @LENGTH@ 34
---------UPD TypeLiteral@@String.class @TO@ InputStream.class @AT@ 1622 @LENGTH@ 12


UPD IfStatement@@if (existing == null) {  sensitivities.put(key,sensitivity);} else if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @TO@ if (existing == null) {  sensitivities.put(key,sensitivity);} else {  assert existing.isCompatibleWith(sensitivity) : "incompatible " + sensitivity.getClass().getSimpleName();} @AT@ 6429 @LENGTH@ 370
---UPD Block@@ElseBody:if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @TO@ ElseBody:{  assert existing.isCompatibleWith(sensitivity) : "incompatible " + sensitivity.getClass().getSimpleName();} @AT@ 6525 @LENGTH@ 274
------DEL IfStatement@@if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6525 @LENGTH@ 274
---------DEL PrefixExpression@@!existing.isCompatibleWith(sensitivity) @AT@ 6529 @LENGTH@ 39
------------DEL Operator@@! @AT@ 6529 @LENGTH@ 1
---------DEL Block@@ThenBody:{  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6570 @LENGTH@ 229
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("incompatible Sensitivity") @AT@ 6725 @LENGTH@ 60
---------------DEL ClassInstanceCreation@@IllegalStateException["incompatible Sensitivity"] @AT@ 6731 @LENGTH@ 53
------------------DEL New@@new @AT@ 6731 @LENGTH@ 3
------------------DEL SimpleType@@IllegalStateException @AT@ 6735 @LENGTH@ 21
------------------DEL StringLiteral@@"incompatible Sensitivity" @AT@ 6757 @LENGTH@ 26
------INS AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @TO@ Block@@ElseBody:if (!existing.isCompatibleWith(sensitivity)) {  throw new IllegalStateException("incompatible Sensitivity");} @AT@ 6692 @LENGTH@ 129
---------MOV MethodInvocation@@existing.isCompatibleWith(sensitivity) @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6530 @LENGTH@ 38
---------INS InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @TO@ AssertStatement@@MethodInvocation:existing.isCompatibleWith(sensitivity), Msg-InfixExpression:"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6764 @LENGTH@ 56
------------INS StringLiteral@@"incompatible " @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6764 @LENGTH@ 15
------------INS Operator@@+ @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6779 @LENGTH@ 1
------------INS MethodInvocation@@sensitivity.getClass().getSimpleName() @TO@ InfixExpression@@"incompatible " + sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 22
---------------INS SimpleName@@Name:sensitivity @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6782 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@sensitivity.getClass().getSimpleName() @AT@ 6805 @LENGTH@ 15


DEL VariableDeclarationStatement@@final ModuleItem item=createContentItem(contentItem,itemHash); @AT@ 2356 @LENGTH@ 65
---DEL Modifier@@final @AT@ 2356 @LENGTH@ 5
---DEL SimpleType@@ModuleItem @AT@ 2362 @LENGTH@ 10
---DEL VariableDeclarationFragment@@item=createContentItem(contentItem,itemHash) @AT@ 2373 @LENGTH@ 47
------DEL SimpleName@@item @AT@ 2373 @LENGTH@ 4
------DEL MethodInvocation@@createContentItem(contentItem,itemHash) @AT@ 2380 @LENGTH@ 40
---------DEL SimpleName@@MethodName:createContentItem:[contentItem, itemHash] @AT@ 2380 @LENGTH@ 40
------------DEL SimpleName@@contentItem @AT@ 2398 @LENGTH@ 11
------------DEL SimpleName@@itemHash @AT@ 2411 @LENGTH@ 8


UPD ReturnStatement@@BooleanLiteral:true @TO@ MethodInvocation:pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19584 @LENGTH@ 12
---INS MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 19576 @LENGTH@ 44
------INS SimpleName@@Name:pluggableMBeanServerImpl @TO@ MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19576 @LENGTH@ 24
------INS SimpleName@@MethodName:shouldLog:[readOnly] @TO@ MethodInvocation@@pluggableMBeanServerImpl.shouldLog(readOnly) @AT@ 19601 @LENGTH@ 19
---------INS SimpleName@@readOnly @TO@ SimpleName@@MethodName:shouldLog:[readOnly] @AT@ 19611 @LENGTH@ 8
---DEL BooleanLiteral@@true @AT@ 19591 @LENGTH@ 4


INS MethodDeclaration@@public, int, MethodName:getBufferSize,  @TO@ TypeDeclaration@@[public]CachedOutputStream, OutputStream @AT@ 8740 @LENGTH@ 74
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getBufferSize,  @AT@ 8740 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getBufferSize,  @AT@ 8747 @LENGTH@ 3
---INS SimpleName@@MethodName:getBufferSize @TO@ MethodDeclaration@@public, int, MethodName:getBufferSize,  @AT@ 8751 @LENGTH@ 13
---INS ReturnStatement@@MethodInvocation:getStrategyBufferSize() @TO@ MethodDeclaration@@public, int, MethodName:getBufferSize,  @AT@ 8777 @LENGTH@ 31
------INS MethodInvocation@@MethodName:getStrategyBufferSize:[] @TO@ ReturnStatement@@MethodInvocation:getStrategyBufferSize() @AT@ 8784 @LENGTH@ 23


UPD IfStatement@@if (CUMULATIVE == patch.getPatchType()) {  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} else {  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @TO@ if (CUMULATIVE == patch.getPatchType()) {  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());  assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion());} else {  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));  assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0));} @AT@ 6633 @LENGTH@ 245
---UPD Block@@ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} @TO@ ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());  assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion());} @AT@ 6673 @LENGTH@ 98
------INS ExpressionStatement@@MethodInvocation:assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @TO@ Block@@ThenBody:{  assertEquals(patch.getPatchId(),result.getPatchInfo().getCumulativeID());} @AT@ 6898 @LENGTH@ 78
---------INS MethodInvocation@@assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @AT@ 6898 @LENGTH@ 77
------------INS SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @TO@ MethodInvocation@@assertEquals(patch.getResultingVersion(),result.getPatchInfo().getVersion()) @AT@ 6898 @LENGTH@ 77
---------------INS MethodInvocation@@patch.getResultingVersion() @TO@ SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @AT@ 6911 @LENGTH@ 27
------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getResultingVersion() @AT@ 6911 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getResultingVersion:[] @TO@ MethodInvocation@@patch.getResultingVersion() @AT@ 6917 @LENGTH@ 21
---------------INS MethodInvocation@@result.getPatchInfo().getVersion() @TO@ SimpleName@@MethodName:assertEquals:[patch.getResultingVersion(), result.getPatchInfo().getVersion()] @AT@ 6940 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6940 @LENGTH@ 21
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6940 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getVersion:[] @TO@ MethodInvocation@@result.getPatchInfo().getVersion() @AT@ 6962 @LENGTH@ 12
---UPD Block@@ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @TO@ ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));  assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0));} @AT@ 6777 @LENGTH@ 101
------INS ExpressionStatement@@MethodInvocation:assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @TO@ Block@@ElseBody:{  assertTrue(result.getPatchInfo().getPatchIDs().contains(patch.getPatchId()));} @AT@ 7163 @LENGTH@ 77
---------INS MethodInvocation@@assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @AT@ 7163 @LENGTH@ 76
------------INS SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @TO@ MethodInvocation@@assertEquals(patch.getPatchId(),result.getPatchInfo().getPatchIDs().get(0)) @AT@ 7163 @LENGTH@ 76
---------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @AT@ 7176 @LENGTH@ 18
------------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 7176 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 7182 @LENGTH@ 12
---------------INS MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @TO@ SimpleName@@MethodName:assertEquals:[patch.getPatchId(), result.getPatchInfo().getPatchIDs().get(0)] @AT@ 7196 @LENGTH@ 42
------------------INS MethodInvocation@@MethodName:getPatchIDs:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 35
------------------INS MethodInvocation@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 21
------------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7196 @LENGTH@ 6
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.getPatchInfo().getPatchIDs().get(0) @AT@ 7232 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7236 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:executeCommand("fabric:create -n --clean --zookeeper-password testpassword root") @TO@ MethodInvocation:System.out.println(executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")) @AT@ 2825 @LENGTH@ 82
---INS MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")) @TO@ ExpressionStatement@@MethodInvocation:executeCommand("fabric:create -n --clean --zookeeper-password testpassword root") @AT@ 2845 @LENGTH@ 101
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")) @AT@ 2845 @LENGTH@ 10
------INS SimpleName@@MethodName:println:[executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")] @TO@ MethodInvocation@@System.out.println(executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")) @AT@ 2856 @LENGTH@ 90
---------MOV MethodInvocation@@executeCommand("fabric:create -n --clean --zookeeper-password testpassword root") @TO@ SimpleName@@MethodName:println:[executeCommand("fabric:create -n --clean --zookeeper-password testpassword root")] @AT@ 2825 @LENGTH@ 81


UPD VariableDeclarationStatement@@String jobName=jobExecution.getJobInstance() == null ? null : jobExecution.getJobInstance().getJobName(); @TO@ String jobName=jobExecution.getJobInstance() == null ? jobInstanceDao.getJobInstance(jobExecution).getJobName() : jobExecution.getJobInstance().getJobName(); @AT@ 4569 @LENGTH@ 107
---UPD VariableDeclarationFragment@@jobName=jobExecution.getJobInstance() == null ? null : jobExecution.getJobInstance().getJobName() @TO@ jobName=jobExecution.getJobInstance() == null ? jobInstanceDao.getJobInstance(jobExecution).getJobName() : jobExecution.getJobInstance().getJobName() @AT@ 4576 @LENGTH@ 99
------UPD ConditionalExpression@@jobExecution.getJobInstance() == null ? null : jobExecution.getJobInstance().getJobName() @TO@ jobExecution.getJobInstance() == null ? jobInstanceDao.getJobInstance(jobExecution).getJobName() : jobExecution.getJobInstance().getJobName() @AT@ 4586 @LENGTH@ 89
---------DEL NullLiteral@@null @AT@ 4626 @LENGTH@ 4
---------INS MethodInvocation@@jobInstanceDao.getJobInstance(jobExecution).getJobName() @TO@ ConditionalExpression@@jobExecution.getJobInstance() == null ? null : jobExecution.getJobInstance().getJobName() @AT@ 4634 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:getJobInstance:[jobExecution] @TO@ MethodInvocation@@jobInstanceDao.getJobInstance(jobExecution).getJobName() @AT@ 4634 @LENGTH@ 43
---------------INS SimpleName@@jobExecution @TO@ MethodInvocation@@MethodName:getJobInstance:[jobExecution] @AT@ 4664 @LENGTH@ 12
------------INS SimpleName@@Name:jobInstanceDao @TO@ MethodInvocation@@jobInstanceDao.getJobInstance(jobExecution).getJobName() @AT@ 4634 @LENGTH@ 14
------------INS SimpleName@@MethodName:getJobName:[] @TO@ MethodInvocation@@jobInstanceDao.getJobInstance(jobExecution).getJobName() @AT@ 4678 @LENGTH@ 12


INS IfStatement@@if (RUNTIME_QUEUE.equals(address.getLastElement().getKey())) {  return false;} @TO@ MethodDeclaration@@static, boolean, MethodName:forwardToRuntimeQueue, OperationContext context, ModelNode operation, OperationStepHandler handler,  @AT@ 7523 @LENGTH@ 98
---INS MethodInvocation@@RUNTIME_QUEUE.equals(address.getLastElement().getKey()) @TO@ IfStatement@@if (RUNTIME_QUEUE.equals(address.getLastElement().getKey())) {  return false;} @AT@ 7527 @LENGTH@ 55
------INS SimpleName@@Name:RUNTIME_QUEUE @TO@ MethodInvocation@@RUNTIME_QUEUE.equals(address.getLastElement().getKey()) @AT@ 7527 @LENGTH@ 13
------INS SimpleName@@MethodName:equals:[address.getLastElement().getKey()] @TO@ MethodInvocation@@RUNTIME_QUEUE.equals(address.getLastElement().getKey()) @AT@ 7541 @LENGTH@ 41
---------INS MethodInvocation@@address.getLastElement().getKey() @TO@ SimpleName@@MethodName:equals:[address.getLastElement().getKey()] @AT@ 7548 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getLastElement:[] @TO@ MethodInvocation@@address.getLastElement().getKey() @AT@ 7548 @LENGTH@ 24
------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getLastElement().getKey() @AT@ 7548 @LENGTH@ 7
------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@address.getLastElement().getKey() @AT@ 7573 @LENGTH@ 8
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (RUNTIME_QUEUE.equals(address.getLastElement().getKey())) {  return false;} @AT@ 7584 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 7598 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 7605 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:System.out.println("Upgrade handler disconnected") @AT@ 2757 @LENGTH@ 51
---DEL MethodInvocation@@System.out.println("Upgrade handler disconnected") @AT@ 2757 @LENGTH@ 50
------DEL QualifiedName@@Name:System.out @AT@ 2757 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["Upgrade handler disconnected"] @AT@ 2768 @LENGTH@ 39
---------DEL StringLiteral@@"Upgrade handler disconnected" @AT@ 2776 @LENGTH@ 30


UPD MethodDeclaration@@public, boolean, MethodName:hasPosition, int position,  @TO@ public, boolean, MethodName:hasPosition, Integer position,  @AT@ 7171 @LENGTH@ 104
---UPD SingleVariableDeclaration@@int position @TO@ Integer position @AT@ 7198 @LENGTH@ 12
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@int position @AT@ 7198 @LENGTH@ 7
------DEL PrimitiveType@@int @AT@ 7198 @LENGTH@ 3
---UPD ReturnStatement@@InfixExpression:this.name == null && this.position == position @TO@ InfixExpression:position != null && this.name == null && this.position == position @AT@ 7217 @LENGTH@ 54
------UPD InfixExpression@@this.name == null && this.position == position @TO@ position != null && this.name == null && this.position == position @AT@ 7224 @LENGTH@ 46
---------INS InfixExpression@@position != null && this.name == null @TO@ InfixExpression@@this.name == null && this.position == position @AT@ 7228 @LENGTH@ 37
------------MOV InfixExpression@@this.name == null @TO@ InfixExpression@@position != null && this.name == null @AT@ 7224 @LENGTH@ 17
------------INS InfixExpression@@position != null @TO@ InfixExpression@@position != null && this.name == null @AT@ 7228 @LENGTH@ 16
---------------INS SimpleName@@position @TO@ InfixExpression@@position != null @AT@ 7228 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@position != null @AT@ 7236 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@position != null @AT@ 7240 @LENGTH@ 4
------------MOV Operator@@&& @TO@ InfixExpression@@position != null && this.name == null @AT@ 7241 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@this.name == null && this.position == position @AT@ 7265 @LENGTH@ 2


UPD MethodDeclaration@@voidMethodName:FileModifyTask, MiscContentItem item, File target, File backup, ContentModification modification,  @TO@ voidMethodName:FileUpdateTask, MiscContentItem item, File target, File backup, ContentModification modification,  @AT@ 1491 @LENGTH@ 155
---UPD SimpleName@@MethodName:FileModifyTask @TO@ MethodName:FileUpdateTask @AT@ 1491 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()) @TO@ MethodInvocation:assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 19751 @LENGTH@ 269
---UPD MethodInvocation@@assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()) @TO@ assertEquals(0,driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()) @AT@ 19751 @LENGTH@ 268
------UPD SimpleName@@MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode()] @TO@ MethodName:assertEquals:[0, driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode()] @AT@ 19751 @LENGTH@ 268
---------UPD MethodInvocation@@driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'").getResponseCode() @TO@ driver.run("create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'").getResponseCode() @AT@ 19767 @LENGTH@ 251
------------UPD MethodInvocation@@MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'"] @TO@ MethodName:run:["create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'"] @AT@ 19767 @LENGTH@ 233
---------------UPD InfixExpression@@"create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getAbsolutePath()+ "'" @TO@ "create external table " + tbl + " (a string, b boolean) row format delimited fields terminated by '\t'"+ " stored as textfile location 'file://"+ inputDataDir.getPath().replaceAll("\\\\","/")+ "'" @AT@ 19778 @LENGTH@ 221
------------------UPD MethodInvocation@@inputDataDir.getAbsolutePath() @TO@ inputDataDir.getPath().replaceAll("\\\\","/") @AT@ 19963 @LENGTH@ 30
---------------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@inputDataDir.getAbsolutePath() @AT@ 19934 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@inputDataDir.getAbsolutePath() @AT@ 19934 @LENGTH@ 22
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:replaceAll:["\\\\", "/"] @AT@ 19976 @LENGTH@ 17
------------------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 19968 @LENGTH@ 6
------------------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 19968 @LENGTH@ 6
------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:getAbsolutePath:[] @AT@ 19976 @LENGTH@ 3


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()] @TO@ private, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName()] @AT@ 1482 @LENGTH@ 152
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @TO@ TEST_DATA_DIR="/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1510 @LENGTH@ 123
------UPD InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @TO@ "/tmp/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1526 @LENGTH@ 107
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 1526 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 1526 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 1533 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 1545 @LENGTH@ 10
---------INS StringLiteral@@"/tmp/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestHCatStorerMulti.class.getCanonicalName() @AT@ 1534 @LENGTH@ 23
---------DEL StringLiteral@@"/build/test/data/" @AT@ 1567 @LENGTH@ 19


UPD MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @TO@ private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName, boolean isDefaultResponse,  @AT@ 38901 @LENGTH@ 538
---UPD VariableDeclarationStatement@@ModelNode currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode(); @TO@ ModelNode currentValue; @AT@ 39091 @LENGTH@ 95
------UPD VariableDeclarationFragment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ currentValue @AT@ 39101 @LENGTH@ 84
---INS SingleVariableDeclaration@@boolean isDefaultResponse @TO@ MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @AT@ 39225 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 39225 @LENGTH@ 7
------INS SimpleName@@isDefaultResponse @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 39233 @LENGTH@ 17
---INS IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @TO@ MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @AT@ 39370 @LENGTH@ 269
------INS SimpleName@@isDefaultResponse @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39374 @LENGTH@ 17
------INS Block@@ThenBody:{  currentValue=new ModelNode();} @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39393 @LENGTH@ 131
---------INS ExpressionStatement@@Assignment:currentValue=new ModelNode() @TO@ Block@@ThenBody:{  currentValue=new ModelNode();} @AT@ 39483 @LENGTH@ 31
------------INS Assignment@@currentValue=new ModelNode() @TO@ ExpressionStatement@@Assignment:currentValue=new ModelNode() @AT@ 39483 @LENGTH@ 30
---------------INS SimpleName@@currentValue @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39483 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39495 @LENGTH@ 1
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39498 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 39498 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 39502 @LENGTH@ 9
------INS Block@@ElseBody:{  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39530 @LENGTH@ 109
---------INS ExpressionStatement@@Assignment:currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ Block@@ElseBody:{  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39544 @LENGTH@ 85
------------INS Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ ExpressionStatement@@Assignment:currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39544 @LENGTH@ 84
---------------MOV ConditionalExpression@@model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39116 @LENGTH@ 69
---------------INS SimpleName@@currentValue @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39544 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39556 @LENGTH@ 1


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]AutoClusterStartupTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]AutoClusterStartupTest, FabricTestSupport @AT@ 2043 @LENGTH@ 2048
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]AutoClusterStartupTest, FabricTestSupport @AT@ 2161 @LENGTH@ 49


INS VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @TO@ MethodDeclaration@@protected, void, MethodName:addModule, CommandContext ctx, final ParsedCommandLine parsedCmd, CommandLineException,  @AT@ 10429 @LENGTH@ 138
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10429 @LENGTH@ 5
---INS SimpleType@@FilenameTabCompleter @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10435 @LENGTH@ 20
---INS VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @TO@ VariableDeclarationStatement@@final FilenameTabCompleter pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx); @AT@ 10456 @LENGTH@ 110
------INS SimpleName@@pathCompleter @TO@ VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10456 @LENGTH@ 13
------INS ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @TO@ VariableDeclarationFragment@@pathCompleter=Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10472 @LENGTH@ 94
---------INS MethodInvocation@@Util.isWindows() @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10472 @LENGTH@ 16
------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.isWindows() @AT@ 10472 @LENGTH@ 4
------------INS SimpleName@@MethodName:isWindows:[] @TO@ MethodInvocation@@Util.isWindows() @AT@ 10477 @LENGTH@ 11
---------INS ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10491 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10491 @LENGTH@ 3
------------INS SimpleType@@WindowsFilenameTabCompleter @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10495 @LENGTH@ 27
------------INS SimpleName@@ctx @TO@ ClassInstanceCreation@@WindowsFilenameTabCompleter[ctx] @AT@ 10523 @LENGTH@ 3
---------INS ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @TO@ ConditionalExpression@@Util.isWindows() ? new WindowsFilenameTabCompleter(ctx) : new DefaultFilenameTabCompleter(ctx) @AT@ 10530 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10530 @LENGTH@ 3
------------INS SimpleType@@DefaultFilenameTabCompleter @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10534 @LENGTH@ 27
------------INS SimpleName@@ctx @TO@ ClassInstanceCreation@@DefaultFilenameTabCompleter[ctx] @AT@ 10562 @LENGTH@ 3


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleMQProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ExampleMQProfileTest, FabricTestSupport @AT@ 1151 @LENGTH@ 1092
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ExampleMQProfileTest, FabricTestSupport @AT@ 1244 @LENGTH@ 49


UPD VariableDeclarationStatement@@Profile parentOverlay=new ProfileOverlayImpl(parent); @TO@ Profile parentOverlay=parent.getOverlay(); @AT@ 11121 @LENGTH@ 55
---UPD VariableDeclarationFragment@@parentOverlay=new ProfileOverlayImpl(parent) @TO@ parentOverlay=parent.getOverlay() @AT@ 11129 @LENGTH@ 46
------DEL ClassInstanceCreation@@ProfileOverlayImpl[parent] @AT@ 11145 @LENGTH@ 30
---------DEL New@@new @AT@ 11145 @LENGTH@ 3
---------DEL SimpleType@@ProfileOverlayImpl @AT@ 11149 @LENGTH@ 18
---------DEL SimpleName@@parent @AT@ 11168 @LENGTH@ 6
------INS MethodInvocation@@parent.getOverlay() @TO@ VariableDeclarationFragment@@parentOverlay=new ProfileOverlayImpl(parent) @AT@ 11145 @LENGTH@ 19
---------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.getOverlay() @AT@ 11145 @LENGTH@ 6
---------INS SimpleName@@MethodName:getOverlay:[] @TO@ MethodInvocation@@parent.getOverlay() @AT@ 11152 @LENGTH@ 12


UPD VariableDeclarationStatement@@final String attributeName=operation.require(GlobalOperationHandlers.NAME.getName()).asString(); @TO@ final String attributeName=operation.require(NAME.getName()).asString(); @AT@ 3409 @LENGTH@ 98
---UPD VariableDeclarationFragment@@attributeName=operation.require(GlobalOperationHandlers.NAME.getName()).asString() @TO@ attributeName=operation.require(NAME.getName()).asString() @AT@ 3422 @LENGTH@ 84
------UPD MethodInvocation@@operation.require(GlobalOperationHandlers.NAME.getName()).asString() @TO@ operation.require(NAME.getName()).asString() @AT@ 3438 @LENGTH@ 68
---------UPD MethodInvocation@@MethodName:require:[GlobalOperationHandlers.NAME.getName()] @TO@ MethodName:require:[NAME.getName()] @AT@ 3438 @LENGTH@ 57
------------UPD MethodInvocation@@GlobalOperationHandlers.NAME.getName() @TO@ NAME.getName() @AT@ 3456 @LENGTH@ 38
---------------INS SimpleName@@Name:NAME @TO@ MethodInvocation@@GlobalOperationHandlers.NAME.getName() @AT@ 3436 @LENGTH@ 4
---------------DEL QualifiedName@@Name:GlobalOperationHandlers.NAME @AT@ 3456 @LENGTH@ 28


UPD MethodDeclaration@@Group<T>, T, MethodName:createGroup, String path, Class<T> clazz,  @TO@ Group<T>, T extends NodeState, MethodName:createGroup, String path, Class<T> clazz,  @AT@ 713 @LENGTH@ 41


INS MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @TO@ TypeDeclaration@@[public]Hadoop20SShims, HadoopShimsSecure @AT@ 4338 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4338 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4345 @LENGTH@ 4
---INS SimpleName@@MethodName:setTotalOrderPartitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4350 @LENGTH@ 26
---INS SingleVariableDeclaration@@JobConf jobConf @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4377 @LENGTH@ 15
------INS SimpleType@@JobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 4377 @LENGTH@ 7
------INS SimpleName@@jobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 4385 @LENGTH@ 7
---INS SingleVariableDeclaration@@Path partitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4394 @LENGTH@ 18
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 4394 @LENGTH@ 4
------INS SimpleName@@partitionFile @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 4399 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 4419 @LENGTH@ 63
------INS MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 4419 @LENGTH@ 62
---------INS SimpleName@@Name:TotalOrderPartitioner @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 4419 @LENGTH@ 21
---------INS SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 4441 @LENGTH@ 40
------------INS SimpleName@@jobConf @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 4458 @LENGTH@ 7
------------INS SimpleName@@partitionFile @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 4467 @LENGTH@ 13


UPD MethodDeclaration@@public, ServletInfo, MethodName:getJSPServletInfo,  @TO@ public, ServletInfo, MethodName:createJSPServletInfo,  @AT@ 3950 @LENGTH@ 74
---UPD SimpleName@@MethodName:getJSPServletInfo @TO@ MethodName:createJSPServletInfo @AT@ 3969 @LENGTH@ 17
---UPD ReturnStatement@@SimpleName:servletInfo @TO@ MethodInvocation:servletInfo.clone() @AT@ 3999 @LENGTH@ 19
------DEL SimpleName@@servletInfo @AT@ 4006 @LENGTH@ 11
------INS MethodInvocation@@servletInfo.clone() @TO@ ReturnStatement@@SimpleName:servletInfo @AT@ 4078 @LENGTH@ 19
---------INS SimpleName@@Name:servletInfo @TO@ MethodInvocation@@servletInfo.clone() @AT@ 4078 @LENGTH@ 11
---------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@servletInfo.clone() @AT@ 4090 @LENGTH@ 7
---INS IfStatement@@if (servletInfo == null) {  return null;} @TO@ MethodDeclaration@@public, ServletInfo, MethodName:getJSPServletInfo,  @AT@ 4002 @LENGTH@ 60
------INS InfixExpression@@servletInfo == null @TO@ IfStatement@@if (servletInfo == null) {  return null;} @AT@ 4005 @LENGTH@ 19
---------INS SimpleName@@servletInfo @TO@ InfixExpression@@servletInfo == null @AT@ 4005 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@servletInfo == null @AT@ 4016 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@servletInfo == null @AT@ 4020 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (servletInfo == null) {  return null;} @AT@ 4026 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 4040 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4047 @LENGTH@ 4


UPD IfStatement@@if (!file.exists()) {  if (!createNewFile(file)) {    throw new ItemStreamException("Output file was not created: [" + file.getAbsolutePath() + "]");  }} @TO@ if (!file.exists()) {  if (file.getParent() != null) {    new File(file.getParent()).mkdirs();  }  if (!createNewFile(file)) {    throw new ItemStreamException("Output file was not created: [" + file.getAbsolutePath() + "]");  }} @AT@ 2615 @LENGTH@ 182
---UPD Block@@ThenBody:{  if (!createNewFile(file)) {    throw new ItemStreamException("Output file was not created: [" + file.getAbsolutePath() + "]");  }} @TO@ ThenBody:{  if (file.getParent() != null) {    new File(file.getParent()).mkdirs();  }  if (!createNewFile(file)) {    throw new ItemStreamException("Output file was not created: [" + file.getAbsolutePath() + "]");  }} @AT@ 2635 @LENGTH@ 162
------INS IfStatement@@if (file.getParent() != null) {  new File(file.getParent()).mkdirs();} @TO@ Block@@ThenBody:{  if (!createNewFile(file)) {    throw new ItemStreamException("Output file was not created: [" + file.getAbsolutePath() + "]");  }} @AT@ 2643 @LENGTH@ 83
---------INS InfixExpression@@file.getParent() != null @TO@ IfStatement@@if (file.getParent() != null) {  new File(file.getParent()).mkdirs();} @AT@ 2647 @LENGTH@ 24
------------INS MethodInvocation@@file.getParent() @TO@ InfixExpression@@file.getParent() != null @AT@ 2647 @LENGTH@ 16
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 2647 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 2652 @LENGTH@ 11
------------INS Operator@@!= @TO@ InfixExpression@@file.getParent() != null @AT@ 2663 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@file.getParent() != null @AT@ 2667 @LENGTH@ 4
---------INS Block@@ThenBody:{  new File(file.getParent()).mkdirs();} @TO@ IfStatement@@if (file.getParent() != null) {  new File(file.getParent()).mkdirs();} @AT@ 2673 @LENGTH@ 53
------------INS ExpressionStatement@@MethodInvocation:new File(file.getParent()).mkdirs() @TO@ Block@@ThenBody:{  new File(file.getParent()).mkdirs();} @AT@ 2682 @LENGTH@ 36
---------------INS MethodInvocation@@new File(file.getParent()).mkdirs() @TO@ ExpressionStatement@@MethodInvocation:new File(file.getParent()).mkdirs() @AT@ 2682 @LENGTH@ 35
------------------INS ClassInstanceCreation@@File[file.getParent()] @TO@ MethodInvocation@@new File(file.getParent()).mkdirs() @AT@ 2682 @LENGTH@ 26
---------------------INS New@@new @TO@ ClassInstanceCreation@@File[file.getParent()] @AT@ 2682 @LENGTH@ 3
---------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[file.getParent()] @AT@ 2686 @LENGTH@ 4
---------------------INS MethodInvocation@@file.getParent() @TO@ ClassInstanceCreation@@File[file.getParent()] @AT@ 2691 @LENGTH@ 16
------------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParent() @AT@ 2691 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@file.getParent() @AT@ 2696 @LENGTH@ 11
------------------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@new File(file.getParent()).mkdirs() @AT@ 2709 @LENGTH@ 8


UPD ThrowStatement@@ClassInstanceCreation:new InvalidGrantException("An implicit grant could not be made") @TO@ ClassInstanceCreation:new InvalidRequestException("An implicit grant could not be made") @AT@ 13744 @LENGTH@ 71
---UPD ClassInstanceCreation@@InvalidGrantException["An implicit grant could not be made"] @TO@ InvalidRequestException["An implicit grant could not be made"] @AT@ 13750 @LENGTH@ 64
------UPD SimpleType@@InvalidGrantException @TO@ InvalidRequestException @AT@ 13754 @LENGTH@ 21


UPD TypeDeclaration@@[@Converter, public]CustomerTransformer,  @TO@ [@Converter, public, final]CustomerTransformer,  @AT@ 1404 @LENGTH@ 2286
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter, public]CustomerTransformer,  @AT@ 1422 @LENGTH@ 5


UPD MethodDeclaration@@public, Group<T>, T, MethodName:createMultiGroup, String path, Class<T> clazz,  @TO@ public, Group<T>, T extends NodeState, MethodName:createMultiGroup, String path, Class<T> clazz,  @AT@ 1397 @LENGTH@ 138


UPD TypeDeclaration@@[@Configuration, @ComponentScan, @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @TO@ [@Configuration, @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 1214 @LENGTH@ 388
---DEL MarkerAnnotation@@@ComponentScan @AT@ 1229 @LENGTH@ 14


DEL MethodDeclaration@@public, List<Image>, MethodName:getImages,  @AT@ 7220 @LENGTH@ 52
---DEL Modifier@@public @AT@ 7220 @LENGTH@ 6
---DEL ParameterizedType@@List<Image> @AT@ 7227 @LENGTH@ 11
------DEL SimpleType@@List @AT@ 7227 @LENGTH@ 4
------DEL SimpleType@@Image @AT@ 7232 @LENGTH@ 5
---DEL SimpleName@@MethodName:getImages @AT@ 7239 @LENGTH@ 9
---DEL ReturnStatement@@SimpleName:images @AT@ 7255 @LENGTH@ 14
------DEL SimpleName@@images @AT@ 7262 @LENGTH@ 6


UPD TypeDeclaration@@[public]CustomerWebServiceTest, CamelSpringTestSupport @TO@ [@Ignore("[FABRIC-517] Fix camel-webservice-example tests"), public]CustomerWebServiceTest, CamelSpringTestSupport @AT@ 1245 @LENGTH@ 746
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-517] Fix camel-webservice-example tests") @TO@ TypeDeclaration@@[public]CustomerWebServiceTest, CamelSpringTestSupport @AT@ 1270 @LENGTH@ 58


UPD VariableDeclarationStatement@@String jmxUrl=getJmxUrl(name,rmiRegistryPort,rmiServerPort); @TO@ String jmxUrl=getJmxUrl(name,rmiServerPort,rmiRegistryPort); @AT@ 24051 @LENGTH@ 64
---UPD VariableDeclarationFragment@@jmxUrl=getJmxUrl(name,rmiRegistryPort,rmiServerPort) @TO@ jmxUrl=getJmxUrl(name,rmiServerPort,rmiRegistryPort) @AT@ 24058 @LENGTH@ 56
------UPD MethodInvocation@@getJmxUrl(name,rmiRegistryPort,rmiServerPort) @TO@ getJmxUrl(name,rmiServerPort,rmiRegistryPort) @AT@ 24067 @LENGTH@ 47
---------UPD SimpleName@@MethodName:getJmxUrl:[name, rmiRegistryPort, rmiServerPort] @TO@ MethodName:getJmxUrl:[name, rmiServerPort, rmiRegistryPort] @AT@ 24067 @LENGTH@ 47
------------UPD SimpleName@@rmiRegistryPort @TO@ rmiServerPort @AT@ 24083 @LENGTH@ 15
------------UPD SimpleName@@rmiServerPort @TO@ rmiRegistryPort @AT@ 24100 @LENGTH@ 13


UPD TypeDeclaration@@[private]MyInputStream, FilterInputStream @TO@ [private, final]MyInputStream, FilterInputStream @AT@ 2382 @LENGTH@ 143
---INS Modifier@@final @TO@ TypeDeclaration@@[private]MyInputStream, FilterInputStream @AT@ 2390 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:UndertowLogger.ROOT_LOGGER.warn("service name: " + serviceName) @AT@ 3231 @LENGTH@ 62
---DEL MethodInvocation@@UndertowLogger.ROOT_LOGGER.warn("service name: " + serviceName) @AT@ 3231 @LENGTH@ 61
------DEL QualifiedName@@Name:UndertowLogger.ROOT_LOGGER @AT@ 3231 @LENGTH@ 26
------DEL SimpleName@@MethodName:warn:["service name: " + serviceName] @AT@ 3258 @LENGTH@ 34
---------DEL InfixExpression@@"service name: " + serviceName @AT@ 3263 @LENGTH@ 28
------------DEL StringLiteral@@"service name: " @AT@ 3263 @LENGTH@ 16
------------DEL Operator@@+ @AT@ 3279 @LENGTH@ 1
------------DEL SimpleName@@serviceName @AT@ 3280 @LENGTH@ 11


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerRegistrationTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]ContainerRegistrationTest, FabricTestSupport @AT@ 872 @LENGTH@ 2525
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]ContainerRegistrationTest, FabricTestSupport @AT@ 965 @LENGTH@ 49


INS MethodDeclaration@@public, int, MethodName:activeSessions,  @TO@ TypeDeclaration@@[public]SessionManagerFacade, [UndertowSessionManager] @AT@ 5888 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:activeSessions,  @AT@ 5888 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:activeSessions,  @AT@ 5895 @LENGTH@ 3
---INS SimpleName@@MethodName:activeSessions @TO@ MethodDeclaration@@public, int, MethodName:activeSessions,  @AT@ 5899 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:this.manager.size() @TO@ MethodDeclaration@@public, int, MethodName:activeSessions,  @AT@ 5926 @LENGTH@ 27
------INS MethodInvocation@@this.manager.size() @TO@ ReturnStatement@@MethodInvocation:this.manager.size() @AT@ 5933 @LENGTH@ 19
---------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.size() @AT@ 5933 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 5933 @LENGTH@ 4
------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 5938 @LENGTH@ 7
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@this.manager.size() @AT@ 5946 @LENGTH@ 6


UPD CatchClause@@catch (Exception e) {  callback.rollback();  throw rethrowException(e);} @TO@ catch (Exception e) {  e.printStackTrace();  callback.rollback();  throw rethrowException(e);} @AT@ 5184 @LENGTH@ 103
---INS ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ CatchClause@@catch (Exception e) {  callback.rollback();  throw rethrowException(e);} @AT@ 5218 @LENGTH@ 20
------INS MethodInvocation@@e.printStackTrace() @TO@ ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 5218 @LENGTH@ 19
---------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.printStackTrace() @AT@ 5218 @LENGTH@ 1
---------INS SimpleName@@MethodName:printStackTrace:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 5220 @LENGTH@ 17


UPD TryStatement@@try {  hbaseDir=new File(workDir,"hbase").getAbsolutePath();  hbaseRoot="file://" + hbaseDir;  if (hbaseConf == null)   hbaseConf=HBaseConfiguration.create();  hbaseConf.set("hbase.rootdir",hbaseRoot);  hbaseConf.set("hbase.master","local");  hbaseConf.setInt(HConstants.ZOOKEEPER_CLIENT_PORT,zookeeperPort);  hbaseConf.set(HConstants.ZOOKEEPER_QUORUM,"127.0.0.1");  hbaseConf.setInt("hbase.master.port",findFreePort());  hbaseConf.setInt("hbase.master.info.port",-1);  hbaseConf.setInt("hbase.regionserver.port",findFreePort());  hbaseConf.setInt("hbase.regionserver.info.port",-1);  hbaseCluster=new MiniHBaseCluster(hbaseConf,numRegionServers);  hbaseConf.set("hbase.master",hbaseCluster.getMaster().getServerName().getHostAndPort());  new HTable(hbaseConf,HConstants.META_TABLE_NAME);} catch (Exception e) {  throw new IllegalStateException("Failed to setup HBase Cluster",e);} @TO@ try {  hbaseDir=new File(workDir,"hbase").toString();  hbaseDir=hbaseDir.replaceAll("\\\\","/");  hbaseRoot="file://" + hbaseDir;  if (hbaseConf == null)   hbaseConf=HBaseConfiguration.create();  hbaseConf.set("hbase.rootdir",hbaseRoot);  hbaseConf.set("hbase.master","local");  hbaseConf.setInt(HConstants.ZOOKEEPER_CLIENT_PORT,zookeeperPort);  hbaseConf.set(HConstants.ZOOKEEPER_QUORUM,"127.0.0.1");  hbaseConf.setInt("hbase.master.port",findFreePort());  hbaseConf.setInt("hbase.master.info.port",-1);  hbaseConf.setInt("hbase.regionserver.port",findFreePort());  hbaseConf.setInt("hbase.regionserver.info.port",-1);  hbaseCluster=new MiniHBaseCluster(hbaseConf,numRegionServers);  hbaseConf.set("hbase.master",hbaseCluster.getMaster().getServerName().getHostAndPort());  new HTable(hbaseConf,HConstants.META_TABLE_NAME);} catch (Exception e) {  throw new IllegalStateException("Failed to setup HBase Cluster",e);} @AT@ 8088 @LENGTH@ 1171
---UPD ExpressionStatement@@Assignment:hbaseDir=new File(workDir,"hbase").getAbsolutePath() @TO@ Assignment:hbaseDir=new File(workDir,"hbase").toString() @AT@ 8106 @LENGTH@ 56
------UPD Assignment@@hbaseDir=new File(workDir,"hbase").getAbsolutePath() @TO@ hbaseDir=new File(workDir,"hbase").toString() @AT@ 8106 @LENGTH@ 55
---------UPD MethodInvocation@@new File(workDir,"hbase").getAbsolutePath() @TO@ new File(workDir,"hbase").toString() @AT@ 8117 @LENGTH@ 44
------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:toString:[] @AT@ 8144 @LENGTH@ 17
---INS ExpressionStatement@@Assignment:hbaseDir=hbaseDir.replaceAll("\\\\","/") @TO@ TryStatement@@try {  hbaseDir=new File(workDir,"hbase").getAbsolutePath();  hbaseRoot="file://" + hbaseDir;  if (hbaseConf == null)   hbaseConf=HBaseConfiguration.create();  hbaseConf.set("hbase.rootdir",hbaseRoot);  hbaseConf.set("hbase.master","local");  hbaseConf.setInt(HConstants.ZOOKEEPER_CLIENT_PORT,zookeeperPort);  hbaseConf.set(HConstants.ZOOKEEPER_QUORUM,"127.0.0.1");  hbaseConf.setInt("hbase.master.port",findFreePort());  hbaseConf.setInt("hbase.master.info.port",-1);  hbaseConf.setInt("hbase.regionserver.port",findFreePort());  hbaseConf.setInt("hbase.regionserver.info.port",-1);  hbaseCluster=new MiniHBaseCluster(hbaseConf,numRegionServers);  hbaseConf.set("hbase.master",hbaseCluster.getMaster().getServerName().getHostAndPort());  new HTable(hbaseConf,HConstants.META_TABLE_NAME);} catch (Exception e) {  throw new IllegalStateException("Failed to setup HBase Cluster",e);} @AT@ 8168 @LENGTH@ 44
------INS Assignment@@hbaseDir=hbaseDir.replaceAll("\\\\","/") @TO@ ExpressionStatement@@Assignment:hbaseDir=hbaseDir.replaceAll("\\\\","/") @AT@ 8168 @LENGTH@ 43
---------INS SimpleName@@hbaseDir @TO@ Assignment@@hbaseDir=hbaseDir.replaceAll("\\\\","/") @AT@ 8168 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@hbaseDir=hbaseDir.replaceAll("\\\\","/") @AT@ 8176 @LENGTH@ 1
---------INS MethodInvocation@@hbaseDir.replaceAll("\\\\","/") @TO@ Assignment@@hbaseDir=hbaseDir.replaceAll("\\\\","/") @AT@ 8179 @LENGTH@ 32
------------INS SimpleName@@Name:hbaseDir @TO@ MethodInvocation@@hbaseDir.replaceAll("\\\\","/") @AT@ 8179 @LENGTH@ 8
------------INS SimpleName@@MethodName:replaceAll:["\\\\", "/"] @TO@ MethodInvocation@@hbaseDir.replaceAll("\\\\","/") @AT@ 8188 @LENGTH@ 23
---------------INS StringLiteral@@"\\\\" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 8199 @LENGTH@ 6
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replaceAll:["\\\\", "/"] @AT@ 8207 @LENGTH@ 3


UPD FieldDeclaration@@SimpleAttributeDefinition, [MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build()] @TO@ SimpleAttributeDefinition, [MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 6533 @LENGTH@ 192
---UPD VariableDeclarationFragment@@MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ MODULE=SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 6559 @LENGTH@ 165
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ SimpleAttributeDefinitionBuilder.create("module",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 6568 @LENGTH@ 156
---------UPD MethodInvocation@@MethodName:setRestartJVM:[] @TO@ MethodName:setFlags:[Flag.RESTART_RESOURCE_SERVICES] @AT@ 6568 @LENGTH@ 135
------------INS QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @TO@ MethodInvocation@@MethodName:setRestartJVM:[] @AT@ 6784 @LENGTH@ 30
---------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 6784 @LENGTH@ 4
---------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 6789 @LENGTH@ 25


INS MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @TO@ TypeDeclaration@@[public, final]PatchUtils,  @AT@ 9937 @LENGTH@ 290
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9937 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9944 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9951 @LENGTH@ 6
---INS SimpleName@@MethodName:bytesToHexString @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9958 @LENGTH@ 16
---INS SingleVariableDeclaration@@final byte[] bytes @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9975 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9975 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9981 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 9981 @LENGTH@ 4
------INS SimpleName@@bytes @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9988 @LENGTH@ 5
---INS VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10005 @LENGTH@ 66
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10005 @LENGTH@ 5
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10011 @LENGTH@ 13
------INS VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10025 @LENGTH@ 45
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @AT@ 10025 @LENGTH@ 7
---------INS ClassInstanceCreation@@StringBuilder[bytes.length * 2] @TO@ VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @AT@ 10035 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10035 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10039 @LENGTH@ 13
------------INS InfixExpression@@bytes.length * 2 @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10053 @LENGTH@ 16
---------------INS QualifiedName@@bytes.length @TO@ InfixExpression@@bytes.length * 2 @AT@ 10053 @LENGTH@ 12
------------------INS SimpleName@@bytes @TO@ QualifiedName@@bytes.length @AT@ 10053 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@bytes.length @AT@ 10059 @LENGTH@ 6
---------------INS Operator@@* @TO@ InfixExpression@@bytes.length * 2 @AT@ 10065 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@bytes.length * 2 @AT@ 10068 @LENGTH@ 1
---INS EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10080 @LENGTH@ 106
------INS SingleVariableDeclaration@@byte b @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10085 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ SingleVariableDeclaration@@byte b @AT@ 10085 @LENGTH@ 4
---------INS SimpleName@@b @TO@ SingleVariableDeclaration@@byte b @AT@ 10090 @LENGTH@ 1
------INS SimpleName@@bytes @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10094 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10115 @LENGTH@ 61
---------INS MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @TO@ ExpressionStatement@@MethodInvocation:builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:append:[table[b >> 4 & 0x0f]] @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 36
---------------INS ArrayAccess@@table[b >> 4 & 0x0f] @TO@ MethodInvocation@@MethodName:append:[table[b >> 4 & 0x0f]] @AT@ 10130 @LENGTH@ 20
------------------INS SimpleName@@table @TO@ ArrayAccess@@table[b >> 4 & 0x0f] @AT@ 10130 @LENGTH@ 5
------------------INS InfixExpression@@b >> 4 & 0x0f @TO@ ArrayAccess@@table[b >> 4 & 0x0f] @AT@ 10136 @LENGTH@ 13
---------------------INS InfixExpression@@b >> 4 @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10136 @LENGTH@ 6
------------------------INS SimpleName@@b @TO@ InfixExpression@@b >> 4 @AT@ 10136 @LENGTH@ 1
------------------------INS Operator@@>> @TO@ InfixExpression@@b >> 4 @AT@ 10137 @LENGTH@ 2
------------------------INS NumberLiteral@@4 @TO@ InfixExpression@@b >> 4 @AT@ 10141 @LENGTH@ 1
---------------------INS Operator@@& @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10142 @LENGTH@ 1
---------------------INS NumberLiteral@@0x0f @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10145 @LENGTH@ 4
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 7
------------INS SimpleName@@MethodName:append:[table[b & 0x0f]] @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10152 @LENGTH@ 23
---------------INS ArrayAccess@@table[b & 0x0f] @TO@ SimpleName@@MethodName:append:[table[b & 0x0f]] @AT@ 10159 @LENGTH@ 15
------------------INS SimpleName@@table @TO@ ArrayAccess@@table[b & 0x0f] @AT@ 10159 @LENGTH@ 5
------------------INS InfixExpression@@b & 0x0f @TO@ ArrayAccess@@table[b & 0x0f] @AT@ 10165 @LENGTH@ 8
---------------------INS SimpleName@@b @TO@ InfixExpression@@b & 0x0f @AT@ 10165 @LENGTH@ 1
---------------------INS Operator@@& @TO@ InfixExpression@@b & 0x0f @AT@ 10166 @LENGTH@ 1
---------------------INS NumberLiteral@@0x0f @TO@ InfixExpression@@b & 0x0f @AT@ 10169 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:builder.toString() @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10195 @LENGTH@ 26
------INS MethodInvocation@@builder.toString() @TO@ ReturnStatement@@MethodInvocation:builder.toString() @AT@ 10202 @LENGTH@ 18
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.toString() @AT@ 10202 @LENGTH@ 7
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@builder.toString() @AT@ 10210 @LENGTH@ 10


UPD MethodDeclaration@@private, void, MethodName:updateDataOnNode, String node, byte[] payload, int version, int expectedVersion, InterruptedException, ExecutionException, Exception,  @TO@ private, void, MethodName:updateDataOnNode, String node, byte[] payload, int version, int expectedVersion, Exception,  @AT@ 2155 @LENGTH@ 516
---DEL SimpleType@@InterruptedException @AT@ 2255 @LENGTH@ 20
---DEL SimpleType@@ExecutionException @AT@ 2277 @LENGTH@ 18


UPD VariableDeclarationStatement@@final ServletInfo jspServlet=jspConfig != null ? jspConfig.getJSPServletInfo() : null; @TO@ final ServletInfo jspServlet=jspConfig != null ? jspConfig.createJSPServletInfo() : null; @AT@ 21490 @LENGTH@ 88
---UPD VariableDeclarationFragment@@jspServlet=jspConfig != null ? jspConfig.getJSPServletInfo() : null @TO@ jspServlet=jspConfig != null ? jspConfig.createJSPServletInfo() : null @AT@ 21508 @LENGTH@ 69
------UPD ConditionalExpression@@jspConfig != null ? jspConfig.getJSPServletInfo() : null @TO@ jspConfig != null ? jspConfig.createJSPServletInfo() : null @AT@ 21521 @LENGTH@ 56
---------UPD MethodInvocation@@jspConfig.getJSPServletInfo() @TO@ jspConfig.createJSPServletInfo() @AT@ 21541 @LENGTH@ 29
------------UPD SimpleName@@MethodName:getJSPServletInfo:[] @TO@ MethodName:createJSPServletInfo:[] @AT@ 21551 @LENGTH@ 19


DEL MethodDeclaration@@public, void, MethodName:createCluster, List<String> containers, Map<String,Object> options,  @AT@ 258 @LENGTH@ 80
---DEL Modifier@@public @AT@ 258 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 265 @LENGTH@ 4
---DEL SimpleName@@MethodName:createCluster @AT@ 270 @LENGTH@ 13
---DEL SingleVariableDeclaration@@List<String> containers @AT@ 284 @LENGTH@ 23
------DEL ParameterizedType@@List<String> @AT@ 284 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 284 @LENGTH@ 4
---------DEL SimpleType@@String @AT@ 289 @LENGTH@ 6
------DEL SimpleName@@containers @AT@ 297 @LENGTH@ 10
---DEL SingleVariableDeclaration@@Map<String,Object> options @AT@ 309 @LENGTH@ 27
------DEL ParameterizedType@@Map<String,Object> @AT@ 309 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 309 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 313 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 321 @LENGTH@ 6
------DEL SimpleName@@options @AT@ 329 @LENGTH@ 7


UPD Block@@ElseBody:if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
---UPD IfStatement@@if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
------UPD Block@@ElseBody:if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---UPD IfStatement@@if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.hasDefined(PROPERTIES)) {  ModelNode properties=authentication.require(PROPERTIES);  writer.writeEmptyElement(Element.PROPERTIES.getLocalName());  PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties,writer);  PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties,writer);} else if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132084 @LENGTH@ 1472
------UPD Block@@ElseBody:if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ ElseBody:if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17
---------UPD IfStatement@@if (authentication.hasDefined(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @TO@ if (authentication.has(USERS)) {  ModelNode userDomain=authentication.get(USERS);  ModelNode users=userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();  writer.writeStartElement(Element.USERS.getLocalName());  for (  Property userProps : users.asPropertyList()) {    String userName=userProps.getName();    ModelNode currentUser=userProps.getValue();    writer.writeStartElement(Element.USER.getLocalName());    writer.writeAttribute(Attribute.USERNAME.getLocalName(),userName);    UserResourceDefinition.PASSWORD.marshallAsElement(currentUser,writer);    writer.writeEndElement();  }  writer.writeEndElement();} else if (authentication.hasDefined(PLUG_IN)) {  writePlugIn_Authentication(writer,authentication.get(PLUG_IN));} @AT@ 132604 @LENGTH@ 952
------------UPD MethodInvocation@@authentication.hasDefined(USERS) @TO@ authentication.has(USERS) @AT@ 132608 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:hasDefined:[USERS] @TO@ MethodName:has:[USERS] @AT@ 132623 @LENGTH@ 17


UPD VariableDeclarationStatement@@List<ManagedListener> list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)))); @TO@ List<ManagedListener> list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)),false)); @AT@ 2986 @LENGTH@ 261
---UPD VariableDeclarationFragment@@list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)))) @TO@ list=Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)),false)) @AT@ 3008 @LENGTH@ 238
------UPD MethodInvocation@@Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)))) @TO@ Arrays.asList(new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1)),false),new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)),false)) @AT@ 3015 @LENGTH@ 231
---------UPD SimpleName@@MethodName:asList:[new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))), new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)))] @TO@ MethodName:asList:[new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1)),false), new ManagedListener(new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)),false)] @AT@ 3022 @LENGTH@ 224
------------UPD ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))] @TO@ ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1)), false] @AT@ 3029 @LENGTH@ 107
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener1))] @AT@ 3113 @LENGTH@ 5
------------UPD ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2))] @TO@ ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2)), false] @AT@ 3138 @LENGTH@ 107
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ManagedListener[new ListenerInfo(HttpSessionListener.class,new ImmediateInstanceFactory<>(listener2))] @AT@ 3229 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new SimpleMongoDbFactory(new Mongo("localhost"),"spring-data-rest-example") @TO@ ClassInstanceCreation:new SimpleMongoDbFactory(new MongoClient("localhost"),"spring-data-rest-example") @AT@ 1388 @LENGTH@ 84
---UPD ClassInstanceCreation@@SimpleMongoDbFactory[new Mongo("localhost"), "spring-data-rest-example"] @TO@ SimpleMongoDbFactory[new MongoClient("localhost"), "spring-data-rest-example"] @AT@ 1395 @LENGTH@ 76
------UPD ClassInstanceCreation@@Mongo["localhost"] @TO@ MongoClient["localhost"] @AT@ 1420 @LENGTH@ 22
---------UPD SimpleType@@Mongo @TO@ MongoClient @AT@ 1424 @LENGTH@ 5


UPD IfStatement@@if (gitService != null) {  String login=getContainerLogin();  String token=generateContainerToken(curator);  CredentialsProvider cp=new UsernamePasswordCredentialsProvider(login,token);  gitService.setCredentialsProvider(cp);  gitService.onRemoteChanged();} @TO@ if (gitService != null) {  gitService.onRemoteChanged();} @AT@ 3836 @LENGTH@ 352
---UPD Block@@ThenBody:{  String login=getContainerLogin();  String token=generateContainerToken(curator);  CredentialsProvider cp=new UsernamePasswordCredentialsProvider(login,token);  gitService.setCredentialsProvider(cp);  gitService.onRemoteChanged();} @TO@ ThenBody:{  gitService.onRemoteChanged();} @AT@ 3860 @LENGTH@ 328
------DEL VariableDeclarationStatement@@String login=getContainerLogin(); @AT@ 3878 @LENGTH@ 35
---------DEL SimpleType@@String @AT@ 3878 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@login=getContainerLogin() @AT@ 3885 @LENGTH@ 27
------------DEL SimpleName@@login @AT@ 3885 @LENGTH@ 5
------------DEL MethodInvocation@@MethodName:getContainerLogin:[] @AT@ 3893 @LENGTH@ 19
------DEL VariableDeclarationStatement@@String token=generateContainerToken(curator); @AT@ 3930 @LENGTH@ 47
---------DEL SimpleType@@String @AT@ 3930 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@token=generateContainerToken(curator) @AT@ 3937 @LENGTH@ 39
------------DEL SimpleName@@token @AT@ 3937 @LENGTH@ 5
------------DEL MethodInvocation@@generateContainerToken(curator) @AT@ 3945 @LENGTH@ 31
---------------DEL SimpleName@@MethodName:generateContainerToken:[curator] @AT@ 3945 @LENGTH@ 31
------------------DEL SimpleName@@curator @AT@ 3968 @LENGTH@ 7
------DEL VariableDeclarationStatement@@CredentialsProvider cp=new UsernamePasswordCredentialsProvider(login,token); @AT@ 3994 @LENGTH@ 79
---------DEL SimpleType@@CredentialsProvider @AT@ 3994 @LENGTH@ 19
---------DEL VariableDeclarationFragment@@cp=new UsernamePasswordCredentialsProvider(login,token) @AT@ 4014 @LENGTH@ 58
------------DEL SimpleName@@cp @AT@ 4014 @LENGTH@ 2
------------DEL ClassInstanceCreation@@UsernamePasswordCredentialsProvider[login, token] @AT@ 4019 @LENGTH@ 53
---------------DEL New@@new @AT@ 4019 @LENGTH@ 3
---------------DEL SimpleType@@UsernamePasswordCredentialsProvider @AT@ 4023 @LENGTH@ 35
---------------DEL SimpleName@@login @AT@ 4059 @LENGTH@ 5
---------------DEL SimpleName@@token @AT@ 4066 @LENGTH@ 5
------DEL ExpressionStatement@@MethodInvocation:gitService.setCredentialsProvider(cp) @AT@ 4090 @LENGTH@ 38
---------DEL MethodInvocation@@gitService.setCredentialsProvider(cp) @AT@ 4090 @LENGTH@ 37
------------DEL SimpleName@@Name:gitService @AT@ 4090 @LENGTH@ 10
------------DEL SimpleName@@MethodName:setCredentialsProvider:[cp] @AT@ 4101 @LENGTH@ 26
---------------DEL SimpleName@@cp @AT@ 4124 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:startDelegationTokenSecretManager, Configuration conf, IOException,  @TO@ public, void, MethodName:startDelegationTokenSecretManager, Configuration conf, Object hms, IOException,  @AT@ 4041 @LENGTH@ 200
---INS SingleVariableDeclaration@@Object hms @TO@ MethodDeclaration@@public, void, MethodName:startDelegationTokenSecretManager, Configuration conf, IOException,  @AT@ 4105 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object hms @AT@ 4105 @LENGTH@ 6
------INS SimpleName@@hms @TO@ SingleVariableDeclaration@@Object hms @AT@ 4112 @LENGTH@ 3
---UPD ExpressionStatement@@SuperMethodInvocation:super.startDelegationTokenSecretManager(conf) @TO@ SuperMethodInvocation:super.startDelegationTokenSecretManager(conf,hms) @AT@ 4141 @LENGTH@ 46
------UPD SuperMethodInvocation@@super.startDelegationTokenSecretManager(conf) @TO@ super.startDelegationTokenSecretManager(conf,hms) @AT@ 4141 @LENGTH@ 45
---------UPD SimpleName@@MethodName:startDelegationTokenSecretManager:[conf] @TO@ MethodName:startDelegationTokenSecretManager:[conf, hms] @AT@ 4147 @LENGTH@ 33
---------INS SimpleName@@hms @TO@ SuperMethodInvocation@@super.startDelegationTokenSecretManager(conf) @AT@ 4197 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @TO@ MethodDeclaration@@public, void, MethodName:registerChildren, ManagementResourceRegistration resourceRegistration,  @AT@ 23683 @LENGTH@ 72
---INS MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23683 @LENGTH@ 71
------INS SimpleName@@Name:resourceRegistration @TO@ MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23683 @LENGTH@ 20
------INS SimpleName@@MethodName:registerSubModel:[PatchResourceDefinition.INSTANCE] @TO@ MethodInvocation@@resourceRegistration.registerSubModel(PatchResourceDefinition.INSTANCE) @AT@ 23704 @LENGTH@ 50
---------INS QualifiedName@@PatchResourceDefinition.INSTANCE @TO@ SimpleName@@MethodName:registerSubModel:[PatchResourceDefinition.INSTANCE] @AT@ 23721 @LENGTH@ 32
------------INS SimpleName@@PatchResourceDefinition @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 23721 @LENGTH@ 23
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@PatchResourceDefinition.INSTANCE @AT@ 23745 @LENGTH@ 8


INS MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @TO@ TypeDeclaration@@[public, final]PatchUtils,  @AT@ 9937 @LENGTH@ 290
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9937 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9944 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9951 @LENGTH@ 6
---INS SimpleName@@MethodName:bytesToHexString @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9958 @LENGTH@ 16
---INS SingleVariableDeclaration@@final byte[] bytes @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 9975 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9975 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9981 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 9981 @LENGTH@ 4
------INS SimpleName@@bytes @TO@ SingleVariableDeclaration@@final byte[] bytes @AT@ 9988 @LENGTH@ 5
---INS VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10005 @LENGTH@ 66
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10005 @LENGTH@ 5
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10011 @LENGTH@ 13
------INS VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @TO@ VariableDeclarationStatement@@final StringBuilder builder=new StringBuilder(bytes.length * 2); @AT@ 10025 @LENGTH@ 45
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @AT@ 10025 @LENGTH@ 7
---------INS ClassInstanceCreation@@StringBuilder[bytes.length * 2] @TO@ VariableDeclarationFragment@@builder=new StringBuilder(bytes.length * 2) @AT@ 10035 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10035 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10039 @LENGTH@ 13
------------INS InfixExpression@@bytes.length * 2 @TO@ ClassInstanceCreation@@StringBuilder[bytes.length * 2] @AT@ 10053 @LENGTH@ 16
---------------INS QualifiedName@@bytes.length @TO@ InfixExpression@@bytes.length * 2 @AT@ 10053 @LENGTH@ 12
------------------INS SimpleName@@bytes @TO@ QualifiedName@@bytes.length @AT@ 10053 @LENGTH@ 5
------------------INS SimpleName@@length @TO@ QualifiedName@@bytes.length @AT@ 10059 @LENGTH@ 6
---------------INS Operator@@* @TO@ InfixExpression@@bytes.length * 2 @AT@ 10065 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@bytes.length * 2 @AT@ 10068 @LENGTH@ 1
---INS EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10080 @LENGTH@ 106
------INS SingleVariableDeclaration@@byte b @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10085 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ SingleVariableDeclaration@@byte b @AT@ 10085 @LENGTH@ 4
---------INS SimpleName@@b @TO@ SingleVariableDeclaration@@byte b @AT@ 10090 @LENGTH@ 1
------INS SimpleName@@bytes @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10094 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @TO@ EnhancedForStatement@@for (byte b : bytes) {  builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]);} @AT@ 10115 @LENGTH@ 61
---------INS MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @TO@ ExpressionStatement@@MethodInvocation:builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 60
------------INS MethodInvocation@@MethodName:append:[table[b >> 4 & 0x0f]] @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 36
---------------INS ArrayAccess@@table[b >> 4 & 0x0f] @TO@ MethodInvocation@@MethodName:append:[table[b >> 4 & 0x0f]] @AT@ 10130 @LENGTH@ 20
------------------INS SimpleName@@table @TO@ ArrayAccess@@table[b >> 4 & 0x0f] @AT@ 10130 @LENGTH@ 5
------------------INS InfixExpression@@b >> 4 & 0x0f @TO@ ArrayAccess@@table[b >> 4 & 0x0f] @AT@ 10136 @LENGTH@ 13
---------------------INS InfixExpression@@b >> 4 @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10136 @LENGTH@ 6
------------------------INS SimpleName@@b @TO@ InfixExpression@@b >> 4 @AT@ 10136 @LENGTH@ 1
------------------------INS Operator@@>> @TO@ InfixExpression@@b >> 4 @AT@ 10137 @LENGTH@ 2
------------------------INS NumberLiteral@@4 @TO@ InfixExpression@@b >> 4 @AT@ 10141 @LENGTH@ 1
---------------------INS Operator@@& @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10142 @LENGTH@ 1
---------------------INS NumberLiteral@@0x0f @TO@ InfixExpression@@b >> 4 & 0x0f @AT@ 10145 @LENGTH@ 4
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10115 @LENGTH@ 7
------------INS SimpleName@@MethodName:append:[table[b & 0x0f]] @TO@ MethodInvocation@@builder.append(table[b >> 4 & 0x0f]).append(table[b & 0x0f]) @AT@ 10152 @LENGTH@ 23
---------------INS ArrayAccess@@table[b & 0x0f] @TO@ SimpleName@@MethodName:append:[table[b & 0x0f]] @AT@ 10159 @LENGTH@ 15
------------------INS SimpleName@@table @TO@ ArrayAccess@@table[b & 0x0f] @AT@ 10159 @LENGTH@ 5
------------------INS InfixExpression@@b & 0x0f @TO@ ArrayAccess@@table[b & 0x0f] @AT@ 10165 @LENGTH@ 8
---------------------INS SimpleName@@b @TO@ InfixExpression@@b & 0x0f @AT@ 10165 @LENGTH@ 1
---------------------INS Operator@@& @TO@ InfixExpression@@b & 0x0f @AT@ 10166 @LENGTH@ 1
---------------------INS NumberLiteral@@0x0f @TO@ InfixExpression@@b & 0x0f @AT@ 10169 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:builder.toString() @TO@ MethodDeclaration@@public, static, String, MethodName:bytesToHexString, final byte[] bytes,  @AT@ 10195 @LENGTH@ 26
------INS MethodInvocation@@builder.toString() @TO@ ReturnStatement@@MethodInvocation:builder.toString() @AT@ 10202 @LENGTH@ 18
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.toString() @AT@ 10202 @LENGTH@ 7
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@builder.toString() @AT@ 10210 @LENGTH@ 10


INS MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @TO@ TypeDeclaration@@[public]PatchContentProvider,  @AT@ 419 @LENGTH@ 25
---INS SimpleType@@File @TO@ MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @AT@ 414 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @AT@ 419 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @TO@ TypeDeclaration@@[public]JsrJobOperatorTests,  @AT@ 9852 @LENGTH@ 235
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 9852 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 9859 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetNoRunningExecutions @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 9864 @LENGTH@ 26
---INS VariableDeclarationStatement@@Set<JobExecution> executions=new HashSet<JobExecution>(); @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 9897 @LENGTH@ 59
------INS ParameterizedType@@Set<JobExecution> @TO@ VariableDeclarationStatement@@Set<JobExecution> executions=new HashSet<JobExecution>(); @AT@ 9897 @LENGTH@ 17
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<JobExecution> @AT@ 9897 @LENGTH@ 3
---------INS SimpleType@@JobExecution @TO@ ParameterizedType@@Set<JobExecution> @AT@ 9901 @LENGTH@ 12
------INS VariableDeclarationFragment@@executions=new HashSet<JobExecution>() @TO@ VariableDeclarationStatement@@Set<JobExecution> executions=new HashSet<JobExecution>(); @AT@ 9915 @LENGTH@ 40
---------INS SimpleName@@executions @TO@ VariableDeclarationFragment@@executions=new HashSet<JobExecution>() @AT@ 9915 @LENGTH@ 10
---------INS ClassInstanceCreation@@HashSet<JobExecution>[] @TO@ VariableDeclarationFragment@@executions=new HashSet<JobExecution>() @AT@ 9928 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<JobExecution>[] @AT@ 9928 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<JobExecution> @TO@ ClassInstanceCreation@@HashSet<JobExecution>[] @AT@ 9932 @LENGTH@ 21
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<JobExecution> @AT@ 9932 @LENGTH@ 7
---------------INS SimpleType@@JobExecution @TO@ ParameterizedType@@HashSet<JobExecution> @AT@ 9940 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:when(jobExplorer.findRunningJobExecutions("myJob")).thenReturn(executions) @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 9960 @LENGTH@ 75
------INS MethodInvocation@@when(jobExplorer.findRunningJobExecutions("myJob")).thenReturn(executions) @TO@ ExpressionStatement@@MethodInvocation:when(jobExplorer.findRunningJobExecutions("myJob")).thenReturn(executions) @AT@ 9960 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:when:[jobExplorer.findRunningJobExecutions("myJob")] @TO@ MethodInvocation@@when(jobExplorer.findRunningJobExecutions("myJob")).thenReturn(executions) @AT@ 9960 @LENGTH@ 51
------------INS MethodInvocation@@jobExplorer.findRunningJobExecutions("myJob") @TO@ MethodInvocation@@MethodName:when:[jobExplorer.findRunningJobExecutions("myJob")] @AT@ 9965 @LENGTH@ 45
---------------INS SimpleName@@Name:jobExplorer @TO@ MethodInvocation@@jobExplorer.findRunningJobExecutions("myJob") @AT@ 9965 @LENGTH@ 11
---------------INS SimpleName@@MethodName:findRunningJobExecutions:["myJob"] @TO@ MethodInvocation@@jobExplorer.findRunningJobExecutions("myJob") @AT@ 9977 @LENGTH@ 33
------------------INS StringLiteral@@"myJob" @TO@ SimpleName@@MethodName:findRunningJobExecutions:["myJob"] @AT@ 10002 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[executions] @TO@ MethodInvocation@@when(jobExplorer.findRunningJobExecutions("myJob")).thenReturn(executions) @AT@ 10012 @LENGTH@ 22
------------INS SimpleName@@executions @TO@ SimpleName@@MethodName:thenReturn:[executions] @AT@ 10023 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:jsrJobOperator.getRunningExecutions("myJob") @TO@ MethodDeclaration@@public, void, MethodName:testGetNoRunningExecutions,  @AT@ 10039 @LENGTH@ 45
------INS MethodInvocation@@jsrJobOperator.getRunningExecutions("myJob") @TO@ ExpressionStatement@@MethodInvocation:jsrJobOperator.getRunningExecutions("myJob") @AT@ 10039 @LENGTH@ 44
---------INS SimpleName@@Name:jsrJobOperator @TO@ MethodInvocation@@jsrJobOperator.getRunningExecutions("myJob") @AT@ 10039 @LENGTH@ 14
---------INS SimpleName@@MethodName:getRunningExecutions:["myJob"] @TO@ MethodInvocation@@jsrJobOperator.getRunningExecutions("myJob") @AT@ 10054 @LENGTH@ 29
------------INS StringLiteral@@"myJob" @TO@ SimpleName@@MethodName:getRunningExecutions:["myJob"] @AT@ 10075 @LENGTH@ 7


UPD IfStatement@@if (entry == null) {  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @TO@ if (entry == null) {  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);  String elementId=element.getId();  if (contentProvider != null) {    try {      File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);      File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);      File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);      contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));    } catch (    Exception e) {      throw new PatchingException("failed to resolve content for " + element);    }  }} @AT@ 4237 @LENGTH@ 235
---UPD Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @TO@ ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);  String elementId=element.getId();  if (contentProvider != null) {    try {      File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);      File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);      File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);      contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));    } catch (    Exception e) {      throw new PatchingException("failed to resolve content for " + element);    }  }} @AT@ 4256 @LENGTH@ 216
------INS VariableDeclarationStatement@@String elementId=element.getId(); @TO@ Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @AT@ 4813 @LENGTH@ 35
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String elementId=element.getId(); @AT@ 4813 @LENGTH@ 6
---------INS VariableDeclarationFragment@@elementId=element.getId() @TO@ VariableDeclarationStatement@@String elementId=element.getId(); @AT@ 4820 @LENGTH@ 27
------------INS SimpleName@@elementId @TO@ VariableDeclarationFragment@@elementId=element.getId() @AT@ 4820 @LENGTH@ 9
------------INS MethodInvocation@@element.getId() @TO@ VariableDeclarationFragment@@elementId=element.getId() @AT@ 4832 @LENGTH@ 15
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getId() @AT@ 4832 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@element.getId() @AT@ 4840 @LENGTH@ 7
------INS IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @TO@ Block@@ThenBody:{  final InstallationManager.MutablePatchingTarget target=modification.resolve(layerName,layerType);  entry=new PatchEntry(target,element);  map.put(layerName,entry);} @AT@ 4933 @LENGTH@ 711
---------INS InfixExpression@@contentProvider != null @TO@ IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4937 @LENGTH@ 23
------------INS SimpleName@@contentProvider @TO@ InfixExpression@@contentProvider != null @AT@ 4937 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@contentProvider != null @AT@ 4952 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@contentProvider != null @AT@ 4956 @LENGTH@ 4
---------INS Block@@ThenBody:{  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @TO@ IfStatement@@if (contentProvider != null) {  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4962 @LENGTH@ 682
------------INS TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ Block@@ThenBody:{  try {    File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);    File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);    File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);    contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));  } catch (  Exception e) {    throw new PatchingException("failed to resolve content for " + element);  }} @AT@ 4980 @LENGTH@ 650
---------------INS VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5006 @LENGTH@ 102
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @AT@ 5006 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @AT@ 5011 @LENGTH@ 96
---------------------INS SimpleName@@miscRoot @TO@ VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5011 @LENGTH@ 8
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5022 @LENGTH@ 85
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @AT@ 5022 @LENGTH@ 85
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5030 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5056 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5067 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5067 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5077 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5091 @LENGTH@ 9
---------------------------INS SimpleName@@MISC @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @AT@ 5102 @LENGTH@ 4
---------------INS VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5129 @LENGTH@ 107
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @AT@ 5129 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @AT@ 5134 @LENGTH@ 101
---------------------INS SimpleName@@moduleRoot @TO@ VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5134 @LENGTH@ 10
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5147 @LENGTH@ 88
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @AT@ 5147 @LENGTH@ 88
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5155 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5181 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5192 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5192 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5202 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5216 @LENGTH@ 9
---------------------------INS SimpleName@@MODULES @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @AT@ 5227 @LENGTH@ 7
---------------INS VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5257 @LENGTH@ 107
------------------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @AT@ 5257 @LENGTH@ 4
------------------INS VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @AT@ 5262 @LENGTH@ 101
---------------------INS SimpleName@@bundleRoot @TO@ VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5262 @LENGTH@ 10
---------------------INS MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5275 @LENGTH@ 88
------------------------INS SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @TO@ MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @AT@ 5275 @LENGTH@ 88
---------------------------INS MethodInvocation@@MethodName:getPatchContentRootDir:[] @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5283 @LENGTH@ 24
---------------------------INS SimpleName@@elementId @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5309 @LENGTH@ 9
---------------------------INS MethodInvocation@@layerType.getDirName() @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5320 @LENGTH@ 22
------------------------------INS SimpleName@@Name:layerType @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5320 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:getDirName:[] @TO@ MethodInvocation@@layerType.getDirName() @AT@ 5330 @LENGTH@ 12
---------------------------INS SimpleName@@layerName @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5344 @LENGTH@ 9
---------------------------INS SimpleName@@BUNDLES @TO@ SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @AT@ 5355 @LENGTH@ 7
---------------INS ExpressionStatement@@MethodInvocation:contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5385 @LENGTH@ 94
------------------INS MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @TO@ ExpressionStatement@@MethodInvocation:contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5385 @LENGTH@ 93
---------------------INS SimpleName@@Name:contentLoaders @TO@ MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5385 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @TO@ MethodInvocation@@contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)) @AT@ 5400 @LENGTH@ 78
------------------------INS MethodInvocation@@element.getId() @TO@ SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @AT@ 5404 @LENGTH@ 15
---------------------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getId() @AT@ 5404 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@element.getId() @AT@ 5412 @LENGTH@ 7
------------------------INS ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @TO@ SimpleName@@MethodName:put:[element.getId(), new PatchContentLoader(miscRoot,bundleRoot,moduleRoot)] @AT@ 5421 @LENGTH@ 56
---------------------------INS New@@new @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5421 @LENGTH@ 3
---------------------------INS SimpleType@@PatchContentLoader @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5425 @LENGTH@ 18
---------------------------INS SimpleName@@miscRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5444 @LENGTH@ 8
---------------------------INS SimpleName@@bundleRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5454 @LENGTH@ 10
---------------------------INS SimpleName@@moduleRoot @TO@ ClassInstanceCreation@@PatchContentLoader[miscRoot, bundleRoot, moduleRoot] @AT@ 5466 @LENGTH@ 10
---------------INS CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5498 @LENGTH@ 132
------------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5505 @LENGTH@ 11
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5505 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5515 @LENGTH@ 1
------------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException("failed to resolve content for " + element) @TO@ CatchClause@@catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 5540 @LENGTH@ 72
---------------------INS ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException("failed to resolve content for " + element) @AT@ 5546 @LENGTH@ 65
------------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5546 @LENGTH@ 3
------------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5550 @LENGTH@ 17
------------------------INS InfixExpression@@"failed to resolve content for " + element @TO@ ClassInstanceCreation@@PatchingException["failed to resolve content for " + element] @AT@ 5568 @LENGTH@ 42
---------------------------INS StringLiteral@@"failed to resolve content for " @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5568 @LENGTH@ 32
---------------------------INS Operator@@+ @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5600 @LENGTH@ 1
---------------------------INS SimpleName@@element @TO@ InfixExpression@@"failed to resolve content for " + element @AT@ 5603 @LENGTH@ 7


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 10045 @LENGTH@ 135
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 10112 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 10112 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 10120 @LENGTH@ 17
---UPD ReturnStatement@@MethodInvocation:primaryContext.authorizeResource(attributes) @TO@ MethodInvocation:primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 10122 @LENGTH@ 52
------UPD MethodInvocation@@primaryContext.authorizeResource(attributes) @TO@ primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 10129 @LENGTH@ 44
---------UPD SimpleName@@MethodName:authorizeResource:[attributes] @TO@ MethodName:authorizeResource:[attributes, isDefaultResource] @AT@ 10144 @LENGTH@ 29
------------INS SimpleName@@isDefaultResource @TO@ SimpleName@@MethodName:authorizeResource:[attributes] @AT@ 10201 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:context.getResult() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 5244 @LENGTH@ 20
---INS MethodInvocation@@context.getResult() @TO@ ExpressionStatement@@MethodInvocation:context.getResult() @AT@ 5244 @LENGTH@ 19
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult() @AT@ 5244 @LENGTH@ 7
------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult() @AT@ 5252 @LENGTH@ 11


UPD IfStatement@@if (!handler.compare(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @TO@ if (!handler.isDifferent(existing)) {  if (handlerUpdateTask == null) {    handlerUpdateTask=new HandlerUpdateTask();  }  handlerUpdateTask.replaceHandler(handler);} @AT@ 9323 @LENGTH@ 236
---UPD PrefixExpression@@!handler.compare(existing) @TO@ !handler.isDifferent(existing) @AT@ 9327 @LENGTH@ 26
------UPD MethodInvocation@@handler.compare(existing) @TO@ handler.isDifferent(existing) @AT@ 9328 @LENGTH@ 25
---------UPD SimpleName@@MethodName:compare:[existing] @TO@ MethodName:isDifferent:[existing] @AT@ 9336 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertThat(commands.get(0).trim(),is("java")) @TO@ MethodInvocation:assertThat(commands.get(0).trim(),containsString("JAVA_HOME")) @AT@ 5408 @LENGTH@ 47
---UPD MethodInvocation@@assertThat(commands.get(0).trim(),is("java")) @TO@ assertThat(commands.get(0).trim(),containsString("JAVA_HOME")) @AT@ 5408 @LENGTH@ 46
------UPD SimpleName@@MethodName:assertThat:[commands.get(0).trim(), is("java")] @TO@ MethodName:assertThat:[commands.get(0).trim(), containsString("JAVA_HOME")] @AT@ 5408 @LENGTH@ 46
---------UPD MethodInvocation@@is("java") @TO@ containsString("JAVA_HOME") @AT@ 5443 @LENGTH@ 10
------------UPD SimpleName@@MethodName:is:["java"] @TO@ MethodName:containsString:["JAVA_HOME"] @AT@ 5443 @LENGTH@ 10
---------------UPD StringLiteral@@"java" @TO@ "JAVA_HOME" @AT@ 5446 @LENGTH@ 6
------------UPD SimpleName@@MethodName:is:["java"] @TO@ MethodName:containsString:["JAVA_HOME"] @AT@ 5443 @LENGTH@ 10
---------------UPD StringLiteral@@"java" @TO@ "JAVA_HOME" @AT@ 5446 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true").to("mock:result") @TO@ MethodInvocation:from("mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true").to("mock:result") @AT@ 2399 @LENGTH@ 81
---UPD MethodInvocation@@from("mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true").to("mock:result") @TO@ from("mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true").to("mock:result") @AT@ 2399 @LENGTH@ 80
------UPD MethodInvocation@@MethodName:from:["mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true"] @TO@ MethodName:from:["mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true"] @AT@ 2399 @LENGTH@ 62
---------INS InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true" @TO@ MethodInvocation@@MethodName:from:["mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true"] @AT@ 2268 @LENGTH@ 68
------------INS StringLiteral@@"mina2:udp://127.0.0.1:" @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true" @AT@ 2268 @LENGTH@ 24
------------INS Operator@@+ @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true" @AT@ 2292 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getPort:[] @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true" @AT@ 2295 @LENGTH@ 9
------------INS StringLiteral@@"?sync=false&minaLogger=true" @TO@ InfixExpression@@"mina2:udp://127.0.0.1:" + getPort() + "?sync=false&minaLogger=true" @AT@ 2307 @LENGTH@ 29
---------DEL StringLiteral@@"mina2:udp://127.0.0.1:10111?sync=false&minaLogger=true" @AT@ 2404 @LENGTH@ 56


DEL ExpressionStatement@@Assignment:this.single=true @AT@ 1485 @LENGTH@ 19
---DEL Assignment@@this.single=true @AT@ 1485 @LENGTH@ 18
------DEL FieldAccess@@this.single @AT@ 1485 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1485 @LENGTH@ 4
---------DEL SimpleName@@single @AT@ 1490 @LENGTH@ 6
------DEL Operator@@= @AT@ 1496 @LENGTH@ 1
------DEL BooleanLiteral@@true @AT@ 1499 @LENGTH@ 4


UPD FieldDeclaration@@private, final, transient, Logger, [LOGGER=LoggerFactory.getLogger(this.getClass())] @TO@ private, final, transient, Logger, [logger=LoggerFactory.getLogger(this.getClass())] @AT@ 1771 @LENGTH@ 81
---UPD VariableDeclarationFragment@@LOGGER=LoggerFactory.getLogger(this.getClass()) @TO@ logger=LoggerFactory.getLogger(this.getClass()) @AT@ 1802 @LENGTH@ 49
------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1802 @LENGTH@ 6


UPD VariableDeclarationStatement@@Token token=NMTokenCache.getNMToken(container.getNodeId().toString()); @TO@ Token token=NMTokenCacheCompat.getNMTokenCache().getNMToken(container.getNodeId().toString()); @AT@ 4582 @LENGTH@ 72
---UPD VariableDeclarationFragment@@token=NMTokenCache.getNMToken(container.getNodeId().toString()) @TO@ token=NMTokenCacheCompat.getNMTokenCache().getNMToken(container.getNodeId().toString()) @AT@ 4588 @LENGTH@ 65
------UPD MethodInvocation@@NMTokenCache.getNMToken(container.getNodeId().toString()) @TO@ NMTokenCacheCompat.getNMTokenCache().getNMToken(container.getNodeId().toString()) @AT@ 4596 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:getNMTokenCache:[] @TO@ MethodInvocation@@NMTokenCache.getNMToken(container.getNodeId().toString()) @AT@ 4562 @LENGTH@ 36
---------UPD SimpleName@@Name:NMTokenCache @TO@ Name:NMTokenCacheCompat @AT@ 4596 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4737 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 4737 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 4737 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 4745 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 4764 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.fail("failed to rollback all patches " + CliUtilsForPatching.info()) @TO@ MethodInvocation:Assert.fail("failed to rollback all patches " + CliUtilsForPatching.info(false)) @AT@ 1902 @LENGTH@ 76
---UPD MethodInvocation@@Assert.fail("failed to rollback all patches " + CliUtilsForPatching.info()) @TO@ Assert.fail("failed to rollback all patches " + CliUtilsForPatching.info(false)) @AT@ 1902 @LENGTH@ 75
------UPD SimpleName@@MethodName:fail:["failed to rollback all patches " + CliUtilsForPatching.info()] @TO@ MethodName:fail:["failed to rollback all patches " + CliUtilsForPatching.info(false)] @AT@ 1909 @LENGTH@ 68
---------UPD InfixExpression@@"failed to rollback all patches " + CliUtilsForPatching.info() @TO@ "failed to rollback all patches " + CliUtilsForPatching.info(false) @AT@ 1914 @LENGTH@ 62
------------UPD MethodInvocation@@CliUtilsForPatching.info() @TO@ CliUtilsForPatching.info(false) @AT@ 1950 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:info:[] @TO@ MethodName:info:[false] @AT@ 1970 @LENGTH@ 6
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:info:[] @AT@ 1979 @LENGTH@ 5


UPD TypeDeclaration@@[public]UndertowSessionManager, [io.undertow.server.session.SessionManager] @TO@ [public]UndertowSessionManager, [io.undertow.server.session.SessionManager, RoutingSupport] @AT@ 1281 @LENGTH@ 183
---INS SimpleType@@RoutingSupport @TO@ TypeDeclaration@@[public]UndertowSessionManager, [io.undertow.server.session.SessionManager] @AT@ 1430 @LENGTH@ 14


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [SESSION_DRAINING_STRATEGY=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAlternatives("DEFAULT","ALWAYS","NEVER").setRestartAllServices().build()] @TO@ static, final, SimpleAttributeDefinition, [SESSION_DRAINING_STRATEGY=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAllowExpression(true).setAlternatives("DEFAULT","ALWAYS","NEVER").setDefaultValue(new ModelNode("DEFAULT")).setRestartAllServices().build()] @AT@ 2781 @LENGTH@ 351
---UPD VariableDeclarationFragment@@SESSION_DRAINING_STRATEGY=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAlternatives("DEFAULT","ALWAYS","NEVER").setRestartAllServices().build() @TO@ SESSION_DRAINING_STRATEGY=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAllowExpression(true).setAlternatives("DEFAULT","ALWAYS","NEVER").setDefaultValue(new ModelNode("DEFAULT")).setRestartAllServices().build() @AT@ 2820 @LENGTH@ 311
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAlternatives("DEFAULT","ALWAYS","NEVER").setRestartAllServices().build() @TO@ SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAllowExpression(true).setAlternatives("DEFAULT","ALWAYS","NEVER").setDefaultValue(new ModelNode("DEFAULT")).setRestartAllServices().build() @AT@ 2848 @LENGTH@ 283
---------INS MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("DEFAULT")] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAlternatives("DEFAULT","ALWAYS","NEVER").setRestartAllServices().build() @AT@ 2848 @LENGTH@ 260
------------INS ClassInstanceCreation@@ModelNode["DEFAULT"] @TO@ MethodInvocation@@MethodName:setDefaultValue:[new ModelNode("DEFAULT")] @AT@ 3083 @LENGTH@ 24
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode["DEFAULT"] @AT@ 3083 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode["DEFAULT"] @AT@ 3087 @LENGTH@ 9
---------------INS StringLiteral@@"DEFAULT" @TO@ ClassInstanceCreation@@ModelNode["DEFAULT"] @AT@ 3097 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.SESSION_DRAINING_STRATEGY,ModelType.STRING,true).setAlternatives("DEFAULT","ALWAYS","NEVER").setRestartAllServices().build() @AT@ 2848 @LENGTH@ 145
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 2988 @LENGTH@ 4


INS VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @TO@ MethodDeclaration@@private, static, Map<String,Object>, MethodName:safeCopy, Map<String,Object> properties,  @AT@ 33054 @LENGTH@ 98
---INS ParameterizedType@@List<MessageHistory> @TO@ VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @AT@ 33054 @LENGTH@ 20
------INS SimpleType@@List @TO@ ParameterizedType@@List<MessageHistory> @AT@ 33054 @LENGTH@ 4
------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@List<MessageHistory> @AT@ 33059 @LENGTH@ 14
---INS VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @TO@ VariableDeclarationStatement@@List<MessageHistory> history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY); @AT@ 33075 @LENGTH@ 76
------INS SimpleName@@history @TO@ VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33075 @LENGTH@ 7
------INS CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @TO@ VariableDeclarationFragment@@history=(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33085 @LENGTH@ 66
---------INS ParameterizedType@@List<MessageHistory> @TO@ CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33086 @LENGTH@ 20
------------INS SimpleType@@List @TO@ ParameterizedType@@List<MessageHistory> @AT@ 33086 @LENGTH@ 4
------------INS SimpleType@@MessageHistory @TO@ ParameterizedType@@List<MessageHistory> @AT@ 33091 @LENGTH@ 14
---------INS MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @TO@ CastExpression@@(List<MessageHistory>)properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33108 @LENGTH@ 43
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33108 @LENGTH@ 10
------------INS SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @TO@ MethodInvocation@@properties.remove(Exchange.MESSAGE_HISTORY) @AT@ 33119 @LENGTH@ 32
---------------INS QualifiedName@@Exchange.MESSAGE_HISTORY @TO@ SimpleName@@MethodName:remove:[Exchange.MESSAGE_HISTORY] @AT@ 33126 @LENGTH@ 24
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 33126 @LENGTH@ 8
------------------INS SimpleName@@MESSAGE_HISTORY @TO@ QualifiedName@@Exchange.MESSAGE_HISTORY @AT@ 33135 @LENGTH@ 15


INS IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @TO@ MethodDeclaration@@PatchingResult, MethodName:finish, final Patch patch, PatchingException,  @AT@ 10930 @LENGTH@ 772
---INS PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @TO@ IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10934 @LENGTH@ 42
------INS Operator@@! @TO@ PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10934 @LENGTH@ 1
------INS MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @TO@ PrefixExpression@@!PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10935 @LENGTH@ 41
---------INS QualifiedName@@Name:PatchInfo.BASE @TO@ MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10935 @LENGTH@ 14
---------INS SimpleName@@MethodName:equals:[patch.getPatchId()] @TO@ MethodInvocation@@PatchInfo.BASE.equals(patch.getPatchId()) @AT@ 10950 @LENGTH@ 26
------------INS MethodInvocation@@patch.getPatchId() @TO@ SimpleName@@MethodName:equals:[patch.getPatchId()] @AT@ 10957 @LENGTH@ 18
---------------INS SimpleName@@Name:patch @TO@ MethodInvocation@@patch.getPatchId() @AT@ 10957 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getPatchId:[] @TO@ MethodInvocation@@patch.getPatchId() @AT@ 10963 @LENGTH@ 12
---INS Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @TO@ IfStatement@@if (!PatchInfo.BASE.equals(patch.getPatchId())) {  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10978 @LENGTH@ 724
------INS VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 10992 @LENGTH@ 108
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 10992 @LENGTH@ 5
---------INS SimpleType@@File @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 10998 @LENGTH@ 4
---------INS VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @TO@ VariableDeclarationStatement@@final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML); @AT@ 11003 @LENGTH@ 96
------------INS SimpleName@@appliedPatchXml @TO@ VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @AT@ 11003 @LENGTH@ 15
------------INS ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @TO@ VariableDeclarationFragment@@appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML) @AT@ 11021 @LENGTH@ 78
---------------INS New@@new @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11021 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11025 @LENGTH@ 4
---------------INS MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11030 @LENGTH@ 48
------------------INS MethodInvocation@@MethodName:getEnvironment:[] @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11030 @LENGTH@ 21
------------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11030 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getPatchDirectory:[patchId] @TO@ MethodInvocation@@info.getEnvironment().getPatchDirectory(patchId) @AT@ 11052 @LENGTH@ 26
---------------------INS SimpleName@@patchId @TO@ SimpleName@@MethodName:getPatchDirectory:[patchId] @AT@ 11070 @LENGTH@ 7
---------------INS QualifiedName@@PatchXml.PATCH_XML @TO@ ClassInstanceCreation@@File[info.getEnvironment().getPatchDirectory(patchId), PatchXml.PATCH_XML] @AT@ 11080 @LENGTH@ 18
------------------INS SimpleName@@PatchXml @TO@ QualifiedName@@PatchXml.PATCH_XML @AT@ 11080 @LENGTH@ 8
------------------INS SimpleName@@PATCH_XML @TO@ QualifiedName@@PatchXml.PATCH_XML @AT@ 11089 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:appliedPatchXml.getParentFile().mkdir() @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 11199 @LENGTH@ 40
---------INS MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @TO@ ExpressionStatement@@MethodInvocation:appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 31
------------INS SimpleName@@Name:appliedPatchXml @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11199 @LENGTH@ 15
------------INS SimpleName@@MethodName:mkdir:[] @TO@ MethodInvocation@@appliedPatchXml.getParentFile().mkdir() @AT@ 11231 @LENGTH@ 7
------INS TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @TO@ Block@@ThenBody:{  final File appliedPatchXml=new File(info.getEnvironment().getPatchDirectory(patchId),PatchXml.PATCH_XML);  appliedPatchXml.getParentFile().mkdir();  try {    final OutputStream os=new FileOutputStream(appliedPatchXml);    try {      PatchXml.marshal(os,patch);    }  finally {      PatchUtils.safeClose(os);    }  } catch (  XMLStreamException e) {    throw new PatchingException(e);  }catch (  IOException e) {    throw new PatchingException(e);  }} @AT@ 11252 @LENGTH@ 440
---------INS VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11274 @LENGTH@ 62
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11274 @LENGTH@ 5
------------INS SimpleType@@OutputStream @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11280 @LENGTH@ 12
------------INS VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @TO@ VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(appliedPatchXml); @AT@ 11293 @LENGTH@ 42
---------------INS SimpleName@@os @TO@ VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @AT@ 11293 @LENGTH@ 2
---------------INS ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @TO@ VariableDeclarationFragment@@os=new FileOutputStream(appliedPatchXml) @AT@ 11298 @LENGTH@ 37
------------------INS New@@new @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11298 @LENGTH@ 3
------------------INS SimpleType@@FileOutputStream @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11302 @LENGTH@ 16
------------------INS SimpleName@@appliedPatchXml @TO@ ClassInstanceCreation@@FileOutputStream[appliedPatchXml] @AT@ 11319 @LENGTH@ 15
---------INS TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11353 @LENGTH@ 146
------------INS ExpressionStatement@@MethodInvocation:PatchXml.marshal(os,patch) @TO@ TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @AT@ 11379 @LENGTH@ 28
---------------INS MethodInvocation@@PatchXml.marshal(os,patch) @TO@ ExpressionStatement@@MethodInvocation:PatchXml.marshal(os,patch) @AT@ 11379 @LENGTH@ 27
------------------INS SimpleName@@Name:PatchXml @TO@ MethodInvocation@@PatchXml.marshal(os,patch) @AT@ 11379 @LENGTH@ 8
------------------INS SimpleName@@MethodName:marshal:[os, patch] @TO@ MethodInvocation@@PatchXml.marshal(os,patch) @AT@ 11388 @LENGTH@ 18
---------------------INS SimpleName@@os @TO@ SimpleName@@MethodName:marshal:[os, patch] @AT@ 11396 @LENGTH@ 2
---------------------INS SimpleName@@patch @TO@ SimpleName@@MethodName:marshal:[os, patch] @AT@ 11400 @LENGTH@ 5
------------INS Block@@FinallyBody:{  PatchUtils.safeClose(os);} @TO@ TryStatement@@try {  PatchXml.marshal(os,patch);}  finally {  PatchUtils.safeClose(os);} @AT@ 11434 @LENGTH@ 65
---------------INS ExpressionStatement@@MethodInvocation:PatchUtils.safeClose(os) @TO@ Block@@FinallyBody:{  PatchUtils.safeClose(os);} @AT@ 11456 @LENGTH@ 25
------------------INS MethodInvocation@@PatchUtils.safeClose(os) @TO@ ExpressionStatement@@MethodInvocation:PatchUtils.safeClose(os) @AT@ 11456 @LENGTH@ 24
---------------------INS SimpleName@@Name:PatchUtils @TO@ MethodInvocation@@PatchUtils.safeClose(os) @AT@ 11456 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:safeClose:[os] @TO@ MethodInvocation@@PatchUtils.safeClose(os) @AT@ 11467 @LENGTH@ 13
------------------------INS SimpleName@@os @TO@ SimpleName@@MethodName:safeClose:[os] @AT@ 11477 @LENGTH@ 2
---------INS CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11514 @LENGTH@ 92
------------INS SingleVariableDeclaration@@XMLStreamException e @TO@ CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @AT@ 11521 @LENGTH@ 20
---------------INS SimpleType@@XMLStreamException @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 11521 @LENGTH@ 18
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@XMLStreamException e @AT@ 11540 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @TO@ CatchClause@@catch (XMLStreamException e) {  throw new PatchingException(e);} @AT@ 11561 @LENGTH@ 31
---------------INS ClassInstanceCreation@@PatchingException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @AT@ 11567 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11567 @LENGTH@ 3
------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11571 @LENGTH@ 17
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11589 @LENGTH@ 1
---------INS CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(appliedPatchXml);  try {    PatchXml.marshal(os,patch);  }  finally {    PatchUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new PatchingException(e);}catch (IOException e) {  throw new PatchingException(e);} @AT@ 11607 @LENGTH@ 85
------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @AT@ 11614 @LENGTH@ 13
---------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 11614 @LENGTH@ 11
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 11626 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @TO@ CatchClause@@catch (IOException e) {  throw new PatchingException(e);} @AT@ 11647 @LENGTH@ 31
---------------INS ClassInstanceCreation@@PatchingException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new PatchingException(e) @AT@ 11653 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11653 @LENGTH@ 3
------------------INS SimpleType@@PatchingException @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11657 @LENGTH@ 17
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@PatchingException[e] @AT@ 11675 @LENGTH@ 1


INS MethodDeclaration@@public, boolean, MethodName:allowNull,  @TO@ TypeDeclaration@@[public, abstract]TypeConverterSupport, [TypeConverter] @AT@ 1404 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1404 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1411 @LENGTH@ 7
---INS SimpleName@@MethodName:allowNull @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1419 @LENGTH@ 9
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:allowNull,  @AT@ 1441 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1448 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:getOsgiService(BlueprintContainer.class,"(osgi.blueprint.container.symbolicname=org.fusesource.fabric.fabric-commands)",DEFAULT_TIMEOUT) @TO@ MethodInvocation:getOsgiService(Function.class,"(&(osgi.command.scope=fabric)(osgi.command.function=profile-edit))",DEFAULT_TIMEOUT) @AT@ 10201 @LENGTH@ 139
---UPD MethodInvocation@@getOsgiService(BlueprintContainer.class,"(osgi.blueprint.container.symbolicname=org.fusesource.fabric.fabric-commands)",DEFAULT_TIMEOUT) @TO@ getOsgiService(Function.class,"(&(osgi.command.scope=fabric)(osgi.command.function=profile-edit))",DEFAULT_TIMEOUT) @AT@ 10201 @LENGTH@ 138
------UPD SimpleName@@MethodName:getOsgiService:[BlueprintContainer.class, "(osgi.blueprint.container.symbolicname=org.fusesource.fabric.fabric-commands)", DEFAULT_TIMEOUT] @TO@ MethodName:getOsgiService:[Function.class, "(&(osgi.command.scope=fabric)(osgi.command.function=profile-edit))", DEFAULT_TIMEOUT] @AT@ 10201 @LENGTH@ 138
---------UPD TypeLiteral@@BlueprintContainer.class @TO@ Function.class @AT@ 10216 @LENGTH@ 24
---------UPD StringLiteral@@"(osgi.blueprint.container.symbolicname=org.fusesource.fabric.fabric-commands)" @TO@ "(&(osgi.command.scope=fabric)(osgi.command.function=profile-edit))" @AT@ 10242 @LENGTH@ 79


UPD FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @TO@ public, static, final, File, [BASE_MODULE_DIRECTORY=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3652 @LENGTH@ 118
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, File, [baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE)] @AT@ 3593 @LENGTH@ 5
---UPD VariableDeclarationFragment@@baseModuleDir=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @TO@ BASE_MODULE_DIRECTORY=newFile(new File(PatchingTestUtil.AS_DISTRIBUTION),MODULES,SYSTEM,LAYERS,BASE) @AT@ 3671 @LENGTH@ 98
------UPD SimpleName@@baseModuleDir @TO@ BASE_MODULE_DIRECTORY @AT@ 3671 @LENGTH@ 13


UPD MethodDeclaration@@IllegalStateException, MethodName:couldNotBackUp, String absolutePath, String absolutePath1,  @TO@ IllegalStateException, MethodName:couldNotBackUp, @Cause IOException cause, String absolutePath, String absolutePath1,  @AT@ 111898 @LENGTH@ 58
---INS SingleVariableDeclaration@@@Cause IOException cause @TO@ MethodDeclaration@@IllegalStateException, MethodName:couldNotBackUp, String absolutePath, String absolutePath1,  @AT@ 111913 @LENGTH@ 24
------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@@Cause IOException cause @AT@ 111920 @LENGTH@ 11
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause IOException cause @AT@ 111932 @LENGTH@ 5


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(PicklistEnumConverter.class)] @AT@ 1314 @LENGTH@ 87
---DEL Modifier@@private @AT@ 1314 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1322 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1329 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1335 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(PicklistEnumConverter.class) @AT@ 1342 @LENGTH@ 58
------DEL SimpleName@@LOG @AT@ 1342 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(PicklistEnumConverter.class) @AT@ 1348 @LENGTH@ 52
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1348 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[PicklistEnumConverter.class] @AT@ 1362 @LENGTH@ 38
------------DEL TypeLiteral@@PicklistEnumConverter.class @AT@ 1372 @LENGTH@ 27


INS ExpressionStatement@@Assignment:this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @TO@ MethodDeclaration@@public, B, MethodName:fromSystemProperties,  @AT@ 2516 @LENGTH@ 85
---INS Assignment@@this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @TO@ ExpressionStatement@@Assignment:this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2516 @LENGTH@ 84
------INS FieldAccess@@this.zookeeperPassword @TO@ Assignment@@this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2516 @LENGTH@ 22
---------INS ThisExpression@@this @TO@ FieldAccess@@this.zookeeperPassword @AT@ 2516 @LENGTH@ 4
---------INS SimpleName@@zookeeperPassword @TO@ FieldAccess@@this.zookeeperPassword @AT@ 2521 @LENGTH@ 17
------INS Operator@@= @TO@ Assignment@@this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2538 @LENGTH@ 1
------INS MethodInvocation@@System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @TO@ Assignment@@this.zookeeperPassword=System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2542 @LENGTH@ 58
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2542 @LENGTH@ 6
---------INS SimpleName@@MethodName:getProperty:[ZOOKEEPER_PASSWORD, generatePassword()] @TO@ MethodInvocation@@System.getProperty(ZOOKEEPER_PASSWORD,generatePassword()) @AT@ 2549 @LENGTH@ 51
------------INS SimpleName@@ZOOKEEPER_PASSWORD @TO@ SimpleName@@MethodName:getProperty:[ZOOKEEPER_PASSWORD, generatePassword()] @AT@ 2561 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:generatePassword:[] @TO@ SimpleName@@MethodName:getProperty:[ZOOKEEPER_PASSWORD, generatePassword()] @AT@ 2581 @LENGTH@ 18


UPD IfStatement@@if (answer == null || answer.toString().length() < 1) {  answer=new J4pReadRequest(MBeans.FABRIC.getUrl());} else {  answer=new J4pReadRequest(MBeans.FABRIC.getUrl(),attribute);} @TO@ if (attribute == null || attribute.toString().length() < 1) {  answer=new J4pReadRequest(MBeans.FABRIC.getUrl());} else {  answer=new J4pReadRequest(MBeans.FABRIC.getUrl(),attribute);} @AT@ 1630 @LENGTH@ 223
---UPD InfixExpression@@answer == null || answer.toString().length() < 1 @TO@ attribute == null || attribute.toString().length() < 1 @AT@ 1634 @LENGTH@ 48
------UPD InfixExpression@@answer == null @TO@ attribute == null @AT@ 1634 @LENGTH@ 14
---------UPD SimpleName@@answer @TO@ attribute @AT@ 1634 @LENGTH@ 6
------UPD InfixExpression@@answer.toString().length() < 1 @TO@ attribute.toString().length() < 1 @AT@ 1652 @LENGTH@ 30
---------UPD MethodInvocation@@answer.toString().length() @TO@ attribute.toString().length() @AT@ 1652 @LENGTH@ 26
------------UPD SimpleName@@Name:answer @TO@ Name:attribute @AT@ 1652 @LENGTH@ 6


UPD VariableDeclarationStatement@@DatagramPacket packet=new DatagramPacket(data,data.length,address,10111); @TO@ DatagramPacket packet=new DatagramPacket(data,data.length,address,getPort()); @AT@ 2032 @LENGTH@ 78
---UPD VariableDeclarationFragment@@packet=new DatagramPacket(data,data.length,address,10111) @TO@ packet=new DatagramPacket(data,data.length,address,getPort()) @AT@ 2047 @LENGTH@ 62
------UPD ClassInstanceCreation@@DatagramPacket[data, data.length, address, 10111] @TO@ DatagramPacket[data, data.length, address, getPort()] @AT@ 2056 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ ClassInstanceCreation@@DatagramPacket[data, data.length, address, 10111] @AT@ 1963 @LENGTH@ 9
---------DEL NumberLiteral@@10111 @AT@ 2103 @LENGTH@ 5


UPD IfStatement@@if (!XmlHelper.hasNamespace(path,BLUEPRINT_NAMESPACE_URI)) {  LOG.info("Ignoring XML file " + path + " which is not a blueprint XML");  return null;} @TO@ if (!Paths.hasNamespace(path,BLUEPRINT_NAMESPACE_URI)) {  LOG.info("Ignoring XML file " + path + " which is not a blueprint XML");  return null;} @AT@ 5780 @LENGTH@ 181
---UPD PrefixExpression@@!XmlHelper.hasNamespace(path,BLUEPRINT_NAMESPACE_URI) @TO@ !Paths.hasNamespace(path,BLUEPRINT_NAMESPACE_URI) @AT@ 5784 @LENGTH@ 54
------UPD MethodInvocation@@XmlHelper.hasNamespace(path,BLUEPRINT_NAMESPACE_URI) @TO@ Paths.hasNamespace(path,BLUEPRINT_NAMESPACE_URI) @AT@ 5785 @LENGTH@ 53
---------UPD SimpleName@@Name:XmlHelper @TO@ Name:Paths @AT@ 5785 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:csp.getCipherSuite().add("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256") @TO@ MethodInvocation:csp.getCipherSuite().add("TLS_RSA_WITH_AES_128_CBC_SHA") @AT@ 28914 @LENGTH@ 68
---UPD MethodInvocation@@csp.getCipherSuite().add("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256") @TO@ csp.getCipherSuite().add("TLS_RSA_WITH_AES_128_CBC_SHA") @AT@ 28914 @LENGTH@ 67
------UPD SimpleName@@MethodName:add:["TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"] @TO@ MethodName:add:["TLS_RSA_WITH_AES_128_CBC_SHA"] @AT@ 28935 @LENGTH@ 46
---------UPD StringLiteral@@"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256" @TO@ "TLS_RSA_WITH_AES_128_CBC_SHA" @AT@ 28939 @LENGTH@ 41


UPD TypeDeclaration@@[@Converter, public]MyConverter,  @TO@ [@Converter, public, final]MyConverter,  @AT@ 936 @LENGTH@ 254
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter, public]MyConverter,  @AT@ 954 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:builder.getAttributeBuilder().setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS) @TO@ MethodInvocation:builder.getAttributeBuilder().setDiscard(DiscardAttributeChecker.ALWAYS,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS) @AT@ 19612 @LENGTH@ 145
---UPD MethodInvocation@@builder.getAttributeBuilder().setDiscard(DiscardAttributeChecker.UNDEFINED,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS) @TO@ builder.getAttributeBuilder().setDiscard(DiscardAttributeChecker.ALWAYS,EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS) @AT@ 19612 @LENGTH@ 144
------UPD SimpleName@@MethodName:setDiscard:[DiscardAttributeChecker.UNDEFINED, EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS] @TO@ MethodName:setDiscard:[DiscardAttributeChecker.ALWAYS, EJB3SubsystemRootResourceDefinition.DISABLE_DEFAULT_EJB_PERMISSIONS] @AT@ 19642 @LENGTH@ 114
---------UPD QualifiedName@@DiscardAttributeChecker.UNDEFINED @TO@ DiscardAttributeChecker.ALWAYS @AT@ 19653 @LENGTH@ 33
------------UPD SimpleName@@UNDEFINED @TO@ ALWAYS @AT@ 19677 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:close,  @TO@ TypeDeclaration@@[public]MuxChannel, JChannel @AT@ 2505 @LENGTH@ 43
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 2505 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 2512 @LENGTH@ 4
---INS SimpleName@@MethodName:close @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 2517 @LENGTH@ 5


UPD IfStatement@@if (map == null) {  map=new HashMap<Object,AggregationStrategy>();} else {  map=new HashMap<Object,AggregationStrategy>(map);} @TO@ if (map == null) {  map=new ConcurrentHashMap<Object,AggregationStrategy>();} else {  map=new ConcurrentHashMap<Object,AggregationStrategy>(map);} @AT@ 48611 @LENGTH@ 358
---UPD Block@@ThenBody:{  map=new HashMap<Object,AggregationStrategy>();} @TO@ ThenBody:{  map=new ConcurrentHashMap<Object,AggregationStrategy>();} @AT@ 48628 @LENGTH@ 73
------UPD ExpressionStatement@@Assignment:map=new HashMap<Object,AggregationStrategy>() @TO@ Assignment:map=new ConcurrentHashMap<Object,AggregationStrategy>() @AT@ 48642 @LENGTH@ 49
---------UPD Assignment@@map=new HashMap<Object,AggregationStrategy>() @TO@ map=new ConcurrentHashMap<Object,AggregationStrategy>() @AT@ 48642 @LENGTH@ 48
------------UPD ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[] @TO@ ConcurrentHashMap<Object,AggregationStrategy>[] @AT@ 48648 @LENGTH@ 42
---------------UPD ParameterizedType@@HashMap<Object,AggregationStrategy> @TO@ ConcurrentHashMap<Object,AggregationStrategy> @AT@ 48652 @LENGTH@ 36
------------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 48652 @LENGTH@ 7
---UPD Block@@ElseBody:{  map=new HashMap<Object,AggregationStrategy>(map);} @TO@ ElseBody:{  map=new ConcurrentHashMap<Object,AggregationStrategy>(map);} @AT@ 48707 @LENGTH@ 262
------UPD ExpressionStatement@@Assignment:map=new HashMap<Object,AggregationStrategy>(map) @TO@ Assignment:map=new ConcurrentHashMap<Object,AggregationStrategy>(map) @AT@ 48907 @LENGTH@ 52
---------UPD Assignment@@map=new HashMap<Object,AggregationStrategy>(map) @TO@ map=new ConcurrentHashMap<Object,AggregationStrategy>(map) @AT@ 48907 @LENGTH@ 51
------------UPD ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[map] @TO@ ConcurrentHashMap<Object,AggregationStrategy>[map] @AT@ 48913 @LENGTH@ 45
---------------UPD ParameterizedType@@HashMap<Object,AggregationStrategy> @TO@ ConcurrentHashMap<Object,AggregationStrategy> @AT@ 48917 @LENGTH@ 36
------------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 48917 @LENGTH@ 7


UPD MethodDeclaration@@public, int, MethodName:getBufferSize,  @TO@ public, int, MethodName:getStrategyBufferSize,  @AT@ 8667 @LENGTH@ 75
---UPD SimpleName@@MethodName:getBufferSize @TO@ MethodName:getStrategyBufferSize @AT@ 8678 @LENGTH@ 13


UPD MethodDeclaration@@boolean, MethodName:compare, AuditLogHandler other,  @TO@ boolean, MethodName:isDifferent, AuditLogHandler other,  @AT@ 9368 @LENGTH@ 2181
---UPD SimpleName@@MethodName:compare @TO@ MethodName:isDifferent @AT@ 9368 @LENGTH@ 7
---UPD IfStatement@@if (other instanceof SyslogAuditLogHandler == false) {  return false;} @TO@ if (other instanceof SyslogAuditLogHandler == false) {  return true;} @AT@ 9408 @LENGTH@ 89
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 9460 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 9474 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 9481 @LENGTH@ 5
---UPD IfStatement@@if (!name.equals(otherHandler.name)) {  return false;} @TO@ if (!name.equals(otherHandler.name)) {  return true;} @AT@ 9581 @LENGTH@ 73
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 9617 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 9631 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 9638 @LENGTH@ 5
---UPD IfStatement@@if (!getFormatterName().equals(otherHandler.getFormatterName())) {  return false;} @TO@ if (!getFormatterName().equals(otherHandler.getFormatterName())) {  return true;} @AT@ 9663 @LENGTH@ 102
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 9728 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 9742 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 9749 @LENGTH@ 5
---UPD IfStatement@@if (!appName.equals(otherHandler.appName)) {  return false;} @TO@ if (!appName.equals(otherHandler.appName)) {  return true;} @AT@ 9774 @LENGTH@ 79
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 9816 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 9830 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 9837 @LENGTH@ 5
---UPD IfStatement@@if (!hostName.equals(otherHandler.hostName)) {  return false;} @TO@ if (!hostName.equals(otherHandler.hostName)) {  return true;} @AT@ 9862 @LENGTH@ 81
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 9906 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 9920 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 9927 @LENGTH@ 5
---UPD IfStatement@@if (!syslogType.equals(otherHandler.syslogType)) {  return false;} @TO@ if (!syslogType.equals(otherHandler.syslogType)) {  return true;} @AT@ 9952 @LENGTH@ 85
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10000 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10014 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10021 @LENGTH@ 5
---UPD IfStatement@@if (!truncate == otherHandler.truncate) {  return false;} @TO@ if (!truncate == otherHandler.truncate) {  return true;} @AT@ 10046 @LENGTH@ 77
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10086 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10100 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10107 @LENGTH@ 5
---UPD IfStatement@@if (maxLength != otherHandler.maxLength) {  return false;} @TO@ if (maxLength != otherHandler.maxLength) {  return true;} @AT@ 10132 @LENGTH@ 78
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10173 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10187 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10194 @LENGTH@ 5
---UPD IfStatement@@if (!syslogServerAddress.equals(otherHandler.syslogServerAddress)) {  return false;} @TO@ if (!syslogServerAddress.equals(otherHandler.syslogServerAddress)) {  return true;} @AT@ 10219 @LENGTH@ 103
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10285 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10299 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10306 @LENGTH@ 5
---UPD IfStatement@@if (port != otherHandler.port) {  return false;} @TO@ if (port != otherHandler.port) {  return true;} @AT@ 10331 @LENGTH@ 67
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10361 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10375 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10382 @LENGTH@ 5
---UPD IfStatement@@if (!transport.equals(otherHandler.transport)) {  return false;} @TO@ if (!transport.equals(otherHandler.transport)) {  return true;} @AT@ 10407 @LENGTH@ 83
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10453 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10467 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10474 @LENGTH@ 5
---UPD IfStatement@@if (!compare(messageTransfer,otherHandler.messageTransfer)) {  return false;} @TO@ if (!compare(messageTransfer,otherHandler.messageTransfer)) {  return true;} @AT@ 10561 @LENGTH@ 97
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10621 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10635 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10642 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsTrustStorePath,otherHandler.tlsTrustStorePath)) {  return false;} @TO@ if (!compare(tlsTrustStorePath,otherHandler.tlsTrustStorePath)) {  return true;} @AT@ 10667 @LENGTH@ 101
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10731 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10745 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10752 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsTrustStoreRelativeTo,otherHandler.tlsTrustStoreRelativeTo)) {  return false;} @TO@ if (!compare(tlsTrustStoreRelativeTo,otherHandler.tlsTrustStoreRelativeTo)) {  return true;} @AT@ 10777 @LENGTH@ 113
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10853 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10867 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10874 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsTrustStorePassword,otherHandler.tlsTrustStorePassword)) {  return false;} @TO@ if (!compare(tlsTrustStorePassword,otherHandler.tlsTrustStorePassword)) {  return true;} @AT@ 10899 @LENGTH@ 109
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 10971 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 10985 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 10992 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsClientCertStorePath,otherHandler.tlsClientCertStorePath)) {  return false;} @TO@ if (!compare(tlsClientCertStorePath,otherHandler.tlsClientCertStorePath)) {  return true;} @AT@ 11017 @LENGTH@ 111
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 11091 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 11105 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 11112 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsClientCertStoreRelativeTo,otherHandler.tlsClientCertStoreRelativeTo)) {  return false;} @TO@ if (!compare(tlsClientCertStoreRelativeTo,otherHandler.tlsClientCertStoreRelativeTo)) {  return true;} @AT@ 11137 @LENGTH@ 123
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 11223 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 11237 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 11244 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsClientCertStorePassword,otherHandler.tlsClientCertStorePassword)) {  return false;} @TO@ if (!compare(tlsClientCertStorePassword,otherHandler.tlsClientCertStorePassword)) {  return true;} @AT@ 11269 @LENGTH@ 119
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 11351 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 11365 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 11372 @LENGTH@ 5
---UPD IfStatement@@if (!compare(tlsClientCertStoreKeyPassword,otherHandler.tlsClientCertStoreKeyPassword)) {  return false;} @TO@ if (!compare(tlsClientCertStoreKeyPassword,otherHandler.tlsClientCertStoreKeyPassword)) {  return true;} @AT@ 11397 @LENGTH@ 125
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return true;} @AT@ 11485 @LENGTH@ 37
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 11499 @LENGTH@ 13
------------UPD BooleanLiteral@@false @TO@ true @AT@ 11506 @LENGTH@ 5
---UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 11531 @LENGTH@ 12
------UPD BooleanLiteral@@true @TO@ false @AT@ 11538 @LENGTH@ 4


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build(); @AT@ 5830 @LENGTH@ 297
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 5836 @LENGTH@ 290
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 5844 @LENGTH@ 282
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 5844 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 5844 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 5981 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 5981 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 5991 @LENGTH@ 7


UPD TryStatement@@try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @TO@ try {  File miscRoot=newFile(getPatchContentRootDir(),elementId,MISC);  File moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES);  File bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES);  contentLoaders.put(element.getId(),new PatchContentLoader(miscRoot,bundleRoot,moduleRoot));} catch (Exception e) {  throw new PatchingException("failed to resolve content for " + element);} @AT@ 4980 @LENGTH@ 650
---UPD VariableDeclarationStatement@@File miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC); @TO@ File miscRoot=newFile(getPatchContentRootDir(),elementId,MISC); @AT@ 5006 @LENGTH@ 102
------UPD VariableDeclarationFragment@@miscRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ miscRoot=newFile(getPatchContentRootDir(),elementId,MISC) @AT@ 5011 @LENGTH@ 96
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MISC) @TO@ newFile(getPatchContentRootDir(),elementId,MISC) @AT@ 5022 @LENGTH@ 85
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MISC] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, MISC] @AT@ 5022 @LENGTH@ 85
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5067 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5067 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5077 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5091 @LENGTH@ 9
---UPD VariableDeclarationStatement@@File moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES); @TO@ File moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES); @AT@ 5129 @LENGTH@ 107
------UPD VariableDeclarationFragment@@moduleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ moduleRoot=newFile(getPatchContentRootDir(),elementId,MODULES) @AT@ 5134 @LENGTH@ 101
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,MODULES) @TO@ newFile(getPatchContentRootDir(),elementId,MODULES) @AT@ 5147 @LENGTH@ 88
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, MODULES] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, MODULES] @AT@ 5147 @LENGTH@ 88
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5192 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5192 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5202 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5216 @LENGTH@ 9
---UPD VariableDeclarationStatement@@File bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES); @TO@ File bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES); @AT@ 5257 @LENGTH@ 107
------UPD VariableDeclarationFragment@@bundleRoot=newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ bundleRoot=newFile(getPatchContentRootDir(),elementId,BUNDLES) @AT@ 5262 @LENGTH@ 101
---------UPD MethodInvocation@@newFile(getPatchContentRootDir(),elementId,layerType.getDirName(),layerName,BUNDLES) @TO@ newFile(getPatchContentRootDir(),elementId,BUNDLES) @AT@ 5275 @LENGTH@ 88
------------UPD SimpleName@@MethodName:newFile:[getPatchContentRootDir(), elementId, layerType.getDirName(), layerName, BUNDLES] @TO@ MethodName:newFile:[getPatchContentRootDir(), elementId, BUNDLES] @AT@ 5275 @LENGTH@ 88
---------------DEL MethodInvocation@@layerType.getDirName() @AT@ 5320 @LENGTH@ 22
------------------DEL SimpleName@@Name:layerType @AT@ 5320 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:getDirName:[] @AT@ 5330 @LENGTH@ 12
---------------DEL SimpleName@@layerName @AT@ 5344 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 3155 @LENGTH@ 33
---INS MethodInvocation@@context.getServiceRegistry(true) @TO@ ExpressionStatement@@MethodInvocation:context.getServiceRegistry(true) @AT@ 3155 @LENGTH@ 32
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3155 @LENGTH@ 7
------INS SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodInvocation@@context.getServiceRegistry(true) @AT@ 3163 @LENGTH@ 24
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 3182 @LENGTH@ 4


UPD Block@@ElseBody:if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @TO@ ElseBody:if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2808 @LENGTH@ 923
---UPD IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @TO@ if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2808 @LENGTH@ 923
------INS Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @TO@ IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2847 @LENGTH@ 235
---------INS IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @TO@ Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @AT@ 2852 @LENGTH@ 226
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------INS InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2856 @LENGTH@ 95
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2856 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2856 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2856 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["redirect"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2883 @LENGTH@ 20
---------------------INS StringLiteral@@"redirect" @TO@ SimpleName@@MethodName:contains:["redirect"] @AT@ 2892 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2903 @LENGTH@ 2
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("match") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["match"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2934 @LENGTH@ 17
---------------------INS StringLiteral@@"match" @TO@ SimpleName@@MethodName:contains:["match"] @AT@ 2943 @LENGTH@ 7
------------INS Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2953 @LENGTH@ 60
---------------INS ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @TO@ Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @AT@ 2959 @LENGTH@ 49
------------------INS Assignment@@ex=new RedirectMismatchException(errorMessage) @TO@ ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @AT@ 2959 @LENGTH@ 48
---------------------INS SimpleName@@ex @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2959 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2961 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@RedirectMismatchException[errorMessage] @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2964 @LENGTH@ 43
------------------------INS New@@new @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2964 @LENGTH@ 3
------------------------INS SimpleType@@RedirectMismatchException @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2968 @LENGTH@ 25
------------------------INS SimpleName@@errorMessage @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2994 @LENGTH@ 12
------UPD Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ ElseBody:{  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
---UPD IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @TO@ if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2808 @LENGTH@ 923
------INS Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @TO@ IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2847 @LENGTH@ 235
---------INS IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @TO@ Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @AT@ 2852 @LENGTH@ 226
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54
------------INS InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2856 @LENGTH@ 95
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2856 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2856 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2856 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["redirect"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2883 @LENGTH@ 20
---------------------INS StringLiteral@@"redirect" @TO@ SimpleName@@MethodName:contains:["redirect"] @AT@ 2892 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2903 @LENGTH@ 2
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("match") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2907 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["match"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2934 @LENGTH@ 17
---------------------INS StringLiteral@@"match" @TO@ SimpleName@@MethodName:contains:["match"] @AT@ 2943 @LENGTH@ 7
------------INS Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2953 @LENGTH@ 60
---------------INS ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @TO@ Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @AT@ 2959 @LENGTH@ 49
------------------INS Assignment@@ex=new RedirectMismatchException(errorMessage) @TO@ ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @AT@ 2959 @LENGTH@ 48
---------------------INS SimpleName@@ex @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2959 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2961 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@RedirectMismatchException[errorMessage] @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2964 @LENGTH@ 43
------------------------INS New@@new @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2964 @LENGTH@ 3
------------------------INS SimpleType@@RedirectMismatchException @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2968 @LENGTH@ 25
------------------------INS SimpleName@@errorMessage @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2994 @LENGTH@ 12
------UPD Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ ElseBody:{  ex=new InvalidGrantException(errorMessage);} @AT@ 2847 @LENGTH@ 54


UPD Block@@ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @TO@ ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided;synchronized (permissions) {    provided=permissions.get(mperm.getActionEffect());  }  return provided != null && provided.implies(mperm);} @AT@ 2565 @LENGTH@ 237
---UPD VariableDeclarationStatement@@ManagementPermission provided=permissions.get(mperm.getActionEffect()); @TO@ ManagementPermission provided; @AT@ 2655 @LENGTH@ 73
------UPD VariableDeclarationFragment@@provided=permissions.get(mperm.getActionEffect()) @TO@ provided @AT@ 2676 @LENGTH@ 51
---INS SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @TO@ Block@@ThenBody:{  ManagementPermission mperm=(ManagementPermission)permission;  ManagementPermission provided=permissions.get(mperm.getActionEffect());  return provided != null && provided.implies(mperm);} @AT@ 2698 @LENGTH@ 111
------INS SimpleName@@permissions @TO@ SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @AT@ 2712 @LENGTH@ 11
------INS Block@@SyncBody:{  provided=permissions.get(mperm.getActionEffect());} @TO@ SynchronizedStatement@@synchronized (permissions) {  provided=permissions.get(mperm.getActionEffect());} @AT@ 2725 @LENGTH@ 84
---------INS ExpressionStatement@@Assignment:provided=permissions.get(mperm.getActionEffect()) @TO@ Block@@SyncBody:{  provided=permissions.get(mperm.getActionEffect());} @AT@ 2743 @LENGTH@ 52
------------INS Assignment@@provided=permissions.get(mperm.getActionEffect()) @TO@ ExpressionStatement@@Assignment:provided=permissions.get(mperm.getActionEffect()) @AT@ 2743 @LENGTH@ 51
---------------MOV MethodInvocation@@permissions.get(mperm.getActionEffect()) @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2687 @LENGTH@ 40
---------------INS SimpleName@@provided @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2743 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@provided=permissions.get(mperm.getActionEffect()) @AT@ 2751 @LENGTH@ 1


UPD TypeDeclaration@@[public]ZkManagedBridgeServiceFactoryTest, AbstractConnectorTestSupport @TO@ [@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests"), public]ZkManagedBridgeServiceFactoryTest, AbstractConnectorTestSupport @AT@ 1716 @LENGTH@ 5999
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-516] Fix fabric-bridge-zookeeper tests") @TO@ TypeDeclaration@@[public]ZkManagedBridgeServiceFactoryTest, AbstractConnectorTestSupport @AT@ 1716 @LENGTH@ 57


INS MethodDeclaration@@public, void, MethodName:testRestrictive,  @TO@ TypeDeclaration@@[public]CombinationManagementPermissionTestCase,  @AT@ 2971 @LENGTH@ 206
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2971 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2978 @LENGTH@ 4
---INS SimpleName@@MethodName:testRestrictive @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 2983 @LENGTH@ 15
---INS VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 3069 @LENGTH@ 59
------INS ArrayType@@CombinationPolicy[] @TO@ VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @AT@ 3069 @LENGTH@ 19
---------INS SimpleType@@CombinationPolicy @TO@ ArrayType@@CombinationPolicy[] @AT@ 3069 @LENGTH@ 17
------INS VariableDeclarationFragment@@policySet=CombinationPolicy.values() @TO@ VariableDeclarationStatement@@CombinationPolicy[] policySet=CombinationPolicy.values(); @AT@ 3089 @LENGTH@ 38
---------INS SimpleName@@policySet @TO@ VariableDeclarationFragment@@policySet=CombinationPolicy.values() @AT@ 3089 @LENGTH@ 9
---------INS MethodInvocation@@CombinationPolicy.values() @TO@ VariableDeclarationFragment@@policySet=CombinationPolicy.values() @AT@ 3101 @LENGTH@ 26
------------INS SimpleName@@Name:CombinationPolicy @TO@ MethodInvocation@@CombinationPolicy.values() @AT@ 3101 @LENGTH@ 17
------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@CombinationPolicy.values() @AT@ 3119 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,policySet.length) @TO@ MethodDeclaration@@public, void, MethodName:testRestrictive,  @AT@ 3137 @LENGTH@ 34
------INS MethodInvocation@@assertEquals(2,policySet.length) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,policySet.length) @AT@ 3137 @LENGTH@ 33
---------INS SimpleName@@MethodName:assertEquals:[2, policySet.length] @TO@ MethodInvocation@@assertEquals(2,policySet.length) @AT@ 3137 @LENGTH@ 33
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, policySet.length] @AT@ 3150 @LENGTH@ 1
------------INS QualifiedName@@policySet.length @TO@ SimpleName@@MethodName:assertEquals:[2, policySet.length] @AT@ 3153 @LENGTH@ 16
---------------INS SimpleName@@policySet @TO@ QualifiedName@@policySet.length @AT@ 3153 @LENGTH@ 9
---------------INS SimpleName@@length @TO@ QualifiedName@@policySet.length @AT@ 3163 @LENGTH@ 6


INS VariableDeclarationStatement@@String currentVersion=getContainerVersion(NAME); @TO@ MethodDeclaration@@private, boolean, MethodName:shouldRunCallbacks, String path,  @AT@ 7943 @LENGTH@ 50
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String currentVersion=getContainerVersion(NAME); @AT@ 7943 @LENGTH@ 6
---INS VariableDeclarationFragment@@currentVersion=getContainerVersion(NAME) @TO@ VariableDeclarationStatement@@String currentVersion=getContainerVersion(NAME); @AT@ 7950 @LENGTH@ 42
------INS SimpleName@@currentVersion @TO@ VariableDeclarationFragment@@currentVersion=getContainerVersion(NAME) @AT@ 7950 @LENGTH@ 14
------INS MethodInvocation@@getContainerVersion(NAME) @TO@ VariableDeclarationFragment@@currentVersion=getContainerVersion(NAME) @AT@ 7967 @LENGTH@ 25
---------INS SimpleName@@MethodName:getContainerVersion:[NAME] @TO@ MethodInvocation@@getContainerVersion(NAME) @AT@ 7967 @LENGTH@ 25
------------INS SimpleName@@NAME @TO@ SimpleName@@MethodName:getContainerVersion:[NAME] @AT@ 7987 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 6866 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6866 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6873 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6878 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 6906 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 6906 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 6912 @LENGTH@ 21


UPD VariableDeclarationStatement@@String checksumPolicy=readProperty(properties,CHECKSUM_POLICY_PROPERTY,"fail"); @TO@ String checksumPolicy=readProperty(properties,CHECKSUM_POLICY_PROPERTY,RepositoryPolicy.CHECKSUM_POLICY_WARN); @AT@ 4791 @LENGTH@ 83
---UPD VariableDeclarationFragment@@checksumPolicy=readProperty(properties,CHECKSUM_POLICY_PROPERTY,"fail") @TO@ checksumPolicy=readProperty(properties,CHECKSUM_POLICY_PROPERTY,RepositoryPolicy.CHECKSUM_POLICY_WARN) @AT@ 4798 @LENGTH@ 75
------UPD MethodInvocation@@readProperty(properties,CHECKSUM_POLICY_PROPERTY,"fail") @TO@ readProperty(properties,CHECKSUM_POLICY_PROPERTY,RepositoryPolicy.CHECKSUM_POLICY_WARN) @AT@ 4815 @LENGTH@ 58
---------UPD SimpleName@@MethodName:readProperty:[properties, CHECKSUM_POLICY_PROPERTY, "fail"] @TO@ MethodName:readProperty:[properties, CHECKSUM_POLICY_PROPERTY, RepositoryPolicy.CHECKSUM_POLICY_WARN] @AT@ 4815 @LENGTH@ 58
------------DEL StringLiteral@@"fail" @AT@ 4866 @LENGTH@ 6
------------INS QualifiedName@@RepositoryPolicy.CHECKSUM_POLICY_WARN @TO@ SimpleName@@MethodName:readProperty:[properties, CHECKSUM_POLICY_PROPERTY, "fail"] @AT@ 4996 @LENGTH@ 37
---------------INS SimpleName@@RepositoryPolicy @TO@ QualifiedName@@RepositoryPolicy.CHECKSUM_POLICY_WARN @AT@ 4996 @LENGTH@ 16
---------------INS SimpleName@@CHECKSUM_POLICY_WARN @TO@ QualifiedName@@RepositoryPolicy.CHECKSUM_POLICY_WARN @AT@ 5013 @LENGTH@ 20


UPD ReturnStatement@@SimpleName:date @TO@ CastExpression:(Date)date.clone() @AT@ 4313 @LENGTH@ 12
---INS CastExpression@@(Date)date.clone() @TO@ ReturnStatement@@SimpleName:date @AT@ 4320 @LENGTH@ 18
------INS SimpleType@@Date @TO@ CastExpression@@(Date)date.clone() @AT@ 4321 @LENGTH@ 4
------INS MethodInvocation@@date.clone() @TO@ CastExpression@@(Date)date.clone() @AT@ 4326 @LENGTH@ 12
---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.clone() @AT@ 4326 @LENGTH@ 4
---------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@date.clone() @AT@ 4331 @LENGTH@ 7
---DEL SimpleName@@date @AT@ 4320 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)),PROVISION_TIMEOUT) @AT@ 2677 @LENGTH@ 138
---UPD MethodInvocation@@Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)),PROVISION_TIMEOUT) @TO@ Provision.containerAlive(Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)),PROVISION_TIMEOUT) @AT@ 2677 @LENGTH@ 137
------UPD SimpleName@@MethodName:containerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)), PROVISION_TIMEOUT] @TO@ MethodName:containerAlive:[Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)), PROVISION_TIMEOUT] @AT@ 2687 @LENGTH@ 127
---------UPD MethodInvocation@@Arrays.<Container>asList(new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)) @TO@ Arrays.<Container>asList(new ContainerImpl(null,"root",fabricService)) @AT@ 2702 @LENGTH@ 92
------------UPD SimpleName@@MethodName:asList:[new ContainerImpl(null,"root",(FabricServiceImpl)fabricService)] @TO@ MethodName:asList:[new ContainerImpl(null,"root",fabricService)] @AT@ 2720 @LENGTH@ 74
---------------UPD ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @TO@ ContainerImpl[null, "root", fabricService] @AT@ 2727 @LENGTH@ 66
------------------INS SimpleName@@fabricService @TO@ ClassInstanceCreation@@ContainerImpl[null, "root", (FabricServiceImpl)fabricService] @AT@ 2742 @LENGTH@ 13
------------------DEL CastExpression@@(FabricServiceImpl)fabricService @AT@ 2759 @LENGTH@ 33
---------------------DEL SimpleType@@FabricServiceImpl @AT@ 2760 @LENGTH@ 17
---------------------DEL SimpleName@@fabricService @AT@ 2779 @LENGTH@ 13


INS MethodDeclaration@@void, MethodName:setCreateOptions, CreateContainerOptions options,  @TO@ TypeDeclaration@@[public]CreateContainerMetadata, [Serializable] @AT@ 1064 @LENGTH@ 49
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setCreateOptions, CreateContainerOptions options,  @AT@ 1059 @LENGTH@ 4
---INS SimpleName@@MethodName:setCreateOptions @TO@ MethodDeclaration@@void, MethodName:setCreateOptions, CreateContainerOptions options,  @AT@ 1064 @LENGTH@ 16
---INS SingleVariableDeclaration@@CreateContainerOptions options @TO@ MethodDeclaration@@void, MethodName:setCreateOptions, CreateContainerOptions options,  @AT@ 1081 @LENGTH@ 30
------INS SimpleType@@CreateContainerOptions @TO@ SingleVariableDeclaration@@CreateContainerOptions options @AT@ 1081 @LENGTH@ 22
------INS SimpleName@@options @TO@ SingleVariableDeclaration@@CreateContainerOptions options @AT@ 1104 @LENGTH@ 7


INS VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 1663 @LENGTH@ 40
---INS SimpleType@@PatchInfo @TO@ VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @AT@ 1663 @LENGTH@ 9
---INS VariableDeclarationFragment@@info=service.getPatchInfo() @TO@ VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @AT@ 1673 @LENGTH@ 29
------INS SimpleName@@info @TO@ VariableDeclarationFragment@@info=service.getPatchInfo() @AT@ 1673 @LENGTH@ 4
------INS MethodInvocation@@service.getPatchInfo() @TO@ VariableDeclarationFragment@@info=service.getPatchInfo() @AT@ 1680 @LENGTH@ 22
---------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getPatchInfo() @AT@ 1680 @LENGTH@ 7
---------INS SimpleName@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@service.getPatchInfo() @AT@ 1688 @LENGTH@ 14


UPD ReturnStatement@@ClassInstanceCreation:new File(profileDirectory,pid) @TO@ ClassInstanceCreation:new File(profileDirectory,pid + PROPERTIES_SUFFIX) @AT@ 29986 @LENGTH@ 39
---UPD ClassInstanceCreation@@File[profileDirectory, pid] @TO@ File[profileDirectory, pid + PROPERTIES_SUFFIX] @AT@ 29993 @LENGTH@ 31
------INS InfixExpression@@pid + PROPERTIES_SUFFIX @TO@ ClassInstanceCreation@@File[profileDirectory, pid] @AT@ 30018 @LENGTH@ 23
---------INS SimpleName@@pid @TO@ InfixExpression@@pid + PROPERTIES_SUFFIX @AT@ 30018 @LENGTH@ 3
---------INS Operator@@+ @TO@ InfixExpression@@pid + PROPERTIES_SUFFIX @AT@ 30021 @LENGTH@ 1
---------INS SimpleName@@PROPERTIES_SUFFIX @TO@ InfixExpression@@pid + PROPERTIES_SUFFIX @AT@ 30024 @LENGTH@ 17
------DEL SimpleName@@pid @AT@ 30020 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(bindaddress,resolver.resolve(null,null,"container:root/BindAddres")) @TO@ MethodInvocation:assertEquals(bindaddress,resolver.resolve(null,null,"container:root/Bindaddress")) @AT@ 5248 @LENGTH@ 84
---UPD MethodInvocation@@assertEquals(bindaddress,resolver.resolve(null,null,"container:root/BindAddres")) @TO@ assertEquals(bindaddress,resolver.resolve(null,null,"container:root/Bindaddress")) @AT@ 5248 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertEquals:[bindaddress, resolver.resolve(null,null,"container:root/BindAddres")] @TO@ MethodName:assertEquals:[bindaddress, resolver.resolve(null,null,"container:root/Bindaddress")] @AT@ 5248 @LENGTH@ 83
---------UPD MethodInvocation@@resolver.resolve(null,null,"container:root/BindAddres") @TO@ resolver.resolve(null,null,"container:root/Bindaddress") @AT@ 5273 @LENGTH@ 57
------------UPD SimpleName@@MethodName:resolve:[null, null, "container:root/BindAddres"] @TO@ MethodName:resolve:[null, null, "container:root/Bindaddress"] @AT@ 5282 @LENGTH@ 48
---------------UPD StringLiteral@@"container:root/BindAddres" @TO@ "container:root/Bindaddress" @AT@ 5302 @LENGTH@ 27


UPD MethodDeclaration@@static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @TO@ public, static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @AT@ 3065 @LENGTH@ 497
---INS Modifier@@public @TO@ MethodDeclaration@@static, void, MethodName:assertFileDoesNotExist, File rootFile, String... segments,  @AT@ 3065 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Provision.waitForContainerStatus(containers,PROVISION_TIMEOUT) @TO@ MethodInvocation:Provision.containerStatus(containers,PROVISION_TIMEOUT) @AT@ 4638 @LENGTH@ 64
---UPD MethodInvocation@@Provision.waitForContainerStatus(containers,PROVISION_TIMEOUT) @TO@ Provision.containerStatus(containers,PROVISION_TIMEOUT) @AT@ 4638 @LENGTH@ 63
------UPD SimpleName@@MethodName:waitForContainerStatus:[containers, PROVISION_TIMEOUT] @TO@ MethodName:containerStatus:[containers, PROVISION_TIMEOUT] @AT@ 4648 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:parseAuthorization_1_3(reader,expectedNs,add,list) @TO@ MethodInvocation:parseAuthorization_1_3(reader,expectedNs,realmAddress,list) @AT@ 38227 @LENGTH@ 54
---UPD MethodInvocation@@parseAuthorization_1_3(reader,expectedNs,add,list) @TO@ parseAuthorization_1_3(reader,expectedNs,realmAddress,list) @AT@ 38227 @LENGTH@ 53
------UPD SimpleName@@MethodName:parseAuthorization_1_3:[reader, expectedNs, add, list] @TO@ MethodName:parseAuthorization_1_3:[reader, expectedNs, realmAddress, list] @AT@ 38227 @LENGTH@ 53
---------UPD SimpleName@@add @TO@ realmAddress @AT@ 38270 @LENGTH@ 3


UPD Block@@ElseBody:if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @TO@ ElseBody:if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2710 @LENGTH@ 1100
---UPD IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @TO@ if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2710 @LENGTH@ 1100
------INS Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @TO@ IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2749 @LENGTH@ 235
---------INS IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @TO@ Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @AT@ 2754 @LENGTH@ 226
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------INS InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2758 @LENGTH@ 95
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2758 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2758 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2758 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["redirect"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2785 @LENGTH@ 20
---------------------INS StringLiteral@@"redirect" @TO@ SimpleName@@MethodName:contains:["redirect"] @AT@ 2794 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2805 @LENGTH@ 2
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("match") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["match"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2836 @LENGTH@ 17
---------------------INS StringLiteral@@"match" @TO@ SimpleName@@MethodName:contains:["match"] @AT@ 2845 @LENGTH@ 7
------------INS Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2855 @LENGTH@ 60
---------------INS ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @TO@ Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @AT@ 2861 @LENGTH@ 49
------------------INS Assignment@@ex=new RedirectMismatchException(errorMessage) @TO@ ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @AT@ 2861 @LENGTH@ 48
---------------------INS SimpleName@@ex @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2861 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2863 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@RedirectMismatchException[errorMessage] @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2866 @LENGTH@ 43
------------------------INS New@@new @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2866 @LENGTH@ 3
------------------------INS SimpleType@@RedirectMismatchException @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2870 @LENGTH@ 25
------------------------INS SimpleName@@errorMessage @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2896 @LENGTH@ 12
------UPD Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ ElseBody:{  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
---UPD IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @TO@ if ("invalid_grant".equals(errorCode)) {  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2710 @LENGTH@ 1100
------INS Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @TO@ IfStatement@@if ("invalid_grant".equals(errorCode)) {  ex=new InvalidGrantException(errorMessage);} else if ("invalid_scope".equals(errorCode)) {  ex=new InvalidScopeException(errorMessage);} else if ("invalid_token".equals(errorCode)) {  ex=new InvalidTokenException(errorMessage);} else if ("invalid_request".equals(errorCode)) {  ex=new InvalidRequestException(errorMessage);} else if ("redirect_uri_mismatch".equals(errorCode)) {  ex=new RedirectMismatchException(errorMessage);} else if ("unsupported_grant_type".equals(errorCode)) {  ex=new UnsupportedGrantTypeException(errorMessage);} else if ("unsupported_response_type".equals(errorCode)) {  ex=new UnsupportedResponseTypeException(errorMessage);} else if ("access_denied".equals(errorCode)) {  ex=new UserDeniedAuthorizationException(errorMessage);} else if ("insufficient_scope".equals(errorCode)) {  ex=new InsufficientScopeException(errorMessage,OAuth2Utils.parseParameterList((String)errorParams.get("scope")));} else {  ex=new OAuth2Exception(errorMessage);} @AT@ 2749 @LENGTH@ 235
---------INS IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @TO@ Block@@ThenBody:{  if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {    ex=new RedirectMismatchException(errorMessage);  } else {    ex=new InvalidGrantException(errorMessage);  }} @AT@ 2754 @LENGTH@ 226
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------MOV Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54
------------INS InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2758 @LENGTH@ 95
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2758 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2758 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2758 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["redirect"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("redirect") @AT@ 2785 @LENGTH@ 20
---------------------INS StringLiteral@@"redirect" @TO@ SimpleName@@MethodName:contains:["redirect"] @AT@ 2794 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2805 @LENGTH@ 2
---------------INS MethodInvocation@@errorMessage.toLowerCase().contains("match") @TO@ InfixExpression@@errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:toLowerCase:[] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 26
------------------INS SimpleName@@Name:errorMessage @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2809 @LENGTH@ 12
------------------INS SimpleName@@MethodName:contains:["match"] @TO@ MethodInvocation@@errorMessage.toLowerCase().contains("match") @AT@ 2836 @LENGTH@ 17
---------------------INS StringLiteral@@"match" @TO@ SimpleName@@MethodName:contains:["match"] @AT@ 2845 @LENGTH@ 7
------------INS Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @TO@ IfStatement@@if (errorMessage.toLowerCase().contains("redirect") && errorMessage.toLowerCase().contains("match")) {  ex=new RedirectMismatchException(errorMessage);} else {  ex=new InvalidGrantException(errorMessage);} @AT@ 2855 @LENGTH@ 60
---------------INS ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @TO@ Block@@ThenBody:{  ex=new RedirectMismatchException(errorMessage);} @AT@ 2861 @LENGTH@ 49
------------------INS Assignment@@ex=new RedirectMismatchException(errorMessage) @TO@ ExpressionStatement@@Assignment:ex=new RedirectMismatchException(errorMessage) @AT@ 2861 @LENGTH@ 48
---------------------INS SimpleName@@ex @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2861 @LENGTH@ 2
---------------------INS Operator@@= @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2863 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@RedirectMismatchException[errorMessage] @TO@ Assignment@@ex=new RedirectMismatchException(errorMessage) @AT@ 2866 @LENGTH@ 43
------------------------INS New@@new @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2866 @LENGTH@ 3
------------------------INS SimpleType@@RedirectMismatchException @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2870 @LENGTH@ 25
------------------------INS SimpleName@@errorMessage @TO@ ClassInstanceCreation@@RedirectMismatchException[errorMessage] @AT@ 2896 @LENGTH@ 12
------UPD Block@@ThenBody:{  ex=new InvalidGrantException(errorMessage);} @TO@ ElseBody:{  ex=new InvalidGrantException(errorMessage);} @AT@ 2749 @LENGTH@ 54


UPD ReturnStatement@@CastExpression:(int)(size - o.size) @TO@ ConditionalExpression:(size < o.size) ? -1 : ((size > o.size) ? 1 : 0) @AT@ 4716 @LENGTH@ 28
---DEL CastExpression@@(int)(size - o.size) @AT@ 4723 @LENGTH@ 20
------DEL PrimitiveType@@int @AT@ 4724 @LENGTH@ 3
------DEL ParenthesizedExpression@@(size - o.size) @AT@ 4728 @LENGTH@ 15
---INS ConditionalExpression@@(size < o.size) ? -1 : ((size > o.size) ? 1 : 0) @TO@ ReturnStatement@@CastExpression:(int)(size - o.size) @AT@ 4730 @LENGTH@ 48
------INS ParenthesizedExpression@@(size < o.size) @TO@ ConditionalExpression@@(size < o.size) ? -1 : ((size > o.size) ? 1 : 0) @AT@ 4730 @LENGTH@ 15
---------MOV InfixExpression@@size - o.size @TO@ ParenthesizedExpression@@(size < o.size) @AT@ 4729 @LENGTH@ 13
------------UPD Operator@@- @TO@ < @AT@ 4733 @LENGTH@ 1
------INS PrefixExpression@@-1 @TO@ ConditionalExpression@@(size < o.size) ? -1 : ((size > o.size) ? 1 : 0) @AT@ 4748 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4748 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4749 @LENGTH@ 1
------INS ParenthesizedExpression@@((size > o.size) ? 1 : 0) @TO@ ConditionalExpression@@(size < o.size) ? -1 : ((size > o.size) ? 1 : 0) @AT@ 4753 @LENGTH@ 25
---------INS ConditionalExpression@@(size > o.size) ? 1 : 0 @TO@ ParenthesizedExpression@@((size > o.size) ? 1 : 0) @AT@ 4754 @LENGTH@ 23
------------INS ParenthesizedExpression@@(size > o.size) @TO@ ConditionalExpression@@(size > o.size) ? 1 : 0 @AT@ 4754 @LENGTH@ 15
---------------INS InfixExpression@@size > o.size @TO@ ParenthesizedExpression@@(size > o.size) @AT@ 4755 @LENGTH@ 13
------------------INS SimpleName@@size @TO@ InfixExpression@@size > o.size @AT@ 4755 @LENGTH@ 4
------------------INS Operator@@> @TO@ InfixExpression@@size > o.size @AT@ 4759 @LENGTH@ 1
------------------INS QualifiedName@@o.size @TO@ InfixExpression@@size > o.size @AT@ 4762 @LENGTH@ 6
---------------------INS SimpleName@@o @TO@ QualifiedName@@o.size @AT@ 4762 @LENGTH@ 1
---------------------INS SimpleName@@size @TO@ QualifiedName@@o.size @AT@ 4764 @LENGTH@ 4
------------INS NumberLiteral@@1 @TO@ ConditionalExpression@@(size > o.size) ? 1 : 0 @AT@ 4772 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ ConditionalExpression@@(size > o.size) ? 1 : 0 @AT@ 4776 @LENGTH@ 1


UPD FieldDeclaration@@SimpleAttributeDefinition, [CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build()] @TO@ SimpleAttributeDefinition, [CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 3087 @LENGTH@ 190
---UPD VariableDeclarationFragment@@CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3113 @LENGTH@ 163
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3121 @LENGTH@ 155
---------UPD MethodInvocation@@MethodName:setRestartJVM:[] @TO@ MethodName:setFlags:[Flag.RESTART_RESOURCE_SERVICES] @AT@ 3121 @LENGTH@ 134
------------INS QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @TO@ MethodInvocation@@MethodName:setRestartJVM:[] @AT@ 3311 @LENGTH@ 30
---------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 3311 @LENGTH@ 4
---------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 3316 @LENGTH@ 25


UPD SwitchStatement@@switch (newState) {case SUSPENDED:case LOST:{    this.state=null;    clear();    offerOperation(new EventOperation(this,GroupListener.GroupEvent.DISCONNECTED));    break;  }case CONNECTED:case RECONNECTED:{  offerOperation(new UpdateOperation<T>(this,state));  offerOperation(new RefreshOperation(this,RefreshMode.FORCE_GET_DATA_AND_STAT));  offerOperation(new EventOperation(this,GroupListener.GroupEvent.CONNECTED));  break;}} @TO@ switch (newState) {case SUSPENDED:case LOST:{    clear();    offerOperation(new EventOperation(this,GroupListener.GroupEvent.DISCONNECTED));    break;  }case CONNECTED:case RECONNECTED:{  offerOperation(new UpdateOperation<T>(this,state));  offerOperation(new RefreshOperation(this,RefreshMode.FORCE_GET_DATA_AND_STAT));  offerOperation(new EventOperation(this,GroupListener.GroupEvent.CONNECTED));  break;}} @AT@ 15395 @LENGTH@ 634
---DEL ExpressionStatement@@Assignment:this.state=null @AT@ 15484 @LENGTH@ 18
------DEL Assignment@@this.state=null @AT@ 15484 @LENGTH@ 17
---------DEL FieldAccess@@this.state @AT@ 15484 @LENGTH@ 10
------------DEL ThisExpression@@this @AT@ 15484 @LENGTH@ 4
------------DEL SimpleName@@state @AT@ 15489 @LENGTH@ 5
---------DEL Operator@@= @AT@ 15494 @LENGTH@ 1
---------DEL NullLiteral@@null @AT@ 15497 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:refRegistry=refRegistry.newInstance() @TO@ Assignment:refRegistry=WSRefRegistry.newInstance() @AT@ 11661 @LENGTH@ 40
---UPD Assignment@@refRegistry=refRegistry.newInstance() @TO@ refRegistry=WSRefRegistry.newInstance() @AT@ 11661 @LENGTH@ 39
------UPD MethodInvocation@@refRegistry.newInstance() @TO@ WSRefRegistry.newInstance() @AT@ 11675 @LENGTH@ 25
---------UPD SimpleName@@Name:refRegistry @TO@ Name:WSRefRegistry @AT@ 11675 @LENGTH@ 11


UPD IfStatement@@if (configuration.getCasheName() != null) {  cache=defaultCacheManager.getCache(configuration.getCasheName());} else {  cache=defaultCacheManager.getCache();} @TO@ if (configuration.getCacheName() != null) {  cache=defaultCacheManager.getCache(configuration.getCacheName());} else {  cache=defaultCacheManager.getCache();} @AT@ 1993 @LENGTH@ 218
---UPD InfixExpression@@configuration.getCasheName() != null @TO@ configuration.getCacheName() != null @AT@ 1997 @LENGTH@ 36
------UPD MethodInvocation@@configuration.getCasheName() @TO@ configuration.getCacheName() @AT@ 1997 @LENGTH@ 28
---------UPD SimpleName@@MethodName:getCasheName:[] @TO@ MethodName:getCacheName:[] @AT@ 2011 @LENGTH@ 14
---UPD Block@@ThenBody:{  cache=defaultCacheManager.getCache(configuration.getCasheName());} @TO@ ThenBody:{  cache=defaultCacheManager.getCache(configuration.getCacheName());} @AT@ 2035 @LENGTH@ 99
------UPD ExpressionStatement@@Assignment:cache=defaultCacheManager.getCache(configuration.getCasheName()) @TO@ Assignment:cache=defaultCacheManager.getCache(configuration.getCacheName()) @AT@ 2053 @LENGTH@ 67
---------UPD Assignment@@cache=defaultCacheManager.getCache(configuration.getCasheName()) @TO@ cache=defaultCacheManager.getCache(configuration.getCacheName()) @AT@ 2053 @LENGTH@ 66
------------UPD MethodInvocation@@defaultCacheManager.getCache(configuration.getCasheName()) @TO@ defaultCacheManager.getCache(configuration.getCacheName()) @AT@ 2061 @LENGTH@ 58
---------------UPD SimpleName@@MethodName:getCache:[configuration.getCasheName()] @TO@ MethodName:getCache:[configuration.getCacheName()] @AT@ 2081 @LENGTH@ 38
------------------UPD MethodInvocation@@configuration.getCasheName() @TO@ configuration.getCacheName() @AT@ 2090 @LENGTH@ 28
---------------------UPD SimpleName@@MethodName:getCasheName:[] @TO@ MethodName:getCacheName:[] @AT@ 2104 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:Assert.assertNotNull(jspConfig.getJSPServletInfo()) @TO@ MethodInvocation:Assert.assertNotNull(jspConfig.createJSPServletInfo()) @AT@ 5711 @LENGTH@ 52
---UPD MethodInvocation@@Assert.assertNotNull(jspConfig.getJSPServletInfo()) @TO@ Assert.assertNotNull(jspConfig.createJSPServletInfo()) @AT@ 5711 @LENGTH@ 51
------UPD SimpleName@@MethodName:assertNotNull:[jspConfig.getJSPServletInfo()] @TO@ MethodName:assertNotNull:[jspConfig.createJSPServletInfo()] @AT@ 5718 @LENGTH@ 44
---------UPD MethodInvocation@@jspConfig.getJSPServletInfo() @TO@ jspConfig.createJSPServletInfo() @AT@ 5732 @LENGTH@ 29
------------UPD SimpleName@@MethodName:getJSPServletInfo:[] @TO@ MethodName:createJSPServletInfo:[] @AT@ 5742 @LENGTH@ 19


INS MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @TO@ TypeDeclaration@@[public]ProfileOverlayImpl, [Profile] @AT@ 9104 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 9104 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 9111 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 9111 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 9116 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNames @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 9124 @LENGTH@ 25
---INS ReturnStatement@@MethodInvocation:Profiles.getConfigurationFileNames(getInheritedProfiles()) @TO@ MethodDeclaration@@public, List<String>, MethodName:getConfigurationFileNames,  @AT@ 9162 @LENGTH@ 66
------INS MethodInvocation@@Profiles.getConfigurationFileNames(getInheritedProfiles()) @TO@ ReturnStatement@@MethodInvocation:Profiles.getConfigurationFileNames(getInheritedProfiles()) @AT@ 9169 @LENGTH@ 58
---------INS SimpleName@@Name:Profiles @TO@ MethodInvocation@@Profiles.getConfigurationFileNames(getInheritedProfiles()) @AT@ 9169 @LENGTH@ 8
---------INS SimpleName@@MethodName:getConfigurationFileNames:[getInheritedProfiles()] @TO@ MethodInvocation@@Profiles.getConfigurationFileNames(getInheritedProfiles()) @AT@ 9178 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:getInheritedProfiles:[] @TO@ SimpleName@@MethodName:getConfigurationFileNames:[getInheritedProfiles()] @AT@ 9204 @LENGTH@ 22


DEL ExpressionStatement@@MethodInvocation:pctx.setHasNonPartCols(opWalkerCtx.getHasNonPartCols()) @AT@ 3767 @LENGTH@ 56
---DEL MethodInvocation@@pctx.setHasNonPartCols(opWalkerCtx.getHasNonPartCols()) @AT@ 3767 @LENGTH@ 55
------DEL SimpleName@@Name:pctx @AT@ 3767 @LENGTH@ 4
------DEL SimpleName@@MethodName:setHasNonPartCols:[opWalkerCtx.getHasNonPartCols()] @AT@ 3772 @LENGTH@ 50
---------DEL MethodInvocation@@opWalkerCtx.getHasNonPartCols() @AT@ 3790 @LENGTH@ 31
------------DEL SimpleName@@Name:opWalkerCtx @AT@ 3790 @LENGTH@ 11
------------DEL SimpleName@@MethodName:getHasNonPartCols:[] @AT@ 3802 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:d.setResourceManager(new FileResourceManager(Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))) @TO@ MethodInvocation:d.setResourceManager(new FileResourceManager(new File(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))) @AT@ 6173 @LENGTH@ 115
---UPD MethodInvocation@@d.setResourceManager(new FileResourceManager(Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))) @TO@ d.setResourceManager(new FileResourceManager(new File(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))) @AT@ 6173 @LENGTH@ 114
------UPD SimpleName@@MethodName:setResourceManager:[new FileResourceManager(Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))] @TO@ MethodName:setResourceManager:[new FileResourceManager(new File(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()))] @AT@ 6175 @LENGTH@ 112
---------UPD ClassInstanceCreation@@FileResourceManager[Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath())] @TO@ FileResourceManager[new File(webDeploymentBuilder.getDocumentRoot().getAbsolutePath())] @AT@ 6194 @LENGTH@ 92
------------INS ClassInstanceCreation@@File[webDeploymentBuilder.getDocumentRoot().getAbsolutePath()] @TO@ ClassInstanceCreation@@FileResourceManager[Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath())] @AT@ 6211 @LENGTH@ 66
---------------INS New@@new @TO@ ClassInstanceCreation@@File[webDeploymentBuilder.getDocumentRoot().getAbsolutePath()] @AT@ 6211 @LENGTH@ 3
---------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[webDeploymentBuilder.getDocumentRoot().getAbsolutePath()] @AT@ 6215 @LENGTH@ 4
---------------INS MethodInvocation@@webDeploymentBuilder.getDocumentRoot().getAbsolutePath() @TO@ ClassInstanceCreation@@File[webDeploymentBuilder.getDocumentRoot().getAbsolutePath()] @AT@ 6220 @LENGTH@ 56
------------------MOV MethodInvocation@@MethodName:getDocumentRoot:[] @TO@ MethodInvocation@@webDeploymentBuilder.getDocumentRoot().getAbsolutePath() @AT@ 6228 @LENGTH@ 38
------------------MOV SimpleName@@Name:webDeploymentBuilder @TO@ MethodInvocation@@webDeploymentBuilder.getDocumentRoot().getAbsolutePath() @AT@ 6228 @LENGTH@ 20
------------------MOV SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@webDeploymentBuilder.getDocumentRoot().getAbsolutePath() @AT@ 6267 @LENGTH@ 17
------------DEL MethodInvocation@@Paths.get(webDeploymentBuilder.getDocumentRoot().getAbsolutePath()) @AT@ 6218 @LENGTH@ 67
---------------DEL SimpleName@@Name:Paths @AT@ 6218 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:get:[webDeploymentBuilder.getDocumentRoot().getAbsolutePath()] @AT@ 6224 @LENGTH@ 61
------------------DEL MethodInvocation@@webDeploymentBuilder.getDocumentRoot().getAbsolutePath() @AT@ 6228 @LENGTH@ 56


UPD IfStatement@@if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  if (!name.endsWith("-tmp")) {    localBranches.put(name,ref);    gitVersions.add(name);  }} @TO@ if (ref.getName().startsWith("refs/remotes/" + remote + "/")) {  String name=ref.getName().substring(("refs/remotes/" + remote + "/").length());  remoteBranches.put(name,ref);  gitVersions.add(name);} else if (ref.getName().startsWith("refs/heads/")) {  String name=ref.getName().substring(("refs/heads/").length());  localBranches.put(name,ref);  gitVersions.add(name);} @AT@ 43510 @LENGTH@ 322


UPD ExpressionStatement@@MethodInvocation:addJndiNameToControl(jndiName,resourceName,hqServer,context) @TO@ MethodInvocation:addJndiNameToControl(jndiName,resourceName,hqServer,context,operation) @AT@ 4289 @LENGTH@ 64
---UPD MethodInvocation@@addJndiNameToControl(jndiName,resourceName,hqServer,context) @TO@ addJndiNameToControl(jndiName,resourceName,hqServer,context,operation) @AT@ 4289 @LENGTH@ 63
------UPD SimpleName@@MethodName:addJndiNameToControl:[jndiName, resourceName, hqServer, context] @TO@ MethodName:addJndiNameToControl:[jndiName, resourceName, hqServer, context, operation] @AT@ 4289 @LENGTH@ 63
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:addJndiNameToControl:[jndiName, resourceName, hqServer, context] @AT@ 4353 @LENGTH@ 9


DEL VariableDeclarationStatement@@byte[] bytes=recordText.getBytes(); @AT@ 4554 @LENGTH@ 37
---DEL ArrayType@@byte[] @AT@ 4554 @LENGTH@ 6
------DEL PrimitiveType@@byte @AT@ 4554 @LENGTH@ 4
---DEL VariableDeclarationFragment@@bytes=recordText.getBytes() @AT@ 4561 @LENGTH@ 29
------DEL SimpleName@@bytes @AT@ 4561 @LENGTH@ 5
------DEL MethodInvocation@@recordText.getBytes() @AT@ 4569 @LENGTH@ 21
---------DEL SimpleName@@Name:recordText @AT@ 4569 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getBytes:[] @AT@ 4580 @LENGTH@ 10


INS FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @TO@ TypeDeclaration@@[public]CreateEnsembleOptions, ContainerOptions @AT@ 1258 @LENGTH@ 69
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1258 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1265 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1272 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1278 @LENGTH@ 6
---INS VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @TO@ FieldDeclaration@@public, static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1285 @LENGTH@ 41
------INS SimpleName@@ZOOKEEPER_PASSWORD @TO@ VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @AT@ 1285 @LENGTH@ 18
------INS StringLiteral@@"zookeeper.password" @TO@ VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @AT@ 1306 @LENGTH@ 20


INS VariableDeclarationStatement@@final Set<String> aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET; @TO@ MethodDeclaration@@Collection<ServiceController<?>>, MethodName:installRuntimeServices, OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, OperationFailedException,  @AT@ 3861 @LENGTH@ 125
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final Set<String> aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET; @AT@ 3861 @LENGTH@ 5
---INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@final Set<String> aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET; @AT@ 3867 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 3867 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 3871 @LENGTH@ 6
---INS VariableDeclarationFragment@@aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @TO@ VariableDeclarationStatement@@final Set<String> aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET; @AT@ 3879 @LENGTH@ 106
------INS SimpleName@@aliases @TO@ VariableDeclarationFragment@@aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @AT@ 3879 @LENGTH@ 7
------INS ConditionalExpression@@unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @TO@ VariableDeclarationFragment@@aliases=unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @AT@ 3889 @LENGTH@ 96
---------INS InfixExpression@@unwrappedAliasValues != null @TO@ ConditionalExpression@@unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @AT@ 3889 @LENGTH@ 28
------------INS SimpleName@@unwrappedAliasValues @TO@ InfixExpression@@unwrappedAliasValues != null @AT@ 3889 @LENGTH@ 20
------------INS Operator@@!= @TO@ InfixExpression@@unwrappedAliasValues != null @AT@ 3909 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@unwrappedAliasValues != null @AT@ 3913 @LENGTH@ 4
---------INS ClassInstanceCreation@@HashSet<String>[unwrappedAliasValues] @TO@ ConditionalExpression@@unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @AT@ 3920 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[unwrappedAliasValues] @AT@ 3920 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[unwrappedAliasValues] @AT@ 3924 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 3924 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 3932 @LENGTH@ 6
------------INS SimpleName@@unwrappedAliasValues @TO@ ClassInstanceCreation@@HashSet<String>[unwrappedAliasValues] @AT@ 3940 @LENGTH@ 20
---------INS QualifiedName@@Collections.EMPTY_SET @TO@ ConditionalExpression@@unwrappedAliasValues != null ? new HashSet<String>(unwrappedAliasValues) : Collections.EMPTY_SET @AT@ 3964 @LENGTH@ 21
------------INS SimpleName@@Collections @TO@ QualifiedName@@Collections.EMPTY_SET @AT@ 3964 @LENGTH@ 11
------------INS SimpleName@@EMPTY_SET @TO@ QualifiedName@@Collections.EMPTY_SET @AT@ 3976 @LENGTH@ 9


UPD FieldDeclaration@@protected, final, Logger, [LOG=LoggerFactory.getLogger(this.getClass())] @TO@ protected, final, Logger, [log=LoggerFactory.getLogger(this.getClass())] @AT@ 1720 @LENGTH@ 70
---UPD VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(this.getClass()) @TO@ log=LoggerFactory.getLogger(this.getClass()) @AT@ 1743 @LENGTH@ 46
------UPD SimpleName@@LOG @TO@ log @AT@ 1743 @LENGTH@ 3


INS IfStatement@@if (!metadata.getPathType().equals(PathType.PROPERTY)) {  return super.getKeyForPath(expr,metadata);} @TO@ MethodDeclaration@@protected, String, MethodName:getKeyForPath, Path<?> expr, PathMetadata<?> metadata,  @AT@ 2352 @LENGTH@ 107
---INS PrefixExpression@@!metadata.getPathType().equals(PathType.PROPERTY) @TO@ IfStatement@@if (!metadata.getPathType().equals(PathType.PROPERTY)) {  return super.getKeyForPath(expr,metadata);} @AT@ 2356 @LENGTH@ 49
------INS Operator@@! @TO@ PrefixExpression@@!metadata.getPathType().equals(PathType.PROPERTY) @AT@ 2356 @LENGTH@ 1
------INS MethodInvocation@@metadata.getPathType().equals(PathType.PROPERTY) @TO@ PrefixExpression@@!metadata.getPathType().equals(PathType.PROPERTY) @AT@ 2357 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:getPathType:[] @TO@ MethodInvocation@@metadata.getPathType().equals(PathType.PROPERTY) @AT@ 2357 @LENGTH@ 22
---------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.getPathType().equals(PathType.PROPERTY) @AT@ 2357 @LENGTH@ 8
---------INS SimpleName@@MethodName:equals:[PathType.PROPERTY] @TO@ MethodInvocation@@metadata.getPathType().equals(PathType.PROPERTY) @AT@ 2380 @LENGTH@ 25
------------INS QualifiedName@@PathType.PROPERTY @TO@ SimpleName@@MethodName:equals:[PathType.PROPERTY] @AT@ 2387 @LENGTH@ 17
---------------INS SimpleName@@PathType @TO@ QualifiedName@@PathType.PROPERTY @AT@ 2387 @LENGTH@ 8
---------------INS SimpleName@@PROPERTY @TO@ QualifiedName@@PathType.PROPERTY @AT@ 2396 @LENGTH@ 8
---INS Block@@ThenBody:{  return super.getKeyForPath(expr,metadata);} @TO@ IfStatement@@if (!metadata.getPathType().equals(PathType.PROPERTY)) {  return super.getKeyForPath(expr,metadata);} @AT@ 2407 @LENGTH@ 52
------INS ReturnStatement@@SuperMethodInvocation:super.getKeyForPath(expr,metadata) @TO@ Block@@ThenBody:{  return super.getKeyForPath(expr,metadata);} @AT@ 2412 @LENGTH@ 43
---------INS SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @TO@ ReturnStatement@@SuperMethodInvocation:super.getKeyForPath(expr,metadata) @AT@ 2419 @LENGTH@ 35
------------INS SimpleName@@MethodName:getKeyForPath:[expr, metadata] @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 2425 @LENGTH@ 13
------------INS SimpleName@@expr @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 2439 @LENGTH@ 4
------------INS SimpleName@@metadata @TO@ SuperMethodInvocation@@super.getKeyForPath(expr,metadata) @AT@ 2445 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:iterator=IteratorUtils.arrayIterator(null) @TO@ Assignment:iterator=IteratorUtils.arrayIterator((Object[])null) @AT@ 5845 @LENGTH@ 45
---UPD Assignment@@iterator=IteratorUtils.arrayIterator(null) @TO@ iterator=IteratorUtils.arrayIterator((Object[])null) @AT@ 5845 @LENGTH@ 44
------UPD MethodInvocation@@IteratorUtils.arrayIterator(null) @TO@ IteratorUtils.arrayIterator((Object[])null) @AT@ 5856 @LENGTH@ 33
---------UPD SimpleName@@MethodName:arrayIterator:[null] @TO@ MethodName:arrayIterator:[(Object[])null] @AT@ 5870 @LENGTH@ 19
------------INS CastExpression@@(Object[])null @TO@ SimpleName@@MethodName:arrayIterator:[null] @AT@ 5884 @LENGTH@ 15
---------------INS ArrayType@@Object[] @TO@ CastExpression@@(Object[])null @AT@ 5885 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5885 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ CastExpression@@(Object[])null @AT@ 5895 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 5884 @LENGTH@ 4


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=requestFactory.createStoredTokenRequest(tokenRequest); @TO@ OAuth2Request storedOAuth2Request=requestFactory.createOAuth2Request(tokenRequest); @AT@ 2915 @LENGTH@ 90
---UPD VariableDeclarationFragment@@storedOAuth2Request=requestFactory.createStoredTokenRequest(tokenRequest) @TO@ storedOAuth2Request=requestFactory.createOAuth2Request(tokenRequest) @AT@ 2929 @LENGTH@ 75
------UPD MethodInvocation@@requestFactory.createStoredTokenRequest(tokenRequest) @TO@ requestFactory.createOAuth2Request(tokenRequest) @AT@ 2951 @LENGTH@ 53
---------UPD SimpleName@@MethodName:createStoredTokenRequest:[tokenRequest] @TO@ MethodName:createOAuth2Request:[tokenRequest] @AT@ 2966 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child><child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>") @TO@ MethodInvocation:template.sendBody("direct:start","<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>") @AT@ 3547 @LENGTH@ 278
---UPD MethodInvocation@@template.sendBody("direct:start","<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child><child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>") @TO@ template.sendBody("direct:start","<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>") @AT@ 3547 @LENGTH@ 277
------UPD SimpleName@@MethodName:sendBody:["direct:start", "<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child><child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>"] @TO@ MethodName:sendBody:["direct:start", "<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>"] @AT@ 3556 @LENGTH@ 268
---------DEL StringLiteral@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child><child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @AT@ 3593 @LENGTH@ 230
---------INS InfixExpression@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child><child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>"] @AT@ 3605 @LENGTH@ 247
------------INS StringLiteral@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" @TO@ InfixExpression@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @AT@ 3605 @LENGTH@ 104
------------INS Operator@@+ @TO@ InfixExpression@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @AT@ 3709 @LENGTH@ 1
------------INS StringLiteral@@"<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @TO@ InfixExpression@@"<parent><child name='child1'><grandchild name='grandchild1'/> <grandchild name='grandchild2'/></child>" + "<child name='child2'><grandchild name='grandchild1'></grandchild><grandchild name='grandchild2'></grandchild></child></parent>" @AT@ 3724 @LENGTH@ 128


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EsbProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]EsbProfileTest, FabricTestSupport @AT@ 613 @LENGTH@ 658
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]EsbProfileTest, FabricTestSupport @AT@ 706 @LENGTH@ 49


UPD ExpressionStatement@@Assignment:result=(Control)constructor.newInstance(new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}) @TO@ Assignment:result=(Control)constructor.newInstance(pageSize,actualCookie,critical) @AT@ 5733 @LENGTH@ 130
---UPD Assignment@@result=(Control)constructor.newInstance(new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}) @TO@ result=(Control)constructor.newInstance(pageSize,actualCookie,critical) @AT@ 5733 @LENGTH@ 129
------UPD CastExpression@@(Control)constructor.newInstance(new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}) @TO@ (Control)constructor.newInstance(pageSize,actualCookie,critical) @AT@ 5742 @LENGTH@ 120
---------UPD MethodInvocation@@constructor.newInstance(new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}) @TO@ constructor.newInstance(pageSize,actualCookie,critical) @AT@ 5752 @LENGTH@ 110
------------UPD SimpleName@@MethodName:newInstance:[new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}] @TO@ MethodName:newInstance:[pageSize, actualCookie, critical] @AT@ 5764 @LENGTH@ 98
---------------DEL ArrayCreation@@new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)} @AT@ 5776 @LENGTH@ 85
------------------DEL ArrayType@@Object[] @AT@ 5780 @LENGTH@ 8
---------------------DEL SimpleType@@Object @AT@ 5780 @LENGTH@ 6
------------------DEL ArrayInitializer@@{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)} @AT@ 5789 @LENGTH@ 72
---------------------DEL ClassInstanceCreation@@Integer[pageSize] @AT@ 5791 @LENGTH@ 21
------------------------DEL New@@new @AT@ 5791 @LENGTH@ 3
------------------------DEL SimpleType@@Integer @AT@ 5795 @LENGTH@ 7
------------------------DEL SimpleName@@pageSize @AT@ 5803 @LENGTH@ 8
---------------------DEL SimpleName@@actualCookie @AT@ 5814 @LENGTH@ 12
---------------------DEL MethodInvocation@@Boolean.valueOf(critical) @AT@ 5834 @LENGTH@ 25
------------------------DEL SimpleName@@Name:Boolean @AT@ 5834 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:valueOf:[critical] @AT@ 5842 @LENGTH@ 17
---------------INS SimpleName@@pageSize @TO@ SimpleName@@MethodName:newInstance:[new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}] @AT@ 5776 @LENGTH@ 8
---------------INS SimpleName@@actualCookie @TO@ SimpleName@@MethodName:newInstance:[new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}] @AT@ 5786 @LENGTH@ 12
---------------MOV SimpleName@@critical @TO@ SimpleName@@MethodName:newInstance:[new Object[]{new Integer(pageSize),actualCookie,Boolean.valueOf(critical)}] @AT@ 5850 @LENGTH@ 8


UPD VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @TO@ final PatchInfo info=service.getPatchInfo(); @AT@ 2088 @LENGTH@ 42
---UPD VariableDeclarationFragment@@info=service.getValue() @TO@ info=service.getPatchInfo() @AT@ 2104 @LENGTH@ 25
------UPD MethodInvocation@@service.getValue() @TO@ service.getPatchInfo() @AT@ 2111 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getValue:[] @TO@ MethodName:getPatchInfo:[] @AT@ 2119 @LENGTH@ 10


UPD Block@@ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean twoStep=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      twoStep=true;    }    allHosts.addAll(stepRouting.getHosts());  }  routing=new OperationRouting(allHosts);} @TO@ ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean fwdToAllHosts=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();    }    allHosts.addAll(stepRouting.getHosts());  }  if (fwdToAllHosts) {    routing=new OperationRouting(true);  } else {    routing=new OperationRouting(allHosts);  }} @AT@ 4391 @LENGTH@ 1165
---UPD VariableDeclarationStatement@@boolean twoStep=false; @TO@ boolean fwdToAllHosts=false; @AT@ 4471 @LENGTH@ 24
------UPD VariableDeclarationFragment@@twoStep=false @TO@ fwdToAllHosts=false @AT@ 4479 @LENGTH@ 15
---------UPD SimpleName@@twoStep @TO@ fwdToAllHosts @AT@ 4479 @LENGTH@ 7
---UPD EnhancedForStatement@@for (ModelNode step : operation.get(STEPS).asList()) {  ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));  OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);  if (stepRouting.isTwoStep()) {    twoStep=true;  }  allHosts.addAll(stepRouting.getHosts());} @TO@ for (ModelNode step : operation.get(STEPS).asList()) {  ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));  OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);  if (stepRouting.isTwoStep()) {    fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();  }  allHosts.addAll(stepRouting.getHosts());} @AT@ 4512 @LENGTH@ 501
------UPD IfStatement@@if (stepRouting.isTwoStep()) {  twoStep=true;} @TO@ if (stepRouting.isTwoStep()) {  fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();} @AT@ 4842 @LENGTH@ 92
---------UPD Block@@ThenBody:{  twoStep=true;} @TO@ ThenBody:{  fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty();} @AT@ 4871 @LENGTH@ 63
------------UPD ExpressionStatement@@Assignment:twoStep=true @TO@ Assignment:fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 4897 @LENGTH@ 15
---------------UPD Assignment@@twoStep=true @TO@ fwdToAllHosts=fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 4897 @LENGTH@ 14
------------------UPD SimpleName@@twoStep @TO@ fwdToAllHosts @AT@ 4897 @LENGTH@ 7
------------------DEL BooleanLiteral@@true @AT@ 4907 @LENGTH@ 4
------------------INS InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @TO@ Assignment@@twoStep=true @AT@ 5038 @LENGTH@ 49
---------------------INS SimpleName@@fwdToAllHosts @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5038 @LENGTH@ 13
---------------------INS Operator@@|| @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5051 @LENGTH@ 2
---------------------INS MethodInvocation@@stepRouting.getHosts().isEmpty() @TO@ InfixExpression@@fwdToAllHosts || stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 32
------------------------INS MethodInvocation@@MethodName:getHosts:[] @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 22
------------------------INS SimpleName@@Name:stepRouting @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5055 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@stepRouting.getHosts().isEmpty() @AT@ 5078 @LENGTH@ 9
---INS IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @TO@ Block@@ThenBody:{  Set<String> allHosts=new HashSet<String>();  boolean twoStep=false;  for (  ModelNode step : operation.get(STEPS).asList()) {    ImmutableManagementResourceRegistration stepRegistry=registry.getSubModel(PathAddress.pathAddress(step.get(OP_ADDR)));    OperationRouting stepRouting=determineRouting(step,localHostControllerInfo,stepRegistry);    if (stepRouting.isTwoStep()) {      twoStep=true;    }    allHosts.addAll(stepRouting.getHosts());  }  routing=new OperationRouting(allHosts);} @AT@ 5206 @LENGTH@ 183
------INS SimpleName@@fwdToAllHosts @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5210 @LENGTH@ 13
------INS Block@@ThenBody:{  routing=new OperationRouting(true);} @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5225 @LENGTH@ 77
---------INS ExpressionStatement@@Assignment:routing=new OperationRouting(true) @TO@ Block@@ThenBody:{  routing=new OperationRouting(true);} @AT@ 5247 @LENGTH@ 37
------------INS Assignment@@routing=new OperationRouting(true) @TO@ ExpressionStatement@@Assignment:routing=new OperationRouting(true) @AT@ 5247 @LENGTH@ 36
---------------INS SimpleName@@routing @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5247 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5254 @LENGTH@ 1
---------------INS ClassInstanceCreation@@OperationRouting[true] @TO@ Assignment@@routing=new OperationRouting(true) @AT@ 5257 @LENGTH@ 26
------------------INS New@@new @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5257 @LENGTH@ 3
------------------INS SimpleType@@OperationRouting @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5261 @LENGTH@ 16
------------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@OperationRouting[true] @AT@ 5278 @LENGTH@ 4
------INS Block@@ElseBody:{  routing=new OperationRouting(allHosts);} @TO@ IfStatement@@if (fwdToAllHosts) {  routing=new OperationRouting(true);} else {  routing=new OperationRouting(allHosts);} @AT@ 5308 @LENGTH@ 81
---------MOV ExpressionStatement@@Assignment:routing=new OperationRouting(allHosts) @TO@ Block@@ElseBody:{  routing=new OperationRouting(allHosts);} @AT@ 5501 @LENGTH@ 41


UPD IfStatement@@if (aliasEntry == null) {  if (resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} else {  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @TO@ if (aliasEntry == null) {  if (resource != null && resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} else {  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @AT@ 20561 @LENGTH@ 688
---UPD Block@@ThenBody:{  if (resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} @TO@ ThenBody:{  if (resource != null && resource.hasChildren(childType)) {    set.addAll(resource.getChildrenNames(childType));  }} @AT@ 20585 @LENGTH@ 158
------UPD IfStatement@@if (resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @TO@ if (resource != null && resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @AT@ 20603 @LENGTH@ 126
---------INS InfixExpression@@resource != null && resource.hasChildren(childType) @TO@ IfStatement@@if (resource.hasChildren(childType)) {  set.addAll(resource.getChildrenNames(childType));} @AT@ 20607 @LENGTH@ 51
------------MOV MethodInvocation@@resource.hasChildren(childType) @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20607 @LENGTH@ 31
------------INS InfixExpression@@resource != null @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20607 @LENGTH@ 16
---------------INS SimpleName@@resource @TO@ InfixExpression@@resource != null @AT@ 20607 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@resource != null @AT@ 20615 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@resource != null @AT@ 20619 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@resource != null && resource.hasChildren(childType) @AT@ 20623 @LENGTH@ 2
---UPD Block@@ElseBody:{  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @TO@ ElseBody:{  PathAddress target=aliasEntry.convertToTargetAddress(addr.append(element));  PathAddress targetParent=target.subAddress(0,target.size() - 1);  Resource parentResource=context.readResourceFromRoot(targetParent);  if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {    set.add(element.getValue());  }} @AT@ 20749 @LENGTH@ 500
------UPD IfStatement@@if (parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @TO@ if (parentResource != null && parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @AT@ 21101 @LENGTH@ 134
---------INS InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @TO@ IfStatement@@if (parentResource.hasChildren(target.getLastElement().getKey())) {  set.add(element.getValue());} @AT@ 21125 @LENGTH@ 86
------------MOV MethodInvocation@@parentResource.hasChildren(target.getLastElement().getKey()) @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21105 @LENGTH@ 60
------------INS InfixExpression@@parentResource != null @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21125 @LENGTH@ 22
---------------INS SimpleName@@parentResource @TO@ InfixExpression@@parentResource != null @AT@ 21125 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@parentResource != null @AT@ 21139 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@parentResource != null @AT@ 21143 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@parentResource != null && parentResource.hasChildren(target.getLastElement().getKey()) @AT@ 21147 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:context.getResult() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 8703 @LENGTH@ 20
---INS MethodInvocation@@context.getResult() @TO@ ExpressionStatement@@MethodInvocation:context.getResult() @AT@ 8703 @LENGTH@ 19
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult() @AT@ 8703 @LENGTH@ 7
------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult() @AT@ 8711 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @TO@ TypeDeclaration@@[abstract, public]AbstractConnectionPipelineIntegrationTests, AbstractConnectionIntegrationTests @AT@ 3557 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3557 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3564 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalShaArrayError @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3569 @LENGTH@ 21
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalShaArrayError,  @AT@ 3597 @LENGTH@ 30
------INS SuperMethodInvocation@@super.testEvalShaArrayError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalShaArrayError() @AT@ 3597 @LENGTH@ 29
---------INS SimpleName@@MethodName:testEvalShaArrayError:[] @TO@ SuperMethodInvocation@@super.testEvalShaArrayError() @AT@ 3603 @LENGTH@ 21


UPD ReturnStatement@@StringLiteral:"redirect_uri_mismatch" @TO@ StringLiteral:"invalid_grant" @AT@ 414 @LENGTH@ 31
---UPD StringLiteral@@"redirect_uri_mismatch" @TO@ "invalid_grant" @AT@ 421 @LENGTH@ 23


UPD TypeDeclaration@@[@ContextConfiguration, public]MasterEndpointTest, AbstractJUnit4SpringContextTests @TO@ [@ContextConfiguration, @Ignore("[FABRIC-528] Fix fabric/fabric-camel tests"), public]MasterEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1369 @LENGTH@ 1838
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-528] Fix fabric/fabric-camel tests") @TO@ TypeDeclaration@@[@ContextConfiguration, public]MasterEndpointTest, AbstractJUnit4SpringContextTests @AT@ 1418 @LENGTH@ 53


UPD TryStatement@@try {  TextMessage message=(TextMessage)m;  Destination replyTo=m.getJMSReplyTo();  context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,message.getText());  System.out.println("sent reply");  if (m.getBooleanProperty("rollback")) {    mdbContext.setRollbackOnly();  }} catch (Exception e) {  e.printStackTrace();} @TO@ try {  if (m.getJMSRedelivered()) {    return;  }  TextMessage message=(TextMessage)m;  Destination replyTo=m.getJMSReplyTo();  System.out.println("got message " + message.getText());  System.out.println("replying to " + replyTo);  context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,message.getText());  System.out.println("sent reply");  if (m.getBooleanProperty("rollback")) {    mdbContext.setRollbackOnly();    System.out.println("set mdb as rollback only");  }} catch (Exception e) {  e.printStackTrace();} @AT@ 2468 @LENGTH@ 500
---INS IfStatement@@if (m.getJMSRedelivered()) {  return;} @TO@ TryStatement@@try {  TextMessage message=(TextMessage)m;  Destination replyTo=m.getJMSReplyTo();  context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,message.getText());  System.out.println("sent reply");  if (m.getBooleanProperty("rollback")) {    mdbContext.setRollbackOnly();  }} catch (Exception e) {  e.printStackTrace();} @AT@ 2528 @LENGTH@ 66
------INS MethodInvocation@@m.getJMSRedelivered() @TO@ IfStatement@@if (m.getJMSRedelivered()) {  return;} @AT@ 2532 @LENGTH@ 21
---------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.getJMSRedelivered() @AT@ 2532 @LENGTH@ 1
---------INS SimpleName@@MethodName:getJMSRedelivered:[] @TO@ MethodInvocation@@m.getJMSRedelivered() @AT@ 2534 @LENGTH@ 19
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (m.getJMSRedelivered()) {  return;} @AT@ 2555 @LENGTH@ 39
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2573 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:System.out.println("got message " + message.getText()) @TO@ TryStatement@@try {  TextMessage message=(TextMessage)m;  Destination replyTo=m.getJMSReplyTo();  context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,message.getText());  System.out.println("sent reply");  if (m.getBooleanProperty("rollback")) {    mdbContext.setRollbackOnly();  }} catch (Exception e) {  e.printStackTrace();} @AT@ 2712 @LENGTH@ 55
------INS MethodInvocation@@System.out.println("got message " + message.getText()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("got message " + message.getText()) @AT@ 2712 @LENGTH@ 54
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("got message " + message.getText()) @AT@ 2712 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["got message " + message.getText()] @TO@ MethodInvocation@@System.out.println("got message " + message.getText()) @AT@ 2723 @LENGTH@ 43
------------INS InfixExpression@@"got message " + message.getText() @TO@ SimpleName@@MethodName:println:["got message " + message.getText()] @AT@ 2731 @LENGTH@ 34
---------------INS StringLiteral@@"got message " @TO@ InfixExpression@@"got message " + message.getText() @AT@ 2731 @LENGTH@ 14
---------------INS Operator@@+ @TO@ InfixExpression@@"got message " + message.getText() @AT@ 2745 @LENGTH@ 1
---------------INS MethodInvocation@@message.getText() @TO@ InfixExpression@@"got message " + message.getText() @AT@ 2748 @LENGTH@ 17
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getText() @AT@ 2748 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getText:[] @TO@ MethodInvocation@@message.getText() @AT@ 2756 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:System.out.println("replying to " + replyTo) @TO@ TryStatement@@try {  TextMessage message=(TextMessage)m;  Destination replyTo=m.getJMSReplyTo();  context.createProducer().setJMSCorrelationID(message.getJMSMessageID()).send(replyTo,message.getText());  System.out.println("sent reply");  if (m.getBooleanProperty("rollback")) {    mdbContext.setRollbackOnly();  }} catch (Exception e) {  e.printStackTrace();} @AT@ 2780 @LENGTH@ 45
------INS MethodInvocation@@System.out.println("replying to " + replyTo) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("replying to " + replyTo) @AT@ 2780 @LENGTH@ 44
---------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("replying to " + replyTo) @AT@ 2780 @LENGTH@ 10
---------INS SimpleName@@MethodName:println:["replying to " + replyTo] @TO@ MethodInvocation@@System.out.println("replying to " + replyTo) @AT@ 2791 @LENGTH@ 33
------------INS InfixExpression@@"replying to " + replyTo @TO@ SimpleName@@MethodName:println:["replying to " + replyTo] @AT@ 2799 @LENGTH@ 24
---------------INS StringLiteral@@"replying to " @TO@ InfixExpression@@"replying to " + replyTo @AT@ 2799 @LENGTH@ 14
---------------INS Operator@@+ @TO@ InfixExpression@@"replying to " + replyTo @AT@ 2813 @LENGTH@ 1
---------------INS SimpleName@@replyTo @TO@ InfixExpression@@"replying to " + replyTo @AT@ 2816 @LENGTH@ 7
---UPD IfStatement@@if (m.getBooleanProperty("rollback")) {  mdbContext.setRollbackOnly();} @TO@ if (m.getBooleanProperty("rollback")) {  mdbContext.setRollbackOnly();  System.out.println("set mdb as rollback only");} @AT@ 2794 @LENGTH@ 99
------UPD Block@@ThenBody:{  mdbContext.setRollbackOnly();} @TO@ ThenBody:{  mdbContext.setRollbackOnly();  System.out.println("set mdb as rollback only");} @AT@ 2832 @LENGTH@ 61
---------INS ExpressionStatement@@MethodInvocation:System.out.println("set mdb as rollback only") @TO@ Block@@ThenBody:{  mdbContext.setRollbackOnly();} @AT@ 3144 @LENGTH@ 47
------------INS MethodInvocation@@System.out.println("set mdb as rollback only") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("set mdb as rollback only") @AT@ 3144 @LENGTH@ 46
---------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("set mdb as rollback only") @AT@ 3144 @LENGTH@ 10
---------------INS SimpleName@@MethodName:println:["set mdb as rollback only"] @TO@ MethodInvocation@@System.out.println("set mdb as rollback only") @AT@ 3155 @LENGTH@ 35
------------------INS StringLiteral@@"set mdb as rollback only" @TO@ SimpleName@@MethodName:println:["set mdb as rollback only"] @AT@ 3163 @LENGTH@ 26


UPD ReturnStatement@@MethodInvocation:current.getCumulativeID() @TO@ SimpleName:cumulative @AT@ 1702 @LENGTH@ 33
---DEL MethodInvocation@@current.getCumulativeID() @AT@ 1709 @LENGTH@ 25
------DEL SimpleName@@Name:current @AT@ 1709 @LENGTH@ 7
------DEL SimpleName@@MethodName:getCumulativeID:[] @AT@ 1717 @LENGTH@ 17
---INS SimpleName@@cumulative @TO@ ReturnStatement@@MethodInvocation:current.getCumulativeID() @AT@ 1709 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testWatch, Exception,  @AT@ 3334 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 3334 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 3334 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 3341 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 3347 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:parserContext.getReaderContext().error("The '<listeners/>' element may not appear more than once in a single <job/>.",element) @TO@ MethodInvocation:parserContext.getReaderContext().error("The '<listeners/>' element may not appear more than once in a single " + element.getLocalName(),element) @AT@ 3769 @LENGTH@ 134
---UPD MethodInvocation@@parserContext.getReaderContext().error("The '<listeners/>' element may not appear more than once in a single <job/>.",element) @TO@ parserContext.getReaderContext().error("The '<listeners/>' element may not appear more than once in a single " + element.getLocalName(),element) @AT@ 3769 @LENGTH@ 133
------UPD SimpleName@@MethodName:error:["The '<listeners/>' element may not appear more than once in a single <job/>.", element] @TO@ MethodName:error:["The '<listeners/>' element may not appear more than once in a single " + element.getLocalName(), element] @AT@ 3802 @LENGTH@ 100
---------INS InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @TO@ SimpleName@@MethodName:error:["The '<listeners/>' element may not appear more than once in a single <job/>.", element] @AT@ 3777 @LENGTH@ 96
------------INS StringLiteral@@"The '<listeners/>' element may not appear more than once in a single " @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3777 @LENGTH@ 71
------------INS Operator@@+ @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3848 @LENGTH@ 1
------------INS MethodInvocation@@element.getLocalName() @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3851 @LENGTH@ 22
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getLocalName() @AT@ 3851 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getLocalName:[] @TO@ MethodInvocation@@element.getLocalName() @AT@ 3859 @LENGTH@ 14
---------INS InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @TO@ SimpleName@@MethodName:error:["The '<listeners/>' element may not appear more than once in a single <job/>.", element] @AT@ 3777 @LENGTH@ 96
------------INS StringLiteral@@"The '<listeners/>' element may not appear more than once in a single " @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3777 @LENGTH@ 71
------------INS Operator@@+ @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3848 @LENGTH@ 1
------------INS MethodInvocation@@element.getLocalName() @TO@ InfixExpression@@"The '<listeners/>' element may not appear more than once in a single " + element.getLocalName() @AT@ 3851 @LENGTH@ 22
---------------INS SimpleName@@Name:element @TO@ MethodInvocation@@element.getLocalName() @AT@ 3851 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getLocalName:[] @TO@ MethodInvocation@@element.getLocalName() @AT@ 3859 @LENGTH@ 14
---------DEL StringLiteral@@"The '<listeners/>' element may not appear more than once in a single <job/>." @AT@ 3814 @LENGTH@ 78


UPD VariableDeclarationStatement@@FileResourceManager resourceManager=new FileResourceManager(Paths.get(path)); @TO@ FileResourceManager resourceManager=new FileResourceManager(new File(path)); @AT@ 3681 @LENGTH@ 79
---UPD VariableDeclarationFragment@@resourceManager=new FileResourceManager(Paths.get(path)) @TO@ resourceManager=new FileResourceManager(new File(path)) @AT@ 3701 @LENGTH@ 58
------UPD ClassInstanceCreation@@FileResourceManager[Paths.get(path)] @TO@ FileResourceManager[new File(path)] @AT@ 3719 @LENGTH@ 40
---------INS ClassInstanceCreation@@File[path] @TO@ ClassInstanceCreation@@FileResourceManager[Paths.get(path)] @AT@ 3736 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@File[path] @AT@ 3736 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[path] @AT@ 3740 @LENGTH@ 4
------------INS SimpleName@@path @TO@ ClassInstanceCreation@@File[path] @AT@ 3745 @LENGTH@ 4
---------DEL MethodInvocation@@Paths.get(path) @AT@ 3743 @LENGTH@ 15
------------DEL SimpleName@@Name:Paths @AT@ 3743 @LENGTH@ 5
------------DEL SimpleName@@MethodName:get:[path] @AT@ 3749 @LENGTH@ 9
---------------DEL SimpleName@@path @AT@ 3753 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @TO@ MethodInvocation:wsRefRegistry.add(getCacheKey(componentDescription,serviceRefUMDM),serviceRefUMDM) @AT@ 5582 @LENGTH@ 70
---UPD MethodInvocation@@wsRefRegistry.add(serviceRefUMDM.getServiceRefName(),serviceRefUMDM) @TO@ wsRefRegistry.add(getCacheKey(componentDescription,serviceRefUMDM),serviceRefUMDM) @AT@ 5582 @LENGTH@ 69
------UPD SimpleName@@MethodName:add:[serviceRefUMDM.getServiceRefName(), serviceRefUMDM] @TO@ MethodName:add:[getCacheKey(componentDescription,serviceRefUMDM), serviceRefUMDM] @AT@ 5596 @LENGTH@ 55
---------UPD MethodInvocation@@serviceRefUMDM.getServiceRefName() @TO@ getCacheKey(componentDescription,serviceRefUMDM) @AT@ 5600 @LENGTH@ 34
------------DEL SimpleName@@Name:serviceRefUMDM @AT@ 5600 @LENGTH@ 14
------------INS SimpleName@@MethodName:getCacheKey:[componentDescription, serviceRefUMDM] @TO@ MethodInvocation@@serviceRefUMDM.getServiceRefName() @AT@ 5600 @LENGTH@ 49
---------------INS SimpleName@@componentDescription @TO@ SimpleName@@MethodName:getCacheKey:[componentDescription, serviceRefUMDM] @AT@ 5612 @LENGTH@ 20
---------------INS SimpleName@@serviceRefUMDM @TO@ SimpleName@@MethodName:getCacheKey:[componentDescription, serviceRefUMDM] @AT@ 5634 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getServiceRefName:[] @AT@ 5615 @LENGTH@ 19


INS MethodDeclaration@@boolean, MethodName:isStaticService,  @TO@ TypeDeclaration@@[public]ManagedServiceMBean,  @AT@ 1688 @LENGTH@ 18
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isStaticService,  @AT@ 1680 @LENGTH@ 7
---INS SimpleName@@MethodName:isStaticService @TO@ MethodDeclaration@@boolean, MethodName:isStaticService,  @AT@ 1688 @LENGTH@ 15


INS IfStatement@@if (isSecurityEnabled()) {  getConfigurators().add(new ComponentConfigurator(){    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {      configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);    }  });} @TO@ MethodDeclaration@@public, ComponentConfiguration, MethodName:createConfiguration, final ClassIndex classIndex, final ClassLoader moduleClassLoader, final ModuleLoader moduleLoader,  @AT@ 5497 @LENGTH@ 553
---INS MethodInvocation@@MethodName:isSecurityEnabled:[] @TO@ IfStatement@@if (isSecurityEnabled()) {  getConfigurators().add(new ComponentConfigurator(){    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {      configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);    }  });} @AT@ 5500 @LENGTH@ 19
---INS Block@@ThenBody:{  getConfigurators().add(new ComponentConfigurator(){    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {      configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);    }  });} @TO@ IfStatement@@if (isSecurityEnabled()) {  getConfigurators().add(new ComponentConfigurator(){    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {      configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);    }  });} @AT@ 5521 @LENGTH@ 529
------MOV ExpressionStatement@@MethodInvocation:getConfigurators().add(new ComponentConfigurator(){
  @Override public void configure(  final DeploymentPhaseContext context,  final ComponentDescription description,  final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {
    configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);
  }
}
) @TO@ Block@@ThenBody:{  getConfigurators().add(new ComponentConfigurator(){    @Override public void configure(    final DeploymentPhaseContext context,    final ComponentDescription description,    final ComponentConfiguration configuration) throws DeploymentUnitProcessingException {      configuration.addPostConstructInterceptor(new SecurityContextInterceptorFactory(isSecurityEnabled(),false),InterceptorOrder.View.SECURITY_CONTEXT);    }  });} @AT@ 5497 @LENGTH@ 485


DEL VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1846 @LENGTH@ 72
---DEL SimpleType@@Integer @AT@ 1846 @LENGTH@ 7
---DEL VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1854 @LENGTH@ 63
------DEL SimpleName@@size @AT@ 1854 @LENGTH@ 4
------DEL MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1861 @LENGTH@ 56
---------DEL SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1861 @LENGTH@ 56
------------DEL SimpleName@@parameters @AT@ 1883 @LENGTH@ 10
------------DEL StringLiteral@@"size" @AT@ 1895 @LENGTH@ 6
------------DEL TypeLiteral@@Integer.class @AT@ 1903 @LENGTH@ 13


INS TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @TO@ MethodDeclaration@@public, void, MethodName:testRejecting,  @AT@ 2824 @LENGTH@ 125
---INS ExpressionStatement@@MethodInvocation:cmp.addUnderlyingPermission(ACCESS_2) @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2842 @LENGTH@ 38
------INS MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @TO@ ExpressionStatement@@MethodInvocation:cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2842 @LENGTH@ 37
---------INS SimpleName@@Name:cmp @TO@ MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2842 @LENGTH@ 3
---------INS SimpleName@@MethodName:addUnderlyingPermission:[ACCESS_2] @TO@ MethodInvocation@@cmp.addUnderlyingPermission(ACCESS_2) @AT@ 2846 @LENGTH@ 33
------------INS SimpleName@@ACCESS_2 @TO@ SimpleName@@MethodName:addUnderlyingPermission:[ACCESS_2] @AT@ 2870 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:fail() @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2893 @LENGTH@ 7
------INS MethodInvocation@@MethodName:fail:[] @TO@ ExpressionStatement@@MethodInvocation:fail() @AT@ 2893 @LENGTH@ 6
---INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  cmp.addUnderlyingPermission(ACCESS_2);  fail();} catch (Exception e) {} @AT@ 2911 @LENGTH@ 38
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 2918 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 2918 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 2928 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:getFieldValue("provisioningPending") @TO@ MethodInvocation:getFieldValue("provisionException") @AT@ 8344 @LENGTH@ 44
---UPD MethodInvocation@@getFieldValue("provisioningPending") @TO@ getFieldValue("provisionException") @AT@ 8351 @LENGTH@ 36
------UPD SimpleName@@MethodName:getFieldValue:["provisioningPending"] @TO@ MethodName:getFieldValue:["provisionException"] @AT@ 8351 @LENGTH@ 36
---------UPD StringLiteral@@"provisioningPending" @TO@ "provisionException" @AT@ 8365 @LENGTH@ 21


UPD IfStatement@@if (response.getStatusCode().series() != HttpStatus.Series.CLIENT_ERROR) {  errorHandler.handleError(response);} else {  ClientHttpResponse bufferedResponse=new ClientHttpResponse(){    private byte[] lazyBody;    public HttpStatus getStatusCode() throws IOException {      return response.getStatusCode();    }    public synchronized InputStream getBody() throws IOException {      if (lazyBody == null) {        InputStream bodyStream=response.getBody();        if (bodyStream != null) {          lazyBody=FileCopyUtils.copyToByteArray(bodyStream);        }      }      return new ByteArrayInputStream(lazyBody);    }    public HttpHeaders getHeaders(){      return response.getHeaders();    }    public String getStatusText() throws IOException {      return response.getStatusText();    }    public void close(){      response.close();    }    public int getRawStatusCode() throws IOException {      return response.getRawStatusCode();    }  };  try {    HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);    try {      OAuth2Exception body=extractor.extractData(response);      if (body != null) {        throw body;      }    } catch (    RestClientException e) {    }    List<String> authenticateHeaders=response.getHeaders().get("WWW-Authenticate");    if (authenticateHeaders != null) {      for (      String authenticateHeader : authenticateHeaders) {        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);      }    }    errorHandler.handleError(response);  } catch (  OAuth2Exception ex) {    if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {      throw ex;    } else {      errorHandler.handleError(bufferedResponse);    }  }} @TO@ if (!HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series())) {  errorHandler.handleError(response);} else {  ClientHttpResponse bufferedResponse=new ClientHttpResponse(){    private byte[] lazyBody;    public HttpStatus getStatusCode() throws IOException {      return response.getStatusCode();    }    public synchronized InputStream getBody() throws IOException {      if (lazyBody == null) {        InputStream bodyStream=response.getBody();        if (bodyStream != null) {          lazyBody=FileCopyUtils.copyToByteArray(bodyStream);        }      }      return new ByteArrayInputStream(lazyBody);    }    public HttpHeaders getHeaders(){      return response.getHeaders();    }    public String getStatusText() throws IOException {      return response.getStatusText();    }    public void close(){      response.close();    }    public int getRawStatusCode() throws IOException {      return response.getRawStatusCode();    }  };  try {    HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);    try {      OAuth2Exception body=extractor.extractData(bufferedResponse);      if (body != null) {        throw body;      }    } catch (    RestClientException e) {    }    List<String> authenticateHeaders=bufferedResponse.getHeaders().get("WWW-Authenticate");    if (authenticateHeaders != null) {      for (      String authenticateHeader : authenticateHeaders) {        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);      }    }    errorHandler.handleError(bufferedResponse);  } catch (  OAuth2Exception ex) {    if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {      throw ex;    } else {      errorHandler.handleError(bufferedResponse);    }  }} @AT@ 3071 @LENGTH@ 2722
---DEL InfixExpression@@response.getStatusCode().series() != HttpStatus.Series.CLIENT_ERROR @AT@ 3075 @LENGTH@ 67
------DEL MethodInvocation@@response.getStatusCode().series() @AT@ 3075 @LENGTH@ 33
------DEL Operator@@!= @AT@ 3108 @LENGTH@ 2
------DEL QualifiedName@@HttpStatus.Series.CLIENT_ERROR @AT@ 3112 @LENGTH@ 30
---------DEL QualifiedName@@HttpStatus.Series @AT@ 3112 @LENGTH@ 17
------------DEL SimpleName@@HttpStatus @AT@ 3112 @LENGTH@ 10
------------DEL SimpleName@@Series @AT@ 3123 @LENGTH@ 6
---------DEL SimpleName@@CLIENT_ERROR @AT@ 3130 @LENGTH@ 12
---INS PrefixExpression@@!HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @TO@ IfStatement@@if (response.getStatusCode().series() != HttpStatus.Series.CLIENT_ERROR) {  errorHandler.handleError(response);} else {  ClientHttpResponse bufferedResponse=new ClientHttpResponse(){    private byte[] lazyBody;    public HttpStatus getStatusCode() throws IOException {      return response.getStatusCode();    }    public synchronized InputStream getBody() throws IOException {      if (lazyBody == null) {        InputStream bodyStream=response.getBody();        if (bodyStream != null) {          lazyBody=FileCopyUtils.copyToByteArray(bodyStream);        }      }      return new ByteArrayInputStream(lazyBody);    }    public HttpHeaders getHeaders(){      return response.getHeaders();    }    public String getStatusText() throws IOException {      return response.getStatusText();    }    public void close(){      response.close();    }    public int getRawStatusCode() throws IOException {      return response.getRawStatusCode();    }  };  try {    HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);    try {      OAuth2Exception body=extractor.extractData(response);      if (body != null) {        throw body;      }    } catch (    RestClientException e) {    }    List<String> authenticateHeaders=response.getHeaders().get("WWW-Authenticate");    if (authenticateHeaders != null) {      for (      String authenticateHeader : authenticateHeaders) {        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);      }    }    errorHandler.handleError(response);  } catch (  OAuth2Exception ex) {    if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {      throw ex;    } else {      errorHandler.handleError(bufferedResponse);    }  }} @AT@ 3154 @LENGTH@ 74
------INS Operator@@! @TO@ PrefixExpression@@!HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 3154 @LENGTH@ 1
------INS MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @TO@ PrefixExpression@@!HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 3156 @LENGTH@ 72
---------INS QualifiedName@@Name:HttpStatus.Series.CLIENT_ERROR @TO@ MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 3156 @LENGTH@ 30
---------INS SimpleName@@MethodName:equals:[response.getStatusCode().series()] @TO@ MethodInvocation@@HttpStatus.Series.CLIENT_ERROR.equals(response.getStatusCode().series()) @AT@ 3187 @LENGTH@ 41
------------INS MethodInvocation@@response.getStatusCode().series() @TO@ SimpleName@@MethodName:equals:[response.getStatusCode().series()] @AT@ 3194 @LENGTH@ 33
---------------MOV MethodInvocation@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 3075 @LENGTH@ 24
---------------MOV SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 3075 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:series:[] @TO@ MethodInvocation@@response.getStatusCode().series() @AT@ 3100 @LENGTH@ 8
---UPD Block@@ElseBody:{  ClientHttpResponse bufferedResponse=new ClientHttpResponse(){    private byte[] lazyBody;    public HttpStatus getStatusCode() throws IOException {      return response.getStatusCode();    }    public synchronized InputStream getBody() throws IOException {      if (lazyBody == null) {        InputStream bodyStream=response.getBody();        if (bodyStream != null) {          lazyBody=FileCopyUtils.copyToByteArray(bodyStream);        }      }      return new ByteArrayInputStream(lazyBody);    }    public HttpHeaders getHeaders(){      return response.getHeaders();    }    public String getStatusText() throws IOException {      return response.getStatusText();    }    public void close(){      response.close();    }    public int getRawStatusCode() throws IOException {      return response.getRawStatusCode();    }  };  try {    HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);    try {      OAuth2Exception body=extractor.extractData(response);      if (body != null) {        throw body;      }    } catch (    RestClientException e) {    }    List<String> authenticateHeaders=response.getHeaders().get("WWW-Authenticate");    if (authenticateHeaders != null) {      for (      String authenticateHeader : authenticateHeaders) {        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);      }    }    errorHandler.handleError(response);  } catch (  OAuth2Exception ex) {    if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {      throw ex;    } else {      errorHandler.handleError(bufferedResponse);    }  }} @TO@ ElseBody:{  ClientHttpResponse bufferedResponse=new ClientHttpResponse(){    private byte[] lazyBody;    public HttpStatus getStatusCode() throws IOException {      return response.getStatusCode();    }    public synchronized InputStream getBody() throws IOException {      if (lazyBody == null) {        InputStream bodyStream=response.getBody();        if (bodyStream != null) {          lazyBody=FileCopyUtils.copyToByteArray(bodyStream);        }      }      return new ByteArrayInputStream(lazyBody);    }    public HttpHeaders getHeaders(){      return response.getHeaders();    }    public String getStatusText() throws IOException {      return response.getStatusText();    }    public void close(){      response.close();    }    public int getRawStatusCode() throws IOException {      return response.getRawStatusCode();    }  };  try {    HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);    try {      OAuth2Exception body=extractor.extractData(bufferedResponse);      if (body != null) {        throw body;      }    } catch (    RestClientException e) {    }    List<String> authenticateHeaders=bufferedResponse.getHeaders().get("WWW-Authenticate");    if (authenticateHeaders != null) {      for (      String authenticateHeader : authenticateHeaders) {        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);        maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);      }    }    errorHandler.handleError(bufferedResponse);  } catch (  OAuth2Exception ex) {    if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {      throw ex;    } else {      errorHandler.handleError(bufferedResponse);    }  }} @AT@ 3310 @LENGTH@ 2483
------UPD TryStatement@@try {  HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);  try {    OAuth2Exception body=extractor.extractData(response);    if (body != null) {      throw body;    }  } catch (  RestClientException e) {  }  List<String> authenticateHeaders=response.getHeaders().get("WWW-Authenticate");  if (authenticateHeaders != null) {    for (    String authenticateHeader : authenticateHeaders) {      maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);      maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);    }  }  errorHandler.handleError(response);} catch (OAuth2Exception ex) {  if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {    throw ex;  } else {    errorHandler.handleError(bufferedResponse);  }} @TO@ try {  HttpMessageConverterExtractor<OAuth2Exception> extractor=new HttpMessageConverterExtractor<OAuth2Exception>(OAuth2Exception.class,messageConverters);  try {    OAuth2Exception body=extractor.extractData(bufferedResponse);    if (body != null) {      throw body;    }  } catch (  RestClientException e) {  }  List<String> authenticateHeaders=bufferedResponse.getHeaders().get("WWW-Authenticate");  if (authenticateHeaders != null) {    for (    String authenticateHeader : authenticateHeaders) {      maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.BEARER_TYPE);      maybeThrowExceptionFromHeader(authenticateHeader,OAuth2AccessToken.OAUTH2_TYPE);    }  }  errorHandler.handleError(bufferedResponse);} catch (OAuth2Exception ex) {  if (bufferedResponse.getRawStatusCode() == 401 || !ex.getClass().equals(OAuth2Exception.class)) {    throw ex;  } else {    errorHandler.handleError(bufferedResponse);  }} @AT@ 4269 @LENGTH@ 1520
---------UPD TryStatement@@try {  OAuth2Exception body=extractor.extractData(response);  if (body != null) {    throw body;  }} catch (RestClientException e) {} @TO@ try {  OAuth2Exception body=extractor.extractData(bufferedResponse);  if (body != null) {    throw body;  }} catch (RestClientException e) {} @AT@ 4443 @LENGTH@ 339
------------UPD VariableDeclarationStatement@@OAuth2Exception body=extractor.extractData(response); @TO@ OAuth2Exception body=extractor.extractData(bufferedResponse); @AT@ 4454 @LENGTH@ 55
---------------UPD VariableDeclarationFragment@@body=extractor.extractData(response) @TO@ body=extractor.extractData(bufferedResponse) @AT@ 4470 @LENGTH@ 38
------------------UPD MethodInvocation@@extractor.extractData(response) @TO@ extractor.extractData(bufferedResponse) @AT@ 4477 @LENGTH@ 31
---------------------UPD SimpleName@@MethodName:extractData:[response] @TO@ MethodName:extractData:[bufferedResponse] @AT@ 4487 @LENGTH@ 21
------------------------UPD SimpleName@@response @TO@ bufferedResponse @AT@ 4499 @LENGTH@ 8
---------UPD VariableDeclarationStatement@@List<String> authenticateHeaders=response.getHeaders().get("WWW-Authenticate"); @TO@ List<String> authenticateHeaders=bufferedResponse.getHeaders().get("WWW-Authenticate"); @AT@ 4829 @LENGTH@ 81
------------UPD VariableDeclarationFragment@@authenticateHeaders=response.getHeaders().get("WWW-Authenticate") @TO@ authenticateHeaders=bufferedResponse.getHeaders().get("WWW-Authenticate") @AT@ 4842 @LENGTH@ 67
---------------UPD MethodInvocation@@response.getHeaders().get("WWW-Authenticate") @TO@ bufferedResponse.getHeaders().get("WWW-Authenticate") @AT@ 4864 @LENGTH@ 45
------------------UPD SimpleName@@Name:response @TO@ Name:bufferedResponse @AT@ 4864 @LENGTH@ 8
---------UPD ExpressionStatement@@MethodInvocation:errorHandler.handleError(response) @TO@ MethodInvocation:errorHandler.handleError(bufferedResponse) @AT@ 5248 @LENGTH@ 35
------------UPD MethodInvocation@@errorHandler.handleError(response) @TO@ errorHandler.handleError(bufferedResponse) @AT@ 5248 @LENGTH@ 34
---------------UPD SimpleName@@MethodName:handleError:[response] @TO@ MethodName:handleError:[bufferedResponse] @AT@ 5261 @LENGTH@ 21
------------------UPD SimpleName@@response @TO@ bufferedResponse @AT@ 5273 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @TO@ MethodInvocation:new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).setRuntimeOnly().withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3221 @LENGTH@ 265
---UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @TO@ new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).setRuntimeOnly().withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3228 @LENGTH@ 257
------INS MethodInvocation@@MethodName:setRuntimeOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(name,HostResolver.getResolver("host.server")).setParameters(SERVER,BLOCKING).setReplyType(ModelType.STRING).withFlag(OperationEntry.Flag.HOST_CONTROLLER_ONLY).build() @AT@ 3228 @LENGTH@ 202


INS MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @TO@ TypeDeclaration@@[public]NativeApiUtilsForPatching,  @AT@ 3515 @LENGTH@ 366
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3515 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3522 @LENGTH@ 6
---INS ParameterizedType@@List<ModelNode> @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3529 @LENGTH@ 15
------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 3529 @LENGTH@ 4
------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 3534 @LENGTH@ 9
---INS SimpleName@@MethodName:getHistory @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3545 @LENGTH@ 10
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3556 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 3556 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 3578 @LENGTH@ 6
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3593 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3615 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 3615 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 3621 @LENGTH@ 9
------INS VariableDeclarationFragment@@readOp=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode readOp=new ModelNode(); @AT@ 3631 @LENGTH@ 24
---------INS SimpleName@@readOp @TO@ VariableDeclarationFragment@@readOp=new ModelNode() @AT@ 3631 @LENGTH@ 6
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@readOp=new ModelNode() @AT@ 3640 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3640 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3644 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3665 @LENGTH@ 78
------INS MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @TO@ ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 3665 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP_ADDR] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 3665 @LENGTH@ 45
------------INS QualifiedName@@ModelDescriptionConstants.OP_ADDR @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP_ADDR] @AT@ 3676 @LENGTH@ 33
---------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.OP_ADDR @AT@ 3676 @LENGTH@ 25
---------------INS SimpleName@@OP_ADDR @TO@ QualifiedName@@ModelDescriptionConstants.OP_ADDR @AT@ 3702 @LENGTH@ 7
---------INS SimpleName@@Name:readOp @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 3665 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["core-service", "patching"] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP_ADDR).add("core-service","patching") @AT@ 3711 @LENGTH@ 31
------------INS StringLiteral@@"core-service" @TO@ SimpleName@@MethodName:add:["core-service", "patching"] @AT@ 3715 @LENGTH@ 14
------------INS StringLiteral@@"patching" @TO@ SimpleName@@MethodName:add:["core-service", "patching"] @AT@ 3731 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP).set("show-history") @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3752 @LENGTH@ 61
------INS MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @TO@ ExpressionStatement@@MethodInvocation:readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 3752 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 3752 @LENGTH@ 40
------------INS QualifiedName@@ModelDescriptionConstants.OP @TO@ MethodInvocation@@MethodName:get:[ModelDescriptionConstants.OP] @AT@ 3763 @LENGTH@ 28
---------------INS SimpleName@@ModelDescriptionConstants @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 3763 @LENGTH@ 25
---------------INS SimpleName@@OP @TO@ QualifiedName@@ModelDescriptionConstants.OP @AT@ 3789 @LENGTH@ 2
---------INS SimpleName@@Name:readOp @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 3752 @LENGTH@ 6
---------INS SimpleName@@MethodName:set:["show-history"] @TO@ MethodInvocation@@readOp.get(ModelDescriptionConstants.OP).set("show-history") @AT@ 3793 @LENGTH@ 19
------------INS StringLiteral@@"show-history" @TO@ SimpleName@@MethodName:set:["show-history"] @AT@ 3797 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:client.execute(readOp).get("result").asList() @TO@ MethodDeclaration@@public, static, List<ModelNode>, MethodName:getHistory, ModelControllerClient client, IOException,  @AT@ 3822 @LENGTH@ 53
------INS MethodInvocation@@client.execute(readOp).get("result").asList() @TO@ ReturnStatement@@MethodInvocation:client.execute(readOp).get("result").asList() @AT@ 3829 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:get:["result"] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 3829 @LENGTH@ 36
------------INS StringLiteral@@"result" @TO@ MethodInvocation@@MethodName:get:["result"] @AT@ 3856 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:execute:[readOp] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 3829 @LENGTH@ 22
------------INS SimpleName@@readOp @TO@ MethodInvocation@@MethodName:execute:[readOp] @AT@ 3844 @LENGTH@ 6
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 3829 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@client.execute(readOp).get("result").asList() @AT@ 3866 @LENGTH@ 8


UPD TryStatement@@try {  return console.read(prompt).getBuffer();} catch (IOException e) {  e.printStackTrace();  return null;} @TO@ try {  ConsoleOutput output=console.read(prompt);  return output != null ? output.getBuffer() : null;} catch (IOException e) {  e.printStackTrace();  return null;} @AT@ 6184 @LENGTH@ 220
---DEL ReturnStatement@@MethodInvocation:console.read(prompt).getBuffer() @AT@ 6214 @LENGTH@ 40
------DEL MethodInvocation@@console.read(prompt).getBuffer() @AT@ 6221 @LENGTH@ 32
---------DEL MethodInvocation@@MethodName:read:[prompt] @AT@ 6221 @LENGTH@ 20
------------DEL SimpleName@@prompt @AT@ 6234 @LENGTH@ 6
---------DEL SimpleName@@Name:console @AT@ 6221 @LENGTH@ 7
---INS VariableDeclarationStatement@@ConsoleOutput output=console.read(prompt); @TO@ TryStatement@@try {  return console.read(prompt).getBuffer();} catch (IOException e) {  e.printStackTrace();  return null;} @AT@ 6259 @LENGTH@ 44
------INS SimpleType@@ConsoleOutput @TO@ VariableDeclarationStatement@@ConsoleOutput output=console.read(prompt); @AT@ 6259 @LENGTH@ 13
------INS VariableDeclarationFragment@@output=console.read(prompt) @TO@ VariableDeclarationStatement@@ConsoleOutput output=console.read(prompt); @AT@ 6273 @LENGTH@ 29
---------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=console.read(prompt) @AT@ 6273 @LENGTH@ 6
---------INS MethodInvocation@@console.read(prompt) @TO@ VariableDeclarationFragment@@output=console.read(prompt) @AT@ 6282 @LENGTH@ 20
------------INS SimpleName@@Name:console @TO@ MethodInvocation@@console.read(prompt) @AT@ 6282 @LENGTH@ 7
------------INS SimpleName@@MethodName:read:[prompt] @TO@ MethodInvocation@@console.read(prompt) @AT@ 6290 @LENGTH@ 12
---------------INS SimpleName@@prompt @TO@ SimpleName@@MethodName:read:[prompt] @AT@ 6295 @LENGTH@ 6
---INS ReturnStatement@@ConditionalExpression:output != null ? output.getBuffer() : null @TO@ TryStatement@@try {  return console.read(prompt).getBuffer();} catch (IOException e) {  e.printStackTrace();  return null;} @AT@ 6328 @LENGTH@ 50
------INS ConditionalExpression@@output != null ? output.getBuffer() : null @TO@ ReturnStatement@@ConditionalExpression:output != null ? output.getBuffer() : null @AT@ 6335 @LENGTH@ 42
---------INS InfixExpression@@output != null @TO@ ConditionalExpression@@output != null ? output.getBuffer() : null @AT@ 6335 @LENGTH@ 14
------------INS SimpleName@@output @TO@ InfixExpression@@output != null @AT@ 6335 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@output != null @AT@ 6341 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@output != null @AT@ 6345 @LENGTH@ 4
---------INS MethodInvocation@@output.getBuffer() @TO@ ConditionalExpression@@output != null ? output.getBuffer() : null @AT@ 6352 @LENGTH@ 18
------------MOV SimpleName@@MethodName:getBuffer:[] @TO@ MethodInvocation@@output.getBuffer() @AT@ 6242 @LENGTH@ 11
------------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.getBuffer() @AT@ 6352 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ ConditionalExpression@@output != null ? output.getBuffer() : null @AT@ 6373 @LENGTH@ 4


UPD TypeDeclaration@@[final]FileModifyTask, AbstractFileTask @TO@ [final]FileUpdateTask, AbstractFileTask @AT@ 1432 @LENGTH@ 1369
---UPD SimpleName@@ClassName:FileModifyTask @TO@ ClassName:FileUpdateTask @AT@ 1444 @LENGTH@ 14


UPD TryStatement@@try {  SecurityActions.setSecurityContextOnAssociation(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principleVsRoleMap);    }  }  ServletChain servlet=exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY).getCurrentServlet();  identity=runAsIdentityMetaDataMap.get(servlet.getManagedServlet().getServletInfo().getName());  RunAsIdentity runAsIdentity=null;  if (identity != null) {    UndertowLogger.ROOT_LOGGER.tracef("%s, runAs: %s",servlet.getManagedServlet().getServletInfo().getName(),identity);    runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());  }  SecurityActions.pushRunAsIdentity(runAsIdentity);  previousContextID=setContextID(contextId);  next.handleRequest(exchange);}  finally {  if (identity != null) {    SecurityActions.popRunAsIdentity();  }  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  setContextID(previousContextID);} @TO@ try {  SecurityActions.setSecurityContextOnAssociation(sc);  if (mappingManager != null) {    MappingContext<RoleGroup> mc=mappingManager.getMappingContext(MappingType.ROLE.name());    if (mc != null && mc.hasModules()) {      SecurityRolesAssociation.setSecurityRoles(principleVsRoleMap);    }  }  ServletChain servlet=exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY).getCurrentServlet();  identity=runAsIdentityMetaDataMap.get(servlet.getManagedServlet().getServletInfo().getName());  RunAsIdentity runAsIdentity=null;  if (identity != null) {    UndertowLogger.ROOT_LOGGER.tracef("%s, runAs: %s",servlet.getManagedServlet().getServletInfo().getName(),identity);    runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());  }  SecurityActions.pushRunAsIdentity(runAsIdentity,sc);  previousContextID=setContextID(contextId);  next.handleRequest(exchange);}  finally {  if (identity != null) {    SecurityActions.popRunAsIdentity(sc);  }  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  setContextID(previousContextID);} @AT@ 3234 @LENGTH@ 1578
---UPD ExpressionStatement@@MethodInvocation:SecurityActions.pushRunAsIdentity(runAsIdentity) @TO@ MethodInvocation:SecurityActions.pushRunAsIdentity(runAsIdentity,sc) @AT@ 4303 @LENGTH@ 49
------UPD MethodInvocation@@SecurityActions.pushRunAsIdentity(runAsIdentity) @TO@ SecurityActions.pushRunAsIdentity(runAsIdentity,sc) @AT@ 4303 @LENGTH@ 48
---------UPD SimpleName@@MethodName:pushRunAsIdentity:[runAsIdentity] @TO@ MethodName:pushRunAsIdentity:[runAsIdentity, sc] @AT@ 4319 @LENGTH@ 32
------------INS SimpleName@@sc @TO@ SimpleName@@MethodName:pushRunAsIdentity:[runAsIdentity] @AT@ 4352 @LENGTH@ 2
---UPD Block@@FinallyBody:{  if (identity != null) {    SecurityActions.popRunAsIdentity();  }  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  setContextID(previousContextID);} @TO@ FinallyBody:{  if (identity != null) {    SecurityActions.popRunAsIdentity(sc);  }  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  setContextID(previousContextID);} @AT@ 4541 @LENGTH@ 271
------UPD IfStatement@@if (identity != null) {  SecurityActions.popRunAsIdentity();} @TO@ if (identity != null) {  SecurityActions.popRunAsIdentity(sc);} @AT@ 4555 @LENGTH@ 89
---------UPD Block@@ThenBody:{  SecurityActions.popRunAsIdentity();} @TO@ ThenBody:{  SecurityActions.popRunAsIdentity(sc);} @AT@ 4577 @LENGTH@ 67
------------UPD ExpressionStatement@@MethodInvocation:SecurityActions.popRunAsIdentity() @TO@ MethodInvocation:SecurityActions.popRunAsIdentity(sc) @AT@ 4595 @LENGTH@ 35
---------------UPD MethodInvocation@@SecurityActions.popRunAsIdentity() @TO@ SecurityActions.popRunAsIdentity(sc) @AT@ 4595 @LENGTH@ 34
------------------UPD SimpleName@@MethodName:popRunAsIdentity:[] @TO@ MethodName:popRunAsIdentity:[sc] @AT@ 4611 @LENGTH@ 18
---------------------INS SimpleName@@sc @TO@ SimpleName@@MethodName:popRunAsIdentity:[] @AT@ 4632 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:from("file:target/done?doneFileName=${file:name}.ready&initialDelay=0&delay=10").to("mock:result") @TO@ MethodInvocation:from("file:target/done?doneFileName=${file:name}.ready&initialDelay=0").convertBodyTo(String.class).to("mock:result") @AT@ 2521 @LENGTH@ 99
---UPD MethodInvocation@@from("file:target/done?doneFileName=${file:name}.ready&initialDelay=0&delay=10").to("mock:result") @TO@ from("file:target/done?doneFileName=${file:name}.ready&initialDelay=0").convertBodyTo(String.class).to("mock:result") @AT@ 2521 @LENGTH@ 98
------UPD MethodInvocation@@MethodName:from:["file:target/done?doneFileName=${file:name}.ready&initialDelay=0&delay=10"] @TO@ MethodName:from:["file:target/done?doneFileName=${file:name}.ready&initialDelay=0"] @AT@ 2521 @LENGTH@ 80
---------UPD StringLiteral@@"file:target/done?doneFileName=${file:name}.ready&initialDelay=0&delay=10" @TO@ "file:target/done?doneFileName=${file:name}.ready&initialDelay=0" @AT@ 2526 @LENGTH@ 74
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file:target/done?doneFileName=${file:name}.ready&initialDelay=0&delay=10").to("mock:result") @AT@ 2521 @LENGTH@ 120
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2628 @LENGTH@ 12


UPD IfStatement@@if (resultAction == OperationContext.ResultAction.KEEP) {  service.reloadRequired();  context.restartRequired();  result.commit();} else {  result.rollback();} @TO@ if (resultAction == OperationContext.ResultAction.KEEP) {  result.commit();} else {  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3417 @LENGTH@ 292
---UPD Block@@ThenBody:{  service.reloadRequired();  context.restartRequired();  result.commit();} @TO@ ThenBody:{  result.commit();} @AT@ 3472 @LENGTH@ 165
------DEL ExpressionStatement@@MethodInvocation:service.reloadRequired() @AT@ 3498 @LENGTH@ 25
---------DEL MethodInvocation@@service.reloadRequired() @AT@ 3498 @LENGTH@ 24
------------DEL SimpleName@@Name:service @AT@ 3498 @LENGTH@ 7
------------DEL SimpleName@@MethodName:reloadRequired:[] @AT@ 3506 @LENGTH@ 16
---UPD Block@@ElseBody:{  result.rollback();} @TO@ ElseBody:{  service.clearRestartRequired();  context.revertRestartRequired();  result.rollback();} @AT@ 3643 @LENGTH@ 66
------INS ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3648 @LENGTH@ 31
---------INS MethodInvocation@@service.clearRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:service.clearRestartRequired() @AT@ 3648 @LENGTH@ 30
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3648 @LENGTH@ 7
------------INS SimpleName@@MethodName:clearRestartRequired:[] @TO@ MethodInvocation@@service.clearRestartRequired() @AT@ 3656 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @TO@ Block@@ElseBody:{  result.rollback();} @AT@ 3704 @LENGTH@ 32
---------INS MethodInvocation@@context.revertRestartRequired() @TO@ ExpressionStatement@@MethodInvocation:context.revertRestartRequired() @AT@ 3704 @LENGTH@ 31
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3704 @LENGTH@ 7
------------INS SimpleName@@MethodName:revertRestartRequired:[] @TO@ MethodInvocation@@context.revertRestartRequired() @AT@ 3712 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:opRules.put(new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @TO@ MethodDeclaration@@protected, void, MethodName:generateTaskTree, List<Task<? extends Serializable>> rootTasks, ParseContext pCtx, List<Task<MoveWork>> mvTask, Set<ReadEntity> inputs, Set<WriteEntity> outputs, SemanticException,  @AT@ 7429 @LENGTH@ 741
---INS MethodInvocation@@opRules.put(new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:opRules.put(new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 7429 @LENGTH@ 740
------INS SimpleName@@Name:opRules @TO@ MethodInvocation@@opRules.put(new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 7429 @LENGTH@ 7
------INS SimpleName@@MethodName:put:[new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @TO@ MethodInvocation@@opRules.put(new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"),new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
) @AT@ 7437 @LENGTH@ 732
---------INS ClassInstanceCreation@@RuleRegExp["Handle Forward opertor", ForwardOperator.getOperatorName() + "%"] @TO@ SimpleName@@MethodName:put:[new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @AT@ 7441 @LENGTH@ 89
------------INS New@@new @TO@ ClassInstanceCreation@@RuleRegExp["Handle Forward opertor", ForwardOperator.getOperatorName() + "%"] @AT@ 7441 @LENGTH@ 3
------------INS SimpleType@@RuleRegExp @TO@ ClassInstanceCreation@@RuleRegExp["Handle Forward opertor", ForwardOperator.getOperatorName() + "%"] @AT@ 7445 @LENGTH@ 10
------------INS StringLiteral@@"Handle Forward opertor" @TO@ ClassInstanceCreation@@RuleRegExp["Handle Forward opertor", ForwardOperator.getOperatorName() + "%"] @AT@ 7456 @LENGTH@ 24
------------INS InfixExpression@@ForwardOperator.getOperatorName() + "%" @TO@ ClassInstanceCreation@@RuleRegExp["Handle Forward opertor", ForwardOperator.getOperatorName() + "%"] @AT@ 7490 @LENGTH@ 39
---------------INS MethodInvocation@@ForwardOperator.getOperatorName() @TO@ InfixExpression@@ForwardOperator.getOperatorName() + "%" @AT@ 7490 @LENGTH@ 33
------------------INS SimpleName@@Name:ForwardOperator @TO@ MethodInvocation@@ForwardOperator.getOperatorName() @AT@ 7490 @LENGTH@ 15
------------------INS SimpleName@@MethodName:getOperatorName:[] @TO@ MethodInvocation@@ForwardOperator.getOperatorName() @AT@ 7506 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@ForwardOperator.getOperatorName() + "%" @AT@ 7523 @LENGTH@ 1
---------------INS StringLiteral@@"%" @TO@ InfixExpression@@ForwardOperator.getOperatorName() + "%" @AT@ 7526 @LENGTH@ 3
---------INS ClassInstanceCreation@@NodeProcessor[] @TO@ SimpleName@@MethodName:put:[new RuleRegExp("Handle Forward opertor",ForwardOperator.getOperatorName() + "%"), new NodeProcessor(){
  @Override public Object process(  Node n,  Stack<Node> s,  NodeProcessorCtx procCtx,  Object... os) throws SemanticException {
    GenTezProcContext context=(GenTezProcContext)procCtx;
    ForwardOperator forward=(ForwardOperator)n;
    LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild());
    context.lastRootOfMultiChildOperator.push(context.currentRootOperator);
    context.currentBranchCount.push(forward.getNumChild());
    context.lastWorkForMultiChildOperator.push(null);
    return null;
  }
}
] @AT@ 7532 @LENGTH@ 636
------------INS New@@new @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 7532 @LENGTH@ 3
------------INS SimpleType@@NodeProcessor @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 7536 @LENGTH@ 13
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@NodeProcessor[] @AT@ 7556 @LENGTH@ 612
---------------INS MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7580 @LENGTH@ 582
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7580 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7587 @LENGTH@ 6
------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7594 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Node n @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7602 @LENGTH@ 6
---------------------INS SimpleType@@Node @TO@ SingleVariableDeclaration@@Node n @AT@ 7602 @LENGTH@ 4
---------------------INS SimpleName@@n @TO@ SingleVariableDeclaration@@Node n @AT@ 7607 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@Stack<Node> s @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7610 @LENGTH@ 13
---------------------INS ParameterizedType@@Stack<Node> @TO@ SingleVariableDeclaration@@Stack<Node> s @AT@ 7610 @LENGTH@ 11
------------------------INS SimpleType@@Stack @TO@ ParameterizedType@@Stack<Node> @AT@ 7610 @LENGTH@ 5
------------------------INS SimpleType@@Node @TO@ ParameterizedType@@Stack<Node> @AT@ 7616 @LENGTH@ 4
---------------------INS SimpleName@@s @TO@ SingleVariableDeclaration@@Stack<Node> s @AT@ 7622 @LENGTH@ 1
------------------INS SingleVariableDeclaration@@NodeProcessorCtx procCtx @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7635 @LENGTH@ 24
---------------------INS SimpleType@@NodeProcessorCtx @TO@ SingleVariableDeclaration@@NodeProcessorCtx procCtx @AT@ 7635 @LENGTH@ 16
---------------------INS SimpleName@@procCtx @TO@ SingleVariableDeclaration@@NodeProcessorCtx procCtx @AT@ 7652 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@Object... os @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7661 @LENGTH@ 12
---------------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object... os @AT@ 7661 @LENGTH@ 6
---------------------INS SimpleName@@os @TO@ SingleVariableDeclaration@@Object... os @AT@ 7671 @LENGTH@ 2
------------------INS SimpleType@@SemanticException @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7682 @LENGTH@ 17
------------------INS VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7710 @LENGTH@ 56
---------------------INS SimpleType@@GenTezProcContext @TO@ VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @AT@ 7710 @LENGTH@ 17
---------------------INS VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @TO@ VariableDeclarationStatement@@GenTezProcContext context=(GenTezProcContext)procCtx; @AT@ 7728 @LENGTH@ 37
------------------------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @AT@ 7728 @LENGTH@ 7
------------------------INS CastExpression@@(GenTezProcContext)procCtx @TO@ VariableDeclarationFragment@@context=(GenTezProcContext)procCtx @AT@ 7738 @LENGTH@ 27
---------------------------INS SimpleType@@GenTezProcContext @TO@ CastExpression@@(GenTezProcContext)procCtx @AT@ 7739 @LENGTH@ 17
---------------------------INS SimpleName@@procCtx @TO@ CastExpression@@(GenTezProcContext)procCtx @AT@ 7758 @LENGTH@ 7
------------------INS VariableDeclarationStatement@@ForwardOperator forward=(ForwardOperator)n; @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7775 @LENGTH@ 46
---------------------INS SimpleType@@ForwardOperator @TO@ VariableDeclarationStatement@@ForwardOperator forward=(ForwardOperator)n; @AT@ 7775 @LENGTH@ 15
---------------------INS VariableDeclarationFragment@@forward=(ForwardOperator)n @TO@ VariableDeclarationStatement@@ForwardOperator forward=(ForwardOperator)n; @AT@ 7791 @LENGTH@ 29
------------------------INS SimpleName@@forward @TO@ VariableDeclarationFragment@@forward=(ForwardOperator)n @AT@ 7791 @LENGTH@ 7
------------------------INS CastExpression@@(ForwardOperator)n @TO@ VariableDeclarationFragment@@forward=(ForwardOperator)n @AT@ 7801 @LENGTH@ 19
---------------------------INS SimpleType@@ForwardOperator @TO@ CastExpression@@(ForwardOperator)n @AT@ 7802 @LENGTH@ 15
---------------------------INS SimpleName@@n @TO@ CastExpression@@(ForwardOperator)n @AT@ 7819 @LENGTH@ 1
------------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7830 @LENGTH@ 101
---------------------INS MethodInvocation@@LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()) @AT@ 7830 @LENGTH@ 100
------------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()) @AT@ 7830 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:debug:["Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()] @TO@ MethodInvocation@@LOG.debug("Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()) @AT@ 7834 @LENGTH@ 96
---------------------------INS InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @TO@ SimpleName@@MethodName:debug:["Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild()] @AT@ 7840 @LENGTH@ 89
------------------------------INS StringLiteral@@"Forward operator (" @TO@ InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @AT@ 7840 @LENGTH@ 20
------------------------------INS Operator@@+ @TO@ InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @AT@ 7860 @LENGTH@ 1
------------------------------INS SimpleName@@forward @TO@ InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @AT@ 7861 @LENGTH@ 7
------------------------------INS StringLiteral@@"). Number of branches: " @TO@ InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @AT@ 7882 @LENGTH@ 25
------------------------------INS MethodInvocation@@forward.getNumChild() @TO@ InfixExpression@@"Forward operator (" + forward + "). Number of branches: "+ forward.getNumChild() @AT@ 7908 @LENGTH@ 21
---------------------------------INS SimpleName@@Name:forward @TO@ MethodInvocation@@forward.getNumChild() @AT@ 7908 @LENGTH@ 7
---------------------------------INS SimpleName@@MethodName:getNumChild:[] @TO@ MethodInvocation@@forward.getNumChild() @AT@ 7916 @LENGTH@ 13
------------------INS ExpressionStatement@@MethodInvocation:context.lastRootOfMultiChildOperator.push(context.currentRootOperator) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 7940 @LENGTH@ 71
---------------------INS MethodInvocation@@context.lastRootOfMultiChildOperator.push(context.currentRootOperator) @TO@ ExpressionStatement@@MethodInvocation:context.lastRootOfMultiChildOperator.push(context.currentRootOperator) @AT@ 7940 @LENGTH@ 70
------------------------INS QualifiedName@@Name:context.lastRootOfMultiChildOperator @TO@ MethodInvocation@@context.lastRootOfMultiChildOperator.push(context.currentRootOperator) @AT@ 7940 @LENGTH@ 36
------------------------INS SimpleName@@MethodName:push:[context.currentRootOperator] @TO@ MethodInvocation@@context.lastRootOfMultiChildOperator.push(context.currentRootOperator) @AT@ 7977 @LENGTH@ 33
---------------------------INS QualifiedName@@context.currentRootOperator @TO@ SimpleName@@MethodName:push:[context.currentRootOperator] @AT@ 7982 @LENGTH@ 27
------------------------------INS SimpleName@@context @TO@ QualifiedName@@context.currentRootOperator @AT@ 7982 @LENGTH@ 7
------------------------------INS SimpleName@@currentRootOperator @TO@ QualifiedName@@context.currentRootOperator @AT@ 7990 @LENGTH@ 19
------------------INS ExpressionStatement@@MethodInvocation:context.currentBranchCount.push(forward.getNumChild()) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 8020 @LENGTH@ 55
---------------------INS MethodInvocation@@context.currentBranchCount.push(forward.getNumChild()) @TO@ ExpressionStatement@@MethodInvocation:context.currentBranchCount.push(forward.getNumChild()) @AT@ 8020 @LENGTH@ 54
------------------------INS QualifiedName@@Name:context.currentBranchCount @TO@ MethodInvocation@@context.currentBranchCount.push(forward.getNumChild()) @AT@ 8020 @LENGTH@ 26
------------------------INS SimpleName@@MethodName:push:[forward.getNumChild()] @TO@ MethodInvocation@@context.currentBranchCount.push(forward.getNumChild()) @AT@ 8047 @LENGTH@ 27
---------------------------INS MethodInvocation@@forward.getNumChild() @TO@ SimpleName@@MethodName:push:[forward.getNumChild()] @AT@ 8052 @LENGTH@ 21
------------------------------INS SimpleName@@Name:forward @TO@ MethodInvocation@@forward.getNumChild() @AT@ 8052 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:getNumChild:[] @TO@ MethodInvocation@@forward.getNumChild() @AT@ 8060 @LENGTH@ 13
------------------INS ExpressionStatement@@MethodInvocation:context.lastWorkForMultiChildOperator.push(null) @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 8084 @LENGTH@ 49
---------------------INS MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @TO@ ExpressionStatement@@MethodInvocation:context.lastWorkForMultiChildOperator.push(null) @AT@ 8084 @LENGTH@ 48
------------------------INS QualifiedName@@Name:context.lastWorkForMultiChildOperator @TO@ MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @AT@ 8084 @LENGTH@ 37
------------------------INS SimpleName@@MethodName:push:[null] @TO@ MethodInvocation@@context.lastWorkForMultiChildOperator.push(null) @AT@ 8122 @LENGTH@ 10
---------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:push:[null] @AT@ 8127 @LENGTH@ 4
------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Object, MethodName:process, Node n, Stack<Node> s, NodeProcessorCtx procCtx, Object... os, SemanticException,  @AT@ 8142 @LENGTH@ 12
---------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8149 @LENGTH@ 4


UPD SwitchStatement@@switch (transition) {case STARTING_to_UP:{    ROOT_LOGGER.boundJndiName("ALIAS " + alias);    break;  }case START_REQUESTED_to_DOWN:{  ROOT_LOGGER.unboundJndiName("ALIAS " + alias);  break;}case REMOVING_to_REMOVED:{ROOT_LOGGER.debugf("Removed messaging object [%s]",alias);break;}} @TO@ switch (transition) {case STARTING_to_UP:{    ROOT_LOGGER.boundJndiName(alias);    break;  }case STOPPING_to_DOWN:{  ROOT_LOGGER.unboundJndiName(alias);  break;}case REMOVING_to_REMOVED:{ROOT_LOGGER.debugf("Removed messaging object [%s]",alias);break;}} @AT@ 4098 @LENGTH@ 669
---UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.boundJndiName("ALIAS " + alias) @TO@ MethodInvocation:ROOT_LOGGER.boundJndiName(alias) @AT@ 4203 @LENGTH@ 44
------UPD MethodInvocation@@ROOT_LOGGER.boundJndiName("ALIAS " + alias) @TO@ ROOT_LOGGER.boundJndiName(alias) @AT@ 4203 @LENGTH@ 43
---------UPD SimpleName@@MethodName:boundJndiName:["ALIAS " + alias] @TO@ MethodName:boundJndiName:[alias] @AT@ 4215 @LENGTH@ 31
------------DEL InfixExpression@@"ALIAS " + alias @AT@ 4229 @LENGTH@ 16
---------------DEL StringLiteral@@"ALIAS " @AT@ 4229 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 4237 @LENGTH@ 1
---------------DEL SimpleName@@alias @AT@ 4240 @LENGTH@ 5
------------INS SimpleName@@alias @TO@ SimpleName@@MethodName:boundJndiName:["ALIAS " + alias] @AT@ 4229 @LENGTH@ 5
---UPD SwitchCase@@case START_REQUESTED_to_DOWN: @TO@ case STOPPING_to_DOWN: @AT@ 4345 @LENGTH@ 29
------UPD SimpleName@@START_REQUESTED_to_DOWN @TO@ STOPPING_to_DOWN @AT@ 4350 @LENGTH@ 23
---UPD ExpressionStatement@@MethodInvocation:ROOT_LOGGER.unboundJndiName("ALIAS " + alias) @TO@ MethodInvocation:ROOT_LOGGER.unboundJndiName(alias) @AT@ 4409 @LENGTH@ 46
------UPD MethodInvocation@@ROOT_LOGGER.unboundJndiName("ALIAS " + alias) @TO@ ROOT_LOGGER.unboundJndiName(alias) @AT@ 4409 @LENGTH@ 45
---------UPD SimpleName@@MethodName:unboundJndiName:["ALIAS " + alias] @TO@ MethodName:unboundJndiName:[alias] @AT@ 4421 @LENGTH@ 33
------------INS SimpleName@@alias @TO@ SimpleName@@MethodName:unboundJndiName:["ALIAS " + alias] @AT@ 4419 @LENGTH@ 5
------------DEL InfixExpression@@"ALIAS " + alias @AT@ 4437 @LENGTH@ 16
---------------DEL StringLiteral@@"ALIAS " @AT@ 4437 @LENGTH@ 8
---------------DEL Operator@@+ @AT@ 4445 @LENGTH@ 1
---------------DEL SimpleName@@alias @AT@ 4448 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:doRecursiveDeleteAndRemove(git,getPidFile(profileDirectory,pid)) @TO@ MethodInvocation:doRecursiveDeleteAndRemove(git,new File(profileDirectory,pid)) @AT@ 27438 @LENGTH@ 67
---UPD MethodInvocation@@doRecursiveDeleteAndRemove(git,getPidFile(profileDirectory,pid)) @TO@ doRecursiveDeleteAndRemove(git,new File(profileDirectory,pid)) @AT@ 27438 @LENGTH@ 66
------UPD SimpleName@@MethodName:doRecursiveDeleteAndRemove:[git, getPidFile(profileDirectory,pid)] @TO@ MethodName:doRecursiveDeleteAndRemove:[git, new File(profileDirectory,pid)] @AT@ 27438 @LENGTH@ 66
---------DEL MethodInvocation@@getPidFile(profileDirectory,pid) @AT@ 27470 @LENGTH@ 33
------------DEL SimpleName@@MethodName:getPidFile:[profileDirectory, pid] @AT@ 27470 @LENGTH@ 33
---------------DEL SimpleName@@profileDirectory @AT@ 27481 @LENGTH@ 16
---------------DEL SimpleName@@pid @AT@ 27499 @LENGTH@ 3
---------INS ClassInstanceCreation@@File[profileDirectory, pid] @TO@ SimpleName@@MethodName:doRecursiveDeleteAndRemove:[git, getPidFile(profileDirectory,pid)] @AT@ 27470 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@File[profileDirectory, pid] @AT@ 27470 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[profileDirectory, pid] @AT@ 27474 @LENGTH@ 4
------------INS SimpleName@@profileDirectory @TO@ ClassInstanceCreation@@File[profileDirectory, pid] @AT@ 27479 @LENGTH@ 16
------------INS SimpleName@@pid @TO@ ClassInstanceCreation@@File[profileDirectory, pid] @AT@ 27497 @LENGTH@ 3


UPD IfStatement@@if (ignoredMediaTypes.contains(httpRequestMediaType)) {  continue;} @TO@ if (shouldIgnore(httpRequestMediaType)) {  continue;} @AT@ 7160 @LENGTH@ 94
---UPD MethodInvocation@@ignoredMediaTypes.contains(httpRequestMediaType) @TO@ shouldIgnore(httpRequestMediaType) @AT@ 7163 @LENGTH@ 48
------DEL SimpleName@@Name:ignoredMediaTypes @AT@ 7163 @LENGTH@ 17
------UPD SimpleName@@MethodName:contains:[httpRequestMediaType] @TO@ MethodName:shouldIgnore:[httpRequestMediaType] @AT@ 7181 @LENGTH@ 30


UPD VariableDeclarationStatement@@final FileInputStream fis=new FileInputStream(file); @TO@ final InputStream in=new BufferedInputStream(new FileInputStream(file)); @AT@ 2449 @LENGTH@ 54
---UPD SimpleType@@FileInputStream @TO@ InputStream @AT@ 2455 @LENGTH@ 15
---UPD VariableDeclarationFragment@@fis=new FileInputStream(file) @TO@ in=new BufferedInputStream(new FileInputStream(file)) @AT@ 2471 @LENGTH@ 31
------UPD SimpleName@@fis @TO@ in @AT@ 2471 @LENGTH@ 3
------DEL ClassInstanceCreation@@FileInputStream[file] @AT@ 2477 @LENGTH@ 25
------INS ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @TO@ VariableDeclarationFragment@@fis=new FileInputStream(file) @AT@ 2508 @LENGTH@ 50
---------INS New@@new @TO@ ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 2508 @LENGTH@ 3
---------INS SimpleType@@BufferedInputStream @TO@ ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 2512 @LENGTH@ 19
---------INS ClassInstanceCreation@@FileInputStream[file] @TO@ ClassInstanceCreation@@BufferedInputStream[new FileInputStream(file)] @AT@ 2532 @LENGTH@ 25
------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2477 @LENGTH@ 3
------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2481 @LENGTH@ 15
------------MOV SimpleName@@file @TO@ ClassInstanceCreation@@FileInputStream[file] @AT@ 2497 @LENGTH@ 4


UPD MethodDeclaration@@public, Group<T>, T, MethodName:createGroup, String path, Class<T> clazz,  @TO@ public, Group<T>, T extends NodeState, MethodName:createGroup, String path, Class<T> clazz,  @AT@ 1249 @LENGTH@ 128


INS FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @TO@ TypeDeclaration@@[public, abstract]QueryUtils,  @AT@ 3164 @LENGTH@ 97
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @AT@ 3164 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @AT@ 3172 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @AT@ 3179 @LENGTH@ 5
---INS SimpleType@@Pattern @TO@ FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @AT@ 3185 @LENGTH@ 7
---INS VariableDeclarationFragment@@ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @TO@ FieldDeclaration@@private, static, final, Pattern, [ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE)] @AT@ 3193 @LENGTH@ 67
------INS SimpleName@@ORDER_BY @TO@ VariableDeclarationFragment@@ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @AT@ 3193 @LENGTH@ 8
------INS MethodInvocation@@Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @TO@ VariableDeclarationFragment@@ORDER_BY=Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @AT@ 3204 @LENGTH@ 56
---------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @AT@ 3204 @LENGTH@ 7
---------INS SimpleName@@MethodName:compile:[".*order\\s+by\\s+.*", CASE_INSENSITIVE] @TO@ MethodInvocation@@Pattern.compile(".*order\\s+by\\s+.*",CASE_INSENSITIVE) @AT@ 3212 @LENGTH@ 48
------------INS StringLiteral@@".*order\\s+by\\s+.*" @TO@ SimpleName@@MethodName:compile:[".*order\\s+by\\s+.*", CASE_INSENSITIVE] @AT@ 3220 @LENGTH@ 21
------------INS SimpleName@@CASE_INSENSITIVE @TO@ SimpleName@@MethodName:compile:[".*order\\s+by\\s+.*", CASE_INSENSITIVE] @AT@ 3243 @LENGTH@ 16


UPD MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @TO@ private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName, boolean isDefaultResponse,  @AT@ 38901 @LENGTH@ 538
---UPD VariableDeclarationStatement@@ModelNode currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode(); @TO@ ModelNode currentValue; @AT@ 39091 @LENGTH@ 95
------UPD VariableDeclarationFragment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ currentValue @AT@ 39101 @LENGTH@ 84
---INS SingleVariableDeclaration@@boolean isDefaultResponse @TO@ MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @AT@ 39225 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 39225 @LENGTH@ 7
------INS SimpleName@@isDefaultResponse @TO@ SingleVariableDeclaration@@boolean isDefaultResponse @AT@ 39233 @LENGTH@ 17
---INS IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @TO@ MethodDeclaration@@private, TargetAttribute, MethodName:createTargetAttribute, AuthorizationResponseImpl authResp, String attributeName,  @AT@ 39370 @LENGTH@ 269
------INS SimpleName@@isDefaultResponse @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39374 @LENGTH@ 17
------INS Block@@ThenBody:{  currentValue=new ModelNode();} @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39393 @LENGTH@ 131
---------INS ExpressionStatement@@Assignment:currentValue=new ModelNode() @TO@ Block@@ThenBody:{  currentValue=new ModelNode();} @AT@ 39483 @LENGTH@ 31
------------INS Assignment@@currentValue=new ModelNode() @TO@ ExpressionStatement@@Assignment:currentValue=new ModelNode() @AT@ 39483 @LENGTH@ 30
---------------INS SimpleName@@currentValue @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39483 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39495 @LENGTH@ 1
---------------INS ClassInstanceCreation@@ModelNode[] @TO@ Assignment@@currentValue=new ModelNode() @AT@ 39498 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 39498 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 39502 @LENGTH@ 9
------INS Block@@ElseBody:{  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @TO@ IfStatement@@if (isDefaultResponse) {  currentValue=new ModelNode();} else {  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39530 @LENGTH@ 109
---------INS ExpressionStatement@@Assignment:currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ Block@@ElseBody:{  currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode();} @AT@ 39544 @LENGTH@ 85
------------INS Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ ExpressionStatement@@Assignment:currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39544 @LENGTH@ 84
---------------MOV ConditionalExpression@@model.has(attributeName) ? model.get(attributeName) : new ModelNode() @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39116 @LENGTH@ 69
---------------INS SimpleName@@currentValue @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39544 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@currentValue=model.has(attributeName) ? model.get(attributeName) : new ModelNode() @AT@ 39556 @LENGTH@ 1


MOV FieldDeclaration@@protected, PayloadFormat, [format] @TO@ TypeDeclaration@@[public]DefaultRestClient, AbstractClientBase[RestClient] @AT@ 2115 @LENGTH@ 31


INS MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @TO@ TypeDeclaration@@[public]Profiles,  @AT@ 1637 @LENGTH@ 506
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1637 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1644 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1651 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1651 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1655 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1662 @LENGTH@ 6
---INS SimpleName@@MethodName:getConfigurationFileNameMap @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1670 @LENGTH@ 27
---INS SingleVariableDeclaration@@Profile[] profiles @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1698 @LENGTH@ 18
------INS ArrayType@@Profile[] @TO@ SingleVariableDeclaration@@Profile[] profiles @AT@ 1698 @LENGTH@ 9
---------INS SimpleType@@Profile @TO@ ArrayType@@Profile[] @AT@ 1698 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ SingleVariableDeclaration@@Profile[] profiles @AT@ 1708 @LENGTH@ 8
---INS VariableDeclarationStatement@@Map<String,String> answer=new TreeMap<String,String>(); @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1728 @LENGTH@ 59
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> answer=new TreeMap<String,String>(); @AT@ 1728 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1728 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1732 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1740 @LENGTH@ 6
------INS VariableDeclarationFragment@@answer=new TreeMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> answer=new TreeMap<String,String>(); @AT@ 1748 @LENGTH@ 38
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=new TreeMap<String,String>() @AT@ 1748 @LENGTH@ 6
---------INS ClassInstanceCreation@@TreeMap<String,String>[] @TO@ VariableDeclarationFragment@@answer=new TreeMap<String,String>() @AT@ 1757 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@TreeMap<String,String>[] @AT@ 1757 @LENGTH@ 3
------------INS ParameterizedType@@TreeMap<String,String> @TO@ ClassInstanceCreation@@TreeMap<String,String>[] @AT@ 1761 @LENGTH@ 23
---------------INS SimpleType@@TreeMap @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 1761 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 1769 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@TreeMap<String,String> @AT@ 1777 @LENGTH@ 6
---INS EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 1796 @LENGTH@ 318
------INS SingleVariableDeclaration@@Profile profile @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @AT@ 1801 @LENGTH@ 15
---------INS SimpleType@@Profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1801 @LENGTH@ 7
---------INS SimpleName@@profile @TO@ SingleVariableDeclaration@@Profile profile @AT@ 1809 @LENGTH@ 7
------INS SimpleName@@profiles @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @AT@ 1819 @LENGTH@ 8
------INS VariableDeclarationStatement@@String id=profile.getId(); @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @AT@ 1843 @LENGTH@ 28
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id=profile.getId(); @AT@ 1843 @LENGTH@ 6
---------INS VariableDeclarationFragment@@id=profile.getId() @TO@ VariableDeclarationStatement@@String id=profile.getId(); @AT@ 1850 @LENGTH@ 20
------------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=profile.getId() @AT@ 1850 @LENGTH@ 2
------------INS MethodInvocation@@profile.getId() @TO@ VariableDeclarationFragment@@id=profile.getId() @AT@ 1855 @LENGTH@ 15
---------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getId() @AT@ 1855 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@profile.getId() @AT@ 1863 @LENGTH@ 7
------INS VariableDeclarationStatement@@List<String> files=profile.getConfigurationFileNames(); @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @AT@ 1884 @LENGTH@ 57
---------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> files=profile.getConfigurationFileNames(); @AT@ 1884 @LENGTH@ 12
------------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 1884 @LENGTH@ 4
------------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 1889 @LENGTH@ 6
---------INS VariableDeclarationFragment@@files=profile.getConfigurationFileNames() @TO@ VariableDeclarationStatement@@List<String> files=profile.getConfigurationFileNames(); @AT@ 1897 @LENGTH@ 43
------------INS SimpleName@@files @TO@ VariableDeclarationFragment@@files=profile.getConfigurationFileNames() @AT@ 1897 @LENGTH@ 5
------------INS MethodInvocation@@profile.getConfigurationFileNames() @TO@ VariableDeclarationFragment@@files=profile.getConfigurationFileNames() @AT@ 1905 @LENGTH@ 35
---------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 1905 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getConfigurationFileNames:[] @TO@ MethodInvocation@@profile.getConfigurationFileNames() @AT@ 1913 @LENGTH@ 27
------INS EnhancedForStatement@@for (String file : files) {  if (!answer.containsKey(file)) {    answer.put(file,id);  }} @TO@ EnhancedForStatement@@for (Profile profile : profiles) {  String id=profile.getId();  List<String> files=profile.getConfigurationFileNames();  for (  String file : files) {    if (!answer.containsKey(file)) {      answer.put(file,id);    }  }} @AT@ 1954 @LENGTH@ 150
---------INS SingleVariableDeclaration@@String file @TO@ EnhancedForStatement@@for (String file : files) {  if (!answer.containsKey(file)) {    answer.put(file,id);  }} @AT@ 1959 @LENGTH@ 11
------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String file @AT@ 1959 @LENGTH@ 6
------------INS SimpleName@@file @TO@ SingleVariableDeclaration@@String file @AT@ 1966 @LENGTH@ 4
---------INS SimpleName@@files @TO@ EnhancedForStatement@@for (String file : files) {  if (!answer.containsKey(file)) {    answer.put(file,id);  }} @AT@ 1973 @LENGTH@ 5
---------INS IfStatement@@if (!answer.containsKey(file)) {  answer.put(file,id);} @TO@ EnhancedForStatement@@for (String file : files) {  if (!answer.containsKey(file)) {    answer.put(file,id);  }} @AT@ 1998 @LENGTH@ 92
------------INS PrefixExpression@@!answer.containsKey(file) @TO@ IfStatement@@if (!answer.containsKey(file)) {  answer.put(file,id);} @AT@ 2002 @LENGTH@ 25
---------------INS Operator@@! @TO@ PrefixExpression@@!answer.containsKey(file) @AT@ 2002 @LENGTH@ 1
---------------INS MethodInvocation@@answer.containsKey(file) @TO@ PrefixExpression@@!answer.containsKey(file) @AT@ 2003 @LENGTH@ 24
------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.containsKey(file) @AT@ 2003 @LENGTH@ 6
------------------INS SimpleName@@MethodName:containsKey:[file] @TO@ MethodInvocation@@answer.containsKey(file) @AT@ 2010 @LENGTH@ 17
---------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:containsKey:[file] @AT@ 2022 @LENGTH@ 4
------------INS Block@@ThenBody:{  answer.put(file,id);} @TO@ IfStatement@@if (!answer.containsKey(file)) {  answer.put(file,id);} @AT@ 2029 @LENGTH@ 61
---------------INS ExpressionStatement@@MethodInvocation:answer.put(file,id) @TO@ Block@@ThenBody:{  answer.put(file,id);} @AT@ 2051 @LENGTH@ 21
------------------INS MethodInvocation@@answer.put(file,id) @TO@ ExpressionStatement@@MethodInvocation:answer.put(file,id) @AT@ 2051 @LENGTH@ 20
---------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.put(file,id) @AT@ 2051 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:put:[file, id] @TO@ MethodInvocation@@answer.put(file,id) @AT@ 2058 @LENGTH@ 13
------------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:put:[file, id] @AT@ 2062 @LENGTH@ 4
------------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:put:[file, id] @AT@ 2068 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:answer @TO@ MethodDeclaration@@public, static, Map<String,String>, MethodName:getConfigurationFileNameMap, Profile[] profiles,  @AT@ 2123 @LENGTH@ 14
------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 2130 @LENGTH@ 6


UPD CatchClause@@catch (SOAPFaultException ex) {  SOAPFault fault=ex.getFault();  Assert.assertEquals("Fault for test purpose",fault.getFaultString());  Iterator iter=fault.getFaultSubcodes();  Assert.assertTrue(iter != null);  Assert.assertTrue(iter.hasNext());  QName subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","NullPointerException"),subcode);} @TO@ catch (SOAPFaultException ex) {  SOAPFault fault=ex.getFault();  Assert.assertEquals("Fault for test purpose",fault.getFaultString());  Iterator iter=fault.getFaultSubcodes();  Assert.assertTrue(iter != null);  Assert.assertTrue(iter.hasNext());  QName subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","NullPointerException"),subcode);  Assert.assertTrue(iter.hasNext());  subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode);} @AT@ 2380 @LENGTH@ 478
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(iter.hasNext()) @TO@ CatchClause@@catch (SOAPFaultException ex) {  SOAPFault fault=ex.getFault();  Assert.assertEquals("Fault for test purpose",fault.getFaultString());  Iterator iter=fault.getFaultSubcodes();  Assert.assertTrue(iter != null);  Assert.assertTrue(iter.hasNext());  QName subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","NullPointerException"),subcode);} @AT@ 2862 @LENGTH@ 34
------INS MethodInvocation@@Assert.assertTrue(iter.hasNext()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(iter.hasNext()) @AT@ 2862 @LENGTH@ 33
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(iter.hasNext()) @AT@ 2862 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[iter.hasNext()] @TO@ MethodInvocation@@Assert.assertTrue(iter.hasNext()) @AT@ 2869 @LENGTH@ 26
------------INS MethodInvocation@@iter.hasNext() @TO@ SimpleName@@MethodName:assertTrue:[iter.hasNext()] @AT@ 2880 @LENGTH@ 14
---------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.hasNext() @AT@ 2880 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iter.hasNext() @AT@ 2885 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:subcode=(QName)iter.next() @TO@ CatchClause@@catch (SOAPFaultException ex) {  SOAPFault fault=ex.getFault();  Assert.assertEquals("Fault for test purpose",fault.getFaultString());  Iterator iter=fault.getFaultSubcodes();  Assert.assertTrue(iter != null);  Assert.assertTrue(iter.hasNext());  QName subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","NullPointerException"),subcode);} @AT@ 2910 @LENGTH@ 30
------INS Assignment@@subcode=(QName)iter.next() @TO@ ExpressionStatement@@Assignment:subcode=(QName)iter.next() @AT@ 2910 @LENGTH@ 29
---------INS SimpleName@@subcode @TO@ Assignment@@subcode=(QName)iter.next() @AT@ 2910 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@subcode=(QName)iter.next() @AT@ 2917 @LENGTH@ 1
---------INS CastExpression@@(QName)iter.next() @TO@ Assignment@@subcode=(QName)iter.next() @AT@ 2920 @LENGTH@ 19
------------INS SimpleType@@QName @TO@ CastExpression@@(QName)iter.next() @AT@ 2921 @LENGTH@ 5
------------INS MethodInvocation@@iter.next() @TO@ CastExpression@@(QName)iter.next() @AT@ 2928 @LENGTH@ 11
---------------INS SimpleName@@Name:iter @TO@ MethodInvocation@@iter.next() @AT@ 2928 @LENGTH@ 4
---------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iter.next() @AT@ 2933 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode) @TO@ CatchClause@@catch (SOAPFaultException ex) {  SOAPFault fault=ex.getFault();  Assert.assertEquals("Fault for test purpose",fault.getFaultString());  Iterator iter=fault.getFaultSubcodes();  Assert.assertTrue(iter != null);  Assert.assertTrue(iter.hasNext());  QName subcode=(QName)iter.next();  Assert.assertEquals(new QName("http://ws.gss.redhat.com/","NullPointerException"),subcode);} @AT@ 2954 @LENGTH@ 90
------INS MethodInvocation@@Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode) @AT@ 2954 @LENGTH@ 89
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode) @AT@ 2954 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[new QName("http://ws.gss.redhat.com/","OperatorNotFound"), subcode] @TO@ MethodInvocation@@Assert.assertEquals(new QName("http://ws.gss.redhat.com/","OperatorNotFound"),subcode) @AT@ 2961 @LENGTH@ 82
------------INS ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @TO@ SimpleName@@MethodName:assertEquals:[new QName("http://ws.gss.redhat.com/","OperatorNotFound"), subcode] @AT@ 2975 @LENGTH@ 58
---------------INS New@@new @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2975 @LENGTH@ 3
---------------INS SimpleType@@QName @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2979 @LENGTH@ 5
---------------INS StringLiteral@@"http://ws.gss.redhat.com/" @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 2985 @LENGTH@ 27
---------------INS StringLiteral@@"OperatorNotFound" @TO@ ClassInstanceCreation@@QName["http://ws.gss.redhat.com/", "OperatorNotFound"] @AT@ 3014 @LENGTH@ 18
------------INS SimpleName@@subcode @TO@ SimpleName@@MethodName:assertEquals:[new QName("http://ws.gss.redhat.com/","OperatorNotFound"), subcode] @AT@ 3035 @LENGTH@ 7


INS FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 14842 @LENGTH@ 77
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @AT@ 14842 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @AT@ 14849 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @AT@ 14856 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @AT@ 14862 @LENGTH@ 3
---INS VariableDeclarationFragment@@PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01 @TO@ FieldDeclaration@@public, static, final, int, [PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01] @AT@ 14866 @LENGTH@ 52
------INS SimpleName@@PARSE_MAIL_SESSION_DEFINITION_ANNOTATION @TO@ VariableDeclarationFragment@@PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01 @AT@ 14866 @LENGTH@ 40
------INS NumberLiteral@@0x2D01 @TO@ VariableDeclarationFragment@@PARSE_MAIL_SESSION_DEFINITION_ANNOTATION=0x2D01 @AT@ 14912 @LENGTH@ 6


UPD IfStatement@@if (time - lastTokenGenerationTime < 60 * 1000) {  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} @TO@ if (time - lastTokenGenerationTime < 60 * 1000) {  try {    password=getStringData(curator,CONTAINERS_NODE + "/" + container);  } catch (  KeeperException.NoNodeException ex) {  }} @AT@ 17378 @LENGTH@ 141
---UPD Block@@ThenBody:{  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} @TO@ ThenBody:{  try {    password=getStringData(curator,CONTAINERS_NODE + "/" + container);  } catch (  KeeperException.NoNodeException ex) {  }} @AT@ 17426 @LENGTH@ 93
------INS TryStatement@@try {  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} catch (KeeperException.NoNodeException ex) {} @TO@ Block@@ThenBody:{  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} @AT@ 17440 @LENGTH@ 233
---------MOV ExpressionStatement@@Assignment:password=getStringData(curator,CONTAINERS_NODE + "/" + container) @TO@ TryStatement@@try {  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} catch (KeeperException.NoNodeException ex) {} @AT@ 17440 @LENGTH@ 69
---------INS CatchClause@@catch (KeeperException.NoNodeException ex) {} @TO@ TryStatement@@try {  password=getStringData(curator,CONTAINERS_NODE + "/" + container);} catch (KeeperException.NoNodeException ex) {} @AT@ 17546 @LENGTH@ 127
------------INS SingleVariableDeclaration@@KeeperException.NoNodeException ex @TO@ CatchClause@@catch (KeeperException.NoNodeException ex) {} @AT@ 17553 @LENGTH@ 34
---------------INS SimpleType@@KeeperException.NoNodeException @TO@ SingleVariableDeclaration@@KeeperException.NoNodeException ex @AT@ 17553 @LENGTH@ 31
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@KeeperException.NoNodeException ex @AT@ 17585 @LENGTH@ 2


UPD IfStatement@@if (isPersistenceContext(annotation)) {  if (pu.getTransactionType() == PersistenceUnitTransactionType.RESOURCE_LOCAL) {    classDescription.setInvalid(MESSAGES.cannotInjectResourceLocalEntityManager());    return null;  }  AnnotationValue pcType=annotation.value("type");  PersistenceContextType type=(pcType == null || PersistenceContextType.TRANSACTION.name().equals(pcType.asString())) ? PersistenceContextType.TRANSACTION : PersistenceContextType.EXTENDED;  AnnotationValue stType=annotation.value("synchronization");  SynchronizationType synchronizationType=(stType == null || SynchronizationType.SYNCHRONIZED.name().equals(stType.asString())) ? SynchronizationType.SYNCHRONIZED : SynchronizationType.UNSYNCHRONIZED;  Map properties;  AnnotationValue value=annotation.value("properties");  AnnotationInstance[] props=value != null ? value.asNestedArray() : null;  if (props != null) {    properties=new HashMap();    for (int source=0; source < props.length; source++) {      properties.put(props[source].value("name"),props[source].value("value"));    }  } else {    properties=null;  }  return new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit,scopedPuName,injectionTypeName,pu);} else {  return new PersistenceUnitInjectionSource(puServiceName,deploymentUnit,injectionTypeName,pu);} @TO@ if (isPersistenceContext(annotation)) {  if (pu.getTransactionType() == PersistenceUnitTransactionType.RESOURCE_LOCAL) {    classDescription.setInvalid(MESSAGES.cannotInjectResourceLocalEntityManager());    return null;  }  AnnotationValue pcType=annotation.value("type");  PersistenceContextType type=(pcType == null || PersistenceContextType.TRANSACTION.name().equals(pcType.asString())) ? PersistenceContextType.TRANSACTION : PersistenceContextType.EXTENDED;  AnnotationValue stType=annotation.value("synchronization");  SynchronizationType synchronizationType=(stType == null || SynchronizationType.SYNCHRONIZED.name().equals(stType.asString())) ? SynchronizationType.SYNCHRONIZED : SynchronizationType.UNSYNCHRONIZED;  Map properties;  AnnotationValue value=annotation.value("properties");  AnnotationInstance[] props=value != null ? value.asNestedArray() : null;  if (props != null) {    properties=new HashMap();    for (int source=0; source < props.length; source++) {      properties.put(props[source].value("name"),props[source].value("value"));    }  } else {    properties=null;  }  final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY);  return new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit.getServiceRegistry(),scopedPuName,injectionTypeName,pu,jpaDeploymentSettings);} else {  return new PersistenceUnitInjectionSource(puServiceName,deploymentUnit.getServiceRegistry(),injectionTypeName,pu);} @AT@ 17793 @LENGTH@ 1704
---UPD Block@@ThenBody:{  if (pu.getTransactionType() == PersistenceUnitTransactionType.RESOURCE_LOCAL) {    classDescription.setInvalid(MESSAGES.cannotInjectResourceLocalEntityManager());    return null;  }  AnnotationValue pcType=annotation.value("type");  PersistenceContextType type=(pcType == null || PersistenceContextType.TRANSACTION.name().equals(pcType.asString())) ? PersistenceContextType.TRANSACTION : PersistenceContextType.EXTENDED;  AnnotationValue stType=annotation.value("synchronization");  SynchronizationType synchronizationType=(stType == null || SynchronizationType.SYNCHRONIZED.name().equals(stType.asString())) ? SynchronizationType.SYNCHRONIZED : SynchronizationType.UNSYNCHRONIZED;  Map properties;  AnnotationValue value=annotation.value("properties");  AnnotationInstance[] props=value != null ? value.asNestedArray() : null;  if (props != null) {    properties=new HashMap();    for (int source=0; source < props.length; source++) {      properties.put(props[source].value("name"),props[source].value("value"));    }  } else {    properties=null;  }  return new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit,scopedPuName,injectionTypeName,pu);} @TO@ ThenBody:{  if (pu.getTransactionType() == PersistenceUnitTransactionType.RESOURCE_LOCAL) {    classDescription.setInvalid(MESSAGES.cannotInjectResourceLocalEntityManager());    return null;  }  AnnotationValue pcType=annotation.value("type");  PersistenceContextType type=(pcType == null || PersistenceContextType.TRANSACTION.name().equals(pcType.asString())) ? PersistenceContextType.TRANSACTION : PersistenceContextType.EXTENDED;  AnnotationValue stType=annotation.value("synchronization");  SynchronizationType synchronizationType=(stType == null || SynchronizationType.SYNCHRONIZED.name().equals(stType.asString())) ? SynchronizationType.SYNCHRONIZED : SynchronizationType.UNSYNCHRONIZED;  Map properties;  AnnotationValue value=annotation.value("properties");  AnnotationInstance[] props=value != null ? value.asNestedArray() : null;  if (props != null) {    properties=new HashMap();    for (int source=0; source < props.length; source++) {      properties.put(props[source].value("name"),props[source].value("value"));    }  } else {    properties=null;  }  final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY);  return new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit.getServiceRegistry(),scopedPuName,injectionTypeName,pu,jpaDeploymentSettings);} @AT@ 17831 @LENGTH@ 1540
------UPD ReturnStatement@@ClassInstanceCreation:new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit,scopedPuName,injectionTypeName,pu) @TO@ ClassInstanceCreation:new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit.getServiceRegistry(),scopedPuName,injectionTypeName,pu,jpaDeploymentSettings) @AT@ 19208 @LENGTH@ 153
---------UPD ClassInstanceCreation@@PersistenceContextInjectionSource[type, synchronizationType, properties, puServiceName, deploymentUnit, scopedPuName, injectionTypeName, pu] @TO@ PersistenceContextInjectionSource[type, synchronizationType, properties, puServiceName, deploymentUnit.getServiceRegistry(), scopedPuName, injectionTypeName, pu, jpaDeploymentSettings] @AT@ 19215 @LENGTH@ 145
------------DEL SimpleName@@deploymentUnit @AT@ 19308 @LENGTH@ 14
------------INS MethodInvocation@@deploymentUnit.getServiceRegistry() @TO@ ClassInstanceCreation@@PersistenceContextInjectionSource[type, synchronizationType, properties, puServiceName, deploymentUnit, scopedPuName, injectionTypeName, pu] @AT@ 19694 @LENGTH@ 35
---------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getServiceRegistry() @AT@ 19694 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getServiceRegistry:[] @TO@ MethodInvocation@@deploymentUnit.getServiceRegistry() @AT@ 19709 @LENGTH@ 20
------------INS SimpleName@@jpaDeploymentSettings @TO@ ClassInstanceCreation@@PersistenceContextInjectionSource[type, synchronizationType, properties, puServiceName, deploymentUnit, scopedPuName, injectionTypeName, pu] @AT@ 19768 @LENGTH@ 21
------INS VariableDeclarationStatement@@final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY); @TO@ Block@@ThenBody:{  if (pu.getTransactionType() == PersistenceUnitTransactionType.RESOURCE_LOCAL) {    classDescription.setInvalid(MESSAGES.cannotInjectResourceLocalEntityManager());    return null;  }  AnnotationValue pcType=annotation.value("type");  PersistenceContextType type=(pcType == null || PersistenceContextType.TRANSACTION.name().equals(pcType.asString())) ? PersistenceContextType.TRANSACTION : PersistenceContextType.EXTENDED;  AnnotationValue stType=annotation.value("synchronization");  SynchronizationType synchronizationType=(stType == null || SynchronizationType.SYNCHRONIZED.name().equals(stType.asString())) ? SynchronizationType.SYNCHRONIZED : SynchronizationType.UNSYNCHRONIZED;  Map properties;  AnnotationValue value=annotation.value("properties");  AnnotationInstance[] props=value != null ? value.asNestedArray() : null;  if (props != null) {    properties=new HashMap();    for (int source=0; source < props.length; source++) {      properties.put(props[source].value("name"),props[source].value("value"));    }  } else {    properties=null;  }  return new PersistenceContextInjectionSource(type,synchronizationType,properties,puServiceName,deploymentUnit,scopedPuName,injectionTypeName,pu);} @AT@ 19422 @LENGTH@ 159
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY); @AT@ 19422 @LENGTH@ 5
---------INS SimpleType@@JPADeploymentSettings @TO@ VariableDeclarationStatement@@final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY); @AT@ 19428 @LENGTH@ 21
---------INS VariableDeclarationFragment@@jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @TO@ VariableDeclarationStatement@@final JPADeploymentSettings jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY); @AT@ 19450 @LENGTH@ 130
------------INS SimpleName@@jpaDeploymentSettings @TO@ VariableDeclarationFragment@@jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @AT@ 19450 @LENGTH@ 21
------------INS MethodInvocation@@DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @TO@ VariableDeclarationFragment@@jpaDeploymentSettings=DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @AT@ 19474 @LENGTH@ 106
---------------INS MethodInvocation@@MethodName:getTopDeploymentUnit:[deploymentUnit] @TO@ MethodInvocation@@DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @AT@ 19474 @LENGTH@ 52
------------------INS SimpleName@@deploymentUnit @TO@ MethodInvocation@@MethodName:getTopDeploymentUnit:[deploymentUnit] @AT@ 19511 @LENGTH@ 14
---------------INS SimpleName@@Name:DeploymentUtils @TO@ MethodInvocation@@DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @AT@ 19474 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getAttachment:[JpaAttachments.DEPLOYMENT_SETTINGS_KEY] @TO@ MethodInvocation@@DeploymentUtils.getTopDeploymentUnit(deploymentUnit).getAttachment(JpaAttachments.DEPLOYMENT_SETTINGS_KEY) @AT@ 19527 @LENGTH@ 53
------------------INS QualifiedName@@JpaAttachments.DEPLOYMENT_SETTINGS_KEY @TO@ SimpleName@@MethodName:getAttachment:[JpaAttachments.DEPLOYMENT_SETTINGS_KEY] @AT@ 19541 @LENGTH@ 38
---------------------INS SimpleName@@JpaAttachments @TO@ QualifiedName@@JpaAttachments.DEPLOYMENT_SETTINGS_KEY @AT@ 19541 @LENGTH@ 14
---------------------INS SimpleName@@DEPLOYMENT_SETTINGS_KEY @TO@ QualifiedName@@JpaAttachments.DEPLOYMENT_SETTINGS_KEY @AT@ 19556 @LENGTH@ 23
---UPD Block@@ElseBody:{  return new PersistenceUnitInjectionSource(puServiceName,deploymentUnit,injectionTypeName,pu);} @TO@ ElseBody:{  return new PersistenceUnitInjectionSource(puServiceName,deploymentUnit.getServiceRegistry(),injectionTypeName,pu);} @AT@ 19377 @LENGTH@ 120
------UPD ReturnStatement@@ClassInstanceCreation:new PersistenceUnitInjectionSource(puServiceName,deploymentUnit,injectionTypeName,pu) @TO@ ClassInstanceCreation:new PersistenceUnitInjectionSource(puServiceName,deploymentUnit.getServiceRegistry(),injectionTypeName,pu) @AT@ 19391 @LENGTH@ 96
---------UPD ClassInstanceCreation@@PersistenceUnitInjectionSource[puServiceName, deploymentUnit, injectionTypeName, pu] @TO@ PersistenceUnitInjectionSource[puServiceName, deploymentUnit.getServiceRegistry(), injectionTypeName, pu] @AT@ 19398 @LENGTH@ 88
------------DEL SimpleName@@deploymentUnit @AT@ 19448 @LENGTH@ 14
------------INS MethodInvocation@@deploymentUnit.getServiceRegistry() @TO@ ClassInstanceCreation@@PersistenceUnitInjectionSource[puServiceName, deploymentUnit, injectionTypeName, pu] @AT@ 19878 @LENGTH@ 35
---------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getServiceRegistry() @AT@ 19878 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getServiceRegistry:[] @TO@ MethodInvocation@@deploymentUnit.getServiceRegistry() @AT@ 19893 @LENGTH@ 20


MOV FieldDeclaration@@public, static, final, String, [REFLECTION_TEST_NAME="Chucky"] @TO@ TypeDeclaration@@[public, abstract]AvroConsumerTestSupport, AvroTestSupport @AT@ 2051 @LENGTH@ 59


INS ExpressionStatement@@MethodInvocation:concurrentContext.setServiceName(context.getController().getName()) @TO@ MethodDeclaration@@public, void, MethodName:start, StartContext context, StartException,  @AT@ 1824 @LENGTH@ 68
---INS MethodInvocation@@concurrentContext.setServiceName(context.getController().getName()) @TO@ ExpressionStatement@@MethodInvocation:concurrentContext.setServiceName(context.getController().getName()) @AT@ 1824 @LENGTH@ 67
------INS SimpleName@@Name:concurrentContext @TO@ MethodInvocation@@concurrentContext.setServiceName(context.getController().getName()) @AT@ 1824 @LENGTH@ 17
------INS SimpleName@@MethodName:setServiceName:[context.getController().getName()] @TO@ MethodInvocation@@concurrentContext.setServiceName(context.getController().getName()) @AT@ 1842 @LENGTH@ 49
---------INS MethodInvocation@@context.getController().getName() @TO@ SimpleName@@MethodName:setServiceName:[context.getController().getName()] @AT@ 1857 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:getController:[] @TO@ MethodInvocation@@context.getController().getName() @AT@ 1857 @LENGTH@ 23
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getController().getName() @AT@ 1857 @LENGTH@ 7
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@context.getController().getName() @AT@ 1881 @LENGTH@ 9


UPD FieldDeclaration@@protected, final, Logger, [LOG=LoggerFactory.getLogger(getClass())] @TO@ protected, final, Logger, [log=LoggerFactory.getLogger(getClass())] @AT@ 1668 @LENGTH@ 65
---UPD VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(getClass()) @TO@ log=LoggerFactory.getLogger(getClass()) @AT@ 1691 @LENGTH@ 41
------UPD SimpleName@@LOG @TO@ log @AT@ 1691 @LENGTH@ 3


UPD VariableDeclarationStatement@@byte[] data=curator.getData().forPath(path + p); @TO@ byte[] data=curator.getData().forPath(recursive ? p : path + p); @AT@ 2363 @LENGTH@ 50
---UPD VariableDeclarationFragment@@data=curator.getData().forPath(path + p) @TO@ data=curator.getData().forPath(recursive ? p : path + p) @AT@ 2370 @LENGTH@ 42
------UPD MethodInvocation@@curator.getData().forPath(path + p) @TO@ curator.getData().forPath(recursive ? p : path + p) @AT@ 2377 @LENGTH@ 35
---------UPD SimpleName@@MethodName:forPath:[path + p] @TO@ MethodName:forPath:[recursive ? p : path + p] @AT@ 2395 @LENGTH@ 17
------------INS ConditionalExpression@@recursive ? p : path + p @TO@ SimpleName@@MethodName:forPath:[path + p] @AT@ 2403 @LENGTH@ 24
---------------INS SimpleName@@recursive @TO@ ConditionalExpression@@recursive ? p : path + p @AT@ 2403 @LENGTH@ 9
---------------INS SimpleName@@p @TO@ ConditionalExpression@@recursive ? p : path + p @AT@ 2415 @LENGTH@ 1
---------------INS InfixExpression@@path + p @TO@ ConditionalExpression@@recursive ? p : path + p @AT@ 2419 @LENGTH@ 8
------------------MOV SimpleName@@path @TO@ InfixExpression@@path + p @AT@ 2403 @LENGTH@ 4
------------------MOV Operator@@+ @TO@ InfixExpression@@path + p @AT@ 2407 @LENGTH@ 1
------------------MOV SimpleName@@p @TO@ InfixExpression@@path + p @AT@ 2410 @LENGTH@ 1
------------DEL InfixExpression@@path + p @AT@ 2403 @LENGTH@ 8


UPD Block@@WhileBody:{  Property prop=it.next();  if (prop.getName().equals("host")) {    host=prop.getValue().toString();  }  if (prop.getName().equals("port")) {    port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));  }} @TO@ WhileBody:{  Property prop=it.next();  if (prop.getName().equals("host")) {    host=prop.getValue().toString();    host=ContextHost.RemoveQuotes(host);    try {      InetAddress.getByName(host);    } catch (    UnknownHostException e) {      host=null;    }  }  if (prop.getName().equals("port")) {    port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));    if (port < 1 || port > 65535)     port=0;  }} @AT@ 1618 @LENGTH@ 322
---UPD IfStatement@@if (prop.getName().equals("host")) {  host=prop.getValue().toString();} @TO@ if (prop.getName().equals("host")) {  host=prop.getValue().toString();  host=ContextHost.RemoveQuotes(host);  try {    InetAddress.getByName(host);  } catch (  UnknownHostException e) {    host=null;  }} @AT@ 1671 @LENGTH@ 101
------UPD Block@@ThenBody:{  host=prop.getValue().toString();} @TO@ ThenBody:{  host=prop.getValue().toString();  host=ContextHost.RemoveQuotes(host);  try {    InetAddress.getByName(host);  } catch (  UnknownHostException e) {    host=null;  }} @AT@ 1706 @LENGTH@ 66
---------INS TryStatement@@try {  InetAddress.getByName(host);} catch (UnknownHostException e) {  host=null;} @TO@ Block@@ThenBody:{  host=prop.getValue().toString();} @AT@ 1897 @LENGTH@ 154
------------INS ExpressionStatement@@MethodInvocation:InetAddress.getByName(host) @TO@ TryStatement@@try {  InetAddress.getByName(host);} catch (UnknownHostException e) {  host=null;} @AT@ 1922 @LENGTH@ 28
---------------INS MethodInvocation@@InetAddress.getByName(host) @TO@ ExpressionStatement@@MethodInvocation:InetAddress.getByName(host) @AT@ 1922 @LENGTH@ 27
------------------INS SimpleName@@Name:InetAddress @TO@ MethodInvocation@@InetAddress.getByName(host) @AT@ 1922 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getByName:[host] @TO@ MethodInvocation@@InetAddress.getByName(host) @AT@ 1934 @LENGTH@ 15
---------------------INS SimpleName@@host @TO@ SimpleName@@MethodName:getByName:[host] @AT@ 1944 @LENGTH@ 4
------------INS CatchClause@@catch (UnknownHostException e) {  host=null;} @TO@ TryStatement@@try {  InetAddress.getByName(host);} catch (UnknownHostException e) {  host=null;} @AT@ 1969 @LENGTH@ 82
---------------INS SingleVariableDeclaration@@UnknownHostException e @TO@ CatchClause@@catch (UnknownHostException e) {  host=null;} @AT@ 1976 @LENGTH@ 22
------------------INS SimpleType@@UnknownHostException @TO@ SingleVariableDeclaration@@UnknownHostException e @AT@ 1976 @LENGTH@ 20
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@UnknownHostException e @AT@ 1997 @LENGTH@ 1
---------------INS ExpressionStatement@@Assignment:host=null @TO@ CatchClause@@catch (UnknownHostException e) {  host=null;} @AT@ 2021 @LENGTH@ 12
------------------INS Assignment@@host=null @TO@ ExpressionStatement@@Assignment:host=null @AT@ 2021 @LENGTH@ 11
---------------------INS SimpleName@@host @TO@ Assignment@@host=null @AT@ 2021 @LENGTH@ 4
---------------------INS Operator@@= @TO@ Assignment@@host=null @AT@ 2025 @LENGTH@ 1
---------------------INS NullLiteral@@null @TO@ Assignment@@host=null @AT@ 2028 @LENGTH@ 4
---------MOV ExpressionStatement@@Assignment:host=ContextHost.RemoveQuotes(host) @TO@ Block@@ThenBody:{  host=prop.getValue().toString();} @AT@ 2081 @LENGTH@ 38
---UPD IfStatement@@if (prop.getName().equals("port")) {  port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));} @TO@ if (prop.getName().equals("port")) {  port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));  if (port < 1 || port > 65535)   port=0;} @AT@ 1785 @LENGTH@ 145
------UPD Block@@ThenBody:{  port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));} @TO@ ThenBody:{  port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));  if (port < 1 || port > 65535)   port=0;} @AT@ 1820 @LENGTH@ 110
---------INS IfStatement@@if (port < 1 || port > 65535) port=0; @TO@ Block@@ThenBody:{  port=Integer.parseInt(ContextHost.RemoveQuotes(prop.getValue().toString()));} @AT@ 2226 @LENGTH@ 54
------------INS InfixExpression@@port < 1 || port > 65535 @TO@ IfStatement@@if (port < 1 || port > 65535) port=0; @AT@ 2230 @LENGTH@ 20
---------------INS InfixExpression@@port < 1 @TO@ InfixExpression@@port < 1 || port > 65535 @AT@ 2230 @LENGTH@ 6
------------------INS SimpleName@@port @TO@ InfixExpression@@port < 1 @AT@ 2230 @LENGTH@ 4
------------------INS Operator@@< @TO@ InfixExpression@@port < 1 @AT@ 2234 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@port < 1 @AT@ 2235 @LENGTH@ 1
---------------INS Operator@@|| @TO@ InfixExpression@@port < 1 || port > 65535 @AT@ 2236 @LENGTH@ 2
---------------INS InfixExpression@@port > 65535 @TO@ InfixExpression@@port < 1 || port > 65535 @AT@ 2240 @LENGTH@ 10
------------------INS SimpleName@@port @TO@ InfixExpression@@port > 65535 @AT@ 2240 @LENGTH@ 4
------------------INS Operator@@> @TO@ InfixExpression@@port > 65535 @AT@ 2244 @LENGTH@ 1
------------------INS NumberLiteral@@65535 @TO@ InfixExpression@@port > 65535 @AT@ 2245 @LENGTH@ 5
------------INS Block@@ThenBody:port=0; @TO@ IfStatement@@if (port < 1 || port > 65535) port=0; @AT@ 2271 @LENGTH@ 9
---------------INS ExpressionStatement@@Assignment:port=0 @TO@ Block@@ThenBody:port=0; @AT@ 2271 @LENGTH@ 9
------------------INS Assignment@@port=0 @TO@ ExpressionStatement@@Assignment:port=0 @AT@ 2271 @LENGTH@ 8
---------------------INS SimpleName@@port @TO@ Assignment@@port=0 @AT@ 2271 @LENGTH@ 4
---------------------INS Operator@@= @TO@ Assignment@@port=0 @AT@ 2275 @LENGTH@ 1
---------------------INS NumberLiteral@@0 @TO@ Assignment@@port=0 @AT@ 2278 @LENGTH@ 1


UPD TypeDeclaration@@[public]PatchServiceImplTest,  @TO@ [@Ignore("[FABRIC-529] Fix fabric/fabric-core tests"), public]PatchServiceImplTest,  @AT@ 1008 @LENGTH@ 2984
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-529] Fix fabric/fabric-core tests") @TO@ TypeDeclaration@@[public]PatchServiceImplTest,  @AT@ 1033 @LENGTH@ 52


UPD IfStatement@@if (results.isEmpty()) {  throw new NoSuchJobException("Job name: " + name + " not found.");} @TO@ if (findRunningJobExecutions.isEmpty()) {  throw new NoSuchJobException("Job name: " + name + " not found.");} @AT@ 13845 @LENGTH@ 97
---UPD MethodInvocation@@results.isEmpty() @TO@ findRunningJobExecutions.isEmpty() @AT@ 13848 @LENGTH@ 17
------UPD SimpleName@@Name:results @TO@ Name:findRunningJobExecutions @AT@ 13848 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new InitialContext((Hashtable<String,Object>)environment) @TO@ ClassInstanceCreation:new InitialContext(environment) @AT@ 1665 @LENGTH@ 67
---UPD ClassInstanceCreation@@InitialContext[(Hashtable<String,Object>)environment] @TO@ InitialContext[environment] @AT@ 1672 @LENGTH@ 59
------DEL CastExpression@@(Hashtable<String,Object>)environment @AT@ 1691 @LENGTH@ 39
---------DEL ParameterizedType@@Hashtable<String,Object> @AT@ 1692 @LENGTH@ 25
------------DEL SimpleType@@Hashtable @AT@ 1692 @LENGTH@ 9
------------DEL SimpleType@@String @AT@ 1702 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 1710 @LENGTH@ 6
---------DEL SimpleName@@environment @AT@ 1719 @LENGTH@ 11
------INS SimpleName@@environment @TO@ ClassInstanceCreation@@InitialContext[(Hashtable<String,Object>)environment] @AT@ 1691 @LENGTH@ 11


UPD TypeDeclaration@@[public]TypeConverterRegistry, [Service] @TO@ [public]TypeConverterRegistry, [StaticService] @AT@ 1202 @LENGTH@ 2413
---UPD SimpleType@@Service @TO@ StaticService @AT@ 1249 @LENGTH@ 7


UPD IfStatement@@if (!query.contains("order by")) {  builder.append(" order by ");} else {  builder.append(", ");} @TO@ if (!ORDER_BY.matcher(query).matches()) {  builder.append(" order by ");} else {  builder.append(", ");} @AT@ 6325 @LENGTH@ 107
---UPD PrefixExpression@@!query.contains("order by") @TO@ !ORDER_BY.matcher(query).matches() @AT@ 6329 @LENGTH@ 27
------UPD MethodInvocation@@query.contains("order by") @TO@ ORDER_BY.matcher(query).matches() @AT@ 6330 @LENGTH@ 26
---------UPD SimpleName@@Name:query @TO@ query @AT@ 6330 @LENGTH@ 5
---------UPD SimpleName@@MethodName:contains:["order by"] @TO@ MethodName:matches:[] @AT@ 6336 @LENGTH@ 20
------------DEL StringLiteral@@"order by" @AT@ 6345 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:matcher:[query] @TO@ MethodInvocation@@query.contains("order by") @AT@ 6429 @LENGTH@ 23
------------MOV SimpleName@@Name:query @TO@ MethodInvocation@@MethodName:matcher:[query] @AT@ 6330 @LENGTH@ 5
---------INS SimpleName@@Name:ORDER_BY @TO@ MethodInvocation@@query.contains("order by") @AT@ 6429 @LENGTH@ 8


UPD MethodDeclaration@@public, List<T>, MethodName:getAggregationResult,  @TO@ public, List<T>, MethodName:getMappedResults,  @AT@ 1758 @LENGTH@ 66
---UPD SimpleName@@MethodName:getAggregationResult @TO@ MethodName:getMappedResults @AT@ 1773 @LENGTH@ 20


INS MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @TO@ TypeDeclaration@@[@Stateless, @DenyAll, @SecurityDomain("ejb3-tests"), public]DenyAllOverrideBean,  @AT@ 1682 @LENGTH@ 102
---INS Modifier@@public @TO@ MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @AT@ 1682 @LENGTH@ 6
---INS ArrayType@@String[] @TO@ MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @AT@ 1689 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1689 @LENGTH@ 6
---INS SimpleName@@MethodName:permitAllEchoWithArrayParams @TO@ MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @AT@ 1698 @LENGTH@ 28
---INS SingleVariableDeclaration@@final String[] messages @TO@ MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @AT@ 1727 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String[] messages @AT@ 1727 @LENGTH@ 5
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@final String[] messages @AT@ 1733 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1733 @LENGTH@ 6
------INS SimpleName@@messages @TO@ SingleVariableDeclaration@@final String[] messages @AT@ 1742 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:messages @TO@ MethodDeclaration@@public, String[], MethodName:permitAllEchoWithArrayParams, final String[] messages,  @AT@ 1762 @LENGTH@ 16
------INS SimpleName@@messages @TO@ ReturnStatement@@SimpleName:messages @AT@ 1769 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionTransactionIntegrationTests, AbstractConnectionTransactionIntegrationTests @AT@ 7050 @LENGTH@ 79
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7050 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7057 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvalArrayScriptError @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7062 @LENGTH@ 24
---INS ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @TO@ MethodDeclaration@@public, void, MethodName:testEvalArrayScriptError,  @AT@ 7093 @LENGTH@ 33
------INS SuperMethodInvocation@@super.testEvalArrayScriptError() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testEvalArrayScriptError() @AT@ 7093 @LENGTH@ 32
---------INS SimpleName@@MethodName:testEvalArrayScriptError:[] @TO@ SuperMethodInvocation@@super.testEvalArrayScriptError() @AT@ 7099 @LENGTH@ 24


DEL FieldDeclaration@@private, static, final, Pattern, [IGNORED_PROTOCOL_PATTERN=Pattern.compile("^(jar|war|war-i|warref|webbundle|wrap|spring|blueprint):.*$")] @AT@ 1024 @LENGTH@ 135
---DEL Modifier@@private @AT@ 1024 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1032 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1039 @LENGTH@ 5
---DEL SimpleType@@Pattern @AT@ 1045 @LENGTH@ 7
---DEL VariableDeclarationFragment@@IGNORED_PROTOCOL_PATTERN=Pattern.compile("^(jar|war|war-i|warref|webbundle|wrap|spring|blueprint):.*$") @AT@ 1053 @LENGTH@ 105
------DEL SimpleName@@IGNORED_PROTOCOL_PATTERN @AT@ 1053 @LENGTH@ 24
------DEL MethodInvocation@@Pattern.compile("^(jar|war|war-i|warref|webbundle|wrap|spring|blueprint):.*$") @AT@ 1080 @LENGTH@ 78
---------DEL SimpleName@@Name:Pattern @AT@ 1080 @LENGTH@ 7
---------DEL SimpleName@@MethodName:compile:["^(jar|war|war-i|warref|webbundle|wrap|spring|blueprint):.*$"] @AT@ 1088 @LENGTH@ 70
------------DEL StringLiteral@@"^(jar|war|war-i|warref|webbundle|wrap|spring|blueprint):.*$" @AT@ 1096 @LENGTH@ 61


INS FieldDeclaration@@private, boolean, [adminAccess] @TO@ TypeDeclaration@@[@Command(name="container-create-ssh",scope="fabric",description="Creates one or more new containers via SSH",detailedDescription="classpath:containerCreateSsh.txt"), public]ContainerCreateSsh, ContainerCreateSupport @AT@ 4144 @LENGTH@ 28
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [adminAccess] @AT@ 4144 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [adminAccess] @AT@ 4152 @LENGTH@ 7
---INS VariableDeclarationFragment@@adminAccess @TO@ FieldDeclaration@@private, boolean, [adminAccess] @AT@ 4160 @LENGTH@ 11
------INS SimpleName@@adminAccess @TO@ VariableDeclarationFragment@@adminAccess @AT@ 4160 @LENGTH@ 11


UPD Block@@ThenBody:{  ServletSecurityInfo securityInfo=new ServletSecurityInfo();  s.setServletSecurityInfo(securityInfo);  securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed());  if (servlet.getServletSecurity().getHttpMethodConstraints() != null) {    for (    HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {      securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));    }  }} @TO@ ThenBody:{  ServletSecurityInfo securityInfo=new ServletSecurityInfo();  s.setServletSecurityInfo(securityInfo);  securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed());  if (servlet.getServletSecurity().getHttpMethodConstraints() != null) {    for (    HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {      securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));    }  }} @AT@ 22346 @LENGTH@ 1441
---UPD ExpressionStatement@@MethodInvocation:securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed()) @TO@ MethodInvocation:securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed()) @AT@ 22522 @LENGTH@ 369
------UPD MethodInvocation@@securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed()) @TO@ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed()) @AT@ 22522 @LENGTH@ 368
---------UPD MethodInvocation@@MethodName:setEmptyRoleSemantic:[servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY] @TO@ MethodName:setEmptyRoleSemantic:[servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT] @AT@ 22522 @LENGTH@ 134
------------UPD ConditionalExpression@@servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY @TO@ servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT @AT@ 22556 @LENGTH@ 99
---------------UPD InfixExpression@@servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT @TO@ servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY @AT@ 22556 @LENGTH@ 83
------------------UPD QualifiedName@@EmptyRoleSemanticType.PERMIT @TO@ EmptyRoleSemanticType.DENY @AT@ 22611 @LENGTH@ 28
---------------------UPD SimpleName@@PERMIT @TO@ DENY @AT@ 22633 @LENGTH@ 6
---------------INS SimpleName@@DENY @TO@ ConditionalExpression@@servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY @AT@ 22640 @LENGTH@ 4
---------------DEL SimpleName@@DENY @AT@ 22651 @LENGTH@ 4
---UPD IfStatement@@if (servlet.getServletSecurity().getHttpMethodConstraints() != null) {  for (  HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {    securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));  }} @TO@ if (servlet.getServletSecurity().getHttpMethodConstraints() != null) {  for (  HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {    securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));  }} @AT@ 22916 @LENGTH@ 849
------UPD Block@@ThenBody:{  for (  HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {    securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));  }} @TO@ ThenBody:{  for (  HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {    securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));  }} @AT@ 22985 @LENGTH@ 780
---------UPD EnhancedForStatement@@for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {  securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));} @TO@ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) {  securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()));} @AT@ 23015 @LENGTH@ 724
------------UPD ExpressionStatement@@MethodInvocation:securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())) @TO@ MethodInvocation:securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())) @AT@ 23149 @LENGTH@ 560
---------------UPD MethodInvocation@@securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())) @TO@ securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())) @AT@ 23149 @LENGTH@ 559
------------------UPD SimpleName@@MethodName:addHttpMethodSecurityInfo:[new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())] @TO@ MethodName:addHttpMethodSecurityInfo:[new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod())] @AT@ 23162 @LENGTH@ 546
---------------------UPD MethodInvocation@@new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()) @TO@ new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()) @AT@ 23229 @LENGTH@ 478
------------------------UPD MethodInvocation@@MethodName:setEmptyRoleSemantic:[method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY] @TO@ MethodName:setEmptyRoleSemantic:[method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT] @AT@ 23229 @LENGTH@ 177
---------------------------UPD ConditionalExpression@@method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY @TO@ method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT @AT@ 23328 @LENGTH@ 77
------------------------------UPD InfixExpression@@method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT @TO@ method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY @AT@ 23328 @LENGTH@ 61
---------------------------------UPD QualifiedName@@EmptyRoleSemanticType.PERMIT @TO@ EmptyRoleSemanticType.DENY @AT@ 23361 @LENGTH@ 28
------------------------------------UPD SimpleName@@PERMIT @TO@ DENY @AT@ 23383 @LENGTH@ 6
------------------------------INS SimpleName@@DENY @TO@ ConditionalExpression@@method.getEmptyRoleSemantic() == EmptyRoleSemanticType.PERMIT ? PERMIT : DENY @AT@ 23388 @LENGTH@ 4
------------------------------DEL SimpleName@@DENY @AT@ 23401 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, String, [TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName()] @TO@ private, static, final, String, [TEST_DATA_DIR="/tmp/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName()] @AT@ 2163 @LENGTH@ 162
---UPD VariableDeclarationFragment@@TEST_DATA_DIR=System.getProperty("user.dir") + "/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName() @TO@ TEST_DATA_DIR="/tmp/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName() @AT@ 2191 @LENGTH@ 133
------UPD InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName() @TO@ "/tmp/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName() @AT@ 2207 @LENGTH@ 117
---------DEL MethodInvocation@@System.getProperty("user.dir") @AT@ 2207 @LENGTH@ 30
------------DEL SimpleName@@Name:System @AT@ 2207 @LENGTH@ 6
------------DEL SimpleName@@MethodName:getProperty:["user.dir"] @AT@ 2214 @LENGTH@ 23
---------------DEL StringLiteral@@"user.dir" @AT@ 2226 @LENGTH@ 10
---------INS StringLiteral@@"/tmp/build/test/data/" @TO@ InfixExpression@@System.getProperty("user.dir") + "/build/test/data/" + TestSequenceFileReadWrite.class.getCanonicalName() @AT@ 2219 @LENGTH@ 23
---------DEL StringLiteral@@"/build/test/data/" @AT@ 2252 @LENGTH@ 19


UPD ReturnStatement@@QualifiedName:p.configurations @TO@ ConditionalExpression:p != null ? p.configurations : Collections.<String,byte[]>emptyMap() @AT@ 7947 @LENGTH@ 24
---DEL QualifiedName@@p.configurations @AT@ 7954 @LENGTH@ 16
---INS ConditionalExpression@@p != null ? p.configurations : Collections.<String,byte[]>emptyMap() @TO@ ReturnStatement@@QualifiedName:p.configurations @AT@ 7984 @LENGTH@ 69
------INS InfixExpression@@p != null @TO@ ConditionalExpression@@p != null ? p.configurations : Collections.<String,byte[]>emptyMap() @AT@ 7984 @LENGTH@ 9
---------INS SimpleName@@p @TO@ InfixExpression@@p != null @AT@ 7984 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@p != null @AT@ 7985 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@p != null @AT@ 7989 @LENGTH@ 4
------INS QualifiedName@@p.configurations @TO@ ConditionalExpression@@p != null ? p.configurations : Collections.<String,byte[]>emptyMap() @AT@ 7996 @LENGTH@ 16
---------MOV SimpleName@@p @TO@ QualifiedName@@p.configurations @AT@ 7954 @LENGTH@ 1
---------MOV SimpleName@@configurations @TO@ QualifiedName@@p.configurations @AT@ 7956 @LENGTH@ 14
------INS MethodInvocation@@Collections.<String,byte[]>emptyMap() @TO@ ConditionalExpression@@p != null ? p.configurations : Collections.<String,byte[]>emptyMap() @AT@ 8015 @LENGTH@ 38
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String,byte[]>emptyMap() @AT@ 8015 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.<String,byte[]>emptyMap() @AT@ 8043 @LENGTH@ 10


UPD Block@@ThenBody:{  Principal p=SecurityContextAssociation.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,"UTF-8");      name+="@" + targetName;    }    byte[] username=name.getBytes("UTF-8");    Object credential=SecurityContextAssociation.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes("UTF-8");    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes("UTF-8");    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @TO@ ThenBody:{  Principal p=SecurityActions.getPrincipal();  if (p != null) {    byte[] encodedTargetName=secMech.as_context_mech.target_name;    String name=p.getName();    if (name.indexOf('@') < 0) {      byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);      String targetName=new String(decodedTargetName,"UTF-8");      name+="@" + targetName;    }    byte[] username=name.getBytes("UTF-8");    Object credential=SecurityActions.getCredential();    byte[] password={};    if (credential instanceof char[]) {      String tmp=new String((char[])credential);      password=tmp.getBytes("UTF-8");    } else     if (credential instanceof byte[])     password=(byte[])credential; else     if (credential != null) {      String tmp=credential.toString();      password=tmp.getBytes("UTF-8");    }    InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);    byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);    EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);    SASContextBody contextBody=new SASContextBody();    contextBody.establish_msg(message);    Any any=ORB.init().create_any();    SASContextBodyHelper.insert(any,contextBody);    ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));    ri.add_request_service_context(sc,true);  }} @AT@ 3870 @LENGTH@ 2714
---UPD VariableDeclarationStatement@@Principal p=SecurityContextAssociation.getPrincipal(); @TO@ Principal p=SecurityActions.getPrincipal(); @AT@ 3888 @LENGTH@ 56
------UPD VariableDeclarationFragment@@p=SecurityContextAssociation.getPrincipal() @TO@ p=SecurityActions.getPrincipal() @AT@ 3898 @LENGTH@ 45
---------UPD MethodInvocation@@SecurityContextAssociation.getPrincipal() @TO@ SecurityActions.getPrincipal() @AT@ 3902 @LENGTH@ 41
------------UPD SimpleName@@Name:SecurityContextAssociation @TO@ Name:SecurityActions @AT@ 3902 @LENGTH@ 26
---UPD IfStatement@@if (p != null) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityContextAssociation.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @TO@ if (p != null) {  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @AT@ 3961 @LENGTH@ 2609
------UPD Block@@ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityContextAssociation.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @TO@ ThenBody:{  byte[] encodedTargetName=secMech.as_context_mech.target_name;  String name=p.getName();  if (name.indexOf('@') < 0) {    byte[] decodedTargetName=CSIv2Util.decodeGssExportedName(encodedTargetName);    String targetName=new String(decodedTargetName,"UTF-8");    name+="@" + targetName;  }  byte[] username=name.getBytes("UTF-8");  Object credential=SecurityActions.getCredential();  byte[] password={};  if (credential instanceof char[]) {    String tmp=new String((char[])credential);    password=tmp.getBytes("UTF-8");  } else   if (credential instanceof byte[])   password=(byte[])credential; else   if (credential != null) {    String tmp=credential.toString();    password=tmp.getBytes("UTF-8");  }  InitialContextToken authenticationToken=new InitialContextToken(username,password,encodedTargetName);  byte[] encodedAuthenticationToken=CSIv2Util.encodeInitialContextToken(authenticationToken,codec);  EstablishContext message=new EstablishContext(0,noAuthorizationToken,absentIdentityToken,encodedAuthenticationToken);  SASContextBody contextBody=new SASContextBody();  contextBody.establish_msg(message);  Any any=ORB.init().create_any();  SASContextBodyHelper.insert(any,contextBody);  ServiceContext sc=new ServiceContext(sasContextId,codec.encode_value(any));  ri.add_request_service_context(sc,true);} @AT@ 3976 @LENGTH@ 2594
---------UPD VariableDeclarationStatement@@Object credential=SecurityContextAssociation.getCredential(); @TO@ Object credential=SecurityActions.getCredential(); @AT@ 4674 @LENGTH@ 63
------------UPD VariableDeclarationFragment@@credential=SecurityContextAssociation.getCredential() @TO@ credential=SecurityActions.getCredential() @AT@ 4681 @LENGTH@ 55
---------------UPD MethodInvocation@@SecurityContextAssociation.getCredential() @TO@ SecurityActions.getCredential() @AT@ 4694 @LENGTH@ 42
------------------UPD SimpleName@@Name:SecurityContextAssociation @TO@ Name:SecurityActions @AT@ 4694 @LENGTH@ 26


UPD VariableDeclarationStatement@@OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null); @TO@ OAuth2Request clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null); @AT@ 4921 @LENGTH@ 161
---UPD VariableDeclarationFragment@@clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null) @TO@ clientAuthentication=RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null) @AT@ 4935 @LENGTH@ 146
------UPD MethodInvocation@@RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null) @TO@ RequestTokenFactory.createOAuth2Request(null,"foo",null,false,Collections.singleton("ns_admin:read"),null,null,null,null) @AT@ 4958 @LENGTH@ 123
---------UPD SimpleName@@MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null] @TO@ MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null, null] @AT@ 4978 @LENGTH@ 103
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createOAuth2Request:[null, "foo", null, false, Collections.singleton("ns_admin:read"), null, null, null] @AT@ 5088 @LENGTH@ 4


UPD IfStatement@@if (myWork != null) {  TezWork tezWork=context.currentTask.getWork();  tezWork.connect(parentWork,myWork,EdgeType.BROADCAST_EDGE);} else {  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @TO@ if (myWork != null) {  TezWork tezWork=context.currentTask.getWork();  tezWork.connect(parentWork,myWork,EdgeType.BROADCAST_EDGE);  parentRS.getConf().setOutputName(myWork.getName());} else {  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);  List<ReduceSinkOperator> reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork);  if (reduceSinks == null) {    reduceSinks=new ArrayList<ReduceSinkOperator>();  }  reduceSinks.add(parentRS);  context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks);} @AT@ 3876 @LENGTH@ 565
---UPD Block@@ThenBody:{  TezWork tezWork=context.currentTask.getWork();  tezWork.connect(parentWork,myWork,EdgeType.BROADCAST_EDGE);} @TO@ ThenBody:{  TezWork tezWork=context.currentTask.getWork();  tezWork.connect(parentWork,myWork,EdgeType.BROADCAST_EDGE);  parentRS.getConf().setOutputName(myWork.getName());} @AT@ 3896 @LENGTH@ 240
------INS ExpressionStatement@@MethodInvocation:parentRS.getConf().setOutputName(myWork.getName()) @TO@ Block@@ThenBody:{  TezWork tezWork=context.currentTask.getWork();  tezWork.connect(parentWork,myWork,EdgeType.BROADCAST_EDGE);} @AT@ 4195 @LENGTH@ 51
---------INS MethodInvocation@@parentRS.getConf().setOutputName(myWork.getName()) @TO@ ExpressionStatement@@MethodInvocation:parentRS.getConf().setOutputName(myWork.getName()) @AT@ 4195 @LENGTH@ 50
------------INS MethodInvocation@@MethodName:getConf:[] @TO@ MethodInvocation@@parentRS.getConf().setOutputName(myWork.getName()) @AT@ 4195 @LENGTH@ 18
------------INS SimpleName@@Name:parentRS @TO@ MethodInvocation@@parentRS.getConf().setOutputName(myWork.getName()) @AT@ 4195 @LENGTH@ 8
------------INS SimpleName@@MethodName:setOutputName:[myWork.getName()] @TO@ MethodInvocation@@parentRS.getConf().setOutputName(myWork.getName()) @AT@ 4214 @LENGTH@ 31
---------------INS MethodInvocation@@myWork.getName() @TO@ SimpleName@@MethodName:setOutputName:[myWork.getName()] @AT@ 4228 @LENGTH@ 16
------------------INS SimpleName@@Name:myWork @TO@ MethodInvocation@@myWork.getName() @AT@ 4228 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@myWork.getName() @AT@ 4235 @LENGTH@ 9
---UPD Block@@ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @TO@ ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);  List<ReduceSinkOperator> reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork);  if (reduceSinks == null) {    reduceSinks=new ArrayList<ReduceSinkOperator>();  }  reduceSinks.add(parentRS);  context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks);} @AT@ 4142 @LENGTH@ 299
------INS VariableDeclarationStatement@@List<ReduceSinkOperator> reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork); @TO@ Block@@ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @AT@ 4564 @LENGTH@ 102
---------INS ParameterizedType@@List<ReduceSinkOperator> @TO@ VariableDeclarationStatement@@List<ReduceSinkOperator> reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork); @AT@ 4564 @LENGTH@ 24
------------INS SimpleType@@List @TO@ ParameterizedType@@List<ReduceSinkOperator> @AT@ 4564 @LENGTH@ 4
------------INS SimpleType@@ReduceSinkOperator @TO@ ParameterizedType@@List<ReduceSinkOperator> @AT@ 4569 @LENGTH@ 18
---------INS VariableDeclarationFragment@@reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork) @TO@ VariableDeclarationStatement@@List<ReduceSinkOperator> reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork); @AT@ 4589 @LENGTH@ 76
------------INS SimpleName@@reduceSinks @TO@ VariableDeclarationFragment@@reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork) @AT@ 4589 @LENGTH@ 11
------------INS MethodInvocation@@context.linkWorkWithReduceSinkMap.get(parentWork) @TO@ VariableDeclarationFragment@@reduceSinks=context.linkWorkWithReduceSinkMap.get(parentWork) @AT@ 4616 @LENGTH@ 49
---------------INS QualifiedName@@Name:context.linkWorkWithReduceSinkMap @TO@ MethodInvocation@@context.linkWorkWithReduceSinkMap.get(parentWork) @AT@ 4616 @LENGTH@ 33
---------------INS SimpleName@@MethodName:get:[parentWork] @TO@ MethodInvocation@@context.linkWorkWithReduceSinkMap.get(parentWork) @AT@ 4650 @LENGTH@ 15
------------------INS SimpleName@@parentWork @TO@ SimpleName@@MethodName:get:[parentWork] @AT@ 4654 @LENGTH@ 10
------INS IfStatement@@if (reduceSinks == null) {  reduceSinks=new ArrayList<ReduceSinkOperator>();} @TO@ Block@@ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @AT@ 4677 @LENGTH@ 101
---------INS InfixExpression@@reduceSinks == null @TO@ IfStatement@@if (reduceSinks == null) {  reduceSinks=new ArrayList<ReduceSinkOperator>();} @AT@ 4681 @LENGTH@ 19
------------INS SimpleName@@reduceSinks @TO@ InfixExpression@@reduceSinks == null @AT@ 4681 @LENGTH@ 11
------------INS Operator@@== @TO@ InfixExpression@@reduceSinks == null @AT@ 4692 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@reduceSinks == null @AT@ 4696 @LENGTH@ 4
---------INS Block@@ThenBody:{  reduceSinks=new ArrayList<ReduceSinkOperator>();} @TO@ IfStatement@@if (reduceSinks == null) {  reduceSinks=new ArrayList<ReduceSinkOperator>();} @AT@ 4702 @LENGTH@ 76
------------INS ExpressionStatement@@Assignment:reduceSinks=new ArrayList<ReduceSinkOperator>() @TO@ Block@@ThenBody:{  reduceSinks=new ArrayList<ReduceSinkOperator>();} @AT@ 4716 @LENGTH@ 50
---------------INS Assignment@@reduceSinks=new ArrayList<ReduceSinkOperator>() @TO@ ExpressionStatement@@Assignment:reduceSinks=new ArrayList<ReduceSinkOperator>() @AT@ 4716 @LENGTH@ 49
------------------INS SimpleName@@reduceSinks @TO@ Assignment@@reduceSinks=new ArrayList<ReduceSinkOperator>() @AT@ 4716 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@reduceSinks=new ArrayList<ReduceSinkOperator>() @AT@ 4727 @LENGTH@ 1
------------------INS ClassInstanceCreation@@ArrayList<ReduceSinkOperator>[] @TO@ Assignment@@reduceSinks=new ArrayList<ReduceSinkOperator>() @AT@ 4730 @LENGTH@ 35
---------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<ReduceSinkOperator>[] @AT@ 4730 @LENGTH@ 3
---------------------INS ParameterizedType@@ArrayList<ReduceSinkOperator> @TO@ ClassInstanceCreation@@ArrayList<ReduceSinkOperator>[] @AT@ 4734 @LENGTH@ 29
------------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<ReduceSinkOperator> @AT@ 4734 @LENGTH@ 9
------------------------INS SimpleType@@ReduceSinkOperator @TO@ ParameterizedType@@ArrayList<ReduceSinkOperator> @AT@ 4744 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:reduceSinks.add(parentRS) @TO@ Block@@ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @AT@ 4789 @LENGTH@ 26
---------INS MethodInvocation@@reduceSinks.add(parentRS) @TO@ ExpressionStatement@@MethodInvocation:reduceSinks.add(parentRS) @AT@ 4789 @LENGTH@ 25
------------INS SimpleName@@Name:reduceSinks @TO@ MethodInvocation@@reduceSinks.add(parentRS) @AT@ 4789 @LENGTH@ 11
------------INS SimpleName@@MethodName:add:[parentRS] @TO@ MethodInvocation@@reduceSinks.add(parentRS) @AT@ 4801 @LENGTH@ 13
---------------INS SimpleName@@parentRS @TO@ SimpleName@@MethodName:add:[parentRS] @AT@ 4805 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks) @TO@ Block@@ElseBody:{  List<BaseWork> linkWorkList=context.linkOpWithWorkMap.get(childOp);  if (linkWorkList == null) {    linkWorkList=new ArrayList<BaseWork>();  }  linkWorkList.add(parentWork);  context.linkOpWithWorkMap.put(childOp,linkWorkList);} @AT@ 4826 @LENGTH@ 63
---------INS MethodInvocation@@context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks) @TO@ ExpressionStatement@@MethodInvocation:context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks) @AT@ 4826 @LENGTH@ 62
------------INS QualifiedName@@Name:context.linkWorkWithReduceSinkMap @TO@ MethodInvocation@@context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks) @AT@ 4826 @LENGTH@ 33
------------INS SimpleName@@MethodName:put:[parentWork, reduceSinks] @TO@ MethodInvocation@@context.linkWorkWithReduceSinkMap.put(parentWork,reduceSinks) @AT@ 4860 @LENGTH@ 28
---------------INS SimpleName@@parentWork @TO@ SimpleName@@MethodName:put:[parentWork, reduceSinks] @AT@ 4864 @LENGTH@ 10
---------------INS SimpleName@@reduceSinks @TO@ SimpleName@@MethodName:put:[parentWork, reduceSinks] @AT@ 4876 @LENGTH@ 11


UPD CatchClause@@catch (Exception e) {  callback.rollback();  throw rethrowException(e);} @TO@ catch (Exception e) {  e.printStackTrace();  callback.rollback();  throw rethrowException(e);} @AT@ 5184 @LENGTH@ 103
---INS ExpressionStatement@@MethodInvocation:e.printStackTrace() @TO@ CatchClause@@catch (Exception e) {  callback.rollback();  throw rethrowException(e);} @AT@ 5218 @LENGTH@ 20
------INS MethodInvocation@@e.printStackTrace() @TO@ ExpressionStatement@@MethodInvocation:e.printStackTrace() @AT@ 5218 @LENGTH@ 19
---------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.printStackTrace() @AT@ 5218 @LENGTH@ 1
---------INS SimpleName@@MethodName:printStackTrace:[] @TO@ MethodInvocation@@e.printStackTrace() @AT@ 5220 @LENGTH@ 17


MOV ExpressionStatement@@MethodInvocation:decrementJobCounter(getScheduler()) @TO@ MethodDeclaration@@public, void, MethodName:pauseJob, Trigger trigger, SchedulerException,  @AT@ 11557 @LENGTH@ 36


UPD MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @TO@ protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context, ModelNode operation,  @AT@ 1672 @LENGTH@ 536
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 1869 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1869 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 1879 @LENGTH@ 9
---INS IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ MethodDeclaration@@protected, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 2085 @LENGTH@ 138
------INS InfixExpression@@control == null @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2089 @LENGTH@ 15
---------INS SimpleName@@control @TO@ InfixExpression@@control == null @AT@ 2089 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@control == null @AT@ 2096 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@control == null @AT@ 2100 @LENGTH@ 4
------INS Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @TO@ IfStatement@@if (control == null) {  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2106 @LENGTH@ 117
---------INS ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2120 @LENGTH@ 73
------------INS MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @TO@ ExpressionStatement@@MethodInvocation:ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2120 @LENGTH@ 72
---------------INS SimpleName@@Name:ManagementUtil @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2120 @LENGTH@ 14
---------------INS SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @TO@ MethodInvocation@@ManagementUtil.rollbackOperationWithResourceNotFound(context,operation) @AT@ 2135 @LENGTH@ 57
------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2173 @LENGTH@ 7
------------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:rollbackOperationWithResourceNotFound:[context, operation] @AT@ 2182 @LENGTH@ 9
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ManagementUtil.rollbackOperationWithResourceNotFound(context,operation);  return;} @AT@ 2206 @LENGTH@ 7


UPD VariableDeclarationStatement@@OAuth2Request storedOAuth2Request=getRequestFactory().createStoredTokenRequest(clientToken); @TO@ OAuth2Request storedOAuth2Request=getRequestFactory().createOAuth2Request(clientToken); @AT@ 2155 @LENGTH@ 94
---UPD VariableDeclarationFragment@@storedOAuth2Request=getRequestFactory().createStoredTokenRequest(clientToken) @TO@ storedOAuth2Request=getRequestFactory().createOAuth2Request(clientToken) @AT@ 2169 @LENGTH@ 79
------UPD MethodInvocation@@getRequestFactory().createStoredTokenRequest(clientToken) @TO@ getRequestFactory().createOAuth2Request(clientToken) @AT@ 2191 @LENGTH@ 57
---------UPD SimpleName@@MethodName:createStoredTokenRequest:[clientToken] @TO@ MethodName:createOAuth2Request:[clientToken] @AT@ 2211 @LENGTH@ 37


UPD CatchClause@@catch (IOException e) {  throw new CommandLineException("Unable to apply patch",e);} @TO@ catch (Exception e) {  throw new CommandLineException("Unable to apply patch",e);} @AT@ 7878 @LENGTH@ 105
---UPD SingleVariableDeclaration@@IOException e @TO@ Exception e @AT@ 7885 @LENGTH@ 13
------UPD SimpleType@@IOException @TO@ Exception @AT@ 7885 @LENGTH@ 11


UPD MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @TO@ public, String, MethodName:resolve, Map<String,Map<String,String>> configs, String pid, String key, String value,  @AT@ 1172 @LENGTH@ 60
---INS SingleVariableDeclaration@@Map<String,Map<String,String>> configs @TO@ MethodDeclaration@@public, String, MethodName:resolve, String pid, String key, String value,  @AT@ 1217 @LENGTH@ 40
------INS ParameterizedType@@Map<String,Map<String,String>> @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 1217 @LENGTH@ 32
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1217 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1221 @LENGTH@ 6
---------INS ParameterizedType@@Map<String,String> @TO@ ParameterizedType@@Map<String,Map<String,String>> @AT@ 1229 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1229 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1233 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1241 @LENGTH@ 6
------INS SimpleName@@configs @TO@ SingleVariableDeclaration@@Map<String,Map<String,String>> configs @AT@ 1250 @LENGTH@ 7


UPD VariableDeclarationStatement@@Module module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)); @TO@ Module module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)); @AT@ 9458 @LENGTH@ 92
---UPD VariableDeclarationFragment@@module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)) @TO@ module=Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)) @AT@ 9465 @LENGTH@ 84
------UPD MethodInvocation@@Module.getModuleFromCallerModuleLoader(ModuleIdentifier.create(moduleName)) @TO@ Module.getModuleFromCallerModuleLoader(ModuleIdentifier.fromString(moduleName)) @AT@ 9474 @LENGTH@ 75
---------UPD SimpleName@@MethodName:getModuleFromCallerModuleLoader:[ModuleIdentifier.create(moduleName)] @TO@ MethodName:getModuleFromCallerModuleLoader:[ModuleIdentifier.fromString(moduleName)] @AT@ 9481 @LENGTH@ 68
------------UPD MethodInvocation@@ModuleIdentifier.create(moduleName) @TO@ ModuleIdentifier.fromString(moduleName) @AT@ 9513 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:create:[moduleName] @TO@ MethodName:fromString:[moduleName] @AT@ 9530 @LENGTH@ 18


DEL ExpressionStatement@@Assignment:this.single=true @AT@ 1495 @LENGTH@ 19
---DEL Assignment@@this.single=true @AT@ 1495 @LENGTH@ 18
------DEL FieldAccess@@this.single @AT@ 1495 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1495 @LENGTH@ 4
---------DEL SimpleName@@single @AT@ 1500 @LENGTH@ 6
------DEL Operator@@= @AT@ 1506 @LENGTH@ 1
------DEL BooleanLiteral@@true @AT@ 1509 @LENGTH@ 4


INS MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @TO@ TypeDeclaration@@[public]PatchContentProvider,  @AT@ 419 @LENGTH@ 25
---INS SimpleType@@File @TO@ MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @AT@ 414 @LENGTH@ 4
---INS SimpleName@@MethodName:getPatchContentRootDir @TO@ MethodDeclaration@@File, MethodName:getPatchContentRootDir,  @AT@ 419 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:copySubject.getPrincipals().add(new AccessMechanismPrincipal(AccessMechanism.JMX)) @TO@ MethodInvocation:copySubject.getPrincipals().add(new AccessMechanismPrincipal(AccessMechanism.NATIVE)) @AT@ 8156 @LENGTH@ 83
---UPD MethodInvocation@@copySubject.getPrincipals().add(new AccessMechanismPrincipal(AccessMechanism.JMX)) @TO@ copySubject.getPrincipals().add(new AccessMechanismPrincipal(AccessMechanism.NATIVE)) @AT@ 8156 @LENGTH@ 82
------UPD SimpleName@@MethodName:add:[new AccessMechanismPrincipal(AccessMechanism.JMX)] @TO@ MethodName:add:[new AccessMechanismPrincipal(AccessMechanism.NATIVE)] @AT@ 8184 @LENGTH@ 54
---------UPD ClassInstanceCreation@@AccessMechanismPrincipal[AccessMechanism.JMX] @TO@ AccessMechanismPrincipal[AccessMechanism.NATIVE] @AT@ 8188 @LENGTH@ 49
------------UPD QualifiedName@@AccessMechanism.JMX @TO@ AccessMechanism.NATIVE @AT@ 8217 @LENGTH@ 19
---------------UPD SimpleName@@JMX @TO@ NATIVE @AT@ 8233 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testLastSave,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 62467 @LENGTH@ 140
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62467 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62474 @LENGTH@ 4
---INS SimpleName@@MethodName:testLastSave @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62479 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.lastSave()) @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62498 @LENGTH@ 34
------INS MethodInvocation@@actual.add(connection.lastSave()) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.lastSave()) @AT@ 62498 @LENGTH@ 33
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.lastSave()) @AT@ 62498 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.lastSave()] @TO@ MethodInvocation@@actual.add(connection.lastSave()) @AT@ 62505 @LENGTH@ 26
------------INS MethodInvocation@@connection.lastSave() @TO@ SimpleName@@MethodName:add:[connection.lastSave()] @AT@ 62509 @LENGTH@ 21
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.lastSave() @AT@ 62509 @LENGTH@ 10
---------------INS SimpleName@@MethodName:lastSave:[] @TO@ MethodInvocation@@connection.lastSave() @AT@ 62520 @LENGTH@ 10
---INS VariableDeclarationStatement@@List<Object> results=getResults(); @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62535 @LENGTH@ 36
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> results=getResults(); @AT@ 62535 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 62535 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 62540 @LENGTH@ 6
------INS VariableDeclarationFragment@@results=getResults() @TO@ VariableDeclarationStatement@@List<Object> results=getResults(); @AT@ 62548 @LENGTH@ 22
---------INS SimpleName@@results @TO@ VariableDeclarationFragment@@results=getResults() @AT@ 62548 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:getResults:[] @TO@ VariableDeclarationFragment@@results=getResults() @AT@ 62558 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull(results.get(0)) @TO@ MethodDeclaration@@public, void, MethodName:testLastSave,  @AT@ 62574 @LENGTH@ 30
------INS MethodInvocation@@assertNotNull(results.get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(results.get(0)) @AT@ 62574 @LENGTH@ 29
---------INS SimpleName@@MethodName:assertNotNull:[results.get(0)] @TO@ MethodInvocation@@assertNotNull(results.get(0)) @AT@ 62574 @LENGTH@ 29
------------INS MethodInvocation@@results.get(0) @TO@ SimpleName@@MethodName:assertNotNull:[results.get(0)] @AT@ 62588 @LENGTH@ 14
---------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.get(0) @AT@ 62588 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@results.get(0) @AT@ 62596 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 62600 @LENGTH@ 1


INS MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @TO@ TypeDeclaration@@[public]MethodInfo,  @AT@ 16403 @LENGTH@ 466
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @AT@ 16403 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @AT@ 16410 @LENGTH@ 7
---INS SimpleName@@MethodName:isCovariantWith @TO@ MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @AT@ 16418 @LENGTH@ 15
---INS SingleVariableDeclaration@@MethodInfo method @TO@ MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @AT@ 16434 @LENGTH@ 17
------INS SimpleType@@MethodInfo @TO@ SingleVariableDeclaration@@MethodInfo method @AT@ 16434 @LENGTH@ 10
------INS SimpleName@@method @TO@ SingleVariableDeclaration@@MethodInfo method @AT@ 16445 @LENGTH@ 6
---INS ReturnStatement@@InfixExpression:method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @TO@ MethodDeclaration@@public, boolean, MethodName:isCovariantWith, MethodInfo method,  @AT@ 16463 @LENGTH@ 400
------INS InfixExpression@@method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @TO@ ReturnStatement@@InfixExpression:method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16483 @LENGTH@ 379
---------INS MethodInvocation@@method.getMethod().getName().equals(this.getMethod().getName()) @TO@ InfixExpression@@method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16483 @LENGTH@ 63
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@method.getMethod().getName().equals(this.getMethod().getName()) @AT@ 16483 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@method.getMethod().getName().equals(this.getMethod().getName()) @AT@ 16483 @LENGTH@ 18
------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getMethod().getName().equals(this.getMethod().getName()) @AT@ 16483 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[this.getMethod().getName()] @TO@ MethodInvocation@@method.getMethod().getName().equals(this.getMethod().getName()) @AT@ 16512 @LENGTH@ 34
---------------INS MethodInvocation@@this.getMethod().getName() @TO@ SimpleName@@MethodName:equals:[this.getMethod().getName()] @AT@ 16519 @LENGTH@ 26
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.getMethod().getName() @AT@ 16519 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getMethod().getName() @AT@ 16519 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@this.getMethod().getName() @AT@ 16536 @LENGTH@ 9
---------INS Operator@@&& @TO@ InfixExpression@@method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16546 @LENGTH@ 2
---------INS ParenthesizedExpression@@(method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) @TO@ InfixExpression@@method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16562 @LENGTH@ 188
------------INS InfixExpression@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @TO@ ParenthesizedExpression@@(method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) @AT@ 16563 @LENGTH@ 186
---------------INS MethodInvocation@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) @TO@ InfixExpression@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16563 @LENGTH@ 85
------------------INS MethodInvocation@@MethodName:getReturnType:[] @TO@ MethodInvocation@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) @AT@ 16563 @LENGTH@ 34
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) @AT@ 16563 @LENGTH@ 18
------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) @AT@ 16563 @LENGTH@ 6
------------------INS SimpleName@@MethodName:isAssignableFrom:[this.getMethod().getReturnType()] @TO@ MethodInvocation@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) @AT@ 16598 @LENGTH@ 50
---------------------INS MethodInvocation@@this.getMethod().getReturnType() @TO@ SimpleName@@MethodName:isAssignableFrom:[this.getMethod().getReturnType()] @AT@ 16615 @LENGTH@ 32
------------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.getMethod().getReturnType() @AT@ 16615 @LENGTH@ 16
------------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getMethod().getReturnType() @AT@ 16615 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getReturnType:[] @TO@ MethodInvocation@@this.getMethod().getReturnType() @AT@ 16632 @LENGTH@ 15
---------------INS Operator@@|| @TO@ InfixExpression@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16648 @LENGTH@ 2
---------------INS MethodInvocation@@this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @TO@ InfixExpression@@method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16664 @LENGTH@ 85
------------------INS MethodInvocation@@MethodName:getReturnType:[] @TO@ MethodInvocation@@this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16664 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16664 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16664 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isAssignableFrom:[method.getMethod().getReturnType()] @TO@ MethodInvocation@@this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType()) @AT@ 16697 @LENGTH@ 52
---------------------INS MethodInvocation@@method.getMethod().getReturnType() @TO@ SimpleName@@MethodName:isAssignableFrom:[method.getMethod().getReturnType()] @AT@ 16714 @LENGTH@ 34
------------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@method.getMethod().getReturnType() @AT@ 16714 @LENGTH@ 18
------------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getMethod().getReturnType() @AT@ 16714 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getReturnType:[] @TO@ MethodInvocation@@method.getMethod().getReturnType() @AT@ 16733 @LENGTH@ 15
---------INS MethodInvocation@@Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @TO@ InfixExpression@@method.getMethod().getName().equals(this.getMethod().getName()) && (method.getMethod().getReturnType().isAssignableFrom(this.getMethod().getReturnType()) || this.getMethod().getReturnType().isAssignableFrom(method.getMethod().getReturnType())) && Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16767 @LENGTH@ 95
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16767 @LENGTH@ 6
------------INS SimpleName@@MethodName:deepEquals:[method.getMethod().getParameterTypes(), this.getMethod().getParameterTypes()] @TO@ MethodInvocation@@Arrays.deepEquals(method.getMethod().getParameterTypes(),this.getMethod().getParameterTypes()) @AT@ 16774 @LENGTH@ 88
---------------INS MethodInvocation@@method.getMethod().getParameterTypes() @TO@ SimpleName@@MethodName:deepEquals:[method.getMethod().getParameterTypes(), this.getMethod().getParameterTypes()] @AT@ 16785 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@method.getMethod().getParameterTypes() @AT@ 16785 @LENGTH@ 18
------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getMethod().getParameterTypes() @AT@ 16785 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@method.getMethod().getParameterTypes() @AT@ 16804 @LENGTH@ 19
---------------INS MethodInvocation@@this.getMethod().getParameterTypes() @TO@ SimpleName@@MethodName:deepEquals:[method.getMethod().getParameterTypes(), this.getMethod().getParameterTypes()] @AT@ 16825 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.getMethod().getParameterTypes() @AT@ 16825 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getMethod().getParameterTypes() @AT@ 16825 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@this.getMethod().getParameterTypes() @AT@ 16842 @LENGTH@ 19


UPD VariableDeclarationStatement@@final File f=new File(ctx.getCurrentDir(),resourceArr[i]); @TO@ final File f=new File(resourceArr[i]); @AT@ 10662 @LENGTH@ 61
---UPD VariableDeclarationFragment@@f=new File(ctx.getCurrentDir(),resourceArr[i]) @TO@ f=new File(resourceArr[i]) @AT@ 10673 @LENGTH@ 49
------UPD ClassInstanceCreation@@File[ctx.getCurrentDir(), resourceArr[i]] @TO@ File[resourceArr[i]] @AT@ 10677 @LENGTH@ 45
---------DEL MethodInvocation@@ctx.getCurrentDir() @AT@ 10686 @LENGTH@ 19
------------DEL SimpleName@@Name:ctx @AT@ 10686 @LENGTH@ 3
------------DEL SimpleName@@MethodName:getCurrentDir:[] @AT@ 10690 @LENGTH@ 15


UPD FieldDeclaration@@private, Map, [myMap=new HashMap()] @TO@ private, Map<String,String>, [myMap=new HashMap<String,String>()] @AT@ 1165 @LENGTH@ 34
---INS ParameterizedType@@Map<String,String> @TO@ FieldDeclaration@@private, Map, [myMap=new HashMap()] @AT@ 1120 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1120 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1124 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1132 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1173 @LENGTH@ 3
---UPD VariableDeclarationFragment@@myMap=new HashMap() @TO@ myMap=new HashMap<String,String>() @AT@ 1177 @LENGTH@ 21
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,String>[] @AT@ 1185 @LENGTH@ 13
---------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 1152 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1152 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1160 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1168 @LENGTH@ 6
---------DEL SimpleType@@HashMap @AT@ 1189 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.concurrentContext=new ConcurrentContext(getApplicationName(),getModuleName(),null) @TO@ Assignment:this.concurrentContext=new ConcurrentContext() @AT@ 4287 @LENGTH@ 90
---UPD Assignment@@this.concurrentContext=new ConcurrentContext(getApplicationName(),getModuleName(),null) @TO@ this.concurrentContext=new ConcurrentContext() @AT@ 4287 @LENGTH@ 89
------UPD ClassInstanceCreation@@ConcurrentContext[getApplicationName(), getModuleName(), null] @TO@ ConcurrentContext[] @AT@ 4312 @LENGTH@ 64
---------DEL MethodInvocation@@MethodName:getApplicationName:[] @AT@ 4334 @LENGTH@ 20
---------DEL MethodInvocation@@MethodName:getModuleName:[] @AT@ 4355 @LENGTH@ 15
---------DEL NullLiteral@@null @AT@ 4371 @LENGTH@ 4


UPD TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @TO@ [@ContextConfiguration(classes=JpaRepositoryConfig.class), @Transactional, public]JpaWebTests, AbstractWebIntegrationTests @AT@ 1007 @LENGTH@ 678
---INS MarkerAnnotation@@@Transactional @TO@ TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, AbstractWebIntegrationTests @AT@ 1157 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testSelect,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("LettuceConnectionIntegrationTests-context.xml"), public]LettuceConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 2843 @LENGTH@ 51
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 2843 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 2850 @LENGTH@ 4
---INS SimpleName@@MethodName:testSelect @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 2855 @LENGTH@ 10
---INS ExpressionStatement@@SuperMethodInvocation:super.testSelect() @TO@ MethodDeclaration@@public, void, MethodName:testSelect,  @AT@ 2872 @LENGTH@ 19
------INS SuperMethodInvocation@@super.testSelect() @TO@ ExpressionStatement@@SuperMethodInvocation:super.testSelect() @AT@ 2872 @LENGTH@ 18
---------INS SimpleName@@MethodName:testSelect:[] @TO@ SuperMethodInvocation@@super.testSelect() @AT@ 2878 @LENGTH@ 10


UPD TypeDeclaration@@[@JMSDestinationDefinition(name="java:comp/env/myQueue4",interfaceName="javax.jms.Queue",destinationName="myQueue4"), @JMSDestinationDefinitions(value={@JMSDestinationDefinition(name="java:module/env/myQueue1",interfaceName="javax.jms.Queue",destinationName="myQueue1"),@JMSDestinationDefinition(name="java:module/env/myTopic1",interfaceName="javax.jms.Topic",destinationName="myTopic1"),@JMSDestinationDefinition(name="java:global/env/myQueue2",interfaceName="javax.jms.Queue",destinationName="myQueue2",properties={"durable=false","selector=color = 'red'"})}), @JMSConnectionFactoryDefinitions(value={@JMSConnectionFactoryDefinition(name="java:module/myFactory1",properties={"connector=netty","initial-connect-attempts=3"},user="guest",password="guest",clientId="myClientID1",maxPoolSize=2,minPoolSize=1),@JMSConnectionFactoryDefinition(name="java:comp/env/myFactory2")}), @JMSConnectionFactoryDefinition(name="java:global/myFactory3",interfaceName="javax.jms.QueueConnectionFactory",properties={"connector=netty","initial-connect-attempts=5"},user="guest",password="guest",maxPoolSize=4,minPoolSize=3), @Stateless, public]MessagingBean,  @TO@ [@JMSDestinationDefinition(name="java:comp/env/myQueue4",interfaceName="javax.jms.Queue"), @JMSDestinationDefinitions(value={@JMSDestinationDefinition(name="java:module/env/myQueue1",interfaceName="javax.jms.Queue",destinationName="myQueue1"),@JMSDestinationDefinition(name="java:module/env/myTopic1",interfaceName="javax.jms.Topic",destinationName="myTopic1"),@JMSDestinationDefinition(name="java:global/env/myQueue2",interfaceName="javax.jms.Queue",destinationName="myQueue2",properties={"durable=false","selector=color = 'red'"})}), @JMSConnectionFactoryDefinitions(value={@JMSConnectionFactoryDefinition(name="java:module/myFactory1",properties={"connector=netty","initial-connect-attempts=3"},user="guest",password="guest",clientId="myClientID1",maxPoolSize=2,minPoolSize=1),@JMSConnectionFactoryDefinition(name="java:comp/env/myFactory2")}), @JMSConnectionFactoryDefinition(name="java:global/myFactory3",interfaceName="javax.jms.QueueConnectionFactory",properties={"connector=netty","initial-connect-attempts=5"},user="guest",password="guest",maxPoolSize=4,minPoolSize=3), @Stateless, public]MessagingBean,  @AT@ 1752 @LENGTH@ 4208
---UPD NormalAnnotation@@@JMSDestinationDefinition(name="java:comp/env/myQueue4",interfaceName="javax.jms.Queue",destinationName="myQueue4") @TO@ @JMSDestinationDefinition(name="java:comp/env/myQueue4",interfaceName="javax.jms.Queue") @AT@ 1752 @LENGTH@ 143


UPD VariableDeclarationStatement@@ArtifactResolutionResult result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST); @TO@ ArtifactResolutionResult result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()); @AT@ 37968 @LENGTH@ 729
---UPD VariableDeclarationFragment@@result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST) @TO@ result=artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()) @AT@ 37993 @LENGTH@ 703
------UPD MethodInvocation@@artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.EMPTY_MAP,this.localRepository,this.remoteRepositories,metadataSource,null,Collections.EMPTY_LIST) @TO@ artifactResolver.resolveTransitively(dependencyArtifacts,executablePomArtifact,Collections.emptyMap(),this.localRepository,this.remoteRepositories,metadataSource,null,Collections.emptyList()) @AT@ 38002 @LENGTH@ 694
---------UPD SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @TO@ MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.emptyMap(), this.localRepository, this.remoteRepositories, metadataSource, null, Collections.emptyList()] @AT@ 38019 @LENGTH@ 677
------------INS MethodInvocation@@Collections.emptyMap() @TO@ SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @AT@ 38249 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 38249 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 38261 @LENGTH@ 10
------------DEL QualifiedName@@Collections.EMPTY_MAP @AT@ 38249 @LENGTH@ 21
---------------DEL SimpleName@@Collections @AT@ 38249 @LENGTH@ 11
---------------DEL SimpleName@@EMPTY_MAP @AT@ 38261 @LENGTH@ 9
------------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 38673 @LENGTH@ 22
---------------DEL SimpleName@@Collections @AT@ 38673 @LENGTH@ 11
---------------DEL SimpleName@@EMPTY_LIST @AT@ 38685 @LENGTH@ 10
------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:resolveTransitively:[dependencyArtifacts, executablePomArtifact, Collections.EMPTY_MAP, this.localRepository, this.remoteRepositories, metadataSource, null, Collections.EMPTY_LIST] @AT@ 38674 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 38674 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 38686 @LENGTH@ 11


UPD EnhancedForStatement@@for (final String alias : aliases) {  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @TO@ for (final String alias : aliases) {  if (controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null) {    installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);  }} @AT@ 24847 @LENGTH@ 176
---INS IfStatement@@if (controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null) {  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @TO@ EnhancedForStatement@@for (final String alias : aliases) {  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @AT@ 24980 @LENGTH@ 270
------INS InfixExpression@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null @TO@ IfStatement@@if (controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null) {  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @AT@ 24984 @LENGTH@ 107
---------INS MethodInvocation@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) @TO@ InfixExpression@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null @AT@ 24984 @LENGTH@ 99
------------INS MethodInvocation@@MethodName:getServiceContainer:[] @TO@ MethodInvocation@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) @AT@ 24984 @LENGTH@ 32
------------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) @AT@ 24984 @LENGTH@ 10
------------INS SimpleName@@MethodName:getService:[ContextNames.bindInfoFor(alias).getBinderServiceName()] @TO@ MethodInvocation@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) @AT@ 25017 @LENGTH@ 66
---------------INS MethodInvocation@@ContextNames.bindInfoFor(alias).getBinderServiceName() @TO@ SimpleName@@MethodName:getService:[ContextNames.bindInfoFor(alias).getBinderServiceName()] @AT@ 25028 @LENGTH@ 54
------------------INS MethodInvocation@@MethodName:bindInfoFor:[alias] @TO@ MethodInvocation@@ContextNames.bindInfoFor(alias).getBinderServiceName() @AT@ 25028 @LENGTH@ 31
---------------------INS SimpleName@@alias @TO@ MethodInvocation@@MethodName:bindInfoFor:[alias] @AT@ 25053 @LENGTH@ 5
------------------INS SimpleName@@Name:ContextNames @TO@ MethodInvocation@@ContextNames.bindInfoFor(alias).getBinderServiceName() @AT@ 25028 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getBinderServiceName:[] @TO@ MethodInvocation@@ContextNames.bindInfoFor(alias).getBinderServiceName() @AT@ 25060 @LENGTH@ 22
---------INS Operator@@== @TO@ InfixExpression@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null @AT@ 25083 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null @AT@ 25087 @LENGTH@ 4
------INS Block@@ThenBody:{  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @TO@ IfStatement@@if (controller.getServiceContainer().getService(ContextNames.bindInfoFor(alias).getBinderServiceName()) == null) {  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @AT@ 25093 @LENGTH@ 157
---------MOV ExpressionStatement@@MethodInvocation:installAliasBinderService(controller.getServiceContainer(),bindInfo,alias) @TO@ Block@@ThenBody:{  installAliasBinderService(controller.getServiceContainer(),bindInfo,alias);} @AT@ 24896 @LENGTH@ 117


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses={MongoDbRepositoryConfig.class}), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @TO@ [@Configuration, @ComponentScan, @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 597 @LENGTH@ 437
---DEL NormalAnnotation@@@ComponentScan(basePackageClasses={MongoDbRepositoryConfig.class}) @AT@ 612 @LENGTH@ 70
---INS MarkerAnnotation@@@ComponentScan @TO@ TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses={MongoDbRepositoryConfig.class}), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 619 @LENGTH@ 14


UPD IfStatement@@if (children.contains(pe.getKeyValuePair())) {  String name=pe.getValue();  ModelNode value=model.get(pe.getKeyValuePair());  ManagementResourceRegistration sub=rr.getSubModel(PathAddress.pathAddress(pe));  Assert.assertNotNull(getComparePathAsString(stack) + " Child with name '" + name+ "' not found",sub);  if (value.isDefined()) {    stack.push(pe);    checkModelAgainstDefinition(value,sub,stack);    stack.pop();  }} @TO@ if (children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue())) {  String name=pe.getValue();  ModelNode value=model.get(pe.getKeyValuePair());  ManagementResourceRegistration sub=rr.getSubModel(PathAddress.pathAddress(pe));  Assert.assertNotNull(getComparePathAsString(stack) + " Child with name '" + name+ "' not found",sub);  if (value.isDefined()) {    stack.push(pe);    checkModelAgainstDefinition(value,sub,stack);    stack.pop();  }} @AT@ 21507 @LENGTH@ 626
---INS InfixExpression@@children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue()) @TO@ IfStatement@@if (children.contains(pe.getKeyValuePair())) {  String name=pe.getValue();  ModelNode value=model.get(pe.getKeyValuePair());  ManagementResourceRegistration sub=rr.getSubModel(PathAddress.pathAddress(pe));  Assert.assertNotNull(getComparePathAsString(stack) + " Child with name '" + name+ "' not found",sub);  if (value.isDefined()) {    stack.push(pe);    checkModelAgainstDefinition(value,sub,stack);    stack.pop();  }} @AT@ 21511 @LENGTH@ 115
------INS MethodInvocation@@children.contains(pe.getKey()) @TO@ InfixExpression@@children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21511 @LENGTH@ 30
---------MOV SimpleName@@Name:children @TO@ MethodInvocation@@children.contains(pe.getKey()) @AT@ 21511 @LENGTH@ 8
---------MOV SimpleName@@MethodName:contains:[pe.getKeyValuePair()] @TO@ MethodInvocation@@children.contains(pe.getKey()) @AT@ 21520 @LENGTH@ 30
------INS Operator@@&& @TO@ InfixExpression@@children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21541 @LENGTH@ 2
------INS MethodInvocation@@model.hasDefined(pe.getKey()) @TO@ InfixExpression@@children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21545 @LENGTH@ 29
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.hasDefined(pe.getKey()) @AT@ 21545 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasDefined:[pe.getKey()] @TO@ MethodInvocation@@model.hasDefined(pe.getKey()) @AT@ 21551 @LENGTH@ 23
------------INS MethodInvocation@@pe.getKey() @TO@ SimpleName@@MethodName:hasDefined:[pe.getKey()] @AT@ 21562 @LENGTH@ 11
---------------INS SimpleName@@Name:pe @TO@ MethodInvocation@@pe.getKey() @AT@ 21562 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@pe.getKey() @AT@ 21565 @LENGTH@ 8
------INS MethodInvocation@@model.get(pe.getKey()).hasDefined(pe.getValue()) @TO@ InfixExpression@@children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21578 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:get:[pe.getKey()] @TO@ MethodInvocation@@model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21578 @LENGTH@ 22
------------INS MethodInvocation@@pe.getKey() @TO@ MethodInvocation@@MethodName:get:[pe.getKey()] @AT@ 21588 @LENGTH@ 11
---------------INS SimpleName@@Name:pe @TO@ MethodInvocation@@pe.getKey() @AT@ 21588 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@pe.getKey() @AT@ 21591 @LENGTH@ 8
---------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21578 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasDefined:[pe.getValue()] @TO@ MethodInvocation@@model.get(pe.getKey()).hasDefined(pe.getValue()) @AT@ 21601 @LENGTH@ 25
------------INS MethodInvocation@@pe.getValue() @TO@ SimpleName@@MethodName:hasDefined:[pe.getValue()] @AT@ 21612 @LENGTH@ 13
---------------INS SimpleName@@Name:pe @TO@ MethodInvocation@@pe.getValue() @AT@ 21612 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@pe.getValue() @AT@ 21615 @LENGTH@ 10
---DEL MethodInvocation@@children.contains(pe.getKeyValuePair()) @AT@ 21511 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup({EjbSecurityDomainSetup.class}), @Category(CommonCriteria.class), public]RunAsPrincipalTestCase,  @AT@ 4781 @LENGTH@ 450
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4781 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4788 @LENGTH@ 4
---INS SimpleName@@MethodName:testSingletonSecurity @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4793 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4824 @LENGTH@ 9
---INS VariableDeclarationStatement@@SecurityClient client=SecurityClientFactory.getSecurityClient(); @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4844 @LENGTH@ 66
------INS SimpleType@@SecurityClient @TO@ VariableDeclarationStatement@@SecurityClient client=SecurityClientFactory.getSecurityClient(); @AT@ 4844 @LENGTH@ 14
------INS VariableDeclarationFragment@@client=SecurityClientFactory.getSecurityClient() @TO@ VariableDeclarationStatement@@SecurityClient client=SecurityClientFactory.getSecurityClient(); @AT@ 4859 @LENGTH@ 50
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=SecurityClientFactory.getSecurityClient() @AT@ 4859 @LENGTH@ 6
---------INS MethodInvocation@@SecurityClientFactory.getSecurityClient() @TO@ VariableDeclarationFragment@@client=SecurityClientFactory.getSecurityClient() @AT@ 4868 @LENGTH@ 41
------------INS SimpleName@@Name:SecurityClientFactory @TO@ MethodInvocation@@SecurityClientFactory.getSecurityClient() @AT@ 4868 @LENGTH@ 21
------------INS SimpleName@@MethodName:getSecurityClient:[] @TO@ MethodInvocation@@SecurityClientFactory.getSecurityClient() @AT@ 4890 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:client.setSimple("user1","password1") @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4919 @LENGTH@ 39
------INS MethodInvocation@@client.setSimple("user1","password1") @TO@ ExpressionStatement@@MethodInvocation:client.setSimple("user1","password1") @AT@ 4919 @LENGTH@ 38
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setSimple("user1","password1") @AT@ 4919 @LENGTH@ 6
---------INS SimpleName@@MethodName:setSimple:["user1", "password1"] @TO@ MethodInvocation@@client.setSimple("user1","password1") @AT@ 4926 @LENGTH@ 31
------------INS StringLiteral@@"user1" @TO@ SimpleName@@MethodName:setSimple:["user1", "password1"] @AT@ 4936 @LENGTH@ 7
------------INS StringLiteral@@"password1" @TO@ SimpleName@@MethodName:setSimple:["user1", "password1"] @AT@ 4945 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:client.login() @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4967 @LENGTH@ 15
------INS MethodInvocation@@client.login() @TO@ ExpressionStatement@@MethodInvocation:client.login() @AT@ 4967 @LENGTH@ 14
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.login() @AT@ 4967 @LENGTH@ 6
---------INS SimpleName@@MethodName:login:[] @TO@ MethodInvocation@@client.login() @AT@ 4974 @LENGTH@ 7
---INS TryStatement@@try {  WhoAmI bean=lookupSingleCallerWithIdentity();  String actual=bean.getCallerPrincipal();  Assert.assertEquals("Helloween",actual);}  finally {  client.logout();} @TO@ MethodDeclaration@@public, void, MethodName:testSingletonSecurity, Exception,  @AT@ 4991 @LENGTH@ 234
------INS VariableDeclarationStatement@@WhoAmI bean=lookupSingleCallerWithIdentity(); @TO@ TryStatement@@try {  WhoAmI bean=lookupSingleCallerWithIdentity();  String actual=bean.getCallerPrincipal();  Assert.assertEquals("Helloween",actual);}  finally {  client.logout();} @AT@ 5009 @LENGTH@ 48
---------INS SimpleType@@WhoAmI @TO@ VariableDeclarationStatement@@WhoAmI bean=lookupSingleCallerWithIdentity(); @AT@ 5009 @LENGTH@ 6
---------INS VariableDeclarationFragment@@bean=lookupSingleCallerWithIdentity() @TO@ VariableDeclarationStatement@@WhoAmI bean=lookupSingleCallerWithIdentity(); @AT@ 5016 @LENGTH@ 40
------------INS SimpleName@@bean @TO@ VariableDeclarationFragment@@bean=lookupSingleCallerWithIdentity() @AT@ 5016 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:lookupSingleCallerWithIdentity:[] @TO@ VariableDeclarationFragment@@bean=lookupSingleCallerWithIdentity() @AT@ 5024 @LENGTH@ 32
------INS VariableDeclarationStatement@@String actual=bean.getCallerPrincipal(); @TO@ TryStatement@@try {  WhoAmI bean=lookupSingleCallerWithIdentity();  String actual=bean.getCallerPrincipal();  Assert.assertEquals("Helloween",actual);}  finally {  client.logout();} @AT@ 5070 @LENGTH@ 42
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String actual=bean.getCallerPrincipal(); @AT@ 5070 @LENGTH@ 6
---------INS VariableDeclarationFragment@@actual=bean.getCallerPrincipal() @TO@ VariableDeclarationStatement@@String actual=bean.getCallerPrincipal(); @AT@ 5077 @LENGTH@ 34
------------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=bean.getCallerPrincipal() @AT@ 5077 @LENGTH@ 6
------------INS MethodInvocation@@bean.getCallerPrincipal() @TO@ VariableDeclarationFragment@@actual=bean.getCallerPrincipal() @AT@ 5086 @LENGTH@ 25
---------------INS SimpleName@@Name:bean @TO@ MethodInvocation@@bean.getCallerPrincipal() @AT@ 5086 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getCallerPrincipal:[] @TO@ MethodInvocation@@bean.getCallerPrincipal() @AT@ 5091 @LENGTH@ 20
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("Helloween",actual) @TO@ TryStatement@@try {  WhoAmI bean=lookupSingleCallerWithIdentity();  String actual=bean.getCallerPrincipal();  Assert.assertEquals("Helloween",actual);}  finally {  client.logout();} @AT@ 5125 @LENGTH@ 41
---------INS MethodInvocation@@Assert.assertEquals("Helloween",actual) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("Helloween",actual) @AT@ 5125 @LENGTH@ 40
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("Helloween",actual) @AT@ 5125 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:["Helloween", actual] @TO@ MethodInvocation@@Assert.assertEquals("Helloween",actual) @AT@ 5132 @LENGTH@ 33
---------------INS StringLiteral@@"Helloween" @TO@ SimpleName@@MethodName:assertEquals:["Helloween", actual] @AT@ 5145 @LENGTH@ 11
---------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertEquals:["Helloween", actual] @AT@ 5158 @LENGTH@ 6
------INS Block@@FinallyBody:{  client.logout();} @TO@ TryStatement@@try {  WhoAmI bean=lookupSingleCallerWithIdentity();  String actual=bean.getCallerPrincipal();  Assert.assertEquals("Helloween",actual);}  finally {  client.logout();} @AT@ 5185 @LENGTH@ 40
---------INS ExpressionStatement@@MethodInvocation:client.logout() @TO@ Block@@FinallyBody:{  client.logout();} @AT@ 5199 @LENGTH@ 16
------------INS MethodInvocation@@client.logout() @TO@ ExpressionStatement@@MethodInvocation:client.logout() @AT@ 5199 @LENGTH@ 15
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.logout() @AT@ 5199 @LENGTH@ 6
---------------INS SimpleName@@MethodName:logout:[] @TO@ MethodInvocation@@client.logout() @AT@ 5206 @LENGTH@ 8


UPD Block@@ElseBody:if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ElseBody:if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5224 @LENGTH@ 560
---UPD IfStatement@@if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5224 @LENGTH@ 560
------UPD Block@@ElseBody:if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ElseBody:if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---UPD IfStatement@@if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == ' ') {  if (skipLeadingWhitespace) {    continue;  }} else if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5224 @LENGTH@ 560
------UPD Block@@ElseBody:if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ElseBody:if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9
---------UPD IfStatement@@if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ if (!isQuoting && ch == separator) {  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5367 @LENGTH@ 417
------------UPD Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @TO@ ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);  }  continue;} @AT@ 5402 @LENGTH@ 382
---------------UPD IfStatement@@if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ if (sb.length() > 0) {  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5478 @LENGTH@ 292
------------------UPD Block@@ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);  continue;} @TO@ ThenBody:{  String text=sb.toString();  if (trim) {    text=text.trim();  }  answer.add(text);  sb.setLength(0);} @AT@ 5499 @LENGTH@ 271
---------------------DEL ContinueStatement@@ @AT@ 5743 @LENGTH@ 9
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (sb.length() > 0) {    String text=sb.toString();    if (trim) {      text=text.trim();    }    answer.add(text);    sb.setLength(0);    continue;  }} @AT@ 5814 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @TO@ TypeDeclaration@@[public]Hadoop20Shims, [HadoopShims] @AT@ 6444 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6444 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6451 @LENGTH@ 4
---INS SimpleName@@MethodName:setTotalOrderPartitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6456 @LENGTH@ 26
---INS SingleVariableDeclaration@@JobConf jobConf @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6483 @LENGTH@ 15
------INS SimpleType@@JobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 6483 @LENGTH@ 7
------INS SimpleName@@jobConf @TO@ SingleVariableDeclaration@@JobConf jobConf @AT@ 6491 @LENGTH@ 7
---INS SingleVariableDeclaration@@Path partitionFile @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6500 @LENGTH@ 18
------INS SimpleType@@Path @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 6500 @LENGTH@ 4
------INS SimpleName@@partitionFile @TO@ SingleVariableDeclaration@@Path partitionFile @AT@ 6505 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ MethodDeclaration@@public, void, MethodName:setTotalOrderPartitionFile, JobConf jobConf, Path partitionFile,  @AT@ 6525 @LENGTH@ 63
------INS MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @TO@ ExpressionStatement@@MethodInvocation:TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 6525 @LENGTH@ 62
---------INS SimpleName@@Name:TotalOrderPartitioner @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 6525 @LENGTH@ 21
---------INS SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @TO@ MethodInvocation@@TotalOrderPartitioner.setPartitionFile(jobConf,partitionFile) @AT@ 6547 @LENGTH@ 40
------------INS SimpleName@@jobConf @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 6564 @LENGTH@ 7
------------INS SimpleName@@partitionFile @TO@ SimpleName@@MethodName:setPartitionFile:[jobConf, partitionFile] @AT@ 6573 @LENGTH@ 13


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Request(getApprovalParameters(),getClientId(),getAuthorities(),isApproved(),getScope(),getResourceIds(),getRedirectUri(),getResponseTypes(),getExtensions()) @TO@ ClassInstanceCreation:new OAuth2Request(getRequestParameters(),getClientId(),getAuthorities(),isApproved(),getScope(),getResourceIds(),getRedirectUri(),getResponseTypes(),getExtensions()) @AT@ 3837 @LENGTH@ 182
---UPD ClassInstanceCreation@@OAuth2Request[getApprovalParameters(), getClientId(), getAuthorities(), isApproved(), getScope(), getResourceIds(), getRedirectUri(), getResponseTypes(), getExtensions()] @TO@ OAuth2Request[getRequestParameters(), getClientId(), getAuthorities(), isApproved(), getScope(), getResourceIds(), getRedirectUri(), getResponseTypes(), getExtensions()] @AT@ 3844 @LENGTH@ 174
------UPD MethodInvocation@@MethodName:getApprovalParameters:[] @TO@ MethodName:getRequestParameters:[] @AT@ 3862 @LENGTH@ 23


UPD VariableDeclarationStatement@@final List<ModelNode> hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList(); @TO@ final List<ModelNode> hostNodes=hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList(); @AT@ 2938 @LENGTH@ 121
---UPD VariableDeclarationFragment@@hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @TO@ hostNodes=hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 2960 @LENGTH@ 98
------DEL MethodInvocation@@HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @AT@ 2972 @LENGTH@ 86
---------DEL MethodInvocation@@MethodName:resolveModelAttribute:[context, model] @AT@ 2972 @LENGTH@ 77
---------DEL QualifiedName@@Name:HostScopedRolesResourceDefinition.HOSTS @AT@ 2972 @LENGTH@ 39
------INS ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @TO@ VariableDeclarationFragment@@hostNodes=HostScopedRolesResourceDefinition.HOSTS.resolveModelAttribute(context,model).asList() @AT@ 3124 @LENGTH@ 89
---------INS MethodInvocation@@hostsAttribute.isDefined() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3124 @LENGTH@ 26
------------MOV SimpleName@@context @TO@ MethodInvocation@@hostsAttribute.isDefined() @AT@ 3034 @LENGTH@ 7
------------MOV SimpleName@@model @TO@ MethodInvocation@@hostsAttribute.isDefined() @AT@ 3043 @LENGTH@ 5
---------INS MethodInvocation@@hostsAttribute.asList() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3153 @LENGTH@ 23
------------MOV SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@hostsAttribute.asList() @AT@ 3050 @LENGTH@ 8
------------INS SimpleName@@Name:hostsAttribute @TO@ MethodInvocation@@hostsAttribute.asList() @AT@ 3153 @LENGTH@ 14
---------INS MethodInvocation@@Collections.<ModelNode>emptyList() @TO@ ConditionalExpression@@hostsAttribute.isDefined() ? hostsAttribute.asList() : Collections.<ModelNode>emptyList() @AT@ 3179 @LENGTH@ 34
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<ModelNode>emptyList() @AT@ 3179 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<ModelNode>emptyList() @AT@ 3202 @LENGTH@ 11


UPD IfStatement@@if (is.markSupported()) {  InputStreamPayload payload=new InputStreamPayload(is);  long contentLength=ByteStreams.length(payload);  is.reset();  payload.getContentMetadata().setContentLength(contentLength);  return payload;} else {  CachedOutputStream cos=new CachedOutputStream(exchange);  return toPayload(cos.getWrappedInputStream(),exchange);} @TO@ if (is.markSupported()) {  InputStreamPayload payload=new InputStreamPayload(is);  long contentLength=ByteStreams.length(payload);  is.reset();  payload.getContentMetadata().setContentLength(contentLength);  return payload;} else {  CachedOutputStream cos=new CachedOutputStream(exchange);  IOHelper.copy(is,cos);  return toPayload(cos.getWrappedInputStream(),exchange);} @AT@ 2236 @LENGTH@ 449
---UPD Block@@ElseBody:{  CachedOutputStream cos=new CachedOutputStream(exchange);  return toPayload(cos.getWrappedInputStream(),exchange);} @TO@ ElseBody:{  CachedOutputStream cos=new CachedOutputStream(exchange);  IOHelper.copy(is,cos);  return toPayload(cos.getWrappedInputStream(),exchange);} @AT@ 2534 @LENGTH@ 151
------INS ExpressionStatement@@MethodInvocation:IOHelper.copy(is,cos) @TO@ Block@@ElseBody:{  CachedOutputStream cos=new CachedOutputStream(exchange);  return toPayload(cos.getWrappedInputStream(),exchange);} @AT@ 2658 @LENGTH@ 23
---------INS MethodInvocation@@IOHelper.copy(is,cos) @TO@ ExpressionStatement@@MethodInvocation:IOHelper.copy(is,cos) @AT@ 2658 @LENGTH@ 22
------------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.copy(is,cos) @AT@ 2658 @LENGTH@ 8
------------INS SimpleName@@MethodName:copy:[is, cos] @TO@ MethodInvocation@@IOHelper.copy(is,cos) @AT@ 2667 @LENGTH@ 13
---------------INS SimpleName@@is @TO@ SimpleName@@MethodName:copy:[is, cos] @AT@ 2672 @LENGTH@ 2
---------------INS SimpleName@@cos @TO@ SimpleName@@MethodName:copy:[is, cos] @AT@ 2676 @LENGTH@ 3


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [SESSION_COOKIE_NAMES=new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(false).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build()] @TO@ public, static, final, AttributeDefinition, [SESSION_COOKIE_NAMES=new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build()] @AT@ 2506 @LENGTH@ 300
---UPD VariableDeclarationFragment@@SESSION_COOKIE_NAMES=new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(false).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build() @TO@ SESSION_COOKIE_NAMES=new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build() @AT@ 2546 @LENGTH@ 259
------UPD MethodInvocation@@new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(false).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build() @TO@ new SimpleAttributeDefinitionBuilder(Constants.SESSION_COOKIE_NAMES,ModelType.STRING).setAllowNull(true).setAllowExpression(true).setDefaultValue(new ModelNode("JSESSIONID")).build() @AT@ 2569 @LENGTH@ 236
---------UPD MethodInvocation@@MethodName:setAllowNull:[false] @TO@ MethodName:setAllowNull:[true] @AT@ 2569 @LENGTH@ 119
------------UPD BooleanLiteral@@false @TO@ true @AT@ 2682 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("JedisConnectionIntegrationTests-context.xml"), public]JedisConnectionPipelineIntegrationTests, AbstractConnectionPipelineIntegrationTests @AT@ 4403 @LENGTH@ 519
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4403 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4410 @LENGTH@ 4
---INS SimpleName@@MethodName:testClosePoolPipelinedDbSelect @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4415 @LENGTH@ 30
---INS VariableDeclarationStatement@@JedisPoolConfig config=new JedisPoolConfig(); @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4452 @LENGTH@ 47
------INS SimpleType@@JedisPoolConfig @TO@ VariableDeclarationStatement@@JedisPoolConfig config=new JedisPoolConfig(); @AT@ 4452 @LENGTH@ 15
------INS VariableDeclarationFragment@@config=new JedisPoolConfig() @TO@ VariableDeclarationStatement@@JedisPoolConfig config=new JedisPoolConfig(); @AT@ 4468 @LENGTH@ 30
---------INS SimpleName@@config @TO@ VariableDeclarationFragment@@config=new JedisPoolConfig() @AT@ 4468 @LENGTH@ 6
---------INS ClassInstanceCreation@@JedisPoolConfig[] @TO@ VariableDeclarationFragment@@config=new JedisPoolConfig() @AT@ 4477 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@JedisPoolConfig[] @AT@ 4477 @LENGTH@ 3
------------INS SimpleType@@JedisPoolConfig @TO@ ClassInstanceCreation@@JedisPoolConfig[] @AT@ 4481 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:config.setMaxActive(1) @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4502 @LENGTH@ 23
------INS MethodInvocation@@config.setMaxActive(1) @TO@ ExpressionStatement@@MethodInvocation:config.setMaxActive(1) @AT@ 4502 @LENGTH@ 22
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setMaxActive(1) @AT@ 4502 @LENGTH@ 6
---------INS SimpleName@@MethodName:setMaxActive:[1] @TO@ MethodInvocation@@config.setMaxActive(1) @AT@ 4509 @LENGTH@ 15
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMaxActive:[1] @AT@ 4522 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:config.setMaxWait(1l) @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4528 @LENGTH@ 22
------INS MethodInvocation@@config.setMaxWait(1l) @TO@ ExpressionStatement@@MethodInvocation:config.setMaxWait(1l) @AT@ 4528 @LENGTH@ 21
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setMaxWait(1l) @AT@ 4528 @LENGTH@ 6
---------INS SimpleName@@MethodName:setMaxWait:[1l] @TO@ MethodInvocation@@config.setMaxWait(1l) @AT@ 4535 @LENGTH@ 14
------------INS NumberLiteral@@1l @TO@ SimpleName@@MethodName:setMaxWait:[1l] @AT@ 4546 @LENGTH@ 2
---INS VariableDeclarationStatement@@JedisConnectionFactory factory2=new JedisConnectionFactory(config); @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4553 @LENGTH@ 69
------INS SimpleType@@JedisConnectionFactory @TO@ VariableDeclarationStatement@@JedisConnectionFactory factory2=new JedisConnectionFactory(config); @AT@ 4553 @LENGTH@ 22
------INS VariableDeclarationFragment@@factory2=new JedisConnectionFactory(config) @TO@ VariableDeclarationStatement@@JedisConnectionFactory factory2=new JedisConnectionFactory(config); @AT@ 4576 @LENGTH@ 45
---------INS SimpleName@@factory2 @TO@ VariableDeclarationFragment@@factory2=new JedisConnectionFactory(config) @AT@ 4576 @LENGTH@ 8
---------INS ClassInstanceCreation@@JedisConnectionFactory[config] @TO@ VariableDeclarationFragment@@factory2=new JedisConnectionFactory(config) @AT@ 4587 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@JedisConnectionFactory[config] @AT@ 4587 @LENGTH@ 3
------------INS SimpleType@@JedisConnectionFactory @TO@ ClassInstanceCreation@@JedisConnectionFactory[config] @AT@ 4591 @LENGTH@ 22
------------INS SimpleName@@config @TO@ ClassInstanceCreation@@JedisConnectionFactory[config] @AT@ 4614 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:factory2.setHostName(SettingsUtils.getHost()) @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4625 @LENGTH@ 46
------INS MethodInvocation@@factory2.setHostName(SettingsUtils.getHost()) @TO@ ExpressionStatement@@MethodInvocation:factory2.setHostName(SettingsUtils.getHost()) @AT@ 4625 @LENGTH@ 45
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setHostName(SettingsUtils.getHost()) @AT@ 4625 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHostName:[SettingsUtils.getHost()] @TO@ MethodInvocation@@factory2.setHostName(SettingsUtils.getHost()) @AT@ 4634 @LENGTH@ 36
------------INS MethodInvocation@@SettingsUtils.getHost() @TO@ SimpleName@@MethodName:setHostName:[SettingsUtils.getHost()] @AT@ 4646 @LENGTH@ 23
---------------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 4646 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 4660 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:factory2.setPort(SettingsUtils.getPort()) @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4674 @LENGTH@ 42
------INS MethodInvocation@@factory2.setPort(SettingsUtils.getPort()) @TO@ ExpressionStatement@@MethodInvocation:factory2.setPort(SettingsUtils.getPort()) @AT@ 4674 @LENGTH@ 41
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setPort(SettingsUtils.getPort()) @AT@ 4674 @LENGTH@ 8
---------INS SimpleName@@MethodName:setPort:[SettingsUtils.getPort()] @TO@ MethodInvocation@@factory2.setPort(SettingsUtils.getPort()) @AT@ 4683 @LENGTH@ 32
------------INS MethodInvocation@@SettingsUtils.getPort() @TO@ SimpleName@@MethodName:setPort:[SettingsUtils.getPort()] @AT@ 4691 @LENGTH@ 23
---------------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 4691 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 4705 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4719 @LENGTH@ 24
------INS MethodInvocation@@factory2.setDatabase(1) @TO@ ExpressionStatement@@MethodInvocation:factory2.setDatabase(1) @AT@ 4719 @LENGTH@ 23
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 4719 @LENGTH@ 8
---------INS SimpleName@@MethodName:setDatabase:[1] @TO@ MethodInvocation@@factory2.setDatabase(1) @AT@ 4728 @LENGTH@ 14
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setDatabase:[1] @AT@ 4740 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4746 @LENGTH@ 30
------INS MethodInvocation@@factory2.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory2.afterPropertiesSet() @AT@ 4746 @LENGTH@ 29
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 4746 @LENGTH@ 8
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory2.afterPropertiesSet() @AT@ 4755 @LENGTH@ 20
---INS VariableDeclarationStatement@@RedisConnection conn2=factory2.getConnection(); @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4779 @LENGTH@ 49
------INS SimpleType@@RedisConnection @TO@ VariableDeclarationStatement@@RedisConnection conn2=factory2.getConnection(); @AT@ 4779 @LENGTH@ 15
------INS VariableDeclarationFragment@@conn2=factory2.getConnection() @TO@ VariableDeclarationStatement@@RedisConnection conn2=factory2.getConnection(); @AT@ 4795 @LENGTH@ 32
---------INS SimpleName@@conn2 @TO@ VariableDeclarationFragment@@conn2=factory2.getConnection() @AT@ 4795 @LENGTH@ 5
---------INS MethodInvocation@@factory2.getConnection() @TO@ VariableDeclarationFragment@@conn2=factory2.getConnection() @AT@ 4803 @LENGTH@ 24
------------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.getConnection() @AT@ 4803 @LENGTH@ 8
------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory2.getConnection() @AT@ 4812 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:conn2.openPipeline() @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4831 @LENGTH@ 21
------INS MethodInvocation@@conn2.openPipeline() @TO@ ExpressionStatement@@MethodInvocation:conn2.openPipeline() @AT@ 4831 @LENGTH@ 20
---------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.openPipeline() @AT@ 4831 @LENGTH@ 5
---------INS SimpleName@@MethodName:openPipeline:[] @TO@ MethodInvocation@@conn2.openPipeline() @AT@ 4837 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:conn2.close() @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4855 @LENGTH@ 14
------INS MethodInvocation@@conn2.close() @TO@ ExpressionStatement@@MethodInvocation:conn2.close() @AT@ 4855 @LENGTH@ 13
---------INS SimpleName@@Name:conn2 @TO@ MethodInvocation@@conn2.close() @AT@ 4855 @LENGTH@ 5
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@conn2.close() @AT@ 4861 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:factory2.getConnection() @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4872 @LENGTH@ 25
------INS MethodInvocation@@factory2.getConnection() @TO@ ExpressionStatement@@MethodInvocation:factory2.getConnection() @AT@ 4872 @LENGTH@ 24
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.getConnection() @AT@ 4872 @LENGTH@ 8
---------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory2.getConnection() @AT@ 4881 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:factory2.destroy() @TO@ MethodDeclaration@@public, void, MethodName:testClosePoolPipelinedDbSelect,  @AT@ 4900 @LENGTH@ 19
------INS MethodInvocation@@factory2.destroy() @TO@ ExpressionStatement@@MethodInvocation:factory2.destroy() @AT@ 4900 @LENGTH@ 18
---------INS SimpleName@@Name:factory2 @TO@ MethodInvocation@@factory2.destroy() @AT@ 4900 @LENGTH@ 8
---------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@factory2.destroy() @AT@ 4909 @LENGTH@ 9


MOV MethodDeclaration@@private, voidMethodName:XmlSignatureConstants,  @TO@ TypeDeclaration@@[public, final]XmlSignatureConstants,  @AT@ 905 @LENGTH@ 62


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQProfileTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]MQProfileTest, FabricTestSupport @AT@ 802 @LENGTH@ 5785
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]MQProfileTest, FabricTestSupport @AT@ 921 @LENGTH@ 49


UPD MethodDeclaration@@protected, abstract, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @TO@ protected, abstract, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context, ModelNode operation,  @AT@ 4993 @LENGTH@ 128
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@protected, abstract, void, MethodName:addJndiNameToControl, String toAdd, String resourceName, HornetQServer server, OperationContext context,  @AT@ 5132 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 5132 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 5142 @LENGTH@ 9


UPD ReturnStatement@@InfixExpression:getTransactionAttributeType(BEAN,method) == REQUIRED @TO@ InfixExpression:getTransactionAttributeType(MESSAGE_ENDPOINT,method) == REQUIRED @AT@ 5781 @LENGTH@ 61
---UPD InfixExpression@@getTransactionAttributeType(BEAN,method) == REQUIRED @TO@ getTransactionAttributeType(MESSAGE_ENDPOINT,method) == REQUIRED @AT@ 5788 @LENGTH@ 53
------UPD MethodInvocation@@getTransactionAttributeType(BEAN,method) @TO@ getTransactionAttributeType(MESSAGE_ENDPOINT,method) @AT@ 5788 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getTransactionAttributeType:[BEAN, method] @TO@ MethodName:getTransactionAttributeType:[MESSAGE_ENDPOINT, method] @AT@ 5788 @LENGTH@ 41
------------UPD SimpleName@@BEAN @TO@ MESSAGE_ENDPOINT @AT@ 5816 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:parseJdbcStoreElementAndEnrichOperation(reader,subsystemOperation) @TO@ MethodInvocation:parseJdbcStoreElementAndEnrichOperation(reader,logStoreOperation,subsystemOperation) @AT@ 6464 @LENGTH@ 68
---UPD MethodInvocation@@parseJdbcStoreElementAndEnrichOperation(reader,subsystemOperation) @TO@ parseJdbcStoreElementAndEnrichOperation(reader,logStoreOperation,subsystemOperation) @AT@ 6464 @LENGTH@ 67
------UPD SimpleName@@MethodName:parseJdbcStoreElementAndEnrichOperation:[reader, subsystemOperation] @TO@ MethodName:parseJdbcStoreElementAndEnrichOperation:[reader, logStoreOperation, subsystemOperation] @AT@ 6464 @LENGTH@ 67
---------INS SimpleName@@logStoreOperation @TO@ SimpleName@@MethodName:parseJdbcStoreElementAndEnrichOperation:[reader, subsystemOperation] @AT@ 6512 @LENGTH@ 17


UPD TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricDosgiCamelTest, FabricTestSupport @TO@ [@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), @Ignore("[FABRIC-521] Fix fabric-pax-exam tests"), public]FabricDosgiCamelTest, FabricTestSupport @AT@ 1725 @LENGTH@ 3306
---INS SingleMemberAnnotation@@@Ignore("[FABRIC-521] Fix fabric-pax-exam tests") @TO@ TypeDeclaration@@[@RunWith(JUnit4TestRunner.class), @ExamReactorStrategy(AllConfinedStagedReactorFactory.class), public]FabricDosgiCamelTest, FabricTestSupport @AT@ 1843 @LENGTH@ 49


INS MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @TO@ TypeDeclaration@@PluggableMBeanServerImpl, [PluggableMBeanServer] @AT@ 3479 @LENGTH@ 87
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3471 @LENGTH@ 7
---INS SimpleName@@MethodName:shouldLog @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3479 @LENGTH@ 9
---INS SingleVariableDeclaration@@boolean readOnly @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3489 @LENGTH@ 16
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean readOnly @AT@ 3489 @LENGTH@ 7
------INS SimpleName@@readOnly @TO@ SingleVariableDeclaration@@boolean readOnly @AT@ 3497 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:auditLoggerInfo.shouldLog(readOnly) @TO@ MethodDeclaration@@boolean, MethodName:shouldLog, boolean readOnly,  @AT@ 3517 @LENGTH@ 43
------INS MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @TO@ ReturnStatement@@MethodInvocation:auditLoggerInfo.shouldLog(readOnly) @AT@ 3524 @LENGTH@ 35
---------INS SimpleName@@Name:auditLoggerInfo @TO@ MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @AT@ 3524 @LENGTH@ 15
---------INS SimpleName@@MethodName:shouldLog:[readOnly] @TO@ MethodInvocation@@auditLoggerInfo.shouldLog(readOnly) @AT@ 3540 @LENGTH@ 19
------------INS SimpleName@@readOnly @TO@ SimpleName@@MethodName:shouldLog:[readOnly] @AT@ 3550 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @TO@ MethodInvocation:builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @AT@ 4099 @LENGTH@ 307
---UPD MethodInvocation@@builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @TO@ builder.download(new HashSet<String>(Arrays.asList("karaf-framework","ssh")),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet(),Collections.<String>emptySet()) @AT@ 4099 @LENGTH@ 306
------UPD SimpleName@@MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @TO@ MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @AT@ 4107 @LENGTH@ 298
---------INS MethodInvocation@@Collections.<String>emptySet() @TO@ SimpleName@@MethodName:download:[new HashSet<String>(Arrays.asList("karaf-framework","ssh")), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet(), Collections.<String>emptySet()] @AT@ 4431 @LENGTH@ 30
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 4431 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 4451 @LENGTH@ 10


UPD Block@@ThenBody:{  classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION));} @TO@ ThenBody:{  Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION);  classification.setConfiguredApplication(confValue);} @AT@ 6172 @LENGTH@ 123
---UPD ExpressionStatement@@MethodInvocation:classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION)) @TO@ MethodInvocation:classification.setConfiguredApplication(confValue) @AT@ 6190 @LENGTH@ 91
------UPD MethodInvocation@@classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION)) @TO@ classification.setConfiguredApplication(confValue) @AT@ 6190 @LENGTH@ 90
---------UPD SimpleName@@MethodName:setConfiguredApplication:[readValue(context,value,CONFIGURED_APPLICATION)] @TO@ MethodName:setConfiguredApplication:[confValue] @AT@ 6205 @LENGTH@ 75
------------INS SimpleName@@confValue @TO@ SimpleName@@MethodName:setConfiguredApplication:[readValue(context,value,CONFIGURED_APPLICATION)] @AT@ 6351 @LENGTH@ 9
---INS VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @TO@ Block@@ThenBody:{  classification.setConfiguredApplication(readValue(context,value,CONFIGURED_APPLICATION));} @AT@ 6224 @LENGTH@ 70
------INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @AT@ 6224 @LENGTH@ 7
------INS VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @TO@ VariableDeclarationStatement@@Boolean confValue=readValue(context,value,CONFIGURED_APPLICATION); @AT@ 6232 @LENGTH@ 61
---------MOV MethodInvocation@@readValue(context,value,CONFIGURED_APPLICATION) @TO@ VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @AT@ 6230 @LENGTH@ 49
---------INS SimpleName@@confValue @TO@ VariableDeclarationFragment@@confValue=readValue(context,value,CONFIGURED_APPLICATION) @AT@ 6232 @LENGTH@ 9


UPD IfStatement@@if (listenerContainer != null) {  log.debug("Stopping reply listener container on endpoint: {}",endpoint);  listenerContainer.stop();  listenerContainer.destroy();  listenerContainer=null;} @TO@ if (listenerContainer != null) {  log.debug("Stopping reply listener container on endpoint: {}",endpoint);  try {    listenerContainer.stop();    listenerContainer.destroy();  }  finally {    endpoint.onListenerConstainerStopped(listenerContainer);    listenerContainer=null;  }} @AT@ 10405 @LENGTH@ 245
---UPD Block@@ThenBody:{  log.debug("Stopping reply listener container on endpoint: {}",endpoint);  listenerContainer.stop();  listenerContainer.destroy();  listenerContainer=null;} @TO@ ThenBody:{  log.debug("Stopping reply listener container on endpoint: {}",endpoint);  try {    listenerContainer.stop();    listenerContainer.destroy();  }  finally {    endpoint.onListenerConstainerStopped(listenerContainer);    listenerContainer=null;  }} @AT@ 10436 @LENGTH@ 214
------INS TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @TO@ Block@@ThenBody:{  log.debug("Stopping reply listener container on endpoint: {}",endpoint);  listenerContainer.stop();  listenerContainer.destroy();  listenerContainer=null;} @AT@ 10602 @LENGTH@ 245
---------MOV ExpressionStatement@@MethodInvocation:listenerContainer.stop() @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @AT@ 10536 @LENGTH@ 25
---------MOV ExpressionStatement@@MethodInvocation:listenerContainer.destroy() @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @AT@ 10574 @LENGTH@ 28
---------INS Block@@FinallyBody:{  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @AT@ 10717 @LENGTH@ 130
------------MOV ExpressionStatement@@Assignment:listenerContainer=null @TO@ Block@@FinallyBody:{  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @AT@ 10615 @LENGTH@ 25
------------INS ExpressionStatement@@MethodInvocation:endpoint.onListenerConstainerStopped(listenerContainer) @TO@ Block@@FinallyBody:{  endpoint.onListenerConstainerStopped(listenerContainer);  listenerContainer=null;} @AT@ 10735 @LENGTH@ 56
---------------INS MethodInvocation@@endpoint.onListenerConstainerStopped(listenerContainer) @TO@ ExpressionStatement@@MethodInvocation:endpoint.onListenerConstainerStopped(listenerContainer) @AT@ 10735 @LENGTH@ 55
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.onListenerConstainerStopped(listenerContainer) @AT@ 10735 @LENGTH@ 8
------------------INS SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @TO@ MethodInvocation@@endpoint.onListenerConstainerStopped(listenerContainer) @AT@ 10744 @LENGTH@ 46
---------------------INS SimpleName@@listenerContainer @TO@ SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @AT@ 10772 @LENGTH@ 17


INS MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ControllerMessages,  @AT@ 110777 @LENGTH@ 23
---INS SimpleType@@SecurityException @TO@ MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @AT@ 110759 @LENGTH@ 17
---INS SimpleName@@MethodName:illegalMultipleRoles @TO@ MethodDeclaration@@SecurityException, MethodName:illegalMultipleRoles,  @AT@ 110777 @LENGTH@ 20


DEL VariableDeclarationStatement@@final PatchInfo info=service.getValue(); @AT@ 1663 @LENGTH@ 42
---DEL Modifier@@final @AT@ 1663 @LENGTH@ 5
---DEL SimpleType@@PatchInfo @AT@ 1669 @LENGTH@ 9
---DEL VariableDeclarationFragment@@info=service.getValue() @AT@ 1679 @LENGTH@ 25
------DEL SimpleName@@info @AT@ 1679 @LENGTH@ 4
------DEL MethodInvocation@@service.getValue() @AT@ 1686 @LENGTH@ 18
---------DEL SimpleName@@Name:service @AT@ 1686 @LENGTH@ 7
---------DEL SimpleName@@MethodName:getValue:[] @AT@ 1694 @LENGTH@ 10


DEL VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1229 @LENGTH@ 72
---DEL SimpleType@@Integer @AT@ 1229 @LENGTH@ 7
---DEL VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1237 @LENGTH@ 63
------DEL SimpleName@@size @AT@ 1237 @LENGTH@ 4
------DEL MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1244 @LENGTH@ 56
---------DEL SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1244 @LENGTH@ 56
------------DEL SimpleName@@parameters @AT@ 1266 @LENGTH@ 10
------------DEL StringLiteral@@"size" @AT@ 1278 @LENGTH@ 6
------------DEL TypeLiteral@@Integer.class @AT@ 1286 @LENGTH@ 13


UPD VariableDeclarationStatement@@Properties properties=batchPropertyContext.getBatchProperties(stepExecution.getStepName()); @TO@ Properties properties=batchPropertyContext.getStepLevelProperties(stepExecution.getStepName()); @AT@ 1606 @LENGTH@ 93
---UPD VariableDeclarationFragment@@properties=batchPropertyContext.getBatchProperties(stepExecution.getStepName()) @TO@ properties=batchPropertyContext.getStepLevelProperties(stepExecution.getStepName()) @AT@ 1617 @LENGTH@ 81
------UPD MethodInvocation@@batchPropertyContext.getBatchProperties(stepExecution.getStepName()) @TO@ batchPropertyContext.getStepLevelProperties(stepExecution.getStepName()) @AT@ 1630 @LENGTH@ 68
---------UPD SimpleName@@MethodName:getBatchProperties:[stepExecution.getStepName()] @TO@ MethodName:getStepLevelProperties:[stepExecution.getStepName()] @AT@ 1651 @LENGTH@ 47


UPD IfStatement@@if (this.channel != null) {  this.channel.removeChannelListener(this);} @TO@ if (this.channel != null) {  this.channel.removeChannelListener(this);  ((MuxChannel)this.channel).destroy();} @AT@ 3157 @LENGTH@ 91
---UPD Block@@ThenBody:{  this.channel.removeChannelListener(this);} @TO@ ThenBody:{  this.channel.removeChannelListener(this);  ((MuxChannel)this.channel).destroy();} @AT@ 3183 @LENGTH@ 65
------INS ExpressionStatement@@MethodInvocation:((MuxChannel)this.channel).destroy() @TO@ Block@@ThenBody:{  this.channel.removeChannelListener(this);} @AT@ 3371 @LENGTH@ 38
---------INS MethodInvocation@@((MuxChannel)this.channel).destroy() @TO@ ExpressionStatement@@MethodInvocation:((MuxChannel)this.channel).destroy() @AT@ 3371 @LENGTH@ 37
------------INS ParenthesizedExpression@@((MuxChannel)this.channel) @TO@ MethodInvocation@@((MuxChannel)this.channel).destroy() @AT@ 3371 @LENGTH@ 27
---------------INS CastExpression@@(MuxChannel)this.channel @TO@ ParenthesizedExpression@@((MuxChannel)this.channel) @AT@ 3372 @LENGTH@ 25
------------------INS SimpleType@@MuxChannel @TO@ CastExpression@@(MuxChannel)this.channel @AT@ 3373 @LENGTH@ 10
------------------INS FieldAccess@@this.channel @TO@ CastExpression@@(MuxChannel)this.channel @AT@ 3385 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.channel @AT@ 3385 @LENGTH@ 4
---------------------INS SimpleName@@channel @TO@ FieldAccess@@this.channel @AT@ 3390 @LENGTH@ 7
------------INS SimpleName@@MethodName:destroy:[] @TO@ MethodInvocation@@((MuxChannel)this.channel).destroy() @AT@ 3399 @LENGTH@ 9


UPD IfStatement@@if (newValue.asBoolean() == false) {  RbacSanityCheckOperation.registerOperation(context);} @TO@ if (newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2261 @LENGTH@ 323
---DEL InfixExpression@@newValue.asBoolean() == false @AT@ 2265 @LENGTH@ 29
---INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @TO@ IfStatement@@if (newValue.asBoolean() == false) {  RbacSanityCheckOperation.registerOperation(context);} @AT@ 2321 @LENGTH@ 80
------INS InfixExpression@@newValue.getType() == ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2321 @LENGTH@ 42
---------INS MethodInvocation@@newValue.getType() @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2321 @LENGTH@ 18
------------INS SimpleName@@Name:newValue @TO@ MethodInvocation@@newValue.getType() @AT@ 2321 @LENGTH@ 8
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@newValue.getType() @AT@ 2330 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2339 @LENGTH@ 2
---------INS QualifiedName@@ModelType.EXPRESSION @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION @AT@ 2343 @LENGTH@ 20
------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2343 @LENGTH@ 9
------------INS SimpleName@@EXPRESSION @TO@ QualifiedName@@ModelType.EXPRESSION @AT@ 2353 @LENGTH@ 10
------INS Operator@@|| @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2363 @LENGTH@ 2
------INS InfixExpression@@newValue.asBoolean(false) == false @TO@ InfixExpression@@newValue.getType() == ModelType.EXPRESSION || newValue.asBoolean(false) == false @AT@ 2367 @LENGTH@ 34
---------MOV MethodInvocation@@newValue.asBoolean() @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2265 @LENGTH@ 20
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 2274 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 2386 @LENGTH@ 5
---------MOV Operator@@== @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2285 @LENGTH@ 2
---------MOV BooleanLiteral@@false @TO@ InfixExpression@@newValue.asBoolean(false) == false @AT@ 2289 @LENGTH@ 5


UPD TypeDeclaration@@[public]DefaultPackageScanClassResolver, ServiceSupport[PackageScanClassResolver] @TO@ [public]DefaultPackageScanClassResolver, ServiceSupport[PackageScanClassResolver, StaticService] @AT@ 2127 @LENGTH@ 19146
---INS SimpleType@@StaticService @TO@ TypeDeclaration@@[public]DefaultPackageScanClassResolver, ServiceSupport[PackageScanClassResolver] @AT@ 2271 @LENGTH@ 13


UPD ReturnStatement@@SimpleName:message @TO@ MethodInvocation:message.getBody() @AT@ 12270 @LENGTH@ 15
---INS MethodInvocation@@message.getBody() @TO@ ReturnStatement@@SimpleName:message @AT@ 12277 @LENGTH@ 17
------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getBody() @AT@ 12277 @LENGTH@ 7
------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@message.getBody() @AT@ 12285 @LENGTH@ 9
---DEL SimpleName@@message @AT@ 12277 @LENGTH@ 7


UPD IfStatement@@if (authorizationResult.getDecision() == AuthorizationResult.Decision.DENY) {  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @TO@ if (authorizationResult.getDecision() == AuthorizationResult.Decision.DENY) {  context.getResult().clear();  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12194 @LENGTH@ 324
---UPD Block@@ThenBody:{  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @TO@ ThenBody:{  context.getResult().clear();  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12270 @LENGTH@ 248
------INS ExpressionStatement@@MethodInvocation:context.getResult().clear() @TO@ Block@@ThenBody:{  throw ControllerMessages.MESSAGES.unauthorized(operation.require(OP).asString(),PathAddress.pathAddress(operation.get(OP_ADDR)),authorizationResult.getExplanation());} @AT@ 12288 @LENGTH@ 28
---------INS MethodInvocation@@context.getResult().clear() @TO@ ExpressionStatement@@MethodInvocation:context.getResult().clear() @AT@ 12288 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12288 @LENGTH@ 19
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12288 @LENGTH@ 7
------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@context.getResult().clear() @AT@ 12308 @LENGTH@ 7


UPD IfStatement@@if (connectorRefs.isDefined()) {  validateConnectors(context,operation,connectorRefs);} @TO@ if (connectorRefs.isDefined()) {  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      validateConnectors(context,operation,connectorRefs);      context.stepCompleted();    }  },OperationContext.Stage.MODEL);} @AT@ 3591 @LENGTH@ 109
---UPD Block@@ThenBody:{  validateConnectors(context,operation,connectorRefs);} @TO@ ThenBody:{  context.addStep(new OperationStepHandler(){    @Override public void execute(    OperationContext context,    ModelNode operation) throws OperationFailedException {      validateConnectors(context,operation,connectorRefs);      context.stepCompleted();    }  },OperationContext.Stage.MODEL);} @AT@ 3622 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL) @TO@ Block@@ThenBody:{  validateConnectors(context,operation,connectorRefs);} @AT@ 3695 @LENGTH@ 371
---------INS MethodInvocation@@context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL) @TO@ ExpressionStatement@@MethodInvocation:context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL) @AT@ 3695 @LENGTH@ 370
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL) @AT@ 3695 @LENGTH@ 7
------------INS SimpleName@@MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL] @TO@ MethodInvocation@@context.addStep(new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
,OperationContext.Stage.MODEL) @AT@ 3703 @LENGTH@ 362
---------------INS ClassInstanceCreation@@OperationStepHandler[] @TO@ SimpleName@@MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL] @AT@ 3711 @LENGTH@ 323
------------------INS New@@new @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 3711 @LENGTH@ 3
------------------INS SimpleType@@OperationStepHandler @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 3715 @LENGTH@ 20
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 3738 @LENGTH@ 296
---------------------INS MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3782 @LENGTH@ 238
------------------------MOV ExpressionStatement@@MethodInvocation:validateConnectors(context,operation,connectorRefs) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3636 @LENGTH@ 54
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3782 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3789 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:execute @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3794 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3802 @LENGTH@ 24
---------------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 3802 @LENGTH@ 16
---------------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 3819 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3828 @LENGTH@ 19
---------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 3828 @LENGTH@ 9
---------------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 3838 @LENGTH@ 9
------------------------INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3856 @LENGTH@ 24
------------------------INS ExpressionStatement@@MethodInvocation:context.stepCompleted() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 3978 @LENGTH@ 24
---------------------------INS MethodInvocation@@context.stepCompleted() @TO@ ExpressionStatement@@MethodInvocation:context.stepCompleted() @AT@ 3978 @LENGTH@ 23
------------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.stepCompleted() @AT@ 3978 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:stepCompleted:[] @TO@ MethodInvocation@@context.stepCompleted() @AT@ 3986 @LENGTH@ 15
---------------INS QualifiedName@@OperationContext.Stage.MODEL @TO@ SimpleName@@MethodName:addStep:[new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    validateConnectors(context,operation,connectorRefs);
    context.stepCompleted();
  }
}
, OperationContext.Stage.MODEL] @AT@ 4036 @LENGTH@ 28
------------------INS QualifiedName@@OperationContext.Stage @TO@ QualifiedName@@OperationContext.Stage.MODEL @AT@ 4036 @LENGTH@ 22
---------------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.Stage @AT@ 4036 @LENGTH@ 16
---------------------INS SimpleName@@Stage @TO@ QualifiedName@@OperationContext.Stage @AT@ 4053 @LENGTH@ 5
------------------INS SimpleName@@MODEL @TO@ QualifiedName@@OperationContext.Stage.MODEL @AT@ 4059 @LENGTH@ 5


INS MethodDeclaration@@private, voidMethodName:MyCustomCodec,  @TO@ TypeDeclaration@@[public]MyCustomCodec,  @AT@ 1412 @LENGTH@ 55
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:MyCustomCodec,  @AT@ 1412 @LENGTH@ 7
---INS SimpleName@@MethodName:MyCustomCodec @TO@ MethodDeclaration@@private, voidMethodName:MyCustomCodec,  @AT@ 1420 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:unTrackConfiguration, Runnable runnable,  @TO@ public, void, MethodName:untrackConfiguration, Runnable callback,  @AT@ 1576 @LENGTH@ 146
---UPD SimpleName@@MethodName:unTrackConfiguration @TO@ MethodName:untrackConfiguration @AT@ 1588 @LENGTH@ 20
---UPD SingleVariableDeclaration@@Runnable runnable @TO@ Runnable callback @AT@ 1609 @LENGTH@ 17
------UPD SimpleName@@runnable @TO@ callback @AT@ 1618 @LENGTH@ 8


INS VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 1663 @LENGTH@ 40
---INS SimpleType@@PatchInfo @TO@ VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @AT@ 1663 @LENGTH@ 9
---INS VariableDeclarationFragment@@info=service.getPatchInfo() @TO@ VariableDeclarationStatement@@PatchInfo info=service.getPatchInfo(); @AT@ 1673 @LENGTH@ 29
------INS SimpleName@@info @TO@ VariableDeclarationFragment@@info=service.getPatchInfo() @AT@ 1673 @LENGTH@ 4
------INS MethodInvocation@@service.getPatchInfo() @TO@ VariableDeclarationFragment@@info=service.getPatchInfo() @AT@ 1680 @LENGTH@ 22
---------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getPatchInfo() @AT@ 1680 @LENGTH@ 7
---------INS SimpleName@@MethodName:getPatchInfo:[] @TO@ MethodInvocation@@service.getPatchInfo() @AT@ 1688 @LENGTH@ 14


INS MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup({EjbSecurityDomainSetup.class}), @Category(CommonCriteria.class), public]RunAsPrincipalTestCase,  @AT@ 3906 @LENGTH@ 215
---INS Modifier@@private @TO@ MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @AT@ 3906 @LENGTH@ 7
---INS SimpleType@@WhoAmI @TO@ MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @AT@ 3914 @LENGTH@ 6
---INS SimpleName@@MethodName:lookupSingleCallerWithIdentity @TO@ MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @AT@ 3921 @LENGTH@ 30
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @AT@ 3961 @LENGTH@ 9
---INS ReturnStatement@@CastExpression:(WhoAmI)new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @TO@ MethodDeclaration@@private, WhoAmI, MethodName:lookupSingleCallerWithIdentity, Exception,  @AT@ 3981 @LENGTH@ 134
------INS CastExpression@@(WhoAmI)new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @TO@ ReturnStatement@@CastExpression:(WhoAmI)new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @AT@ 3988 @LENGTH@ 126
---------INS SimpleType@@WhoAmI @TO@ CastExpression@@(WhoAmI)new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @AT@ 3989 @LENGTH@ 6
---------INS MethodInvocation@@new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @TO@ CastExpression@@(WhoAmI)new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @AT@ 3996 @LENGTH@ 118
------------INS ClassInstanceCreation@@InitialContext[] @TO@ MethodInvocation@@new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @AT@ 3996 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@InitialContext[] @AT@ 3996 @LENGTH@ 3
---------------INS SimpleType@@InitialContext @TO@ ClassInstanceCreation@@InitialContext[] @AT@ 4000 @LENGTH@ 14
------------INS SimpleName@@MethodName:lookup:["java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()] @TO@ MethodInvocation@@new InitialContext().lookup("java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()) @AT@ 4017 @LENGTH@ 97
---------------INS InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @TO@ SimpleName@@MethodName:lookup:["java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName()] @AT@ 4024 @LENGTH@ 89
------------------INS StringLiteral@@"java:module/" @TO@ InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @AT@ 4024 @LENGTH@ 14
------------------INS Operator@@+ @TO@ InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @AT@ 4038 @LENGTH@ 1
------------------INS MethodInvocation@@SingletonCallerBean.class.getSimpleName() @TO@ InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @AT@ 4041 @LENGTH@ 41
---------------------INS TypeLiteral@@SingletonCallerBean.class @TO@ MethodInvocation@@SingletonCallerBean.class.getSimpleName() @AT@ 4041 @LENGTH@ 25
---------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@SingletonCallerBean.class.getSimpleName() @AT@ 4067 @LENGTH@ 15
------------------INS StringLiteral@@"!" @TO@ InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @AT@ 4085 @LENGTH@ 3
------------------INS MethodInvocation@@WhoAmI.class.getName() @TO@ InfixExpression@@"java:module/" + SingletonCallerBean.class.getSimpleName() + "!"+ WhoAmI.class.getName() @AT@ 4091 @LENGTH@ 22
---------------------INS TypeLiteral@@WhoAmI.class @TO@ MethodInvocation@@WhoAmI.class.getName() @AT@ 4091 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@WhoAmI.class.getName() @AT@ 4104 @LENGTH@ 9


UPD FieldDeclaration@@SimpleAttributeDefinition, [CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build()] @TO@ SimpleAttributeDefinition, [CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build()] @AT@ 3087 @LENGTH@ 190
---UPD VariableDeclarationFragment@@CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ CLASS=SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3113 @LENGTH@ 163
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setRestartJVM().build() @TO@ SimpleAttributeDefinitionBuilder.create("class",ModelType.STRING).setAllowExpression(false).setFlags(Flag.RESTART_RESOURCE_SERVICES).build() @AT@ 3121 @LENGTH@ 155
---------UPD MethodInvocation@@MethodName:setRestartJVM:[] @TO@ MethodName:setFlags:[Flag.RESTART_RESOURCE_SERVICES] @AT@ 3121 @LENGTH@ 134
------------INS QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @TO@ MethodInvocation@@MethodName:setRestartJVM:[] @AT@ 3311 @LENGTH@ 30
---------------INS SimpleName@@Flag @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 3311 @LENGTH@ 4
---------------INS SimpleName@@RESTART_RESOURCE_SERVICES @TO@ QualifiedName@@Flag.RESTART_RESOURCE_SERVICES @AT@ 3316 @LENGTH@ 25


UPD TryStatement@@try {  dst.getZookeeperClient().blockUntilConnectedOrTimedOut();  copy(curator,dst,"/fabric/registry");  copy(curator,dst,"/fabric/authentication");  copy(curator,dst,"/fabric/configs");  for (  String container : containers) {    deleteSafe(dst,"/fabric/registry/containers/alive/" + container);  }  setData(dst,ZkPath.CONFIG_ENSEMBLES.getPath(),newClusterId);  setData(dst,ZkPath.CONFIG_ENSEMBLE.getPath(newClusterId),containerList);  setData(dst,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),connectionUrl);  setData(dst,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  setData(curator,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),connectionUrl);  setData(curator,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  for (  String v : getChildren(curator,"/fabric/configs/versions")) {    for (    String container : getChildren(dst,"/fabric/configs/versions/" + v + "/containers")) {      remove(dst,"/fabric/configs/versions/" + v + "/containers/"+ container,"fabric-ensemble-" + oldClusterId + "-.*");    }    setConfigProperty(dst,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");    setConfigProperty(dst,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");    setConfigProperty(curator,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");    setConfigProperty(curator,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");  }}  finally {  dst.close();} @TO@ try {  dst.getZookeeperClient().blockUntilConnectedOrTimedOut();  copy(curator,dst,"/fabric");  for (  String container : containers) {    deleteSafe(dst,"/fabric/registry/containers/alive/" + container);  }  setData(dst,ZkPath.CONFIG_ENSEMBLES.getPath(),newClusterId);  setData(dst,ZkPath.CONFIG_ENSEMBLE.getPath(newClusterId),containerList);  setData(dst,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),connectionUrl);  setData(dst,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  setData(curator,ZkPath.CONFIG_ENSEMBLE_URL.getPath(),connectionUrl);  setData(curator,ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath(),options.getZookeeperPassword());  for (  String v : getChildren(curator,"/fabric/configs/versions")) {    for (    String container : getChildren(dst,"/fabric/configs/versions/" + v + "/containers")) {      remove(dst,"/fabric/configs/versions/" + v + "/containers/"+ container,"fabric-ensemble-" + oldClusterId + "-.*");    }    setConfigProperty(dst,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");    setConfigProperty(dst,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");    setConfigProperty(curator,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.password","${zk:" + ZkPath.CONFIG_ENSEMBLE_PASSWORD.getPath() + "}");    setConfigProperty(curator,"/fabric/configs/versions/" + v + "/profiles/default/org.fusesource.fabric.zookeeper.properties","zookeeper.url","${zk:" + ZkPath.CONFIG_ENSEMBLE_URL.getPath() + "}");  }}  finally {  dst.close();} @AT@ 28490 @LENGTH@ 2336
---DEL ExpressionStatement@@MethodInvocation:copy(curator,dst,"/fabric/registry") @AT@ 28565 @LENGTH@ 39
------DEL MethodInvocation@@copy(curator,dst,"/fabric/registry") @AT@ 28565 @LENGTH@ 38
---------DEL SimpleName@@MethodName:copy:[curator, dst, "/fabric/registry"] @AT@ 28565 @LENGTH@ 38
------------DEL SimpleName@@curator @AT@ 28570 @LENGTH@ 7
------------DEL SimpleName@@dst @AT@ 28579 @LENGTH@ 3
------------DEL StringLiteral@@"/fabric/registry" @AT@ 28584 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:copy(curator,dst,"/fabric/authentication") @AT@ 28610 @LENGTH@ 45
------DEL MethodInvocation@@copy(curator,dst,"/fabric/authentication") @AT@ 28610 @LENGTH@ 44
---------DEL SimpleName@@MethodName:copy:[curator, dst, "/fabric/authentication"] @AT@ 28610 @LENGTH@ 44
------------DEL SimpleName@@curator @AT@ 28615 @LENGTH@ 7
------------DEL SimpleName@@dst @AT@ 28624 @LENGTH@ 3
------------DEL StringLiteral@@"/fabric/authentication" @AT@ 28629 @LENGTH@ 24
---UPD ExpressionStatement@@MethodInvocation:copy(curator,dst,"/fabric/configs") @TO@ MethodInvocation:copy(curator,dst,"/fabric") @AT@ 28661 @LENGTH@ 38
------UPD MethodInvocation@@copy(curator,dst,"/fabric/configs") @TO@ copy(curator,dst,"/fabric") @AT@ 28661 @LENGTH@ 37
---------UPD SimpleName@@MethodName:copy:[curator, dst, "/fabric/configs"] @TO@ MethodName:copy:[curator, dst, "/fabric"] @AT@ 28661 @LENGTH@ 37
------------UPD StringLiteral@@"/fabric/configs" @TO@ "/fabric" @AT@ 28680 @LENGTH@ 17


UPD WhileStatement@@while (iter.hasMoreElements()) {  URL url=iter.nextElement();  try {    Properties properties=new Properties();    properties.load(url.openStream());    String names=properties.getProperty("components");    if (names != null) {      StringTokenizer tok=new StringTokenizer(names);      while (tok.hasMoreTokens()) {        String name=tok.nextToken();        map.put(name,properties);      }    }  } catch (  IOException e) {    throw new LoadPropertiesException(url,e);  }} @TO@ while (iter != null && iter.hasMoreElements()) {  URL url=iter.nextElement();  try {    Properties properties=new Properties();    properties.load(url.openStream());    String names=properties.getProperty("components");    if (names != null) {      StringTokenizer tok=new StringTokenizer(names);      while (tok.hasMoreTokens()) {        String name=tok.nextToken();        map.put(name,properties);      }    }  } catch (  IOException e) {    throw new LoadPropertiesException(url,e);  }} @AT@ 14924 @LENGTH@ 694
---INS InfixExpression@@iter != null && iter.hasMoreElements() @TO@ WhileStatement@@while (iter.hasMoreElements()) {  URL url=iter.nextElement();  try {    Properties properties=new Properties();    properties.load(url.openStream());    String names=properties.getProperty("components");    if (names != null) {      StringTokenizer tok=new StringTokenizer(names);      while (tok.hasMoreTokens()) {        String name=tok.nextToken();        map.put(name,properties);      }    }  } catch (  IOException e) {    throw new LoadPropertiesException(url,e);  }} @AT@ 14931 @LENGTH@ 38
------INS InfixExpression@@iter != null @TO@ InfixExpression@@iter != null && iter.hasMoreElements() @AT@ 14931 @LENGTH@ 12
---------INS SimpleName@@iter @TO@ InfixExpression@@iter != null @AT@ 14931 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@iter != null @AT@ 14935 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@iter != null @AT@ 14939 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@iter != null && iter.hasMoreElements() @AT@ 14943 @LENGTH@ 2
------INS MethodInvocation@@iter.hasMoreElements() @TO@ InfixExpression@@iter != null && iter.hasMoreElements() @AT@ 14947 @LENGTH@ 22
---------MOV SimpleName@@Name:iter @TO@ MethodInvocation@@iter.hasMoreElements() @AT@ 14931 @LENGTH@ 4
---------MOV SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@iter.hasMoreElements() @AT@ 14936 @LENGTH@ 17
---DEL MethodInvocation@@iter.hasMoreElements() @AT@ 14931 @LENGTH@ 22


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("incompatible permission type " + permission.getClass()) @TO@ MethodInvocation:ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2333 @LENGTH@ 92
---DEL ClassInstanceCreation@@IllegalArgumentException["incompatible permission type " + permission.getClass()] @AT@ 2339 @LENGTH@ 85
------DEL New@@new @AT@ 2339 @LENGTH@ 3
------DEL SimpleType@@IllegalArgumentException @AT@ 2343 @LENGTH@ 24
------DEL InfixExpression@@"incompatible permission type " + permission.getClass() @AT@ 2368 @LENGTH@ 55
---------DEL StringLiteral@@"incompatible permission type " @AT@ 2368 @LENGTH@ 31
---------DEL Operator@@+ @AT@ 2399 @LENGTH@ 1
---------DEL MethodInvocation@@permission.getClass() @AT@ 2402 @LENGTH@ 21
---INS MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("incompatible permission type " + permission.getClass()) @AT@ 2363 @LENGTH@ 77
------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2363 @LENGTH@ 27
------INS SimpleName@@MethodName:incompatiblePermissionType:[permission.getClass()] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.incompatiblePermissionType(permission.getClass()) @AT@ 2391 @LENGTH@ 49
---------INS MethodInvocation@@permission.getClass() @TO@ SimpleName@@MethodName:incompatiblePermissionType:[permission.getClass()] @AT@ 2418 @LENGTH@ 21
------------MOV SimpleName@@Name:permission @TO@ MethodInvocation@@permission.getClass() @AT@ 2402 @LENGTH@ 10
------------MOV SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@permission.getClass() @AT@ 2413 @LENGTH@ 10


INS MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @TO@ TypeDeclaration@@[public]IoUtils,  @AT@ 5649 @LENGTH@ 227
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5649 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5656 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5663 @LENGTH@ 4
---INS SimpleName@@MethodName:safeClose @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5668 @LENGTH@ 9
---INS SingleVariableDeclaration@@final ZipFile closeable @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5678 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ZipFile closeable @AT@ 5678 @LENGTH@ 5
------INS SimpleType@@ZipFile @TO@ SingleVariableDeclaration@@final ZipFile closeable @AT@ 5684 @LENGTH@ 7
------INS SimpleName@@closeable @TO@ SingleVariableDeclaration@@final ZipFile closeable @AT@ 5692 @LENGTH@ 9
---INS IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {  }} @TO@ MethodDeclaration@@public, static, void, MethodName:safeClose, final ZipFile closeable,  @AT@ 5713 @LENGTH@ 157
------INS InfixExpression@@closeable != null @TO@ IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {  }} @AT@ 5716 @LENGTH@ 17
---------INS SimpleName@@closeable @TO@ InfixExpression@@closeable != null @AT@ 5716 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@closeable != null @AT@ 5725 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@closeable != null @AT@ 5729 @LENGTH@ 4
------INS Block@@ThenBody:{  try {    closeable.close();  } catch (  IOException e) {  }} @TO@ IfStatement@@if (closeable != null) {  try {    closeable.close();  } catch (  IOException e) {  }} @AT@ 5735 @LENGTH@ 135
---------INS TryStatement@@try {  closeable.close();} catch (IOException e) {} @TO@ Block@@ThenBody:{  try {    closeable.close();  } catch (  IOException e) {  }} @AT@ 5749 @LENGTH@ 111
------------INS ExpressionStatement@@MethodInvocation:closeable.close() @TO@ TryStatement@@try {  closeable.close();} catch (IOException e) {} @AT@ 5771 @LENGTH@ 18
---------------INS MethodInvocation@@closeable.close() @TO@ ExpressionStatement@@MethodInvocation:closeable.close() @AT@ 5771 @LENGTH@ 17
------------------INS SimpleName@@Name:closeable @TO@ MethodInvocation@@closeable.close() @AT@ 5771 @LENGTH@ 9
------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@closeable.close() @AT@ 5781 @LENGTH@ 7
------------INS CatchClause@@catch (IOException e) {} @TO@ TryStatement@@try {  closeable.close();} catch (IOException e) {} @AT@ 5804 @LENGTH@ 56
---------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {} @AT@ 5811 @LENGTH@ 13
------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 5811 @LENGTH@ 11
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 5823 @LENGTH@ 1


UPD VariableDeclarationStatement@@Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build(); @TO@ Patch patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build(); @AT@ 5830 @LENGTH@ 297
---UPD VariableDeclarationFragment@@patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ patch=PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 5836 @LENGTH@ 290
------UPD MethodInvocation@@PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setPatchType(PatchType.ONE_OFF).addAppliesTo(info.getVersion()).addContentModification(moduleAdded).build() @TO@ PatchBuilder.create().setPatchId(patchID).setDescription(randomString()).setOneOffType(info.getVersion()).addContentModification(moduleAdded).build() @AT@ 5844 @LENGTH@ 282
---------UPD MethodInvocation@@MethodName:addAppliesTo:[info.getVersion()] @TO@ MethodName:setOneOffType:[info.getVersion()] @AT@ 5844 @LENGTH@ 204
---------DEL MethodInvocation@@MethodName:setPatchType:[PatchType.ONE_OFF] @AT@ 5844 @LENGTH@ 155
------------DEL QualifiedName@@PatchType.ONE_OFF @AT@ 5981 @LENGTH@ 17
---------------DEL SimpleName@@PatchType @AT@ 5981 @LENGTH@ 9
---------------DEL SimpleName@@ONE_OFF @AT@ 5991 @LENGTH@ 7


UPD VariableDeclarationStatement@@Option[] options=new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.1").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)}; @TO@ Option[] options=new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.3").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)}; @AT@ 5716 @LENGTH@ 1229
---UPD VariableDeclarationFragment@@options=new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.1").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ options=new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.3").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 5725 @LENGTH@ 1219
------UPD ArrayCreation@@new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.1").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.3").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 5748 @LENGTH@ 1196
---------UPD ArrayInitializer@@{karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.1").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @TO@ {karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.3").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")),KarafDistributionOption.keepRuntimeFolder(),replaceConfigurationFile("etc/config.properties",new File("src/test/resources/org/apache/camel/itest/karaf/config.properties")),replaceConfigurationFile("etc/custom.properties",new File("src/test/resources/org/apache/camel/itest/karaf/custom.properties")),logLevel(LogLevelOption.LogLevel.INFO),scanFeatures(getCamelKarafFeatureUrl(),"cxf-jaxb","camel-core","camel-spring","camel-" + feature)} @AT@ 5760 @LENGTH@ 1184
------------UPD MethodInvocation@@karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.1").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")) @TO@ karafDistributionConfiguration().frameworkUrl(maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("tar.gz").versionAsInProject()).karafVersion("2.3.3").name("Apache Karaf").unpackDirectory(new File("target/paxexam/unpack/")) @AT@ 5778 @LENGTH@ 382
---------------UPD MethodInvocation@@MethodName:karafVersion:["2.3.1"] @TO@ MethodName:karafVersion:["2.3.3"] @AT@ 5778 @LENGTH@ 288
------------------UPD StringLiteral@@"2.3.1" @TO@ "2.3.3" @AT@ 6058 @LENGTH@ 7


UPD TryStatement@@try {  String str=getAttributes().get(PARENTS);  if (str == null || str.isEmpty()) {    return new Profile[0];  }  str=str.trim();  List<Profile> profiles=new ArrayList<Profile>();  for (  String p : str.split(" ")) {    profiles.add(new ProfileImpl(p,version,service));  }  return profiles.toArray(new Profile[profiles.size()]);} catch (Exception e) {  throw FabricException.launderThrowable(e);} @TO@ try {  String str=getAttributes().get(PARENTS);  if (str == null || str.isEmpty()) {    return new Profile[0];  }  str=str.trim();  List<Profile> profiles=new ArrayList<Profile>();  Version v=service.getVersion(version);  for (  String p : str.split(" ")) {    profiles.add(v.getProfile(p));  }  return profiles.toArray(new Profile[profiles.size()]);} catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 5243 @LENGTH@ 546
---INS VariableDeclarationStatement@@Version v=service.getVersion(version); @TO@ TryStatement@@try {  String str=getAttributes().get(PARENTS);  if (str == null || str.isEmpty()) {    return new Profile[0];  }  str=str.trim();  List<Profile> profiles=new ArrayList<Profile>();  for (  String p : str.split(" ")) {    profiles.add(new ProfileImpl(p,version,service));  }  return profiles.toArray(new Profile[profiles.size()]);} catch (Exception e) {  throw FabricException.launderThrowable(e);} @AT@ 5426 @LENGTH@ 40
------INS SimpleType@@Version @TO@ VariableDeclarationStatement@@Version v=service.getVersion(version); @AT@ 5426 @LENGTH@ 7
------INS VariableDeclarationFragment@@v=service.getVersion(version) @TO@ VariableDeclarationStatement@@Version v=service.getVersion(version); @AT@ 5434 @LENGTH@ 31
---------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v=service.getVersion(version) @AT@ 5434 @LENGTH@ 1
---------INS MethodInvocation@@service.getVersion(version) @TO@ VariableDeclarationFragment@@v=service.getVersion(version) @AT@ 5438 @LENGTH@ 27
------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getVersion(version) @AT@ 5438 @LENGTH@ 7
------------INS SimpleName@@MethodName:getVersion:[version] @TO@ MethodInvocation@@service.getVersion(version) @AT@ 5446 @LENGTH@ 19
---------------INS SimpleName@@version @TO@ SimpleName@@MethodName:getVersion:[version] @AT@ 5457 @LENGTH@ 7
---UPD EnhancedForStatement@@for (String p : str.split(" ")) {  profiles.add(new ProfileImpl(p,version,service));} @TO@ for (String p : str.split(" ")) {  profiles.add(v.getProfile(p));} @AT@ 5510 @LENGTH@ 115
------UPD ExpressionStatement@@MethodInvocation:profiles.add(new ProfileImpl(p,version,service)) @TO@ MethodInvocation:profiles.add(v.getProfile(p)) @AT@ 5560 @LENGTH@ 51
---------UPD MethodInvocation@@profiles.add(new ProfileImpl(p,version,service)) @TO@ profiles.add(v.getProfile(p)) @AT@ 5560 @LENGTH@ 50
------------UPD SimpleName@@MethodName:add:[new ProfileImpl(p,version,service)] @TO@ MethodName:add:[v.getProfile(p)] @AT@ 5569 @LENGTH@ 41
---------------INS MethodInvocation@@v.getProfile(p) @TO@ SimpleName@@MethodName:add:[new ProfileImpl(p,version,service)] @AT@ 5542 @LENGTH@ 15
------------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getProfile(p) @AT@ 5542 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getProfile:[p] @TO@ MethodInvocation@@v.getProfile(p) @AT@ 5544 @LENGTH@ 13
---------------------INS SimpleName@@p @TO@ SimpleName@@MethodName:getProfile:[p] @AT@ 5555 @LENGTH@ 1
---------------DEL ClassInstanceCreation@@ProfileImpl[p, version, service] @AT@ 5573 @LENGTH@ 36
------------------DEL New@@new @AT@ 5573 @LENGTH@ 3
------------------DEL SimpleType@@ProfileImpl @AT@ 5577 @LENGTH@ 11
------------------DEL SimpleName@@p @AT@ 5589 @LENGTH@ 1
------------------DEL SimpleName@@version @AT@ 5592 @LENGTH@ 7
------------------DEL SimpleName@@service @AT@ 5601 @LENGTH@ 7


UPD IfStatement@@if (host == null) {  host=ObjectHelper.before(remaining,"/");} @TO@ if (host == null) {  host=ObjectHelper.before(remaining,"/");  if (host == null) {    host=remaining;  }} @AT@ 9604 @LENGTH@ 85
---UPD Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @TO@ ThenBody:{  host=ObjectHelper.before(remaining,"/");  if (host == null) {    host=remaining;  }} @AT@ 9622 @LENGTH@ 67
------INS IfStatement@@if (host == null) {  host=remaining;} @TO@ Block@@ThenBody:{  host=ObjectHelper.before(remaining,"/");} @AT@ 9692 @LENGTH@ 67
---------INS InfixExpression@@host == null @TO@ IfStatement@@if (host == null) {  host=remaining;} @AT@ 9696 @LENGTH@ 12
------------INS SimpleName@@host @TO@ InfixExpression@@host == null @AT@ 9696 @LENGTH@ 4
------------INS Operator@@== @TO@ InfixExpression@@host == null @AT@ 9700 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@host == null @AT@ 9704 @LENGTH@ 4
---------INS Block@@ThenBody:{  host=remaining;} @TO@ IfStatement@@if (host == null) {  host=remaining;} @AT@ 9710 @LENGTH@ 49
------------INS ExpressionStatement@@Assignment:host=remaining @TO@ Block@@ThenBody:{  host=remaining;} @AT@ 9728 @LENGTH@ 17
---------------INS Assignment@@host=remaining @TO@ ExpressionStatement@@Assignment:host=remaining @AT@ 9728 @LENGTH@ 16
------------------INS SimpleName@@host @TO@ Assignment@@host=remaining @AT@ 9728 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@host=remaining @AT@ 9732 @LENGTH@ 1
------------------INS SimpleName@@remaining @TO@ Assignment@@host=remaining @AT@ 9735 @LENGTH@ 9


UPD IfStatement@@if (listenerContainer != null) {  listenerContainer.stop();  listenerContainer.destroy();} @TO@ if (listenerContainer != null) {  try {    listenerContainer.stop();    listenerContainer.destroy();  }  finally {    getEndpoint().onListenerConstainerStopped(listenerContainer);  }} @AT@ 7501 @LENGTH@ 121
---UPD Block@@ThenBody:{  listenerContainer.stop();  listenerContainer.destroy();} @TO@ ThenBody:{  try {    listenerContainer.stop();    listenerContainer.destroy();  }  finally {    getEndpoint().onListenerConstainerStopped(listenerContainer);  }} @AT@ 7532 @LENGTH@ 90
------INS TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  getEndpoint().onListenerConstainerStopped(listenerContainer);} @TO@ Block@@ThenBody:{  listenerContainer.stop();  listenerContainer.destroy();} @AT@ 7608 @LENGTH@ 208
---------MOV ExpressionStatement@@MethodInvocation:listenerContainer.stop() @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  getEndpoint().onListenerConstainerStopped(listenerContainer);} @AT@ 7546 @LENGTH@ 25
---------MOV ExpressionStatement@@MethodInvocation:listenerContainer.destroy() @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  getEndpoint().onListenerConstainerStopped(listenerContainer);} @AT@ 7584 @LENGTH@ 28
---------INS Block@@FinallyBody:{  getEndpoint().onListenerConstainerStopped(listenerContainer);} @TO@ TryStatement@@try {  listenerContainer.stop();  listenerContainer.destroy();}  finally {  getEndpoint().onListenerConstainerStopped(listenerContainer);} @AT@ 7723 @LENGTH@ 93
------------INS ExpressionStatement@@MethodInvocation:getEndpoint().onListenerConstainerStopped(listenerContainer) @TO@ Block@@FinallyBody:{  getEndpoint().onListenerConstainerStopped(listenerContainer);} @AT@ 7741 @LENGTH@ 61
---------------INS MethodInvocation@@getEndpoint().onListenerConstainerStopped(listenerContainer) @TO@ ExpressionStatement@@MethodInvocation:getEndpoint().onListenerConstainerStopped(listenerContainer) @AT@ 7741 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().onListenerConstainerStopped(listenerContainer) @AT@ 7741 @LENGTH@ 13
------------------INS SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @TO@ MethodInvocation@@getEndpoint().onListenerConstainerStopped(listenerContainer) @AT@ 7755 @LENGTH@ 46
---------------------INS SimpleName@@listenerContainer @TO@ SimpleName@@MethodName:onListenerConstainerStopped:[listenerContainer] @AT@ 7783 @LENGTH@ 17


UPD MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @TO@ public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes, boolean isDefaultResource,  @AT@ 13453 @LENGTH@ 135
---INS SingleVariableDeclaration@@boolean isDefaultResource @TO@ MethodDeclaration@@public, AuthorizationResponse, MethodName:authorizeResource, boolean attributes,  @AT@ 13520 @LENGTH@ 25
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 13520 @LENGTH@ 7
------INS SimpleName@@isDefaultResource @TO@ SingleVariableDeclaration@@boolean isDefaultResource @AT@ 13528 @LENGTH@ 17
---UPD ReturnStatement@@MethodInvocation:primaryContext.authorizeResource(attributes) @TO@ MethodInvocation:primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 13530 @LENGTH@ 52
------UPD MethodInvocation@@primaryContext.authorizeResource(attributes) @TO@ primaryContext.authorizeResource(attributes,isDefaultResource) @AT@ 13537 @LENGTH@ 44
---------UPD SimpleName@@MethodName:authorizeResource:[attributes] @TO@ MethodName:authorizeResource:[attributes, isDefaultResource] @AT@ 13552 @LENGTH@ 29
------------INS SimpleName@@isDefaultResource @TO@ SimpleName@@MethodName:authorizeResource:[attributes] @AT@ 13609 @LENGTH@ 17


UPD TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @TO@ [@Configuration, @ComponentScan, @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 592 @LENGTH@ 447
---DEL NormalAnnotation@@@ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class) @AT@ 607 @LENGTH@ 66
---INS MarkerAnnotation@@@ComponentScan @TO@ TypeDeclaration@@[@Configuration, @ComponentScan(basePackageClasses=MongoDbRepositoryConfig.class), @EnableMongoRepositories, public]MongoDbRepositoryConfig,  @AT@ 1228 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName1").equals("jobPropertyValue1")) @TO@ MethodInvocation:org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName1") == null) @AT@ 16351 @LENGTH@ 120
---UPD MethodInvocation@@org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName1").equals("jobPropertyValue1")) @TO@ org.springframework.util.Assert.isTrue(stepContext.getProperties().get("jobPropertyName1") == null) @AT@ 16351 @LENGTH@ 119
------UPD SimpleName@@MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName1").equals("jobPropertyValue1")] @TO@ MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName1") == null] @AT@ 16383 @LENGTH@ 87
---------DEL MethodInvocation@@stepContext.getProperties().get("jobPropertyName1").equals("jobPropertyValue1") @AT@ 16390 @LENGTH@ 79
------------DEL MethodInvocation@@MethodName:get:["jobPropertyName1"] @AT@ 16390 @LENGTH@ 51
---------------DEL StringLiteral@@"jobPropertyName1" @AT@ 16422 @LENGTH@ 18
---------INS InfixExpression@@stepContext.getProperties().get("jobPropertyName1") == null @TO@ SimpleName@@MethodName:isTrue:[stepContext.getProperties().get("jobPropertyName1").equals("jobPropertyValue1")] @AT@ 16390 @LENGTH@ 59
------------INS MethodInvocation@@stepContext.getProperties().get("jobPropertyName1") @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName1") == null @AT@ 16390 @LENGTH@ 51
---------------MOV MethodInvocation@@MethodName:getProperties:[] @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName1") @AT@ 16390 @LENGTH@ 27
---------------MOV SimpleName@@Name:stepContext @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName1") @AT@ 16390 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:equals:["jobPropertyValue1"] @TO@ MethodInvocation@@stepContext.getProperties().get("jobPropertyName1") @AT@ 16442 @LENGTH@ 27
------------INS Operator@@== @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName1") == null @AT@ 16441 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@stepContext.getProperties().get("jobPropertyName1") == null @AT@ 16445 @LENGTH@ 4


DEL MethodDeclaration@@public, voidMethodName:CommandExecutionException,  @AT@ 126 @LENGTH@ 42
---DEL Modifier@@public @AT@ 126 @LENGTH@ 6
---DEL SimpleName@@MethodName:CommandExecutionException @AT@ 133 @LENGTH@ 25

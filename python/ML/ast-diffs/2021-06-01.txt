UPD SuperConstructorInvocation@@super("The destination file already exits: " + resource.getAbsolutePath());
 @TO@ super("The destination file already exists: " + resource.getAbsolutePath());
 @AT@ 1045 @LENGTH@ 75
---UPD InfixExpression@@"The destination file already exits: " + resource.getAbsolutePath() @TO@ "The destination file already exists: " + resource.getAbsolutePath() @AT@ 1051 @LENGTH@ 67
------UPD StringLiteral@@"The destination file already exits: " @TO@ "The destination file already exists: " @AT@ 1051 @LENGTH@ 38


INS ExpressionStatement@@MethodInvocation:givenExtractPrincipalWillReturn() @TO@ MethodDeclaration@@public, void, MethodName:shouldReturnAuthenticationForValidCertificate,  @AT@ 2467 @LENGTH@ 34
---INS MethodInvocation@@MethodName:givenExtractPrincipalWillReturn:[] @TO@ ExpressionStatement@@MethodInvocation:givenExtractPrincipalWillReturn() @AT@ 2467 @LENGTH@ 33


DEL FieldDeclaration@@protected, static, long, [ID_OF_NON_EXISTING_PRIMITIVES_NODE] @AT@ 7661 @LENGTH@ 57
---DEL Modifier@@protected @AT@ 7661 @LENGTH@ 9
---DEL Modifier@@static @AT@ 7671 @LENGTH@ 6
---DEL PrimitiveType@@long @AT@ 7678 @LENGTH@ 4
---DEL VariableDeclarationFragment@@ID_OF_NON_EXISTING_PRIMITIVES_NODE @AT@ 7683 @LENGTH@ 34
------DEL SimpleName@@ID_OF_NON_EXISTING_PRIMITIVES_NODE @AT@ 7683 @LENGTH@ 34


INS MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @TO@ TypeDeclaration@@[public]SymbolicLinkFileFilter, AbstractFileFilter[Serializable] @AT@ 2705 @LENGTH@ 136
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @AT@ 2705 @LENGTH@ 6
---INS SimpleName@@MethodName:SymbolicLinkFileFilter @TO@ MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @AT@ 2712 @LENGTH@ 22
---INS SingleVariableDeclaration@@final FileVisitResult onAccept @TO@ MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @AT@ 2735 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final FileVisitResult onAccept @AT@ 2735 @LENGTH@ 5
------INS SimpleType@@FileVisitResult @TO@ SingleVariableDeclaration@@final FileVisitResult onAccept @AT@ 2741 @LENGTH@ 15
------INS SimpleName@@onAccept @TO@ SingleVariableDeclaration@@final FileVisitResult onAccept @AT@ 2757 @LENGTH@ 8
---INS SingleVariableDeclaration@@final FileVisitResult onReject @TO@ MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @AT@ 2767 @LENGTH@ 30
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final FileVisitResult onReject @AT@ 2767 @LENGTH@ 5
------INS SimpleType@@FileVisitResult @TO@ SingleVariableDeclaration@@final FileVisitResult onReject @AT@ 2773 @LENGTH@ 15
------INS SimpleName@@onReject @TO@ SingleVariableDeclaration@@final FileVisitResult onReject @AT@ 2789 @LENGTH@ 8
---INS SuperConstructorInvocation@@super(onAccept,onReject);
 @TO@ MethodDeclaration@@public, voidMethodName:SymbolicLinkFileFilter, final FileVisitResult onAccept, final FileVisitResult onReject,  @AT@ 2809 @LENGTH@ 26
------INS SimpleName@@onAccept @TO@ SuperConstructorInvocation@@super(onAccept,onReject);
 @AT@ 2815 @LENGTH@ 8
------INS SimpleName@@onReject @TO@ SuperConstructorInvocation@@super(onAccept,onReject);
 @AT@ 2825 @LENGTH@ 8


UPD LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @TO@ parameter -> {
  int index=parameter.getIndex();
  Object value=parameterAccessor.getBindableValue(index);
  Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value);
  Object convertedValue=super.convertParameter(value);
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue));
  resolvedParameters.put(Integer.toString(index),convertedValue);
}
 @AT@ 7347 @LENGTH@ 439
---UPD VariableDeclarationStatement@@int parameterIndex=parameter.getIndex(); @TO@ int index=parameter.getIndex(); @AT@ 7366 @LENGTH@ 42
------UPD VariableDeclarationFragment@@parameterIndex=parameter.getIndex() @TO@ index=parameter.getIndex() @AT@ 7370 @LENGTH@ 37
---------UPD SimpleName@@parameterIndex @TO@ index @AT@ 7370 @LENGTH@ 14
---UPD VariableDeclarationStatement@@Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)); @TO@ Object value=parameterAccessor.getBindableValue(index); @AT@ 7412 @LENGTH@ 99
------UPD VariableDeclarationFragment@@parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @TO@ value=parameterAccessor.getBindableValue(index) @AT@ 7419 @LENGTH@ 91
---------UPD SimpleName@@parameterValue @TO@ value @AT@ 7419 @LENGTH@ 14
---------DEL SuperMethodInvocation@@super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @AT@ 7436 @LENGTH@ 74
------------DEL SimpleName@@MethodName:convertParameter:[parameterAccessor.getBindableValue(parameterIndex)] @AT@ 7442 @LENGTH@ 16
------------DEL MethodInvocation@@parameterAccessor.getBindableValue(parameterIndex) @AT@ 7459 @LENGTH@ 50
---------INS MethodInvocation@@parameterAccessor.getBindableValue(index) @TO@ VariableDeclarationFragment@@parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @AT@ 7471 @LENGTH@ 41
------------MOV SimpleName@@Name:parameterAccessor @TO@ MethodInvocation@@parameterAccessor.getBindableValue(index) @AT@ 7459 @LENGTH@ 17
------------MOV SimpleName@@MethodName:getBindableValue:[parameterIndex] @TO@ MethodInvocation@@parameterAccessor.getBindableValue(index) @AT@ 7477 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @TO@ LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @AT@ 7517 @LENGTH@ 106
------INS MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @TO@ ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 7517 @LENGTH@ 105
---------INS SimpleName@@Name:Neo4jQuerySupport @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 7517 @LENGTH@ 17
---------INS SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 7535 @LENGTH@ 87
------------INS MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @TO@ SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @AT@ 7554 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 7554 @LENGTH@ 19
---------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 7554 @LENGTH@ 9
---------------INS SimpleName@@MethodName:orElseGet:[() -> Integer.toString(index)] @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 7574 @LENGTH@ 40
------------------INS LambdaExpression@@() -> Integer.toString(index) @TO@ SimpleName@@MethodName:orElseGet:[() -> Integer.toString(index)] @AT@ 7584 @LENGTH@ 29
---------------------INS MethodInvocation@@Integer.toString(index) @TO@ LambdaExpression@@() -> Integer.toString(index) @AT@ 7590 @LENGTH@ 23
------------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.toString(index) @AT@ 7590 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:toString:[index] @TO@ MethodInvocation@@Integer.toString(index) @AT@ 7598 @LENGTH@ 15
---------------------------INS SimpleName@@index @TO@ SimpleName@@MethodName:toString:[index] @AT@ 7607 @LENGTH@ 5
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @AT@ 7616 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue)) @TO@ MethodInvocation:parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue)) @AT@ 7569 @LENGTH@ 102
------UPD MethodInvocation@@parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue)) @TO@ parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue)) @AT@ 7569 @LENGTH@ 101
---------UPD SimpleName@@MethodName:ifPresent:[parameterName -> resolvedParameters.put(parameterName,parameterValue)] @TO@ MethodName:ifPresent:[parameterName -> resolvedParameters.put(parameterName,convertedValue)] @AT@ 7589 @LENGTH@ 81
------------UPD LambdaExpression@@parameterName -> resolvedParameters.put(parameterName,parameterValue) @TO@ parameterName -> resolvedParameters.put(parameterName,convertedValue) @AT@ 7599 @LENGTH@ 70
---------------UPD MethodInvocation@@resolvedParameters.put(parameterName,parameterValue) @TO@ resolvedParameters.put(parameterName,convertedValue) @AT@ 7616 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:put:[parameterName, parameterValue] @TO@ MethodName:put:[parameterName, convertedValue] @AT@ 7635 @LENGTH@ 34
---------------------UPD SimpleName@@parameterValue @TO@ convertedValue @AT@ 7654 @LENGTH@ 14
---INS VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @TO@ LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @AT@ 7627 @LENGTH@ 54
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @AT@ 7627 @LENGTH@ 6
------INS VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @TO@ VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @AT@ 7634 @LENGTH@ 46
---------INS SimpleName@@convertedValue @TO@ VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @AT@ 7634 @LENGTH@ 14
---------INS SuperMethodInvocation@@super.convertParameter(value) @TO@ VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @AT@ 7651 @LENGTH@ 29
------------INS SimpleName@@MethodName:convertParameter:[value] @TO@ SuperMethodInvocation@@super.convertParameter(value) @AT@ 7657 @LENGTH@ 16
------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.convertParameter(value) @AT@ 7674 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:resolvedParameters.put(Integer.toString(parameterIndex),parameterValue) @TO@ MethodInvocation:resolvedParameters.put(Integer.toString(index),convertedValue) @AT@ 7709 @LENGTH@ 73
------UPD MethodInvocation@@resolvedParameters.put(Integer.toString(parameterIndex),parameterValue) @TO@ resolvedParameters.put(Integer.toString(index),convertedValue) @AT@ 7709 @LENGTH@ 72
---------UPD SimpleName@@MethodName:put:[Integer.toString(parameterIndex), parameterValue] @TO@ MethodName:put:[Integer.toString(index), convertedValue] @AT@ 7728 @LENGTH@ 53
------------UPD MethodInvocation@@Integer.toString(parameterIndex) @TO@ Integer.toString(index) @AT@ 7732 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:toString:[parameterIndex] @TO@ MethodName:toString:[index] @AT@ 7740 @LENGTH@ 24
------------------UPD SimpleName@@parameterIndex @TO@ index @AT@ 7749 @LENGTH@ 14
------------UPD SimpleName@@parameterValue @TO@ convertedValue @AT@ 7766 @LENGTH@ 14


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@UnwrappedMongoPersistentProperty, [MongoPersistentProperty] @AT@ 7003 @LENGTH@ 68
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 7003 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 7010 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 7014 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Objects.hash(delegate,context) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 7029 @LENGTH@ 39
------INS MethodInvocation@@Objects.hash(delegate,context) @TO@ ReturnStatement@@MethodInvocation:Objects.hash(delegate,context) @AT@ 7036 @LENGTH@ 31
---------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.hash(delegate,context) @AT@ 7036 @LENGTH@ 7
---------INS SimpleName@@MethodName:hash:[delegate, context] @TO@ MethodInvocation@@Objects.hash(delegate,context) @AT@ 7044 @LENGTH@ 23
------------INS SimpleName@@delegate @TO@ SimpleName@@MethodName:hash:[delegate, context] @AT@ 7049 @LENGTH@ 8
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:hash:[delegate, context] @AT@ 7059 @LENGTH@ 7


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurations, Exception,  @AT@ 4892 @LENGTH@ 633
---DEL PrimitiveType@@void @AT@ 4887 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurations @AT@ 4892 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 4943 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining=""; @AT@ 4963 @LENGTH@ 28
------DEL Modifier@@final @AT@ 4963 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4969 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="" @AT@ 4976 @LENGTH@ 14
---------DEL SimpleName@@remaining @AT@ 4976 @LENGTH@ 9
---------DEL StringLiteral@@"" @AT@ 4988 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final String uri="debezium:"; @AT@ 5000 @LENGTH@ 31
------DEL Modifier@@final @AT@ 5000 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5006 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:" @AT@ 5013 @LENGTH@ 17
---------DEL SimpleName@@uri @AT@ 5013 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:" @AT@ 5019 @LENGTH@ 11
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5040 @LENGTH@ 479
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext()) @AT@ 5045 @LENGTH@ 97
---------DEL Modifier@@final @AT@ 5045 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5051 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext()) @AT@ 5069 @LENGTH@ 73
------------DEL SimpleName@@debeziumComponent @AT@ 5069 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumMySqlComponent[new DefaultCamelContext()] @AT@ 5089 @LENGTH@ 53
---------------DEL New@@new @AT@ 5089 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumMySqlComponent @AT@ 5093 @LENGTH@ 22
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5116 @LENGTH@ 25
------------------DEL New@@new @AT@ 5116 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5120 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5158 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5158 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5158 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5176 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5232 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5232 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5232 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5250 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5267 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5287 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5287 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5293 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5293 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5297 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5305 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5313 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5313 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5326 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5326 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5338 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5363 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5363 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 5363 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5376 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 5408 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5432 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5432 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 5432 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 5450 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 5465 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 5470 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 5481 @LENGTH@ 10


INS FieldDeclaration@@String, [SKIP_PROVISION="wildfly.provision.skip"] @TO@ TypeDeclaration@@[public]PropertyNames,  @AT@ 2838 @LENGTH@ 49
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [SKIP_PROVISION="wildfly.provision.skip"] @AT@ 2838 @LENGTH@ 6
---INS VariableDeclarationFragment@@SKIP_PROVISION="wildfly.provision.skip" @TO@ FieldDeclaration@@String, [SKIP_PROVISION="wildfly.provision.skip"] @AT@ 2845 @LENGTH@ 41
------INS SimpleName@@SKIP_PROVISION @TO@ VariableDeclarationFragment@@SKIP_PROVISION="wildfly.provision.skip" @AT@ 2845 @LENGTH@ 14
------INS StringLiteral@@"wildfly.provision.skip" @TO@ VariableDeclarationFragment@@SKIP_PROVISION="wildfly.provision.skip" @AT@ 2862 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:logger.debug("Sending Camel Exchange to: " + camelUri) @TO@ MethodInvocation:logger.debug("Sending Camel Exchange to: {}",camelUri) @AT@ 8088 @LENGTH@ 55
---UPD MethodInvocation@@logger.debug("Sending Camel Exchange to: " + camelUri) @TO@ logger.debug("Sending Camel Exchange to: {}",camelUri) @AT@ 8088 @LENGTH@ 54
------UPD SimpleName@@MethodName:debug:["Sending Camel Exchange to: " + camelUri] @TO@ MethodName:debug:["Sending Camel Exchange to: {}", camelUri] @AT@ 8095 @LENGTH@ 47
---------DEL InfixExpression@@"Sending Camel Exchange to: " + camelUri @AT@ 8101 @LENGTH@ 40
------------DEL StringLiteral@@"Sending Camel Exchange to: " @AT@ 8101 @LENGTH@ 29
------------DEL Operator@@+ @AT@ 8130 @LENGTH@ 1
------------DEL SimpleName@@camelUri @AT@ 8133 @LENGTH@ 8
---------INS StringLiteral@@"Sending Camel Exchange to: {}" @TO@ SimpleName@@MethodName:debug:["Sending Camel Exchange to: " + camelUri] @AT@ 8101 @LENGTH@ 31
---------INS SimpleName@@camelUri @TO@ SimpleName@@MethodName:debug:["Sending Camel Exchange to: " + camelUri] @AT@ 8134 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:handler=exceptionConfig.getAccessDeniedHandler() @TO@ Assignment:handler=exceptionConfig.getAccessDeniedHandler(http) @AT@ 9586 @LENGTH@ 51
---UPD Assignment@@handler=exceptionConfig.getAccessDeniedHandler() @TO@ handler=exceptionConfig.getAccessDeniedHandler(http) @AT@ 9586 @LENGTH@ 50
------UPD MethodInvocation@@exceptionConfig.getAccessDeniedHandler() @TO@ exceptionConfig.getAccessDeniedHandler(http) @AT@ 9596 @LENGTH@ 40
---------UPD SimpleName@@MethodName:getAccessDeniedHandler:[] @TO@ MethodName:getAccessDeniedHandler:[http] @AT@ 9612 @LENGTH@ 24
------------INS SimpleName@@http @TO@ SimpleName@@MethodName:getAccessDeniedHandler:[] @AT@ 9654 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testTransferExeption, Exception,  @TO@ public, void, MethodName:testTransferException,  @AT@ 1947 @LENGTH@ 635
---UPD SimpleName@@MethodName:testTransferExeption @TO@ MethodName:testTransferException @AT@ 1959 @LENGTH@ 20
---DEL SimpleType@@Exception @AT@ 1989 @LENGTH@ 9
---INS VariableDeclarationStatement@@String uri=getUri(); @TO@ MethodDeclaration@@public, void, MethodName:testTransferExeption, Exception,  @AT@ 2177 @LENGTH@ 22
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri=getUri(); @AT@ 2177 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri=getUri() @TO@ VariableDeclarationStatement@@String uri=getUri(); @AT@ 2184 @LENGTH@ 14
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=getUri() @AT@ 2184 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:getUri:[] @TO@ VariableDeclarationFragment@@uri=getUri() @AT@ 2190 @LENGTH@ 8
---DEL TryStatement@@try {  template.requestBody(getUri(),"Kabom");  fail("Should have thrown an exception");} catch (RuntimeCamelException e) {  assertEquals("Boom",e.getCause().getMessage());  assertNotNull(e.getCause().getStackTrace(),"Should contain a remote stacktrace");} @AT@ 2186 @LENGTH@ 321
------DEL ExpressionStatement@@MethodInvocation:template.requestBody(getUri(),"Kabom") @AT@ 2204 @LENGTH@ 40
---------DEL MethodInvocation@@template.requestBody(getUri(),"Kabom") @AT@ 2204 @LENGTH@ 39
------DEL ExpressionStatement@@MethodInvocation:fail("Should have thrown an exception") @AT@ 2257 @LENGTH@ 40
---------DEL MethodInvocation@@fail("Should have thrown an exception") @AT@ 2257 @LENGTH@ 39
------------DEL SimpleName@@MethodName:fail:["Should have thrown an exception"] @AT@ 2257 @LENGTH@ 39
------DEL CatchClause@@catch (RuntimeCamelException e) {  assertEquals("Boom",e.getCause().getMessage());  assertNotNull(e.getCause().getStackTrace(),"Should contain a remote stacktrace");} @AT@ 2308 @LENGTH@ 199
---------DEL SingleVariableDeclaration@@RuntimeCamelException e @AT@ 2315 @LENGTH@ 23
------------DEL SimpleType@@RuntimeCamelException @AT@ 2315 @LENGTH@ 21
------------DEL SimpleName@@e @AT@ 2337 @LENGTH@ 1
---INS VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception"); @TO@ MethodDeclaration@@public, void, MethodName:testTransferExeption, Exception,  @AT@ 2208 @LENGTH@ 161
------INS SimpleType@@RuntimeCamelException @TO@ VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception"); @AT@ 2208 @LENGTH@ 21
------INS VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception") @TO@ VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception"); @AT@ 2230 @LENGTH@ 138
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception") @AT@ 2230 @LENGTH@ 1
---------INS MethodInvocation@@assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception") @TO@ VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception") @AT@ 2234 @LENGTH@ 134
------------INS SimpleName@@MethodName:assertThrows:[RuntimeCamelException.class, () -> template.requestBody(uri,"Kabom"), "Should have thrown an exception"] @TO@ MethodInvocation@@assertThrows(RuntimeCamelException.class,() -> template.requestBody(uri,"Kabom"),"Should have thrown an exception") @AT@ 2234 @LENGTH@ 134
---------------INS TypeLiteral@@RuntimeCamelException.class @TO@ SimpleName@@MethodName:assertThrows:[RuntimeCamelException.class, () -> template.requestBody(uri,"Kabom"), "Should have thrown an exception"] @AT@ 2247 @LENGTH@ 27
---------------MOV StringLiteral@@"Should have thrown an exception" @TO@ SimpleName@@MethodName:assertThrows:[RuntimeCamelException.class, () -> template.requestBody(uri,"Kabom"), "Should have thrown an exception"] @AT@ 2262 @LENGTH@ 33
---------------INS LambdaExpression@@() -> template.requestBody(uri,"Kabom") @TO@ SimpleName@@MethodName:assertThrows:[RuntimeCamelException.class, () -> template.requestBody(uri,"Kabom"), "Should have thrown an exception"] @AT@ 2276 @LENGTH@ 40
------------------INS MethodInvocation@@template.requestBody(uri,"Kabom") @TO@ LambdaExpression@@() -> template.requestBody(uri,"Kabom") @AT@ 2282 @LENGTH@ 34
---------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody(uri,"Kabom") @AT@ 2204 @LENGTH@ 8
---------------------MOV SimpleName@@MethodName:requestBody:[getUri(), "Kabom"] @TO@ MethodInvocation@@template.requestBody(uri,"Kabom") @AT@ 2213 @LENGTH@ 30
------------------------DEL MethodInvocation@@MethodName:getUri:[] @AT@ 2225 @LENGTH@ 8
------------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:requestBody:[getUri(), "Kabom"] @AT@ 2303 @LENGTH@ 3
---MOV ExpressionStatement@@MethodInvocation:assertEquals("Boom",e.getCause().getMessage()) @TO@ MethodDeclaration@@public, void, MethodName:testTransferExeption, Exception,  @AT@ 2354 @LENGTH@ 48
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(e.getCause().getStackTrace(),"Should contain a remote stacktrace") @TO@ MethodDeclaration@@public, void, MethodName:testTransferExeption, Exception,  @AT@ 2415 @LENGTH@ 82


UPD IfStatement@@if ((ntlmProviderClass != null) && (ntlmProviderClass != Object.class)) {  try {    ntlmHandler.setNtlmProvider((NtlmProvider)ntlmProviderClass.getDeclaredConstructor().newInstance());  } catch (  Exception e) {    throw new RuntimeException(I18n.err(I18n.ERR_692),e);  }} @TO@ if (ntlmProviderClass != null && ntlmProviderClass != Object.class) {  try {    ntlmHandler.setNtlmProvider((NtlmProvider)ntlmProviderClass.getDeclaredConstructor().newInstance());  } catch (  Exception e) {    throw new RuntimeException(I18n.err(I18n.ERR_692),e);  }} @AT@ 7321 @LENGTH@ 421
---UPD InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @TO@ ntlmProviderClass != null && ntlmProviderClass != Object.class @AT@ 7325 @LENGTH@ 66
------DEL ParenthesizedExpression@@(ntlmProviderClass != null) @AT@ 7325 @LENGTH@ 27
---------DEL InfixExpression@@ntlmProviderClass != null @AT@ 7326 @LENGTH@ 25
------INS InfixExpression@@ntlmProviderClass != null @TO@ InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @AT@ 7325 @LENGTH@ 25
---------MOV SimpleName@@ntlmProviderClass @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7326 @LENGTH@ 17
---------MOV Operator@@!= @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7343 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7347 @LENGTH@ 4
------INS InfixExpression@@ntlmProviderClass != Object.class @TO@ InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @AT@ 7354 @LENGTH@ 33
---------MOV SimpleName@@ntlmProviderClass @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7357 @LENGTH@ 17
---------MOV Operator@@!= @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7374 @LENGTH@ 2
---------MOV TypeLiteral@@Object.class @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7378 @LENGTH@ 12
------DEL ParenthesizedExpression@@(ntlmProviderClass != Object.class) @AT@ 7356 @LENGTH@ 35
---------DEL InfixExpression@@ntlmProviderClass != Object.class @AT@ 7357 @LENGTH@ 33


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @TO@ TypeDeclaration@@HdfsNormalFileHandler, DefaultHdfsFile<OutputStream,InputStream> @AT@ 1519 @LENGTH@ 87
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @AT@ 1519 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @AT@ 1527 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @AT@ 1534 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @AT@ 1540 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class)] @AT@ 1547 @LENGTH@ 58
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class) @AT@ 1547 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(HdfsNormalFileHandler.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(HdfsNormalFileHandler.class) @AT@ 1553 @LENGTH@ 52
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(HdfsNormalFileHandler.class) @AT@ 1553 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[HdfsNormalFileHandler.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(HdfsNormalFileHandler.class) @AT@ 1567 @LENGTH@ 38
------------INS TypeLiteral@@HdfsNormalFileHandler.class @TO@ SimpleName@@MethodName:getLogger:[HdfsNormalFileHandler.class] @AT@ 1577 @LENGTH@ 27


UPD VariableDeclarationStatement@@Predicate predicate=onNewPredicate(PredicateBuilder.isEqualTo(expression,right)); @TO@ Predicate predicate=PredicateBuilder.isEqualTo(expression,right); @AT@ 6236 @LENGTH@ 84
---UPD VariableDeclarationFragment@@predicate=onNewPredicate(PredicateBuilder.isEqualTo(expression,right)) @TO@ predicate=PredicateBuilder.isEqualTo(expression,right) @AT@ 6246 @LENGTH@ 73
------DEL MethodInvocation@@onNewPredicate(PredicateBuilder.isEqualTo(expression,right)) @AT@ 6258 @LENGTH@ 61
---------DEL SimpleName@@MethodName:onNewPredicate:[PredicateBuilder.isEqualTo(expression,right)] @AT@ 6258 @LENGTH@ 61
------MOV MethodInvocation@@PredicateBuilder.isEqualTo(expression,right) @TO@ VariableDeclarationFragment@@predicate=onNewPredicate(PredicateBuilder.isEqualTo(expression,right)) @AT@ 6273 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").to(getFtpUrl()) @AT@ 1750 @LENGTH@ 53
---UPD MethodInvocation@@from("file:src/main/data?noop=true").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").to(getFtpUrl()) @AT@ 1750 @LENGTH@ 52
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 1750 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 1755 @LENGTH@ 30


UPD IfStatement@@if (token != null && !token.isEmpty()) {  httpRequest.addHeader(HttpHeaders.AUTHORIZATION,BEARER + token);  httpRequest.addHeader(HiveSamlUtils.SSO_CLIENT_IDENTIFIER,clientIdentifier);  httpRequest.removeHeaders(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT);} else {  LOG.debug("Adding response port {}",port);  httpRequest.addHeader(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT,port);} @TO@ if (token != null && !token.isEmpty()) {  httpRequest.addHeader(HttpHeaders.AUTHORIZATION,BEARER + token);  httpRequest.addHeader(HiveSamlUtils.SSO_CLIENT_IDENTIFIER,clientIdentifier);  httpRequest.removeHeaders(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT);} else {  httpRequest.addHeader(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT,port);} @AT@ 2474 @LENGTH@ 411
---UPD Block@@ElseBody:{  LOG.debug("Adding response port {}",port);  httpRequest.addHeader(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT,port);} @TO@ ElseBody:{  httpRequest.addHeader(HiveSamlUtils.SSO_TOKEN_RESPONSE_PORT,port);} @AT@ 2754 @LENGTH@ 131
------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Adding response port {}",port) @AT@ 2762 @LENGTH@ 43
---------DEL MethodInvocation@@LOG.debug("Adding response port {}",port) @AT@ 2762 @LENGTH@ 42
------------DEL SimpleName@@Name:LOG @AT@ 2762 @LENGTH@ 3
------------DEL SimpleName@@MethodName:debug:["Adding response port {}", port] @AT@ 2766 @LENGTH@ 38
---------------DEL StringLiteral@@"Adding response port {}" @AT@ 2772 @LENGTH@ 25
---------------DEL SimpleName@@port @AT@ 2799 @LENGTH@ 4


UPD TryStatement@@try {  digest=credential.getAlgorithm().getMessageDigest();  digest.update(id.getBytes(UTF_8));  digest.update((byte)':');  digest.update(credential.getRealm().getBytes(UTF_8));  digest.update((byte)':');  digest.update(new String(((PasswordCallback)callbacks[2]).getPassword()).getBytes(UTF_8));  ha1=HexConverter.convertToHexBytes(digest.digest());} catch (NoSuchAlgorithmException e) {  ROOT_LOGGER.debug("Unexpected authentication failure",e);  return null;} finally {  digest.reset();} @TO@ try {  digest=credential.getAlgorithm().getMessageDigest();  digest.update(id.getBytes(UTF_8));  digest.update((byte)':');  digest.update(credential.getRealm().getBytes(UTF_8));  digest.update((byte)':');  digest.update(new String(((PasswordCallback)callbacks[2]).getPassword()).getBytes(UTF_8));  ha1=HexConverter.convertToHexBytes(digest.digest());} catch (NoSuchAlgorithmException e) {  ROOT_LOGGER.debug("Unexpected authentication failure",e);  return null;} finally {  if (digest != null) {    digest.reset();  }} @AT@ 8437 @LENGTH@ 689
---INS Block@@FinallyBody:{  if (digest != null) {    digest.reset();  }} @TO@ TryStatement@@try {  digest=credential.getAlgorithm().getMessageDigest();  digest.update(id.getBytes(UTF_8));  digest.update((byte)':');  digest.update(credential.getRealm().getBytes(UTF_8));  digest.update((byte)':');  digest.update(new String(((PasswordCallback)callbacks[2]).getPassword()).getBytes(UTF_8));  ha1=HexConverter.convertToHexBytes(digest.digest());} catch (NoSuchAlgorithmException e) {  ROOT_LOGGER.debug("Unexpected authentication failure",e);  return null;} finally {  digest.reset();} @AT@ 9079 @LENGTH@ 106
------INS IfStatement@@if (digest != null) {  digest.reset();} @TO@ Block@@FinallyBody:{  if (digest != null) {    digest.reset();  }} @AT@ 9097 @LENGTH@ 74
---------MOV Block@@FinallyBody:{  digest.reset();} @TO@ IfStatement@@if (digest != null) {  digest.reset();} @AT@ 9079 @LENGTH@ 47
---------INS InfixExpression@@digest != null @TO@ IfStatement@@if (digest != null) {  digest.reset();} @AT@ 9100 @LENGTH@ 14
------------INS SimpleName@@digest @TO@ InfixExpression@@digest != null @AT@ 9100 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@digest != null @AT@ 9106 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@digest != null @AT@ 9110 @LENGTH@ 4
---UPD Block@@FinallyBody:{  digest.reset();} @TO@ ThenBody:{  digest.reset();} @AT@ 9079 @LENGTH@ 47


UPD VariableDeclarationStatement@@CamelKieServerExtension extension=new CamelKieServerExtension(); @TO@ CamelKieServerExtension extension=new CamelKieServerExtension(new DefaultCamelContext()); @AT@ 3149 @LENGTH@ 66
---UPD VariableDeclarationFragment@@extension=new CamelKieServerExtension() @TO@ extension=new CamelKieServerExtension(new DefaultCamelContext()) @AT@ 3173 @LENGTH@ 41
------UPD ClassInstanceCreation@@CamelKieServerExtension[] @TO@ CamelKieServerExtension[new DefaultCamelContext()] @AT@ 3185 @LENGTH@ 29
---------INS ClassInstanceCreation@@DefaultCamelContext[] @TO@ ClassInstanceCreation@@CamelKieServerExtension[] @AT@ 3213 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultCamelContext[] @AT@ 3213 @LENGTH@ 3
------------INS SimpleType@@DefaultCamelContext @TO@ ClassInstanceCreation@@DefaultCamelContext[] @AT@ 3217 @LENGTH@ 19


UPD FieldDeclaration@@private, final, MailBinding, [binding=new MailBinding(new DefaultHeaderFilterStrategy(),null,true)] @TO@ private, final, MailBinding, [binding=new MailBinding(new DefaultHeaderFilterStrategy(),null,true,true)] @AT@ 1585 @LENGTH@ 99
---UPD VariableDeclarationFragment@@binding=new MailBinding(new DefaultHeaderFilterStrategy(),null,true) @TO@ binding=new MailBinding(new DefaultHeaderFilterStrategy(),null,true,true) @AT@ 1611 @LENGTH@ 72
------UPD ClassInstanceCreation@@MailBinding[new DefaultHeaderFilterStrategy(), null, true] @TO@ MailBinding[new DefaultHeaderFilterStrategy(), null, true, true] @AT@ 1621 @LENGTH@ 62
---------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@MailBinding[new DefaultHeaderFilterStrategy(), null, true] @AT@ 1684 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler(chain::filter,filters)).map(DefaultWebFilterChain::new).flatMap((securedChain) -> securedChain.filter(exchange)) @TO@ MethodInvocation:Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new DefaultWebFilterChain(chain::filter,filters)).flatMap((securedChain) -> securedChain.filter(exchange)) @AT@ 1623 @LENGTH@ 454
---UPD MethodInvocation@@Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler(chain::filter,filters)).map(DefaultWebFilterChain::new).flatMap((securedChain) -> securedChain.filter(exchange)) @TO@ Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new DefaultWebFilterChain(chain::filter,filters)).flatMap((securedChain) -> securedChain.filter(exchange)) @AT@ 1630 @LENGTH@ 446
------DEL MethodInvocation@@MethodName:map:[DefaultWebFilterChain::new] @AT@ 1630 @LENGTH@ 384
------UPD MethodInvocation@@MethodName:map:[(filters) -> new FilteringWebHandler(chain::filter,filters)] @TO@ MethodName:map:[(filters) -> new DefaultWebFilterChain(chain::filter,filters)] @AT@ 1630 @LENGTH@ 352
---------UPD LambdaExpression@@(filters) -> new FilteringWebHandler(chain::filter,filters) @TO@ (filters) -> new DefaultWebFilterChain(chain::filter,filters) @AT@ 1921 @LENGTH@ 60
------------UPD ClassInstanceCreation@@FilteringWebHandler[chain::filter, filters] @TO@ DefaultWebFilterChain[chain::filter, filters] @AT@ 1934 @LENGTH@ 47
---------------UPD SimpleType@@FilteringWebHandler @TO@ DefaultWebFilterChain @AT@ 1938 @LENGTH@ 19


UPD MethodDeclaration@@public, void, MethodName:equalsWhenNullAndNotEmtpyThenFalse,  @TO@ public, void, MethodName:equalsWhenNullAndNotEmptyThenFalse,  @AT@ 1045 @LENGTH@ 181
---UPD SimpleName@@MethodName:equalsWhenNullAndNotEmtpyThenFalse @TO@ MethodName:equalsWhenNullAndNotEmptyThenFalse @AT@ 1057 @LENGTH@ 34


INS MethodDeclaration@@protected, Boolean, MethodName:getDefaultRequeueRejected,  @TO@ TypeDeclaration@@[public, abstract]BaseRabbitListenerContainerFactory, [RabbitListenerContainerFactory<C>] @AT@ 2284 @LENGTH@ 88
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Boolean, MethodName:getDefaultRequeueRejected,  @AT@ 2284 @LENGTH@ 9
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@protected, Boolean, MethodName:getDefaultRequeueRejected,  @AT@ 2294 @LENGTH@ 7
---INS SimpleName@@MethodName:getDefaultRequeueRejected @TO@ MethodDeclaration@@protected, Boolean, MethodName:getDefaultRequeueRejected,  @AT@ 2302 @LENGTH@ 25
---INS ReturnStatement@@FieldAccess:this.defaultRequeueRejected @TO@ MethodDeclaration@@protected, Boolean, MethodName:getDefaultRequeueRejected,  @AT@ 2334 @LENGTH@ 35
------INS FieldAccess@@this.defaultRequeueRejected @TO@ ReturnStatement@@FieldAccess:this.defaultRequeueRejected @AT@ 2341 @LENGTH@ 27
---------INS ThisExpression@@this @TO@ FieldAccess@@this.defaultRequeueRejected @AT@ 2341 @LENGTH@ 4
---------INS SimpleName@@defaultRequeueRejected @TO@ FieldAccess@@this.defaultRequeueRejected @AT@ 2346 @LENGTH@ 22


UPD IfStatement@@if ((applyLdifs != null) && (applyLdifs.value() != null)) {  String[] ldifs=applyLdifs.value();  String dnStart="dn:";  StringBuilder sb=new StringBuilder();  for (int i=0; i < ldifs.length; ) {    String s=ldifs[i++].trim();    if (s.startsWith(dnStart)) {      sb.append(s).append('\n');      while (i < ldifs.length) {        s=ldifs[i++];        if (!s.startsWith(dnStart)) {          sb.append(s).append('\n');        } else {          break;        }      }      LOG.debug("Applying {} to {}",sb,desc.getDisplayName());      injectEntries(service,sb.toString());      sb.setLength(0);      i--;    }  }} @TO@ if (applyLdifs != null && applyLdifs.value() != null) {  String[] ldifs=applyLdifs.value();  String dnStart="dn:";  StringBuilder sb=new StringBuilder();  for (int i=0; i < ldifs.length; ) {    String s=ldifs[i++].trim();    if (s.startsWith(dnStart)) {      sb.append(s).append('\n');      while (i < ldifs.length) {        s=ldifs[i++];        if (!s.startsWith(dnStart)) {          sb.append(s).append('\n');        } else {          break;        }      }      LOG.debug("Applying {} to {}",sb,desc.getDisplayName());      injectEntries(service,sb.toString());      sb.setLength(0);      i--;    }  }} @AT@ 18081 @LENGTH@ 1034
---UPD InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @TO@ applyLdifs != null && applyLdifs.value() != null @AT@ 18085 @LENGTH@ 52
------INS InfixExpression@@applyLdifs != null @TO@ InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @AT@ 18081 @LENGTH@ 18
---------MOV SimpleName@@applyLdifs @TO@ InfixExpression@@applyLdifs != null @AT@ 18086 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@applyLdifs != null @AT@ 18096 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@applyLdifs != null @AT@ 18100 @LENGTH@ 4
------DEL ParenthesizedExpression@@(applyLdifs != null) @AT@ 18085 @LENGTH@ 20
---------DEL InfixExpression@@applyLdifs != null @AT@ 18086 @LENGTH@ 18
------DEL ParenthesizedExpression@@(applyLdifs.value() != null) @AT@ 18109 @LENGTH@ 28
------MOV InfixExpression@@applyLdifs.value() != null @TO@ InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @AT@ 18110 @LENGTH@ 26


INS IfStatement@@if (properties != null) {  JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId);} @TO@ MethodDeclaration@@private, void, MethodName:toMessageProperties, com.rabbitmq.stream.Message streamMessage, StreamMessageProperties mProps,  @AT@ 5504 @LENGTH@ 1087
---INS InfixExpression@@properties != null @TO@ IfStatement@@if (properties != null) {  JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId);} @AT@ 5508 @LENGTH@ 18
------INS SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 5508 @LENGTH@ 10
------INS Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 5518 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 5522 @LENGTH@ 4
---INS Block@@ThenBody:{  JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId);} @TO@ IfStatement@@if (properties != null) {  JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId);} @AT@ 5528 @LENGTH@ 1063
------MOV ExpressionStatement@@MethodInvocation:JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId) @TO@ Block@@ThenBody:{  JavaUtils.INSTANCE.acceptIfNotNull(properties.getMessageIdAsString(),mProps::setMessageId).acceptIfNotNull(properties.getUserId(),usr -> mProps.setUserId(new String(usr,this.charset))).acceptIfNotNull(properties.getTo(),mProps::setTo).acceptIfNotNull(properties.getSubject(),mProps::setSubject).acceptIfNotNull(properties.getReplyTo(),mProps::setReplyTo).acceptIfNotNull(properties.getCorrelationIdAsString(),mProps::setCorrelationId).acceptIfNotNull(properties.getContentType(),mProps::setContentType).acceptIfNotNull(properties.getContentEncoding(),mProps::setContentEncoding).acceptIfNotNull(properties.getAbsoluteExpiryTime(),exp -> mProps.setExpiration(Long.toString(exp))).acceptIfNotNull(properties.getCreationTime(),mProps::setCreationTime).acceptIfNotNull(properties.getGroupId(),mProps::setGroupId).acceptIfNotNull(properties.getGroupSequence(),mProps::setGroupSequence).acceptIfNotNull(properties.getReplyToGroupId(),mProps::setReplyToGroupId);} @AT@ 5504 @LENGTH@ 1034


INS IfStatement@@if (route != null) {  uow.pushRoute(route);} @TO@ MethodDeclaration@@protected, Message, MethodName:run, Exception,  @AT@ 6069 @LENGTH@ 64
---INS InfixExpression@@route != null @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 6073 @LENGTH@ 13
------INS SimpleName@@route @TO@ InfixExpression@@route != null @AT@ 6073 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@route != null @AT@ 6078 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@route != null @AT@ 6082 @LENGTH@ 4
---INS Block@@ThenBody:{  uow.pushRoute(route);} @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 6088 @LENGTH@ 45
------INS ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @TO@ Block@@ThenBody:{  uow.pushRoute(route);} @AT@ 6102 @LENGTH@ 21
---------INS MethodInvocation@@uow.pushRoute(route) @TO@ ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @AT@ 6102 @LENGTH@ 20
------------INS SimpleName@@Name:uow @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 6102 @LENGTH@ 3
------------INS SimpleName@@MethodName:pushRoute:[route] @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 6106 @LENGTH@ 16
---------------INS SimpleName@@route @TO@ SimpleName@@MethodName:pushRoute:[route] @AT@ 6116 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(Files.size(file)),file) @TO@ MethodInvocation:toFileVisitResult(accept(Files.size(file))) @AT@ 4705 @LENGTH@ 57
---UPD MethodInvocation@@toFileVisitResult(accept(Files.size(file)),file) @TO@ toFileVisitResult(accept(Files.size(file))) @AT@ 4712 @LENGTH@ 49
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(Files.size(file)), file] @TO@ MethodName:toFileVisitResult:[accept(Files.size(file))] @AT@ 4712 @LENGTH@ 49
---------DEL SimpleName@@file @AT@ 4756 @LENGTH@ 4


UPD TryStatement@@try {  final Thread monitor=ThreadMonitor.start(Duration.ofMillis(200));  TestUtils.sleep(100);  ThreadMonitor.stop(monitor);} catch (final InterruptedException e) {  fail("Timed Out",e);} @TO@ try {  final Thread monitor=ThreadMonitor.start(Duration.ofMillis(400));  TestUtils.sleep(1);  ThreadMonitor.stop(monitor);} catch (final InterruptedException e) {  fail("Timed Out",e);} @AT@ 1325 @LENGTH@ 253
---UPD VariableDeclarationStatement@@final Thread monitor=ThreadMonitor.start(Duration.ofMillis(200)); @TO@ final Thread monitor=ThreadMonitor.start(Duration.ofMillis(400)); @AT@ 1343 @LENGTH@ 67
------UPD VariableDeclarationFragment@@monitor=ThreadMonitor.start(Duration.ofMillis(200)) @TO@ monitor=ThreadMonitor.start(Duration.ofMillis(400)) @AT@ 1356 @LENGTH@ 53
---------UPD MethodInvocation@@ThreadMonitor.start(Duration.ofMillis(200)) @TO@ ThreadMonitor.start(Duration.ofMillis(400)) @AT@ 1366 @LENGTH@ 43
------------UPD SimpleName@@MethodName:start:[Duration.ofMillis(200)] @TO@ MethodName:start:[Duration.ofMillis(400)] @AT@ 1380 @LENGTH@ 29
---------------UPD MethodInvocation@@Duration.ofMillis(200) @TO@ Duration.ofMillis(400) @AT@ 1386 @LENGTH@ 22
------------------UPD SimpleName@@MethodName:ofMillis:[200] @TO@ MethodName:ofMillis:[400] @AT@ 1395 @LENGTH@ 13
---------------------UPD NumberLiteral@@200 @TO@ 400 @AT@ 1404 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:TestUtils.sleep(100) @TO@ MethodInvocation:TestUtils.sleep(1) @AT@ 1423 @LENGTH@ 21
------UPD MethodInvocation@@TestUtils.sleep(100) @TO@ TestUtils.sleep(1) @AT@ 1423 @LENGTH@ 20
---------UPD SimpleName@@MethodName:sleep:[100] @TO@ MethodName:sleep:[1] @AT@ 1433 @LENGTH@ 10
------------UPD NumberLiteral@@100 @TO@ 1 @AT@ 1439 @LENGTH@ 3


UPD ExpressionStatement@@Assignment:this.error=new OAuth2Error(OAuth2ErrorCodes.INVALID_REQUEST,"The " + this.claim + " claim is not valid","https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ Assignment:this.error=new OAuth2Error(OAuth2ErrorCodes.INVALID_TOKEN,"The " + this.claim + " claim is not valid","https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 1931 @LENGTH@ 163
---UPD Assignment@@this.error=new OAuth2Error(OAuth2ErrorCodes.INVALID_REQUEST,"The " + this.claim + " claim is not valid","https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ this.error=new OAuth2Error(OAuth2ErrorCodes.INVALID_TOKEN,"The " + this.claim + " claim is not valid","https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 1931 @LENGTH@ 162
------UPD ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.INVALID_REQUEST, "The " + this.claim + " claim is not valid", "https://tools.ietf.org/html/rfc6750#section-3.1"] @TO@ OAuth2Error[OAuth2ErrorCodes.INVALID_TOKEN, "The " + this.claim + " claim is not valid", "https://tools.ietf.org/html/rfc6750#section-3.1"] @AT@ 1944 @LENGTH@ 149
---------UPD QualifiedName@@OAuth2ErrorCodes.INVALID_REQUEST @TO@ OAuth2ErrorCodes.INVALID_TOKEN @AT@ 1960 @LENGTH@ 32
------------UPD SimpleName@@INVALID_REQUEST @TO@ INVALID_TOKEN @AT@ 1977 @LENGTH@ 15


DEL VariableDeclarationStatement@@HBaseRow startRow=new HBaseRow(model.getCells()); @AT@ 8877 @LENGTH@ 51
---DEL SimpleType@@HBaseRow @AT@ 8877 @LENGTH@ 8
---DEL VariableDeclarationFragment@@startRow=new HBaseRow(model.getCells()) @AT@ 8886 @LENGTH@ 41
------DEL SimpleName@@startRow @AT@ 8886 @LENGTH@ 8
------DEL ClassInstanceCreation@@HBaseRow[model.getCells()] @AT@ 8897 @LENGTH@ 30
---------DEL New@@new @AT@ 8897 @LENGTH@ 3
---------DEL SimpleType@@HBaseRow @AT@ 8901 @LENGTH@ 8
---------DEL MethodInvocation@@model.getCells() @AT@ 8910 @LENGTH@ 16
------------DEL SimpleName@@Name:model @AT@ 8910 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getCells:[] @AT@ 8916 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:LOG.debug("processError for operation: " + operation + " "+ throwable) @TO@ MethodInvocation:LOG.debug("processError for operation: {} {}",operation,throwable) @AT@ 11716 @LENGTH@ 72
---UPD MethodInvocation@@LOG.debug("processError for operation: " + operation + " "+ throwable) @TO@ LOG.debug("processError for operation: {} {}",operation,throwable) @AT@ 11716 @LENGTH@ 71
------UPD SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @TO@ MethodName:debug:["processError for operation: {} {}", operation, throwable] @AT@ 11720 @LENGTH@ 67
---------DEL InfixExpression@@"processError for operation: " + operation + " "+ throwable @AT@ 11726 @LENGTH@ 60
------------DEL StringLiteral@@"processError for operation: " @AT@ 11726 @LENGTH@ 30
------------DEL Operator@@+ @AT@ 11756 @LENGTH@ 1
------------DEL SimpleName@@operation @AT@ 11759 @LENGTH@ 9
------------DEL StringLiteral@@" " @AT@ 11771 @LENGTH@ 3
------------DEL SimpleName@@throwable @AT@ 11777 @LENGTH@ 9
---------INS StringLiteral@@"processError for operation: {} {}" @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 11726 @LENGTH@ 35
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 11763 @LENGTH@ 9
---------INS SimpleName@@throwable @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 11774 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "].") @TO@ MethodInvocation:LOG.debug("Loading ApplicationContext for locations [{}].",StringUtils.arrayToCommaDelimitedString(locations)) @AT@ 4802 @LENGTH@ 116
---UPD MethodInvocation@@LOG.debug("Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "].") @TO@ LOG.debug("Loading ApplicationContext for locations [{}].",StringUtils.arrayToCommaDelimitedString(locations)) @AT@ 4802 @LENGTH@ 115
------UPD SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @TO@ MethodName:debug:["Loading ApplicationContext for locations [{}].", StringUtils.arrayToCommaDelimitedString(locations)] @AT@ 4806 @LENGTH@ 111
---------DEL InfixExpression@@"Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]." @AT@ 4812 @LENGTH@ 104
------------DEL StringLiteral@@"Loading ApplicationContext for locations [" @AT@ 4812 @LENGTH@ 44
------------DEL Operator@@+ @AT@ 4856 @LENGTH@ 1
------------DEL StringLiteral@@"]." @AT@ 4912 @LENGTH@ 4
---------INS StringLiteral@@"Loading ApplicationContext for locations [{}]." @TO@ SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @AT@ 4812 @LENGTH@ 48
---------MOV MethodInvocation@@StringUtils.arrayToCommaDelimitedString(locations) @TO@ SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @AT@ 4859 @LENGTH@ 50


UPD MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyNotSerializable, InterruptedException,  @TO@ public, void, MethodName:testSerializeRequestBodyNotSerializable,  @AT@ 2333 @LENGTH@ 342
---DEL SimpleType@@InterruptedException @AT@ 2394 @LENGTH@ 20
---INS VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyNotSerializable, InterruptedException,  @AT@ 2397 @LENGTH@ 60
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2397 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2403 @LENGTH@ 6
------INS VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2410 @LENGTH@ 46
---------INS SimpleName@@endpointUri @TO@ VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @AT@ 2410 @LENGTH@ 11
---------INS InfixExpression@@getProducerUri() + "/serialized" @TO@ VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @AT@ 2424 @LENGTH@ 32
------------MOV MethodInvocation@@MethodName:getProducerUri:[] @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 2516 @LENGTH@ 16
------------MOV Operator@@+ @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 2532 @LENGTH@ 1
------------MOV StringLiteral@@"/serialized" @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 2535 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
) @AT@ 2425 @LENGTH@ 244
------DEL MethodInvocation@@assertThrows(CamelExecutionException.class,() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
) @AT@ 2425 @LENGTH@ 243
---------DEL SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
] @AT@ 2425 @LENGTH@ 243
------------DEL TypeLiteral@@CamelExecutionException.class @AT@ 2438 @LENGTH@ 29
------------DEL LambdaExpression@@() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
 @AT@ 2469 @LENGTH@ 198
---------------DEL ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2489 @LENGTH@ 168
------------------DEL MethodInvocation@@template.sendBodyAndHeader(getProducerUri() + "/serialized",new NotSerializableBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2489 @LENGTH@ 167
---------------------DEL SimpleName@@Name:template @AT@ 2489 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:sendBodyAndHeader:[getProducerUri() + "/serialized", new NotSerializableBean(), Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2498 @LENGTH@ 158
------------------------DEL InfixExpression@@getProducerUri() + "/serialized" @AT@ 2516 @LENGTH@ 32
------------------------DEL ClassInstanceCreation@@NotSerializableBean[] @AT@ 2550 @LENGTH@ 25
---INS VariableDeclarationStatement@@final NotSerializableBean body=new NotSerializableBean(); @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyNotSerializable, InterruptedException,  @AT@ 2466 @LENGTH@ 59
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final NotSerializableBean body=new NotSerializableBean(); @AT@ 2466 @LENGTH@ 5
------INS SimpleType@@NotSerializableBean @TO@ VariableDeclarationStatement@@final NotSerializableBean body=new NotSerializableBean(); @AT@ 2472 @LENGTH@ 19
------INS VariableDeclarationFragment@@body=new NotSerializableBean() @TO@ VariableDeclarationStatement@@final NotSerializableBean body=new NotSerializableBean(); @AT@ 2492 @LENGTH@ 32
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=new NotSerializableBean() @AT@ 2492 @LENGTH@ 4
---------INS ClassInstanceCreation@@NotSerializableBean[] @TO@ VariableDeclarationFragment@@body=new NotSerializableBean() @AT@ 2499 @LENGTH@ 25
------------MOV New@@new @TO@ ClassInstanceCreation@@NotSerializableBean[] @AT@ 2550 @LENGTH@ 3
------------MOV SimpleType@@NotSerializableBean @TO@ ClassInstanceCreation@@NotSerializableBean[] @AT@ 2554 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyNotSerializable, InterruptedException,  @AT@ 2535 @LENGTH@ 169
------INS MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @TO@ ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @AT@ 2535 @LENGTH@ 168
---------INS SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @TO@ MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @AT@ 2535 @LENGTH@ 168
------------INS TypeLiteral@@CamelExecutionException.class @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @AT@ 2548 @LENGTH@ 29
------------INS LambdaExpression@@() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @AT@ 2579 @LENGTH@ 123
---------------INS MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @TO@ LambdaExpression@@() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2597 @LENGTH@ 105
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2597 @LENGTH@ 8
------------------INS SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @TO@ MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2606 @LENGTH@ 96
---------------------MOV QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2577 @LENGTH@ 21
---------------------MOV QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2577 @LENGTH@ 21
---------------------MOV SimpleName@@CONTENT_TYPE_JAVA_SERIALIZED_OBJECT @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2620 @LENGTH@ 35
---------------------INS SimpleName@@endpointUri @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2624 @LENGTH@ 11
---------------------INS SimpleName@@body @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 2637 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @TO@ Initializer@@Initializer @AT@ 4471 @LENGTH@ 69
---INS MethodInvocation@@put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @TO@ ExpressionStatement@@MethodInvocation:put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @AT@ 4471 @LENGTH@ 68
------INS SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @TO@ MethodInvocation@@put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @AT@ 4471 @LENGTH@ 68
---------INS MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @TO@ SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @AT@ 4475 @LENGTH@ 55
------------INS QualifiedName@@Name:MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @TO@ MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @AT@ 4475 @LENGTH@ 42
------------INS SimpleName@@MethodName:getVarname:[] @TO@ MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @AT@ 4518 @LENGTH@ 12
---------INS StringLiteral@@"2000" @TO@ SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @AT@ 4532 @LENGTH@ 6


UPD MethodDeclaration@@private, void, MethodName:put, Class<? extends Filter> filter, int position,  @TO@ void, MethodName:put, Class<? extends Filter> filter, int position,  @AT@ 5817 @LENGTH@ 153
---DEL Modifier@@private @AT@ 5817 @LENGTH@ 7
---INS IfStatement@@if (this.filterToOrder.containsKey(className)) {  return;} @TO@ MethodDeclaration@@private, void, MethodName:put, Class<? extends Filter> filter, int position,  @AT@ 6224 @LENGTH@ 63
------INS MethodInvocation@@this.filterToOrder.containsKey(className) @TO@ IfStatement@@if (this.filterToOrder.containsKey(className)) {  return;} @AT@ 6228 @LENGTH@ 41
---------INS FieldAccess@@this.filterToOrder @TO@ MethodInvocation@@this.filterToOrder.containsKey(className) @AT@ 6228 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.filterToOrder @AT@ 6228 @LENGTH@ 4
------------INS SimpleName@@filterToOrder @TO@ FieldAccess@@this.filterToOrder @AT@ 6233 @LENGTH@ 13
---------INS SimpleName@@MethodName:containsKey:[className] @TO@ MethodInvocation@@this.filterToOrder.containsKey(className) @AT@ 6247 @LENGTH@ 22
------------INS SimpleName@@className @TO@ SimpleName@@MethodName:containsKey:[className] @AT@ 6259 @LENGTH@ 9
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (this.filterToOrder.containsKey(className)) {  return;} @AT@ 6271 @LENGTH@ 16
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6276 @LENGTH@ 7


UPD IfStatement@@if (clientConfigurations.getProxyHost() != null) {  httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @TO@ if (!StringUtils.isEmpty(clientConfigurations.getProxyHost())) {  httpConfig.setProxyHost(clientConfigurations.getProxyHost());  httpConfig.setProxyPort(clientConfigurations.getProxyPort());  if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 4623 @LENGTH@ 605
---DEL InfixExpression@@clientConfigurations.getProxyHost() != null @AT@ 4627 @LENGTH@ 43
------DEL MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4627 @LENGTH@ 35
------DEL Operator@@!= @AT@ 4662 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 4666 @LENGTH@ 4
---UPD Block@@ThenBody:{  httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @TO@ ThenBody:{  httpConfig.setProxyHost(clientConfigurations.getProxyHost());  httpConfig.setProxyPort(clientConfigurations.getProxyPort());  if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 4672 @LENGTH@ 556
------DEL ExpressionStatement@@Assignment:httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4686 @LENGTH@ 286
---------DEL Assignment@@httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4686 @LENGTH@ 285
------------DEL SimpleName@@httpConfig @AT@ 4686 @LENGTH@ 10
------------DEL Operator@@= @AT@ 4696 @LENGTH@ 1
------------DEL MethodInvocation@@HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4699 @LENGTH@ 272
---------------DEL MethodInvocation@@MethodName:withProxyPort:[clientConfigurations.getProxyPort()] @AT@ 4699 @LENGTH@ 177
------------------DEL MethodInvocation@@clientConfigurations.getProxyPort() @AT@ 4840 @LENGTH@ 35
---------------DEL MethodInvocation@@MethodName:withProxyHost:[clientConfigurations.getProxyHost()] @AT@ 4699 @LENGTH@ 105
------------------DEL MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4768 @LENGTH@ 35
---------------DEL MethodInvocation@@MethodName:getDefaultHttpConfig:[] @AT@ 4699 @LENGTH@ 33
------INS ExpressionStatement@@MethodInvocation:httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @TO@ Block@@ThenBody:{  httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 4818 @LENGTH@ 61
---------INS MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @TO@ ExpressionStatement@@MethodInvocation:httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 4818 @LENGTH@ 60
------------MOV SimpleName@@Name:HttpConfig @TO@ MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 4699 @LENGTH@ 10
------------INS SimpleName@@MethodName:setProxyHost:[clientConfigurations.getProxyHost()] @TO@ MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 4829 @LENGTH@ 49
---------------INS MethodInvocation@@clientConfigurations.getProxyHost() @TO@ SimpleName@@MethodName:setProxyHost:[clientConfigurations.getProxyHost()] @AT@ 4842 @LENGTH@ 35
------------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4768 @LENGTH@ 20
------------------MOV SimpleName@@MethodName:getProxyHost:[] @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4789 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @TO@ Block@@ThenBody:{  httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 4892 @LENGTH@ 61
---------INS MethodInvocation@@httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @TO@ ExpressionStatement@@MethodInvocation:httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @AT@ 4892 @LENGTH@ 60
------------INS SimpleName@@Name:httpConfig @TO@ MethodInvocation@@httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @AT@ 4892 @LENGTH@ 10
------------INS SimpleName@@MethodName:setProxyPort:[clientConfigurations.getProxyPort()] @TO@ MethodInvocation@@httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @AT@ 4903 @LENGTH@ 49
---------------INS MethodInvocation@@clientConfigurations.getProxyPort() @TO@ SimpleName@@MethodName:setProxyPort:[clientConfigurations.getProxyPort()] @AT@ 4916 @LENGTH@ 35
------------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyPort() @AT@ 4840 @LENGTH@ 20
------------------MOV SimpleName@@MethodName:getProxyPort:[] @TO@ MethodInvocation@@clientConfigurations.getProxyPort() @AT@ 4861 @LENGTH@ 14
------UPD IfStatement@@if (clientConfigurations.getProxyUser() != null) {  httpConfig.setProxyUsername(clientConfigurations.getProxyUser());  httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());} @TO@ if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {  httpConfig.setProxyUsername(clientConfigurations.getProxyUser());  httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());} @AT@ 4986 @LENGTH@ 232
---------INS PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @TO@ IfStatement@@if (clientConfigurations.getProxyUser() != null) {  httpConfig.setProxyUsername(clientConfigurations.getProxyUser());  httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());} @AT@ 4970 @LENGTH@ 57
------------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 4970 @LENGTH@ 1
------------INS MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 4971 @LENGTH@ 56
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 4971 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyUser()] @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 4983 @LENGTH@ 44
------------------INS MethodInvocation@@clientConfigurations.getProxyUser() @TO@ SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyUser()] @AT@ 4991 @LENGTH@ 35
---------------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 4990 @LENGTH@ 20
---------------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 4990 @LENGTH@ 20
---------------------MOV SimpleName@@MethodName:getProxyUser:[] @TO@ MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 5011 @LENGTH@ 14
---------DEL InfixExpression@@clientConfigurations.getProxyUser() != null @AT@ 4990 @LENGTH@ 43
------------DEL MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 4990 @LENGTH@ 35
------------DEL Operator@@!= @AT@ 5025 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 5029 @LENGTH@ 4
---INS PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @TO@ IfStatement@@if (clientConfigurations.getProxyHost() != null) {  httpConfig=HttpConfig.getDefaultHttpConfig().withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 4745 @LENGTH@ 57
------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 4745 @LENGTH@ 1
------INS MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 4746 @LENGTH@ 56
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 4746 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyHost()] @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 4758 @LENGTH@ 44
------------INS MethodInvocation@@clientConfigurations.getProxyHost() @TO@ SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyHost()] @AT@ 4766 @LENGTH@ 35
---------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4627 @LENGTH@ 20
---------------MOV SimpleName@@MethodName:getProxyHost:[] @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 4648 @LENGTH@ 14


INS MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @TO@ TypeDeclaration@@[@ExtendWith(SpringExtension.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 46184 @LENGTH@ 337
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @AT@ 46179 @LENGTH@ 4
---INS SimpleName@@MethodName:annotatedQueryWithNullEqualityCheckShouldWork @TO@ MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @AT@ 46184 @LENGTH@ 45
---INS ExpressionStatement@@MethodInvocation:operations.updateFirst(Query.query(Criteria.where("id").is(dave.getId())),Update.update("age",null),Person.class) @TO@ MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @AT@ 46237 @LENGTH@ 117
------INS MethodInvocation@@operations.updateFirst(Query.query(Criteria.where("id").is(dave.getId())),Update.update("age",null),Person.class) @TO@ ExpressionStatement@@MethodInvocation:operations.updateFirst(Query.query(Criteria.where("id").is(dave.getId())),Update.update("age",null),Person.class) @AT@ 46237 @LENGTH@ 116
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.updateFirst(Query.query(Criteria.where("id").is(dave.getId())),Update.update("age",null),Person.class) @AT@ 46237 @LENGTH@ 10
---------INS SimpleName@@MethodName:updateFirst:[Query.query(Criteria.where("id").is(dave.getId())), Update.update("age",null), Person.class] @TO@ MethodInvocation@@operations.updateFirst(Query.query(Criteria.where("id").is(dave.getId())),Update.update("age",null),Person.class) @AT@ 46248 @LENGTH@ 105
------------INS MethodInvocation@@Query.query(Criteria.where("id").is(dave.getId())) @TO@ SimpleName@@MethodName:updateFirst:[Query.query(Criteria.where("id").is(dave.getId())), Update.update("age",null), Person.class] @AT@ 46260 @LENGTH@ 50
---------------INS SimpleName@@Name:Query @TO@ MethodInvocation@@Query.query(Criteria.where("id").is(dave.getId())) @AT@ 46260 @LENGTH@ 5
---------------INS SimpleName@@MethodName:query:[Criteria.where("id").is(dave.getId())] @TO@ MethodInvocation@@Query.query(Criteria.where("id").is(dave.getId())) @AT@ 46266 @LENGTH@ 44
------------------INS MethodInvocation@@Criteria.where("id").is(dave.getId()) @TO@ SimpleName@@MethodName:query:[Criteria.where("id").is(dave.getId())] @AT@ 46272 @LENGTH@ 37
---------------------INS MethodInvocation@@MethodName:where:["id"] @TO@ MethodInvocation@@Criteria.where("id").is(dave.getId()) @AT@ 46272 @LENGTH@ 20
------------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:where:["id"] @AT@ 46287 @LENGTH@ 4
---------------------INS SimpleName@@Name:Criteria @TO@ MethodInvocation@@Criteria.where("id").is(dave.getId()) @AT@ 46272 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:is:[dave.getId()] @TO@ MethodInvocation@@Criteria.where("id").is(dave.getId()) @AT@ 46293 @LENGTH@ 16
------------------------INS MethodInvocation@@dave.getId() @TO@ SimpleName@@MethodName:is:[dave.getId()] @AT@ 46296 @LENGTH@ 12
---------------------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getId() @AT@ 46296 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@dave.getId() @AT@ 46301 @LENGTH@ 7
------------INS MethodInvocation@@Update.update("age",null) @TO@ SimpleName@@MethodName:updateFirst:[Query.query(Criteria.where("id").is(dave.getId())), Update.update("age",null), Person.class] @AT@ 46312 @LENGTH@ 26
---------------INS SimpleName@@Name:Update @TO@ MethodInvocation@@Update.update("age",null) @AT@ 46312 @LENGTH@ 6
---------------INS SimpleName@@MethodName:update:["age", null] @TO@ MethodInvocation@@Update.update("age",null) @AT@ 46319 @LENGTH@ 19
------------------INS StringLiteral@@"age" @TO@ SimpleName@@MethodName:update:["age", null] @AT@ 46326 @LENGTH@ 5
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:update:["age", null] @AT@ 46333 @LENGTH@ 4
------------INS TypeLiteral@@Person.class @TO@ SimpleName@@MethodName:updateFirst:[Query.query(Criteria.where("id").is(dave.getId())), Update.update("age",null), Person.class] @AT@ 46340 @LENGTH@ 12
---INS VariableDeclarationStatement@@Person byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck(); @TO@ MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @AT@ 46358 @LENGTH@ 84
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck(); @AT@ 46358 @LENGTH@ 6
------INS VariableDeclarationFragment@@byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck() @TO@ VariableDeclarationStatement@@Person byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck(); @AT@ 46365 @LENGTH@ 76
---------INS SimpleName@@byQueryWithNullEqualityCheck @TO@ VariableDeclarationFragment@@byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck() @AT@ 46365 @LENGTH@ 28
---------INS MethodInvocation@@repository.findByQueryWithNullEqualityCheck() @TO@ VariableDeclarationFragment@@byQueryWithNullEqualityCheck=repository.findByQueryWithNullEqualityCheck() @AT@ 46396 @LENGTH@ 45
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByQueryWithNullEqualityCheck() @AT@ 46396 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByQueryWithNullEqualityCheck:[] @TO@ MethodInvocation@@repository.findByQueryWithNullEqualityCheck() @AT@ 46407 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertThat(byQueryWithNullEqualityCheck.getId()).isEqualTo(dave.getId()) @TO@ MethodDeclaration@@void, MethodName:annotatedQueryWithNullEqualityCheckShouldWork,  @AT@ 46445 @LENGTH@ 73
------INS MethodInvocation@@assertThat(byQueryWithNullEqualityCheck.getId()).isEqualTo(dave.getId()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(byQueryWithNullEqualityCheck.getId()).isEqualTo(dave.getId()) @AT@ 46445 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:assertThat:[byQueryWithNullEqualityCheck.getId()] @TO@ MethodInvocation@@assertThat(byQueryWithNullEqualityCheck.getId()).isEqualTo(dave.getId()) @AT@ 46445 @LENGTH@ 48
------------INS MethodInvocation@@byQueryWithNullEqualityCheck.getId() @TO@ MethodInvocation@@MethodName:assertThat:[byQueryWithNullEqualityCheck.getId()] @AT@ 46456 @LENGTH@ 36
---------------INS SimpleName@@Name:byQueryWithNullEqualityCheck @TO@ MethodInvocation@@byQueryWithNullEqualityCheck.getId() @AT@ 46456 @LENGTH@ 28
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@byQueryWithNullEqualityCheck.getId() @AT@ 46485 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEqualTo:[dave.getId()] @TO@ MethodInvocation@@assertThat(byQueryWithNullEqualityCheck.getId()).isEqualTo(dave.getId()) @AT@ 46494 @LENGTH@ 23
------------INS MethodInvocation@@dave.getId() @TO@ SimpleName@@MethodName:isEqualTo:[dave.getId()] @AT@ 46504 @LENGTH@ 12
---------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getId() @AT@ 46504 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@dave.getId() @AT@ 46509 @LENGTH@ 7


INS VariableDeclarationStatement@@HivePrivilegeObject serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice"); @TO@ MethodDeclaration@@private, static, boolean, MethodName:isAdmin,  @AT@ 5130 @LENGTH@ 140
---INS SimpleType@@HivePrivilegeObject @TO@ VariableDeclarationStatement@@HivePrivilegeObject serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice"); @AT@ 5130 @LENGTH@ 19
---INS VariableDeclarationFragment@@serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice") @TO@ VariableDeclarationStatement@@HivePrivilegeObject serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice"); @AT@ 5150 @LENGTH@ 119
------INS SimpleName@@serviceNameObj @TO@ VariableDeclarationFragment@@serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice") @AT@ 5150 @LENGTH@ 14
------INS ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @TO@ VariableDeclarationFragment@@serviceNameObj=new HivePrivilegeObject(HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME,null,"hiveservice") @AT@ 5167 @LENGTH@ 102
---------INS New@@new @TO@ ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @AT@ 5167 @LENGTH@ 3
---------INS SimpleType@@HivePrivilegeObject @TO@ ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @AT@ 5171 @LENGTH@ 19
---------INS QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME @TO@ ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @AT@ 5191 @LENGTH@ 56
------------INS QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType @TO@ QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME @AT@ 5191 @LENGTH@ 43
---------------INS SimpleName@@HivePrivilegeObject @TO@ QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType @AT@ 5191 @LENGTH@ 19
---------------INS SimpleName@@HivePrivilegeObjectType @TO@ QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType @AT@ 5211 @LENGTH@ 23
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME @AT@ 5235 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @AT@ 5249 @LENGTH@ 4
---------INS StringLiteral@@"hiveservice" @TO@ ClassInstanceCreation@@HivePrivilegeObject[HivePrivilegeObject.HivePrivilegeObjectType.SERVICE_NAME, null, "hiveservice"] @AT@ 5255 @LENGTH@ 13


UPD FieldDeclaration@@private, ReactiveOpaqueTokenIntrospector, [introspector] @TO@ private, final, ReactiveOpaqueTokenIntrospector, [introspector] @AT@ 2909 @LENGTH@ 53
---INS Modifier@@final @TO@ FieldDeclaration@@private, ReactiveOpaqueTokenIntrospector, [introspector] @AT@ 2917 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ Assignment:miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2841 @LENGTH@ 95
---UPD Assignment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2841 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2866 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 2866 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2912 @LENGTH@ 1


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Function<T,Map<String,Object>> binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass); @TO@ @SuppressWarnings("unchecked") Function<T,Map<String,Object>> binderFunction=TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)); @AT@ 21758 @LENGTH@ 278
---UPD VariableDeclarationFragment@@binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass) @TO@ binderFunction=TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)) @AT@ 21946 @LENGTH@ 89
------INS MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)) @TO@ VariableDeclarationFragment@@binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass) @AT@ 21608 @LENGTH@ 163
---------INS SimpleName@@Name:TemplateSupport @TO@ MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)) @AT@ 21608 @LENGTH@ 15
---------INS SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)] @TO@ MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)) @AT@ 21624 @LENGTH@ 147
------------INS SimpleName@@includedProperties @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)] @AT@ 21658 @LENGTH@ 18
------------INS SimpleName@@entityMetaData @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)] @AT@ 21678 @LENGTH@ 14
------------MOV MethodInvocation@@neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass) @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)domainClass)] @AT@ 21963 @LENGTH@ 72


UPD IfStatement@@if (connectionRetry == 0) {  if (LOG.isInfoEnabled()) {    LOG.info("connecting to getMessage from soroush");  }} else {  if (LOG.isInfoEnabled()) {    LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ");  }} @TO@ if (connectionRetry == 0) {  LOG.info("connecting to getMessage from soroush");} else {  if (LOG.isInfoEnabled()) {    LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry));  }} @AT@ 3813 @LENGTH@ 436
---DEL Block@@ThenBody:{  if (LOG.isInfoEnabled()) {    LOG.info("connecting to getMessage from soroush");  }} @AT@ 3839 @LENGTH@ 179
------DEL IfStatement@@if (LOG.isInfoEnabled()) {  LOG.info("connecting to getMessage from soroush");} @AT@ 3865 @LENGTH@ 131
---------DEL MethodInvocation@@LOG.isInfoEnabled() @AT@ 3869 @LENGTH@ 19
------------DEL SimpleName@@Name:LOG @AT@ 3869 @LENGTH@ 3
------------DEL SimpleName@@MethodName:isInfoEnabled:[] @AT@ 3873 @LENGTH@ 15
---MOV Block@@ThenBody:{  LOG.info("connecting to getMessage from soroush");} @TO@ IfStatement@@if (connectionRetry == 0) {  if (LOG.isInfoEnabled()) {    LOG.info("connecting to getMessage from soroush");  }} else {  if (LOG.isInfoEnabled()) {    LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ");  }} @AT@ 3890 @LENGTH@ 106
---UPD Block@@ElseBody:{  if (LOG.isInfoEnabled()) {    LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ");  }} @TO@ ElseBody:{  if (LOG.isInfoEnabled()) {    LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry));  }} @AT@ 4024 @LENGTH@ 225
------UPD IfStatement@@if (LOG.isInfoEnabled()) {  LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ");} @TO@ if (LOG.isInfoEnabled()) {  LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry));} @AT@ 4050 @LENGTH@ 177
---------UPD Block@@ThenBody:{  LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ");} @TO@ ThenBody:{  LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry));} @AT@ 4075 @LENGTH@ 152
------------UPD ExpressionStatement@@MethodInvocation:LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ") @TO@ MethodInvocation:LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry)) @AT@ 4105 @LENGTH@ 96
---------------UPD MethodInvocation@@LOG.info("connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... ") @TO@ LOG.info("connection is closed. retrying for the {} time(s)... ",ordinal(connectionRetry)) @AT@ 4105 @LENGTH@ 95
------------------UPD SimpleName@@MethodName:info:["connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... "] @TO@ MethodName:info:["connection is closed. retrying for the {} time(s)... ", ordinal(connectionRetry)] @AT@ 4109 @LENGTH@ 91
---------------------INS StringLiteral@@"connection is closed. retrying for the {} time(s)... " @TO@ SimpleName@@MethodName:info:["connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... "] @AT@ 4033 @LENGTH@ 55
---------------------DEL InfixExpression@@"connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... " @AT@ 4114 @LENGTH@ 85
------------------------DEL StringLiteral@@"connection is closed. retrying for the " @AT@ 4114 @LENGTH@ 41
------------------------DEL Operator@@+ @AT@ 4155 @LENGTH@ 1
------------------------DEL StringLiteral@@" time(s)... " @AT@ 4185 @LENGTH@ 14
---------------------MOV MethodInvocation@@ordinal(connectionRetry) @TO@ SimpleName@@MethodName:info:["connection is closed. retrying for the " + ordinal(connectionRetry) + " time(s)... "] @AT@ 4158 @LENGTH@ 24


INS MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @TO@ TypeDeclaration@@[@EnabledOnRedisSentinelAvailable]JedisConnectionFactorySentinelIntegrationTests,  @AT@ 1785 @LENGTH@ 568
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 1780 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConnectDataNodeCorrectly @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 1785 @LENGTH@ 30
---INS VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 1823 @LENGTH@ 158
------INS SimpleType@@RedisSentinelConfiguration @TO@ VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @AT@ 1823 @LENGTH@ 26
------INS VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @TO@ VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @AT@ 1850 @LENGTH@ 130
---------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1850 @LENGTH@ 13
---------INS MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @TO@ VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1866 @LENGTH@ 114
------------INS MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1866 @LENGTH@ 85
---------------INS StringLiteral@@"127.0.0.1" @TO@ MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @AT@ 1932 @LENGTH@ 11
---------------INS NumberLiteral@@26379 @TO@ MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @AT@ 1945 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:master:["mymaster"] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1866 @LENGTH@ 51
---------------INS StringLiteral@@"mymaster" @TO@ MethodInvocation@@MethodName:master:["mymaster"] @AT@ 1906 @LENGTH@ 10
------------INS ClassInstanceCreation@@RedisSentinelConfiguration[] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1866 @LENGTH@ 32
---------------INS New@@new @TO@ ClassInstanceCreation@@RedisSentinelConfiguration[] @AT@ 1866 @LENGTH@ 3
---------------INS SimpleType@@RedisSentinelConfiguration @TO@ ClassInstanceCreation@@RedisSentinelConfiguration[] @AT@ 1870 @LENGTH@ 26
------------INS SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 1952 @LENGTH@ 28
---------------INS StringLiteral@@"127.0.0.1" @TO@ SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @AT@ 1961 @LENGTH@ 11
---------------INS NumberLiteral@@26380 @TO@ SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @AT@ 1974 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:configuration.setDatabase(5) @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 1984 @LENGTH@ 29
------INS MethodInvocation@@configuration.setDatabase(5) @TO@ ExpressionStatement@@MethodInvocation:configuration.setDatabase(5) @AT@ 1984 @LENGTH@ 28
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setDatabase(5) @AT@ 1984 @LENGTH@ 13
---------INS SimpleName@@MethodName:setDatabase:[5] @TO@ MethodInvocation@@configuration.setDatabase(5) @AT@ 1998 @LENGTH@ 14
------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:setDatabase:[5] @AT@ 2010 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:factory=new JedisConnectionFactory(configuration) @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2017 @LENGTH@ 52
------INS Assignment@@factory=new JedisConnectionFactory(configuration) @TO@ ExpressionStatement@@Assignment:factory=new JedisConnectionFactory(configuration) @AT@ 2017 @LENGTH@ 51
---------INS SimpleName@@factory @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2017 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2024 @LENGTH@ 1
---------INS ClassInstanceCreation@@JedisConnectionFactory[configuration] @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2027 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2027 @LENGTH@ 3
------------INS SimpleType@@JedisConnectionFactory @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2031 @LENGTH@ 22
------------INS SimpleName@@configuration @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2054 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:factory.afterPropertiesSet() @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2072 @LENGTH@ 29
------INS MethodInvocation@@factory.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory.afterPropertiesSet() @AT@ 2072 @LENGTH@ 28
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.afterPropertiesSet() @AT@ 2072 @LENGTH@ 7
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory.afterPropertiesSet() @AT@ 2080 @LENGTH@ 20
---INS VariableDeclarationStatement@@RedisConnection connection=factory.getConnection(); @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2105 @LENGTH@ 53
------INS SimpleType@@RedisConnection @TO@ VariableDeclarationStatement@@RedisConnection connection=factory.getConnection(); @AT@ 2105 @LENGTH@ 15
------INS VariableDeclarationFragment@@connection=factory.getConnection() @TO@ VariableDeclarationStatement@@RedisConnection connection=factory.getConnection(); @AT@ 2121 @LENGTH@ 36
---------INS SimpleName@@connection @TO@ VariableDeclarationFragment@@connection=factory.getConnection() @AT@ 2121 @LENGTH@ 10
---------INS MethodInvocation@@factory.getConnection() @TO@ VariableDeclarationFragment@@connection=factory.getConnection() @AT@ 2134 @LENGTH@ 23
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getConnection() @AT@ 2134 @LENGTH@ 7
------------INS SimpleName@@MethodName:getConnection:[] @TO@ MethodInvocation@@factory.getConnection() @AT@ 2142 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:connection.flushAll() @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2161 @LENGTH@ 22
------INS MethodInvocation@@connection.flushAll() @TO@ ExpressionStatement@@MethodInvocation:connection.flushAll() @AT@ 2161 @LENGTH@ 21
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.flushAll() @AT@ 2161 @LENGTH@ 10
---------INS SimpleName@@MethodName:flushAll:[] @TO@ MethodInvocation@@connection.flushAll() @AT@ 2172 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.set("key5".getBytes(),"value5".getBytes()) @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2186 @LENGTH@ 55
------INS MethodInvocation@@connection.set("key5".getBytes(),"value5".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:connection.set("key5".getBytes(),"value5".getBytes()) @AT@ 2186 @LENGTH@ 54
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.set("key5".getBytes(),"value5".getBytes()) @AT@ 2186 @LENGTH@ 10
---------INS SimpleName@@MethodName:set:["key5".getBytes(), "value5".getBytes()] @TO@ MethodInvocation@@connection.set("key5".getBytes(),"value5".getBytes()) @AT@ 2197 @LENGTH@ 43
------------INS MethodInvocation@@"key5".getBytes() @TO@ SimpleName@@MethodName:set:["key5".getBytes(), "value5".getBytes()] @AT@ 2201 @LENGTH@ 17
---------------INS StringLiteral@@"key5" @TO@ MethodInvocation@@"key5".getBytes() @AT@ 2201 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"key5".getBytes() @AT@ 2208 @LENGTH@ 10
------------INS MethodInvocation@@"value5".getBytes() @TO@ SimpleName@@MethodName:set:["key5".getBytes(), "value5".getBytes()] @AT@ 2220 @LENGTH@ 19
---------------INS StringLiteral@@"value5" @TO@ MethodInvocation@@"value5".getBytes() @AT@ 2220 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"value5".getBytes() @AT@ 2229 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:connection.select(0) @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2245 @LENGTH@ 21
------INS MethodInvocation@@connection.select(0) @TO@ ExpressionStatement@@MethodInvocation:connection.select(0) @AT@ 2245 @LENGTH@ 20
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.select(0) @AT@ 2245 @LENGTH@ 10
---------INS SimpleName@@MethodName:select:[0] @TO@ MethodInvocation@@connection.select(0) @AT@ 2256 @LENGTH@ 9
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:select:[0] @AT@ 2263 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(connection.exists("key5".getBytes())).isFalse() @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2269 @LENGTH@ 59
------INS MethodInvocation@@assertThat(connection.exists("key5".getBytes())).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(connection.exists("key5".getBytes())).isFalse() @AT@ 2269 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[connection.exists("key5".getBytes())] @TO@ MethodInvocation@@assertThat(connection.exists("key5".getBytes())).isFalse() @AT@ 2269 @LENGTH@ 48
------------INS MethodInvocation@@connection.exists("key5".getBytes()) @TO@ MethodInvocation@@MethodName:assertThat:[connection.exists("key5".getBytes())] @AT@ 2280 @LENGTH@ 36
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.exists("key5".getBytes()) @AT@ 2280 @LENGTH@ 10
---------------INS SimpleName@@MethodName:exists:["key5".getBytes()] @TO@ MethodInvocation@@connection.exists("key5".getBytes()) @AT@ 2291 @LENGTH@ 25
------------------INS MethodInvocation@@"key5".getBytes() @TO@ SimpleName@@MethodName:exists:["key5".getBytes()] @AT@ 2298 @LENGTH@ 17
---------------------INS StringLiteral@@"key5" @TO@ MethodInvocation@@"key5".getBytes() @AT@ 2298 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"key5".getBytes() @AT@ 2305 @LENGTH@ 10
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(connection.exists("key5".getBytes())).isFalse() @AT@ 2318 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:connection.close() @TO@ MethodDeclaration@@void, MethodName:shouldConnectDataNodeCorrectly,  @AT@ 2331 @LENGTH@ 19
------INS MethodInvocation@@connection.close() @TO@ ExpressionStatement@@MethodInvocation:connection.close() @AT@ 2331 @LENGTH@ 18
---------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.close() @AT@ 2331 @LENGTH@ 10
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@connection.close() @AT@ 2342 @LENGTH@ 7


DEL MethodDeclaration@@private, static, void, MethodName:parseEndDocument, final XMLStreamReader reader, XMLStreamException,  @AT@ 31659 @LENGTH@ 843
---DEL Modifier@@private @AT@ 31659 @LENGTH@ 7
---DEL Modifier@@static @AT@ 31667 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 31674 @LENGTH@ 4
---DEL SimpleName@@MethodName:parseEndDocument @AT@ 31679 @LENGTH@ 16
---DEL SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 31696 @LENGTH@ 28
------DEL Modifier@@final @AT@ 31696 @LENGTH@ 5
------DEL SimpleType@@XMLStreamReader @AT@ 31702 @LENGTH@ 15
------DEL SimpleName@@reader @AT@ 31718 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 31733 @LENGTH@ 18
---DEL WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 31762 @LENGTH@ 718
------DEL MethodInvocation@@reader.hasNext() @AT@ 31769 @LENGTH@ 16
---------DEL SimpleName@@Name:reader @AT@ 31769 @LENGTH@ 6
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 31776 @LENGTH@ 9
------DEL Block@@WhileBody:{switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 31787 @LENGTH@ 693
---------DEL SwitchStatement@@switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{    return;  }case XMLStreamConstants.CHARACTERS:{  if (!reader.isWhiteSpace()) {    throw unexpectedContent(reader);  }  break;}case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{break;}default :{throw unexpectedContent(reader);}} @AT@ 31801 @LENGTH@ 669
------------DEL MethodInvocation@@reader.next() @AT@ 31809 @LENGTH@ 13
---------------DEL SimpleName@@Name:reader @AT@ 31809 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:next:[] @AT@ 31816 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.END_DOCUMENT: @AT@ 31842 @LENGTH@ 37
---------------DEL QualifiedName@@XMLStreamConstants.END_DOCUMENT @AT@ 31847 @LENGTH@ 31
------------------DEL SimpleName@@XMLStreamConstants @AT@ 31847 @LENGTH@ 18
------------------DEL SimpleName@@END_DOCUMENT @AT@ 31866 @LENGTH@ 12
------------DEL ReturnStatement@@ @AT@ 31902 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.CHARACTERS: @AT@ 31944 @LENGTH@ 35
---------------DEL QualifiedName@@XMLStreamConstants.CHARACTERS @AT@ 31949 @LENGTH@ 29
------------------DEL SimpleName@@XMLStreamConstants @AT@ 31949 @LENGTH@ 18
------------------DEL SimpleName@@CHARACTERS @AT@ 31968 @LENGTH@ 10
------------DEL IfStatement@@if (!reader.isWhiteSpace()) {  throw unexpectedContent(reader);} @AT@ 32002 @LENGTH@ 108
---------------DEL PrefixExpression@@!reader.isWhiteSpace() @AT@ 32006 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 32006 @LENGTH@ 1
------------------DEL MethodInvocation@@reader.isWhiteSpace() @AT@ 32007 @LENGTH@ 21
---------------------DEL SimpleName@@Name:reader @AT@ 32007 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isWhiteSpace:[] @AT@ 32014 @LENGTH@ 14
---------------DEL Block@@ThenBody:{  throw unexpectedContent(reader);} @AT@ 32030 @LENGTH@ 80
------------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 32056 @LENGTH@ 32
---------------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 32062 @LENGTH@ 25
------------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 32062 @LENGTH@ 25
---------------------------DEL SimpleName@@reader @AT@ 32080 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 32161 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.COMMENT: @AT@ 32202 @LENGTH@ 32
---------------DEL QualifiedName@@XMLStreamConstants.COMMENT @AT@ 32207 @LENGTH@ 26
------------------DEL SimpleName@@XMLStreamConstants @AT@ 32207 @LENGTH@ 18
------------------DEL SimpleName@@COMMENT @AT@ 32226 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.SPACE: @AT@ 32251 @LENGTH@ 30
---------------DEL QualifiedName@@XMLStreamConstants.SPACE @AT@ 32256 @LENGTH@ 24
------------------DEL SimpleName@@XMLStreamConstants @AT@ 32256 @LENGTH@ 18
------------------DEL SimpleName@@SPACE @AT@ 32275 @LENGTH@ 5
------------DEL BreakStatement@@ @AT@ 32334 @LENGTH@ 6
------------DEL SwitchCase@@default @AT@ 32375 @LENGTH@ 8
------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 32406 @LENGTH@ 32
---------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 32412 @LENGTH@ 25
------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 32412 @LENGTH@ 25
---------------------DEL SimpleName@@reader @AT@ 32430 @LENGTH@ 6
---DEL ReturnStatement@@ @AT@ 32489 @LENGTH@ 7


UPD VariableDeclarationStatement@@final OperationMessageHandlerProxy messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId); @TO@ final OperationMessageHandler messageHandlerProxy=OperationMessageHandler.DISCARD; @AT@ 10743 @LENGTH@ 119
---UPD SimpleType@@OperationMessageHandlerProxy @TO@ OperationMessageHandler @AT@ 10749 @LENGTH@ 28
---UPD VariableDeclarationFragment@@messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId) @TO@ messageHandlerProxy=OperationMessageHandler.DISCARD @AT@ 10778 @LENGTH@ 83
------INS QualifiedName@@OperationMessageHandler.DISCARD @TO@ VariableDeclarationFragment@@messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId) @AT@ 10795 @LENGTH@ 31
---------INS SimpleName@@OperationMessageHandler @TO@ QualifiedName@@OperationMessageHandler.DISCARD @AT@ 10795 @LENGTH@ 23
---------INS SimpleName@@DISCARD @TO@ QualifiedName@@OperationMessageHandler.DISCARD @AT@ 10819 @LENGTH@ 7
------DEL ClassInstanceCreation@@OperationMessageHandlerProxy[channelAssociation, batchId] @AT@ 10800 @LENGTH@ 61
---------DEL New@@new @AT@ 10800 @LENGTH@ 3
---------DEL SimpleType@@OperationMessageHandlerProxy @AT@ 10804 @LENGTH@ 28
---------DEL SimpleName@@channelAssociation @AT@ 10833 @LENGTH@ 18
---------DEL SimpleName@@batchId @AT@ 10853 @LENGTH@ 7


UPD VariableDeclarationStatement@@TypeResolverBuilder<? extends TypeResolverBuilder> result=new TrustedTypeResolverBuilder(ObjectMapper.DefaultTyping.NON_FINAL,trustedClassNames); @TO@ TypeResolverBuilder<StdTypeResolverBuilder> result=new TrustedTypeResolverBuilder(ObjectMapper.DefaultTyping.NON_FINAL,trustedClassNames); @AT@ 8997 @LENGTH@ 149
---UPD ParameterizedType@@TypeResolverBuilder<? extends TypeResolverBuilder> @TO@ TypeResolverBuilder<StdTypeResolverBuilder> @AT@ 8997 @LENGTH@ 50
------DEL WildcardType@@? @AT@ 9017 @LENGTH@ 29
------INS SimpleType@@StdTypeResolverBuilder @TO@ ParameterizedType@@TypeResolverBuilder<? extends TypeResolverBuilder> @AT@ 9093 @LENGTH@ 22


UPD VariableDeclarationStatement@@BayeuxClient bayeuxClient=SubscriptionHelper.createClient(component); @TO@ BayeuxClient bayeuxClient=SubscriptionHelper.createClient(component,session); @AT@ 8174 @LENGTH@ 71
---UPD VariableDeclarationFragment@@bayeuxClient=SubscriptionHelper.createClient(component) @TO@ bayeuxClient=SubscriptionHelper.createClient(component,session) @AT@ 8187 @LENGTH@ 57
------UPD MethodInvocation@@SubscriptionHelper.createClient(component) @TO@ SubscriptionHelper.createClient(component,session) @AT@ 8202 @LENGTH@ 42
---------UPD SimpleName@@MethodName:createClient:[component] @TO@ MethodName:createClient:[component, session] @AT@ 8221 @LENGTH@ 23
------------INS SimpleName@@session @TO@ SimpleName@@MethodName:createClient:[component] @AT@ 8254 @LENGTH@ 7


UPD TypeDeclaration@@[public]SplitAggregateParallelProcessingStackOverflowIssueTest, ContextTestSupport @TO@ [@Disabled, public]SplitAggregateParallelProcessingStackOverflowIssueTest, ContextTestSupport @AT@ 1216 @LENGTH@ 1369
---INS MarkerAnnotation@@@Disabled @TO@ TypeDeclaration@@[public]SplitAggregateParallelProcessingStackOverflowIssueTest, ContextTestSupport @AT@ 1255 @LENGTH@ 9


MOV ExpressionStatement@@MethodInvocation:given(this.scheduler.schedule(any())).willAnswer((a) -> {
  Runnable r=a.getArgument(0);
  return Schedulers.immediate().schedule(r);
}
) @TO@ MethodDeclaration@@public, void, MethodName:authentiateWhenCustomSchedulerThenUsed,  @AT@ 2840 @LENGTH@ 143


UPD ReturnStatement@@MethodInvocation:neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalWritingConverter()) @TO@ MethodInvocation:neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalConverter()) @AT@ 12440 @LENGTH@ 193
---UPD MethodInvocation@@neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalWritingConverter()) @TO@ neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalConverter()) @AT@ 12447 @LENGTH@ 185
------UPD SimpleName@@MethodName:writeValue:[idValues, ClassTypeInformation.from(idValues.getClass()), idProperty == null ? null : idProperty.getOptionalWritingConverter()] @TO@ MethodName:writeValue:[idValues, ClassTypeInformation.from(idValues.getClass()), idProperty == null ? null : idProperty.getOptionalConverter()] @AT@ 12490 @LENGTH@ 142
---------UPD ConditionalExpression@@idProperty == null ? null : idProperty.getOptionalWritingConverter() @TO@ idProperty == null ? null : idProperty.getOptionalConverter() @AT@ 12563 @LENGTH@ 68
------------UPD MethodInvocation@@idProperty.getOptionalWritingConverter() @TO@ idProperty.getOptionalConverter() @AT@ 12591 @LENGTH@ 40
---------------UPD SimpleName@@MethodName:getOptionalWritingConverter:[] @TO@ MethodName:getOptionalConverter:[] @AT@ 12602 @LENGTH@ 29


INS MethodDeclaration@@void, MethodName:$floorKeywordDoesNotMatch$or$norPattern,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), public]QueryMapperUnitTests,  @AT@ 47624 @LENGTH@ 282
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:$floorKeywordDoesNotMatch$or$norPattern,  @AT@ 47619 @LENGTH@ 4
---INS SimpleName@@MethodName:$floorKeywordDoesNotMatch$or$norPattern @TO@ MethodDeclaration@@void, MethodName:$floorKeywordDoesNotMatch$or$norPattern,  @AT@ 47624 @LENGTH@ 39
---INS VariableDeclarationStatement@@Query query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"); @TO@ MethodDeclaration@@void, MethodName:$floorKeywordDoesNotMatch$or$norPattern,  @AT@ 47671 @LENGTH@ 95
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"); @AT@ 47671 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }") @TO@ VariableDeclarationStatement@@Query query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"); @AT@ 47677 @LENGTH@ 88
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }") @AT@ 47677 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicQuery[" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"] @TO@ VariableDeclarationFragment@@query=new BasicQuery(" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }") @AT@ 47685 @LENGTH@ 80
------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery[" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"] @AT@ 47685 @LENGTH@ 3
------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery[" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"] @AT@ 47689 @LENGTH@ 10
------------INS StringLiteral@@" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }" @TO@ ClassInstanceCreation@@BasicQuery[" { $expr: { $gt: [ \"$spent\" , { $floor : \"$budget\" } ] } }"] @AT@ 47700 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:assertThatNoException().isThrownBy(() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))) @TO@ MethodDeclaration@@void, MethodName:$floorKeywordDoesNotMatch$or$norPattern,  @AT@ 47769 @LENGTH@ 134
------INS MethodInvocation@@assertThatNoException().isThrownBy(() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThatNoException().isThrownBy(() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))) @AT@ 47769 @LENGTH@ 133
---------INS MethodInvocation@@MethodName:assertThatNoException:[] @TO@ MethodInvocation@@assertThatNoException().isThrownBy(() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))) @AT@ 47769 @LENGTH@ 23
---------INS SimpleName@@MethodName:isThrownBy:[() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))] @TO@ MethodInvocation@@assertThatNoException().isThrownBy(() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))) @AT@ 47798 @LENGTH@ 104
------------INS LambdaExpression@@() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class)) @TO@ SimpleName@@MethodName:isThrownBy:[() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class))] @AT@ 47809 @LENGTH@ 92
---------------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class)) @TO@ LambdaExpression@@() -> mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class)) @AT@ 47815 @LENGTH@ 86
------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class)) @AT@ 47815 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(Foo.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(Foo.class)) @AT@ 47822 @LENGTH@ 79
---------------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(Foo.class)] @AT@ 47838 @LENGTH@ 22
------------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 47838 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 47844 @LENGTH@ 16
---------------------INS MethodInvocation@@context.getPersistentEntity(Foo.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(Foo.class)] @AT@ 47862 @LENGTH@ 38
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(Foo.class) @AT@ 47862 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getPersistentEntity:[Foo.class] @TO@ MethodInvocation@@context.getPersistentEntity(Foo.class) @AT@ 47870 @LENGTH@ 30
---------------------------INS TypeLiteral@@Foo.class @TO@ SimpleName@@MethodName:getPersistentEntity:[Foo.class] @AT@ 47890 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @TO@ TypeDeclaration@@[@Nested]FinderMethodKeywords, IntegrationTestBase @AT@ 129894 @LENGTH@ 202
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @AT@ 129889 @LENGTH@ 4
---INS SimpleName@@MethodName:findByEmptyIn @TO@ MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @AT@ 129894 @LENGTH@ 13
---INS SingleVariableDeclaration@@@Autowired PersonRepository repository @TO@ MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @AT@ 129908 @LENGTH@ 38
------INS SimpleType@@PersonRepository @TO@ SingleVariableDeclaration@@@Autowired PersonRepository repository @AT@ 129919 @LENGTH@ 16
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired PersonRepository repository @AT@ 129936 @LENGTH@ 10
---INS VariableDeclarationStatement@@List<PersonWithAllConstructor> persons=repository.findAllByFirstNameIn(Collections.emptyList()); @TO@ MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @AT@ 129954 @LENGTH@ 104
------INS ParameterizedType@@List<PersonWithAllConstructor> @TO@ VariableDeclarationStatement@@List<PersonWithAllConstructor> persons=repository.findAllByFirstNameIn(Collections.emptyList()); @AT@ 129954 @LENGTH@ 30
---------INS SimpleType@@List @TO@ ParameterizedType@@List<PersonWithAllConstructor> @AT@ 129954 @LENGTH@ 4
---------INS SimpleType@@PersonWithAllConstructor @TO@ ParameterizedType@@List<PersonWithAllConstructor> @AT@ 129959 @LENGTH@ 24
------INS VariableDeclarationFragment@@persons=repository.findAllByFirstNameIn(Collections.emptyList()) @TO@ VariableDeclarationStatement@@List<PersonWithAllConstructor> persons=repository.findAllByFirstNameIn(Collections.emptyList()); @AT@ 129985 @LENGTH@ 72
---------INS SimpleName@@persons @TO@ VariableDeclarationFragment@@persons=repository.findAllByFirstNameIn(Collections.emptyList()) @AT@ 129985 @LENGTH@ 7
---------INS MethodInvocation@@repository.findAllByFirstNameIn(Collections.emptyList()) @TO@ VariableDeclarationFragment@@persons=repository.findAllByFirstNameIn(Collections.emptyList()) @AT@ 129995 @LENGTH@ 62
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAllByFirstNameIn(Collections.emptyList()) @AT@ 129995 @LENGTH@ 10
------------INS SimpleName@@MethodName:findAllByFirstNameIn:[Collections.emptyList()] @TO@ MethodInvocation@@repository.findAllByFirstNameIn(Collections.emptyList()) @AT@ 130012 @LENGTH@ 45
---------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:findAllByFirstNameIn:[Collections.emptyList()] @AT@ 130033 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 130033 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 130045 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(persons).isEmpty() @TO@ MethodDeclaration@@void, MethodName:findByEmptyIn, @Autowired PersonRepository repository,  @AT@ 130062 @LENGTH@ 30
------INS MethodInvocation@@assertThat(persons).isEmpty() @TO@ ExpressionStatement@@MethodInvocation:assertThat(persons).isEmpty() @AT@ 130062 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:assertThat:[persons] @TO@ MethodInvocation@@assertThat(persons).isEmpty() @AT@ 130062 @LENGTH@ 19
------------INS SimpleName@@persons @TO@ MethodInvocation@@MethodName:assertThat:[persons] @AT@ 130073 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@assertThat(persons).isEmpty() @AT@ 130082 @LENGTH@ 9


UPD TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @TO@ try (InputStream fileInputStream=new FileInputStream(input)){  Image image=ImageFactory.getInstance().fromInputStream(fileInputStream);  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3381 @LENGTH@ 347
---INS VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @TO@ TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3386 @LENGTH@ 56
------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3386 @LENGTH@ 11
------INS VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3398 @LENGTH@ 44
---------INS SimpleName@@fileInputStream @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3398 @LENGTH@ 15
---------INS ClassInstanceCreation@@FileInputStream[input] @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3416 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3416 @LENGTH@ 3
------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3420 @LENGTH@ 15
------------INS SimpleName@@input @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3436 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)); @TO@ Image image=ImageFactory.getInstance().fromInputStream(fileInputStream); @AT@ 3399 @LENGTH@ 85
------UPD VariableDeclarationFragment@@image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ image=ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3405 @LENGTH@ 78
---------UPD MethodInvocation@@ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3413 @LENGTH@ 70
------------UPD SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @TO@ MethodName:fromInputStream:[fileInputStream] @AT@ 3440 @LENGTH@ 43
---------------DEL ClassInstanceCreation@@FileInputStream[input] @AT@ 3456 @LENGTH@ 26
------------------DEL New@@new @AT@ 3456 @LENGTH@ 3
------------------DEL SimpleType@@FileInputStream @AT@ 3460 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 3476 @LENGTH@ 5
---------------INS SimpleName@@fileInputStream @TO@ SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @AT@ 3515 @LENGTH@ 15


INS IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @TO@ MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object body, OutputStream outputStream, Exception,  @AT@ 2971 @LENGTH@ 255
---INS InstanceofExpression@@body instanceof Map @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 2975 @LENGTH@ 19
------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Map @AT@ 2975 @LENGTH@ 4
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Map @AT@ 2980 @LENGTH@ 10
------INS SimpleType@@Map @TO@ InstanceofExpression@@body instanceof Map @AT@ 2991 @LENGTH@ 3
---INS Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 2996 @LENGTH@ 230
------INS ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @TO@ Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @AT@ 3170 @LENGTH@ 46
---------INS Assignment@@body=Collections.singleton(body).iterator() @TO@ ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @AT@ 3170 @LENGTH@ 45
------------INS SimpleName@@body @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3170 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3174 @LENGTH@ 1
------------INS MethodInvocation@@Collections.singleton(body).iterator() @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3177 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:singleton:[body] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3177 @LENGTH@ 27
------------------INS SimpleName@@body @TO@ MethodInvocation@@MethodName:singleton:[body] @AT@ 3199 @LENGTH@ 4
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3177 @LENGTH@ 11
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3205 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:constructorEmtpyMediaTypes,  @TO@ public, void, MethodName:constructorEmptyMediaTypes,  @AT@ 2653 @LENGTH@ 198
---UPD SimpleName@@MethodName:constructorEmtpyMediaTypes @TO@ MethodName:constructorEmptyMediaTypes @AT@ 2665 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2135 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2135 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2135 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2140 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:assertEquals(javax.net.ssl.SSLHandshakeException.class,ex.getCause().getClass(),"exception expected") @TO@ MethodInvocation:assertEquals(javax.net.ssl.SSLHandshakeException.class,ex.getClass(),"SSLHandshakeException expected") @AT@ 2729 @LENGTH@ 104
---UPD MethodInvocation@@assertEquals(javax.net.ssl.SSLHandshakeException.class,ex.getCause().getClass(),"exception expected") @TO@ assertEquals(javax.net.ssl.SSLHandshakeException.class,ex.getClass(),"SSLHandshakeException expected") @AT@ 2729 @LENGTH@ 103
------UPD SimpleName@@MethodName:assertEquals:[javax.net.ssl.SSLHandshakeException.class, ex.getCause().getClass(), "exception expected"] @TO@ MethodName:assertEquals:[javax.net.ssl.SSLHandshakeException.class, ex.getClass(), "SSLHandshakeException expected"] @AT@ 2729 @LENGTH@ 103
---------UPD MethodInvocation@@ex.getCause().getClass() @TO@ ex.getClass() @AT@ 2785 @LENGTH@ 24
------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 2785 @LENGTH@ 13
---------UPD StringLiteral@@"exception expected" @TO@ "SSLHandshakeException expected" @AT@ 2811 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:LOG.debug("processError for operation: " + operation + " "+ throwable) @TO@ MethodInvocation:LOG.debug("processError for operation: {} {}",operation,throwable.getMessage(),throwable) @AT@ 10776 @LENGTH@ 72
---UPD MethodInvocation@@LOG.debug("processError for operation: " + operation + " "+ throwable) @TO@ LOG.debug("processError for operation: {} {}",operation,throwable.getMessage(),throwable) @AT@ 10776 @LENGTH@ 71
------UPD SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @TO@ MethodName:debug:["processError for operation: {} {}", operation, throwable.getMessage(), throwable] @AT@ 10780 @LENGTH@ 67
---------DEL InfixExpression@@"processError for operation: " + operation + " "+ throwable @AT@ 10786 @LENGTH@ 60
------------DEL StringLiteral@@"processError for operation: " @AT@ 10786 @LENGTH@ 30
------------DEL Operator@@+ @AT@ 10816 @LENGTH@ 1
------------DEL SimpleName@@operation @AT@ 10819 @LENGTH@ 9
------------DEL StringLiteral@@" " @AT@ 10831 @LENGTH@ 3
------------DEL SimpleName@@throwable @AT@ 10837 @LENGTH@ 9
---------INS StringLiteral@@"processError for operation: {} {}" @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 10786 @LENGTH@ 35
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 10823 @LENGTH@ 9
---------INS MethodInvocation@@throwable.getMessage() @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 10834 @LENGTH@ 22
------------INS SimpleName@@Name:throwable @TO@ MethodInvocation@@throwable.getMessage() @AT@ 10834 @LENGTH@ 9
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@throwable.getMessage() @AT@ 10844 @LENGTH@ 12
---------INS SimpleName@@throwable @TO@ SimpleName@@MethodName:debug:["processError for operation: " + operation + " "+ throwable] @AT@ 10858 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:testBodyOgnlExpression, Exception,  @TO@ public, void, MethodName:testBodyOgnlExpression,  @AT@ 7748 @LENGTH@ 672
---DEL SimpleType@@Exception @AT@ 7792 @LENGTH@ 9
---INS VariableDeclarationStatement@@Language language=context.resolveLanguage("csimple"); @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlExpression, Exception,  @AT@ 7924 @LENGTH@ 55
------INS SimpleType@@Language @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("csimple"); @AT@ 7924 @LENGTH@ 8
------INS VariableDeclarationFragment@@language=context.resolveLanguage("csimple") @TO@ VariableDeclarationStatement@@Language language=context.resolveLanguage("csimple"); @AT@ 7933 @LENGTH@ 45
---------INS SimpleName@@language @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("csimple") @AT@ 7933 @LENGTH@ 8
---------INS MethodInvocation@@context.resolveLanguage("csimple") @TO@ VariableDeclarationFragment@@language=context.resolveLanguage("csimple") @AT@ 7944 @LENGTH@ 34
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.resolveLanguage("csimple") @AT@ 7959 @LENGTH@ 7
------------MOV SimpleName@@MethodName:createExpression:["${body.xxx}"] @TO@ MethodInvocation@@context.resolveLanguage("csimple") @AT@ 7994 @LENGTH@ 31
---DEL TryStatement@@try {  context.resolveLanguage("csimple").createExpression("${body.xxx}");  fail("Should throw exception");} catch (JoorCSimpleCompilationException e) {} @AT@ 7941 @LENGTH@ 217
------DEL ExpressionStatement@@MethodInvocation:context.resolveLanguage("csimple").createExpression("${body.xxx}") @AT@ 7959 @LENGTH@ 67
---------DEL MethodInvocation@@context.resolveLanguage("csimple").createExpression("${body.xxx}") @AT@ 7959 @LENGTH@ 66
------------DEL MethodInvocation@@MethodName:resolveLanguage:["csimple"] @AT@ 7959 @LENGTH@ 34
---------------DEL StringLiteral@@"csimple" @AT@ 7983 @LENGTH@ 9
------DEL ExpressionStatement@@MethodInvocation:fail("Should throw exception") @AT@ 8039 @LENGTH@ 31
------DEL CatchClause@@catch (JoorCSimpleCompilationException e) {} @AT@ 8081 @LENGTH@ 77
---------DEL SingleVariableDeclaration@@JoorCSimpleCompilationException e @AT@ 8088 @LENGTH@ 33
------------DEL SimpleType@@JoorCSimpleCompilationException @AT@ 8088 @LENGTH@ 31
------------DEL SimpleName@@e @AT@ 8120 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThrows(JoorCSimpleCompilationException.class,() -> language.createExpression("${body.xxx}"),"Should throw exception") @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlExpression, Exception,  @AT@ 7988 @LENGTH@ 142
------MOV MethodInvocation@@fail("Should throw exception") @TO@ ExpressionStatement@@MethodInvocation:assertThrows(JoorCSimpleCompilationException.class,() -> language.createExpression("${body.xxx}"),"Should throw exception") @AT@ 8039 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThrows(SimpleIllegalSyntaxException.class,() -> language.createExpression("${bodyxxx}"),"Should throw exception") @TO@ MethodDeclaration@@public, void, MethodName:testBodyOgnlExpression, Exception,  @AT@ 8140 @LENGTH@ 138
------INS MethodInvocation@@assertThrows(SimpleIllegalSyntaxException.class,() -> language.createExpression("${bodyxxx}"),"Should throw exception") @TO@ ExpressionStatement@@MethodInvocation:assertThrows(SimpleIllegalSyntaxException.class,() -> language.createExpression("${bodyxxx}"),"Should throw exception") @AT@ 8140 @LENGTH@ 137
---------INS SimpleName@@MethodName:assertThrows:[SimpleIllegalSyntaxException.class, () -> language.createExpression("${bodyxxx}"), "Should throw exception"] @TO@ MethodInvocation@@assertThrows(SimpleIllegalSyntaxException.class,() -> language.createExpression("${bodyxxx}"),"Should throw exception") @AT@ 8140 @LENGTH@ 137
------------INS TypeLiteral@@SimpleIllegalSyntaxException.class @TO@ SimpleName@@MethodName:assertThrows:[SimpleIllegalSyntaxException.class, () -> language.createExpression("${bodyxxx}"), "Should throw exception"] @AT@ 8153 @LENGTH@ 34
------------INS LambdaExpression@@() -> language.createExpression("${bodyxxx}") @TO@ SimpleName@@MethodName:assertThrows:[SimpleIllegalSyntaxException.class, () -> language.createExpression("${bodyxxx}"), "Should throw exception"] @AT@ 8189 @LENGTH@ 45
---------------INS MethodInvocation@@language.createExpression("${bodyxxx}") @TO@ LambdaExpression@@() -> language.createExpression("${bodyxxx}") @AT@ 8195 @LENGTH@ 39
------------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@language.createExpression("${bodyxxx}") @AT@ 8219 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:createExpression:["${bodyxxx}"] @TO@ MethodInvocation@@language.createExpression("${bodyxxx}") @AT@ 8254 @LENGTH@ 30
------------MOV StringLiteral@@"Should throw exception" @TO@ SimpleName@@MethodName:assertThrows:[SimpleIllegalSyntaxException.class, () -> language.createExpression("${bodyxxx}"), "Should throw exception"] @AT@ 8303 @LENGTH@ 24
---DEL TryStatement@@try {  context.resolveLanguage("csimple").createExpression("${bodyxxx}");  fail("Should throw exception");} catch (SimpleIllegalSyntaxException e) {} @AT@ 8201 @LENGTH@ 213
------DEL ExpressionStatement@@MethodInvocation:context.resolveLanguage("csimple").createExpression("${bodyxxx}") @AT@ 8219 @LENGTH@ 66
---------DEL MethodInvocation@@context.resolveLanguage("csimple").createExpression("${bodyxxx}") @AT@ 8219 @LENGTH@ 65
------------DEL MethodInvocation@@MethodName:resolveLanguage:["csimple"] @AT@ 8219 @LENGTH@ 34
---------------DEL StringLiteral@@"csimple" @AT@ 8243 @LENGTH@ 9
------DEL ExpressionStatement@@MethodInvocation:fail("Should throw exception") @AT@ 8298 @LENGTH@ 31
---------DEL MethodInvocation@@fail("Should throw exception") @AT@ 8298 @LENGTH@ 30
------------DEL SimpleName@@MethodName:fail:["Should throw exception"] @AT@ 8298 @LENGTH@ 30
------DEL CatchClause@@catch (SimpleIllegalSyntaxException e) {} @AT@ 8340 @LENGTH@ 74
---------DEL SingleVariableDeclaration@@SimpleIllegalSyntaxException e @AT@ 8347 @LENGTH@ 30
------------DEL SimpleType@@SimpleIllegalSyntaxException @AT@ 8347 @LENGTH@ 28
------------DEL SimpleName@@e @AT@ 8376 @LENGTH@ 1


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri, Exception,  @AT@ 5546 @LENGTH@ 654
---DEL PrimitiveType@@void @AT@ 5541 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri @AT@ 5546 @LENGTH@ 53
---DEL SimpleType@@Exception @AT@ 5609 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining="dummy"; @AT@ 5629 @LENGTH@ 33
------DEL Modifier@@final @AT@ 5629 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5635 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="dummy" @AT@ 5642 @LENGTH@ 19
---------DEL SimpleName@@remaining @AT@ 5642 @LENGTH@ 9
---------DEL StringLiteral@@"dummy" @AT@ 5654 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final String uri="debezium:dummy"; @AT@ 5671 @LENGTH@ 36
------DEL Modifier@@final @AT@ 5671 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5677 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:dummy" @AT@ 5684 @LENGTH@ 22
---------DEL SimpleName@@uri @AT@ 5684 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:dummy" @AT@ 5690 @LENGTH@ 16
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5716 @LENGTH@ 478
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext()) @AT@ 5721 @LENGTH@ 97
---------DEL Modifier@@final @AT@ 5721 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5727 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumMySqlComponent(new DefaultCamelContext()) @AT@ 5745 @LENGTH@ 73
------------DEL SimpleName@@debeziumComponent @AT@ 5745 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumMySqlComponent[new DefaultCamelContext()] @AT@ 5765 @LENGTH@ 53
---------------DEL New@@new @AT@ 5765 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumMySqlComponent @AT@ 5769 @LENGTH@ 22
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5792 @LENGTH@ 25
------------------DEL New@@new @AT@ 5792 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5796 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5834 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5834 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5834 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5852 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5908 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5908 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5908 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5926 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5943 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5963 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5963 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5969 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5969 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5973 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5981 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5989 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5989 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 6002 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 6002 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 6014 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6038 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6038 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 6038 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 6051 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 6083 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6107 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6107 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 6107 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 6125 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 6140 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 6145 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 6156 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(fileName == null ? null : fileName.toFile()),file) @TO@ MethodInvocation:toFileVisitResult(accept(fileName == null ? null : fileName.toFile())) @AT@ 7105 @LENGTH@ 84
---UPD MethodInvocation@@toFileVisitResult(accept(fileName == null ? null : fileName.toFile()),file) @TO@ toFileVisitResult(accept(fileName == null ? null : fileName.toFile())) @AT@ 7112 @LENGTH@ 76
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(fileName == null ? null : fileName.toFile()), file] @TO@ MethodName:toFileVisitResult:[accept(fileName == null ? null : fileName.toFile())] @AT@ 7112 @LENGTH@ 76
---------DEL SimpleName@@file @AT@ 7183 @LENGTH@ 4


UPD MethodDeclaration@@public, AttributeLayout, MethodName:getAttributeLayout, final String name, final int context, Pack200Exception,  @TO@ public, AttributeLayout, MethodName:getAttributeLayout, final String name, final int context,  @AT@ 10454 @LENGTH@ 431
---DEL SimpleType@@Pack200Exception @AT@ 10541 @LENGTH@ 16


UPD IfStatement@@if (managedCamelContext == null) {  LOG.warn("Cannot dump route coverage to file as JMX is not enabled." + " Ensure camel-management JAR is on classpath (can be test scope)." + " Override useJmx() method to enable JMX in the unit test classes."+ " Or when using Spring you can add the @EnableRouteCoverage annotation to the test classes.");} else {  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  file.mkdirs();  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @TO@ if (managedCamelContext == null) {  LOG.warn("Cannot dump route coverage to file as JMX is not enabled." + " Ensure camel-management JAR is on classpath (can be test scope)." + " Override useJmx() method to enable JMX in the unit test classes."+ " Or when using Spring you can add the @EnableRouteCoverage annotation to the test classes.");} else {  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  boolean result=file.mkdirs();  if (!result) {    LOG.error("mkdirs() failed for " + file);  }  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @AT@ 1898 @LENGTH@ 1290
---UPD Block@@ElseBody:{  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  file.mkdirs();  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @TO@ ElseBody:{  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  boolean result=file.mkdirs();  if (!result) {    LOG.error("mkdirs() failed for " + file);  }  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @AT@ 2374 @LENGTH@ 814
------INS VariableDeclarationStatement@@boolean result=file.mkdirs(); @TO@ Block@@ElseBody:{  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  file.mkdirs();  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @AT@ 2808 @LENGTH@ 31
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=file.mkdirs(); @AT@ 2808 @LENGTH@ 7
---------INS VariableDeclarationFragment@@result=file.mkdirs() @TO@ VariableDeclarationStatement@@boolean result=file.mkdirs(); @AT@ 2816 @LENGTH@ 22
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=file.mkdirs() @AT@ 2816 @LENGTH@ 6
------------INS MethodInvocation@@file.mkdirs() @TO@ VariableDeclarationFragment@@result=file.mkdirs() @AT@ 2825 @LENGTH@ 13
---------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.mkdirs() @AT@ 2808 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@file.mkdirs() @AT@ 2813 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:file.mkdirs() @AT@ 2808 @LENGTH@ 14
---------DEL MethodInvocation@@file.mkdirs() @AT@ 2808 @LENGTH@ 13
------INS IfStatement@@if (!result) {  LOG.error("mkdirs() failed for " + file);} @TO@ Block@@ElseBody:{  ManagedCamelContextMBean mBean=managedCamelContext.getManagedCamelContext();  String xml=mBean.dumpRoutesCoverageAsXml();  String combined="<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName,testName) + xml+ "\n</camelRouteCoverage>";  File file=new File(dir);  file.mkdirs();  file=new File(dir,name);  LOG.info("Dumping route coverage to file: {}",file);  InputStream is=new ByteArrayInputStream(combined.getBytes());  OutputStream os=new FileOutputStream(file,false);  IOHelper.copyAndCloseInput(is,os);  IOHelper.close(os);} @AT@ 2856 @LENGTH@ 94
---------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("mkdirs() failed for " + file);} @AT@ 2860 @LENGTH@ 7
------------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 2860 @LENGTH@ 1
------------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 2861 @LENGTH@ 6
---------INS Block@@ThenBody:{  LOG.error("mkdirs() failed for " + file);} @TO@ IfStatement@@if (!result) {  LOG.error("mkdirs() failed for " + file);} @AT@ 2869 @LENGTH@ 81
------------INS ExpressionStatement@@MethodInvocation:LOG.error("mkdirs() failed for " + file) @TO@ Block@@ThenBody:{  LOG.error("mkdirs() failed for " + file);} @AT@ 2891 @LENGTH@ 41
---------------INS MethodInvocation@@LOG.error("mkdirs() failed for " + file) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("mkdirs() failed for " + file) @AT@ 2891 @LENGTH@ 40
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("mkdirs() failed for " + file) @AT@ 2891 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["mkdirs() failed for " + file] @TO@ MethodInvocation@@LOG.error("mkdirs() failed for " + file) @AT@ 2895 @LENGTH@ 36
---------------------INS InfixExpression@@"mkdirs() failed for " + file @TO@ SimpleName@@MethodName:error:["mkdirs() failed for " + file] @AT@ 2901 @LENGTH@ 29
------------------------INS StringLiteral@@"mkdirs() failed for " @TO@ InfixExpression@@"mkdirs() failed for " + file @AT@ 2901 @LENGTH@ 22
------------------------INS Operator@@+ @TO@ InfixExpression@@"mkdirs() failed for " + file @AT@ 2923 @LENGTH@ 1
------------------------INS SimpleName@@file @TO@ InfixExpression@@"mkdirs() failed for " + file @AT@ 2926 @LENGTH@ 4


UPD MethodDeclaration@@Map<K,Value>, MethodName:decompose, P property, Neo4jConversionService neo4jConversionService,  @TO@ Map<K,Value>, MethodName:decompose, @Nullable P property, Neo4jConversionService neo4jConversionService,  @AT@ 1820 @LENGTH@ 69
---UPD SingleVariableDeclaration@@P property @TO@ @Nullable P property @AT@ 1830 @LENGTH@ 10


UPD IfStatement@@if (credentialStore.exists(alias,SecretKeyCredential.class)) {  final SecretKey secretKey=credentialStore.retrieve(alias,SecretKeyCredential.class).getSecretKey();  final String encoded=SecretKeyUtil.exportSecretKey(secretKey);  String clearText=cmdLine.getOptionValue(CLEAR_TEXT);  if (clearText == null) {    clearText=prompt(false,ElytronToolMessages.msg.clearTextToImport(),true,ElytronToolMessages.msg.clearTextToImportAgain());  }  cipherTextToken=CipherUtil.encrypt(clearText,secretKey);  System.out.println(ElytronToolMessages.msg.encryptedToken(cipherTextToken,alias));  setStatus(ElytronTool.ElytronToolExitStatus_OK);} else {  setStatus(ALIAS_NOT_FOUND);  System.out.println(ElytronToolMessages.msg.aliasDoesNotExist(alias));} @TO@ if (credentialStore.exists(alias,SecretKeyCredential.class)) {  final SecretKey secretKey=credentialStore.retrieve(alias,SecretKeyCredential.class).getSecretKey();  String clearText=cmdLine.getOptionValue(CLEAR_TEXT);  if (clearText == null) {    clearText=prompt(false,ElytronToolMessages.msg.clearTextToImport(),true,ElytronToolMessages.msg.clearTextToImportAgain());  }  cipherTextToken=CipherUtil.encrypt(clearText,secretKey);  System.out.println(ElytronToolMessages.msg.encryptedToken(cipherTextToken,alias));  setStatus(ElytronTool.ElytronToolExitStatus_OK);} else {  setStatus(ALIAS_NOT_FOUND);  System.out.println(ElytronToolMessages.msg.aliasDoesNotExist(alias));} @AT@ 36725 @LENGTH@ 898
---UPD Block@@ThenBody:{  final SecretKey secretKey=credentialStore.retrieve(alias,SecretKeyCredential.class).getSecretKey();  final String encoded=SecretKeyUtil.exportSecretKey(secretKey);  String clearText=cmdLine.getOptionValue(CLEAR_TEXT);  if (clearText == null) {    clearText=prompt(false,ElytronToolMessages.msg.clearTextToImport(),true,ElytronToolMessages.msg.clearTextToImportAgain());  }  cipherTextToken=CipherUtil.encrypt(clearText,secretKey);  System.out.println(ElytronToolMessages.msg.encryptedToken(cipherTextToken,alias));  setStatus(ElytronTool.ElytronToolExitStatus_OK);} @TO@ ThenBody:{  final SecretKey secretKey=credentialStore.retrieve(alias,SecretKeyCredential.class).getSecretKey();  String clearText=cmdLine.getOptionValue(CLEAR_TEXT);  if (clearText == null) {    clearText=prompt(false,ElytronToolMessages.msg.clearTextToImport(),true,ElytronToolMessages.msg.clearTextToImportAgain());  }  cipherTextToken=CipherUtil.encrypt(clearText,secretKey);  System.out.println(ElytronToolMessages.msg.encryptedToken(cipherTextToken,alias));  setStatus(ElytronTool.ElytronToolExitStatus_OK);} @AT@ 36787 @LENGTH@ 697
------DEL VariableDeclarationStatement@@final String encoded=SecretKeyUtil.exportSecretKey(secretKey); @AT@ 36916 @LENGTH@ 64
---------DEL Modifier@@final @AT@ 36916 @LENGTH@ 5
---------DEL SimpleType@@String @AT@ 36922 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@encoded=SecretKeyUtil.exportSecretKey(secretKey) @AT@ 36929 @LENGTH@ 50
------------DEL SimpleName@@encoded @AT@ 36929 @LENGTH@ 7
------------DEL MethodInvocation@@SecretKeyUtil.exportSecretKey(secretKey) @AT@ 36939 @LENGTH@ 40
---------------DEL SimpleName@@Name:SecretKeyUtil @AT@ 36939 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:exportSecretKey:[secretKey] @AT@ 36953 @LENGTH@ 26
------------------DEL SimpleName@@secretKey @AT@ 36969 @LENGTH@ 9


DEL MethodDeclaration@@private, void, MethodName:setWriteAttributeValues,  @AT@ 17880 @LENGTH@ 599
---DEL Modifier@@private @AT@ 17880 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 17888 @LENGTH@ 4
---DEL SimpleName@@MethodName:setWriteAttributeValues @AT@ 17893 @LENGTH@ 23
---DEL IfStatement@@if (!OperationDialog.this.node.isLeaf()) return; @AT@ 17933 @LENGTH@ 48
------DEL PrefixExpression@@!OperationDialog.this.node.isLeaf() @AT@ 17937 @LENGTH@ 35
---------DEL Operator@@! @AT@ 17937 @LENGTH@ 1
---------DEL MethodInvocation@@OperationDialog.this.node.isLeaf() @AT@ 17938 @LENGTH@ 34
------------DEL FieldAccess@@OperationDialog.this.node @AT@ 17938 @LENGTH@ 25
---------------DEL ThisExpression@@this @AT@ 17938 @LENGTH@ 20
---------------DEL SimpleName@@node @AT@ 17959 @LENGTH@ 4
------------DEL SimpleName@@MethodName:isLeaf:[] @AT@ 17964 @LENGTH@ 8
------DEL Block@@ThenBody:return; @AT@ 17974 @LENGTH@ 7
---------DEL ReturnStatement@@ @AT@ 17974 @LENGTH@ 7
---DEL IfStatement@@if (!OperationDialog.this.opName.equals("write-attribute")) return; @AT@ 17994 @LENGTH@ 67
------DEL PrefixExpression@@!OperationDialog.this.opName.equals("write-attribute") @AT@ 17998 @LENGTH@ 54
---------DEL Operator@@! @AT@ 17998 @LENGTH@ 1
---------DEL MethodInvocation@@OperationDialog.this.opName.equals("write-attribute") @AT@ 17999 @LENGTH@ 53
------------DEL FieldAccess@@OperationDialog.this.opName @AT@ 17999 @LENGTH@ 27
---------------DEL ThisExpression@@this @AT@ 17999 @LENGTH@ 20
---------------DEL SimpleName@@opName @AT@ 18020 @LENGTH@ 6
------------DEL SimpleName@@MethodName:equals:["write-attribute"] @AT@ 18027 @LENGTH@ 25
---------------DEL StringLiteral@@"write-attribute" @AT@ 18034 @LENGTH@ 17
------DEL Block@@ThenBody:return; @AT@ 18054 @LENGTH@ 7
---------DEL ReturnStatement@@ @AT@ 18054 @LENGTH@ 7
---DEL VariableDeclarationStatement@@UserObject usrObj=(UserObject)OperationDialog.this.node.getUserObject(); @AT@ 18075 @LENGTH@ 74
------DEL SimpleType@@UserObject @AT@ 18075 @LENGTH@ 10
------DEL VariableDeclarationFragment@@usrObj=(UserObject)OperationDialog.this.node.getUserObject() @AT@ 18086 @LENGTH@ 62
---------DEL SimpleName@@usrObj @AT@ 18086 @LENGTH@ 6
---------DEL CastExpression@@(UserObject)OperationDialog.this.node.getUserObject() @AT@ 18095 @LENGTH@ 53
------------DEL SimpleType@@UserObject @AT@ 18096 @LENGTH@ 10
------------DEL MethodInvocation@@OperationDialog.this.node.getUserObject() @AT@ 18107 @LENGTH@ 41
---------------DEL FieldAccess@@OperationDialog.this.node @AT@ 18107 @LENGTH@ 25
------------------DEL ThisExpression@@this @AT@ 18107 @LENGTH@ 20
------------------DEL SimpleName@@node @AT@ 18128 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getUserObject:[] @AT@ 18133 @LENGTH@ 15
---DEL IfStatement@@if (this.name.equals("name")) {  ((JTextField)valueComponent).setText(usrObj.getName());  return;} @AT@ 18163 @LENGTH@ 141
------DEL MethodInvocation@@this.name.equals("name") @AT@ 18167 @LENGTH@ 24
---------DEL FieldAccess@@this.name @AT@ 18167 @LENGTH@ 9
------------DEL ThisExpression@@this @AT@ 18167 @LENGTH@ 4
------------DEL SimpleName@@name @AT@ 18172 @LENGTH@ 4
---------DEL SimpleName@@MethodName:equals:["name"] @AT@ 18177 @LENGTH@ 14
------------DEL StringLiteral@@"name" @AT@ 18184 @LENGTH@ 6
------DEL Block@@ThenBody:{  ((JTextField)valueComponent).setText(usrObj.getName());  return;} @AT@ 18193 @LENGTH@ 111
---------DEL ExpressionStatement@@MethodInvocation:((JTextField)valueComponent).setText(usrObj.getName()) @AT@ 18211 @LENGTH@ 55
------------DEL MethodInvocation@@((JTextField)valueComponent).setText(usrObj.getName()) @AT@ 18211 @LENGTH@ 54
---------------DEL ParenthesizedExpression@@((JTextField)valueComponent) @AT@ 18211 @LENGTH@ 28
------------------DEL CastExpression@@(JTextField)valueComponent @AT@ 18212 @LENGTH@ 26
---------------------DEL SimpleType@@JTextField @AT@ 18213 @LENGTH@ 10
---------------------DEL SimpleName@@valueComponent @AT@ 18224 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:setText:[usrObj.getName()] @AT@ 18240 @LENGTH@ 25
------------------DEL MethodInvocation@@usrObj.getName() @AT@ 18248 @LENGTH@ 16
---------------------DEL SimpleName@@Name:usrObj @AT@ 18248 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 18255 @LENGTH@ 9
---------DEL ReturnStatement@@ @AT@ 18283 @LENGTH@ 7
---DEL IfStatement@@if (usrObj.getValue().equals("undefined")) return; @AT@ 18318 @LENGTH@ 50
------DEL MethodInvocation@@usrObj.getValue().equals("undefined") @AT@ 18322 @LENGTH@ 37
---------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 18322 @LENGTH@ 17
---------DEL SimpleName@@Name:usrObj @AT@ 18322 @LENGTH@ 6
---------DEL SimpleName@@MethodName:equals:["undefined"] @AT@ 18340 @LENGTH@ 19
------------DEL StringLiteral@@"undefined" @AT@ 18347 @LENGTH@ 11
------DEL Block@@ThenBody:return; @AT@ 18361 @LENGTH@ 7
---------DEL ReturnStatement@@ @AT@ 18361 @LENGTH@ 7
---DEL IfStatement@@if (this.name.equals("value")) ((JTextField)valueComponent).setText(usrObj.getValue()); @AT@ 18382 @LENGTH@ 87
------DEL MethodInvocation@@this.name.equals("value") @AT@ 18386 @LENGTH@ 25
---------DEL FieldAccess@@this.name @AT@ 18386 @LENGTH@ 9
------------DEL ThisExpression@@this @AT@ 18386 @LENGTH@ 4
------------DEL SimpleName@@name @AT@ 18391 @LENGTH@ 4
---------DEL SimpleName@@MethodName:equals:["value"] @AT@ 18396 @LENGTH@ 15
------------DEL StringLiteral@@"value" @AT@ 18403 @LENGTH@ 7
------DEL Block@@ThenBody:((JTextField)valueComponent).setText(usrObj.getValue()); @AT@ 18413 @LENGTH@ 56
---------DEL ExpressionStatement@@MethodInvocation:((JTextField)valueComponent).setText(usrObj.getValue()) @AT@ 18413 @LENGTH@ 56
------------DEL MethodInvocation@@((JTextField)valueComponent).setText(usrObj.getValue()) @AT@ 18413 @LENGTH@ 55
---------------DEL ParenthesizedExpression@@((JTextField)valueComponent) @AT@ 18413 @LENGTH@ 28
------------------DEL CastExpression@@(JTextField)valueComponent @AT@ 18414 @LENGTH@ 26
---------------------DEL SimpleType@@JTextField @AT@ 18415 @LENGTH@ 10
---------------------DEL SimpleName@@valueComponent @AT@ 18426 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:setText:[usrObj.getValue()] @AT@ 18442 @LENGTH@ 26
------------------DEL MethodInvocation@@usrObj.getValue() @AT@ 18450 @LENGTH@ 17
---------------------DEL SimpleName@@Name:usrObj @AT@ 18450 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 18457 @LENGTH@ 10


UPD SuperConstructorInvocation@@super(WebJackson2Module.class.getName(),new Version(1,0,0,null,null,null));
 @TO@ super(WebServletJackson2Module.class.getName(),new Version(1,0,0,null,null,null));
 @AT@ 1981 @LENGTH@ 81
---UPD MethodInvocation@@WebJackson2Module.class.getName() @TO@ WebServletJackson2Module.class.getName() @AT@ 1987 @LENGTH@ 33
------UPD TypeLiteral@@WebJackson2Module.class @TO@ WebServletJackson2Module.class @AT@ 1987 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:matchesWhenNoClosingPrefixStringThenIllegalArgumentExcetion,  @TO@ public, void, MethodName:matchesWhenNoClosingPrefixStringThenIllegalArgumentException,  @AT@ 4610 @LENGTH@ 343
---UPD SimpleName@@MethodName:matchesWhenNoClosingPrefixStringThenIllegalArgumentExcetion @TO@ MethodName:matchesWhenNoClosingPrefixStringThenIllegalArgumentException @AT@ 4622 @LENGTH@ 59


UPD MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyDenied, InterruptedException,  @TO@ public, void, MethodName:testSerializeRequestBodyDenied,  @AT@ 2691 @LENGTH@ 484
---DEL SimpleType@@InterruptedException @AT@ 2743 @LENGTH@ 20
---DEL ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
) @AT@ 2930 @LENGTH@ 239
------DEL MethodInvocation@@assertThrows(CamelExecutionException.class,() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
) @AT@ 2930 @LENGTH@ 238
---------DEL SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
] @AT@ 2930 @LENGTH@ 238
------------DEL TypeLiteral@@CamelExecutionException.class @AT@ 2943 @LENGTH@ 29
------------DEL LambdaExpression@@() -> {
  template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT);
}
 @AT@ 2974 @LENGTH@ 193
---------------DEL ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2994 @LENGTH@ 163
------------------DEL MethodInvocation@@template.sendBodyAndHeader(getProducerUri() + "/serialized",new SerializedBean(),Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 2994 @LENGTH@ 162
---------------------DEL SimpleName@@Name:template @AT@ 2994 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:sendBodyAndHeader:[getProducerUri() + "/serialized", new SerializedBean(), Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3003 @LENGTH@ 153
------------------------DEL InfixExpression@@getProducerUri() + "/serialized" @AT@ 3021 @LENGTH@ 32
------------------------DEL ClassInstanceCreation@@SerializedBean[] @AT@ 3055 @LENGTH@ 20
---INS VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyDenied, InterruptedException,  @AT@ 2938 @LENGTH@ 60
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2938 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2944 @LENGTH@ 6
------INS VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @TO@ VariableDeclarationStatement@@final String endpointUri=getProducerUri() + "/serialized"; @AT@ 2951 @LENGTH@ 46
---------INS SimpleName@@endpointUri @TO@ VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @AT@ 2951 @LENGTH@ 11
---------INS InfixExpression@@getProducerUri() + "/serialized" @TO@ VariableDeclarationFragment@@endpointUri=getProducerUri() + "/serialized" @AT@ 2965 @LENGTH@ 32
------------MOV MethodInvocation@@MethodName:getProducerUri:[] @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 3021 @LENGTH@ 16
------------MOV Operator@@+ @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 3037 @LENGTH@ 1
------------MOV StringLiteral@@"/serialized" @TO@ InfixExpression@@getProducerUri() + "/serialized" @AT@ 3040 @LENGTH@ 13
---INS VariableDeclarationStatement@@final SerializedBean body=new SerializedBean(); @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyDenied, InterruptedException,  @AT@ 3007 @LENGTH@ 49
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final SerializedBean body=new SerializedBean(); @AT@ 3007 @LENGTH@ 5
------INS SimpleType@@SerializedBean @TO@ VariableDeclarationStatement@@final SerializedBean body=new SerializedBean(); @AT@ 3013 @LENGTH@ 14
------INS VariableDeclarationFragment@@body=new SerializedBean() @TO@ VariableDeclarationStatement@@final SerializedBean body=new SerializedBean(); @AT@ 3028 @LENGTH@ 27
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=new SerializedBean() @AT@ 3028 @LENGTH@ 4
---------INS ClassInstanceCreation@@SerializedBean[] @TO@ VariableDeclarationFragment@@body=new SerializedBean() @AT@ 3035 @LENGTH@ 20
------------MOV New@@new @TO@ ClassInstanceCreation@@SerializedBean[] @AT@ 3055 @LENGTH@ 3
------------MOV SimpleType@@SerializedBean @TO@ ClassInstanceCreation@@SerializedBean[] @AT@ 3059 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @TO@ MethodDeclaration@@public, void, MethodName:testSerializeRequestBodyDenied, InterruptedException,  @AT@ 3066 @LENGTH@ 177
------INS MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @TO@ ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @AT@ 3066 @LENGTH@ 176
---------INS SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @TO@ MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)) @AT@ 3066 @LENGTH@ 176
------------INS TypeLiteral@@CamelExecutionException.class @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @AT@ 3079 @LENGTH@ 29
------------INS LambdaExpression@@() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT)] @AT@ 3110 @LENGTH@ 131
---------------INS MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @TO@ LambdaExpression@@() -> template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 3116 @LENGTH@ 125
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 3116 @LENGTH@ 8
------------------INS SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @TO@ MethodInvocation@@template.sendBodyAndHeader(endpointUri,body,Exchange.CONTENT_TYPE,CONTENT_TYPE_JAVA_SERIALIZED_OBJECT) @AT@ 3125 @LENGTH@ 116
---------------------MOV QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3077 @LENGTH@ 21
---------------------MOV QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3077 @LENGTH@ 21
---------------------MOV SimpleName@@CONTENT_TYPE_JAVA_SERIALIZED_OBJECT @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3120 @LENGTH@ 35
---------------------MOV SimpleName@@CONTENT_TYPE_JAVA_SERIALIZED_OBJECT @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3120 @LENGTH@ 35
---------------------INS SimpleName@@endpointUri @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3143 @LENGTH@ 11
---------------------INS SimpleName@@body @TO@ SimpleName@@MethodName:sendBodyAndHeader:[endpointUri, body, Exchange.CONTENT_TYPE, CONTENT_TYPE_JAVA_SERIALIZED_OBJECT] @AT@ 3156 @LENGTH@ 4


DEL IfStatement@@if (configuration == null) {  return new SqlServerConnectorEmbeddedDebeziumConfiguration();} @AT@ 1728 @LENGTH@ 112
---DEL InfixExpression@@configuration == null @AT@ 1732 @LENGTH@ 21
------DEL SimpleName@@configuration @AT@ 1732 @LENGTH@ 13
------DEL Operator@@== @AT@ 1745 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1749 @LENGTH@ 4
---DEL Block@@ThenBody:{  return new SqlServerConnectorEmbeddedDebeziumConfiguration();} @AT@ 1755 @LENGTH@ 85
------DEL ReturnStatement@@ClassInstanceCreation:new SqlServerConnectorEmbeddedDebeziumConfiguration() @AT@ 1769 @LENGTH@ 61
---------DEL ClassInstanceCreation@@SqlServerConnectorEmbeddedDebeziumConfiguration[] @AT@ 1776 @LENGTH@ 53
------------DEL New@@new @AT@ 1776 @LENGTH@ 3
------------DEL SimpleType@@SqlServerConnectorEmbeddedDebeziumConfiguration @AT@ 1780 @LENGTH@ 47


UPD ExpressionStatement@@Assignment:permDdfs=new MiniDFSCluster.Builder(configuration).numDataNodes(1).format(true).build() @TO@ Assignment:permDdfs=new MiniDFSCluster.Builder(configuration).numDataNodes(2).format(true).build() @AT@ 3776 @LENGTH@ 90
---UPD Assignment@@permDdfs=new MiniDFSCluster.Builder(configuration).numDataNodes(1).format(true).build() @TO@ permDdfs=new MiniDFSCluster.Builder(configuration).numDataNodes(2).format(true).build() @AT@ 3776 @LENGTH@ 89
------UPD MethodInvocation@@new MiniDFSCluster.Builder(configuration).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(configuration).numDataNodes(2).format(true).build() @AT@ 3787 @LENGTH@ 78
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 3787 @LENGTH@ 57
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 3842 @LENGTH@ 1


UPD TryStatement@@try {  File file=Files.createTempFile("camel","").toFile();  file.delete();  config.getServletContext().setAttribute("javax.servlet.context.tempdir",file.getParentFile());} catch (IOException e) {} @TO@ try {  File file=Files.createTempFile("camel","").toFile();  boolean result=file.delete();  if (!result) {    LOG.error("failed to delete {}",file);  }  config.getServletContext().setAttribute("javax.servlet.context.tempdir",file.getParentFile());} catch (IOException e) {} @AT@ 2344 @LENGTH@ 321
---DEL ExpressionStatement@@MethodInvocation:file.delete() @AT@ 2438 @LENGTH@ 14
------DEL MethodInvocation@@file.delete() @AT@ 2438 @LENGTH@ 13
---INS VariableDeclarationStatement@@boolean result=file.delete(); @TO@ TryStatement@@try {  File file=Files.createTempFile("camel","").toFile();  file.delete();  config.getServletContext().setAttribute("javax.servlet.context.tempdir",file.getParentFile());} catch (IOException e) {} @AT@ 2585 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=file.delete(); @AT@ 2585 @LENGTH@ 7
------INS VariableDeclarationFragment@@result=file.delete() @TO@ VariableDeclarationStatement@@boolean result=file.delete(); @AT@ 2593 @LENGTH@ 22
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=file.delete() @AT@ 2593 @LENGTH@ 6
---------INS MethodInvocation@@file.delete() @TO@ VariableDeclarationFragment@@result=file.delete() @AT@ 2602 @LENGTH@ 13
------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.delete() @AT@ 2438 @LENGTH@ 4
------------MOV SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.delete() @AT@ 2443 @LENGTH@ 8
---INS IfStatement@@if (!result) {  LOG.error("failed to delete {}",file);} @TO@ TryStatement@@try {  File file=Files.createTempFile("camel","").toFile();  file.delete();  config.getServletContext().setAttribute("javax.servlet.context.tempdir",file.getParentFile());} catch (IOException e) {} @AT@ 2633 @LENGTH@ 92
------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("failed to delete {}",file);} @AT@ 2637 @LENGTH@ 7
---------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 2637 @LENGTH@ 1
---------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 2638 @LENGTH@ 6
------INS Block@@ThenBody:{  LOG.error("failed to delete {}",file);} @TO@ IfStatement@@if (!result) {  LOG.error("failed to delete {}",file);} @AT@ 2646 @LENGTH@ 79
---------INS ExpressionStatement@@MethodInvocation:LOG.error("failed to delete {}",file) @TO@ Block@@ThenBody:{  LOG.error("failed to delete {}",file);} @AT@ 2668 @LENGTH@ 39
------------INS MethodInvocation@@LOG.error("failed to delete {}",file) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("failed to delete {}",file) @AT@ 2668 @LENGTH@ 38
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("failed to delete {}",file) @AT@ 2668 @LENGTH@ 3
---------------INS SimpleName@@MethodName:error:["failed to delete {}", file] @TO@ MethodInvocation@@LOG.error("failed to delete {}",file) @AT@ 2672 @LENGTH@ 34
------------------INS StringLiteral@@"failed to delete {}" @TO@ SimpleName@@MethodName:error:["failed to delete {}", file] @AT@ 2678 @LENGTH@ 21
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:error:["failed to delete {}", file] @AT@ 2701 @LENGTH@ 4


INS IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @TO@ MethodDeclaration@@public, static, void, MethodName:logToken, String name, String token,  @AT@ 12079 @LENGTH@ 221
---INS InfixExpression@@token == null || isOpaqueToken(token) @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12083 @LENGTH@ 37
------INS InfixExpression@@token == null @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12083 @LENGTH@ 13
---------INS SimpleName@@token @TO@ InfixExpression@@token == null @AT@ 12083 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@token == null @AT@ 12088 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@token == null @AT@ 12092 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12096 @LENGTH@ 2
------INS MethodInvocation@@isOpaqueToken(token) @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12100 @LENGTH@ 20
---------INS SimpleName@@MethodName:isOpaqueToken:[token] @TO@ MethodInvocation@@isOpaqueToken(token) @AT@ 12100 @LENGTH@ 20
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:isOpaqueToken:[token] @AT@ 12114 @LENGTH@ 5
---INS Block@@ThenBody:{  log.tracef("\t%s: %s",name,token);} @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12122 @LENGTH@ 60
------INS ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token) @TO@ Block@@ThenBody:{  log.tracef("\t%s: %s",name,token);} @AT@ 12136 @LENGTH@ 36
---------INS MethodInvocation@@log.tracef("\t%s: %s",name,token) @TO@ ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token) @AT@ 12136 @LENGTH@ 35
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.tracef("\t%s: %s",name,token) @AT@ 12136 @LENGTH@ 3
------------INS SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @TO@ MethodInvocation@@log.tracef("\t%s: %s",name,token) @AT@ 12140 @LENGTH@ 31
---------------INS StringLiteral@@"\t%s: %s" @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12147 @LENGTH@ 10
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12159 @LENGTH@ 4
---------------INS SimpleName@@token @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12165 @LENGTH@ 5
---INS Block@@ElseBody:{  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12188 @LENGTH@ 112
------MOV ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature") @TO@ Block@@ElseBody:{  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 11915 @LENGTH@ 88


UPD IfStatement@@if (cl.isEnabled() && (revision < cl.getCurrentRevision())) {  LOG.debug("Revert revision {}",revision);  dirService.revert(revision);} @TO@ if (cl.isEnabled() && revision < cl.getCurrentRevision()) {  LOG.debug("Revert revision {}",revision);  dirService.revert(revision);} @AT@ 11274 @LENGTH@ 179
---UPD InfixExpression@@cl.isEnabled() && (revision < cl.getCurrentRevision()) @TO@ cl.isEnabled() && revision < cl.getCurrentRevision() @AT@ 11278 @LENGTH@ 54
------DEL ParenthesizedExpression@@(revision < cl.getCurrentRevision()) @AT@ 11296 @LENGTH@ 36
------MOV InfixExpression@@revision < cl.getCurrentRevision() @TO@ InfixExpression@@cl.isEnabled() && (revision < cl.getCurrentRevision()) @AT@ 11297 @LENGTH@ 34


UPD MethodDeclaration@@public, void, MethodName:shouldThrowExceptionIfUsedAsConsumer, Exception,  @TO@ public, void, MethodName:shouldThrowExceptionIfUsedAsConsumer,  @AT@ 7124 @LENGTH@ 427
---DEL SimpleType@@Exception @AT@ 7182 @LENGTH@ 9
---INS VariableDeclarationStatement@@RouteBuilder rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
; @TO@ MethodDeclaration@@public, void, MethodName:shouldThrowExceptionIfUsedAsConsumer, Exception,  @AT@ 7185 @LENGTH@ 196
------INS SimpleType@@RouteBuilder @TO@ VariableDeclarationStatement@@RouteBuilder rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
; @AT@ 7185 @LENGTH@ 12
------INS VariableDeclarationFragment@@rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
 @TO@ VariableDeclarationStatement@@RouteBuilder rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
; @AT@ 7198 @LENGTH@ 182
---------INS SimpleName@@rb @TO@ VariableDeclarationFragment@@rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
 @AT@ 7198 @LENGTH@ 2
---------MOV ClassInstanceCreation@@RouteBuilder[] @TO@ VariableDeclarationFragment@@rb=new RouteBuilder(){
  @Override public void configure(){
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
 @AT@ 7308 @LENGTH@ 234
---UPD ExpressionStatement@@MethodInvocation:assertThrows(FailedToStartRouteException.class,() -> context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
)) @TO@ MethodInvocation:assertThrows(FailedToStartRouteException.class,() -> context.addRoutes(rb)) @AT@ 7218 @LENGTH@ 327
------UPD MethodInvocation@@assertThrows(FailedToStartRouteException.class,() -> context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
)) @TO@ assertThrows(FailedToStartRouteException.class,() -> context.addRoutes(rb)) @AT@ 7218 @LENGTH@ 326
---------UPD SimpleName@@MethodName:assertThrows:[FailedToStartRouteException.class, () -> context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
)] @TO@ MethodName:assertThrows:[FailedToStartRouteException.class, () -> context.addRoutes(rb)] @AT@ 7218 @LENGTH@ 326
------------UPD LambdaExpression@@() -> context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
) @TO@ () -> context.addRoutes(rb) @AT@ 7282 @LENGTH@ 261
---------------UPD MethodInvocation@@context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
) @TO@ context.addRoutes(rb) @AT@ 7288 @LENGTH@ 255
------------------DEL MethodInvocation@@MethodName:context:[] @AT@ 7288 @LENGTH@ 9
------------------UPD SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
] @TO@ MethodName:addRoutes:[rb] @AT@ 7298 @LENGTH@ 245
---------------------INS SimpleName@@rb @TO@ SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
] @AT@ 7543 @LENGTH@ 2
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context().addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("spring-batch:mockJob").to("direct:emptyEndpoint");
  }
}
) @AT@ 7525 @LENGTH@ 7
---INS VariableDeclarationStatement@@final CamelContext context=context(); @TO@ MethodDeclaration@@public, void, MethodName:shouldThrowExceptionIfUsedAsConsumer, Exception,  @AT@ 7390 @LENGTH@ 39
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final CamelContext context=context(); @AT@ 7390 @LENGTH@ 5
------INS SimpleType@@CamelContext @TO@ VariableDeclarationStatement@@final CamelContext context=context(); @AT@ 7396 @LENGTH@ 12
------INS VariableDeclarationFragment@@context=context() @TO@ VariableDeclarationStatement@@final CamelContext context=context(); @AT@ 7409 @LENGTH@ 19
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=context() @AT@ 7409 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:context:[] @TO@ VariableDeclarationFragment@@context=context() @AT@ 7419 @LENGTH@ 9


UPD Block@@ThenBody:{  List<Selection<?>> selections=new ArrayList<>();  for (  String property : returnedType.getInputProperties()) {    PropertyPath path=PropertyPath.from(property,returnedType.getDomainType());    selections.add(toExpressionRecursively(root,path,true).alias(property));  }  query=query.multiselect(selections);} @TO@ ThenBody:{  List<Selection<?>> selections=new ArrayList<>();  for (  String property : returnedType.getInputProperties()) {    PropertyPath path=PropertyPath.from(property,returnedType.getDomainType());    selections.add(toExpressionRecursively(root,path,true).alias(property));  }  Class<?> typeToRead=returnedType.getTypeToRead();  query=typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0])));} @AT@ 5971 @LENGTH@ 336
---INS VariableDeclarationStatement@@Class<?> typeToRead=returnedType.getTypeToRead(); @TO@ Block@@ThenBody:{  List<Selection<?>> selections=new ArrayList<>();  for (  String property : returnedType.getInputProperties()) {    PropertyPath path=PropertyPath.from(property,returnedType.getDomainType());    selections.add(toExpressionRecursively(root,path,true).alias(property));  }  query=query.multiselect(selections);} @AT@ 6264 @LENGTH@ 51
------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> typeToRead=returnedType.getTypeToRead(); @AT@ 6264 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 6264 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 6270 @LENGTH@ 1
------INS VariableDeclarationFragment@@typeToRead=returnedType.getTypeToRead() @TO@ VariableDeclarationStatement@@Class<?> typeToRead=returnedType.getTypeToRead(); @AT@ 6273 @LENGTH@ 41
---------INS SimpleName@@typeToRead @TO@ VariableDeclarationFragment@@typeToRead=returnedType.getTypeToRead() @AT@ 6273 @LENGTH@ 10
---------INS MethodInvocation@@returnedType.getTypeToRead() @TO@ VariableDeclarationFragment@@typeToRead=returnedType.getTypeToRead() @AT@ 6286 @LENGTH@ 28
------------INS SimpleName@@Name:returnedType @TO@ MethodInvocation@@returnedType.getTypeToRead() @AT@ 6286 @LENGTH@ 12
------------INS SimpleName@@MethodName:getTypeToRead:[] @TO@ MethodInvocation@@returnedType.getTypeToRead() @AT@ 6299 @LENGTH@ 15
---UPD ExpressionStatement@@Assignment:query=query.multiselect(selections) @TO@ Assignment:query=typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6264 @LENGTH@ 38
------UPD Assignment@@query=query.multiselect(selections) @TO@ query=typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6264 @LENGTH@ 37
---------INS ConditionalExpression@@typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @TO@ Assignment@@query=query.multiselect(selections) @AT@ 6328 @LENGTH@ 169
------------MOV MethodInvocation@@query.multiselect(selections) @TO@ ConditionalExpression@@typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6272 @LENGTH@ 29
------------INS MethodInvocation@@typeToRead.isInterface() @TO@ ConditionalExpression@@typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6328 @LENGTH@ 24
---------------INS SimpleName@@Name:typeToRead @TO@ MethodInvocation@@typeToRead.isInterface() @AT@ 6328 @LENGTH@ 10
---------------INS SimpleName@@MethodName:isInterface:[] @TO@ MethodInvocation@@typeToRead.isInterface() @AT@ 6339 @LENGTH@ 13
------------INS MethodInvocation@@query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @TO@ ConditionalExpression@@typeToRead.isInterface() ? query.multiselect(selections) : query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6397 @LENGTH@ 100
---------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6397 @LENGTH@ 5
---------------INS SimpleName@@MethodName:select:[(Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))] @TO@ MethodInvocation@@query.select((Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))) @AT@ 6403 @LENGTH@ 94
------------------INS CastExpression@@(Selection)builder.construct(typeToRead,selections.toArray(new Selection[0])) @TO@ SimpleName@@MethodName:select:[(Selection)builder.construct(typeToRead,selections.toArray(new Selection[0]))] @AT@ 6410 @LENGTH@ 86
---------------------INS SimpleType@@Selection @TO@ CastExpression@@(Selection)builder.construct(typeToRead,selections.toArray(new Selection[0])) @AT@ 6411 @LENGTH@ 9
---------------------INS MethodInvocation@@builder.construct(typeToRead,selections.toArray(new Selection[0])) @TO@ CastExpression@@(Selection)builder.construct(typeToRead,selections.toArray(new Selection[0])) @AT@ 6422 @LENGTH@ 74
------------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.construct(typeToRead,selections.toArray(new Selection[0])) @AT@ 6422 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:construct:[typeToRead, selections.toArray(new Selection[0])] @TO@ MethodInvocation@@builder.construct(typeToRead,selections.toArray(new Selection[0])) @AT@ 6430 @LENGTH@ 66
---------------------------INS SimpleName@@typeToRead @TO@ SimpleName@@MethodName:construct:[typeToRead, selections.toArray(new Selection[0])] @AT@ 6440 @LENGTH@ 10
---------------------------INS MethodInvocation@@selections.toArray(new Selection[0]) @TO@ SimpleName@@MethodName:construct:[typeToRead, selections.toArray(new Selection[0])] @AT@ 6459 @LENGTH@ 36
------------------------------INS SimpleName@@Name:selections @TO@ MethodInvocation@@selections.toArray(new Selection[0]) @AT@ 6459 @LENGTH@ 10
------------------------------INS SimpleName@@MethodName:toArray:[new Selection[0]] @TO@ MethodInvocation@@selections.toArray(new Selection[0]) @AT@ 6470 @LENGTH@ 25
---------------------------------INS ArrayCreation@@new Selection[0] @TO@ SimpleName@@MethodName:toArray:[new Selection[0]] @AT@ 6478 @LENGTH@ 16
------------------------------------INS ArrayType@@Selection[] @TO@ ArrayCreation@@new Selection[0] @AT@ 6482 @LENGTH@ 12
---------------------------------------INS SimpleType@@Selection @TO@ ArrayType@@Selection[] @AT@ 6482 @LENGTH@ 9
------------------------------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new Selection[0] @AT@ 6492 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before.") @TO@ MethodInvocation:LOG.warn("Ignoring opening of subsegment {} as its parent segment {} was already emitted before.",route.getId(),segmentName) @AT@ 19161 @LENGTH@ 164
---UPD MethodInvocation@@LOG.warn("Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before.") @TO@ LOG.warn("Ignoring opening of subsegment {} as its parent segment {} was already emitted before.",route.getId(),segmentName) @AT@ 19161 @LENGTH@ 163
------UPD SimpleName@@MethodName:warn:["Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before."] @TO@ MethodName:warn:["Ignoring opening of subsegment {} as its parent segment {} was already emitted before.", route.getId(), segmentName] @AT@ 19165 @LENGTH@ 159
---------INS StringLiteral@@"Ignoring opening of subsegment {} as its parent segment {} was already emitted before." @TO@ SimpleName@@MethodName:warn:["Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before."] @AT@ 19155 @LENGTH@ 88
---------DEL InfixExpression@@"Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before." @AT@ 19170 @LENGTH@ 153
------------DEL StringLiteral@@"Ignoring opening of subsegment " @AT@ 19170 @LENGTH@ 33
------------DEL Operator@@+ @AT@ 19203 @LENGTH@ 1
------------DEL MethodInvocation@@route.getId() @AT@ 19206 @LENGTH@ 13
------------DEL StringLiteral@@" as its parent segment " @AT@ 19222 @LENGTH@ 25
------------DEL SimpleName@@segmentName @AT@ 19279 @LENGTH@ 11
------------DEL StringLiteral@@" was already emitted before." @AT@ 19293 @LENGTH@ 30
---------INS MethodInvocation@@route.getId() @TO@ SimpleName@@MethodName:warn:["Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before."] @AT@ 19273 @LENGTH@ 13
------------MOV SimpleName@@Name:route @TO@ MethodInvocation@@route.getId() @AT@ 19206 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@route.getId() @AT@ 19212 @LENGTH@ 7
---------INS SimpleName@@segmentName @TO@ SimpleName@@MethodName:warn:["Ignoring opening of subsegment " + route.getId() + " as its parent segment "+ segmentName+ " was already emitted before."] @AT@ 19288 @LENGTH@ 11


UPD VariableDeclarationStatement@@Map<String,Object> convertedParameters=this.boundedParameters.stream().collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))); @TO@ Map<String,Object> convertedParameters=this.boundedParameters.stream().peek(p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value)).collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))); @AT@ 9374 @LENGTH@ 188
---UPD VariableDeclarationFragment@@convertedParameters=this.boundedParameters.stream().collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))) @TO@ convertedParameters=this.boundedParameters.stream().peek(p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value)).collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))) @AT@ 9394 @LENGTH@ 167
------UPD MethodInvocation@@this.boundedParameters.stream().collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))) @TO@ this.boundedParameters.stream().peek(p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value)).collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))) @AT@ 9416 @LENGTH@ 145
---------INS MethodInvocation@@MethodName:peek:[p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value)] @TO@ MethodInvocation@@this.boundedParameters.stream().collect(Collectors.toMap(p -> p.nameOrIndex,p -> parameterConversion.apply(p.value,p.conversionOverride))) @AT@ 9416 @LENGTH@ 108
------------INS LambdaExpression@@p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @TO@ MethodInvocation@@MethodName:peek:[p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value)] @AT@ 9458 @LENGTH@ 65
---------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @AT@ 9458 @LENGTH@ 1
------------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 9458 @LENGTH@ 1
---------------INS MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @TO@ LambdaExpression@@p -> Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @AT@ 9463 @LENGTH@ 60
------------------INS SimpleName@@Name:Neo4jQuerySupport @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @AT@ 9463 @LENGTH@ 17
------------------INS SimpleName@@MethodName:logParameterIfNull:[p.nameOrIndex, p.value] @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(p.nameOrIndex,p.value) @AT@ 9481 @LENGTH@ 42
---------------------INS QualifiedName@@p.nameOrIndex @TO@ SimpleName@@MethodName:logParameterIfNull:[p.nameOrIndex, p.value] @AT@ 9500 @LENGTH@ 13
------------------------INS SimpleName@@p @TO@ QualifiedName@@p.nameOrIndex @AT@ 9500 @LENGTH@ 1
------------------------INS SimpleName@@nameOrIndex @TO@ QualifiedName@@p.nameOrIndex @AT@ 9502 @LENGTH@ 11
---------------------INS QualifiedName@@p.value @TO@ SimpleName@@MethodName:logParameterIfNull:[p.nameOrIndex, p.value] @AT@ 9515 @LENGTH@ 7
------------------------INS SimpleName@@p @TO@ QualifiedName@@p.value @AT@ 9515 @LENGTH@ 1
------------------------INS SimpleName@@value @TO@ QualifiedName@@p.value @AT@ 9517 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ MethodDeclaration@@void, MethodName:beforeEach,  @AT@ 9975 @LENGTH@ 115
---INS MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 9975 @LENGTH@ 114
------INS FieldAccess@@this.mappingContext @TO@ MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 9975 @LENGTH@ 19
---------INS ThisExpression@@this @TO@ FieldAccess@@this.mappingContext @AT@ 9975 @LENGTH@ 4
---------INS SimpleName@@mappingContext @TO@ FieldAccess@@this.mappingContext @AT@ 9980 @LENGTH@ 14
------INS SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @TO@ MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 9995 @LENGTH@ 94
---------INS MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @AT@ 10015 @LENGTH@ 73
------------INS ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 10015 @LENGTH@ 51
---------------INS New@@new @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10015 @LENGTH@ 3
---------------INS SimpleType@@MongoCustomConversions @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10019 @LENGTH@ 22
---------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10042 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10042 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10054 @LENGTH@ 11
------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 10067 @LENGTH@ 21


INS IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @TO@ MethodDeclaration@@private, Object, MethodName:convertIdValues, @Nullable Neo4jPersistentProperty idProperty, Object idValues,  @AT@ 11712 @LENGTH@ 102
---INS MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @TO@ IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @AT@ 11716 @LENGTH@ 71
------INS ParenthesizedExpression@@((Neo4jPersistentEntity<?>)idProperty.getOwner()) @TO@ MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @AT@ 11716 @LENGTH@ 50
---------INS CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @TO@ ParenthesizedExpression@@((Neo4jPersistentEntity<?>)idProperty.getOwner()) @AT@ 11717 @LENGTH@ 48
------------INS ParameterizedType@@Neo4jPersistentEntity<?> @TO@ CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @AT@ 11718 @LENGTH@ 24
---------------INS SimpleType@@Neo4jPersistentEntity @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 11718 @LENGTH@ 21
---------------INS WildcardType@@? @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 11740 @LENGTH@ 1
------------INS MethodInvocation@@idProperty.getOwner() @TO@ CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @AT@ 11744 @LENGTH@ 21
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.getOwner() @AT@ 11744 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getOwner:[] @TO@ MethodInvocation@@idProperty.getOwner() @AT@ 11755 @LENGTH@ 10
------INS SimpleName@@MethodName:isUsingInternalIds:[] @TO@ MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @AT@ 11767 @LENGTH@ 20
---INS Block@@ThenBody:{  return idValues;} @TO@ IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @AT@ 11789 @LENGTH@ 25
------INS ReturnStatement@@SimpleName:idValues @TO@ Block@@ThenBody:{  return idValues;} @AT@ 11794 @LENGTH@ 16
---------INS SimpleName@@idValues @TO@ ReturnStatement@@SimpleName:idValues @AT@ 11801 @LENGTH@ 8


UPD LambdaExpression@@t -> {
  T entityToBeSaved=t.getT1();
  DynamicLabels dynamicLabels=t.getT2();
  @SuppressWarnings("unchecked") Function<T,Map<String,Object>> binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass());
  PropertyFilter includeProperty=TemplateSupport.computeIncludePropertyPredicate(includedProperties,entityMetaData);
  binderFunction=binderFunction.andThen(tree -> {
    @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
    if (!includeProperty.isNotFiltering()) {
      properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
    }
    return tree;
  }
);
  Mono<Entity> idMono=this.neo4jClient.query(() -> renderer.render(cypherGenerator.prepareSaveOf(entityMetaData,dynamicLabels))).bind(entityToBeSaved).with(binderFunction).fetchAs(Entity.class).one().switchIfEmpty(Mono.defer(() -> {
    if (entityMetaData.hasVersionProperty()) {
      return Mono.error(() -> new OptimisticLockingFailureException(OPTIMISTIC_LOCKING_ERROR_MESSAGE));
    }
    return Mono.empty();
  }
));
  PersistentPropertyAccessor<T> propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  return idMono.doOnNext(newOrUpdatedNode -> {
    if (entityMetaData.isUsingInternalIds()) {
      propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
    }
    TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
    finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
  }
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty));
}
 @TO@ t -> {
  T entityToBeSaved=t.getT1();
  DynamicLabels dynamicLabels=t.getT2();
  @SuppressWarnings("unchecked") FilteredBinderFunction<T> binderFunction=TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass()));
  Mono<Entity> idMono=this.neo4jClient.query(() -> renderer.render(cypherGenerator.prepareSaveOf(entityMetaData,dynamicLabels))).bind(entityToBeSaved).with(binderFunction).fetchAs(Entity.class).one().switchIfEmpty(Mono.defer(() -> {
    if (entityMetaData.hasVersionProperty()) {
      return Mono.error(() -> new OptimisticLockingFailureException(OPTIMISTIC_LOCKING_ERROR_MESSAGE));
    }
    return Mono.empty();
  }
));
  PersistentPropertyAccessor<T> propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  return idMono.doOnNext(newOrUpdatedNode -> {
    if (entityMetaData.isUsingInternalIds()) {
      propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
    }
    TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
    finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
  }
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter));
}
 @AT@ 15889 @LENGTH@ 1957
---UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Function<T,Map<String,Object>> binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass()); @TO@ @SuppressWarnings("unchecked") FilteredBinderFunction<T> binderFunction=TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())); @AT@ 15985 @LENGTH@ 182
------UPD ParameterizedType@@Function<T,Map<String,Object>> @TO@ FilteredBinderFunction<T> @AT@ 16021 @LENGTH@ 32
---------UPD SimpleType@@Function @TO@ FilteredBinderFunction @AT@ 16021 @LENGTH@ 8
---------DEL ParameterizedType@@Map<String,Object> @AT@ 16033 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 16033 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 16037 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 16045 @LENGTH@ 6
------UPD VariableDeclarationFragment@@binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass()) @TO@ binderFunction=TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())) @AT@ 16054 @LENGTH@ 112
---------INS MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())) @TO@ VariableDeclarationFragment@@binderFunction=neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass()) @AT@ 16147 @LENGTH@ 184
------------INS SimpleName@@Name:TemplateSupport @TO@ MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())) @AT@ 16147 @LENGTH@ 15
------------INS SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())] @TO@ MethodInvocation@@TemplateSupport.createAndApplyPropertyFilter(includedProperties,entityMetaData,neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())) @AT@ 16163 @LENGTH@ 168
---------------MOV MethodInvocation@@neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass()) @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())] @AT@ 16071 @LENGTH@ 95
---------------INS SimpleName@@includedProperties @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())] @AT@ 16200 @LENGTH@ 18
---------------INS SimpleName@@entityMetaData @TO@ SimpleName@@MethodName:createAndApplyPropertyFilter:[includedProperties, entityMetaData, neo4jMappingContext.getRequiredBinderFunctionFor((Class<T>)entityToBeSaved.getClass())] @AT@ 16220 @LENGTH@ 14
---DEL VariableDeclarationStatement@@PropertyFilter includeProperty=TemplateSupport.computeIncludePropertyPredicate(includedProperties,entityMetaData); @AT@ 16174 @LENGTH@ 117
------DEL SimpleType@@PropertyFilter @AT@ 16174 @LENGTH@ 14
------DEL VariableDeclarationFragment@@includeProperty=TemplateSupport.computeIncludePropertyPredicate(includedProperties,entityMetaData) @AT@ 16189 @LENGTH@ 101
---------DEL SimpleName@@includeProperty @AT@ 16189 @LENGTH@ 15
---------DEL MethodInvocation@@TemplateSupport.computeIncludePropertyPredicate(includedProperties,entityMetaData) @AT@ 16207 @LENGTH@ 83
------------DEL SimpleName@@Name:TemplateSupport @AT@ 16207 @LENGTH@ 15
------------DEL SimpleName@@MethodName:computeIncludePropertyPredicate:[includedProperties, entityMetaData] @AT@ 16223 @LENGTH@ 67
---------------DEL SimpleName@@includedProperties @AT@ 16255 @LENGTH@ 18
---------------DEL SimpleName@@entityMetaData @AT@ 16275 @LENGTH@ 14
---DEL ExpressionStatement@@Assignment:binderFunction=binderFunction.andThen(tree -> {
  @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
  if (!includeProperty.isNotFiltering()) {
    properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
  }
  return tree;
}
) @AT@ 16297 @LENGTH@ 396
------DEL Assignment@@binderFunction=binderFunction.andThen(tree -> {
  @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
  if (!includeProperty.isNotFiltering()) {
    properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
  }
  return tree;
}
) @AT@ 16297 @LENGTH@ 395
---------DEL SimpleName@@binderFunction @AT@ 16297 @LENGTH@ 14
---------DEL Operator@@= @AT@ 16311 @LENGTH@ 1
---------DEL MethodInvocation@@binderFunction.andThen(tree -> {
  @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
  if (!includeProperty.isNotFiltering()) {
    properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
  }
  return tree;
}
) @AT@ 16314 @LENGTH@ 378
------------DEL SimpleName@@Name:binderFunction @AT@ 16314 @LENGTH@ 14
------------DEL SimpleName@@MethodName:andThen:[tree -> {
  @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
  if (!includeProperty.isNotFiltering()) {
    properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
  }
  return tree;
}
] @AT@ 16329 @LENGTH@ 363
---------------DEL LambdaExpression@@tree -> {
  @SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM);
  if (!includeProperty.isNotFiltering()) {
    properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));
  }
  return tree;
}
 @AT@ 16337 @LENGTH@ 354
------------------DEL VariableDeclarationFragment@@tree @AT@ 16337 @LENGTH@ 4
---------------------DEL SimpleName@@tree @AT@ 16337 @LENGTH@ 4
------------------DEL VariableDeclarationStatement@@@SuppressWarnings("unchecked") Map<String,Object> properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM); @AT@ 16353 @LENGTH@ 137
---------------------DEL ParameterizedType@@Map<String,Object> @AT@ 16390 @LENGTH@ 19
------------------------DEL SimpleType@@Map @AT@ 16390 @LENGTH@ 3
------------------------DEL SimpleType@@String @AT@ 16394 @LENGTH@ 6
------------------------DEL SimpleType@@Object @AT@ 16402 @LENGTH@ 6
---------------------DEL VariableDeclarationFragment@@properties=(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM) @AT@ 16410 @LENGTH@ 79
------------------------DEL SimpleName@@properties @AT@ 16410 @LENGTH@ 10
------------------------DEL CastExpression@@(Map<String,Object>)tree.get(Constants.NAME_OF_PROPERTIES_PARAM) @AT@ 16423 @LENGTH@ 66
---------------------------DEL ParameterizedType@@Map<String,Object> @AT@ 16424 @LENGTH@ 19
------------------------------DEL SimpleType@@Map @AT@ 16424 @LENGTH@ 3
------------------------------DEL SimpleType@@String @AT@ 16428 @LENGTH@ 6
------------------------------DEL SimpleType@@Object @AT@ 16436 @LENGTH@ 6
---------------------------DEL MethodInvocation@@tree.get(Constants.NAME_OF_PROPERTIES_PARAM) @AT@ 16445 @LENGTH@ 44
------------------------------DEL SimpleName@@Name:tree @AT@ 16445 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:get:[Constants.NAME_OF_PROPERTIES_PARAM] @AT@ 16450 @LENGTH@ 39
---------------------------------DEL QualifiedName@@Constants.NAME_OF_PROPERTIES_PARAM @AT@ 16454 @LENGTH@ 34
------------------------------------DEL SimpleName@@Constants @AT@ 16454 @LENGTH@ 9
------------------------------------DEL SimpleName@@NAME_OF_PROPERTIES_PARAM @AT@ 16464 @LENGTH@ 24
------------------DEL IfStatement@@if (!includeProperty.isNotFiltering()) {  properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));} @AT@ 16497 @LENGTH@ 168
---------------------DEL PrefixExpression@@!includeProperty.isNotFiltering() @AT@ 16501 @LENGTH@ 33
------------------------DEL Operator@@! @AT@ 16501 @LENGTH@ 1
------------------------DEL MethodInvocation@@includeProperty.isNotFiltering() @AT@ 16502 @LENGTH@ 32
---------------------------DEL SimpleName@@Name:includeProperty @AT@ 16502 @LENGTH@ 15
---------------------------DEL SimpleName@@MethodName:isNotFiltering:[] @AT@ 16518 @LENGTH@ 16
---------------------DEL Block@@ThenBody:{  properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()));} @AT@ 16536 @LENGTH@ 129
------------------------DEL ExpressionStatement@@MethodInvocation:properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass())) @AT@ 16545 @LENGTH@ 112
---------------------------DEL MethodInvocation@@properties.entrySet().removeIf(e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass())) @AT@ 16545 @LENGTH@ 111
------------------------------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 16545 @LENGTH@ 21
------------------------------DEL SimpleName@@Name:properties @AT@ 16545 @LENGTH@ 10
------------------------------DEL SimpleName@@MethodName:removeIf:[e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass())] @AT@ 16567 @LENGTH@ 89
---------------------------------DEL LambdaExpression@@e -> !includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()) @AT@ 16576 @LENGTH@ 79
------------------------------------DEL VariableDeclarationFragment@@e @AT@ 16576 @LENGTH@ 1
---------------------------------------DEL SimpleName@@e @AT@ 16576 @LENGTH@ 1
------------------------------------DEL PrefixExpression@@!includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()) @AT@ 16581 @LENGTH@ 74
---------------------------------------DEL Operator@@! @AT@ 16581 @LENGTH@ 1
---------------------------------------DEL MethodInvocation@@includeProperty.contains(e.getKey(),entityMetaData.getUnderlyingClass()) @AT@ 16582 @LENGTH@ 73
------------------------------------------DEL SimpleName@@Name:includeProperty @AT@ 16582 @LENGTH@ 15
------------------------------------------DEL SimpleName@@MethodName:contains:[e.getKey(), entityMetaData.getUnderlyingClass()] @AT@ 16598 @LENGTH@ 57
---------------------------------------------DEL MethodInvocation@@e.getKey() @AT@ 16607 @LENGTH@ 10
------------------------------------------------DEL SimpleName@@Name:e @AT@ 16607 @LENGTH@ 1
------------------------------------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 16609 @LENGTH@ 8
---------------------------------------------DEL MethodInvocation@@entityMetaData.getUnderlyingClass() @AT@ 16619 @LENGTH@ 35
------------------------------------------------DEL SimpleName@@Name:entityMetaData @AT@ 16619 @LENGTH@ 14
------------------------------------------------DEL SimpleName@@MethodName:getUnderlyingClass:[] @AT@ 16634 @LENGTH@ 20
------------------DEL ReturnStatement@@SimpleName:tree @AT@ 16672 @LENGTH@ 12
---------------------DEL SimpleName@@tree @AT@ 16679 @LENGTH@ 4
---UPD ReturnStatement@@MethodInvocation:idMono.doOnNext(newOrUpdatedNode -> {
  if (entityMetaData.isUsingInternalIds()) {
    propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
  }
  TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
  finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
}
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty)) @TO@ MethodInvocation:idMono.doOnNext(newOrUpdatedNode -> {
  if (entityMetaData.isUsingInternalIds()) {
    propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
  }
  TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
  finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
}
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter)) @AT@ 17296 @LENGTH@ 544
------UPD MethodInvocation@@idMono.doOnNext(newOrUpdatedNode -> {
  if (entityMetaData.isUsingInternalIds()) {
    propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
  }
  TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
  finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
}
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty)) @TO@ idMono.doOnNext(newOrUpdatedNode -> {
  if (entityMetaData.isUsingInternalIds()) {
    propertyAccessor.setProperty(entityMetaData.getRequiredIdProperty(),newOrUpdatedNode.id());
  }
  TemplateSupport.updateVersionPropertyIfPossible(entityMetaData,propertyAccessor,newOrUpdatedNode);
  finalStateMachine.markValueAsProcessed(instance,newOrUpdatedNode.id());
}
).map(Entity::id).flatMap(internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter)) @AT@ 17303 @LENGTH@ 536
---------UPD SimpleName@@MethodName:flatMap:[internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty)] @TO@ MethodName:flatMap:[internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter)] @AT@ 17716 @LENGTH@ 123
------------UPD LambdaExpression@@internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty) @TO@ internalId -> processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter) @AT@ 17724 @LENGTH@ 114
---------------UPD MethodInvocation@@processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,includeProperty) @TO@ processRelations(entityMetaData,propertyAccessor,isNewEntity,finalStateMachine,binderFunction.filter) @AT@ 17738 @LENGTH@ 100
------------------UPD SimpleName@@MethodName:processRelations:[entityMetaData, propertyAccessor, isNewEntity, finalStateMachine, includeProperty] @TO@ MethodName:processRelations:[entityMetaData, propertyAccessor, isNewEntity, finalStateMachine, binderFunction.filter] @AT@ 17738 @LENGTH@ 100
---------------------INS QualifiedName@@binderFunction.filter @TO@ SimpleName@@MethodName:processRelations:[entityMetaData, propertyAccessor, isNewEntity, finalStateMachine, includeProperty] @AT@ 17461 @LENGTH@ 21
------------------------INS SimpleName@@binderFunction @TO@ QualifiedName@@binderFunction.filter @AT@ 17461 @LENGTH@ 14
------------------------INS SimpleName@@filter @TO@ QualifiedName@@binderFunction.filter @AT@ 17476 @LENGTH@ 6
---------------------DEL SimpleName@@includeProperty @AT@ 17822 @LENGTH@ 15


INS MethodDeclaration@@boolean, MethodName:next,  @TO@ TypeDeclaration@@[public]Budget,  @AT@ 1599 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:next,  @AT@ 1591 @LENGTH@ 7
---INS SimpleName@@MethodName:next @TO@ MethodDeclaration@@boolean, MethodName:next,  @AT@ 1599 @LENGTH@ 4


UPD TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.1"), public]ReactiveFluentNeo4jOperations, [ReactiveFluentFindOperation] @TO@ [@API(status=API.Status.STABLE,since="6.1"), public]ReactiveFluentNeo4jOperations, [ReactiveFluentFindOperation, ReactiveFluentSaveOperation] @AT@ 969 @LENGTH@ 134
---INS SimpleType@@ReactiveFluentSaveOperation @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.1"), public]ReactiveFluentNeo4jOperations, [ReactiveFluentFindOperation] @AT@ 1101 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:setBeanName, String name,  @TO@ public, synchronized, void, MethodName:setBeanName, String name,  @AT@ 3132 @LENGTH@ 65
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:setBeanName, String name,  @AT@ 3139 @LENGTH@ 12


UPD TypeDeclaration@@[private]DBCursorFilenameReader, Reader @TO@ [private, static]DBCursorFilenameReader, Reader @AT@ 6387 @LENGTH@ 1288
---INS Modifier@@static @TO@ TypeDeclaration@@[private]DBCursorFilenameReader, Reader @AT@ 6395 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenClaimFailsTheTestThenReturnsFailure,  @AT@ 2002 @LENGTH@ 110
---INS MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2002 @LENGTH@ 109
------INS MethodInvocation@@MethodName:assertThat:[details] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2002 @LENGTH@ 19
---------INS SimpleName@@details @TO@ MethodInvocation@@MethodName:assertThat:[details] @AT@ 2013 @LENGTH@ 7
------INS SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2022 @LENGTH@ 89
---------INS LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @AT@ 2031 @LENGTH@ 79
------------INS VariableDeclarationFragment@@error @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2032 @LENGTH@ 5
---------------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error @AT@ 2032 @LENGTH@ 5
------------INS MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2042 @LENGTH@ 68
---------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2042 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2050 @LENGTH@ 60
------------------INS MethodInvocation@@error.getErrorCode() @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 2057 @LENGTH@ 20
---------------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2057 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2063 @LENGTH@ 14
------------------INS QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 2079 @LENGTH@ 30
---------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 2079 @LENGTH@ 16
---------------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 2096 @LENGTH@ 13


DEL MethodDeclaration@@private, static, void, MethodName:safeClose, Closeable c,  @AT@ 25087 @LENGTH@ 173
---DEL Modifier@@private @AT@ 25087 @LENGTH@ 7
---DEL Modifier@@static @AT@ 25095 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 25102 @LENGTH@ 4
---DEL SimpleName@@MethodName:safeClose @AT@ 25107 @LENGTH@ 9
---DEL SingleVariableDeclaration@@Closeable c @AT@ 25117 @LENGTH@ 11
------DEL SimpleType@@Closeable @AT@ 25117 @LENGTH@ 9
------DEL SimpleName@@c @AT@ 25127 @LENGTH@ 1
---DEL IfStatement@@if (c != null) {  try {    c.close();  } catch (  Throwable ignored) {  }} @AT@ 25140 @LENGTH@ 114
------DEL InfixExpression@@c != null @AT@ 25144 @LENGTH@ 9
---------DEL SimpleName@@c @AT@ 25144 @LENGTH@ 1
---------DEL Operator@@!= @AT@ 25145 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 25149 @LENGTH@ 4
------DEL Block@@ThenBody:{  try {    c.close();  } catch (  Throwable ignored) {  }} @AT@ 25155 @LENGTH@ 99
---------DEL TryStatement@@try {  c.close();} catch (Throwable ignored) {} @AT@ 25169 @LENGTH@ 75
------------DEL ExpressionStatement@@MethodInvocation:c.close() @AT@ 25191 @LENGTH@ 10
---------------DEL MethodInvocation@@c.close() @AT@ 25191 @LENGTH@ 9
------------------DEL SimpleName@@Name:c @AT@ 25191 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:close:[] @AT@ 25193 @LENGTH@ 7
------------DEL CatchClause@@catch (Throwable ignored) {} @AT@ 25216 @LENGTH@ 28
---------------DEL SingleVariableDeclaration@@Throwable ignored @AT@ 25223 @LENGTH@ 17
------------------DEL SimpleType@@Throwable @AT@ 25223 @LENGTH@ 9
------------------DEL SimpleName@@ignored @AT@ 25233 @LENGTH@ 7


UPD IfStatement@@if (callback != null && callback.getCredential() != null) credential=callback.getCredential().castAs(SSHCredential.class); @TO@ if (callback != null && callback.getCredential() != null) {  credential=callback.getCredential().castAs(SSHCredential.class);  char[] password=credential.getPassphrase().castAndApply(PasswordCredential.class,c -> c.getPassword().castAndApply(ClearPassword.class,ClearPassword::getPassword));  ((CredentialItem.Password)i).setValue(password);} @AT@ 7469 @LENGTH@ 124
---UPD Block@@ThenBody:credential=callback.getCredential().castAs(SSHCredential.class); @TO@ ThenBody:{  credential=callback.getCredential().castAs(SSHCredential.class);  char[] password=credential.getPassphrase().castAndApply(PasswordCredential.class,c -> c.getPassword().castAndApply(ClearPassword.class,ClearPassword::getPassword));  ((CredentialItem.Password)i).setValue(password);} @AT@ 7527 @LENGTH@ 66
------MOV VariableDeclarationStatement@@char[] password=credential.getPassphrase().castAndApply(PasswordCredential.class,c -> c.getPassword().castAndApply(ClearPassword.class,ClearPassword::getPassword)); @TO@ Block@@ThenBody:credential=callback.getCredential().castAs(SSHCredential.class); @AT@ 7621 @LENGTH@ 168
------MOV ExpressionStatement@@MethodInvocation:((CredentialItem.Password)i).setValue(password) @TO@ Block@@ThenBody:credential=callback.getCredential().castAs(SSHCredential.class); @AT@ 7817 @LENGTH@ 49


INS MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @TO@ TypeDeclaration@@[@Mojo(name="package",requiresDependencyResolution=ResolutionScope.COMPILE_PLUS_RUNTIME,defaultPhase=LifecyclePhase.PACKAGE), public]PackageServerMojo, AbstractProvisionServerMojo @AT@ 6883 @LENGTH@ 285
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6883 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6890 @LENGTH@ 4
---INS SimpleName@@MethodName:execute @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6895 @LENGTH@ 7
---INS SimpleType@@MojoExecutionException @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6912 @LENGTH@ 22
---INS SimpleType@@MojoFailureException @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6936 @LENGTH@ 20
---INS IfStatement@@if (skip) {  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 6967 @LENGTH@ 170
------INS SimpleName@@skip @TO@ IfStatement@@if (skip) {  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @AT@ 6971 @LENGTH@ 4
------INS Block@@ThenBody:{  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @TO@ IfStatement@@if (skip) {  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @AT@ 6977 @LENGTH@ 160
---------INS ExpressionStatement@@MethodInvocation:getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())) @TO@ Block@@ThenBody:{  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @AT@ 6991 @LENGTH@ 116
------------INS MethodInvocation@@getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())) @TO@ ExpressionStatement@@MethodInvocation:getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())) @AT@ 6991 @LENGTH@ 115
---------------INS MethodInvocation@@MethodName:getLog:[] @TO@ MethodInvocation@@getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())) @AT@ 6991 @LENGTH@ 8
---------------INS SimpleName@@MethodName:debug:[String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())] @TO@ MethodInvocation@@getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())) @AT@ 7000 @LENGTH@ 106
------------------INS MethodInvocation@@String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()) @TO@ SimpleName@@MethodName:debug:[String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId())] @AT@ 7006 @LENGTH@ 99
---------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()) @AT@ 7006 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:format:["Skipping " + getGoal() + " of %s:%s", project.getGroupId(), project.getArtifactId()] @TO@ MethodInvocation@@String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()) @AT@ 7013 @LENGTH@ 92
------------------------INS InfixExpression@@"Skipping " + getGoal() + " of %s:%s" @TO@ SimpleName@@MethodName:format:["Skipping " + getGoal() + " of %s:%s", project.getGroupId(), project.getArtifactId()] @AT@ 7020 @LENGTH@ 37
---------------------------INS StringLiteral@@"Skipping " @TO@ InfixExpression@@"Skipping " + getGoal() + " of %s:%s" @AT@ 7020 @LENGTH@ 11
---------------------------INS Operator@@+ @TO@ InfixExpression@@"Skipping " + getGoal() + " of %s:%s" @AT@ 7031 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:getGoal:[] @TO@ InfixExpression@@"Skipping " + getGoal() + " of %s:%s" @AT@ 7034 @LENGTH@ 9
---------------------------INS StringLiteral@@" of %s:%s" @TO@ InfixExpression@@"Skipping " + getGoal() + " of %s:%s" @AT@ 7046 @LENGTH@ 11
------------------------INS MethodInvocation@@project.getGroupId() @TO@ SimpleName@@MethodName:format:["Skipping " + getGoal() + " of %s:%s", project.getGroupId(), project.getArtifactId()] @AT@ 7059 @LENGTH@ 20
---------------------------INS SimpleName@@Name:project @TO@ MethodInvocation@@project.getGroupId() @AT@ 7059 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getGroupId:[] @TO@ MethodInvocation@@project.getGroupId() @AT@ 7067 @LENGTH@ 12
------------------------INS MethodInvocation@@project.getArtifactId() @TO@ SimpleName@@MethodName:format:["Skipping " + getGoal() + " of %s:%s", project.getGroupId(), project.getArtifactId()] @AT@ 7081 @LENGTH@ 23
---------------------------INS SimpleName@@Name:project @TO@ MethodInvocation@@project.getArtifactId() @AT@ 7081 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:getArtifactId:[] @TO@ MethodInvocation@@project.getArtifactId() @AT@ 7089 @LENGTH@ 15
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  getLog().debug(String.format("Skipping " + getGoal() + " of %s:%s",project.getGroupId(),project.getArtifactId()));  return;} @AT@ 7120 @LENGTH@ 7
---INS ExpressionStatement@@SuperMethodInvocation:super.execute() @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 7146 @LENGTH@ 16
------INS SuperMethodInvocation@@super.execute() @TO@ ExpressionStatement@@SuperMethodInvocation:super.execute() @AT@ 7146 @LENGTH@ 15
---------INS SimpleName@@MethodName:execute:[] @TO@ SuperMethodInvocation@@super.execute() @AT@ 7152 @LENGTH@ 7


UPD IfStatement@@if (usesDefaultLookup(property)) {  return () -> persistentEntity.getIdentifierAccessor(value).getIdentifier();} @TO@ if (usesDefaultLookup(property)) {  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @AT@ 3703 @LENGTH@ 117
---INS Block@@ThenBody:{  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @TO@ IfStatement@@if (usesDefaultLookup(property)) {  return () -> persistentEntity.getIdentifierAccessor(value).getIdentifier();} @AT@ 3736 @LENGTH@ 405
------INS VariableDeclarationStatement@@MongoPersistentProperty idProperty=persistentEntity.getIdProperty(); @TO@ Block@@ThenBody:{  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @AT@ 3742 @LENGTH@ 70
---------INS SimpleType@@MongoPersistentProperty @TO@ VariableDeclarationStatement@@MongoPersistentProperty idProperty=persistentEntity.getIdProperty(); @AT@ 3742 @LENGTH@ 23
---------INS VariableDeclarationFragment@@idProperty=persistentEntity.getIdProperty() @TO@ VariableDeclarationStatement@@MongoPersistentProperty idProperty=persistentEntity.getIdProperty(); @AT@ 3766 @LENGTH@ 45
------------INS SimpleName@@idProperty @TO@ VariableDeclarationFragment@@idProperty=persistentEntity.getIdProperty() @AT@ 3766 @LENGTH@ 10
------------INS MethodInvocation@@persistentEntity.getIdProperty() @TO@ VariableDeclarationFragment@@idProperty=persistentEntity.getIdProperty() @AT@ 3779 @LENGTH@ 32
---------------INS SimpleName@@Name:persistentEntity @TO@ MethodInvocation@@persistentEntity.getIdProperty() @AT@ 3779 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@persistentEntity.getIdProperty() @AT@ 3796 @LENGTH@ 15
------INS VariableDeclarationStatement@@Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier(); @TO@ Block@@ThenBody:{  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @AT@ 3816 @LENGTH@ 79
---------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier(); @AT@ 3816 @LENGTH@ 6
---------INS VariableDeclarationFragment@@idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier() @TO@ VariableDeclarationStatement@@Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier(); @AT@ 3823 @LENGTH@ 71
------------MOV MethodInvocation@@persistentEntity.getIdentifierAccessor(value).getIdentifier() @TO@ VariableDeclarationFragment@@idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier() @AT@ 3754 @LENGTH@ 61
------------INS SimpleName@@idValue @TO@ VariableDeclarationFragment@@idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier() @AT@ 3823 @LENGTH@ 7
------INS IfStatement@@if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {  return () -> conversionService.convert(idValue,idProperty.getFieldType());} @TO@ Block@@ThenBody:{  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @AT@ 3900 @LENGTH@ 211
---------MOV Block@@ThenBody:{  return () -> persistentEntity.getIdentifierAccessor(value).getIdentifier();} @TO@ IfStatement@@if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {  return () -> conversionService.convert(idValue,idProperty.getFieldType());} @AT@ 3736 @LENGTH@ 84
------------UPD ReturnStatement@@LambdaExpression:() -> persistentEntity.getIdentifierAccessor(value).getIdentifier() @TO@ LambdaExpression:() -> conversionService.convert(idValue,idProperty.getFieldType()) @AT@ 3741 @LENGTH@ 75
---------------UPD LambdaExpression@@() -> persistentEntity.getIdentifierAccessor(value).getIdentifier() @TO@ () -> conversionService.convert(idValue,idProperty.getFieldType()) @AT@ 3748 @LENGTH@ 67
------------------INS MethodInvocation@@conversionService.convert(idValue,idProperty.getFieldType()) @TO@ LambdaExpression@@() -> persistentEntity.getIdentifierAccessor(value).getIdentifier() @AT@ 4044 @LENGTH@ 61
---------------------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@conversionService.convert(idValue,idProperty.getFieldType()) @AT@ 4044 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:convert:[idValue, idProperty.getFieldType()] @TO@ MethodInvocation@@conversionService.convert(idValue,idProperty.getFieldType()) @AT@ 4062 @LENGTH@ 43
------------------------INS SimpleName@@idValue @TO@ SimpleName@@MethodName:convert:[idValue, idProperty.getFieldType()] @AT@ 4070 @LENGTH@ 7
------------------------INS MethodInvocation@@idProperty.getFieldType() @TO@ SimpleName@@MethodName:convert:[idValue, idProperty.getFieldType()] @AT@ 4079 @LENGTH@ 25
---------------------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.getFieldType() @AT@ 4079 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:getFieldType:[] @TO@ MethodInvocation@@idProperty.getFieldType() @AT@ 4090 @LENGTH@ 14
---------INS InfixExpression@@idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @TO@ IfStatement@@if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {  return () -> conversionService.convert(idValue,idProperty.getFieldType());} @AT@ 3904 @LENGTH@ 119
------------INS MethodInvocation@@idProperty.hasExplicitWriteTarget() @TO@ InfixExpression@@idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @AT@ 3904 @LENGTH@ 35
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.hasExplicitWriteTarget() @AT@ 3904 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasExplicitWriteTarget:[] @TO@ MethodInvocation@@idProperty.hasExplicitWriteTarget() @AT@ 3915 @LENGTH@ 24
------------INS Operator@@&& @TO@ InfixExpression@@idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @AT@ 3939 @LENGTH@ 2
------------INS MethodInvocation@@conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @TO@ InfixExpression@@idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @AT@ 3948 @LENGTH@ 75
---------------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @AT@ 3948 @LENGTH@ 17
---------------INS SimpleName@@MethodName:canConvert:[idValue.getClass(), idProperty.getFieldType()] @TO@ MethodInvocation@@conversionService.canConvert(idValue.getClass(),idProperty.getFieldType()) @AT@ 3966 @LENGTH@ 57
------------------INS MethodInvocation@@idValue.getClass() @TO@ SimpleName@@MethodName:canConvert:[idValue.getClass(), idProperty.getFieldType()] @AT@ 3977 @LENGTH@ 18
---------------------INS SimpleName@@Name:idValue @TO@ MethodInvocation@@idValue.getClass() @AT@ 3977 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@idValue.getClass() @AT@ 3985 @LENGTH@ 10
------------------INS MethodInvocation@@idProperty.getFieldType() @TO@ SimpleName@@MethodName:canConvert:[idValue.getClass(), idProperty.getFieldType()] @AT@ 3997 @LENGTH@ 25
---------------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.getFieldType() @AT@ 3997 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getFieldType:[] @TO@ MethodInvocation@@idProperty.getFieldType() @AT@ 4008 @LENGTH@ 14
------INS ReturnStatement@@LambdaExpression:() -> idValue @TO@ Block@@ThenBody:{  MongoPersistentProperty idProperty=persistentEntity.getIdProperty();  Object idValue=persistentEntity.getIdentifierAccessor(value).getIdentifier();  if (idProperty.hasExplicitWriteTarget() && conversionService.canConvert(idValue.getClass(),idProperty.getFieldType())) {    return () -> conversionService.convert(idValue,idProperty.getFieldType());  }  return () -> idValue;} @AT@ 4116 @LENGTH@ 21
---------INS LambdaExpression@@() -> idValue @TO@ ReturnStatement@@LambdaExpression:() -> idValue @AT@ 4123 @LENGTH@ 13
------------INS SimpleName@@idValue @TO@ LambdaExpression@@() -> idValue @AT@ 4129 @LENGTH@ 7
---UPD Block@@ThenBody:{  return () -> persistentEntity.getIdentifierAccessor(value).getIdentifier();} @TO@ ThenBody:{  return () -> conversionService.convert(idValue,idProperty.getFieldType());} @AT@ 3736 @LENGTH@ 84


UPD SwitchStatement@@switch (eventType) {case XMLStreamConstants.START_ELEMENT:  elementDepth++;handleStartElement();break;case XMLStreamConstants.END_ELEMENT:elementDepth--;if (elementDepth >= 0) {handleEndElement();}break;case XMLStreamConstants.PROCESSING_INSTRUCTION:handleProcessingInstruction();break;case XMLStreamConstants.CHARACTERS:case XMLStreamConstants.SPACE:case XMLStreamConstants.CDATA:handleCharacters();break;case XMLStreamConstants.START_DOCUMENT:handleStartDocument();documentStarted=true;break;case XMLStreamConstants.END_DOCUMENT:handleEndDocument();documentEnded=true;break;case XMLStreamConstants.COMMENT:handleComment();break;case XMLStreamConstants.DTD:handleDtd();break;case XMLStreamConstants.ENTITY_REFERENCE:handleEntityReference();break;} @TO@ switch (eventType) {case XMLStreamConstants.START_ELEMENT:  elementDepth++;handleStartElement();break;case XMLStreamConstants.END_ELEMENT:elementDepth--;if (elementDepth >= 0) {handleEndElement();}break;case XMLStreamConstants.PROCESSING_INSTRUCTION:handleProcessingInstruction();break;case XMLStreamConstants.CHARACTERS:case XMLStreamConstants.SPACE:case XMLStreamConstants.CDATA:handleCharacters();break;case XMLStreamConstants.START_DOCUMENT:handleStartDocument();documentStarted=true;break;case XMLStreamConstants.END_DOCUMENT:handleEndDocument();documentEnded=true;break;case XMLStreamConstants.COMMENT:handleComment();break;case XMLStreamConstants.DTD:handleDtd();break;case XMLStreamConstants.ENTITY_REFERENCE:handleEntityReference();break;default :throw new IllegalStateException("unexpected eventType " + eventType);} @AT@ 4046 @LENGTH@ 1122
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (eventType) {case XMLStreamConstants.START_ELEMENT:  elementDepth++;handleStartElement();break;case XMLStreamConstants.END_ELEMENT:elementDepth--;if (elementDepth >= 0) {handleEndElement();}break;case XMLStreamConstants.PROCESSING_INSTRUCTION:handleProcessingInstruction();break;case XMLStreamConstants.CHARACTERS:case XMLStreamConstants.SPACE:case XMLStreamConstants.CDATA:handleCharacters();break;case XMLStreamConstants.START_DOCUMENT:handleStartDocument();documentStarted=true;break;case XMLStreamConstants.END_DOCUMENT:handleEndDocument();documentEnded=true;break;case XMLStreamConstants.COMMENT:handleComment();break;case XMLStreamConstants.DTD:handleDtd();break;case XMLStreamConstants.ENTITY_REFERENCE:handleEntityReference();break;} @AT@ 5165 @LENGTH@ 8
---INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("unexpected eventType " + eventType) @TO@ SwitchStatement@@switch (eventType) {case XMLStreamConstants.START_ELEMENT:  elementDepth++;handleStartElement();break;case XMLStreamConstants.END_ELEMENT:elementDepth--;if (elementDepth >= 0) {handleEndElement();}break;case XMLStreamConstants.PROCESSING_INSTRUCTION:handleProcessingInstruction();break;case XMLStreamConstants.CHARACTERS:case XMLStreamConstants.SPACE:case XMLStreamConstants.CDATA:handleCharacters();break;case XMLStreamConstants.START_DOCUMENT:handleStartDocument();documentStarted=true;break;case XMLStreamConstants.END_DOCUMENT:handleEndDocument();documentEnded=true;break;case XMLStreamConstants.COMMENT:handleComment();break;case XMLStreamConstants.DTD:handleDtd();break;case XMLStreamConstants.ENTITY_REFERENCE:handleEntityReference();break;} @AT@ 5184 @LENGTH@ 69
------INS ClassInstanceCreation@@IllegalStateException["unexpected eventType " + eventType] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("unexpected eventType " + eventType) @AT@ 5190 @LENGTH@ 62
---------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["unexpected eventType " + eventType] @AT@ 5190 @LENGTH@ 3
---------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["unexpected eventType " + eventType] @AT@ 5194 @LENGTH@ 21
---------INS InfixExpression@@"unexpected eventType " + eventType @TO@ ClassInstanceCreation@@IllegalStateException["unexpected eventType " + eventType] @AT@ 5216 @LENGTH@ 35
------------INS StringLiteral@@"unexpected eventType " @TO@ InfixExpression@@"unexpected eventType " + eventType @AT@ 5216 @LENGTH@ 23
------------INS Operator@@+ @TO@ InfixExpression@@"unexpected eventType " + eventType @AT@ 5239 @LENGTH@ 1
------------INS SimpleName@@eventType @TO@ InfixExpression@@"unexpected eventType " + eventType @AT@ 5242 @LENGTH@ 9


UPD Block@@ThenBody:{  if (deadLetterExchange != null) {    ExchangeBuilder eb=new ExchangeBuilder(deadLetterExchange,deadLetterExchangeType);    eb.withArguments(getDlqExchangeArgs());    final org.springframework.amqp.core.Exchange rabbitExchange=eb.build();    admin.declareExchange(rabbitExchange);    if (deadLetterQueue != null) {      QueueBuilder qb=QueueBuilder.durable(deadLetterQueue);      Map<String,Object> args=getDlqQueueArgs();      qb.withArguments(args);      final Queue rabbitQueue=qb.build();      admin.declareQueue(rabbitQueue);      Binding binding=new Binding(rabbitQueue.getName(),Binding.DestinationType.QUEUE,rabbitExchange.getName(),deadLetterRoutingKey,getDlqBindingArgs());      admin.declareBinding(binding);      LOG.info("Auto-declaring durable DeadLetterExchange: {} routingKey: {}",deadLetterExchange,deadLetterRoutingKey);    }  }  Map<String,Object> map=getExchangeArgs();  boolean durable=parseArgsBoolean(map,"durable","true");  boolean autoDelete=parseArgsBoolean(map,"autoDelete","false");  if (!durable || autoDelete) {    LOG.info("Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection.");  }  String en=SpringRabbitMQHelper.isDefaultExchange(getExchangeName()) ? "" : getExchangeName();  ExchangeBuilder eb=new ExchangeBuilder(en,getExchangeType());  eb.durable(durable);  if (autoDelete) {    eb.autoDelete();  }  eb.withArguments(map);  final org.springframework.amqp.core.Exchange rabbitExchange=eb.build();  admin.declareExchange(rabbitExchange);  String queuesToDeclare=queues;  String autoDeleteDefault="false";  boolean generateUniqueQueue=false;  if (queuesToDeclare == null) {    queuesToDeclare=" ";    generateUniqueQueue=true;  }  for (  String queue : queuesToDeclare.split(",")) {    queue=queue.trim();    map=getQueueArgs();    prepareDeadLetterQueueArgs(map);    durable=parseArgsBoolean(map,"durable","false");    autoDelete=parseArgsBoolean(map,"autoDelete",autoDeleteDefault);    boolean exclusive=parseArgsBoolean(map,"exclusive","false");    QueueBuilder qb;    if (queue.isEmpty()) {      qb=durable ? QueueBuilder.durable() : QueueBuilder.nonDurable();    } else {      qb=durable ? QueueBuilder.durable(queue) : QueueBuilder.nonDurable(queue);    }    if (autoDelete) {      qb.autoDelete();    }    if (exclusive) {      qb.exclusive();    }    String dle=parseArgsString(args,"x-dead-letter-exchange",deadLetterExchange);    if (dle != null) {      qb.deadLetterExchange(dle);    }    String dlrk=parseArgsString(args,"x-dead-letter-routing-key",deadLetterRoutingKey);    if (dlrk != null) {      qb.deadLetterRoutingKey(dlrk);    }    qb.withArguments(map);    final Queue rabbitQueue=qb.build();    if (!durable || autoDelete || exclusive) {      LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.");    }    String qn=admin.declareQueue(rabbitQueue);    if (generateUniqueQueue) {      container.setQueueNames(qn);    }    Binding binding=new Binding(qn,Binding.DestinationType.QUEUE,rabbitExchange.getName(),routingKey,getBindingArgs());    admin.declareBinding(binding);  }} @TO@ ThenBody:{  if (deadLetterExchange != null) {    ExchangeBuilder eb=new ExchangeBuilder(deadLetterExchange,deadLetterExchangeType);    eb.withArguments(getDlqExchangeArgs());    final org.springframework.amqp.core.Exchange rabbitExchange=eb.build();    admin.declareExchange(rabbitExchange);    if (deadLetterQueue != null) {      QueueBuilder qb=QueueBuilder.durable(deadLetterQueue);      Map<String,Object> args=getDlqQueueArgs();      qb.withArguments(args);      final Queue rabbitQueue=qb.build();      admin.declareQueue(rabbitQueue);      Binding binding=new Binding(rabbitQueue.getName(),Binding.DestinationType.QUEUE,rabbitExchange.getName(),deadLetterRoutingKey,getDlqBindingArgs());      admin.declareBinding(binding);      LOG.info("Auto-declaring durable DeadLetterExchange: {} routingKey: {}",deadLetterExchange,deadLetterRoutingKey);    }  }  Map<String,Object> map=getExchangeArgs();  boolean durable=parseArgsBoolean(map,"durable","true");  boolean autoDelete=parseArgsBoolean(map,"autoDelete","false");  if (!durable || autoDelete) {    LOG.info("Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.",exchangeName,durable,autoDelete);  }  String en=SpringRabbitMQHelper.isDefaultExchange(getExchangeName()) ? "" : getExchangeName();  ExchangeBuilder eb=new ExchangeBuilder(en,getExchangeType());  eb.durable(durable);  if (autoDelete) {    eb.autoDelete();  }  eb.withArguments(map);  final org.springframework.amqp.core.Exchange rabbitExchange=eb.build();  admin.declareExchange(rabbitExchange);  String queuesToDeclare=queues;  String autoDeleteDefault="false";  boolean generateUniqueQueue=false;  if (queuesToDeclare == null) {    queuesToDeclare=" ";    generateUniqueQueue=true;  }  for (  String queue : queuesToDeclare.split(",")) {    queue=queue.trim();    map=getQueueArgs();    prepareDeadLetterQueueArgs(map);    durable=parseArgsBoolean(map,"durable","false");    autoDelete=parseArgsBoolean(map,"autoDelete",autoDeleteDefault);    boolean exclusive=parseArgsBoolean(map,"exclusive","false");    QueueBuilder qb;    if (queue.isEmpty()) {      qb=durable ? QueueBuilder.durable() : QueueBuilder.nonDurable();    } else {      qb=durable ? QueueBuilder.durable(queue) : QueueBuilder.nonDurable(queue);    }    if (autoDelete) {      qb.autoDelete();    }    if (exclusive) {      qb.exclusive();    }    String dle=parseArgsString(args,"x-dead-letter-exchange",deadLetterExchange);    if (dle != null) {      qb.deadLetterExchange(dle);    }    String dlrk=parseArgsString(args,"x-dead-letter-routing-key",deadLetterRoutingKey);    if (dlrk != null) {      qb.deadLetterRoutingKey(dlrk);    }    qb.withArguments(map);    final Queue rabbitQueue=qb.build();    if (!durable || autoDelete || exclusive) {      LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive);    }    String qn=admin.declareQueue(rabbitQueue);    if (generateUniqueQueue) {      container.setQueueNames(qn);    }    Binding binding=new Binding(qn,Binding.DestinationType.QUEUE,rabbitExchange.getName(),routingKey,getBindingArgs());    admin.declareBinding(binding);  }} @AT@ 24387 @LENGTH@ 5461
---UPD IfStatement@@if (!durable || autoDelete) {  LOG.info("Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection.");} @TO@ if (!durable || autoDelete) {  LOG.info("Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.",exchangeName,durable,autoDelete);} @AT@ 25853 @LENGTH@ 429
------UPD Block@@ThenBody:{  LOG.info("Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection.");} @TO@ ThenBody:{  LOG.info("Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.",exchangeName,durable,autoDelete);} @AT@ 25881 @LENGTH@ 401
---------UPD ExpressionStatement@@MethodInvocation:LOG.info("Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection.") @TO@ MethodInvocation:LOG.info("Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.",exchangeName,durable,autoDelete) @AT@ 25899 @LENGTH@ 369
------------UPD MethodInvocation@@LOG.info("Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection.") @TO@ LOG.info("Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.",exchangeName,durable,autoDelete) @AT@ 25899 @LENGTH@ 368
---------------UPD SimpleName@@MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection."] @TO@ MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection.", exchangeName, durable, autoDelete] @AT@ 25903 @LENGTH@ 364
------------------DEL InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection." @AT@ 25908 @LENGTH@ 358
---------------------DEL SimpleName@@exchangeName @AT@ 25992 @LENGTH@ 12
---------------------DEL StringLiteral@@") durable:" @AT@ 26032 @LENGTH@ 12
---------------------DEL SimpleName@@durable @AT@ 26047 @LENGTH@ 7
---------------------DEL StringLiteral@@", auto-delete:" @AT@ 26057 @LENGTH@ 16
---------------------DEL SimpleName@@autoDelete @AT@ 26076 @LENGTH@ 10
---------------------DEL StringLiteral@@". " @AT@ 26089 @LENGTH@ 4
---------------------DEL StringLiteral@@"It will be deleted by the broker if it shuts down, and can be redeclared by closing and " @AT@ 26121 @LENGTH@ 90
---------------------DEL StringLiteral@@"reopening the connection." @AT@ 26239 @LENGTH@ 27
------------------INS InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection." @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection."] @AT@ 25908 @LENGTH@ 261
---------------------MOV StringLiteral@@"Auto-declaring a non-durable or auto-delete Exchange (" @TO@ InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection." @AT@ 25908 @LENGTH@ 56
---------------------MOV Operator@@+ @TO@ InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection." @AT@ 25964 @LENGTH@ 1
---------------------INS StringLiteral@@"It will be deleted by the broker if it shuts down, and can be redeclared by closing and " @TO@ InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection." @AT@ 26024 @LENGTH@ 90
---------------------INS StringLiteral@@"reopening the connection." @TO@ InfixExpression@@"Auto-declaring a non-durable or auto-delete Exchange ({}) durable:{}, auto-delete:{}. " + "It will be deleted by the broker if it shuts down, and can be redeclared by closing and " + "reopening the connection." @AT@ 26142 @LENGTH@ 27
------------------INS SimpleName@@exchangeName @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection."] @AT@ 26195 @LENGTH@ 12
------------------INS SimpleName@@durable @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection."] @AT@ 26209 @LENGTH@ 7
------------------INS SimpleName@@autoDelete @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable or auto-delete Exchange (" + exchangeName + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ". "+ "It will be deleted by the broker if it shuts down, and can be redeclared by closing and "+ "reopening the connection."] @AT@ 26218 @LENGTH@ 10
---UPD EnhancedForStatement@@for (String queue : queuesToDeclare.split(",")) {  queue=queue.trim();  map=getQueueArgs();  prepareDeadLetterQueueArgs(map);  durable=parseArgsBoolean(map,"durable","false");  autoDelete=parseArgsBoolean(map,"autoDelete",autoDeleteDefault);  boolean exclusive=parseArgsBoolean(map,"exclusive","false");  QueueBuilder qb;  if (queue.isEmpty()) {    qb=durable ? QueueBuilder.durable() : QueueBuilder.nonDurable();  } else {    qb=durable ? QueueBuilder.durable(queue) : QueueBuilder.nonDurable(queue);  }  if (autoDelete) {    qb.autoDelete();  }  if (exclusive) {    qb.exclusive();  }  String dle=parseArgsString(args,"x-dead-letter-exchange",deadLetterExchange);  if (dle != null) {    qb.deadLetterExchange(dle);  }  String dlrk=parseArgsString(args,"x-dead-letter-routing-key",deadLetterRoutingKey);  if (dlrk != null) {    qb.deadLetterRoutingKey(dlrk);  }  qb.withArguments(map);  final Queue rabbitQueue=qb.build();  if (!durable || autoDelete || exclusive) {    LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.");  }  String qn=admin.declareQueue(rabbitQueue);  if (generateUniqueQueue) {    container.setQueueNames(qn);  }  Binding binding=new Binding(qn,Binding.DestinationType.QUEUE,rabbitExchange.getName(),routingKey,getBindingArgs());  admin.declareBinding(binding);} @TO@ for (String queue : queuesToDeclare.split(",")) {  queue=queue.trim();  map=getQueueArgs();  prepareDeadLetterQueueArgs(map);  durable=parseArgsBoolean(map,"durable","false");  autoDelete=parseArgsBoolean(map,"autoDelete",autoDeleteDefault);  boolean exclusive=parseArgsBoolean(map,"exclusive","false");  QueueBuilder qb;  if (queue.isEmpty()) {    qb=durable ? QueueBuilder.durable() : QueueBuilder.nonDurable();  } else {    qb=durable ? QueueBuilder.durable(queue) : QueueBuilder.nonDurable(queue);  }  if (autoDelete) {    qb.autoDelete();  }  if (exclusive) {    qb.exclusive();  }  String dle=parseArgsString(args,"x-dead-letter-exchange",deadLetterExchange);  if (dle != null) {    qb.deadLetterExchange(dle);  }  String dlrk=parseArgsString(args,"x-dead-letter-routing-key",deadLetterRoutingKey);  if (dlrk != null) {    qb.deadLetterRoutingKey(dlrk);  }  qb.withArguments(map);  final Queue rabbitQueue=qb.build();  if (!durable || autoDelete || exclusive) {    LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive);  }  String qn=admin.declareQueue(rabbitQueue);  if (generateUniqueQueue) {    container.setQueueNames(qn);  }  Binding binding=new Binding(qn,Binding.DestinationType.QUEUE,rabbitExchange.getName(),routingKey,getBindingArgs());  admin.declareBinding(binding);} @AT@ 27279 @LENGTH@ 2559
------UPD IfStatement@@if (!durable || autoDelete || exclusive) {  LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.");} @TO@ if (!durable || autoDelete || exclusive) {  LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive);} @AT@ 28712 @LENGTH@ 557
---------UPD Block@@ThenBody:{  LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.");} @TO@ ThenBody:{  LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive);} @AT@ 28753 @LENGTH@ 516
------------UPD ExpressionStatement@@MethodInvocation:LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.") @TO@ MethodInvocation:LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive) @AT@ 28775 @LENGTH@ 476
---------------UPD MethodInvocation@@LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost.") @TO@ LOG.info("Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.",rabbitQueue.getName(),durable,autoDelete,exclusive) @AT@ 28775 @LENGTH@ 475
------------------UPD SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @TO@ MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost.", rabbitQueue.getName(), durable, autoDelete, exclusive] @AT@ 28779 @LENGTH@ 471
---------------------INS InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost." @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @AT@ 28746 @LENGTH@ 306
------------------------MOV StringLiteral@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue (" @TO@ InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost." @AT@ 28784 @LENGTH@ 65
------------------------INS StringLiteral@@"durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " @TO@ InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost." @AT@ 28846 @LENGTH@ 90
------------------------MOV Operator@@+ @TO@ InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost." @AT@ 28849 @LENGTH@ 1
------------------------INS StringLiteral@@"is restarted while the connection factory is alive, but all messages will be lost." @TO@ InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue ({})" + "durable:{}, auto-delete:{}, exclusive:{}. It will be redeclared if the broker stops and " + "is restarted while the connection factory is alive, but all messages will be lost." @AT@ 28968 @LENGTH@ 84
---------------------DEL InfixExpression@@"Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost." @AT@ 28784 @LENGTH@ 465
------------------------DEL MethodInvocation@@rabbitQueue.getName() @AT@ 28881 @LENGTH@ 21
------------------------DEL StringLiteral@@") durable:" @AT@ 28934 @LENGTH@ 12
------------------------DEL SimpleName@@durable @AT@ 28949 @LENGTH@ 7
------------------------DEL StringLiteral@@", auto-delete:" @AT@ 28959 @LENGTH@ 16
------------------------DEL SimpleName@@autoDelete @AT@ 28978 @LENGTH@ 10
------------------------DEL StringLiteral@@", exclusive:" @AT@ 28991 @LENGTH@ 14
------------------------DEL SimpleName@@exclusive @AT@ 29037 @LENGTH@ 9
------------------------DEL StringLiteral@@". " @AT@ 29049 @LENGTH@ 4
------------------------DEL StringLiteral@@"It will be redeclared if the broker stops and is restarted while the connection factory is " @AT@ 29085 @LENGTH@ 93
------------------------DEL StringLiteral@@"alive, but all messages will be lost." @AT@ 29210 @LENGTH@ 39
---------------------INS MethodInvocation@@rabbitQueue.getName() @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @AT@ 29082 @LENGTH@ 21
------------------------MOV SimpleName@@Name:rabbitQueue @TO@ MethodInvocation@@rabbitQueue.getName() @AT@ 28881 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@rabbitQueue.getName() @AT@ 28893 @LENGTH@ 9
---------------------INS SimpleName@@durable @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @AT@ 29105 @LENGTH@ 7
---------------------INS SimpleName@@autoDelete @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @AT@ 29114 @LENGTH@ 10
---------------------INS SimpleName@@exclusive @TO@ SimpleName@@MethodName:info:["Auto-declaring a non-durable, auto-delete, or exclusive Queue (" + rabbitQueue.getName() + ") durable:"+ durable+ ", auto-delete:"+ autoDelete+ ", exclusive:"+ exclusive+ ". "+ "It will be redeclared if the broker stops and is restarted while the connection factory is "+ "alive, but all messages will be lost."] @AT@ 29126 @LENGTH@ 9


INS IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @TO@ MethodDeclaration@@private, void, T, MethodName:runTaskWrapper, CountDownLatch latch, Predicate<T> predicate, T payload,  @AT@ 3144 @LENGTH@ 141
---INS PrefixExpression@@!budget.next() @TO@ IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3148 @LENGTH@ 14
------INS Operator@@! @TO@ PrefixExpression@@!budget.next() @AT@ 3148 @LENGTH@ 1
------INS MethodInvocation@@budget.next() @TO@ PrefixExpression@@!budget.next() @AT@ 3149 @LENGTH@ 13
---------INS SimpleName@@Name:budget @TO@ MethodInvocation@@budget.next() @AT@ 3149 @LENGTH@ 6
---------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@budget.next() @AT@ 3156 @LENGTH@ 6
---INS Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @TO@ IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3164 @LENGTH@ 121
------INS ExpressionStatement@@MethodInvocation:LOG.warn("The task {} does not have more budget to continue running",name) @TO@ Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3178 @LENGTH@ 76
---------INS MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3178 @LENGTH@ 75
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3178 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @TO@ MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3182 @LENGTH@ 71
---------------INS StringLiteral@@"The task {} does not have more budget to continue running" @TO@ SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @AT@ 3187 @LENGTH@ 59
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @AT@ 3248 @LENGTH@ 4
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3268 @LENGTH@ 7


UPD IfStatement@@if (ex != null) {  LOG.error("Cannot finalize " + description + " the saga",ex);} else if (!done) {  LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId);} @TO@ if (ex != null) {  LOG.error("Cannot finalize {} the saga",description,ex);} else if (!done) {  LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId);} @AT@ 6548 @LENGTH@ 255
---UPD Block@@ThenBody:{  LOG.error("Cannot finalize " + description + " the saga",ex);} @TO@ ThenBody:{  LOG.error("Cannot finalize {} the saga",description,ex);} @AT@ 6564 @LENGTH@ 94
------UPD ExpressionStatement@@MethodInvocation:LOG.error("Cannot finalize " + description + " the saga",ex) @TO@ MethodInvocation:LOG.error("Cannot finalize {} the saga",description,ex) @AT@ 6582 @LENGTH@ 62
---------UPD MethodInvocation@@LOG.error("Cannot finalize " + description + " the saga",ex) @TO@ LOG.error("Cannot finalize {} the saga",description,ex) @AT@ 6582 @LENGTH@ 61
------------UPD SimpleName@@MethodName:error:["Cannot finalize " + description + " the saga", ex] @TO@ MethodName:error:["Cannot finalize {} the saga", description, ex] @AT@ 6586 @LENGTH@ 57
---------------DEL InfixExpression@@"Cannot finalize " + description + " the saga" @AT@ 6592 @LENGTH@ 46
------------------DEL StringLiteral@@"Cannot finalize " @AT@ 6592 @LENGTH@ 18
------------------DEL Operator@@+ @AT@ 6610 @LENGTH@ 1
------------------DEL SimpleName@@description @AT@ 6613 @LENGTH@ 11
------------------DEL StringLiteral@@" the saga" @AT@ 6627 @LENGTH@ 11
---------------INS StringLiteral@@"Cannot finalize {} the saga" @TO@ SimpleName@@MethodName:error:["Cannot finalize " + description + " the saga", ex] @AT@ 6592 @LENGTH@ 29
---------------INS SimpleName@@description @TO@ SimpleName@@MethodName:error:["Cannot finalize " + description + " the saga", ex] @AT@ 6623 @LENGTH@ 11
---UPD Block@@ElseBody:if (!done) {  LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId);} @TO@ ElseBody:if (!done) {  LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId);} @AT@ 6664 @LENGTH@ 139
------UPD IfStatement@@if (!done) {  LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId);} @TO@ if (!done) {  LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId);} @AT@ 6664 @LENGTH@ 139
---------UPD Block@@ThenBody:{  LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId);} @TO@ ThenBody:{  LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId);} @AT@ 6675 @LENGTH@ 128
------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId) @TO@ MethodInvocation:LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId) @AT@ 6693 @LENGTH@ 96
---------------UPD MethodInvocation@@LOG.warn("Unable to finalize " + description + " for all required steps of the saga "+ sagaId) @TO@ LOG.warn("Unable to finalize {} for all required steps of the saga {}",description,sagaId) @AT@ 6693 @LENGTH@ 95
------------------UPD SimpleName@@MethodName:warn:["Unable to finalize " + description + " for all required steps of the saga "+ sagaId] @TO@ MethodName:warn:["Unable to finalize {} for all required steps of the saga {}", description, sagaId] @AT@ 6697 @LENGTH@ 91
---------------------INS StringLiteral@@"Unable to finalize {} for all required steps of the saga {}" @TO@ SimpleName@@MethodName:warn:["Unable to finalize " + description + " for all required steps of the saga "+ sagaId] @AT@ 6698 @LENGTH@ 61
---------------------DEL InfixExpression@@"Unable to finalize " + description + " for all required steps of the saga "+ sagaId @AT@ 6702 @LENGTH@ 85
------------------------DEL StringLiteral@@"Unable to finalize " @AT@ 6702 @LENGTH@ 21
------------------------DEL Operator@@+ @AT@ 6723 @LENGTH@ 1
------------------------DEL SimpleName@@description @AT@ 6726 @LENGTH@ 11
------------------------DEL StringLiteral@@" for all required steps of the saga " @AT@ 6740 @LENGTH@ 38
------------------------DEL SimpleName@@sagaId @AT@ 6781 @LENGTH@ 6
---------------------INS SimpleName@@description @TO@ SimpleName@@MethodName:warn:["Unable to finalize " + description + " for all required steps of the saga "+ sagaId] @AT@ 6761 @LENGTH@ 11
---------------------INS SimpleName@@sagaId @TO@ SimpleName@@MethodName:warn:["Unable to finalize " + description + " for all required steps of the saga "+ sagaId] @AT@ 6774 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:processAsyncSendsMessageWithException, Exception,  @TO@ public, void, MethodName:processAsyncSendsMessageWithException,  @AT@ 7082 @LENGTH@ 1098
---DEL SimpleType@@Exception @AT@ 7141 @LENGTH@ 9


UPD MethodDeclaration@@protected, PreparedQuery<T>, T, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, Neo4jQueryType queryType, BiFunction<TypeSystem,MapAccessor,?> mappingFunction,  @TO@ protected, PreparedQuery<T>, T, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, Neo4jQueryType queryType, Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction,  @AT@ 2194 @LENGTH@ 842
---UPD SingleVariableDeclaration@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 2382 @LENGTH@ 54
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2382 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 2418 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2418 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2427 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2382 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2393 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2405 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2418 @LENGTH@ 1


INS MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @TO@ TypeDeclaration@@[public]Oidc,  @AT@ 11884 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11884 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11891 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11898 @LENGTH@ 7
---INS SimpleName@@MethodName:isOpaqueToken @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11906 @LENGTH@ 13
---INS SingleVariableDeclaration@@String token @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11920 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String token @AT@ 11920 @LENGTH@ 6
------INS SimpleName@@token @TO@ SingleVariableDeclaration@@String token @AT@ 11927 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:new StringTokenizer(token,".").countTokens() != 3 @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11944 @LENGTH@ 58
------INS InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @TO@ ReturnStatement@@InfixExpression:new StringTokenizer(token,".").countTokens() != 3 @AT@ 11951 @LENGTH@ 50
---------INS MethodInvocation@@new StringTokenizer(token,".").countTokens() @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 11951 @LENGTH@ 45
------------INS ClassInstanceCreation@@StringTokenizer[token, "."] @TO@ MethodInvocation@@new StringTokenizer(token,".").countTokens() @AT@ 11951 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11951 @LENGTH@ 3
---------------INS SimpleType@@StringTokenizer @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11955 @LENGTH@ 15
---------------INS SimpleName@@token @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11971 @LENGTH@ 5
---------------INS StringLiteral@@"." @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11978 @LENGTH@ 3
------------INS SimpleName@@MethodName:countTokens:[] @TO@ MethodInvocation@@new StringTokenizer(token,".").countTokens() @AT@ 11983 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 11996 @LENGTH@ 2
---------INS NumberLiteral@@3 @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 12000 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").to(getFtpUrl()) @AT@ 1688 @LENGTH@ 53
---UPD MethodInvocation@@from("file:src/main/data?noop=true").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").to(getFtpUrl()) @AT@ 1688 @LENGTH@ 52
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 1688 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 1693 @LENGTH@ 30


DEL FieldDeclaration@@private, static, final, Map<String,String>, [QUIET_LOCAL_AUTH=Collections.singletonMap(LocalUserClient.QUIET_AUTH,"true")] @AT@ 2692 @LENGTH@ 121
---DEL Modifier@@private @AT@ 2692 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2700 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2707 @LENGTH@ 5
---DEL ParameterizedType@@Map<String,String> @AT@ 2713 @LENGTH@ 19
------DEL SimpleType@@Map @AT@ 2713 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 2717 @LENGTH@ 6
------DEL SimpleType@@String @AT@ 2725 @LENGTH@ 6
---DEL VariableDeclarationFragment@@QUIET_LOCAL_AUTH=Collections.singletonMap(LocalUserClient.QUIET_AUTH,"true") @AT@ 2733 @LENGTH@ 79
------DEL SimpleName@@QUIET_LOCAL_AUTH @AT@ 2733 @LENGTH@ 16
------DEL MethodInvocation@@Collections.singletonMap(LocalUserClient.QUIET_AUTH,"true") @AT@ 2752 @LENGTH@ 60
---------DEL SimpleName@@Name:Collections @AT@ 2752 @LENGTH@ 11
---------DEL SimpleName@@MethodName:singletonMap:[LocalUserClient.QUIET_AUTH, "true"] @AT@ 2764 @LENGTH@ 48
------------DEL QualifiedName@@LocalUserClient.QUIET_AUTH @AT@ 2777 @LENGTH@ 26
---------------DEL SimpleName@@LocalUserClient @AT@ 2777 @LENGTH@ 15
---------------DEL SimpleName@@QUIET_AUTH @AT@ 2793 @LENGTH@ 10
------------DEL StringLiteral@@"true" @AT@ 2805 @LENGTH@ 6


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 3669 @LENGTH@ 110
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3684 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3709 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 3709 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 3755 @LENGTH@ 1


MOV TypeDeclaration@@[static]QueryParametersPartial,  @TO@ TypeDeclaration@@[final]OpenSamlSigningUtils,  @AT@ 5607 @LENGTH@ 1415


UPD ExpressionStatement@@MethodInvocation:new AvroItemWriterBuilder().resource(output).schema(schemaResource).build() @TO@ MethodInvocation:new AvroItemWriterBuilder<>().resource(output).schema(schemaResource).build() @AT@ 3662 @LENGTH@ 91
---UPD MethodInvocation@@new AvroItemWriterBuilder().resource(output).schema(schemaResource).build() @TO@ new AvroItemWriterBuilder<>().resource(output).schema(schemaResource).build() @AT@ 3662 @LENGTH@ 90
------UPD ClassInstanceCreation@@AvroItemWriterBuilder[] @TO@ AvroItemWriterBuilder<>[] @AT@ 3662 @LENGTH@ 27
---------INS ParameterizedType@@AvroItemWriterBuilder<> @TO@ ClassInstanceCreation@@AvroItemWriterBuilder[] @AT@ 3666 @LENGTH@ 23
------------INS SimpleType@@AvroItemWriterBuilder @TO@ ParameterizedType@@AvroItemWriterBuilder<> @AT@ 3666 @LENGTH@ 21
---------DEL SimpleType@@AvroItemWriterBuilder @AT@ 3666 @LENGTH@ 21


INS MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @TO@ TypeDeclaration@@UnwrapEntityContext,  @AT@ 1269 @LENGTH@ 264
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1269 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1276 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1284 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1291 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 1291 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 1298 @LENGTH@ 3
---INS IfStatement@@if (this == obj) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1307 @LENGTH@ 38
------INS InfixExpression@@this == obj @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 1311 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ InfixExpression@@this == obj @AT@ 1311 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == obj @AT@ 1315 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@this == obj @AT@ 1319 @LENGTH@ 3
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 1324 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1329 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1336 @LENGTH@ 4
---INS IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1349 @LENGTH@ 71
------INS InfixExpression@@obj == null || getClass() != obj.getClass() @TO@ IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @AT@ 1353 @LENGTH@ 43
---------INS InfixExpression@@obj == null @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 1353 @LENGTH@ 11
------------INS SimpleName@@obj @TO@ InfixExpression@@obj == null @AT@ 1353 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@obj == null @AT@ 1356 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@obj == null @AT@ 1360 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 1364 @LENGTH@ 2
---------INS InfixExpression@@getClass() != obj.getClass() @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 1368 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 1368 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 1378 @LENGTH@ 2
------------INS MethodInvocation@@obj.getClass() @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 1382 @LENGTH@ 14
---------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getClass() @AT@ 1382 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@obj.getClass() @AT@ 1386 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @AT@ 1398 @LENGTH@ 22
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1403 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1410 @LENGTH@ 5
---INS VariableDeclarationStatement@@UnwrapEntityContext other=(UnwrapEntityContext)obj; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1424 @LENGTH@ 54
------INS SimpleType@@UnwrapEntityContext @TO@ VariableDeclarationStatement@@UnwrapEntityContext other=(UnwrapEntityContext)obj; @AT@ 1424 @LENGTH@ 19
------INS VariableDeclarationFragment@@other=(UnwrapEntityContext)obj @TO@ VariableDeclarationStatement@@UnwrapEntityContext other=(UnwrapEntityContext)obj; @AT@ 1444 @LENGTH@ 33
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=(UnwrapEntityContext)obj @AT@ 1444 @LENGTH@ 5
---------INS CastExpression@@(UnwrapEntityContext)obj @TO@ VariableDeclarationFragment@@other=(UnwrapEntityContext)obj @AT@ 1452 @LENGTH@ 25
------------INS SimpleType@@UnwrapEntityContext @TO@ CastExpression@@(UnwrapEntityContext)obj @AT@ 1453 @LENGTH@ 19
------------INS SimpleName@@obj @TO@ CastExpression@@(UnwrapEntityContext)obj @AT@ 1474 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:Objects.equals(property,other.property) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 1482 @LENGTH@ 48
------INS MethodInvocation@@Objects.equals(property,other.property) @TO@ ReturnStatement@@MethodInvocation:Objects.equals(property,other.property) @AT@ 1489 @LENGTH@ 40
---------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(property,other.property) @AT@ 1489 @LENGTH@ 7
---------INS SimpleName@@MethodName:equals:[property, other.property] @TO@ MethodInvocation@@Objects.equals(property,other.property) @AT@ 1497 @LENGTH@ 32
------------INS SimpleName@@property @TO@ SimpleName@@MethodName:equals:[property, other.property] @AT@ 1504 @LENGTH@ 8
------------INS QualifiedName@@other.property @TO@ SimpleName@@MethodName:equals:[property, other.property] @AT@ 1514 @LENGTH@ 14
---------------INS SimpleName@@other @TO@ QualifiedName@@other.property @AT@ 1514 @LENGTH@ 5
---------------INS SimpleName@@property @TO@ QualifiedName@@other.property @AT@ 1520 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:authentiateWhenCustomSchedulerThenUsed,  @TO@ public, void, MethodName:authenticateWhenCustomSchedulerThenUsed,  @AT@ 3038 @LENGTH@ 685
---UPD SimpleName@@MethodName:authentiateWhenCustomSchedulerThenUsed @TO@ MethodName:authenticateWhenCustomSchedulerThenUsed @AT@ 3050 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertEquals("The bean factory must be an instance of BeanDefinitionRegistry",expectedException.getMessage()) @TO@ MethodInvocation:assertThat(expectedException.getMessage(),containsString("The bean factory must be an instance of BeanDefinitionRegistry")) @AT@ 2128 @LENGTH@ 111
---UPD MethodInvocation@@assertEquals("The bean factory must be an instance of BeanDefinitionRegistry",expectedException.getMessage()) @TO@ assertThat(expectedException.getMessage(),containsString("The bean factory must be an instance of BeanDefinitionRegistry")) @AT@ 2128 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertEquals:["The bean factory must be an instance of BeanDefinitionRegistry", expectedException.getMessage()] @TO@ MethodName:assertThat:[expectedException.getMessage(), containsString("The bean factory must be an instance of BeanDefinitionRegistry")] @AT@ 2128 @LENGTH@ 110
---------DEL StringLiteral@@"The bean factory must be an instance of BeanDefinitionRegistry" @AT@ 2141 @LENGTH@ 64
---------INS MethodInvocation@@containsString("The bean factory must be an instance of BeanDefinitionRegistry") @TO@ SimpleName@@MethodName:assertEquals:["The bean factory must be an instance of BeanDefinitionRegistry", expectedException.getMessage()] @AT@ 2224 @LENGTH@ 80
------------INS SimpleName@@MethodName:containsString:["The bean factory must be an instance of BeanDefinitionRegistry"] @TO@ MethodInvocation@@containsString("The bean factory must be an instance of BeanDefinitionRegistry") @AT@ 2224 @LENGTH@ 80
---------------INS StringLiteral@@"The bean factory must be an instance of BeanDefinitionRegistry" @TO@ SimpleName@@MethodName:containsString:["The bean factory must be an instance of BeanDefinitionRegistry"] @AT@ 2239 @LENGTH@ 64
------------INS SimpleName@@MethodName:containsString:["The bean factory must be an instance of BeanDefinitionRegistry"] @TO@ MethodInvocation@@containsString("The bean factory must be an instance of BeanDefinitionRegistry") @AT@ 2224 @LENGTH@ 80
---------------INS StringLiteral@@"The bean factory must be an instance of BeanDefinitionRegistry" @TO@ SimpleName@@MethodName:containsString:["The bean factory must be an instance of BeanDefinitionRegistry"] @AT@ 2239 @LENGTH@ 64


UPD ExpressionStatement@@MethodInvocation:TestUtils.sleep(delayMillis * 2) @TO@ MethodInvocation:TestUtils.sleep(delayMillis * 4) @AT@ 28798 @LENGTH@ 33
---UPD MethodInvocation@@TestUtils.sleep(delayMillis * 2) @TO@ TestUtils.sleep(delayMillis * 4) @AT@ 28798 @LENGTH@ 32
------UPD SimpleName@@MethodName:sleep:[delayMillis * 2] @TO@ MethodName:sleep:[delayMillis * 4] @AT@ 28808 @LENGTH@ 22
---------UPD InfixExpression@@delayMillis * 2 @TO@ delayMillis * 4 @AT@ 28814 @LENGTH@ 15
------------UPD NumberLiteral@@2 @TO@ 4 @AT@ 28828 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null)),file) @TO@ MethodInvocation:toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null))) @AT@ 6627 @LENGTH@ 91
---UPD MethodInvocation@@toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null)),file) @TO@ toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null))) @AT@ 6634 @LENGTH@ 83
------UPD SimpleName@@MethodName:toFileVisitResult:[acceptBaseName(Objects.toString(file.getFileName(),null)), file] @TO@ MethodName:toFileVisitResult:[acceptBaseName(Objects.toString(file.getFileName(),null))] @AT@ 6634 @LENGTH@ 83
---------DEL SimpleName@@file @AT@ 6712 @LENGTH@ 4


UPD VariableDeclarationStatement@@String correlationID=getJMSCorrelationIDAsBytes(message); @TO@ String correlationID=getJMSCorrelationID(message); @AT@ 5188 @LENGTH@ 59
---UPD VariableDeclarationFragment@@correlationID=getJMSCorrelationIDAsBytes(message) @TO@ correlationID=getJMSCorrelationID(message) @AT@ 5195 @LENGTH@ 51
------UPD MethodInvocation@@getJMSCorrelationIDAsBytes(message) @TO@ getJMSCorrelationID(message) @AT@ 5211 @LENGTH@ 35
---------UPD SimpleName@@MethodName:getJMSCorrelationIDAsBytes:[message] @TO@ MethodName:getJMSCorrelationID:[message] @AT@ 5211 @LENGTH@ 35


UPD FieldDeclaration@@private, SqlServerConnectorEmbeddedDebeziumConfiguration, [configuration] @TO@ private, SqlServerConnectorEmbeddedDebeziumConfiguration, [configuration=new SqlServerConnectorEmbeddedDebeziumConfiguration()] @AT@ 1258 @LENGTH@ 70
---UPD VariableDeclarationFragment@@configuration @TO@ configuration=new SqlServerConnectorEmbeddedDebeziumConfiguration() @AT@ 1314 @LENGTH@ 13
------INS ClassInstanceCreation@@SqlServerConnectorEmbeddedDebeziumConfiguration[] @TO@ VariableDeclarationFragment@@configuration @AT@ 1342 @LENGTH@ 53
---------INS New@@new @TO@ ClassInstanceCreation@@SqlServerConnectorEmbeddedDebeziumConfiguration[] @AT@ 1342 @LENGTH@ 3
---------INS SimpleType@@SqlServerConnectorEmbeddedDebeziumConfiguration @TO@ ClassInstanceCreation@@SqlServerConnectorEmbeddedDebeziumConfiguration[] @AT@ 1346 @LENGTH@ 47


UPD MethodDeclaration@@public, void, MethodName:testNoResponseDisconnectOnNoReplyFalse, Exception,  @TO@ public, void, MethodName:testNoResponseDisconnectOnNoReplyFalse,  @AT@ 1624 @LENGTH@ 407
---DEL SimpleType@@Exception @AT@ 1684 @LENGTH@ 9
---INS VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception"); @TO@ MethodDeclaration@@public, void, MethodName:testNoResponseDisconnectOnNoReplyFalse, Exception,  @AT@ 1695 @LENGTH@ 227
------INS SimpleType@@RuntimeCamelException @TO@ VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception"); @AT@ 1695 @LENGTH@ 21
------INS VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception") @TO@ VariableDeclarationStatement@@RuntimeCamelException e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception"); @AT@ 1717 @LENGTH@ 204
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception") @AT@ 1717 @LENGTH@ 1
---------INS MethodInvocation@@assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception") @TO@ VariableDeclarationFragment@@e=assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception") @AT@ 1721 @LENGTH@ 200
------------MOV SimpleName@@MethodName:fail:["Should throw an exception"] @TO@ MethodInvocation@@assertThrows(RuntimeCamelException.class,() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London"),"Should throw an exception") @AT@ 1858 @LENGTH@ 33
---------------INS TypeLiteral@@RuntimeCamelException.class @TO@ SimpleName@@MethodName:fail:["Should throw an exception"] @AT@ 1734 @LENGTH@ 27
---------------INS LambdaExpression@@() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London") @TO@ SimpleName@@MethodName:fail:["Should throw an exception"] @AT@ 1779 @LENGTH@ 96
------------------MOV MethodInvocation@@template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London") @TO@ LambdaExpression@@() -> template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London") @AT@ 1722 @LENGTH@ 90
---DEL TryStatement@@try {  template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London");  Thread.sleep(1000);  fail("Should throw an exception");} catch (RuntimeCamelException e) {  assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause());} @AT@ 1704 @LENGTH@ 321
------DEL ExpressionStatement@@MethodInvocation:template.requestBody("mina:tcp://localhost:" + port2 + "?sync=true&timeout=100","London") @AT@ 1722 @LENGTH@ 91
------DEL ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @AT@ 1826 @LENGTH@ 19
---------DEL MethodInvocation@@Thread.sleep(1000) @AT@ 1826 @LENGTH@ 18
------------DEL SimpleName@@Name:Thread @AT@ 1826 @LENGTH@ 6
------------DEL SimpleName@@MethodName:sleep:[1000] @AT@ 1833 @LENGTH@ 11
---------------DEL NumberLiteral@@1000 @AT@ 1839 @LENGTH@ 4
------DEL ExpressionStatement@@MethodInvocation:fail("Should throw an exception") @AT@ 1858 @LENGTH@ 34
---------DEL MethodInvocation@@fail("Should throw an exception") @AT@ 1858 @LENGTH@ 33
------DEL CatchClause@@catch (RuntimeCamelException e) {  assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause());} @AT@ 1903 @LENGTH@ 122
---------DEL SingleVariableDeclaration@@RuntimeCamelException e @AT@ 1910 @LENGTH@ 23
------------DEL SimpleType@@RuntimeCamelException @AT@ 1910 @LENGTH@ 21
------------DEL SimpleName@@e @AT@ 1932 @LENGTH@ 1
---MOV ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ExchangeTimedOutException.class,e.getCause()) @TO@ MethodDeclaration@@public, void, MethodName:testNoResponseDisconnectOnNoReplyFalse, Exception,  @AT@ 1949 @LENGTH@ 66


UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Byte.class)) {  Byte byteValue=(value == null) ? 0 : Byte.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(byte.class).newInstance(byteValue);} else if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Byte.class)) {  Byte byteValue=(value == null) ? 0 : Byte.parseByte(value);  optParam=(OptionalParameter)type.getConstructor(byte.class).newInstance(byteValue);} else if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 4886 @LENGTH@ 980
---UPD Block@@ThenBody:{  Byte byteValue=(value == null) ? 0 : Byte.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(byte.class).newInstance(byteValue);} @TO@ ThenBody:{  Byte byteValue=(value == null) ? 0 : Byte.parseByte(value);  optParam=(OptionalParameter)type.getConstructor(byte.class).newInstance(byteValue);} @AT@ 4946 @LENGTH@ 260
------UPD VariableDeclarationStatement@@Byte byteValue=(value == null) ? 0 : Byte.valueOf(value); @TO@ Byte byteValue=(value == null) ? 0 : Byte.parseByte(value); @AT@ 4968 @LENGTH@ 59
---------UPD VariableDeclarationFragment@@byteValue=(value == null) ? 0 : Byte.valueOf(value) @TO@ byteValue=(value == null) ? 0 : Byte.parseByte(value) @AT@ 4973 @LENGTH@ 53
------------UPD ConditionalExpression@@(value == null) ? 0 : Byte.valueOf(value) @TO@ (value == null) ? 0 : Byte.parseByte(value) @AT@ 4985 @LENGTH@ 41
---------------UPD MethodInvocation@@Byte.valueOf(value) @TO@ Byte.parseByte(value) @AT@ 5007 @LENGTH@ 19
------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseByte:[value] @AT@ 5012 @LENGTH@ 14
---UPD Block@@ElseBody:if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ElseBody:if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5212 @LENGTH@ 654
------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5212 @LENGTH@ 654
---------UPD Block@@ThenBody:{  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} @TO@ ThenBody:{  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} @AT@ 5271 @LENGTH@ 263
------------UPD VariableDeclarationStatement@@Integer intValue=(value == null) ? 0 : Integer.valueOf(value); @TO@ Integer intValue=(value == null) ? 0 : Integer.parseInt(value); @AT@ 5293 @LENGTH@ 64
---------------UPD VariableDeclarationFragment@@intValue=(value == null) ? 0 : Integer.valueOf(value) @TO@ intValue=(value == null) ? 0 : Integer.parseInt(value) @AT@ 5301 @LENGTH@ 55
------------------UPD ConditionalExpression@@(value == null) ? 0 : Integer.valueOf(value) @TO@ (value == null) ? 0 : Integer.parseInt(value) @AT@ 5312 @LENGTH@ 44
---------------------UPD MethodInvocation@@Integer.valueOf(value) @TO@ Integer.parseInt(value) @AT@ 5334 @LENGTH@ 22
------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseInt:[value] @AT@ 5342 @LENGTH@ 14
---------UPD Block@@ElseBody:if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ElseBody:if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Int.class)) {  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} else if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5212 @LENGTH@ 654
---------UPD Block@@ThenBody:{  Integer intValue=(value == null) ? 0 : Integer.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} @TO@ ThenBody:{  Integer intValue=(value == null) ? 0 : Integer.parseInt(value);  optParam=(OptionalParameter)type.getConstructor(int.class).newInstance(intValue);} @AT@ 5271 @LENGTH@ 263
------------UPD VariableDeclarationStatement@@Integer intValue=(value == null) ? 0 : Integer.valueOf(value); @TO@ Integer intValue=(value == null) ? 0 : Integer.parseInt(value); @AT@ 5293 @LENGTH@ 64
---------------UPD VariableDeclarationFragment@@intValue=(value == null) ? 0 : Integer.valueOf(value) @TO@ intValue=(value == null) ? 0 : Integer.parseInt(value) @AT@ 5301 @LENGTH@ 55
------------------UPD ConditionalExpression@@(value == null) ? 0 : Integer.valueOf(value) @TO@ (value == null) ? 0 : Integer.parseInt(value) @AT@ 5312 @LENGTH@ 44
---------------------UPD MethodInvocation@@Integer.valueOf(value) @TO@ Integer.parseInt(value) @AT@ 5334 @LENGTH@ 22
------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseInt:[value] @AT@ 5342 @LENGTH@ 14
---------UPD Block@@ElseBody:if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ElseBody:if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14
------------UPD IfStatement@@if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ if (ancestorClasses.contains(OptionalParameter.Short.class)) {  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5540 @LENGTH@ 326
---------------UPD Block@@ThenBody:{  Short shortValue=(value == null) ? 0 : Short.valueOf(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @TO@ ThenBody:{  Short shortValue=(value == null) ? 0 : Short.parseShort(value);  optParam=(OptionalParameter)type.getConstructor(short.class).newInstance(shortValue);} @AT@ 5601 @LENGTH@ 265
------------------UPD VariableDeclarationStatement@@Short shortValue=(value == null) ? 0 : Short.valueOf(value); @TO@ Short shortValue=(value == null) ? 0 : Short.parseShort(value); @AT@ 5623 @LENGTH@ 62
---------------------UPD VariableDeclarationFragment@@shortValue=(value == null) ? 0 : Short.valueOf(value) @TO@ shortValue=(value == null) ? 0 : Short.parseShort(value) @AT@ 5629 @LENGTH@ 55
------------------------UPD ConditionalExpression@@(value == null) ? 0 : Short.valueOf(value) @TO@ (value == null) ? 0 : Short.parseShort(value) @AT@ 5642 @LENGTH@ 42
---------------------------UPD MethodInvocation@@Short.valueOf(value) @TO@ Short.parseShort(value) @AT@ 5664 @LENGTH@ 20
------------------------------UPD SimpleName@@MethodName:valueOf:[value] @TO@ MethodName:parseShort:[value] @AT@ 5670 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:Assert.notNull(domainClass,"Could not determine common domain class to save.") @TO@ MethodDeclaration@@private, List<T>, T, MethodName:saveAllImpl, Iterable<T> instances, @Nullable List<PropertyDescriptor> includedProperties,  @AT@ 17267 @LENGTH@ 80
---INS MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 17267 @LENGTH@ 79
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 17267 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @TO@ MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 17274 @LENGTH@ 72
---------INS SimpleName@@domainClass @TO@ SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @AT@ 17282 @LENGTH@ 11
---------INS StringLiteral@@"Could not determine common domain class to save." @TO@ SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @AT@ 17295 @LENGTH@ 50


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isReadable(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isReadable(file)) @AT@ 3270 @LENGTH@ 55
---UPD MethodInvocation@@toFileVisitResult(Files.isReadable(file),file) @TO@ toFileVisitResult(Files.isReadable(file)) @AT@ 3277 @LENGTH@ 47
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isReadable(file), file] @TO@ MethodName:toFileVisitResult:[Files.isReadable(file)] @AT@ 3277 @LENGTH@ 47
---------DEL SimpleName@@file @AT@ 3319 @LENGTH@ 4


UPD IfStatement@@if (property.isCollectionLike() && (value instanceof Collection || value == null)) {  if (value == null) {    return new ListDocumentReferenceQuery(codec.decode(lookup,bindingContext(property,source,spELContext)),sort);  }  List<Document> ors=new ArrayList<>();  for (  Object entry : (Collection<Object>)value) {    Document decoded=codec.decode(lookup,bindingContext(property,entry,spELContext));    ors.add(decoded);  }  return new ListDocumentReferenceQuery(new Document("$or",ors),sort);} @TO@ if (property.isCollectionLike() && (value instanceof Collection || value == null)) {  if (value == null) {    return new ListDocumentReferenceQuery(codec.decode(lookup,bindingContext(property,source,spELContext)),sort);  }  List<Document> ors=new ArrayList<>();  for (  Object entry : (Collection<Object>)value) {    Document decoded=codec.decode(lookup,bindingContext(property,entry,spELContext));    ors.add(decoded);  }  if (ors.isEmpty()) {    return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);  }  return new ListDocumentReferenceQuery(new Document("$or",ors),sort);} @AT@ 9606 @LENGTH@ 533
---UPD Block@@ThenBody:{  if (value == null) {    return new ListDocumentReferenceQuery(codec.decode(lookup,bindingContext(property,source,spELContext)),sort);  }  List<Document> ors=new ArrayList<>();  for (  Object entry : (Collection<Object>)value) {    Document decoded=codec.decode(lookup,bindingContext(property,entry,spELContext));    ors.add(decoded);  }  return new ListDocumentReferenceQuery(new Document("$or",ors),sort);} @TO@ ThenBody:{  if (value == null) {    return new ListDocumentReferenceQuery(codec.decode(lookup,bindingContext(property,source,spELContext)),sort);  }  List<Document> ors=new ArrayList<>();  for (  Object entry : (Collection<Object>)value) {    Document decoded=codec.decode(lookup,bindingContext(property,entry,spELContext));    ors.add(decoded);  }  if (ors.isEmpty()) {    return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);  }  return new ListDocumentReferenceQuery(new Document("$or",ors),sort);} @AT@ 9689 @LENGTH@ 450
------INS IfStatement@@if (ors.isEmpty()) {  return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);} @TO@ Block@@ThenBody:{  if (value == null) {    return new ListDocumentReferenceQuery(codec.decode(lookup,bindingContext(property,source,spELContext)),sort);  }  List<Document> ors=new ArrayList<>();  for (  Object entry : (Collection<Object>)value) {    Document decoded=codec.decode(lookup,bindingContext(property,entry,spELContext));    ors.add(decoded);  }  return new ListDocumentReferenceQuery(new Document("$or",ors),sort);} @AT@ 10161 @LENGTH@ 126
---------INS MethodInvocation@@ors.isEmpty() @TO@ IfStatement@@if (ors.isEmpty()) {  return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);} @AT@ 10164 @LENGTH@ 13
------------INS SimpleName@@Name:ors @TO@ MethodInvocation@@ors.isEmpty() @AT@ 10164 @LENGTH@ 3
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@ors.isEmpty() @AT@ 10168 @LENGTH@ 9
---------INS Block@@ThenBody:{  return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);} @TO@ IfStatement@@if (ors.isEmpty()) {  return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);} @AT@ 10179 @LENGTH@ 108
------------INS ReturnStatement@@ClassInstanceCreation:new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort) @TO@ Block@@ThenBody:{  return new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort);} @AT@ 10185 @LENGTH@ 97
---------------INS ClassInstanceCreation@@ListDocumentReferenceQuery[new Document("_id",new Document("$exists",false)), sort] @TO@ ReturnStatement@@ClassInstanceCreation:new ListDocumentReferenceQuery(new Document("_id",new Document("$exists",false)),sort) @AT@ 10192 @LENGTH@ 89
------------------INS New@@new @TO@ ClassInstanceCreation@@ListDocumentReferenceQuery[new Document("_id",new Document("$exists",false)), sort] @AT@ 10192 @LENGTH@ 3
------------------INS SimpleType@@ListDocumentReferenceQuery @TO@ ClassInstanceCreation@@ListDocumentReferenceQuery[new Document("_id",new Document("$exists",false)), sort] @AT@ 10196 @LENGTH@ 26
------------------INS ClassInstanceCreation@@Document["_id", new Document("$exists",false)] @TO@ ClassInstanceCreation@@ListDocumentReferenceQuery[new Document("_id",new Document("$exists",false)), sort] @AT@ 10223 @LENGTH@ 51
---------------------INS New@@new @TO@ ClassInstanceCreation@@Document["_id", new Document("$exists",false)] @AT@ 10223 @LENGTH@ 3
---------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["_id", new Document("$exists",false)] @AT@ 10227 @LENGTH@ 8
---------------------INS StringLiteral@@"_id" @TO@ ClassInstanceCreation@@Document["_id", new Document("$exists",false)] @AT@ 10236 @LENGTH@ 5
---------------------INS ClassInstanceCreation@@Document["$exists", false] @TO@ ClassInstanceCreation@@Document["_id", new Document("$exists",false)] @AT@ 10243 @LENGTH@ 30
------------------------INS New@@new @TO@ ClassInstanceCreation@@Document["$exists", false] @AT@ 10243 @LENGTH@ 3
------------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["$exists", false] @AT@ 10247 @LENGTH@ 8
------------------------INS StringLiteral@@"$exists" @TO@ ClassInstanceCreation@@Document["$exists", false] @AT@ 10256 @LENGTH@ 9
------------------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@Document["$exists", false] @AT@ 10267 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ ClassInstanceCreation@@ListDocumentReferenceQuery[new Document("_id",new Document("$exists",false)), sort] @AT@ 10276 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1793 @LENGTH@ 64
---UPD MethodInvocation@@from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1793 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true&delay=3000"] @TO@ MethodName:from:["file:src/test/data?noop=true&delay=3000"] @AT@ 1793 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/main/data?noop=true&delay=3000" @TO@ "file:src/test/data?noop=true&delay=3000" @AT@ 1798 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:assertNotNull("Unexpected null line",line) @TO@ MethodInvocation:assertNotNull(line,"Unexpected null line") @AT@ 2636 @LENGTH@ 44
---UPD MethodInvocation@@assertNotNull("Unexpected null line",line) @TO@ assertNotNull(line,"Unexpected null line") @AT@ 2636 @LENGTH@ 43
------UPD SimpleName@@MethodName:assertNotNull:["Unexpected null line", line] @TO@ MethodName:assertNotNull:[line, "Unexpected null line"] @AT@ 2636 @LENGTH@ 43
---------INS SimpleName@@line @TO@ SimpleName@@MethodName:assertNotNull:["Unexpected null line", line] @AT@ 2650 @LENGTH@ 4
---------DEL SimpleName@@line @AT@ 2674 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup({JACCAuthzPropagationTestCase.SecurityDomainsSetup.class}), @RunAsClient, @Ignore("See WFLY-4989"), public]JACCAuthzPropagationTestCase,  @TO@ [@RunWith(Arquillian.class), @RunAsClient, @Ignore("See WFLY-4989"), public]JACCAuthzPropagationTestCase,  @AT@ 2788 @LENGTH@ 6357
---DEL SingleMemberAnnotation@@@ServerSetup({JACCAuthzPropagationTestCase.SecurityDomainsSetup.class}) @AT@ 2815 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Caught expected assertion error: {}",e) @TO@ MethodInvocation:LOG.debug("Caught expected assertion error: {}",e.getMessage(),e) @AT@ 8486 @LENGTH@ 52
---UPD MethodInvocation@@LOG.debug("Caught expected assertion error: {}",e) @TO@ LOG.debug("Caught expected assertion error: {}",e.getMessage(),e) @AT@ 8486 @LENGTH@ 51
------UPD SimpleName@@MethodName:debug:["Caught expected assertion error: {}", e] @TO@ MethodName:debug:["Caught expected assertion error: {}", e.getMessage(), e] @AT@ 8490 @LENGTH@ 47
---------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:debug:["Caught expected assertion error: {}", e] @AT@ 8535 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 8535 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 8537 @LENGTH@ 12


UPD Block@@ElseBody:{  if (delegateClass == CompositeProperty.DefaultToMapConverter.class) {    throw new IllegalArgumentException("@" + CompositeProperty.class.getSimpleName() + " can only be used on Map properties without additional configuration. Was "+ generateLocation(persistentProperty));  }  Map<String,Type> typeVariableMap=GenericTypeResolver.getTypeVariableMap(delegateClass).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getName(),Map.Entry::getValue));  Assert.isTrue(typeVariableMap.containsKey(KEY_TYPE_KEY),() -> "SDN could not determine the key type of your toMap converter " + generateLocation(persistentProperty));  Assert.isTrue(typeVariableMap.containsKey(PROPERTY_TYPE_KEY),() -> "SDN could not determine the property type of your toMap converter " + generateLocation(persistentProperty));  if (persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY)) {    throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");  }  componentType=(Class<?>)typeVariableMap.get(KEY_TYPE_KEY);} @TO@ ElseBody:{  if (delegateClass == CompositeProperty.DefaultToMapConverter.class) {    throw new IllegalArgumentException("@" + CompositeProperty.class.getSimpleName() + " can only be used on Map properties without additional configuration. Was "+ generateLocation(persistentProperty));  }  Map<String,Type> typeVariableMap=GenericTypeResolver.getTypeVariableMap(delegateClass).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getName(),Map.Entry::getValue));  Assert.isTrue(typeVariableMap.containsKey(KEY_TYPE_KEY),() -> "SDN could not determine the key type of your toMap converter " + generateLocation(persistentProperty));  Assert.isTrue(typeVariableMap.containsKey(PROPERTY_TYPE_KEY),() -> "SDN could not determine the property type of your toMap converter " + generateLocation(persistentProperty));  Type type=typeVariableMap.get(PROPERTY_TYPE_KEY);  if (persistentProperty.isCollectionLike() && type instanceof ParameterizedType) {    ParameterizedType pt=(ParameterizedType)type;    if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {      type=((ParameterizedType)type).getActualTypeArguments()[0];    }  }  if (persistentProperty.getActualType() != type) {    throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");  }  componentType=(Class<?>)typeVariableMap.get(KEY_TYPE_KEY);} @AT@ 9231 @LENGTH@ 1371
---UPD IfStatement@@if (persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY)) {  throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");} @TO@ if (persistentProperty.getActualType() != type) {  throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");} @AT@ 10168 @LENGTH@ 365
------UPD InfixExpression@@persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY) @TO@ persistentProperty.getActualType() != type @AT@ 10172 @LENGTH@ 76
---------INS SimpleName@@type @TO@ InfixExpression@@persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY) @AT@ 10634 @LENGTH@ 4
---INS VariableDeclarationStatement@@Type type=typeVariableMap.get(PROPERTY_TYPE_KEY); @TO@ Block@@ElseBody:{  if (delegateClass == CompositeProperty.DefaultToMapConverter.class) {    throw new IllegalArgumentException("@" + CompositeProperty.class.getSimpleName() + " can only be used on Map properties without additional configuration. Was "+ generateLocation(persistentProperty));  }  Map<String,Type> typeVariableMap=GenericTypeResolver.getTypeVariableMap(delegateClass).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getName(),Map.Entry::getValue));  Assert.isTrue(typeVariableMap.containsKey(KEY_TYPE_KEY),() -> "SDN could not determine the key type of your toMap converter " + generateLocation(persistentProperty));  Assert.isTrue(typeVariableMap.containsKey(PROPERTY_TYPE_KEY),() -> "SDN could not determine the property type of your toMap converter " + generateLocation(persistentProperty));  if (persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY)) {    throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");  }  componentType=(Class<?>)typeVariableMap.get(KEY_TYPE_KEY);} @AT@ 10212 @LENGTH@ 51
------INS SimpleType@@Type @TO@ VariableDeclarationStatement@@Type type=typeVariableMap.get(PROPERTY_TYPE_KEY); @AT@ 10212 @LENGTH@ 4
------INS VariableDeclarationFragment@@type=typeVariableMap.get(PROPERTY_TYPE_KEY) @TO@ VariableDeclarationStatement@@Type type=typeVariableMap.get(PROPERTY_TYPE_KEY); @AT@ 10217 @LENGTH@ 45
---------MOV MethodInvocation@@typeVariableMap.get(PROPERTY_TYPE_KEY) @TO@ VariableDeclarationFragment@@type=typeVariableMap.get(PROPERTY_TYPE_KEY) @AT@ 10210 @LENGTH@ 38
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=typeVariableMap.get(PROPERTY_TYPE_KEY) @AT@ 10217 @LENGTH@ 4
---INS IfStatement@@if (persistentProperty.isCollectionLike() && type instanceof ParameterizedType) {  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @TO@ Block@@ElseBody:{  if (delegateClass == CompositeProperty.DefaultToMapConverter.class) {    throw new IllegalArgumentException("@" + CompositeProperty.class.getSimpleName() + " can only be used on Map properties without additional configuration. Was "+ generateLocation(persistentProperty));  }  Map<String,Type> typeVariableMap=GenericTypeResolver.getTypeVariableMap(delegateClass).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getName(),Map.Entry::getValue));  Assert.isTrue(typeVariableMap.containsKey(KEY_TYPE_KEY),() -> "SDN could not determine the key type of your toMap converter " + generateLocation(persistentProperty));  Assert.isTrue(typeVariableMap.containsKey(PROPERTY_TYPE_KEY),() -> "SDN could not determine the property type of your toMap converter " + generateLocation(persistentProperty));  if (persistentProperty.getActualType() != typeVariableMap.get(PROPERTY_TYPE_KEY)) {    throw new IllegalArgumentException("The property type `" + typeVariableMap.get(PROPERTY_TYPE_KEY).getTypeName() + "` created by `"+ delegateClass.getName()+ "` "+ generateLocation(persistentProperty)+ " doesn't match the actual property type.");  }  componentType=(Class<?>)typeVariableMap.get(KEY_TYPE_KEY);} @AT@ 10267 @LENGTH@ 320
------INS InfixExpression@@persistentProperty.isCollectionLike() && type instanceof ParameterizedType @TO@ IfStatement@@if (persistentProperty.isCollectionLike() && type instanceof ParameterizedType) {  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @AT@ 10271 @LENGTH@ 74
---------INS MethodInvocation@@persistentProperty.isCollectionLike() @TO@ InfixExpression@@persistentProperty.isCollectionLike() && type instanceof ParameterizedType @AT@ 10271 @LENGTH@ 37
------------INS SimpleName@@Name:persistentProperty @TO@ MethodInvocation@@persistentProperty.isCollectionLike() @AT@ 10271 @LENGTH@ 18
------------INS SimpleName@@MethodName:isCollectionLike:[] @TO@ MethodInvocation@@persistentProperty.isCollectionLike() @AT@ 10290 @LENGTH@ 18
---------INS Operator@@&& @TO@ InfixExpression@@persistentProperty.isCollectionLike() && type instanceof ParameterizedType @AT@ 10308 @LENGTH@ 2
---------INS InstanceofExpression@@type instanceof ParameterizedType @TO@ InfixExpression@@persistentProperty.isCollectionLike() && type instanceof ParameterizedType @AT@ 10312 @LENGTH@ 33
------------INS SimpleName@@type @TO@ InstanceofExpression@@type instanceof ParameterizedType @AT@ 10312 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@type instanceof ParameterizedType @AT@ 10317 @LENGTH@ 10
------------INS SimpleType@@ParameterizedType @TO@ InstanceofExpression@@type instanceof ParameterizedType @AT@ 10328 @LENGTH@ 17
------INS Block@@ThenBody:{  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @TO@ IfStatement@@if (persistentProperty.isCollectionLike() && type instanceof ParameterizedType) {  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @AT@ 10347 @LENGTH@ 240
---------INS VariableDeclarationStatement@@ParameterizedType pt=(ParameterizedType)type; @TO@ Block@@ThenBody:{  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @AT@ 10353 @LENGTH@ 48
------------INS SimpleType@@ParameterizedType @TO@ VariableDeclarationStatement@@ParameterizedType pt=(ParameterizedType)type; @AT@ 10353 @LENGTH@ 17
------------INS VariableDeclarationFragment@@pt=(ParameterizedType)type @TO@ VariableDeclarationStatement@@ParameterizedType pt=(ParameterizedType)type; @AT@ 10371 @LENGTH@ 29
---------------INS SimpleName@@pt @TO@ VariableDeclarationFragment@@pt=(ParameterizedType)type @AT@ 10371 @LENGTH@ 2
---------------INS CastExpression@@(ParameterizedType)type @TO@ VariableDeclarationFragment@@pt=(ParameterizedType)type @AT@ 10376 @LENGTH@ 24
------------------INS SimpleType@@ParameterizedType @TO@ CastExpression@@(ParameterizedType)type @AT@ 10377 @LENGTH@ 17
------------------INS SimpleName@@type @TO@ CastExpression@@(ParameterizedType)type @AT@ 10396 @LENGTH@ 4
---------INS IfStatement@@if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {  type=((ParameterizedType)type).getActualTypeArguments()[0];} @TO@ Block@@ThenBody:{  ParameterizedType pt=(ParameterizedType)type;  if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {    type=((ParameterizedType)type).getActualTypeArguments()[0];  }} @AT@ 10406 @LENGTH@ 176
------------INS InfixExpression@@persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1 @TO@ IfStatement@@if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {  type=((ParameterizedType)type).getActualTypeArguments()[0];} @AT@ 10410 @LENGTH@ 95
---------------INS MethodInvocation@@persistentProperty.getType().equals(pt.getRawType()) @TO@ InfixExpression@@persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1 @AT@ 10410 @LENGTH@ 52
------------------INS MethodInvocation@@MethodName:getType:[] @TO@ MethodInvocation@@persistentProperty.getType().equals(pt.getRawType()) @AT@ 10410 @LENGTH@ 28
------------------INS SimpleName@@Name:persistentProperty @TO@ MethodInvocation@@persistentProperty.getType().equals(pt.getRawType()) @AT@ 10410 @LENGTH@ 18
------------------INS SimpleName@@MethodName:equals:[pt.getRawType()] @TO@ MethodInvocation@@persistentProperty.getType().equals(pt.getRawType()) @AT@ 10439 @LENGTH@ 23
---------------------INS MethodInvocation@@pt.getRawType() @TO@ SimpleName@@MethodName:equals:[pt.getRawType()] @AT@ 10446 @LENGTH@ 15
------------------------INS SimpleName@@Name:pt @TO@ MethodInvocation@@pt.getRawType() @AT@ 10446 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getRawType:[] @TO@ MethodInvocation@@pt.getRawType() @AT@ 10449 @LENGTH@ 12
---------------INS Operator@@&& @TO@ InfixExpression@@persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1 @AT@ 10462 @LENGTH@ 2
---------------INS InfixExpression@@pt.getActualTypeArguments().length == 1 @TO@ InfixExpression@@persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1 @AT@ 10466 @LENGTH@ 39
------------------INS FieldAccess@@pt.getActualTypeArguments().length @TO@ InfixExpression@@pt.getActualTypeArguments().length == 1 @AT@ 10466 @LENGTH@ 34
---------------------INS MethodInvocation@@pt.getActualTypeArguments() @TO@ FieldAccess@@pt.getActualTypeArguments().length @AT@ 10466 @LENGTH@ 27
------------------------INS SimpleName@@Name:pt @TO@ MethodInvocation@@pt.getActualTypeArguments() @AT@ 10466 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:getActualTypeArguments:[] @TO@ MethodInvocation@@pt.getActualTypeArguments() @AT@ 10469 @LENGTH@ 24
---------------------INS SimpleName@@length @TO@ FieldAccess@@pt.getActualTypeArguments().length @AT@ 10494 @LENGTH@ 6
------------------INS Operator@@== @TO@ InfixExpression@@pt.getActualTypeArguments().length == 1 @AT@ 10500 @LENGTH@ 2
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@pt.getActualTypeArguments().length == 1 @AT@ 10504 @LENGTH@ 1
------------INS Block@@ThenBody:{  type=((ParameterizedType)type).getActualTypeArguments()[0];} @TO@ IfStatement@@if (persistentProperty.getType().equals(pt.getRawType()) && pt.getActualTypeArguments().length == 1) {  type=((ParameterizedType)type).getActualTypeArguments()[0];} @AT@ 10507 @LENGTH@ 75
---------------INS ExpressionStatement@@Assignment:type=((ParameterizedType)type).getActualTypeArguments()[0] @TO@ Block@@ThenBody:{  type=((ParameterizedType)type).getActualTypeArguments()[0];} @AT@ 10514 @LENGTH@ 62
------------------INS Assignment@@type=((ParameterizedType)type).getActualTypeArguments()[0] @TO@ ExpressionStatement@@Assignment:type=((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10514 @LENGTH@ 61
---------------------INS SimpleName@@type @TO@ Assignment@@type=((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10514 @LENGTH@ 4
---------------------INS Operator@@= @TO@ Assignment@@type=((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10518 @LENGTH@ 1
---------------------INS ArrayAccess@@((ParameterizedType)type).getActualTypeArguments()[0] @TO@ Assignment@@type=((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10521 @LENGTH@ 54
------------------------INS MethodInvocation@@((ParameterizedType)type).getActualTypeArguments() @TO@ ArrayAccess@@((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10521 @LENGTH@ 51
---------------------------INS ParenthesizedExpression@@((ParameterizedType)type) @TO@ MethodInvocation@@((ParameterizedType)type).getActualTypeArguments() @AT@ 10521 @LENGTH@ 26
------------------------------INS CastExpression@@(ParameterizedType)type @TO@ ParenthesizedExpression@@((ParameterizedType)type) @AT@ 10522 @LENGTH@ 24
---------------------------------INS SimpleType@@ParameterizedType @TO@ CastExpression@@(ParameterizedType)type @AT@ 10523 @LENGTH@ 17
---------------------------------INS SimpleName@@type @TO@ CastExpression@@(ParameterizedType)type @AT@ 10542 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getActualTypeArguments:[] @TO@ MethodInvocation@@((ParameterizedType)type).getActualTypeArguments() @AT@ 10548 @LENGTH@ 24
------------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@((ParameterizedType)type).getActualTypeArguments()[0] @AT@ 10573 @LENGTH@ 1


UPD VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @TO@ Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 39553 @LENGTH@ 153
---DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 39553 @LENGTH@ 38
---INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 39599 @LENGTH@ 48
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 39599 @LENGTH@ 8
------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 39608 @LENGTH@ 38
---------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 39553 @LENGTH@ 10
---------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 39564 @LENGTH@ 10
---------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 39576 @LENGTH@ 11
---------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 39589 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:location.toString() @TO@ InfixExpression:"file://" + location @AT@ 19091 @LENGTH@ 27
---INS InfixExpression@@"file://" + location @TO@ ReturnStatement@@MethodInvocation:location.toString() @AT@ 19098 @LENGTH@ 20
------INS StringLiteral@@"file://" @TO@ InfixExpression@@"file://" + location @AT@ 19098 @LENGTH@ 9
------INS Operator@@+ @TO@ InfixExpression@@"file://" + location @AT@ 19107 @LENGTH@ 1
------INS SimpleName@@location @TO@ InfixExpression@@"file://" + location @AT@ 19110 @LENGTH@ 8
---DEL MethodInvocation@@location.toString() @AT@ 19098 @LENGTH@ 19
------DEL SimpleName@@Name:location @AT@ 19098 @LENGTH@ 8
------DEL SimpleName@@MethodName:toString:[] @AT@ 19107 @LENGTH@ 10


UPD VariableDeclarationStatement@@Neo4jPersistentEntity entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @TO@ Neo4jPersistentEntity<?> entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @AT@ 18743 @LENGTH@ 92
---DEL SimpleType@@Neo4jPersistentEntity @AT@ 18743 @LENGTH@ 21
---INS ParameterizedType@@Neo4jPersistentEntity<?> @TO@ VariableDeclarationStatement@@Neo4jPersistentEntity entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @AT@ 18826 @LENGTH@ 24
------INS SimpleType@@Neo4jPersistentEntity @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 18826 @LENGTH@ 21
------INS WildcardType@@? @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 18848 @LENGTH@ 1


INS IfStatement@@if (!isPosix(path,linkOptions)) {  throw new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)));} @TO@ MethodDeclaration@@public, static, Path, MethodName:setReadOnly, final Path path, final boolean readOnly, final LinkOption... linkOptions, IOException,  @AT@ 58340 @LENGTH@ 188
---INS PrefixExpression@@!isPosix(path,linkOptions) @TO@ IfStatement@@if (!isPosix(path,linkOptions)) {  throw new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)));} @AT@ 58344 @LENGTH@ 27
------INS Operator@@! @TO@ PrefixExpression@@!isPosix(path,linkOptions) @AT@ 58344 @LENGTH@ 1
------INS MethodInvocation@@isPosix(path,linkOptions) @TO@ PrefixExpression@@!isPosix(path,linkOptions) @AT@ 58345 @LENGTH@ 26
---------INS SimpleName@@MethodName:isPosix:[path, linkOptions] @TO@ MethodInvocation@@isPosix(path,linkOptions) @AT@ 58345 @LENGTH@ 26
------------INS SimpleName@@path @TO@ SimpleName@@MethodName:isPosix:[path, linkOptions] @AT@ 58353 @LENGTH@ 4
------------INS SimpleName@@linkOptions @TO@ SimpleName@@MethodName:isPosix:[path, linkOptions] @AT@ 58359 @LENGTH@ 11
---INS Block@@ThenBody:{  throw new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)));} @TO@ IfStatement@@if (!isPosix(path,linkOptions)) {  throw new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)));} @AT@ 58373 @LENGTH@ 155
------INS ThrowStatement@@ClassInstanceCreation:new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))) @TO@ Block@@ThenBody:{  throw new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)));} @AT@ 58387 @LENGTH@ 131
---------INS ClassInstanceCreation@@IOException[String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException(String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))) @AT@ 58393 @LENGTH@ 124
------------INS New@@new @TO@ ClassInstanceCreation@@IOException[String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))] @AT@ 58393 @LENGTH@ 3
------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException[String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))] @AT@ 58397 @LENGTH@ 11
------------INS MethodInvocation@@String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)) @TO@ ClassInstanceCreation@@IOException[String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions))] @AT@ 58409 @LENGTH@ 107
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)) @AT@ 58409 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["DOS or POSIX file operations not available for '%s' %s", path, Arrays.toString(linkOptions)] @TO@ MethodInvocation@@String.format("DOS or POSIX file operations not available for '%s' %s",path,Arrays.toString(linkOptions)) @AT@ 58416 @LENGTH@ 100
------------------INS StringLiteral@@"DOS or POSIX file operations not available for '%s' %s" @TO@ SimpleName@@MethodName:format:["DOS or POSIX file operations not available for '%s' %s", path, Arrays.toString(linkOptions)] @AT@ 58423 @LENGTH@ 56
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:format:["DOS or POSIX file operations not available for '%s' %s", path, Arrays.toString(linkOptions)] @AT@ 58481 @LENGTH@ 4
------------------INS MethodInvocation@@Arrays.toString(linkOptions) @TO@ SimpleName@@MethodName:format:["DOS or POSIX file operations not available for '%s' %s", path, Arrays.toString(linkOptions)] @AT@ 58487 @LENGTH@ 28
---------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(linkOptions) @AT@ 58487 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:toString:[linkOptions] @TO@ MethodInvocation@@Arrays.toString(linkOptions) @AT@ 58494 @LENGTH@ 21
------------------------INS SimpleName@@linkOptions @TO@ SimpleName@@MethodName:toString:[linkOptions] @AT@ 58503 @LENGTH@ 11


DEL MethodDeclaration@@boolean, MethodName:next,  @AT@ 1547 @LENGTH@ 7
---DEL PrimitiveType@@boolean @AT@ 1539 @LENGTH@ 7
---DEL SimpleName@@MethodName:next @AT@ 1547 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @TO@ MethodInvocation:javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(getDefaultRequeueRejected(),instance::setDefaultRequeueRejected).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @AT@ 11579 @LENGTH@ 1442
---UPD MethodInvocation@@javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @TO@ javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(getDefaultRequeueRejected(),instance::setDefaultRequeueRejected).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @AT@ 11579 @LENGTH@ 1441
------INS MethodInvocation@@MethodName:acceptIfNotNull:[getDefaultRequeueRejected(), instance::setDefaultRequeueRejected] @TO@ MethodInvocation@@javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @AT@ 11579 @LENGTH@ 593
---------INS MethodInvocation@@MethodName:getDefaultRequeueRejected:[] @TO@ MethodInvocation@@MethodName:acceptIfNotNull:[getDefaultRequeueRejected(), instance::setDefaultRequeueRejected] @AT@ 12107 @LENGTH@ 27


UPD VariableDeclarationStatement@@WebFilterChain chain=new DefaultWebFilterChain((e) -> Mono.empty(),mainContextWebFilter,this.filter); @TO@ WebFilterChain chain=new DefaultWebFilterChain((e) -> Mono.empty(),List.of(mainContextWebFilter,this.filter)); @AT@ 4287 @LENGTH@ 105
---UPD VariableDeclarationFragment@@chain=new DefaultWebFilterChain((e) -> Mono.empty(),mainContextWebFilter,this.filter) @TO@ chain=new DefaultWebFilterChain((e) -> Mono.empty(),List.of(mainContextWebFilter,this.filter)) @AT@ 4302 @LENGTH@ 89
------UPD ClassInstanceCreation@@DefaultWebFilterChain[(e) -> Mono.empty(), mainContextWebFilter, this.filter] @TO@ DefaultWebFilterChain[(e) -> Mono.empty(), List.of(mainContextWebFilter,this.filter)] @AT@ 4310 @LENGTH@ 81
---------DEL SimpleName@@mainContextWebFilter @AT@ 4357 @LENGTH@ 20
---------DEL FieldAccess@@this.filter @AT@ 4379 @LENGTH@ 11
---------INS MethodInvocation@@List.of(mainContextWebFilter,this.filter) @TO@ ClassInstanceCreation@@DefaultWebFilterChain[(e) -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 4385 @LENGTH@ 42
------------INS SimpleName@@Name:List @TO@ MethodInvocation@@List.of(mainContextWebFilter,this.filter) @AT@ 4385 @LENGTH@ 4
------------INS SimpleName@@MethodName:of:[mainContextWebFilter, this.filter] @TO@ MethodInvocation@@List.of(mainContextWebFilter,this.filter) @AT@ 4390 @LENGTH@ 37
---------------INS SimpleName@@mainContextWebFilter @TO@ SimpleName@@MethodName:of:[mainContextWebFilter, this.filter] @AT@ 4393 @LENGTH@ 20
---------------INS FieldAccess@@this.filter @TO@ SimpleName@@MethodName:of:[mainContextWebFilter, this.filter] @AT@ 4415 @LENGTH@ 11
------------------MOV ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 4379 @LENGTH@ 4
------------------MOV SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 4384 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, String, [JBOSS_LOCAL_USER="JBOSS-LOCAL-USER"] @AT@ 2915 @LENGTH@ 66
---DEL Modifier@@private @AT@ 2915 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2923 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2930 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 2936 @LENGTH@ 6
---DEL VariableDeclarationFragment@@JBOSS_LOCAL_USER="JBOSS-LOCAL-USER" @AT@ 2943 @LENGTH@ 37
------DEL SimpleName@@JBOSS_LOCAL_USER @AT@ 2943 @LENGTH@ 16
------DEL StringLiteral@@"JBOSS-LOCAL-USER" @AT@ 2962 @LENGTH@ 18


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 15067 @LENGTH@ 771
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 15082 @LENGTH@ 7
---UPD ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ SuperMethodInvocation:super.doInit() @AT@ 15119 @LENGTH@ 16
------UPD SuperMethodInvocation@@super.doStart() @TO@ super.doInit() @AT@ 15119 @LENGTH@ 15
---------UPD SimpleName@@MethodName:doStart:[] @TO@ MethodName:doInit:[] @AT@ 15125 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testEmptyList,  @TO@ TypeDeclaration@@[public]IOExceptionListTestCase,  @AT@ 2012 @LENGTH@ 150
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEmptyList,  @AT@ 2012 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEmptyList,  @AT@ 2019 @LENGTH@ 4
---INS SimpleName@@MethodName:testEmptyList @TO@ MethodDeclaration@@public, void, MethodName:testEmptyList,  @AT@ 2024 @LENGTH@ 13
---INS ExpressionStatement@@ClassInstanceCreation:new IOExceptionList(Collections.emptyList()) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyList,  @AT@ 2050 @LENGTH@ 45
------INS ClassInstanceCreation@@IOExceptionList[Collections.emptyList()] @TO@ ExpressionStatement@@ClassInstanceCreation:new IOExceptionList(Collections.emptyList()) @AT@ 2050 @LENGTH@ 44
---------INS New@@new @TO@ ClassInstanceCreation@@IOExceptionList[Collections.emptyList()] @AT@ 2050 @LENGTH@ 3
---------INS SimpleType@@IOExceptionList @TO@ ClassInstanceCreation@@IOExceptionList[Collections.emptyList()] @AT@ 2054 @LENGTH@ 15
---------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@IOExceptionList[Collections.emptyList()] @AT@ 2070 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2070 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2082 @LENGTH@ 11
---INS ExpressionStatement@@ClassInstanceCreation:new IOExceptionList("foo",Collections.emptyList()) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyList,  @AT@ 2104 @LENGTH@ 52
------INS ClassInstanceCreation@@IOExceptionList["foo", Collections.emptyList()] @TO@ ExpressionStatement@@ClassInstanceCreation:new IOExceptionList("foo",Collections.emptyList()) @AT@ 2104 @LENGTH@ 51
---------INS New@@new @TO@ ClassInstanceCreation@@IOExceptionList["foo", Collections.emptyList()] @AT@ 2104 @LENGTH@ 3
---------INS SimpleType@@IOExceptionList @TO@ ClassInstanceCreation@@IOExceptionList["foo", Collections.emptyList()] @AT@ 2108 @LENGTH@ 15
---------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@IOExceptionList["foo", Collections.emptyList()] @AT@ 2124 @LENGTH@ 5
---------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@IOExceptionList["foo", Collections.emptyList()] @AT@ 2131 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2131 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2143 @LENGTH@ 11


INS MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @TO@ TypeDeclaration@@[public]MetaStoreUtils,  @AT@ 8945 @LENGTH@ 152
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 8945 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 8952 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 8959 @LENGTH@ 6
---INS SimpleName@@MethodName:getDbNameFromReplPolicy @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 8966 @LENGTH@ 23
---INS SingleVariableDeclaration@@String replPolicy @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 8990 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String replPolicy @AT@ 8990 @LENGTH@ 6
------INS SimpleName@@replPolicy @TO@ SingleVariableDeclaration@@String replPolicy @AT@ 8997 @LENGTH@ 10
---INS AssertStatement@@InfixExpression:replPolicy != null @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 9015 @LENGTH@ 26
------INS InfixExpression@@replPolicy != null @TO@ AssertStatement@@InfixExpression:replPolicy != null @AT@ 9022 @LENGTH@ 18
---------INS SimpleName@@replPolicy @TO@ InfixExpression@@replPolicy != null @AT@ 9022 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@replPolicy != null @AT@ 9032 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@replPolicy != null @AT@ 9036 @LENGTH@ 4
---INS ReturnStatement@@ArrayAccess:replPolicy.split(Pattern.quote("."))[0] @TO@ MethodDeclaration@@public, static, String, MethodName:getDbNameFromReplPolicy, String replPolicy,  @AT@ 9046 @LENGTH@ 47
------INS ArrayAccess@@replPolicy.split(Pattern.quote("."))[0] @TO@ ReturnStatement@@ArrayAccess:replPolicy.split(Pattern.quote("."))[0] @AT@ 9053 @LENGTH@ 39
---------INS MethodInvocation@@replPolicy.split(Pattern.quote(".")) @TO@ ArrayAccess@@replPolicy.split(Pattern.quote("."))[0] @AT@ 9053 @LENGTH@ 36
------------INS SimpleName@@Name:replPolicy @TO@ MethodInvocation@@replPolicy.split(Pattern.quote(".")) @AT@ 9053 @LENGTH@ 10
------------INS SimpleName@@MethodName:split:[Pattern.quote(".")] @TO@ MethodInvocation@@replPolicy.split(Pattern.quote(".")) @AT@ 9064 @LENGTH@ 25
---------------INS MethodInvocation@@Pattern.quote(".") @TO@ SimpleName@@MethodName:split:[Pattern.quote(".")] @AT@ 9070 @LENGTH@ 18
------------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.quote(".") @AT@ 9070 @LENGTH@ 7
------------------INS SimpleName@@MethodName:quote:["."] @TO@ MethodInvocation@@Pattern.quote(".") @AT@ 9078 @LENGTH@ 10
---------------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:quote:["."] @AT@ 9084 @LENGTH@ 3
---------INS NumberLiteral@@0 @TO@ ArrayAccess@@replPolicy.split(Pattern.quote("."))[0] @AT@ 9090 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @TO@ TypeDeclaration@@[public]TestDefaultListDelimiterHandler,  @AT@ 3476 @LENGTH@ 253
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3476 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3483 @LENGTH@ 4
---INS SimpleName@@MethodName:testEscapeIntegerList @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3488 @LENGTH@ 21
---INS VariableDeclarationStatement@@final ValueTransformer trans=ListDelimiterHandler.NOOP_TRANSFORMER; @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3526 @LENGTH@ 69
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ValueTransformer trans=ListDelimiterHandler.NOOP_TRANSFORMER; @AT@ 3526 @LENGTH@ 5
------INS SimpleType@@ValueTransformer @TO@ VariableDeclarationStatement@@final ValueTransformer trans=ListDelimiterHandler.NOOP_TRANSFORMER; @AT@ 3532 @LENGTH@ 16
------INS VariableDeclarationFragment@@trans=ListDelimiterHandler.NOOP_TRANSFORMER @TO@ VariableDeclarationStatement@@final ValueTransformer trans=ListDelimiterHandler.NOOP_TRANSFORMER; @AT@ 3549 @LENGTH@ 45
---------INS SimpleName@@trans @TO@ VariableDeclarationFragment@@trans=ListDelimiterHandler.NOOP_TRANSFORMER @AT@ 3549 @LENGTH@ 5
---------INS QualifiedName@@ListDelimiterHandler.NOOP_TRANSFORMER @TO@ VariableDeclarationFragment@@trans=ListDelimiterHandler.NOOP_TRANSFORMER @AT@ 3557 @LENGTH@ 37
------------INS SimpleName@@ListDelimiterHandler @TO@ QualifiedName@@ListDelimiterHandler.NOOP_TRANSFORMER @AT@ 3557 @LENGTH@ 20
------------INS SimpleName@@NOOP_TRANSFORMER @TO@ QualifiedName@@ListDelimiterHandler.NOOP_TRANSFORMER @AT@ 3578 @LENGTH@ 16
---INS VariableDeclarationStatement@@final List<Integer> data=Arrays.asList(1,2,3,4); @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3604 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<Integer> data=Arrays.asList(1,2,3,4); @AT@ 3604 @LENGTH@ 5
------INS ParameterizedType@@List<Integer> @TO@ VariableDeclarationStatement@@final List<Integer> data=Arrays.asList(1,2,3,4); @AT@ 3610 @LENGTH@ 13
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Integer> @AT@ 3610 @LENGTH@ 4
---------INS SimpleType@@Integer @TO@ ParameterizedType@@List<Integer> @AT@ 3615 @LENGTH@ 7
------INS VariableDeclarationFragment@@data=Arrays.asList(1,2,3,4) @TO@ VariableDeclarationStatement@@final List<Integer> data=Arrays.asList(1,2,3,4); @AT@ 3624 @LENGTH@ 32
---------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data=Arrays.asList(1,2,3,4) @AT@ 3624 @LENGTH@ 4
---------INS MethodInvocation@@Arrays.asList(1,2,3,4) @TO@ VariableDeclarationFragment@@data=Arrays.asList(1,2,3,4) @AT@ 3631 @LENGTH@ 25
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(1,2,3,4) @AT@ 3631 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[1, 2, 3, 4] @TO@ MethodInvocation@@Arrays.asList(1,2,3,4) @AT@ 3638 @LENGTH@ 18
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:asList:[1, 2, 3, 4] @AT@ 3645 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:asList:[1, 2, 3, 4] @AT@ 3648 @LENGTH@ 1
---------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:asList:[1, 2, 3, 4] @AT@ 3651 @LENGTH@ 1
---------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:asList:[1, 2, 3, 4] @AT@ 3654 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals("1,2,3,4",handler.escapeList(data,trans)) @TO@ MethodDeclaration@@public, void, MethodName:testEscapeIntegerList,  @AT@ 3666 @LENGTH@ 57
------INS MethodInvocation@@assertEquals("1,2,3,4",handler.escapeList(data,trans)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("1,2,3,4",handler.escapeList(data,trans)) @AT@ 3666 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertEquals:["1,2,3,4", handler.escapeList(data,trans)] @TO@ MethodInvocation@@assertEquals("1,2,3,4",handler.escapeList(data,trans)) @AT@ 3666 @LENGTH@ 56
------------INS StringLiteral@@"1,2,3,4" @TO@ SimpleName@@MethodName:assertEquals:["1,2,3,4", handler.escapeList(data,trans)] @AT@ 3679 @LENGTH@ 9
------------INS MethodInvocation@@handler.escapeList(data,trans) @TO@ SimpleName@@MethodName:assertEquals:["1,2,3,4", handler.escapeList(data,trans)] @AT@ 3690 @LENGTH@ 31
---------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.escapeList(data,trans) @AT@ 3690 @LENGTH@ 7
---------------INS SimpleName@@MethodName:escapeList:[data, trans] @TO@ MethodInvocation@@handler.escapeList(data,trans) @AT@ 3698 @LENGTH@ 23
------------------INS SimpleName@@data @TO@ SimpleName@@MethodName:escapeList:[data, trans] @AT@ 3709 @LENGTH@ 4
------------------INS SimpleName@@trans @TO@ SimpleName@@MethodName:escapeList:[data, trans] @AT@ 3715 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:MetastoreConf.setTimeVar(conf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @TO@ MethodDeclaration@@public, void, MethodName:setup, Exception,  @AT@ 5337 @LENGTH@ 96
---INS MethodInvocation@@MetastoreConf.setTimeVar(conf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setTimeVar(conf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 5337 @LENGTH@ 95
------INS SimpleName@@Name:MetastoreConf @TO@ MethodInvocation@@MetastoreConf.setTimeVar(conf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 5337 @LENGTH@ 13
------INS SimpleName@@MethodName:setTimeVar:[conf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @TO@ MethodInvocation@@MetastoreConf.setTimeVar(conf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 5351 @LENGTH@ 81
---------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setTimeVar:[conf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 5362 @LENGTH@ 4
---------INS QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @TO@ SimpleName@@MethodName:setTimeVar:[conf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 5368 @LENGTH@ 42
------------INS QualifiedName@@MetastoreConf.ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @AT@ 5368 @LENGTH@ 22
---------------INS SimpleName@@MetastoreConf @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 5368 @LENGTH@ 13
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 5382 @LENGTH@ 8
------------INS SimpleName@@TXN_OPENTXN_TIMEOUT @TO@ QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @AT@ 5391 @LENGTH@ 19
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:setTimeVar:[conf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 5412 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:setTimeVar:[conf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 5415 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 5415 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 5424 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:createResponseAuth(parsedDigestResponse) @TO@ MethodInvocation:createResponseAuth() @AT@ 12038 @LENGTH@ 48
---UPD MethodInvocation@@createResponseAuth(parsedDigestResponse) @TO@ MethodName:createResponseAuth:[] @AT@ 12045 @LENGTH@ 40
------DEL SimpleName@@MethodName:createResponseAuth:[parsedDigestResponse] @AT@ 12045 @LENGTH@ 40
---------DEL SimpleName@@parsedDigestResponse @AT@ 12064 @LENGTH@ 20


UPD ExpressionStatement@@Assignment:m_dfs=new MiniDFSCluster.Builder(new Configuration()).numDataNodes(1).format(true).build() @TO@ Assignment:m_dfs=new MiniDFSCluster.Builder(new Configuration()).numDataNodes(2).format(true).build() @AT@ 4535 @LENGTH@ 93
---UPD Assignment@@m_dfs=new MiniDFSCluster.Builder(new Configuration()).numDataNodes(1).format(true).build() @TO@ m_dfs=new MiniDFSCluster.Builder(new Configuration()).numDataNodes(2).format(true).build() @AT@ 4535 @LENGTH@ 92
------UPD MethodInvocation@@new MiniDFSCluster.Builder(new Configuration()).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(new Configuration()).numDataNodes(2).format(true).build() @AT@ 4543 @LENGTH@ 84
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 4543 @LENGTH@ 63
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4604 @LENGTH@ 1


UPD VariableDeclarationStatement@@MappingContext mappingContext=new MongoMappingContext(); @TO@ MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> mappingContext=new MongoMappingContext(); @AT@ 3057 @LENGTH@ 58
---DEL SimpleType@@MappingContext @AT@ 3057 @LENGTH@ 14
---INS ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @TO@ VariableDeclarationStatement@@MappingContext mappingContext=new MongoMappingContext(); @AT@ 3211 @LENGTH@ 65
------INS SimpleType@@MappingContext @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 3211 @LENGTH@ 14
------INS ParameterizedType@@MongoPersistentEntity<?> @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 3226 @LENGTH@ 24
---------INS SimpleType@@MongoPersistentEntity @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 3226 @LENGTH@ 21
---------INS WildcardType@@? @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 3248 @LENGTH@ 1
------INS SimpleType@@MongoPersistentProperty @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 3252 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:session.writeTransaction(w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
) @TO@ MethodInvocation:session.writeTransaction(w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
) @AT@ 7922 @LENGTH@ 3811
---UPD MethodInvocation@@session.writeTransaction(w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
) @TO@ session.writeTransaction(w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
) @AT@ 7922 @LENGTH@ 3810
------UPD SimpleName@@MethodName:writeTransaction:[w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
] @TO@ MethodName:writeTransaction:[w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
] @AT@ 7930 @LENGTH@ 3802
---------UPD LambdaExpression@@w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
 @TO@ w -> {
  Map<String,Object> parameters;
  w.run("MATCH (n) detach delete n");
  parameters=new HashMap<>();
  parameters.put("aByteArray","A thing".getBytes());
  ID_OF_CYPHER_TYPES_NODE=w.run("CREATE (n:CypherTypes) SET  n.aBoolean = true,\n" + " n.aLong = 9223372036854775807, n.aDouble = 1.7976931348, n.aString = 'Hallo, Cypher',\n" + " n.aByteArray = $aByteArray, n.aLocalDate = date('2015-07-21'),\n"+ " n.anOffsetTime  = time({ hour:12, minute:31, timezone: '+01:00' }),\n"+ " n.aLocalTime = localtime({ hour:12, minute:31, second:14 }),\n"+ " n.aZoneDateTime = datetime('2015-07-21T21:40:32-04[America/New_York]'),\n"+ " n.aLocalDateTime = localdatetime('2015202T21'), n.anIsoDuration = duration('P14DT16H12M'),\n"+ " n.aPoint = point({x:47, y:11})\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET  n.booleanArray = [true, true, false], n.aByte = $aByte,\n" + " n.aChar = 'x', n.charArray = ['x', 'y', 'z'], n.aDate = '2019-09-21T13:23:11Z',\n" + " n.doubleArray = [1.1, 2.2, 3.3], n.aFloat = '23.42', n.floatArray = ['4.4', '5.5'],\n"+ " n.anInt = 42, n.intArray = [21, 9], n.aLocale = 'de_DE',\n"+ " n.longArray = [-9223372036854775808, 9223372036854775807], n.aShort = 127,\n"+ " n.shortArray = [-10, 10], n.aBigDecimal = '1.79769313486231570E+309',\n"+ " n.aBigInteger = '92233720368547758070', n.aPeriod = duration('P23Y4M7D'),\n"+ " n.aDuration = duration('PT26H4M5S'), n.stringArray = ['Hallo', 'Welt'],\n"+ " n.listOfStrings = ['Hello', 'World'], n.setOfStrings = ['Hallo', 'Welt'],\n"+ " n.anInstant = datetime('2019-09-26T20:34:23Z'),\n"+ " n.aUUID = 'd4ec9208-4b17-4ec7-a709-19a5e53865a8', n.listOfDoubles = [1.0],\n"+ " n.aURL = 'https://www.test.com',\n"+ " n.aURI = 'urn:isbn:9783864905254',\n"+ " n.anEnum = 'TheUsualMisfit', n.anArrayOfEnums = ['ValueA', 'ValueB'],\n"+ " n.aCollectionOfEnums = ['ValueC', 'TheUsualMisfit'],\n"+ " n.aTimeZone = 'America/Los_Angeles', \n"+ " n.aZoneId = 'America/New_York', n.aZeroPeriod = duration('PT0S'), n.aZeroDuration = duration('PT0S')\n"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("neo4j",NEO_HQ.toParameterMap());
  parameters.put("minc",MINC.toParameterMap());
  parameters.put("clarion",CLARION.toParameterMap());
  parameters.put("aByte",Values.value(new byte[]{6}));
  ID_OF_SPATIAL_TYPES_NODE=w.run("CREATE (n:SpatialTypes) SET " + " n.sdnPoint = point({latitude: $neo4j.latitude, longitude: $neo4j.longitude})," + " n.geo2d = point({latitude: $minc.latitude, longitude: $minc.longitude}),"+ " n.geo3d = point({latitude: $clarion.latitude, longitude: $clarion.longitude, height: 27}),"+ " n.car2d = point({x: 10, y: 20}),"+ " n.car3d = point({x: 30, y: 40, z: 50})"+ " RETURN id(n) AS id",parameters).single().get("id").asLong();
  parameters=new HashMap<>();
  parameters.put("customType","ABCD");
  parameters.put("dateAsLong",1600682400000L);
  parameters.put("dateAsString","2013-05-06");
  ID_OF_CUSTOM_TYPE_NODE=w.run("CREATE (n:CustomTypes) SET n.customType = $customType, n.dateAsLong = $dateAsLong, n.dateAsString = $dateAsString RETURN id(n) AS id",parameters).single().get("id").asLong();
  w.commit();
  return null;
}
 @AT@ 7947 @LENGTH@ 3784
------------DEL ExpressionStatement@@Assignment:ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong() @AT@ 8036 @LENGTH@ 133
---------------DEL Assignment@@ID_OF_NON_EXISTING_PRIMITIVES_NODE=w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong() @AT@ 8036 @LENGTH@ 132
------------------DEL SimpleName@@ID_OF_NON_EXISTING_PRIMITIVES_NODE @AT@ 8036 @LENGTH@ 34
------------------DEL Operator@@= @AT@ 8070 @LENGTH@ 1
------------------DEL MethodInvocation@@w.run("CREATE (n:NonExistingPrimitives) RETURN id(n) AS id").single().get("id").asLong() @AT@ 8073 @LENGTH@ 95
---------------------DEL MethodInvocation@@MethodName:get:["id"] @AT@ 8073 @LENGTH@ 86
------------------------DEL StringLiteral@@"id" @AT@ 8154 @LENGTH@ 4
---------------------DEL MethodInvocation@@MethodName:single:[] @AT@ 8073 @LENGTH@ 69
---------------------DEL MethodInvocation@@MethodName:run:["CREATE (n:NonExistingPrimitives) RETURN id(n) AS id"] @AT@ 8073 @LENGTH@ 60
------------------------DEL StringLiteral@@"CREATE (n:NonExistingPrimitives) RETURN id(n) AS id" @AT@ 8079 @LENGTH@ 53
---------------------DEL SimpleName@@Name:w @AT@ 8073 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:asLong:[] @AT@ 8160 @LENGTH@ 8


MOV ExpressionStatement@@MethodInvocation:given(this.csrfTokenRepository.saveToken(this.exchange,null)).willReturn(Mono.empty()) @TO@ MethodDeclaration@@public, void, MethodName:logoutRemovesCsrfToken,  @AT@ 2062 @LENGTH@ 88


INS MethodDeclaration@@static, Stream<Arguments>, MethodName:charsetData,  @TO@ TypeDeclaration@@[public]ReaderInputStreamTest,  @AT@ 2728 @LENGTH@ 271
---INS Modifier@@static @TO@ MethodDeclaration@@static, Stream<Arguments>, MethodName:charsetData,  @AT@ 2728 @LENGTH@ 6
---INS ParameterizedType@@Stream<Arguments> @TO@ MethodDeclaration@@static, Stream<Arguments>, MethodName:charsetData,  @AT@ 2735 @LENGTH@ 17
------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<Arguments> @AT@ 2735 @LENGTH@ 6
------INS SimpleType@@Arguments @TO@ ParameterizedType@@Stream<Arguments> @AT@ 2742 @LENGTH@ 9
---INS SimpleName@@MethodName:charsetData @TO@ MethodDeclaration@@static, Stream<Arguments>, MethodName:charsetData,  @AT@ 2753 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:Stream.of(Arguments.of("Cp930","\u0391"),Arguments.of("ISO_8859_1","A"),Arguments.of("UTF-8","\u0391")) @TO@ MethodDeclaration@@static, Stream<Arguments>, MethodName:charsetData,  @AT@ 2803 @LENGTH@ 165
------INS MethodInvocation@@Stream.of(Arguments.of("Cp930","\u0391"),Arguments.of("ISO_8859_1","A"),Arguments.of("UTF-8","\u0391")) @TO@ ReturnStatement@@MethodInvocation:Stream.of(Arguments.of("Cp930","\u0391"),Arguments.of("ISO_8859_1","A"),Arguments.of("UTF-8","\u0391")) @AT@ 2810 @LENGTH@ 157
---------INS SimpleName@@Name:Stream @TO@ MethodInvocation@@Stream.of(Arguments.of("Cp930","\u0391"),Arguments.of("ISO_8859_1","A"),Arguments.of("UTF-8","\u0391")) @AT@ 2810 @LENGTH@ 6
---------INS SimpleName@@MethodName:of:[Arguments.of("Cp930","\u0391"), Arguments.of("ISO_8859_1","A"), Arguments.of("UTF-8","\u0391")] @TO@ MethodInvocation@@Stream.of(Arguments.of("Cp930","\u0391"),Arguments.of("ISO_8859_1","A"),Arguments.of("UTF-8","\u0391")) @AT@ 2817 @LENGTH@ 150
------------INS MethodInvocation@@Arguments.of("Cp930","\u0391") @TO@ SimpleName@@MethodName:of:[Arguments.of("Cp930","\u0391"), Arguments.of("ISO_8859_1","A"), Arguments.of("UTF-8","\u0391")] @AT@ 2837 @LENGTH@ 31
---------------INS SimpleName@@Name:Arguments @TO@ MethodInvocation@@Arguments.of("Cp930","\u0391") @AT@ 2837 @LENGTH@ 9
---------------INS SimpleName@@MethodName:of:["Cp930", "\u0391"] @TO@ MethodInvocation@@Arguments.of("Cp930","\u0391") @AT@ 2847 @LENGTH@ 21
------------------INS StringLiteral@@"Cp930" @TO@ SimpleName@@MethodName:of:["Cp930", "\u0391"] @AT@ 2850 @LENGTH@ 7
------------------INS StringLiteral@@"\u0391" @TO@ SimpleName@@MethodName:of:["Cp930", "\u0391"] @AT@ 2859 @LENGTH@ 8
------------INS MethodInvocation@@Arguments.of("ISO_8859_1","A") @TO@ SimpleName@@MethodName:of:[Arguments.of("Cp930","\u0391"), Arguments.of("ISO_8859_1","A"), Arguments.of("UTF-8","\u0391")] @AT@ 2886 @LENGTH@ 31
---------------INS SimpleName@@Name:Arguments @TO@ MethodInvocation@@Arguments.of("ISO_8859_1","A") @AT@ 2886 @LENGTH@ 9
---------------INS SimpleName@@MethodName:of:["ISO_8859_1", "A"] @TO@ MethodInvocation@@Arguments.of("ISO_8859_1","A") @AT@ 2896 @LENGTH@ 21
------------------INS StringLiteral@@"ISO_8859_1" @TO@ SimpleName@@MethodName:of:["ISO_8859_1", "A"] @AT@ 2899 @LENGTH@ 12
------------------INS StringLiteral@@"A" @TO@ SimpleName@@MethodName:of:["ISO_8859_1", "A"] @AT@ 2913 @LENGTH@ 3
------------INS MethodInvocation@@Arguments.of("UTF-8","\u0391") @TO@ SimpleName@@MethodName:of:[Arguments.of("Cp930","\u0391"), Arguments.of("ISO_8859_1","A"), Arguments.of("UTF-8","\u0391")] @AT@ 2935 @LENGTH@ 31
---------------INS SimpleName@@Name:Arguments @TO@ MethodInvocation@@Arguments.of("UTF-8","\u0391") @AT@ 2935 @LENGTH@ 9
---------------INS SimpleName@@MethodName:of:["UTF-8", "\u0391"] @TO@ MethodInvocation@@Arguments.of("UTF-8","\u0391") @AT@ 2945 @LENGTH@ 21
------------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:of:["UTF-8", "\u0391"] @AT@ 2948 @LENGTH@ 7
------------------INS StringLiteral@@"\u0391" @TO@ SimpleName@@MethodName:of:["UTF-8", "\u0391"] @AT@ 2957 @LENGTH@ 8


INS MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="2.19.0",scheme="rest-swagger",title="REST Swagger",syntax="rest-swagger:specificationUri#operationId",category={Category.REST,Category.SWAGGER,Category.HTTP},producerOnly=true), public, final]RestSwaggerEndpoint, DefaultEndpoint @AT@ 18334 @LENGTH@ 775
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18334 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18342 @LENGTH@ 4
---INS SimpleName@@MethodName:addRestEndpointParameters @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18347 @LENGTH@ 25
---INS SingleVariableDeclaration@@Operation operation @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18373 @LENGTH@ 19
------INS SimpleType@@Operation @TO@ SingleVariableDeclaration@@Operation operation @AT@ 18373 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@Operation operation @AT@ 18383 @LENGTH@ 9
---INS SingleVariableDeclaration@@Map<Object,Object> nestedParameters @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18394 @LENGTH@ 36
------INS ParameterizedType@@Map<Object,Object> @TO@ SingleVariableDeclaration@@Map<Object,Object> nestedParameters @AT@ 18394 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Object,Object> @AT@ 18394 @LENGTH@ 3
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 18398 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 18406 @LENGTH@ 6
------INS SimpleName@@nestedParameters @TO@ SingleVariableDeclaration@@Map<Object,Object> nestedParameters @AT@ 18414 @LENGTH@ 16
---INS IfStatement@@if (this.parameters != null && operation.getParameters() != null) {  for (  Entry<String,Object> entry : this.parameters.entrySet()) {    for (    Parameter param : operation.getParameters()) {      boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());      if (!clash) {        nestedParameters.put(entry.getKey(),entry.getValue());      }    }  }} @TO@ MethodDeclaration@@private, void, MethodName:addRestEndpointParameters, Operation operation, Map<Object,Object> nestedParameters,  @AT@ 18442 @LENGTH@ 661
------INS InfixExpression@@this.parameters != null && operation.getParameters() != null @TO@ IfStatement@@if (this.parameters != null && operation.getParameters() != null) {  for (  Entry<String,Object> entry : this.parameters.entrySet()) {    for (    Parameter param : operation.getParameters()) {      boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());      if (!clash) {        nestedParameters.put(entry.getKey(),entry.getValue());      }    }  }} @AT@ 18446 @LENGTH@ 60
---------INS InfixExpression@@this.parameters != null @TO@ InfixExpression@@this.parameters != null && operation.getParameters() != null @AT@ 18446 @LENGTH@ 23
------------INS FieldAccess@@this.parameters @TO@ InfixExpression@@this.parameters != null @AT@ 18446 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.parameters @AT@ 18446 @LENGTH@ 4
---------------INS SimpleName@@parameters @TO@ FieldAccess@@this.parameters @AT@ 18451 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@this.parameters != null @AT@ 18461 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.parameters != null @AT@ 18465 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@this.parameters != null && operation.getParameters() != null @AT@ 18469 @LENGTH@ 2
---------INS InfixExpression@@operation.getParameters() != null @TO@ InfixExpression@@this.parameters != null && operation.getParameters() != null @AT@ 18473 @LENGTH@ 33
------------INS MethodInvocation@@operation.getParameters() @TO@ InfixExpression@@operation.getParameters() != null @AT@ 18473 @LENGTH@ 25
---------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.getParameters() @AT@ 18473 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@operation.getParameters() @AT@ 18483 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@operation.getParameters() != null @AT@ 18498 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@operation.getParameters() != null @AT@ 18502 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  Entry<String,Object> entry : this.parameters.entrySet()) {    for (    Parameter param : operation.getParameters()) {      boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());      if (!clash) {        nestedParameters.put(entry.getKey(),entry.getValue());      }    }  }} @TO@ IfStatement@@if (this.parameters != null && operation.getParameters() != null) {  for (  Entry<String,Object> entry : this.parameters.entrySet()) {    for (    Parameter param : operation.getParameters()) {      boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());      if (!clash) {        nestedParameters.put(entry.getKey(),entry.getValue());      }    }  }} @AT@ 18508 @LENGTH@ 595
---------INS EnhancedForStatement@@for (Entry<String,Object> entry : this.parameters.entrySet()) {  for (  Parameter param : operation.getParameters()) {    boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());    if (!clash) {      nestedParameters.put(entry.getKey(),entry.getValue());    }  }} @TO@ Block@@ThenBody:{  for (  Entry<String,Object> entry : this.parameters.entrySet()) {    for (    Parameter param : operation.getParameters()) {      boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());      if (!clash) {        nestedParameters.put(entry.getKey(),entry.getValue());      }    }  }} @AT@ 18522 @LENGTH@ 571
------------INS SingleVariableDeclaration@@Entry<String,Object> entry @TO@ EnhancedForStatement@@for (Entry<String,Object> entry : this.parameters.entrySet()) {  for (  Parameter param : operation.getParameters()) {    boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());    if (!clash) {      nestedParameters.put(entry.getKey(),entry.getValue());    }  }} @AT@ 18527 @LENGTH@ 27
---------------INS ParameterizedType@@Entry<String,Object> @TO@ SingleVariableDeclaration@@Entry<String,Object> entry @AT@ 18527 @LENGTH@ 21
------------------INS SimpleType@@Entry @TO@ ParameterizedType@@Entry<String,Object> @AT@ 18527 @LENGTH@ 5
------------------INS SimpleType@@String @TO@ ParameterizedType@@Entry<String,Object> @AT@ 18533 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Entry<String,Object> @AT@ 18541 @LENGTH@ 6
---------------INS SimpleName@@entry @TO@ SingleVariableDeclaration@@Entry<String,Object> entry @AT@ 18549 @LENGTH@ 5
------------INS MethodInvocation@@this.parameters.entrySet() @TO@ EnhancedForStatement@@for (Entry<String,Object> entry : this.parameters.entrySet()) {  for (  Parameter param : operation.getParameters()) {    boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());    if (!clash) {      nestedParameters.put(entry.getKey(),entry.getValue());    }  }} @AT@ 18557 @LENGTH@ 26
---------------INS FieldAccess@@this.parameters @TO@ MethodInvocation@@this.parameters.entrySet() @AT@ 18557 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.parameters @AT@ 18557 @LENGTH@ 4
------------------INS SimpleName@@parameters @TO@ FieldAccess@@this.parameters @AT@ 18562 @LENGTH@ 10
---------------INS SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@this.parameters.entrySet() @AT@ 18573 @LENGTH@ 10
------------INS EnhancedForStatement@@for (Parameter param : operation.getParameters()) {  boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());  if (!clash) {    nestedParameters.put(entry.getKey(),entry.getValue());  }} @TO@ EnhancedForStatement@@for (Entry<String,Object> entry : this.parameters.entrySet()) {  for (  Parameter param : operation.getParameters()) {    boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());    if (!clash) {      nestedParameters.put(entry.getKey(),entry.getValue());    }  }} @AT@ 18603 @LENGTH@ 476
---------------INS SingleVariableDeclaration@@Parameter param @TO@ EnhancedForStatement@@for (Parameter param : operation.getParameters()) {  boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());  if (!clash) {    nestedParameters.put(entry.getKey(),entry.getValue());  }} @AT@ 18608 @LENGTH@ 15
------------------INS SimpleType@@Parameter @TO@ SingleVariableDeclaration@@Parameter param @AT@ 18608 @LENGTH@ 9
------------------INS SimpleName@@param @TO@ SingleVariableDeclaration@@Parameter param @AT@ 18618 @LENGTH@ 5
---------------INS MethodInvocation@@operation.getParameters() @TO@ EnhancedForStatement@@for (Parameter param : operation.getParameters()) {  boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());  if (!clash) {    nestedParameters.put(entry.getKey(),entry.getValue());  }} @AT@ 18626 @LENGTH@ 25
------------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.getParameters() @AT@ 18626 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@operation.getParameters() @AT@ 18636 @LENGTH@ 15
---------------INS VariableDeclarationStatement@@boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()); @TO@ EnhancedForStatement@@for (Parameter param : operation.getParameters()) {  boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());  if (!clash) {    nestedParameters.put(entry.getKey(),entry.getValue());  }} @AT@ 18838 @LENGTH@ 87
------------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()); @AT@ 18838 @LENGTH@ 7
------------------INS VariableDeclarationFragment@@clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @TO@ VariableDeclarationStatement@@boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()); @AT@ 18846 @LENGTH@ 78
---------------------INS SimpleName@@clash @TO@ VariableDeclarationFragment@@clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @AT@ 18846 @LENGTH@ 5
---------------------INS InfixExpression@@"path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @TO@ VariableDeclarationFragment@@clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @AT@ 18854 @LENGTH@ 70
------------------------INS MethodInvocation@@"path".equals(param.getIn()) @TO@ InfixExpression@@"path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @AT@ 18854 @LENGTH@ 28
---------------------------INS StringLiteral@@"path" @TO@ MethodInvocation@@"path".equals(param.getIn()) @AT@ 18854 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:equals:[param.getIn()] @TO@ MethodInvocation@@"path".equals(param.getIn()) @AT@ 18861 @LENGTH@ 21
------------------------------INS MethodInvocation@@param.getIn() @TO@ SimpleName@@MethodName:equals:[param.getIn()] @AT@ 18868 @LENGTH@ 13
---------------------------------INS SimpleName@@Name:param @TO@ MethodInvocation@@param.getIn() @AT@ 18868 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@param.getIn() @AT@ 18874 @LENGTH@ 7
------------------------INS Operator@@&& @TO@ InfixExpression@@"path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @AT@ 18882 @LENGTH@ 2
------------------------INS MethodInvocation@@entry.getKey().equals(param.getName()) @TO@ InfixExpression@@"path".equals(param.getIn()) && entry.getKey().equals(param.getName()) @AT@ 18886 @LENGTH@ 38
---------------------------INS MethodInvocation@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey().equals(param.getName()) @AT@ 18886 @LENGTH@ 14
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey().equals(param.getName()) @AT@ 18886 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:equals:[param.getName()] @TO@ MethodInvocation@@entry.getKey().equals(param.getName()) @AT@ 18901 @LENGTH@ 23
------------------------------INS MethodInvocation@@param.getName() @TO@ SimpleName@@MethodName:equals:[param.getName()] @AT@ 18908 @LENGTH@ 15
---------------------------------INS SimpleName@@Name:param @TO@ MethodInvocation@@param.getName() @AT@ 18908 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@param.getName() @AT@ 18914 @LENGTH@ 9
---------------INS IfStatement@@if (!clash) {  nestedParameters.put(entry.getKey(),entry.getValue());} @TO@ EnhancedForStatement@@for (Parameter param : operation.getParameters()) {  boolean clash="path".equals(param.getIn()) && entry.getKey().equals(param.getName());  if (!clash) {    nestedParameters.put(entry.getKey(),entry.getValue());  }} @AT@ 18946 @LENGTH@ 115
------------------INS PrefixExpression@@!clash @TO@ IfStatement@@if (!clash) {  nestedParameters.put(entry.getKey(),entry.getValue());} @AT@ 18950 @LENGTH@ 6
---------------------INS Operator@@! @TO@ PrefixExpression@@!clash @AT@ 18950 @LENGTH@ 1
---------------------INS SimpleName@@clash @TO@ PrefixExpression@@!clash @AT@ 18951 @LENGTH@ 5
------------------INS Block@@ThenBody:{  nestedParameters.put(entry.getKey(),entry.getValue());} @TO@ IfStatement@@if (!clash) {  nestedParameters.put(entry.getKey(),entry.getValue());} @AT@ 18958 @LENGTH@ 103
---------------------INS ExpressionStatement@@MethodInvocation:nestedParameters.put(entry.getKey(),entry.getValue()) @TO@ Block@@ThenBody:{  nestedParameters.put(entry.getKey(),entry.getValue());} @AT@ 18984 @LENGTH@ 55
------------------------INS MethodInvocation@@nestedParameters.put(entry.getKey(),entry.getValue()) @TO@ ExpressionStatement@@MethodInvocation:nestedParameters.put(entry.getKey(),entry.getValue()) @AT@ 18984 @LENGTH@ 54
---------------------------INS SimpleName@@Name:nestedParameters @TO@ MethodInvocation@@nestedParameters.put(entry.getKey(),entry.getValue()) @AT@ 18984 @LENGTH@ 16
---------------------------INS SimpleName@@MethodName:put:[entry.getKey(), entry.getValue()] @TO@ MethodInvocation@@nestedParameters.put(entry.getKey(),entry.getValue()) @AT@ 19001 @LENGTH@ 37
------------------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:put:[entry.getKey(), entry.getValue()] @AT@ 19005 @LENGTH@ 14
---------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 19005 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 19011 @LENGTH@ 8
------------------------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:put:[entry.getKey(), entry.getValue()] @AT@ 19021 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 19021 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 19027 @LENGTH@ 10


UPD IfStatement@@if (CR != (i > 0 ? buf[i - 1] : lastChar)) {  eolCounter++;} @TO@ if (CR != (i > offset ? buf[i - 1] : lastChar)) {  eolCounter++;} @AT@ 5456 @LENGTH@ 104
---UPD InfixExpression@@CR != (i > 0 ? buf[i - 1] : lastChar) @TO@ CR != (i > offset ? buf[i - 1] : lastChar) @AT@ 5460 @LENGTH@ 37
------UPD ParenthesizedExpression@@(i > 0 ? buf[i - 1] : lastChar) @TO@ (i > offset ? buf[i - 1] : lastChar) @AT@ 5466 @LENGTH@ 31
---------UPD ConditionalExpression@@i > 0 ? buf[i - 1] : lastChar @TO@ i > offset ? buf[i - 1] : lastChar @AT@ 5467 @LENGTH@ 29
------------UPD InfixExpression@@i > 0 @TO@ i > offset @AT@ 5467 @LENGTH@ 5
---------------INS SimpleName@@offset @TO@ InfixExpression@@i > 0 @AT@ 5471 @LENGTH@ 6
---------------DEL NumberLiteral@@0 @AT@ 5471 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2136 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2136 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2136 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2141 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster",current,order.getRoute().getId()) @TO@ MethodInvocation:LOG.debug("Changing shutdownRunningTask from {} to {} on route {} to shutdown faster",ShutdownRunningTask.CompleteCurrentTaskOnly,current,order.getRoute().getId()) @AT@ 16693 @LENGTH@ 221
---UPD MethodInvocation@@LOG.debug("Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster",current,order.getRoute().getId()) @TO@ LOG.debug("Changing shutdownRunningTask from {} to {} on route {} to shutdown faster",ShutdownRunningTask.CompleteCurrentTaskOnly,current,order.getRoute().getId()) @AT@ 16693 @LENGTH@ 220
------UPD SimpleName@@MethodName:debug:["Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster", current, order.getRoute().getId()] @TO@ MethodName:debug:["Changing shutdownRunningTask from {} to {} on route {} to shutdown faster", ShutdownRunningTask.CompleteCurrentTaskOnly, current, order.getRoute().getId()] @AT@ 16697 @LENGTH@ 216
---------DEL InfixExpression@@"Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster" @AT@ 16703 @LENGTH@ 150
------------DEL StringLiteral@@"Changing shutdownRunningTask from {} to " @AT@ 16703 @LENGTH@ 42
------------DEL Operator@@+ @AT@ 16745 @LENGTH@ 1
------------DEL QualifiedName@@ShutdownRunningTask.CompleteCurrentTaskOnly @AT@ 16748 @LENGTH@ 43
------------DEL StringLiteral@@" on route {} to shutdown faster" @AT@ 16820 @LENGTH@ 33
---------INS StringLiteral@@"Changing shutdownRunningTask from {} to {} on route {} to shutdown faster" @TO@ SimpleName@@MethodName:debug:["Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster", current, order.getRoute().getId()] @AT@ 16703 @LENGTH@ 75
---------INS QualifiedName@@ShutdownRunningTask.CompleteCurrentTaskOnly @TO@ SimpleName@@MethodName:debug:["Changing shutdownRunningTask from {} to " + ShutdownRunningTask.CompleteCurrentTaskOnly + " on route {} to shutdown faster", current, order.getRoute().getId()] @AT@ 16804 @LENGTH@ 43
------------MOV SimpleName@@ShutdownRunningTask @TO@ QualifiedName@@ShutdownRunningTask.CompleteCurrentTaskOnly @AT@ 16748 @LENGTH@ 19
------------MOV SimpleName@@CompleteCurrentTaskOnly @TO@ QualifiedName@@ShutdownRunningTask.CompleteCurrentTaskOnly @AT@ 16768 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:LOGGER.warn("The JVM property " + key + " is set, but not supported anymore.") @TO@ MethodInvocation:LOGGER.warn("The JVM property {} is set, but not supported anymore.",key) @AT@ 2965 @LENGTH@ 79
---UPD MethodInvocation@@LOGGER.warn("The JVM property " + key + " is set, but not supported anymore.") @TO@ LOGGER.warn("The JVM property {} is set, but not supported anymore.",key) @AT@ 2965 @LENGTH@ 78
------UPD SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @TO@ MethodName:warn:["The JVM property {} is set, but not supported anymore.", key] @AT@ 2972 @LENGTH@ 71
---------DEL InfixExpression@@"The JVM property " + key + " is set, but not supported anymore." @AT@ 2977 @LENGTH@ 65
------------DEL StringLiteral@@"The JVM property " @AT@ 2977 @LENGTH@ 19
------------DEL Operator@@+ @AT@ 2996 @LENGTH@ 1
------------DEL SimpleName@@key @AT@ 2999 @LENGTH@ 3
------------DEL StringLiteral@@" is set, but not supported anymore." @AT@ 3005 @LENGTH@ 37
---------INS StringLiteral@@"The JVM property {} is set, but not supported anymore." @TO@ SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @AT@ 2977 @LENGTH@ 56
---------INS SimpleName@@key @TO@ SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @AT@ 3035 @LENGTH@ 3


MOV TypeDeclaration@@[static]QueryParametersPartial,  @TO@ TypeDeclaration@@[final]OpenSamlSigningUtils,  @AT@ 5603 @LENGTH@ 1415


UPD IfStatement@@if (client != null) {  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }} @TO@ if (client != null) {  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }  client.handshake();  final long waitMs=MILLISECONDS.convert(CONNECT_TIMEOUT,SECONDS);  client.waitFor(waitMs,BayeuxClient.State.CONNECTED);} @AT@ 12507 @LENGTH@ 469
---UPD Block@@ThenBody:{  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }} @TO@ ThenBody:{  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }  client.handshake();  final long waitMs=MILLISECONDS.convert(CONNECT_TIMEOUT,SECONDS);  client.waitFor(waitMs,BayeuxClient.State.CONNECTED);} @AT@ 12527 @LENGTH@ 449
------MOV ExpressionStatement@@MethodInvocation:client.handshake() @TO@ Block@@ThenBody:{  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }} @AT@ 12998 @LENGTH@ 19
------MOV VariableDeclarationStatement@@final long waitMs=MILLISECONDS.convert(CONNECT_TIMEOUT,SECONDS); @TO@ Block@@ThenBody:{  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }} @AT@ 13038 @LENGTH@ 67
------MOV ExpressionStatement@@MethodInvocation:client.waitFor(waitMs,BayeuxClient.State.CONNECTED) @TO@ Block@@ThenBody:{  client.disconnect();  boolean disconnected=client.waitFor(timeout,State.DISCONNECTED);  if (!disconnected) {    LOG.warn("Could not disconnect client connected to: {} after: {} msec.",getEndpointUrl(component),timeout);    client.abort();  }} @AT@ 13126 @LENGTH@ 53


INS IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @TO@ MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object body, OutputStream outputStream, Exception,  @AT@ 3447 @LENGTH@ 255
---INS InstanceofExpression@@body instanceof Map @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 3451 @LENGTH@ 19
------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Map @AT@ 3451 @LENGTH@ 4
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Map @AT@ 3456 @LENGTH@ 10
------INS SimpleType@@Map @TO@ InstanceofExpression@@body instanceof Map @AT@ 3467 @LENGTH@ 3
---INS Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 3472 @LENGTH@ 230
------INS ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @TO@ Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @AT@ 3646 @LENGTH@ 46
---------INS Assignment@@body=Collections.singleton(body).iterator() @TO@ ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @AT@ 3646 @LENGTH@ 45
------------INS SimpleName@@body @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3646 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3650 @LENGTH@ 1
------------INS MethodInvocation@@Collections.singleton(body).iterator() @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3653 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:singleton:[body] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3653 @LENGTH@ 27
------------------INS SimpleName@@body @TO@ MethodInvocation@@MethodName:singleton:[body] @AT@ 3675 @LENGTH@ 4
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3653 @LENGTH@ 11
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3681 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertFalse(Files.isExecutable(testDir),() -> String.format("Directory '%s' should NOT be Executable, permissions are %s ",testDir,permissions)) @TO@ MethodInvocation:assertFalse(Files.isExecutable(testDir),() -> String.format("Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ",testDir,file,permissions)) @AT@ 4515 @LENGTH@ 148
---UPD MethodInvocation@@assertFalse(Files.isExecutable(testDir),() -> String.format("Directory '%s' should NOT be Executable, permissions are %s ",testDir,permissions)) @TO@ assertFalse(Files.isExecutable(testDir),() -> String.format("Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ",testDir,file,permissions)) @AT@ 4515 @LENGTH@ 147
------UPD SimpleName@@MethodName:assertFalse:[Files.isExecutable(testDir), () -> String.format("Directory '%s' should NOT be Executable, permissions are %s ",testDir,permissions)] @TO@ MethodName:assertFalse:[Files.isExecutable(testDir), () -> String.format("Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ",testDir,file,permissions)] @AT@ 4515 @LENGTH@ 147
---------UPD LambdaExpression@@() -> String.format("Directory '%s' should NOT be Executable, permissions are %s ",testDir,permissions) @TO@ () -> String.format("Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ",testDir,file,permissions) @AT@ 4556 @LENGTH@ 105
------------UPD MethodInvocation@@String.format("Directory '%s' should NOT be Executable, permissions are %s ",testDir,permissions) @TO@ String.format("Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ",testDir,file,permissions) @AT@ 4562 @LENGTH@ 99
---------------UPD SimpleName@@MethodName:format:["Directory '%s' should NOT be Executable, permissions are %s ", testDir, permissions] @TO@ MethodName:format:["Parent directory '%s' of '%s' should NOT be Executable, permissions are %s ", testDir, file, permissions] @AT@ 4569 @LENGTH@ 92
------------------UPD StringLiteral@@"Directory '%s' should NOT be Executable, permissions are %s " @TO@ "Parent directory '%s' of '%s' should NOT be Executable, permissions are %s " @AT@ 4576 @LENGTH@ 62
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:format:["Directory '%s' should NOT be Executable, permissions are %s ", testDir, permissions] @AT@ 4717 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:consumer.receive(TIMEOUT_VALUE) @TO@ MethodInvocation:assertTimeout(Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE),() -> consumer.receive(TIMEOUT_VALUE)) @AT@ 3296 @LENGTH@ 32
---INS MethodInvocation@@assertTimeout(Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE),() -> consumer.receive(TIMEOUT_VALUE)) @TO@ ExpressionStatement@@MethodInvocation:consumer.receive(TIMEOUT_VALUE) @AT@ 3261 @LENGTH@ 122
------INS SimpleName@@MethodName:assertTimeout:[Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE), () -> consumer.receive(TIMEOUT_VALUE)] @TO@ MethodInvocation@@assertTimeout(Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE),() -> consumer.receive(TIMEOUT_VALUE)) @AT@ 3261 @LENGTH@ 122
---------INS MethodInvocation@@Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE) @TO@ SimpleName@@MethodName:assertTimeout:[Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE), () -> consumer.receive(TIMEOUT_VALUE)] @AT@ 3275 @LENGTH@ 52
------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE) @AT@ 3275 @LENGTH@ 8
------------INS SimpleName@@MethodName:ofMillis:[TIMEOUT_VALUE + TIMEOUT_TOLERANCE] @TO@ MethodInvocation@@Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE) @AT@ 3284 @LENGTH@ 43
---------------INS InfixExpression@@TIMEOUT_VALUE + TIMEOUT_TOLERANCE @TO@ SimpleName@@MethodName:ofMillis:[TIMEOUT_VALUE + TIMEOUT_TOLERANCE] @AT@ 3293 @LENGTH@ 33
------------------INS SimpleName@@TIMEOUT_VALUE @TO@ InfixExpression@@TIMEOUT_VALUE + TIMEOUT_TOLERANCE @AT@ 3293 @LENGTH@ 13
------------------INS Operator@@+ @TO@ InfixExpression@@TIMEOUT_VALUE + TIMEOUT_TOLERANCE @AT@ 3306 @LENGTH@ 1
------------------INS SimpleName@@TIMEOUT_TOLERANCE @TO@ InfixExpression@@TIMEOUT_VALUE + TIMEOUT_TOLERANCE @AT@ 3309 @LENGTH@ 17
---------INS LambdaExpression@@() -> consumer.receive(TIMEOUT_VALUE) @TO@ SimpleName@@MethodName:assertTimeout:[Duration.ofMillis(TIMEOUT_VALUE + TIMEOUT_TOLERANCE), () -> consumer.receive(TIMEOUT_VALUE)] @AT@ 3345 @LENGTH@ 37
------------MOV MethodInvocation@@consumer.receive(TIMEOUT_VALUE) @TO@ LambdaExpression@@() -> consumer.receive(TIMEOUT_VALUE) @AT@ 3296 @LENGTH@ 31
------------MOV MethodInvocation@@consumer.receive(TIMEOUT_VALUE) @TO@ LambdaExpression@@() -> consumer.receive(TIMEOUT_VALUE) @AT@ 3296 @LENGTH@ 31
------------MOV MethodInvocation@@consumer.receive(TIMEOUT_VALUE) @TO@ LambdaExpression@@() -> consumer.receive(TIMEOUT_VALUE) @AT@ 3296 @LENGTH@ 31


DEL VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @AT@ 2485 @LENGTH@ 50
---DEL SimpleType@@ExtendedExchange @AT@ 2485 @LENGTH@ 16
---DEL VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @AT@ 2502 @LENGTH@ 32
------DEL SimpleName@@ee @AT@ 2502 @LENGTH@ 2
------DEL CastExpression@@(ExtendedExchange)exchange @AT@ 2507 @LENGTH@ 27
---------DEL SimpleType@@ExtendedExchange @AT@ 2508 @LENGTH@ 16
---------DEL SimpleName@@exchange @AT@ 2526 @LENGTH@ 8


UPD IfStatement@@if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @TO@ if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} else {  mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder());} @AT@ 4752 @LENGTH@ 167
---INS Block@@ElseBody:{  mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder());} @TO@ IfStatement@@if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @AT@ 4925 @LENGTH@ 121
------INS ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ Block@@ElseBody:{  mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder());} @AT@ 4931 @LENGTH@ 110
---------INS MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 4931 @LENGTH@ 109
------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 4931 @LENGTH@ 14
------------INS SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 4946 @LENGTH@ 94
---------------INS MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @AT@ 4966 @LENGTH@ 73
------------------INS ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 4966 @LENGTH@ 51
---------------------INS New@@new @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 4966 @LENGTH@ 3
---------------------INS SimpleType@@MongoCustomConversions @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 4970 @LENGTH@ 22
---------------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 4993 @LENGTH@ 23
------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4993 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 5005 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 5018 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Arrays.equals(this.magicNumbers,byteBuffer.array()),file) @TO@ MethodInvocation:toFileVisitResult(Arrays.equals(this.magicNumbers,byteBuffer.array())) @AT@ 10964 @LENGTH@ 85
---UPD MethodInvocation@@toFileVisitResult(Arrays.equals(this.magicNumbers,byteBuffer.array()),file) @TO@ toFileVisitResult(Arrays.equals(this.magicNumbers,byteBuffer.array())) @AT@ 10971 @LENGTH@ 77
------UPD SimpleName@@MethodName:toFileVisitResult:[Arrays.equals(this.magicNumbers,byteBuffer.array()), file] @TO@ MethodName:toFileVisitResult:[Arrays.equals(this.magicNumbers,byteBuffer.array())] @AT@ 10971 @LENGTH@ 77
---------DEL SimpleName@@file @AT@ 11043 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @TO@ MethodDeclaration@@protected, void, MethodName:configure, HttpSecurity http, Exception,  @AT@ 5278 @LENGTH@ 1051
---INS MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @TO@ ExpressionStatement@@MethodInvocation:http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 1050
------INS MethodInvocation@@MethodName:anyRequest:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 1031
------INS MethodInvocation@@MethodName:requiresSecure:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 1018
------INS MethodInvocation@@MethodName:antMatchers:["/login", "/secured/**"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 713
---------INS StringLiteral@@"/login" @TO@ MethodInvocation@@MethodName:antMatchers:["/login", "/secured/**"] @AT@ 5967 @LENGTH@ 8
---------INS StringLiteral@@"/secured/**" @TO@ MethodInvocation@@MethodName:antMatchers:["/login", "/secured/**"] @AT@ 5977 @LENGTH@ 13
------INS MethodInvocation@@MethodName:requiresChannel:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 676
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 653
------INS MethodInvocation@@MethodName:hasRole:["USER"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 641
---------INS StringLiteral@@"USER" @TO@ MethodInvocation@@MethodName:hasRole:["USER"] @AT@ 5912 @LENGTH@ 6
------INS MethodInvocation@@MethodName:anyRequest:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 625
------INS MethodInvocation@@MethodName:permitAll:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 606
------INS MethodInvocation@@MethodName:antMatchers:["/signup"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 594
---------INS StringLiteral@@"/signup" @TO@ MethodInvocation@@MethodName:antMatchers:["/signup"] @AT@ 5862 @LENGTH@ 9
------INS MethodInvocation@@MethodName:hasRole:["ADMIN"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 565
---------INS StringLiteral@@"ADMIN" @TO@ MethodInvocation@@MethodName:hasRole:["ADMIN"] @AT@ 5835 @LENGTH@ 7
------INS MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/admin/post", "/admin/another-post/**"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 548
---------INS QualifiedName@@HttpMethod.POST @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/admin/post", "/admin/another-post/**"] @AT@ 5769 @LENGTH@ 15
------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.POST @AT@ 5769 @LENGTH@ 10
------------INS SimpleName@@POST @TO@ QualifiedName@@HttpMethod.POST @AT@ 5780 @LENGTH@ 4
---------INS StringLiteral@@"/admin/post" @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/admin/post", "/admin/another-post/**"] @AT@ 5786 @LENGTH@ 13
---------INS StringLiteral@@"/admin/another-post/**" @TO@ MethodInvocation@@MethodName:antMatchers:[HttpMethod.POST, "/admin/post", "/admin/another-post/**"] @AT@ 5801 @LENGTH@ 24
------INS MethodInvocation@@MethodName:hasRole:["ADMIN"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 267
---------INS StringLiteral@@"ADMIN" @TO@ MethodInvocation@@MethodName:hasRole:["ADMIN"] @AT@ 5537 @LENGTH@ 7
------INS MethodInvocation@@MethodName:antMatchers:["/users**", "/sessions/**"] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 250
---------INS StringLiteral@@"/users**" @TO@ MethodInvocation@@MethodName:antMatchers:["/users**", "/sessions/**"] @AT@ 5501 @LENGTH@ 10
---------INS StringLiteral@@"/sessions/**" @TO@ MethodInvocation@@MethodName:antMatchers:["/users**", "/sessions/**"] @AT@ 5513 @LENGTH@ 14
------INS MethodInvocation@@MethodName:authorizeRequests:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 29
------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 5278 @LENGTH@ 4
------INS SimpleName@@MethodName:requiresInsecure:[] @TO@ MethodInvocation@@http.authorizeRequests().antMatchers("/users**","/sessions/**").hasRole("ADMIN").antMatchers(HttpMethod.POST,"/admin/post","/admin/another-post/**").hasRole("ADMIN").antMatchers("/signup").permitAll().anyRequest().hasRole("USER").and().requiresChannel().antMatchers("/login","/secured/**").requiresSecure().anyRequest().requiresInsecure() @AT@ 6310 @LENGTH@ 18


UPD TypeDeclaration@@[private]DefaultZookeeperConnectionStrategy, [ZookeeperConnectionStrategy] @TO@ [private, static]DefaultZookeeperConnectionStrategy, [ZookeeperConnectionStrategy] @AT@ 1626 @LENGTH@ 761
---INS Modifier@@static @TO@ TypeDeclaration@@[private]DefaultZookeeperConnectionStrategy, [ZookeeperConnectionStrategy] @AT@ 1634 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @TO@ TypeDeclaration@@[@ExtendWith(MongoClientExtension.class), public]MongoTemplateTests,  @AT@ 130277 @LENGTH@ 557
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130277 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130284 @LENGTH@ 4
---INS SimpleName@@MethodName:sliceShouldLimitCollectionValues @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130289 @LENGTH@ 32
---INS VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType source=new DocumentWithCollectionOfSimpleType(); @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130329 @LENGTH@ 85
------INS SimpleType@@DocumentWithCollectionOfSimpleType @TO@ VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType source=new DocumentWithCollectionOfSimpleType(); @AT@ 130329 @LENGTH@ 34
------INS VariableDeclarationFragment@@source=new DocumentWithCollectionOfSimpleType() @TO@ VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType source=new DocumentWithCollectionOfSimpleType(); @AT@ 130364 @LENGTH@ 49
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new DocumentWithCollectionOfSimpleType() @AT@ 130364 @LENGTH@ 6
---------INS ClassInstanceCreation@@DocumentWithCollectionOfSimpleType[] @TO@ VariableDeclarationFragment@@source=new DocumentWithCollectionOfSimpleType() @AT@ 130373 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@DocumentWithCollectionOfSimpleType[] @AT@ 130373 @LENGTH@ 3
------------INS SimpleType@@DocumentWithCollectionOfSimpleType @TO@ ClassInstanceCreation@@DocumentWithCollectionOfSimpleType[] @AT@ 130377 @LENGTH@ 34
---INS ExpressionStatement@@Assignment:source.id="id-1" @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130417 @LENGTH@ 19
------INS Assignment@@source.id="id-1" @TO@ ExpressionStatement@@Assignment:source.id="id-1" @AT@ 130417 @LENGTH@ 18
---------INS QualifiedName@@source.id @TO@ Assignment@@source.id="id-1" @AT@ 130417 @LENGTH@ 9
------------INS SimpleName@@source @TO@ QualifiedName@@source.id @AT@ 130417 @LENGTH@ 6
------------INS SimpleName@@id @TO@ QualifiedName@@source.id @AT@ 130424 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@source.id="id-1" @AT@ 130426 @LENGTH@ 1
---------INS StringLiteral@@"id-1" @TO@ Assignment@@source.id="id-1" @AT@ 130429 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:source.values=Arrays.asList("spring","data","mongodb") @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130439 @LENGTH@ 59
------INS Assignment@@source.values=Arrays.asList("spring","data","mongodb") @TO@ ExpressionStatement@@Assignment:source.values=Arrays.asList("spring","data","mongodb") @AT@ 130439 @LENGTH@ 58
---------INS QualifiedName@@source.values @TO@ Assignment@@source.values=Arrays.asList("spring","data","mongodb") @AT@ 130439 @LENGTH@ 13
------------INS SimpleName@@source @TO@ QualifiedName@@source.values @AT@ 130439 @LENGTH@ 6
------------INS SimpleName@@values @TO@ QualifiedName@@source.values @AT@ 130446 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@source.values=Arrays.asList("spring","data","mongodb") @AT@ 130452 @LENGTH@ 1
---------INS MethodInvocation@@Arrays.asList("spring","data","mongodb") @TO@ Assignment@@source.values=Arrays.asList("spring","data","mongodb") @AT@ 130455 @LENGTH@ 42
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("spring","data","mongodb") @AT@ 130455 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:["spring", "data", "mongodb"] @TO@ MethodInvocation@@Arrays.asList("spring","data","mongodb") @AT@ 130462 @LENGTH@ 35
---------------INS StringLiteral@@"spring" @TO@ SimpleName@@MethodName:asList:["spring", "data", "mongodb"] @AT@ 130469 @LENGTH@ 8
---------------INS StringLiteral@@"data" @TO@ SimpleName@@MethodName:asList:["spring", "data", "mongodb"] @AT@ 130479 @LENGTH@ 6
---------------INS StringLiteral@@"mongodb" @TO@ SimpleName@@MethodName:asList:["spring", "data", "mongodb"] @AT@ 130487 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.save(source) @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130502 @LENGTH@ 22
------INS MethodInvocation@@template.save(source) @TO@ ExpressionStatement@@MethodInvocation:template.save(source) @AT@ 130502 @LENGTH@ 21
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(source) @AT@ 130502 @LENGTH@ 8
---------INS SimpleName@@MethodName:save:[source] @TO@ MethodInvocation@@template.save(source) @AT@ 130511 @LENGTH@ 12
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:save:[source] @AT@ 130516 @LENGTH@ 6
---INS VariableDeclarationStatement@@Criteria criteria=Criteria.where("id").is(source.id); @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130528 @LENGTH@ 55
------INS SimpleType@@Criteria @TO@ VariableDeclarationStatement@@Criteria criteria=Criteria.where("id").is(source.id); @AT@ 130528 @LENGTH@ 8
------INS VariableDeclarationFragment@@criteria=Criteria.where("id").is(source.id) @TO@ VariableDeclarationStatement@@Criteria criteria=Criteria.where("id").is(source.id); @AT@ 130537 @LENGTH@ 45
---------INS SimpleName@@criteria @TO@ VariableDeclarationFragment@@criteria=Criteria.where("id").is(source.id) @AT@ 130537 @LENGTH@ 8
---------INS MethodInvocation@@Criteria.where("id").is(source.id) @TO@ VariableDeclarationFragment@@criteria=Criteria.where("id").is(source.id) @AT@ 130548 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:where:["id"] @TO@ MethodInvocation@@Criteria.where("id").is(source.id) @AT@ 130548 @LENGTH@ 20
---------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:where:["id"] @AT@ 130563 @LENGTH@ 4
------------INS SimpleName@@Name:Criteria @TO@ MethodInvocation@@Criteria.where("id").is(source.id) @AT@ 130548 @LENGTH@ 8
------------INS SimpleName@@MethodName:is:[source.id] @TO@ MethodInvocation@@Criteria.where("id").is(source.id) @AT@ 130569 @LENGTH@ 13
---------------INS QualifiedName@@source.id @TO@ SimpleName@@MethodName:is:[source.id] @AT@ 130572 @LENGTH@ 9
------------------INS SimpleName@@source @TO@ QualifiedName@@source.id @AT@ 130572 @LENGTH@ 6
------------------INS SimpleName@@id @TO@ QualifiedName@@source.id @AT@ 130579 @LENGTH@ 2
---INS VariableDeclarationStatement@@Query query=Query.query(criteria); @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130586 @LENGTH@ 36
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=Query.query(criteria); @AT@ 130586 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=Query.query(criteria) @TO@ VariableDeclarationStatement@@Query query=Query.query(criteria); @AT@ 130592 @LENGTH@ 29
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=Query.query(criteria) @AT@ 130592 @LENGTH@ 5
---------INS MethodInvocation@@Query.query(criteria) @TO@ VariableDeclarationFragment@@query=Query.query(criteria) @AT@ 130600 @LENGTH@ 21
------------INS SimpleName@@Name:Query @TO@ MethodInvocation@@Query.query(criteria) @AT@ 130600 @LENGTH@ 5
------------INS SimpleName@@MethodName:query:[criteria] @TO@ MethodInvocation@@Query.query(criteria) @AT@ 130606 @LENGTH@ 15
---------------INS SimpleName@@criteria @TO@ SimpleName@@MethodName:query:[criteria] @AT@ 130612 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:query.fields().slice("values",0,1) @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130625 @LENGTH@ 37
------INS MethodInvocation@@query.fields().slice("values",0,1) @TO@ ExpressionStatement@@MethodInvocation:query.fields().slice("values",0,1) @AT@ 130625 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:fields:[] @TO@ MethodInvocation@@query.fields().slice("values",0,1) @AT@ 130625 @LENGTH@ 14
---------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.fields().slice("values",0,1) @AT@ 130625 @LENGTH@ 5
---------INS SimpleName@@MethodName:slice:["values", 0, 1] @TO@ MethodInvocation@@query.fields().slice("values",0,1) @AT@ 130640 @LENGTH@ 21
------------INS StringLiteral@@"values" @TO@ SimpleName@@MethodName:slice:["values", 0, 1] @AT@ 130646 @LENGTH@ 8
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:slice:["values", 0, 1] @AT@ 130656 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:slice:["values", 0, 1] @AT@ 130659 @LENGTH@ 1
---INS VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType target=template.findOne(query,DocumentWithCollectionOfSimpleType.class); @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130665 @LENGTH@ 110
------INS SimpleType@@DocumentWithCollectionOfSimpleType @TO@ VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType target=template.findOne(query,DocumentWithCollectionOfSimpleType.class); @AT@ 130665 @LENGTH@ 34
------INS VariableDeclarationFragment@@target=template.findOne(query,DocumentWithCollectionOfSimpleType.class) @TO@ VariableDeclarationStatement@@DocumentWithCollectionOfSimpleType target=template.findOne(query,DocumentWithCollectionOfSimpleType.class); @AT@ 130700 @LENGTH@ 74
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=template.findOne(query,DocumentWithCollectionOfSimpleType.class) @AT@ 130700 @LENGTH@ 6
---------INS MethodInvocation@@template.findOne(query,DocumentWithCollectionOfSimpleType.class) @TO@ VariableDeclarationFragment@@target=template.findOne(query,DocumentWithCollectionOfSimpleType.class) @AT@ 130709 @LENGTH@ 65
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findOne(query,DocumentWithCollectionOfSimpleType.class) @AT@ 130709 @LENGTH@ 8
------------INS SimpleName@@MethodName:findOne:[query, DocumentWithCollectionOfSimpleType.class] @TO@ MethodInvocation@@template.findOne(query,DocumentWithCollectionOfSimpleType.class) @AT@ 130718 @LENGTH@ 56
---------------INS SimpleName@@query @TO@ SimpleName@@MethodName:findOne:[query, DocumentWithCollectionOfSimpleType.class] @AT@ 130726 @LENGTH@ 5
---------------INS TypeLiteral@@DocumentWithCollectionOfSimpleType.class @TO@ SimpleName@@MethodName:findOne:[query, DocumentWithCollectionOfSimpleType.class] @AT@ 130733 @LENGTH@ 40
---INS ExpressionStatement@@MethodInvocation:assertThat(target.values).containsExactly("spring") @TO@ MethodDeclaration@@public, void, MethodName:sliceShouldLimitCollectionValues,  @AT@ 130779 @LENGTH@ 52
------INS MethodInvocation@@assertThat(target.values).containsExactly("spring") @TO@ ExpressionStatement@@MethodInvocation:assertThat(target.values).containsExactly("spring") @AT@ 130779 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:assertThat:[target.values] @TO@ MethodInvocation@@assertThat(target.values).containsExactly("spring") @AT@ 130779 @LENGTH@ 25
------------INS QualifiedName@@target.values @TO@ MethodInvocation@@MethodName:assertThat:[target.values] @AT@ 130790 @LENGTH@ 13
---------------INS SimpleName@@target @TO@ QualifiedName@@target.values @AT@ 130790 @LENGTH@ 6
---------------INS SimpleName@@values @TO@ QualifiedName@@target.values @AT@ 130797 @LENGTH@ 6
---------INS SimpleName@@MethodName:containsExactly:["spring"] @TO@ MethodInvocation@@assertThat(target.values).containsExactly("spring") @AT@ 130805 @LENGTH@ 25
------------INS StringLiteral@@"spring" @TO@ SimpleName@@MethodName:containsExactly:["spring"] @AT@ 130821 @LENGTH@ 8


UPD TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.0"), public, final]Neo4jTemplate, [Neo4jOperations, FluentNeo4jOperations, FluentSaveOperation, BeanClassLoaderAware, BeanFactoryAware] @TO@ [@API(status=API.Status.STABLE,since="6.0"), public, final]Neo4jTemplate, [Neo4jOperations, FluentNeo4jOperations, BeanClassLoaderAware, BeanFactoryAware] @AT@ 4700 @LENGTH@ 43908
---DEL SimpleType@@FluentSaveOperation @AT@ 4834 @LENGTH@ 19


DEL ExpressionStatement@@MethodInvocation:this.doWithAssociations((Association<Neo4jPersistentProperty> association) -> {
  if (association instanceof RelationshipDescription) {
    RelationshipDescription relationship=(RelationshipDescription)association;
    if (relationship.hasRelationshipProperties()) {
      NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();
      Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());
      Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);
    }
  }
}
) @AT@ 8382 @LENGTH@ 955
---DEL MethodInvocation@@this.doWithAssociations((Association<Neo4jPersistentProperty> association) -> {
  if (association instanceof RelationshipDescription) {
    RelationshipDescription relationship=(RelationshipDescription)association;
    if (relationship.hasRelationshipProperties()) {
      NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();
      Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());
      Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);
    }
  }
}
) @AT@ 8382 @LENGTH@ 954
------DEL ThisExpression@@this @AT@ 8382 @LENGTH@ 4
------DEL SimpleName@@MethodName:doWithAssociations:[(Association<Neo4jPersistentProperty> association) -> {
  if (association instanceof RelationshipDescription) {
    RelationshipDescription relationship=(RelationshipDescription)association;
    if (relationship.hasRelationshipProperties()) {
      NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();
      Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());
      Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);
    }
  }
}
] @AT@ 8387 @LENGTH@ 949
---------DEL LambdaExpression@@(Association<Neo4jPersistentProperty> association) -> {
  if (association instanceof RelationshipDescription) {
    RelationshipDescription relationship=(RelationshipDescription)association;
    if (relationship.hasRelationshipProperties()) {
      NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();
      Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());
      Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);
    }
  }
}
 @AT@ 8406 @LENGTH@ 929
------------DEL SingleVariableDeclaration@@Association<Neo4jPersistentProperty> association @AT@ 8407 @LENGTH@ 48
---------------DEL ParameterizedType@@Association<Neo4jPersistentProperty> @AT@ 8407 @LENGTH@ 36
------------------DEL SimpleType@@Association @AT@ 8407 @LENGTH@ 11
------------------DEL SimpleType@@Neo4jPersistentProperty @AT@ 8419 @LENGTH@ 23
---------------DEL SimpleName@@association @AT@ 8444 @LENGTH@ 11
------------DEL IfStatement@@if (association instanceof RelationshipDescription) {  RelationshipDescription relationship=(RelationshipDescription)association;  if (relationship.hasRelationshipProperties()) {    NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();    Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());    Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);  }} @AT@ 8466 @LENGTH@ 865
---------------DEL InstanceofExpression@@association instanceof RelationshipDescription @AT@ 8470 @LENGTH@ 46
------------------DEL SimpleName@@association @AT@ 8470 @LENGTH@ 11
------------------DEL Instanceof@@instanceof @AT@ 8482 @LENGTH@ 10
------------------DEL SimpleType@@RelationshipDescription @AT@ 8493 @LENGTH@ 23
---------------DEL Block@@ThenBody:{  RelationshipDescription relationship=(RelationshipDescription)association;  if (relationship.hasRelationshipProperties()) {    NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();    Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());    Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);  }} @AT@ 8518 @LENGTH@ 813
------------------DEL VariableDeclarationStatement@@RelationshipDescription relationship=(RelationshipDescription)association; @AT@ 8524 @LENGTH@ 77
---------------------DEL SimpleType@@RelationshipDescription @AT@ 8524 @LENGTH@ 23
---------------------DEL VariableDeclarationFragment@@relationship=(RelationshipDescription)association @AT@ 8548 @LENGTH@ 52
------------------------DEL SimpleName@@relationship @AT@ 8548 @LENGTH@ 12
------------------------DEL CastExpression@@(RelationshipDescription)association @AT@ 8563 @LENGTH@ 37
---------------------------DEL SimpleType@@RelationshipDescription @AT@ 8564 @LENGTH@ 23
---------------------------DEL SimpleName@@association @AT@ 8589 @LENGTH@ 11
------------------DEL IfStatement@@if (relationship.hasRelationshipProperties()) {  NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();  Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());  Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);} @AT@ 8606 @LENGTH@ 720


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@UnwrapEntityContext,  @AT@ 1113 @LENGTH@ 59
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1113 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1120 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1124 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Objects.hash(property) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1139 @LENGTH@ 30
------INS MethodInvocation@@Objects.hash(property) @TO@ ReturnStatement@@MethodInvocation:Objects.hash(property) @AT@ 1146 @LENGTH@ 22
---------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.hash(property) @AT@ 1146 @LENGTH@ 7
---------INS SimpleName@@MethodName:hash:[property] @TO@ MethodInvocation@@Objects.hash(property) @AT@ 1154 @LENGTH@ 14
------------INS SimpleName@@property @TO@ SimpleName@@MethodName:hash:[property] @AT@ 1159 @LENGTH@ 8


UPD VariableDeclarationStatement@@BayeuxClient bayeuxClient=SubscriptionHelper.createClient(component); @TO@ BayeuxClient bayeuxClient=SubscriptionHelper.createClient(component,session); @AT@ 7175 @LENGTH@ 71
---UPD VariableDeclarationFragment@@bayeuxClient=SubscriptionHelper.createClient(component) @TO@ bayeuxClient=SubscriptionHelper.createClient(component,session) @AT@ 7188 @LENGTH@ 57
------UPD MethodInvocation@@SubscriptionHelper.createClient(component) @TO@ SubscriptionHelper.createClient(component,session) @AT@ 7203 @LENGTH@ 42
---------UPD SimpleName@@MethodName:createClient:[component] @TO@ MethodName:createClient:[component, session] @AT@ 7222 @LENGTH@ 23
------------INS SimpleName@@session @TO@ SimpleName@@MethodName:createClient:[component] @AT@ 7246 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Shutting down Kafka {} consumer worker threads did not finish within {} millis",tasks.size()) @TO@ MethodInvocation:LOG.warn("Shutting down Kafka {} consumer worker threads did not finish within {} millis",tasks.size(),timeout) @AT@ 6106 @LENGTH@ 133
---UPD MethodInvocation@@LOG.warn("Shutting down Kafka {} consumer worker threads did not finish within {} millis",tasks.size()) @TO@ LOG.warn("Shutting down Kafka {} consumer worker threads did not finish within {} millis",tasks.size(),timeout) @AT@ 6106 @LENGTH@ 132
------UPD SimpleName@@MethodName:warn:["Shutting down Kafka {} consumer worker threads did not finish within {} millis", tasks.size()] @TO@ MethodName:warn:["Shutting down Kafka {} consumer worker threads did not finish within {} millis", tasks.size(), timeout] @AT@ 6110 @LENGTH@ 128
---------INS SimpleName@@timeout @TO@ SimpleName@@MethodName:warn:["Shutting down Kafka {} consumer worker threads did not finish within {} millis", tasks.size()] @AT@ 6239 @LENGTH@ 7


DEL IfStatement@@if (configuration == null) {  return new PostgresConnectorEmbeddedDebeziumConfiguration();} @AT@ 1719 @LENGTH@ 111
---DEL InfixExpression@@configuration == null @AT@ 1723 @LENGTH@ 21
------DEL SimpleName@@configuration @AT@ 1723 @LENGTH@ 13
------DEL Operator@@== @AT@ 1736 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1740 @LENGTH@ 4
---DEL Block@@ThenBody:{  return new PostgresConnectorEmbeddedDebeziumConfiguration();} @AT@ 1746 @LENGTH@ 84
------DEL ReturnStatement@@ClassInstanceCreation:new PostgresConnectorEmbeddedDebeziumConfiguration() @AT@ 1760 @LENGTH@ 60
---------DEL ClassInstanceCreation@@PostgresConnectorEmbeddedDebeziumConfiguration[] @AT@ 1767 @LENGTH@ 52
------------DEL New@@new @AT@ 1767 @LENGTH@ 3
------------DEL SimpleType@@PostgresConnectorEmbeddedDebeziumConfiguration @AT@ 1771 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:this.logger.error(LogMessage.format("Authorization Request failed: %s",ex,ex)) @TO@ MethodInvocation:this.logger.error(LogMessage.format("Authorization Request failed: %s",ex),ex) @AT@ 9807 @LENGTH@ 81
---UPD MethodInvocation@@this.logger.error(LogMessage.format("Authorization Request failed: %s",ex,ex)) @TO@ this.logger.error(LogMessage.format("Authorization Request failed: %s",ex),ex) @AT@ 9807 @LENGTH@ 80
------UPD SimpleName@@MethodName:error:[LogMessage.format("Authorization Request failed: %s",ex,ex)] @TO@ MethodName:error:[LogMessage.format("Authorization Request failed: %s",ex), ex] @AT@ 9819 @LENGTH@ 68
---------UPD MethodInvocation@@LogMessage.format("Authorization Request failed: %s",ex,ex) @TO@ LogMessage.format("Authorization Request failed: %s",ex) @AT@ 9825 @LENGTH@ 61
------------UPD SimpleName@@MethodName:format:["Authorization Request failed: %s", ex, ex] @TO@ MethodName:format:["Authorization Request failed: %s", ex] @AT@ 9836 @LENGTH@ 50
---------------DEL SimpleName@@ex @AT@ 9883 @LENGTH@ 2
---------INS SimpleName@@ex @TO@ SimpleName@@MethodName:error:[LogMessage.format("Authorization Request failed: %s",ex,ex)] @AT@ 9884 @LENGTH@ 2


UPD TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @TO@ try (InputStream fileInputStream=new FileInputStream(input)){  Image image=ImageFactory.getInstance().fromInputStream(fileInputStream);  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3020 @LENGTH@ 366
---INS VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @TO@ TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3025 @LENGTH@ 56
------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3025 @LENGTH@ 11
------INS VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3037 @LENGTH@ 44
---------INS SimpleName@@fileInputStream @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3037 @LENGTH@ 15
---------INS ClassInstanceCreation@@FileInputStream[input] @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3055 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3055 @LENGTH@ 3
------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3059 @LENGTH@ 15
------------INS SimpleName@@input @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3075 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)); @TO@ Image image=ImageFactory.getInstance().fromInputStream(fileInputStream); @AT@ 3038 @LENGTH@ 85
------UPD VariableDeclarationFragment@@image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ image=ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3044 @LENGTH@ 78
---------UPD MethodInvocation@@ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3052 @LENGTH@ 70
------------UPD SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @TO@ MethodName:fromInputStream:[fileInputStream] @AT@ 3079 @LENGTH@ 43
---------------DEL ClassInstanceCreation@@FileInputStream[input] @AT@ 3095 @LENGTH@ 26
------------------DEL New@@new @AT@ 3095 @LENGTH@ 3
------------------DEL SimpleType@@FileInputStream @AT@ 3099 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 3115 @LENGTH@ 5
---------------INS SimpleName@@fileInputStream @TO@ SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @AT@ 3154 @LENGTH@ 15


UPD Block@@SyncBody:{  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }  if (!ServiceHelper.isStarted(delegate)) {    ServiceHelper.startService(delegate);  }} @TO@ SyncBody:{  if (delegate == null) {    AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());    if (!ServiceHelper.isStarted(newDelegate)) {      ServiceHelper.startService(newDelegate);    }    delegate=newDelegate;  }} @AT@ 1676 @LENGTH@ 337
---INS IfStatement@@if (delegate == null) {  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @TO@ Block@@SyncBody:{  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }  if (!ServiceHelper.isStarted(delegate)) {    ServiceHelper.startService(delegate);  }} @AT@ 1698 @LENGTH@ 380
------MOV InfixExpression@@delegate == null @TO@ IfStatement@@if (delegate == null) {  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @AT@ 1702 @LENGTH@ 16
------INS Block@@ThenBody:{  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @TO@ IfStatement@@if (delegate == null) {  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @AT@ 1720 @LENGTH@ 358
---------INS VariableDeclarationStatement@@AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()); @TO@ Block@@ThenBody:{  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @AT@ 1746 @LENGTH@ 98
------------INS SimpleType@@AsyncProducer @TO@ VariableDeclarationStatement@@AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()); @AT@ 1746 @LENGTH@ 13
------------INS VariableDeclarationFragment@@newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @TO@ VariableDeclarationStatement@@AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()); @AT@ 1760 @LENGTH@ 83
---------------MOV MethodInvocation@@AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @TO@ VariableDeclarationFragment@@newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @AT@ 1757 @LENGTH@ 69
---------------INS SimpleName@@newDelegate @TO@ VariableDeclarationFragment@@newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @AT@ 1760 @LENGTH@ 11
---------MOV IfStatement@@if (!ServiceHelper.isStarted(delegate)) {  ServiceHelper.startService(delegate);} @TO@ Block@@ThenBody:{  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @AT@ 1870 @LENGTH@ 125
---------INS ExpressionStatement@@Assignment:delegate=newDelegate @TO@ Block@@ThenBody:{  AsyncProducer newDelegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  if (!ServiceHelper.isStarted(newDelegate)) {    ServiceHelper.startService(newDelegate);  }  delegate=newDelegate;} @AT@ 2033 @LENGTH@ 23
------------INS Assignment@@delegate=newDelegate @TO@ ExpressionStatement@@Assignment:delegate=newDelegate @AT@ 2033 @LENGTH@ 22
---------------INS SimpleName@@delegate @TO@ Assignment@@delegate=newDelegate @AT@ 2033 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@delegate=newDelegate @AT@ 2041 @LENGTH@ 1
---------------INS SimpleName@@newDelegate @TO@ Assignment@@delegate=newDelegate @AT@ 2044 @LENGTH@ 11
---DEL IfStatement@@if (delegate == null) {  delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());} @AT@ 1698 @LENGTH@ 151
------DEL Block@@ThenBody:{  delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());} @AT@ 1720 @LENGTH@ 129
---------DEL ExpressionStatement@@Assignment:delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @AT@ 1746 @LENGTH@ 81
------------DEL Assignment@@delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer()) @AT@ 1746 @LENGTH@ 80
---------------DEL SimpleName@@delegate @AT@ 1746 @LENGTH@ 8
---------------DEL Operator@@= @AT@ 1754 @LENGTH@ 1
---UPD IfStatement@@if (!ServiceHelper.isStarted(delegate)) {  ServiceHelper.startService(delegate);} @TO@ if (!ServiceHelper.isStarted(newDelegate)) {  ServiceHelper.startService(newDelegate);} @AT@ 1870 @LENGTH@ 125


UPD ReturnStatement@@MethodInvocation:Objects.hash(type,type,fieldName,target,source,direction) @TO@ MethodInvocation:Objects.hash(fieldName,type,target,source,direction) @AT@ 3919 @LENGTH@ 70
---UPD MethodInvocation@@Objects.hash(type,type,fieldName,target,source,direction) @TO@ Objects.hash(fieldName,type,target,source,direction) @AT@ 3926 @LENGTH@ 62
------UPD SimpleName@@MethodName:hash:[type, type, fieldName, target, source, direction] @TO@ MethodName:hash:[fieldName, type, target, source, direction] @AT@ 3934 @LENGTH@ 54
---------UPD SimpleName@@type @TO@ fieldName @AT@ 3939 @LENGTH@ 4
---------DEL SimpleName@@fieldName @AT@ 3951 @LENGTH@ 9


UPD IfStatement@@if (it instanceof EvaluationContextExtension) {  EvaluationContextExtension extension=(EvaluationContextExtension)it;  EvaluationContextExtensionInformation information=evaluationContextProvider.getOrCreateInformation(extension);  if (extensionFilter.test(information)) {    return Mono.just(extension);  }} @TO@ if (it instanceof EvaluationContextExtension) {  EvaluationContextExtension extension=(EvaluationContextExtension)it;  EvaluationContextExtensionInformation information=evaluationContextProvider.getOrCreateInformation(extension);  if (extensionFilter.test(information)) {    return Mono.just(extension);  }  return Mono.empty();} @AT@ 4737 @LENGTH@ 332
---UPD Block@@ThenBody:{  EvaluationContextExtension extension=(EvaluationContextExtension)it;  EvaluationContextExtensionInformation information=evaluationContextProvider.getOrCreateInformation(extension);  if (extensionFilter.test(information)) {    return Mono.just(extension);  }} @TO@ ThenBody:{  EvaluationContextExtension extension=(EvaluationContextExtension)it;  EvaluationContextExtensionInformation information=evaluationContextProvider.getOrCreateInformation(extension);  if (extensionFilter.test(information)) {    return Mono.just(extension);  }  return Mono.empty();} @AT@ 4783 @LENGTH@ 286
------INS ReturnStatement@@MethodInvocation:Mono.empty() @TO@ Block@@ThenBody:{  EvaluationContextExtension extension=(EvaluationContextExtension)it;  EvaluationContextExtensionInformation information=evaluationContextProvider.getOrCreateInformation(extension);  if (extensionFilter.test(information)) {    return Mono.just(extension);  }} @AT@ 5070 @LENGTH@ 20
---------INS MethodInvocation@@Mono.empty() @TO@ ReturnStatement@@MethodInvocation:Mono.empty() @AT@ 5077 @LENGTH@ 12
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 5077 @LENGTH@ 4
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 5082 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp) @TO@ MethodInvocation:LOG.warn("Error occurred during retrieving file: {} to local directory. Cannot delete local work file: {}",name,temp) @AT@ 36213 @LENGTH@ 148
---UPD MethodInvocation@@LOG.warn("Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp) @TO@ LOG.warn("Error occurred during retrieving file: {} to local directory. Cannot delete local work file: {}",name,temp) @AT@ 36213 @LENGTH@ 147
------UPD SimpleName@@MethodName:warn:["Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp] @TO@ MethodName:warn:["Error occurred during retrieving file: {} to local directory. Cannot delete local work file: {}", name, temp] @AT@ 36217 @LENGTH@ 143
---------DEL InfixExpression@@"Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp @AT@ 36222 @LENGTH@ 137
------------DEL StringLiteral@@"Error occurred during retrieving file: " @AT@ 36222 @LENGTH@ 41
------------DEL Operator@@+ @AT@ 36263 @LENGTH@ 1
------------DEL SimpleName@@name @AT@ 36266 @LENGTH@ 4
------------DEL StringLiteral@@" to local directory. Cannot delete local work file: " @AT@ 36298 @LENGTH@ 54
------------DEL SimpleName@@temp @AT@ 36355 @LENGTH@ 4
---------INS StringLiteral@@"Error occurred during retrieving file: {} to local directory. Cannot delete local work file: {}" @TO@ SimpleName@@MethodName:warn:["Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp] @AT@ 36222 @LENGTH@ 97
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:warn:["Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp] @AT@ 36345 @LENGTH@ 4
---------INS SimpleName@@temp @TO@ SimpleName@@MethodName:warn:["Error occurred during retrieving file: " + name + " to local directory. Cannot delete local work file: "+ temp] @AT@ 36351 @LENGTH@ 4


INS IfStatement@@if (lastJobExecution != null) {  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @TO@ MethodDeclaration@@public, JobExecution, MethodName:getLastJobExecution, JobInstance jobInstance,  @AT@ 3267 @LENGTH@ 217
---INS InfixExpression@@lastJobExecution != null @TO@ IfStatement@@if (lastJobExecution != null) {  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @AT@ 3271 @LENGTH@ 24
------INS SimpleName@@lastJobExecution @TO@ InfixExpression@@lastJobExecution != null @AT@ 3271 @LENGTH@ 16
------INS Operator@@!= @TO@ InfixExpression@@lastJobExecution != null @AT@ 3287 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@lastJobExecution != null @AT@ 3291 @LENGTH@ 4
---INS Block@@ThenBody:{  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @TO@ IfStatement@@if (lastJobExecution != null) {  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @AT@ 3297 @LENGTH@ 187
------INS ExpressionStatement@@MethodInvocation:getJobExecutionDependencies(lastJobExecution) @TO@ Block@@ThenBody:{  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @AT@ 3302 @LENGTH@ 46
---------INS MethodInvocation@@getJobExecutionDependencies(lastJobExecution) @TO@ ExpressionStatement@@MethodInvocation:getJobExecutionDependencies(lastJobExecution) @AT@ 3302 @LENGTH@ 45
------------INS SimpleName@@MethodName:getJobExecutionDependencies:[lastJobExecution] @TO@ MethodInvocation@@getJobExecutionDependencies(lastJobExecution) @AT@ 3302 @LENGTH@ 45
---------------INS SimpleName@@lastJobExecution @TO@ SimpleName@@MethodName:getJobExecutionDependencies:[lastJobExecution] @AT@ 3330 @LENGTH@ 16
------INS EnhancedForStatement@@for (StepExecution stepExecution : lastJobExecution.getStepExecutions()) {  getStepExecutionDependencies(stepExecution);} @TO@ Block@@ThenBody:{  getJobExecutionDependencies(lastJobExecution);  for (  StepExecution stepExecution : lastJobExecution.getStepExecutions()) {    getStepExecutionDependencies(stepExecution);  }} @AT@ 3352 @LENGTH@ 128
---------INS SingleVariableDeclaration@@StepExecution stepExecution @TO@ EnhancedForStatement@@for (StepExecution stepExecution : lastJobExecution.getStepExecutions()) {  getStepExecutionDependencies(stepExecution);} @AT@ 3357 @LENGTH@ 27
------------INS SimpleType@@StepExecution @TO@ SingleVariableDeclaration@@StepExecution stepExecution @AT@ 3357 @LENGTH@ 13
------------INS SimpleName@@stepExecution @TO@ SingleVariableDeclaration@@StepExecution stepExecution @AT@ 3371 @LENGTH@ 13
---------INS MethodInvocation@@lastJobExecution.getStepExecutions() @TO@ EnhancedForStatement@@for (StepExecution stepExecution : lastJobExecution.getStepExecutions()) {  getStepExecutionDependencies(stepExecution);} @AT@ 3387 @LENGTH@ 36
------------INS SimpleName@@Name:lastJobExecution @TO@ MethodInvocation@@lastJobExecution.getStepExecutions() @AT@ 3387 @LENGTH@ 16
------------INS SimpleName@@MethodName:getStepExecutions:[] @TO@ MethodInvocation@@lastJobExecution.getStepExecutions() @AT@ 3404 @LENGTH@ 19
---------INS ExpressionStatement@@MethodInvocation:getStepExecutionDependencies(stepExecution) @TO@ EnhancedForStatement@@for (StepExecution stepExecution : lastJobExecution.getStepExecutions()) {  getStepExecutionDependencies(stepExecution);} @AT@ 3431 @LENGTH@ 44
------------INS MethodInvocation@@getStepExecutionDependencies(stepExecution) @TO@ ExpressionStatement@@MethodInvocation:getStepExecutionDependencies(stepExecution) @AT@ 3431 @LENGTH@ 43
---------------INS SimpleName@@MethodName:getStepExecutionDependencies:[stepExecution] @TO@ MethodInvocation@@getStepExecutionDependencies(stepExecution) @AT@ 3431 @LENGTH@ 43
------------------INS SimpleName@@stepExecution @TO@ SimpleName@@MethodName:getStepExecutionDependencies:[stepExecution] @AT@ 3460 @LENGTH@ 13


DEL IfStatement@@if (configuration == null) {  return new MySqlConnectorEmbeddedDebeziumConfiguration();} @AT@ 1692 @LENGTH@ 108
---DEL InfixExpression@@configuration == null @AT@ 1696 @LENGTH@ 21
------DEL SimpleName@@configuration @AT@ 1696 @LENGTH@ 13
------DEL Operator@@== @AT@ 1709 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1713 @LENGTH@ 4
---DEL Block@@ThenBody:{  return new MySqlConnectorEmbeddedDebeziumConfiguration();} @AT@ 1719 @LENGTH@ 81
------DEL ReturnStatement@@ClassInstanceCreation:new MySqlConnectorEmbeddedDebeziumConfiguration() @AT@ 1733 @LENGTH@ 57
---------DEL ClassInstanceCreation@@MySqlConnectorEmbeddedDebeziumConfiguration[] @AT@ 1740 @LENGTH@ 49
------------DEL New@@new @AT@ 1740 @LENGTH@ 3
------------DEL SimpleType@@MySqlConnectorEmbeddedDebeziumConfiguration @AT@ 1744 @LENGTH@ 43


UPD MethodDeclaration@@void, MethodName:thereShallBeNoDefaultValuesForNonExistingAttributes,  @TO@ void, MethodName:thereShallBeNoDefaultValuesForNonExistingAttributes, @Autowired Neo4jTemplate template,  @AT@ 4666 @LENGTH@ 671
---UPD TryStatement@@try (Session session=neo4jConnectionSupport.getDriver().session(bookmarkCapture.createSessionConfig())){  id=session.writeTransaction(tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong());  bookmarkCapture.seedWith(session.lastBookmark());}  @TO@ try (Session session=neo4jConnectionSupport.getDriver().session(bookmarkCapture.createSessionConfig())){  id=session.writeTransaction(tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong());  bookmarkCapture.seedWith(session.lastBookmark());}  @AT@ 4736 @LENGTH@ 277
------UPD ExpressionStatement@@Assignment:id=session.writeTransaction(tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong()) @TO@ Assignment:id=session.writeTransaction(tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong()) @AT@ 4848 @LENGTH@ 108
---------UPD Assignment@@id=session.writeTransaction(tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong()) @TO@ id=session.writeTransaction(tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong()) @AT@ 4848 @LENGTH@ 107
------------UPD MethodInvocation@@session.writeTransaction(tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong()) @TO@ session.writeTransaction(tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong()) @AT@ 4853 @LENGTH@ 102
---------------UPD SimpleName@@MethodName:writeTransaction:[tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong()] @TO@ MethodName:writeTransaction:[tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong()] @AT@ 4861 @LENGTH@ 94
------------------UPD LambdaExpression@@tx -> tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong() @TO@ tx -> tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong() @AT@ 4878 @LENGTH@ 76
---------------------UPD MethodInvocation@@tx.run("CREATE (n:CypherTypes) RETURN id(n)").single().get(0).asLong() @TO@ tx.run("CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)").single().get(0).asLong() @AT@ 4884 @LENGTH@ 70
------------------------UPD MethodInvocation@@MethodName:run:["CREATE (n:CypherTypes) RETURN id(n)"] @TO@ MethodName:run:["CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)"] @AT@ 4884 @LENGTH@ 45
---------------------------UPD StringLiteral@@"CREATE (n:CypherTypes) RETURN id(n)" @TO@ "CREATE (n:AllArgsCtorNoBuilder) RETURN id(n)" @AT@ 4891 @LENGTH@ 37
---INS SingleVariableDeclaration@@@Autowired Neo4jTemplate template @TO@ MethodDeclaration@@void, MethodName:thereShallBeNoDefaultValuesForNonExistingAttributes,  @AT@ 4804 @LENGTH@ 33
------INS SimpleType@@Neo4jTemplate @TO@ SingleVariableDeclaration@@@Autowired Neo4jTemplate template @AT@ 4815 @LENGTH@ 13
------INS SimpleName@@template @TO@ SingleVariableDeclaration@@@Autowired Neo4jTemplate template @AT@ 4829 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(MappingException.class).isThrownBy(() -> cypherTypesRepository.findById(id)).withMessageMatching("Error mapping Record<\\{thingWithAllCypherTypes: .*>").withStackTraceContaining("Illegal arguments for constructor").withRootCauseInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThatExceptionOfType(MappingException.class).isThrownBy(() -> template.findById(id,AllArgsCtorNoBuilder.class)).withMessageMatching("Error mapping Record<\\{.+: .*>").withRootCauseInstanceOf(IllegalArgumentException.class).withStackTraceContaining("Parameter aBoolean must not be null!") @AT@ 5017 @LENGTH@ 317
------UPD MethodInvocation@@assertThatExceptionOfType(MappingException.class).isThrownBy(() -> cypherTypesRepository.findById(id)).withMessageMatching("Error mapping Record<\\{thingWithAllCypherTypes: .*>").withStackTraceContaining("Illegal arguments for constructor").withRootCauseInstanceOf(IllegalArgumentException.class) @TO@ assertThatExceptionOfType(MappingException.class).isThrownBy(() -> template.findById(id,AllArgsCtorNoBuilder.class)).withMessageMatching("Error mapping Record<\\{.+: .*>").withRootCauseInstanceOf(IllegalArgumentException.class).withStackTraceContaining("Parameter aBoolean must not be null!") @AT@ 5017 @LENGTH@ 316
---------UPD MethodInvocation@@MethodName:withStackTraceContaining:["Illegal arguments for constructor"] @TO@ MethodName:withRootCauseInstanceOf:[IllegalArgumentException.class] @AT@ 5017 @LENGTH@ 255
------------DEL StringLiteral@@"Illegal arguments for constructor" @AT@ 5236 @LENGTH@ 35
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:withStackTraceContaining:["Illegal arguments for constructor"] @AT@ 5357 @LENGTH@ 30
---------UPD MethodInvocation@@MethodName:withMessageMatching:["Error mapping Record<\\{thingWithAllCypherTypes: .*>"] @TO@ MethodName:withMessageMatching:["Error mapping Record<\\{.+: .*>"] @AT@ 5017 @LENGTH@ 188
------------UPD StringLiteral@@"Error mapping Record<\\{thingWithAllCypherTypes: .*>" @TO@ "Error mapping Record<\\{.+: .*>" @AT@ 5150 @LENGTH@ 54
---------UPD MethodInvocation@@MethodName:isThrownBy:[() -> cypherTypesRepository.findById(id)] @TO@ MethodName:isThrownBy:[() -> template.findById(id,AllArgsCtorNoBuilder.class)] @AT@ 5017 @LENGTH@ 107
------------UPD LambdaExpression@@() -> cypherTypesRepository.findById(id) @TO@ () -> template.findById(id,AllArgsCtorNoBuilder.class) @AT@ 5083 @LENGTH@ 40
---------------UPD MethodInvocation@@cypherTypesRepository.findById(id) @TO@ template.findById(id,AllArgsCtorNoBuilder.class) @AT@ 5089 @LENGTH@ 34
------------------UPD SimpleName@@Name:cypherTypesRepository @TO@ Name:template @AT@ 5089 @LENGTH@ 21
------------------UPD SimpleName@@MethodName:findById:[id] @TO@ MethodName:findById:[id, AllArgsCtorNoBuilder.class] @AT@ 5111 @LENGTH@ 12
---------------------INS TypeLiteral@@AllArgsCtorNoBuilder.class @TO@ SimpleName@@MethodName:findById:[id] @AT@ 5239 @LENGTH@ 26
---------UPD SimpleName@@MethodName:withRootCauseInstanceOf:[IllegalArgumentException.class] @TO@ MethodName:withStackTraceContaining:["Parameter aBoolean must not be null!"] @AT@ 5278 @LENGTH@ 55
------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5302 @LENGTH@ 30
------------INS StringLiteral@@"Parameter aBoolean must not be null!" @TO@ SimpleName@@MethodName:withRootCauseInstanceOf:[IllegalArgumentException.class] @AT@ 5419 @LENGTH@ 38


INS ExpressionStatement@@MethodInvocation:MetastoreConf.setTimeVar(hiveConf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @TO@ MethodDeclaration@@public, void, MethodName:setup, Exception,  @AT@ 3945 @LENGTH@ 100
---INS MethodInvocation@@MetastoreConf.setTimeVar(hiveConf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setTimeVar(hiveConf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 3945 @LENGTH@ 99
------INS SimpleName@@Name:MetastoreConf @TO@ MethodInvocation@@MetastoreConf.setTimeVar(hiveConf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 3945 @LENGTH@ 13
------INS SimpleName@@MethodName:setTimeVar:[hiveConf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @TO@ MethodInvocation@@MetastoreConf.setTimeVar(hiveConf,MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT,2,TimeUnit.SECONDS) @AT@ 3959 @LENGTH@ 85
---------INS SimpleName@@hiveConf @TO@ SimpleName@@MethodName:setTimeVar:[hiveConf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 3970 @LENGTH@ 8
---------INS QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @TO@ SimpleName@@MethodName:setTimeVar:[hiveConf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 3980 @LENGTH@ 42
------------INS QualifiedName@@MetastoreConf.ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @AT@ 3980 @LENGTH@ 22
---------------INS SimpleName@@MetastoreConf @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 3980 @LENGTH@ 13
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 3994 @LENGTH@ 8
------------INS SimpleName@@TXN_OPENTXN_TIMEOUT @TO@ QualifiedName@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @AT@ 4003 @LENGTH@ 19
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:setTimeVar:[hiveConf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 4024 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ SimpleName@@MethodName:setTimeVar:[hiveConf, MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT, 2, TimeUnit.SECONDS] @AT@ 4027 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 4027 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 4036 @LENGTH@ 7


UPD CatchClause@@catch (Exception ignored) {} @TO@ catch (Throwable ignored) {} @AT@ 6114 @LENGTH@ 41
---UPD SingleVariableDeclaration@@Exception ignored @TO@ Throwable ignored @AT@ 6121 @LENGTH@ 17
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 6121 @LENGTH@ 9


UPD CatchClause@@catch (Exception e) {  e.printStackTrace();} @TO@ catch (Exception e) {  e.printStackTrace();  return;} @AT@ 2629 @LENGTH@ 64
---INS ReturnStatement@@ @TO@ CatchClause@@catch (Exception e) {  e.printStackTrace();} @AT@ 2696 @LENGTH@ 7


UPD TypeDeclaration@@ConnectorRef,  @TO@ [static]ConnectorRef,  @AT@ 4323 @LENGTH@ 755
---INS Modifier@@static @TO@ TypeDeclaration@@ConnectorRef,  @AT@ 4317 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.defaultRequeueRejected,instance::setDefaultRequeueRejected).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @TO@ MethodInvocation:javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @AT@ 11579 @LENGTH@ 1528
---UPD MethodInvocation@@javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.defaultRequeueRejected,instance::setDefaultRequeueRejected).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @TO@ javaUtils.acceptIfNotNull(this.acknowledgeMode,instance::setAcknowledgeMode).acceptIfNotNull(this.channelTransacted,instance::setChannelTransacted).acceptIfNotNull(this.applicationContext,instance::setApplicationContext).acceptIfNotNull(this.taskExecutor,instance::setTaskExecutor).acceptIfNotNull(this.transactionManager,instance::setTransactionManager).acceptIfNotNull(this.prefetchCount,instance::setPrefetchCount).acceptIfNotNull(this.globalQos,instance::setGlobalQos).acceptIfNotNull(this.adviceChain,instance::setAdviceChain).acceptIfNotNull(this.recoveryBackOff,instance::setRecoveryBackOff).acceptIfNotNull(this.mismatchedQueuesFatal,instance::setMismatchedQueuesFatal).acceptIfNotNull(this.missingQueuesFatal,instance::setMissingQueuesFatal).acceptIfNotNull(this.consumerTagStrategy,instance::setConsumerTagStrategy).acceptIfNotNull(this.idleEventInterval,instance::setIdleEventInterval).acceptIfNotNull(this.failedDeclarationRetryInterval,instance::setFailedDeclarationRetryInterval).acceptIfNotNull(this.applicationEventPublisher,instance::setApplicationEventPublisher).acceptIfNotNull(this.autoStartup,instance::setAutoStartup).acceptIfNotNull(this.phase,instance::setPhase).acceptIfNotNull(this.afterReceivePostProcessors,instance::setAfterReceivePostProcessors).acceptIfNotNull(this.deBatchingEnabled,instance::setDeBatchingEnabled) @AT@ 11579 @LENGTH@ 1527
------DEL MethodInvocation@@MethodName:acceptIfNotNull:[this.defaultRequeueRejected, instance::setDefaultRequeueRejected] @AT@ 11579 @LENGTH@ 593
---------DEL FieldAccess@@this.defaultRequeueRejected @AT@ 12107 @LENGTH@ 27
------------DEL ThisExpression@@this @AT@ 12107 @LENGTH@ 4
------------DEL SimpleName@@defaultRequeueRejected @AT@ 12112 @LENGTH@ 22


UPD VariableDeclarationStatement@@Endpoint endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,TEST_TOPIC_NAME)); @TO@ Endpoint endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,TEST_TOPIC_NAME)); @AT@ 1747 @LENGTH@ 109
---UPD VariableDeclarationFragment@@endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,TEST_TOPIC_NAME)) @TO@ endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,TEST_TOPIC_NAME)) @AT@ 1756 @LENGTH@ 99
------UPD MethodInvocation@@context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,TEST_TOPIC_NAME)) @TO@ context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,TEST_TOPIC_NAME)) @AT@ 1767 @LENGTH@ 88
---------UPD SimpleName@@MethodName:hasEndpoint:[String.format("google-pubsub:%s:%s:1",PROJECT_ID,TEST_TOPIC_NAME)] @TO@ MethodName:hasEndpoint:[String.format("google-pubsub:%s:%s",PROJECT_ID,TEST_TOPIC_NAME)] @AT@ 1775 @LENGTH@ 80
------------UPD MethodInvocation@@String.format("google-pubsub:%s:%s:1",PROJECT_ID,TEST_TOPIC_NAME) @TO@ String.format("google-pubsub:%s:%s",PROJECT_ID,TEST_TOPIC_NAME) @AT@ 1787 @LENGTH@ 67
---------------UPD SimpleName@@MethodName:format:["google-pubsub:%s:%s:1", PROJECT_ID, TEST_TOPIC_NAME] @TO@ MethodName:format:["google-pubsub:%s:%s", PROJECT_ID, TEST_TOPIC_NAME] @AT@ 1794 @LENGTH@ 60
------------------UPD StringLiteral@@"google-pubsub:%s:%s:1" @TO@ "google-pubsub:%s:%s" @AT@ 1801 @LENGTH@ 23


UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Throwable e) {  exchange.setException(e);} @AT@ 4638 @LENGTH@ 85
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 4645 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 4645 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @TO@ MethodDeclaration@@public, void, MethodName:before, ExecutionException, InterruptedException, TimeoutException,  @AT@ 2745 @LENGTH@ 77
---INS MethodInvocation@@kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @TO@ ExpressionStatement@@MethodInvocation:kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2745 @LENGTH@ 76
------INS MethodInvocation@@MethodName:deleteTopics:[Arrays.asList(TOPIC,"TEST_IDEMPOTENT")] @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2745 @LENGTH@ 70
---------INS MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @TO@ MethodInvocation@@MethodName:deleteTopics:[Arrays.asList(TOPIC,"TEST_IDEMPOTENT")] @AT@ 2775 @LENGTH@ 39
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @AT@ 2775 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[TOPIC, "TEST_IDEMPOTENT"] @TO@ MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @AT@ 2782 @LENGTH@ 32
---------------INS SimpleName@@TOPIC @TO@ SimpleName@@MethodName:asList:[TOPIC, "TEST_IDEMPOTENT"] @AT@ 2789 @LENGTH@ 5
---------------INS StringLiteral@@"TEST_IDEMPOTENT" @TO@ SimpleName@@MethodName:asList:[TOPIC, "TEST_IDEMPOTENT"] @AT@ 2796 @LENGTH@ 17
------INS SimpleName@@Name:kafkaAdminClient @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2745 @LENGTH@ 16
------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2816 @LENGTH@ 5


INS MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @TO@ TypeDeclaration@@[public]KubernetesClientServiceDiscovery, KubernetesServiceDiscovery @AT@ 6290 @LENGTH@ 210
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @AT@ 6290 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @AT@ 6298 @LENGTH@ 7
---INS SimpleName@@MethodName:hasUsernameAndPassword @TO@ MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @AT@ 6306 @LENGTH@ 22
---INS SingleVariableDeclaration@@KubernetesConfiguration configuration @TO@ MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @AT@ 6329 @LENGTH@ 37
------INS SimpleType@@KubernetesConfiguration @TO@ SingleVariableDeclaration@@KubernetesConfiguration configuration @AT@ 6329 @LENGTH@ 23
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@KubernetesConfiguration configuration @AT@ 6353 @LENGTH@ 13
---INS ReturnStatement@@InfixExpression:ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword()) @TO@ MethodDeclaration@@private, boolean, MethodName:hasUsernameAndPassword, KubernetesConfiguration configuration,  @AT@ 6378 @LENGTH@ 116
------MOV InfixExpression@@ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword()) @TO@ ReturnStatement@@InfixExpression:ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword()) @AT@ 4346 @LENGTH@ 108


UPD TypeDeclaration@@ConnectorRef,  @TO@ [static]ConnectorRef,  @AT@ 3133 @LENGTH@ 503
---INS Modifier@@static @TO@ TypeDeclaration@@ConnectorRef,  @AT@ 3127 @LENGTH@ 6


UPD IfStatement@@if ((builder != null) && builder.supportTransacted()) {  if (!(builder instanceof JtaTransactionErrorHandlerBuilder)) {    throw new RuntimeCamelException("The given transactional error handler builder '" + builder + "' is not of type '"+ JtaTransactionErrorHandlerBuilder.class.getName()+ "' which is required in this environment!");  }  LOG.debug("The ErrorHandlerBuilder configured is a JtaTransactionErrorHandlerBuilder: {}",builder);  txBuilder=(JtaTransactionErrorHandlerBuilder)builder.cloneBuilder();} else {  LOG.debug("No or no transactional ErrorHandlerBuilder configured, will use default JtaTransactionErrorHandlerBuilder settings");  txBuilder=new JtaTransactionErrorHandlerBuilder();} @TO@ if (builder != null && builder.supportTransacted()) {  if (!(builder instanceof JtaTransactionErrorHandlerBuilder)) {    throw new RuntimeCamelException("The given transactional error handler builder '" + builder + "' is not of type '"+ JtaTransactionErrorHandlerBuilder.class.getName()+ "' which is required in this environment!");  }  LOG.debug("The ErrorHandlerBuilder configured is a JtaTransactionErrorHandlerBuilder: {}",builder);  txBuilder=(JtaTransactionErrorHandlerBuilder)builder.cloneBuilder();} else {  LOG.debug("No or no transactional ErrorHandlerBuilder configured, will use default JtaTransactionErrorHandlerBuilder settings");  txBuilder=new JtaTransactionErrorHandlerBuilder();} @AT@ 4228 @LENGTH@ 946
---UPD InfixExpression@@(builder != null) && builder.supportTransacted() @TO@ builder != null && builder.supportTransacted() @AT@ 4232 @LENGTH@ 48
------DEL ParenthesizedExpression@@(builder != null) @AT@ 4232 @LENGTH@ 17
---------DEL InfixExpression@@builder != null @AT@ 4233 @LENGTH@ 15
------INS InfixExpression@@builder != null @TO@ InfixExpression@@(builder != null) && builder.supportTransacted() @AT@ 4232 @LENGTH@ 15
---------MOV SimpleName@@builder @TO@ InfixExpression@@builder != null @AT@ 4233 @LENGTH@ 7
---------MOV Operator@@!= @TO@ InfixExpression@@builder != null @AT@ 4240 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@builder != null @AT@ 4244 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.setException(new Exception("Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")) @TO@ MethodInvocation:exchange.setException(new Exception("Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")) @AT@ 5686 @LENGTH@ 320
---UPD MethodInvocation@@exchange.setException(new Exception("Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")) @TO@ exchange.setException(new Exception("Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")) @AT@ 5686 @LENGTH@ 319
------UPD SimpleName@@MethodName:setException:[new Exception("Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")] @TO@ MethodName:setException:[new Exception("Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer")] @AT@ 5695 @LENGTH@ 310
---------UPD ClassInstanceCreation@@Exception["Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer"] @TO@ Exception["Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer"] @AT@ 5708 @LENGTH@ 296
------------UPD InfixExpression@@"Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer" @TO@ "Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," + " use the camel optaplanner consumer" @AT@ 5743 @LENGTH@ 260
---------------UPD StringLiteral@@"Unsuported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," @TO@ "Unsupported type. Body must be of Type PlanningSolution or ProblemFactChange. To get the Best Result from the async Solver," @AT@ 5743 @LENGTH@ 124


UPD IfStatement@@if ((ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) && ObjectHelper.isEmpty(configuration.getOauthToken())) {  builder.withUsername(configuration.getUsername());  builder.withPassword(configuration.getPassword());} else {  builder.withOauthToken(configuration.getOauthToken());} @TO@ if (hasUsernameAndPassword(configuration) && ObjectHelper.isEmpty(configuration.getOauthToken())) {  builder.withUsername(configuration.getUsername());  builder.withPassword(configuration.getPassword());} else {  builder.withOauthToken(configuration.getOauthToken());} @AT@ 4341 @LENGTH@ 408
---UPD InfixExpression@@(ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) && ObjectHelper.isEmpty(configuration.getOauthToken()) @TO@ hasUsernameAndPassword(configuration) && ObjectHelper.isEmpty(configuration.getOauthToken()) @AT@ 4345 @LENGTH@ 181
------DEL ParenthesizedExpression@@(ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) @AT@ 4345 @LENGTH@ 110
------INS MethodInvocation@@hasUsernameAndPassword(configuration) @TO@ InfixExpression@@(ObjectHelper.isNotEmpty(configuration.getUsername()) && ObjectHelper.isNotEmpty(configuration.getPassword())) && ObjectHelper.isEmpty(configuration.getOauthToken()) @AT@ 4345 @LENGTH@ 37
---------INS SimpleName@@MethodName:hasUsernameAndPassword:[configuration] @TO@ MethodInvocation@@hasUsernameAndPassword(configuration) @AT@ 4345 @LENGTH@ 37
------------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:hasUsernameAndPassword:[configuration] @AT@ 4368 @LENGTH@ 13


UPD FieldDeclaration@@private, final, Map<InvocableHandlerMethod,Expression>, [handlerSendTo=new HashMap<>()] @TO@ private, final, Map<InvocableHandlerMethod,Expression>, [handlerSendTo=new ConcurrentHashMap<>()] @AT@ 3068 @LENGTH@ 86
---UPD VariableDeclarationFragment@@handlerSendTo=new HashMap<>() @TO@ handlerSendTo=new ConcurrentHashMap<>() @AT@ 3122 @LENGTH@ 31
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 3138 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentHashMap<> @AT@ 3142 @LENGTH@ 9
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 3142 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Cannot resolve HealthCheck with id: " + parent + " from classpath.") @TO@ MethodInvocation:LOG.warn("Cannot resolve HealthCheck with id: {} from classpath.",parent) @AT@ 47646 @LENGTH@ 79
---UPD MethodInvocation@@LOG.warn("Cannot resolve HealthCheck with id: " + parent + " from classpath.") @TO@ LOG.warn("Cannot resolve HealthCheck with id: {} from classpath.",parent) @AT@ 47646 @LENGTH@ 78
------UPD SimpleName@@MethodName:warn:["Cannot resolve HealthCheck with id: " + parent + " from classpath."] @TO@ MethodName:warn:["Cannot resolve HealthCheck with id: {} from classpath.", parent] @AT@ 47650 @LENGTH@ 74
---------DEL InfixExpression@@"Cannot resolve HealthCheck with id: " + parent + " from classpath." @AT@ 47655 @LENGTH@ 68
------------DEL StringLiteral@@"Cannot resolve HealthCheck with id: " @AT@ 47655 @LENGTH@ 38
------------DEL Operator@@+ @AT@ 47693 @LENGTH@ 1
------------DEL SimpleName@@parent @AT@ 47696 @LENGTH@ 6
------------DEL StringLiteral@@" from classpath." @AT@ 47705 @LENGTH@ 18
---------INS StringLiteral@@"Cannot resolve HealthCheck with id: {} from classpath." @TO@ SimpleName@@MethodName:warn:["Cannot resolve HealthCheck with id: " + parent + " from classpath."] @AT@ 47655 @LENGTH@ 56
---------INS SimpleName@@parent @TO@ SimpleName@@MethodName:warn:["Cannot resolve HealthCheck with id: " + parent + " from classpath."] @AT@ 47713 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:LOGGER.warn("The JVM property " + key + " is set, but not supported anymore.") @TO@ MethodInvocation:LOGGER.warn("The JVM property {} is set, but not supported anymore.",key) @AT@ 2972 @LENGTH@ 79
---UPD MethodInvocation@@LOGGER.warn("The JVM property " + key + " is set, but not supported anymore.") @TO@ LOGGER.warn("The JVM property {} is set, but not supported anymore.",key) @AT@ 2972 @LENGTH@ 78
------UPD SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @TO@ MethodName:warn:["The JVM property {} is set, but not supported anymore.", key] @AT@ 2979 @LENGTH@ 71
---------DEL InfixExpression@@"The JVM property " + key + " is set, but not supported anymore." @AT@ 2984 @LENGTH@ 65
------------DEL StringLiteral@@"The JVM property " @AT@ 2984 @LENGTH@ 19
------------DEL Operator@@+ @AT@ 3003 @LENGTH@ 1
------------DEL SimpleName@@key @AT@ 3006 @LENGTH@ 3
------------DEL StringLiteral@@" is set, but not supported anymore." @AT@ 3012 @LENGTH@ 37
---------INS StringLiteral@@"The JVM property {} is set, but not supported anymore." @TO@ SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @AT@ 2984 @LENGTH@ 56
---------INS SimpleName@@key @TO@ SimpleName@@MethodName:warn:["The JVM property " + key + " is set, but not supported anymore."] @AT@ 3042 @LENGTH@ 3


UPD IfStatement@@if (cxfMessage != null) {  String requestURL=(String)cxfMessage.get("org.apache.cxf.request.uri");  String matrixParam=null;  int matrixStart=requestURL.indexOf(';');  int matrixEnd=requestURL.indexOf('?') > -1 ? requestURL.indexOf('?') : requestURL.length();  Map<String,String> maps=null;  if (requestURL != null && matrixStart > 0) {    matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);    if (matrixParam != null) {      maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));    }  }  if (maps != null) {    for (    Map.Entry<String,String> entry : maps.entrySet()) {      client.matrix(entry.getKey(),entry.getValue());      LOG.debug("Matrix param {} :: {}",entry.getKey(),entry.getValue());    }  }} @TO@ if (cxfMessage != null) {  String requestURL=(String)cxfMessage.get("org.apache.cxf.request.uri");  String matrixParam=null;  int matrixStart=requestURL.indexOf(';');  int matrixEnd=requestURL.indexOf('?') > -1 ? requestURL.indexOf('?') : requestURL.length();  Map<String,String> maps=null;  if (matrixStart > 0) {    matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);    maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));  }  if (maps != null) {    for (    Map.Entry<String,String> entry : maps.entrySet()) {      client.matrix(entry.getKey(),entry.getValue());      LOG.debug("Matrix param {} :: {}",entry.getKey(),entry.getValue());    }  }} @AT@ 11814 @LENGTH@ 994
---UPD Block@@ThenBody:{  String requestURL=(String)cxfMessage.get("org.apache.cxf.request.uri");  String matrixParam=null;  int matrixStart=requestURL.indexOf(';');  int matrixEnd=requestURL.indexOf('?') > -1 ? requestURL.indexOf('?') : requestURL.length();  Map<String,String> maps=null;  if (requestURL != null && matrixStart > 0) {    matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);    if (matrixParam != null) {      maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));    }  }  if (maps != null) {    for (    Map.Entry<String,String> entry : maps.entrySet()) {      client.matrix(entry.getKey(),entry.getValue());      LOG.debug("Matrix param {} :: {}",entry.getKey(),entry.getValue());    }  }} @TO@ ThenBody:{  String requestURL=(String)cxfMessage.get("org.apache.cxf.request.uri");  String matrixParam=null;  int matrixStart=requestURL.indexOf(';');  int matrixEnd=requestURL.indexOf('?') > -1 ? requestURL.indexOf('?') : requestURL.length();  Map<String,String> maps=null;  if (matrixStart > 0) {    matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);    maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));  }  if (maps != null) {    for (    Map.Entry<String,String> entry : maps.entrySet()) {      client.matrix(entry.getKey(),entry.getValue());      LOG.debug("Matrix param {} :: {}",entry.getKey(),entry.getValue());    }  }} @AT@ 11838 @LENGTH@ 970
------DEL IfStatement@@if (requestURL != null && matrixStart > 0) {  matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);  if (matrixParam != null) {    maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));  }} @AT@ 12184 @LENGTH@ 317
---------DEL InfixExpression@@requestURL != null && matrixStart > 0 @AT@ 12188 @LENGTH@ 37
------------DEL InfixExpression@@requestURL != null @AT@ 12188 @LENGTH@ 18
---------------DEL SimpleName@@requestURL @AT@ 12188 @LENGTH@ 10
---------------DEL Operator@@!= @AT@ 12198 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 12202 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 12206 @LENGTH@ 2
------------DEL InfixExpression@@matrixStart > 0 @AT@ 12210 @LENGTH@ 15
---------------DEL SimpleName@@matrixStart @AT@ 12210 @LENGTH@ 11
---------------DEL Operator@@> @AT@ 12221 @LENGTH@ 1
---------------DEL NumberLiteral@@0 @AT@ 12224 @LENGTH@ 1
---------DEL Block@@ThenBody:{  matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);  if (matrixParam != null) {    maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));  }} @AT@ 12227 @LENGTH@ 274
------MOV IfStatement@@if (matrixParam != null) {  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @TO@ Block@@ThenBody:{  String requestURL=(String)cxfMessage.get("org.apache.cxf.request.uri");  String matrixParam=null;  int matrixStart=requestURL.indexOf(';');  int matrixEnd=requestURL.indexOf('?') > -1 ? requestURL.indexOf('?') : requestURL.length();  Map<String,String> maps=null;  if (requestURL != null && matrixStart > 0) {    matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);    if (matrixParam != null) {      maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));    }  }  if (maps != null) {    for (    Map.Entry<String,String> entry : maps.entrySet()) {      client.matrix(entry.getKey(),entry.getValue());      LOG.debug("Matrix param {} :: {}",entry.getKey(),entry.getValue());    }  }} @AT@ 12325 @LENGTH@ 162
---------UPD InfixExpression@@matrixParam != null @TO@ matrixStart > 0 @AT@ 12329 @LENGTH@ 19
------------INS NumberLiteral@@0 @TO@ InfixExpression@@matrixParam != null @AT@ 12202 @LENGTH@ 1
------------UPD SimpleName@@matrixParam @TO@ matrixStart @AT@ 12329 @LENGTH@ 11
------------UPD Operator@@!= @TO@ > @AT@ 12340 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 12344 @LENGTH@ 4
---------UPD Block@@ThenBody:{  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @TO@ ThenBody:{  matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @AT@ 12350 @LENGTH@ 137
------------MOV ExpressionStatement@@Assignment:matrixParam=requestURL.substring(matrixStart + 1,matrixEnd) @TO@ Block@@ThenBody:{  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @AT@ 12245 @LENGTH@ 63


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri, Exception,  @AT@ 5411 @LENGTH@ 657
---DEL PrimitiveType@@void @AT@ 5406 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri @AT@ 5411 @LENGTH@ 53
---DEL SimpleType@@Exception @AT@ 5474 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining="dummy"; @AT@ 5494 @LENGTH@ 33
------DEL Modifier@@final @AT@ 5494 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5500 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="dummy" @AT@ 5507 @LENGTH@ 19
---------DEL SimpleName@@remaining @AT@ 5507 @LENGTH@ 9
---------DEL StringLiteral@@"dummy" @AT@ 5519 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final String uri="debezium:dummy"; @AT@ 5536 @LENGTH@ 36
------DEL Modifier@@final @AT@ 5536 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5542 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:dummy" @AT@ 5549 @LENGTH@ 22
---------DEL SimpleName@@uri @AT@ 5549 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:dummy" @AT@ 5555 @LENGTH@ 16
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5581 @LENGTH@ 481
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext()) @AT@ 5586 @LENGTH@ 99
---------DEL Modifier@@final @AT@ 5586 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5592 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext()) @AT@ 5610 @LENGTH@ 75
------------DEL SimpleName@@debeziumComponent @AT@ 5610 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumMongodbComponent[new DefaultCamelContext()] @AT@ 5630 @LENGTH@ 55
---------------DEL New@@new @AT@ 5630 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumMongodbComponent @AT@ 5634 @LENGTH@ 24
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5659 @LENGTH@ 25
------------------DEL New@@new @AT@ 5659 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5663 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5701 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5701 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5701 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5719 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5775 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5775 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5775 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5793 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5810 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5830 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5830 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5836 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5836 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5840 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5848 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5856 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5856 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5869 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5869 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5881 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5906 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5906 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 5906 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5919 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 5951 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5975 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5975 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 5975 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 5993 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 6008 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 6013 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 6024 @LENGTH@ 10


UPD Block@@ThenBody:{  boolean decode=getConfiguration() != null && getConfiguration().isDecodeFilename();  binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode);} @TO@ ThenBody:{  boolean decode=getConfiguration() != null && getConfiguration().isDecodeFilename();  boolean mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage();  binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode,mapMailMessage);} @AT@ 5907 @LENGTH@ 199
---INS VariableDeclarationStatement@@boolean mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage(); @TO@ Block@@ThenBody:{  boolean decode=getConfiguration() != null && getConfiguration().isDecodeFilename();  binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode);} @AT@ 6019 @LENGTH@ 93
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage(); @AT@ 6019 @LENGTH@ 7
------INS VariableDeclarationFragment@@mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage() @TO@ VariableDeclarationStatement@@boolean mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage(); @AT@ 6027 @LENGTH@ 84
---------INS SimpleName@@mapMailMessage @TO@ VariableDeclarationFragment@@mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage() @AT@ 6027 @LENGTH@ 14
---------INS InfixExpression@@getConfiguration() != null && getConfiguration().isMapMailMessage() @TO@ VariableDeclarationFragment@@mapMailMessage=getConfiguration() != null && getConfiguration().isMapMailMessage() @AT@ 6044 @LENGTH@ 67
------------INS InfixExpression@@getConfiguration() != null @TO@ InfixExpression@@getConfiguration() != null && getConfiguration().isMapMailMessage() @AT@ 6044 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ InfixExpression@@getConfiguration() != null @AT@ 6044 @LENGTH@ 18
---------------INS Operator@@!= @TO@ InfixExpression@@getConfiguration() != null @AT@ 6062 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@getConfiguration() != null @AT@ 6066 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@getConfiguration() != null && getConfiguration().isMapMailMessage() @AT@ 6070 @LENGTH@ 2
------------INS MethodInvocation@@getConfiguration().isMapMailMessage() @TO@ InfixExpression@@getConfiguration() != null && getConfiguration().isMapMailMessage() @AT@ 6074 @LENGTH@ 37
---------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().isMapMailMessage() @AT@ 6074 @LENGTH@ 18
---------------INS SimpleName@@MethodName:isMapMailMessage:[] @TO@ MethodInvocation@@getConfiguration().isMapMailMessage() @AT@ 6093 @LENGTH@ 18
---UPD ExpressionStatement@@Assignment:binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode) @TO@ Assignment:binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode,mapMailMessage) @AT@ 6019 @LENGTH@ 77
------UPD Assignment@@binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode) @TO@ binding=new MailBinding(headerFilterStrategy,contentTypeResolver,decode,mapMailMessage) @AT@ 6019 @LENGTH@ 76
---------UPD ClassInstanceCreation@@MailBinding[headerFilterStrategy, contentTypeResolver, decode] @TO@ MailBinding[headerFilterStrategy, contentTypeResolver, decode, mapMailMessage] @AT@ 6029 @LENGTH@ 66
------------INS SimpleName@@mapMailMessage @TO@ ClassInstanceCreation@@MailBinding[headerFilterStrategy, contentTypeResolver, decode] @AT@ 6202 @LENGTH@ 14


UPD SwitchStatement@@switch (codePacked) {case 16:case 188:  bcByteCount++;break;case 17:bcShortCount++;break;case 18:case 19:bcStringRefCount++;break;case 234:case 237:bcIntRefCount++;break;case 235:case 238:bcFloatRefCount++;break;case 197:bcByteCount++;case 233:case 236:case 187:case 189:case 192:case 193:bcClassRefCount++;break;case 20:bcLongRefCount++;break;case 239:bcDoubleRefCount++;break;case 169:bcLocalCount++;break;case 167:case 168:case 200:case 201:bcLabelCount++;break;case 170:switchIsTableSwitch.add(Boolean.valueOf(true));bcCaseCountCount++;bcLabelCount++;break;case 171:switchIsTableSwitch.add(Boolean.valueOf(false));bcCaseCountCount++;bcLabelCount++;break;case 178:case 179:case 180:case 181:bcFieldRefCount++;break;case 182:case 183:case 184:bcMethodRefCount++;break;case 185:bcIMethodRefCount++;break;case 202:case 203:case 204:case 205:case 209:case 210:case 211:case 212:bcThisFieldCount++;break;case 206:case 207:case 208:case 213:case 214:case 215:bcThisMethodCount++;break;case 216:case 217:case 218:case 219:case 223:case 224:case 225:case 226:bcSuperFieldCount++;break;case 220:case 221:case 222:case 227:case 228:case 229:bcSuperMethodCount++;break;case 132:bcLocalCount++;bcByteCount++;break;case 196:final int nextInstruction=0xff & methodByteCodePacked[c][m][i + 1];wideByteCodes.add(Integer.valueOf(nextInstruction));if (nextInstruction == 132) {bcLocalCount++;bcShortCount++;} else if (endsWithLoad(nextInstruction) || endsWithStore(nextInstruction) || nextInstruction == 169) {bcLocalCount++;} else {segment.log(Segment.LOG_LEVEL_VERBOSE,"Found unhandled " + ByteCode.getByteCode(nextInstruction));}i++;break;case 230:case 231:case 232:bcInitRefCount++;break;case 253:bcEscRefCount++;break;case 254:bcEscCount++;break;default :if (endsWithLoad(codePacked) || endsWithStore(codePacked)) {bcLocalCount++;} else if (startsWithIf(codePacked)) {bcLabelCount++;}} @TO@ switch (codePacked) {case 16:case 188:  bcByteCount++;break;case 17:bcShortCount++;break;case 18:case 19:bcStringRefCount++;break;case 234:case 237:bcIntRefCount++;break;case 235:case 238:bcFloatRefCount++;break;case 197:bcByteCount++;case 233:case 236:case 187:case 189:case 192:case 193:bcClassRefCount++;break;case 20:bcLongRefCount++;break;case 239:bcDoubleRefCount++;break;case 169:bcLocalCount++;break;case 167:case 168:case 200:case 201:bcLabelCount++;break;case 170:switchIsTableSwitch.add(Boolean.TRUE);bcCaseCountCount++;bcLabelCount++;break;case 171:switchIsTableSwitch.add(Boolean.FALSE);bcCaseCountCount++;bcLabelCount++;break;case 178:case 179:case 180:case 181:bcFieldRefCount++;break;case 182:case 183:case 184:bcMethodRefCount++;break;case 185:bcIMethodRefCount++;break;case 202:case 203:case 204:case 205:case 209:case 210:case 211:case 212:bcThisFieldCount++;break;case 206:case 207:case 208:case 213:case 214:case 215:bcThisMethodCount++;break;case 216:case 217:case 218:case 219:case 223:case 224:case 225:case 226:bcSuperFieldCount++;break;case 220:case 221:case 222:case 227:case 228:case 229:bcSuperMethodCount++;break;case 132:bcLocalCount++;bcByteCount++;break;case 196:final int nextInstruction=0xff & methodByteCodePacked[c][m][i + 1];wideByteCodes.add(Integer.valueOf(nextInstruction));if (nextInstruction == 132) {bcLocalCount++;bcShortCount++;} else if (endsWithLoad(nextInstruction) || endsWithStore(nextInstruction) || nextInstruction == 169) {bcLocalCount++;} else {segment.log(Segment.LOG_LEVEL_VERBOSE,"Found unhandled " + ByteCode.getByteCode(nextInstruction));}i++;break;case 230:case 231:case 232:bcInitRefCount++;break;case 253:bcEscRefCount++;break;case 254:bcEscCount++;break;default :if (endsWithLoad(codePacked) || endsWithStore(codePacked)) {bcLocalCount++;} else if (startsWithIf(codePacked)) {bcLabelCount++;}} @AT@ 5859 @LENGTH@ 6954
---UPD ExpressionStatement@@MethodInvocation:switchIsTableSwitch.add(Boolean.valueOf(true)) @TO@ MethodInvocation:switchIsTableSwitch.add(Boolean.TRUE) @AT@ 7870 @LENGTH@ 47
------UPD MethodInvocation@@switchIsTableSwitch.add(Boolean.valueOf(true)) @TO@ switchIsTableSwitch.add(Boolean.TRUE) @AT@ 7870 @LENGTH@ 46
---------UPD SimpleName@@MethodName:add:[Boolean.valueOf(true)] @TO@ MethodName:add:[Boolean.TRUE] @AT@ 7890 @LENGTH@ 26
------------DEL MethodInvocation@@Boolean.valueOf(true) @AT@ 7894 @LENGTH@ 21
---------------DEL SimpleName@@Name:Boolean @AT@ 7894 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:valueOf:[true] @AT@ 7902 @LENGTH@ 13
------------------DEL BooleanLiteral@@true @AT@ 7910 @LENGTH@ 4
------------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:add:[Boolean.valueOf(true)] @AT@ 7894 @LENGTH@ 12
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 7894 @LENGTH@ 7
---------------INS SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 7902 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:switchIsTableSwitch.add(Boolean.valueOf(false)) @TO@ MethodInvocation:switchIsTableSwitch.add(Boolean.FALSE) @AT@ 8123 @LENGTH@ 48
------UPD MethodInvocation@@switchIsTableSwitch.add(Boolean.valueOf(false)) @TO@ switchIsTableSwitch.add(Boolean.FALSE) @AT@ 8123 @LENGTH@ 47
---------UPD SimpleName@@MethodName:add:[Boolean.valueOf(false)] @TO@ MethodName:add:[Boolean.FALSE] @AT@ 8143 @LENGTH@ 27
------------INS QualifiedName@@Boolean.FALSE @TO@ SimpleName@@MethodName:add:[Boolean.valueOf(false)] @AT@ 8138 @LENGTH@ 13
---------------INS SimpleName@@Boolean @TO@ QualifiedName@@Boolean.FALSE @AT@ 8138 @LENGTH@ 7
---------------INS SimpleName@@FALSE @TO@ QualifiedName@@Boolean.FALSE @AT@ 8146 @LENGTH@ 5
------------DEL MethodInvocation@@Boolean.valueOf(false) @AT@ 8147 @LENGTH@ 22
---------------DEL SimpleName@@Name:Boolean @AT@ 8147 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:valueOf:[false] @AT@ 8155 @LENGTH@ 14
------------------DEL BooleanLiteral@@false @AT@ 8163 @LENGTH@ 5


UPD MethodDeclaration@@private, static, void, MethodName:insertIntoDB, WarehouseInstance primary, String dbName, String tableName, String tableProperty, String storageType, String[] resultArray, Throwable,  @TO@ public, static, void, MethodName:insertIntoDB, WarehouseInstance primary, String dbName, String tableName, String tableProperty, String storageType, String[] resultArray, Throwable,  @AT@ 17994 @LENGTH@ 318
---UPD Modifier@@private @TO@ public @AT@ 17994 @LENGTH@ 7


UPD TypeDeclaration@@[private, final]RestServiceEntry, [RestService] @TO@ [private, static, final]RestServiceEntry, [RestService] @AT@ 6154 @LENGTH@ 3000
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]RestServiceEntry, [RestService] @AT@ 6162 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 2090 @LENGTH@ 64
---UPD MethodInvocation@@from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 2090 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true&delay=3000"] @TO@ MethodName:from:["file:src/test/data?noop=true&delay=3000"] @AT@ 2090 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/main/data?noop=true&delay=3000" @TO@ "file:src/test/data?noop=true&delay=3000" @AT@ 2095 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:exchange.setException(new Exception("Unsuported type. Body must be of Type PlanningSolution")) @TO@ MethodInvocation:exchange.setException(new Exception("Unsupported type. Body must be of Type PlanningSolution")) @AT@ 7768 @LENGTH@ 95
---UPD MethodInvocation@@exchange.setException(new Exception("Unsuported type. Body must be of Type PlanningSolution")) @TO@ exchange.setException(new Exception("Unsupported type. Body must be of Type PlanningSolution")) @AT@ 7768 @LENGTH@ 94
------UPD SimpleName@@MethodName:setException:[new Exception("Unsuported type. Body must be of Type PlanningSolution")] @TO@ MethodName:setException:[new Exception("Unsupported type. Body must be of Type PlanningSolution")] @AT@ 7777 @LENGTH@ 85
---------UPD ClassInstanceCreation@@Exception["Unsuported type. Body must be of Type PlanningSolution"] @TO@ Exception["Unsupported type. Body must be of Type PlanningSolution"] @AT@ 7790 @LENGTH@ 71
------------UPD StringLiteral@@"Unsuported type. Body must be of Type PlanningSolution" @TO@ "Unsupported type. Body must be of Type PlanningSolution" @AT@ 7804 @LENGTH@ 56


UPD IfStatement@@if (value != null && value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) {  return true;} @TO@ if (value != null && (value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}"))) {  return true;} @AT@ 1504 @LENGTH@ 170
---INS InfixExpression@@value != null && (value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @TO@ IfStatement@@if (value != null && value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) {  return true;} @AT@ 1508 @LENGTH@ 130
------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && (value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @AT@ 1508 @LENGTH@ 13
---------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 1508 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 1513 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 1517 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@value != null && (value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @AT@ 1521 @LENGTH@ 2
------INS ParenthesizedExpression@@(value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @TO@ InfixExpression@@value != null && (value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @AT@ 1525 @LENGTH@ 113
---------MOV InfixExpression@@value != null && value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}") @TO@ ParenthesizedExpression@@(value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}")) @AT@ 1508 @LENGTH@ 128
------------UPD InfixExpression@@value != null && value.startsWith("${") && value.endsWith("}") @TO@ value.startsWith("${") && value.endsWith("}") @AT@ 1508 @LENGTH@ 62
---------------DEL InfixExpression@@value != null && value.startsWith("${") @AT@ 1508 @LENGTH@ 39
------------------DEL InfixExpression@@value != null @AT@ 1508 @LENGTH@ 13
---------------------DEL SimpleName@@value @AT@ 1508 @LENGTH@ 5
---------------------DEL Operator@@!= @AT@ 1513 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 1517 @LENGTH@ 4
---------------MOV Operator@@&& @TO@ InfixExpression@@value != null && value.startsWith("${") && value.endsWith("}") @AT@ 1521 @LENGTH@ 2
---------------MOV MethodInvocation@@value.startsWith("${") @TO@ InfixExpression@@value != null && value.startsWith("${") && value.endsWith("}") @AT@ 1525 @LENGTH@ 22
---------------DEL Operator@@&& @AT@ 1547 @LENGTH@ 2
---UPD InfixExpression@@value != null && value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}") @TO@ value.startsWith("${") && value.endsWith("}") || value.startsWith("{{") && value.endsWith("}}") @AT@ 1508 @LENGTH@ 128


DEL TypeDeclaration@@[private]ResultSetCallback,  @AT@ 11656 @LENGTH@ 105
---DEL Modifier@@private @AT@ 11656 @LENGTH@ 7
---DEL SimpleName@@ClassName:ResultSetCallback @AT@ 11674 @LENGTH@ 17


UPD VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @TO@ Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 27762 @LENGTH@ 153
---DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27762 @LENGTH@ 38
---INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 27798 @LENGTH@ 48
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 27798 @LENGTH@ 8
------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 27807 @LENGTH@ 38
---------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27762 @LENGTH@ 10
---------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27773 @LENGTH@ 10
---------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27785 @LENGTH@ 11
---------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27798 @LENGTH@ 1


UPD IfStatement@@if (parameter == null) {  REPOSITORY_QUERY_LOG.warn("Do not use `null` as a property value for comparison." + " It will always be false and return an empty result.");  return Values.NULL;} @TO@ if (parameter == null) {  return Values.NULL;} else if (parameter instanceof Range) {  return convertRange((Range)parameter);} else if (parameter instanceof Distance) {  return calculateDistanceInMeter((Distance)parameter);} else if (parameter instanceof Circle) {  return convertCircle((Circle)parameter);} else if (parameter instanceof Instant) {  return ((Instant)parameter).atOffset(ZoneOffset.UTC);} else if (parameter instanceof Box) {  return convertBox((Box)parameter);} else if (parameter instanceof BoundingBox) {  return convertBoundingBox((BoundingBox)parameter);} @AT@ 5608 @LENGTH@ 469
---UPD Block@@ThenBody:{  REPOSITORY_QUERY_LOG.warn("Do not use `null` as a property value for comparison." + " It will always be false and return an empty result.");  return Values.NULL;} @TO@ ThenBody:{  return Values.NULL;} @AT@ 5631 @LENGTH@ 446
------DEL ExpressionStatement@@MethodInvocation:REPOSITORY_QUERY_LOG.warn("Do not use `null` as a property value for comparison." + " It will always be false and return an empty result.") @AT@ 5904 @LENGTH@ 145
---------DEL MethodInvocation@@REPOSITORY_QUERY_LOG.warn("Do not use `null` as a property value for comparison." + " It will always be false and return an empty result.") @AT@ 5904 @LENGTH@ 144
------------DEL SimpleName@@Name:REPOSITORY_QUERY_LOG @AT@ 5904 @LENGTH@ 20
------------DEL SimpleName@@MethodName:warn:["Do not use `null` as a property value for comparison." + " It will always be false and return an empty result."] @AT@ 5925 @LENGTH@ 123
---------------DEL InfixExpression@@"Do not use `null` as a property value for comparison." + " It will always be false and return an empty result." @AT@ 5930 @LENGTH@ 117
------------------DEL StringLiteral@@"Do not use `null` as a property value for comparison." @AT@ 5930 @LENGTH@ 55
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL StringLiteral@@" It will always be false and return an empty result." @AT@ 5993 @LENGTH@ 54
---INS Block@@ElseBody:if (parameter instanceof Range) {  return convertRange((Range)parameter);} else if (parameter instanceof Distance) {  return calculateDistanceInMeter((Distance)parameter);} else if (parameter instanceof Circle) {  return convertCircle((Circle)parameter);} else if (parameter instanceof Instant) {  return ((Instant)parameter).atOffset(ZoneOffset.UTC);} else if (parameter instanceof Box) {  return convertBox((Box)parameter);} else if (parameter instanceof BoundingBox) {  return convertBoundingBox((BoundingBox)parameter);} @TO@ IfStatement@@if (parameter == null) {  REPOSITORY_QUERY_LOG.warn("Do not use `null` as a property value for comparison." + " It will always be false and return an empty result.");  return Values.NULL;} @AT@ 6243 @LENGTH@ 560
------MOV IfStatement@@if (parameter instanceof Range) {  return convertRange((Range)parameter);} else if (parameter instanceof Distance) {  return calculateDistanceInMeter((Distance)parameter);} else if (parameter instanceof Circle) {  return convertCircle((Circle)parameter);} else if (parameter instanceof Instant) {  return ((Instant)parameter).atOffset(ZoneOffset.UTC);} else if (parameter instanceof Box) {  return convertBox((Box)parameter);} else if (parameter instanceof BoundingBox) {  return convertBoundingBox((BoundingBox)parameter);} @TO@ Block@@ElseBody:if (parameter instanceof Range) {  return convertRange((Range)parameter);} else if (parameter instanceof Distance) {  return calculateDistanceInMeter((Distance)parameter);} else if (parameter instanceof Circle) {  return convertCircle((Circle)parameter);} else if (parameter instanceof Instant) {  return ((Instant)parameter).atOffset(ZoneOffset.UTC);} else if (parameter instanceof Box) {  return convertBox((Box)parameter);} else if (parameter instanceof BoundingBox) {  return convertBoundingBox((BoundingBox)parameter);} @AT@ 6145 @LENGTH@ 560


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 2862 @LENGTH@ 110
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2877 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2902 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 2902 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2948 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:Assert.notNull(messageConverter,"'messageConverter' cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setMessageConverter, StreamMessageConverter messageConverter,  @AT@ 3561 @LENGTH@ 70
---INS MethodInvocation@@Assert.notNull(messageConverter,"'messageConverter' cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(messageConverter,"'messageConverter' cannot be null") @AT@ 3561 @LENGTH@ 69
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(messageConverter,"'messageConverter' cannot be null") @AT@ 3561 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[messageConverter, "'messageConverter' cannot be null"] @TO@ MethodInvocation@@Assert.notNull(messageConverter,"'messageConverter' cannot be null") @AT@ 3568 @LENGTH@ 62
---------INS SimpleName@@messageConverter @TO@ SimpleName@@MethodName:notNull:[messageConverter, "'messageConverter' cannot be null"] @AT@ 3576 @LENGTH@ 16
---------INS StringLiteral@@"'messageConverter' cannot be null" @TO@ SimpleName@@MethodName:notNull:[messageConverter, "'messageConverter' cannot be null"] @AT@ 3594 @LENGTH@ 35


INS ExpressionStatement@@MethodInvocation:listenerContainer.afterPropertiesSet() @TO@ MethodDeclaration@@protected, MessageListenerContainer, MethodName:createListenerContainer, RabbitListenerEndpoint endpoint, RabbitListenerContainerFactory<?> factory,  @AT@ 7372 @LENGTH@ 39
---MOV MethodInvocation@@((InitializingBean)listenerContainer).afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:listenerContainer.afterPropertiesSet() @AT@ 7568 @LENGTH@ 59
------INS SimpleName@@Name:listenerContainer @TO@ MethodInvocation@@((InitializingBean)listenerContainer).afterPropertiesSet() @AT@ 7372 @LENGTH@ 17


DEL FieldDeclaration@@Long, [maxRetryWaitingTime] @AT@ 979 @LENGTH@ 25
---DEL SimpleType@@Long @AT@ 979 @LENGTH@ 4
---DEL VariableDeclarationFragment@@maxRetryWaitingTime @AT@ 984 @LENGTH@ 19
------DEL SimpleName@@maxRetryWaitingTime @AT@ 984 @LENGTH@ 19


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @TO@ TypeDeclaration@@[public]MockConsumerInterceptor, [ConsumerInterceptor<String,String>] @AT@ 1371 @LENGTH@ 89
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @AT@ 1371 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @AT@ 1379 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @AT@ 1386 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @AT@ 1392 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class)] @AT@ 1399 @LENGTH@ 60
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class) @AT@ 1399 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(MockConsumerInterceptor.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(MockConsumerInterceptor.class) @AT@ 1405 @LENGTH@ 54
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(MockConsumerInterceptor.class) @AT@ 1405 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[MockConsumerInterceptor.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(MockConsumerInterceptor.class) @AT@ 1419 @LENGTH@ 40
------------INS TypeLiteral@@MockConsumerInterceptor.class @TO@ SimpleName@@MethodName:getLogger:[MockConsumerInterceptor.class] @AT@ 1429 @LENGTH@ 29


DEL IfStatement@@if (configuration == null) {  return new MongoDbConnectorEmbeddedDebeziumConfiguration();} @AT@ 1710 @LENGTH@ 110
---DEL InfixExpression@@configuration == null @AT@ 1714 @LENGTH@ 21
------DEL SimpleName@@configuration @AT@ 1714 @LENGTH@ 13
------DEL Operator@@== @AT@ 1727 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1731 @LENGTH@ 4
---DEL Block@@ThenBody:{  return new MongoDbConnectorEmbeddedDebeziumConfiguration();} @AT@ 1737 @LENGTH@ 83
------DEL ReturnStatement@@ClassInstanceCreation:new MongoDbConnectorEmbeddedDebeziumConfiguration() @AT@ 1751 @LENGTH@ 59
---------DEL ClassInstanceCreation@@MongoDbConnectorEmbeddedDebeziumConfiguration[] @AT@ 1758 @LENGTH@ 51
------------DEL New@@new @AT@ 1758 @LENGTH@ 3
------------DEL SimpleType@@MongoDbConnectorEmbeddedDebeziumConfiguration @AT@ 1762 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:when(session.lastBookmark()).thenReturn(Mockito.mock(Bookmark.class)) @TO@ MethodDeclaration@@void, MethodName:prepareMocks,  @AT@ 2950 @LENGTH@ 70
---INS MethodInvocation@@when(session.lastBookmark()).thenReturn(Mockito.mock(Bookmark.class)) @TO@ ExpressionStatement@@MethodInvocation:when(session.lastBookmark()).thenReturn(Mockito.mock(Bookmark.class)) @AT@ 2950 @LENGTH@ 69
------INS MethodInvocation@@MethodName:when:[session.lastBookmark()] @TO@ MethodInvocation@@when(session.lastBookmark()).thenReturn(Mockito.mock(Bookmark.class)) @AT@ 2950 @LENGTH@ 28
---------INS MethodInvocation@@session.lastBookmark() @TO@ MethodInvocation@@MethodName:when:[session.lastBookmark()] @AT@ 2955 @LENGTH@ 22
------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.lastBookmark() @AT@ 2955 @LENGTH@ 7
------------INS SimpleName@@MethodName:lastBookmark:[] @TO@ MethodInvocation@@session.lastBookmark() @AT@ 2963 @LENGTH@ 14
------INS SimpleName@@MethodName:thenReturn:[Mockito.mock(Bookmark.class)] @TO@ MethodInvocation@@when(session.lastBookmark()).thenReturn(Mockito.mock(Bookmark.class)) @AT@ 2979 @LENGTH@ 40
---------INS MethodInvocation@@Mockito.mock(Bookmark.class) @TO@ SimpleName@@MethodName:thenReturn:[Mockito.mock(Bookmark.class)] @AT@ 2990 @LENGTH@ 28
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.mock(Bookmark.class) @AT@ 2990 @LENGTH@ 7
------------INS SimpleName@@MethodName:mock:[Bookmark.class] @TO@ MethodInvocation@@Mockito.mock(Bookmark.class) @AT@ 2998 @LENGTH@ 20
---------------INS TypeLiteral@@Bookmark.class @TO@ SimpleName@@MethodName:mock:[Bookmark.class] @AT@ 3003 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:AbstractFileFilter.toFileVisitResult(accept(path.toFile()),path) @TO@ MethodInvocation:AbstractFileFilter.toDefaultFileVisitResult(accept(path.toFile())) @AT@ 2370 @LENGTH@ 73
---UPD MethodInvocation@@AbstractFileFilter.toFileVisitResult(accept(path.toFile()),path) @TO@ AbstractFileFilter.toDefaultFileVisitResult(accept(path.toFile())) @AT@ 2377 @LENGTH@ 65
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(path.toFile()), path] @TO@ MethodName:toDefaultFileVisitResult:[accept(path.toFile())] @AT@ 2396 @LENGTH@ 46
---------DEL SimpleName@@path @AT@ 2437 @LENGTH@ 4


DEL ExpressionStatement@@Assignment:this.port=port @AT@ 1913 @LENGTH@ 17
---DEL Assignment@@this.port=port @AT@ 1913 @LENGTH@ 16
------DEL FieldAccess@@this.port @AT@ 1913 @LENGTH@ 9
---------DEL ThisExpression@@this @AT@ 1913 @LENGTH@ 4
---------DEL SimpleName@@port @AT@ 1918 @LENGTH@ 4
------DEL Operator@@= @AT@ 1922 @LENGTH@ 1
------DEL SimpleName@@port @AT@ 1925 @LENGTH@ 4


UPD VariableDeclarationStatement@@String message=exchange.getException().getMessage(); @TO@ String message=ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage(); @AT@ 1918 @LENGTH@ 54
---UPD VariableDeclarationFragment@@message=exchange.getException().getMessage() @TO@ message=ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage() @AT@ 1925 @LENGTH@ 46
------DEL MethodInvocation@@exchange.getException().getMessage() @AT@ 1935 @LENGTH@ 36
------INS ConditionalExpression@@ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage() @TO@ VariableDeclarationFragment@@message=exchange.getException().getMessage() @AT@ 1978 @LENGTH@ 164
---------INS MethodInvocation@@ObjectHelper.isEmpty(exchange.getException().getMessage()) @TO@ ConditionalExpression@@ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage() @AT@ 1978 @LENGTH@ 58
------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(exchange.getException().getMessage()) @AT@ 1978 @LENGTH@ 12
------------INS SimpleName@@MethodName:isEmpty:[exchange.getException().getMessage()] @TO@ MethodInvocation@@ObjectHelper.isEmpty(exchange.getException().getMessage()) @AT@ 1991 @LENGTH@ 45
---------------INS MethodInvocation@@exchange.getException().getMessage() @TO@ SimpleName@@MethodName:isEmpty:[exchange.getException().getMessage()] @AT@ 1999 @LENGTH@ 36
------------------MOV MethodInvocation@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 1935 @LENGTH@ 23
------------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 1935 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 1959 @LENGTH@ 12
---------INS MethodInvocation@@exchange.getException().getClass().getName() @TO@ ConditionalExpression@@ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage() @AT@ 2059 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@exchange.getException().getClass().getName() @AT@ 2059 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException().getClass().getName() @AT@ 2059 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException().getClass().getName() @AT@ 2059 @LENGTH@ 8
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@exchange.getException().getClass().getName() @AT@ 2094 @LENGTH@ 9
---------INS MethodInvocation@@exchange.getException().getMessage() @TO@ ConditionalExpression@@ObjectHelper.isEmpty(exchange.getException().getMessage()) ? exchange.getException().getClass().getName() : exchange.getException().getMessage() @AT@ 2106 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 2106 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 2106 @LENGTH@ 8
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exchange.getException().getMessage() @AT@ 2130 @LENGTH@ 12


UPD TypeDeclaration@@[private, final]TracingLogListener, [LogListener] @TO@ [private, static, final]TracingLogListener, [LogListener] @AT@ 13151 @LENGTH@ 683
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]TracingLogListener, [LogListener] @AT@ 13159 @LENGTH@ 6


UPD IfStatement@@if (this.hasActualTypeAnnotation(RelationshipProperties.class)) {  TypeInformation<?> type=getRelationshipPropertiesTargetType(getActualType());  obverseOwner=this.mappingContext.getPersistentEntity(type);  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(getActualType());} else {  Class<?> associationTargetType=this.getAssociationTargetType();  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(associationTargetType)).orElse(null);  Assert.notNull(obverseOwner,"Obverse owner could not be added.");  if (dynamicAssociation) {    TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();    boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();    boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);    if (relationshipPropertiesCollection) {      TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());      obverseOwner=this.mappingContext.getPersistentEntity(type);      relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());    } else     if (relationshipPropertiesScalar) {      relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());    }  }} @TO@ if (this.hasActualTypeAnnotation(RelationshipProperties.class)) {  Class<?> type=getRelationshipPropertiesTargetType(getActualType());  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(getActualType())).get();} else {  Class<?> associationTargetType=this.getAssociationTargetType();  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(associationTargetType)).orElse(null);  Assert.notNull(obverseOwner,"Obverse owner could not be added.");  if (dynamicAssociation) {    TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();    boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();    boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);    if (relationshipPropertiesCollection) {      Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());      obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();      relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();    } else     if (relationshipPropertiesScalar) {      relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();    }  }} @AT@ 4381 @LENGTH@ 1500
---UPD Block@@ThenBody:{  TypeInformation<?> type=getRelationshipPropertiesTargetType(getActualType());  obverseOwner=this.mappingContext.getPersistentEntity(type);  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(getActualType());} @TO@ ThenBody:{  Class<?> type=getRelationshipPropertiesTargetType(getActualType());  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(getActualType())).get();} @AT@ 4445 @LENGTH@ 244
------UPD VariableDeclarationStatement@@TypeInformation<?> type=getRelationshipPropertiesTargetType(getActualType()); @TO@ Class<?> type=getRelationshipPropertiesTargetType(getActualType()); @AT@ 4450 @LENGTH@ 79
---------UPD ParameterizedType@@TypeInformation<?> @TO@ Class<?> @AT@ 4450 @LENGTH@ 18
------------UPD SimpleType@@TypeInformation @TO@ Class @AT@ 4450 @LENGTH@ 15
------UPD ExpressionStatement@@Assignment:obverseOwner=this.mappingContext.getPersistentEntity(type) @TO@ Assignment:obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 4533 @LENGTH@ 61
---------UPD Assignment@@obverseOwner=this.mappingContext.getPersistentEntity(type) @TO@ obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 4533 @LENGTH@ 60
------------UPD MethodInvocation@@this.mappingContext.getPersistentEntity(type) @TO@ this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 4548 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(type)] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(type) @AT@ 4564 @LENGTH@ 72
------------------INS MethodInvocation@@ClassTypeInformation.from(type) @TO@ MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(type)] @AT@ 4604 @LENGTH@ 31
---------------------MOV SimpleName@@MethodName:getPersistentEntity:[type] @TO@ MethodInvocation@@ClassTypeInformation.from(type) @AT@ 4568 @LENGTH@ 25
---------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(type) @AT@ 4604 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getPersistentEntity:[type] @TO@ MethodName:from:[type] @AT@ 4568 @LENGTH@ 25
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(type) @AT@ 4637 @LENGTH@ 5
------UPD ExpressionStatement@@Assignment:relationshipPropertiesClass=this.mappingContext.getPersistentEntity(getActualType()) @TO@ Assignment:relationshipPropertiesClass=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(getActualType())).get() @AT@ 4598 @LENGTH@ 87
---------UPD Assignment@@relationshipPropertiesClass=this.mappingContext.getPersistentEntity(getActualType()) @TO@ relationshipPropertiesClass=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(getActualType())).get() @AT@ 4598 @LENGTH@ 86
------------UPD MethodInvocation@@this.mappingContext.getPersistentEntity(getActualType()) @TO@ this.mappingContext.addPersistentEntity(ClassTypeInformation.from(getActualType())).get() @AT@ 4628 @LENGTH@ 56
---------------UPD SimpleName@@MethodName:getPersistentEntity:[getActualType()] @TO@ MethodName:from:[getActualType()] @AT@ 4648 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(getActualType())] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(getActualType()) @AT@ 4677 @LENGTH@ 83
------------------INS MethodInvocation@@ClassTypeInformation.from(getActualType()) @TO@ MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(getActualType())] @AT@ 4717 @LENGTH@ 42
---------------------MOV SimpleName@@MethodName:getPersistentEntity:[getActualType()] @TO@ MethodInvocation@@ClassTypeInformation.from(getActualType()) @AT@ 4648 @LENGTH@ 36
---------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(getActualType()) @AT@ 4717 @LENGTH@ 20
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(getActualType()) @AT@ 4761 @LENGTH@ 5
---UPD Block@@ElseBody:{  Class<?> associationTargetType=this.getAssociationTargetType();  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(associationTargetType)).orElse(null);  Assert.notNull(obverseOwner,"Obverse owner could not be added.");  if (dynamicAssociation) {    TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();    boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();    boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);    if (relationshipPropertiesCollection) {      TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());      obverseOwner=this.mappingContext.getPersistentEntity(type);      relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());    } else     if (relationshipPropertiesScalar) {      relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());    }  }} @TO@ ElseBody:{  Class<?> associationTargetType=this.getAssociationTargetType();  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(associationTargetType)).orElse(null);  Assert.notNull(obverseOwner,"Obverse owner could not be added.");  if (dynamicAssociation) {    TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();    boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();    boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);    if (relationshipPropertiesCollection) {      Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());      obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();      relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();    } else     if (relationshipPropertiesScalar) {      relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();    }  }} @AT@ 4695 @LENGTH@ 1186
------UPD IfStatement@@if (dynamicAssociation) {  TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();  boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();  boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);  if (relationshipPropertiesCollection) {    TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());    obverseOwner=this.mappingContext.getPersistentEntity(type);    relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());  } else   if (relationshipPropertiesScalar) {    relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());  }} @TO@ if (dynamicAssociation) {  TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();  boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();  boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);  if (relationshipPropertiesCollection) {    Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());    obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();    relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();  } else   if (relationshipPropertiesScalar) {    relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();  }} @AT@ 4961 @LENGTH@ 916
---------UPD Block@@ThenBody:{  TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();  boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();  boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);  if (relationshipPropertiesCollection) {    TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());    obverseOwner=this.mappingContext.getPersistentEntity(type);    relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());  } else   if (relationshipPropertiesScalar) {    relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());  }} @TO@ ThenBody:{  TypeInformation<?> mapValueType=this.getTypeInformation().getMapValueType();  boolean relationshipPropertiesCollection=this.mappingContext.getPersistentEntity(mapValueType.getActualType().getType()).isRelationshipPropertiesEntity();  boolean relationshipPropertiesScalar=mapValueType.getType().isAnnotationPresent(RelationshipProperties.class);  if (relationshipPropertiesCollection) {    Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());    obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();    relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();  } else   if (relationshipPropertiesScalar) {    relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();  }} @AT@ 4985 @LENGTH@ 892
------------UPD IfStatement@@if (relationshipPropertiesCollection) {  TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());  obverseOwner=this.mappingContext.getPersistentEntity(type);  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());} else if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());} @TO@ if (relationshipPropertiesCollection) {  Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} else if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} @AT@ 5377 @LENGTH@ 495
---------------UPD Block@@ThenBody:{  TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());  obverseOwner=this.mappingContext.getPersistentEntity(type);  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType());} @TO@ ThenBody:{  Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType());  obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get();  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} @AT@ 5415 @LENGTH@ 310
------------------UPD VariableDeclarationStatement@@TypeInformation<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType()); @TO@ Class<?> type=getRelationshipPropertiesTargetType(mapValueType.getActualType().getType()); @AT@ 5422 @LENGTH@ 102
---------------------UPD ParameterizedType@@TypeInformation<?> @TO@ Class<?> @AT@ 5422 @LENGTH@ 18
------------------------UPD SimpleType@@TypeInformation @TO@ Class @AT@ 5422 @LENGTH@ 15
------------------UPD ExpressionStatement@@Assignment:obverseOwner=this.mappingContext.getPersistentEntity(type) @TO@ Assignment:obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 5530 @LENGTH@ 61
---------------------UPD Assignment@@obverseOwner=this.mappingContext.getPersistentEntity(type) @TO@ obverseOwner=this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 5530 @LENGTH@ 60
------------------------UPD MethodInvocation@@this.mappingContext.getPersistentEntity(type) @TO@ this.mappingContext.addPersistentEntity(ClassTypeInformation.from(type)).get() @AT@ 5545 @LENGTH@ 45
---------------------------UPD SimpleName@@MethodName:getPersistentEntity:[type] @TO@ MethodName:from:[type] @AT@ 5565 @LENGTH@ 25
---------------------------INS MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(type)] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(type) @AT@ 5617 @LENGTH@ 72
------------------------------INS MethodInvocation@@ClassTypeInformation.from(type) @TO@ MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(type)] @AT@ 5657 @LENGTH@ 31
---------------------------------MOV SimpleName@@MethodName:getPersistentEntity:[type] @TO@ MethodInvocation@@ClassTypeInformation.from(type) @AT@ 5565 @LENGTH@ 25
---------------------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(type) @AT@ 5657 @LENGTH@ 20
---------------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(type) @AT@ 5690 @LENGTH@ 5
------------------UPD ExpressionStatement@@Assignment:relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType()) @TO@ Assignment:relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5597 @LENGTH@ 121
---------------------UPD Assignment@@relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType()) @TO@ relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5597 @LENGTH@ 120
------------------------UPD MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType()) @TO@ this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5627 @LENGTH@ 90
---------------------------DEL SimpleName@@MethodName:getPersistentEntity:[mapValueType.getComponentType().getType()] @AT@ 5655 @LENGTH@ 62
------------------------------DEL MethodInvocation@@mapValueType.getComponentType().getType() @AT@ 5675 @LENGTH@ 41
---------------------------------DEL MethodInvocation@@MethodName:getComponentType:[] @AT@ 5675 @LENGTH@ 31
---------------------------INS MethodInvocation@@MethodName:addPersistentEntity:[mapValueType.getComponentType()] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType()) @AT@ 5732 @LENGTH@ 80
------------------------------INS MethodInvocation@@mapValueType.getComponentType() @TO@ MethodInvocation@@MethodName:addPersistentEntity:[mapValueType.getComponentType()] @AT@ 5780 @LENGTH@ 31
---------------------------------MOV SimpleName@@Name:mapValueType @TO@ MethodInvocation@@mapValueType.getComponentType() @AT@ 5675 @LENGTH@ 12
---------------------------------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@mapValueType.getComponentType() @AT@ 5707 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getComponentType().getType()) @AT@ 5813 @LENGTH@ 5
---------------UPD Block@@ElseBody:if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());} @TO@ ElseBody:if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} @AT@ 5731 @LENGTH@ 141
------------------UPD IfStatement@@if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());} @TO@ if (relationshipPropertiesScalar) {  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} @AT@ 5731 @LENGTH@ 141
---------------------UPD Block@@ThenBody:{  relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType());} @TO@ ThenBody:{  relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get();} @AT@ 5765 @LENGTH@ 107
------------------------UPD ExpressionStatement@@Assignment:relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType()) @TO@ Assignment:relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5772 @LENGTH@ 94
---------------------------UPD Assignment@@relationshipPropertiesClass=this.mappingContext.getPersistentEntity(mapValueType.getType()) @TO@ relationshipPropertiesClass=this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5772 @LENGTH@ 93
------------------------------UPD MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getType()) @TO@ this.mappingContext.addPersistentEntity(mapValueType.getComponentType()).get() @AT@ 5802 @LENGTH@ 63
---------------------------------DEL SimpleName@@MethodName:getPersistentEntity:[mapValueType.getType()] @AT@ 5822 @LENGTH@ 43
------------------------------------DEL MethodInvocation@@mapValueType.getType() @AT@ 5842 @LENGTH@ 22
---------------------------------INS MethodInvocation@@MethodName:addPersistentEntity:[mapValueType.getComponentType()] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getType()) @AT@ 5903 @LENGTH@ 72
------------------------------------INS MethodInvocation@@mapValueType.getComponentType() @TO@ MethodInvocation@@MethodName:addPersistentEntity:[mapValueType.getComponentType()] @AT@ 5943 @LENGTH@ 31
---------------------------------------MOV SimpleName@@Name:mapValueType @TO@ MethodInvocation@@mapValueType.getComponentType() @AT@ 5842 @LENGTH@ 12
---------------------------------------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@mapValueType.getComponentType() @AT@ 5855 @LENGTH@ 9
---------------------------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@this.mappingContext.getPersistentEntity(mapValueType.getType()) @AT@ 5976 @LENGTH@ 5


UPD IfStatement@@if (((Oas20Document)openApi).definitions.getDefinitions() != null) {  for (  Oas20SchemaDefinition schemaDefinition : ((Oas20Document)openApi).definitions.getDefinitions()) {    schemaDefinition.clearExtensions();  }} @TO@ if (((Oas20Document)openApi).definitions != null && ((Oas20Document)openApi).definitions.getDefinitions() != null) {  for (  Oas20SchemaDefinition schemaDefinition : ((Oas20Document)openApi).definitions.getDefinitions()) {    schemaDefinition.clearExtensions();  }} @AT@ 2142 @LENGTH@ 277
---INS InfixExpression@@((Oas20Document)openApi).definitions != null && ((Oas20Document)openApi).definitions.getDefinitions() != null @TO@ IfStatement@@if (((Oas20Document)openApi).definitions.getDefinitions() != null) {  for (  Oas20SchemaDefinition schemaDefinition : ((Oas20Document)openApi).definitions.getDefinitions()) {    schemaDefinition.clearExtensions();  }} @AT@ 2146 @LENGTH@ 131
------MOV InfixExpression@@((Oas20Document)openApi).definitions.getDefinitions() != null @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null && ((Oas20Document)openApi).definitions.getDefinitions() != null @AT@ 2146 @LENGTH@ 62
------INS InfixExpression@@((Oas20Document)openApi).definitions != null @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null && ((Oas20Document)openApi).definitions.getDefinitions() != null @AT@ 2146 @LENGTH@ 45
---------INS FieldAccess@@((Oas20Document)openApi).definitions @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null @AT@ 2146 @LENGTH@ 37
------------INS ParenthesizedExpression@@((Oas20Document)openApi) @TO@ FieldAccess@@((Oas20Document)openApi).definitions @AT@ 2146 @LENGTH@ 25
---------------INS CastExpression@@(Oas20Document)openApi @TO@ ParenthesizedExpression@@((Oas20Document)openApi) @AT@ 2147 @LENGTH@ 23
------------------INS SimpleType@@Oas20Document @TO@ CastExpression@@(Oas20Document)openApi @AT@ 2148 @LENGTH@ 13
------------------INS SimpleName@@openApi @TO@ CastExpression@@(Oas20Document)openApi @AT@ 2163 @LENGTH@ 7
------------INS SimpleName@@definitions @TO@ FieldAccess@@((Oas20Document)openApi).definitions @AT@ 2172 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null @AT@ 2183 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null @AT@ 2187 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@((Oas20Document)openApi).definitions != null && ((Oas20Document)openApi).definitions.getDefinitions() != null @AT@ 2191 @LENGTH@ 2


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 3942 @LENGTH@ 110
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3957 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3982 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 3982 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4028 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2346 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2346 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2346 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2351 @LENGTH@ 30


UPD MethodDeclaration@@final, Object, MethodName:convertParameter, Object parameter, @Nullable Function<Object,Value> conversionOverride,  @TO@ final, Object, MethodName:convertParameter, Object parameter, @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride,  @AT@ 6741 @LENGTH@ 1645
---UPD SingleVariableDeclaration@@@Nullable Function<Object,Value> conversionOverride @TO@ @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride @AT@ 6789 @LENGTH@ 52
------UPD ParameterizedType@@Function<Object,Value> @TO@ Neo4jPersistentPropertyConverter<?> @AT@ 6799 @LENGTH@ 23
---------UPD SimpleType@@Function @TO@ Neo4jPersistentPropertyConverter @AT@ 6799 @LENGTH@ 8
---------DEL SimpleType@@Object @AT@ 6808 @LENGTH@ 6
---------DEL SimpleType@@Value @AT@ 6816 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Function<Object,Value> @AT@ 6850 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Error processing async exchange with error:" + error.getMessage()) @TO@ MethodInvocation:LOG.debug("Error processing async exchange with error: {}",error.getMessage()) @AT@ 3230 @LENGTH@ 78
---UPD MethodInvocation@@LOG.debug("Error processing async exchange with error:" + error.getMessage()) @TO@ LOG.debug("Error processing async exchange with error: {}",error.getMessage()) @AT@ 3230 @LENGTH@ 77
------UPD SimpleName@@MethodName:debug:["Error processing async exchange with error:" + error.getMessage()] @TO@ MethodName:debug:["Error processing async exchange with error: {}", error.getMessage()] @AT@ 3234 @LENGTH@ 73
---------DEL InfixExpression@@"Error processing async exchange with error:" + error.getMessage() @AT@ 3240 @LENGTH@ 66
------------DEL StringLiteral@@"Error processing async exchange with error:" @AT@ 3240 @LENGTH@ 45
------------DEL Operator@@+ @AT@ 3285 @LENGTH@ 1
------------DEL MethodInvocation@@error.getMessage() @AT@ 3288 @LENGTH@ 18
---------INS StringLiteral@@"Error processing async exchange with error: {}" @TO@ SimpleName@@MethodName:debug:["Error processing async exchange with error:" + error.getMessage()] @AT@ 3240 @LENGTH@ 48
---------INS MethodInvocation@@error.getMessage() @TO@ SimpleName@@MethodName:debug:["Error processing async exchange with error:" + error.getMessage()] @AT@ 3290 @LENGTH@ 18
------------MOV SimpleName@@Name:error @TO@ MethodInvocation@@error.getMessage() @AT@ 3288 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@error.getMessage() @AT@ 3294 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:consumerRecords.forEach(r -> LOG.trace("Captured on mock: {}",r.value())) @TO@ MethodDeclaration@@public, ConsumerRecords<String,String>, MethodName:onConsume, ConsumerRecords<String,String> consumerRecords,  @AT@ 1588 @LENGTH@ 75
---INS MethodInvocation@@consumerRecords.forEach(r -> LOG.trace("Captured on mock: {}",r.value())) @TO@ ExpressionStatement@@MethodInvocation:consumerRecords.forEach(r -> LOG.trace("Captured on mock: {}",r.value())) @AT@ 1588 @LENGTH@ 74
------INS SimpleName@@Name:consumerRecords @TO@ MethodInvocation@@consumerRecords.forEach(r -> LOG.trace("Captured on mock: {}",r.value())) @AT@ 1588 @LENGTH@ 15
------INS SimpleName@@MethodName:forEach:[r -> LOG.trace("Captured on mock: {}",r.value())] @TO@ MethodInvocation@@consumerRecords.forEach(r -> LOG.trace("Captured on mock: {}",r.value())) @AT@ 1604 @LENGTH@ 58
---------INS LambdaExpression@@r -> LOG.trace("Captured on mock: {}",r.value()) @TO@ SimpleName@@MethodName:forEach:[r -> LOG.trace("Captured on mock: {}",r.value())] @AT@ 1612 @LENGTH@ 49
------------INS VariableDeclarationFragment@@r @TO@ LambdaExpression@@r -> LOG.trace("Captured on mock: {}",r.value()) @AT@ 1612 @LENGTH@ 1
---------------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r @AT@ 1612 @LENGTH@ 1
------------INS MethodInvocation@@LOG.trace("Captured on mock: {}",r.value()) @TO@ LambdaExpression@@r -> LOG.trace("Captured on mock: {}",r.value()) @AT@ 1617 @LENGTH@ 44
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Captured on mock: {}",r.value()) @AT@ 1617 @LENGTH@ 3
---------------INS SimpleName@@MethodName:trace:["Captured on mock: {}", r.value()] @TO@ MethodInvocation@@LOG.trace("Captured on mock: {}",r.value()) @AT@ 1621 @LENGTH@ 40
------------------INS StringLiteral@@"Captured on mock: {}" @TO@ SimpleName@@MethodName:trace:["Captured on mock: {}", r.value()] @AT@ 1627 @LENGTH@ 22
------------------INS MethodInvocation@@r.value() @TO@ SimpleName@@MethodName:trace:["Captured on mock: {}", r.value()] @AT@ 1651 @LENGTH@ 9
---------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.value() @AT@ 1651 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@r.value() @AT@ 1653 @LENGTH@ 7


UPD TryStatement@@try {  long loadTaskStartTime=System.currentTimeMillis();  SecurityUtils.reloginExpiringKeytabUser();  Task<?> rootTask=work.getRootTask();  if (rootTask != null) {    rootTask.setChildTasks(null);  }  work.setRootTask(this);  this.parentTasks=null;  String mapRedCustomName=ReplUtils.getDistCpCustomName(conf,work.dbNameToLoadIn);  conf.set(JobContext.JOB_NAME,mapRedCustomName);  if (shouldLoadAtlasMetadata()) {    addAtlasLoadTask();  }  if (conf.getBoolVar(HiveConf.ConfVars.REPL_RANGER_HANDLE_DENY_POLICY_TARGET)) {    initiateRangerDenytask();  }  if (shouldLoadAuthorizationMetadata()) {    initiateAuthorizationLoadTask();  }  LOG.info("Data copy at load enabled : {}",conf.getBoolVar(HiveConf.ConfVars.REPL_RUN_DATA_COPY_TASKS_ON_TARGET));  if (work.isIncrementalLoad()) {    return executeIncrementalLoad(loadTaskStartTime);  } else {    return executeBootStrapLoad();  }} catch (RuntimeException e) {  LOG.error("replication failed with run time exception",e);  setException(e);  try {    ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);  }  throw e;}catch (Exception e) {  setException(e);  int errorCode=ErrorMsg.getErrorMsg(e.getMessage()).getErrorCode();  try {    return ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);    return errorCode;  }} @TO@ try {  long loadTaskStartTime=System.currentTimeMillis();  SecurityUtils.reloginExpiringKeytabUser();  if (MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase()))) {    throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);  }  Task<?> rootTask=work.getRootTask();  if (rootTask != null) {    rootTask.setChildTasks(null);  }  work.setRootTask(this);  this.parentTasks=null;  String mapRedCustomName=ReplUtils.getDistCpCustomName(conf,work.dbNameToLoadIn);  conf.set(JobContext.JOB_NAME,mapRedCustomName);  if (shouldLoadAtlasMetadata()) {    addAtlasLoadTask();  }  if (conf.getBoolVar(HiveConf.ConfVars.REPL_RANGER_HANDLE_DENY_POLICY_TARGET)) {    initiateRangerDenytask();  }  if (shouldLoadAuthorizationMetadata()) {    initiateAuthorizationLoadTask();  }  LOG.info("Data copy at load enabled : {}",conf.getBoolVar(HiveConf.ConfVars.REPL_RUN_DATA_COPY_TASKS_ON_TARGET));  if (work.isIncrementalLoad()) {    return executeIncrementalLoad(loadTaskStartTime);  } else {    return executeBootStrapLoad();  }} catch (RuntimeException e) {  LOG.error("replication failed with run time exception",e);  setException(e);  try {    ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);  }  throw e;}catch (Exception e) {  setException(e);  int errorCode=ErrorMsg.getErrorMsg(e.getMessage()).getErrorCode();  try {    return ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);    return errorCode;  }} @AT@ 6227 @LENGTH@ 1960
---INS IfStatement@@if (MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase()))) {  throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);} @TO@ TryStatement@@try {  long loadTaskStartTime=System.currentTimeMillis();  SecurityUtils.reloginExpiringKeytabUser();  Task<?> rootTask=work.getRootTask();  if (rootTask != null) {    rootTask.setChildTasks(null);  }  work.setRootTask(this);  this.parentTasks=null;  String mapRedCustomName=ReplUtils.getDistCpCustomName(conf,work.dbNameToLoadIn);  conf.set(JobContext.JOB_NAME,mapRedCustomName);  if (shouldLoadAtlasMetadata()) {    addAtlasLoadTask();  }  if (conf.getBoolVar(HiveConf.ConfVars.REPL_RANGER_HANDLE_DENY_POLICY_TARGET)) {    initiateRangerDenytask();  }  if (shouldLoadAuthorizationMetadata()) {    initiateAuthorizationLoadTask();  }  LOG.info("Data copy at load enabled : {}",conf.getBoolVar(HiveConf.ConfVars.REPL_RUN_DATA_COPY_TASKS_ON_TARGET));  if (work.isIncrementalLoad()) {    return executeIncrementalLoad(loadTaskStartTime);  } else {    return executeBootStrapLoad();  }} catch (RuntimeException e) {  LOG.error("replication failed with run time exception",e);  setException(e);  try {    ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);  }  throw e;}catch (Exception e) {  setException(e);  int errorCode=ErrorMsg.getErrorMsg(e.getMessage()).getErrorCode();  try {    return ReplUtils.handleException(true,e,new Path(work.getDumpDirectory()).getParent().toString(),work.getMetricCollector(),STAGE_NAME,conf);  } catch (  Exception ex) {    LOG.error("Failed to collect replication metrics: ",ex);    return errorCode;  }} @AT@ 6411 @LENGTH@ 195
------INS MethodInvocation@@MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase())) @TO@ IfStatement@@if (MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase()))) {  throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);} @AT@ 6415 @LENGTH@ 84
---------INS SimpleName@@Name:MetaStoreUtils @TO@ MethodInvocation@@MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase())) @AT@ 6415 @LENGTH@ 14
---------INS SimpleName@@MethodName:isDbReplIncompatible:[getHive().getDatabase(work.getTargetDatabase())] @TO@ MethodInvocation@@MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase())) @AT@ 6430 @LENGTH@ 69
------------INS MethodInvocation@@getHive().getDatabase(work.getTargetDatabase()) @TO@ SimpleName@@MethodName:isDbReplIncompatible:[getHive().getDatabase(work.getTargetDatabase())] @AT@ 6451 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:getHive:[] @TO@ MethodInvocation@@getHive().getDatabase(work.getTargetDatabase()) @AT@ 6451 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getDatabase:[work.getTargetDatabase()] @TO@ MethodInvocation@@getHive().getDatabase(work.getTargetDatabase()) @AT@ 6461 @LENGTH@ 37
------------------INS MethodInvocation@@work.getTargetDatabase() @TO@ SimpleName@@MethodName:getDatabase:[work.getTargetDatabase()] @AT@ 6473 @LENGTH@ 24
---------------------INS SimpleName@@Name:work @TO@ MethodInvocation@@work.getTargetDatabase() @AT@ 6473 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getTargetDatabase:[] @TO@ MethodInvocation@@work.getTargetDatabase() @AT@ 6478 @LENGTH@ 19
------INS Block@@ThenBody:{  throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);} @TO@ IfStatement@@if (MetaStoreUtils.isDbReplIncompatible(getHive().getDatabase(work.getTargetDatabase()))) {  throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);} @AT@ 6501 @LENGTH@ 105
---------INS ThrowStatement@@ClassInstanceCreation:new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn) @TO@ Block@@ThenBody:{  throw new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn);} @AT@ 6511 @LENGTH@ 87
------------INS ClassInstanceCreation@@SemanticException[ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION, work.dbNameToLoadIn] @TO@ ThrowStatement@@ClassInstanceCreation:new SemanticException(ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION,work.dbNameToLoadIn) @AT@ 6517 @LENGTH@ 80
---------------INS New@@new @TO@ ClassInstanceCreation@@SemanticException[ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION, work.dbNameToLoadIn] @AT@ 6517 @LENGTH@ 3
---------------INS SimpleType@@SemanticException @TO@ ClassInstanceCreation@@SemanticException[ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION, work.dbNameToLoadIn] @AT@ 6521 @LENGTH@ 17
---------------INS QualifiedName@@ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION @TO@ ClassInstanceCreation@@SemanticException[ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION, work.dbNameToLoadIn] @AT@ 6539 @LENGTH@ 36
------------------INS SimpleName@@ErrorMsg @TO@ QualifiedName@@ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION @AT@ 6539 @LENGTH@ 8
------------------INS SimpleName@@REPL_INCOMPATIBLE_EXCEPTION @TO@ QualifiedName@@ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION @AT@ 6548 @LENGTH@ 27
---------------INS QualifiedName@@work.dbNameToLoadIn @TO@ ClassInstanceCreation@@SemanticException[ErrorMsg.REPL_INCOMPATIBLE_EXCEPTION, work.dbNameToLoadIn] @AT@ 6577 @LENGTH@ 19
------------------INS SimpleName@@work @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 6577 @LENGTH@ 4
------------------INS SimpleName@@dbNameToLoadIn @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 6582 @LENGTH@ 14


UPD FieldDeclaration@@private, static, final, Pattern, [DOT_POSITIONAL_PATTERN=Pattern.compile("\\.\\d+")] @TO@ private, static, final, Pattern, [DOT_POSITIONAL_PATTERN=Pattern.compile("\\.\\d+(?!$)")] @AT@ 30678 @LENGTH@ 81
---UPD VariableDeclarationFragment@@DOT_POSITIONAL_PATTERN=Pattern.compile("\\.\\d+") @TO@ DOT_POSITIONAL_PATTERN=Pattern.compile("\\.\\d+(?!$)") @AT@ 30707 @LENGTH@ 51
------UPD MethodInvocation@@Pattern.compile("\\.\\d+") @TO@ Pattern.compile("\\.\\d+(?!$)") @AT@ 30732 @LENGTH@ 26
---------UPD SimpleName@@MethodName:compile:["\\.\\d+"] @TO@ MethodName:compile:["\\.\\d+(?!$)"] @AT@ 30740 @LENGTH@ 18
------------UPD StringLiteral@@"\\.\\d+" @TO@ "\\.\\d+(?!$)" @AT@ 30748 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:instantiationSuceedsWithEmtpyBaseDn,  @TO@ public, void, MethodName:instantiationSucceedsWithEmptyBaseDn,  @AT@ 5547 @LENGTH@ 436
---UPD SimpleName@@MethodName:instantiationSuceedsWithEmtpyBaseDn @TO@ MethodName:instantiationSucceedsWithEmptyBaseDn @AT@ 5559 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @TO@ TypeDeclaration@@[public]HttpConverterTest, BaseJettyTest @AT@ 4146 @LENGTH@ 1162
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 4146 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 4153 @LENGTH@ 4
---INS SimpleName@@MethodName:testToServletInputDisableStreamStreamCaching @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 4158 @LENGTH@ 44
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 4212 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 4232 @LENGTH@ 898
------INS MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
) @AT@ 4232 @LENGTH@ 897
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
) @AT@ 4232 @LENGTH@ 7
---------INS SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
] @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
) @AT@ 4240 @LENGTH@ 889
------------INS ClassInstanceCreation@@RouteBuilder[] @TO@ SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
      public void process(      Exchange exchange) throws Exception {
        HttpMessage msg=exchange.getIn(HttpMessage.class);
        ServletInputStream sis=HttpConverter.toServletInputStream(msg);
        assertNotNull(sis);
        assertEquals(11,sis.available());
        String s=context.getTypeConverter().convertTo(String.class,sis);
        assertEquals("Hello World",s);
      }
    }
).transform(constant("Bye World"));
  }
}
] @AT@ 4250 @LENGTH@ 878
---------------INS New@@new @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4250 @LENGTH@ 3
---------------INS SimpleType@@RouteBuilder @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4254 @LENGTH@ 12
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4269 @LENGTH@ 859
------------------INS MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4305 @LENGTH@ 813
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4305 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4312 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4317 @LENGTH@ 9
---------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4336 @LENGTH@ 9
---------------------INS ExpressionStatement@@MethodInvocation:from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4364 @LENGTH@ 740
------------------------INS MethodInvocation@@from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @TO@ ExpressionStatement@@MethodInvocation:from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @AT@ 4364 @LENGTH@ 739
---------------------------INS MethodInvocation@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
] @TO@ MethodInvocation@@from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @AT@ 4364 @LENGTH@ 706
------------------------------INS ClassInstanceCreation@@Processor[] @TO@ MethodInvocation@@MethodName:process:[new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
] @AT@ 4443 @LENGTH@ 626
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 4443 @LENGTH@ 3
---------------------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 4447 @LENGTH@ 9
---------------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 4459 @LENGTH@ 610
------------------------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4481 @LENGTH@ 570
---------------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4481 @LENGTH@ 6
---------------------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4488 @LENGTH@ 4
---------------------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4493 @LENGTH@ 7
---------------------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4501 @LENGTH@ 17
------------------------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4501 @LENGTH@ 8
------------------------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 4510 @LENGTH@ 8
---------------------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4527 @LENGTH@ 9
---------------------------------------INS VariableDeclarationStatement@@HttpMessage msg=exchange.getIn(HttpMessage.class); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4563 @LENGTH@ 52
------------------------------------------INS SimpleType@@HttpMessage @TO@ VariableDeclarationStatement@@HttpMessage msg=exchange.getIn(HttpMessage.class); @AT@ 4563 @LENGTH@ 11
------------------------------------------INS VariableDeclarationFragment@@msg=exchange.getIn(HttpMessage.class) @TO@ VariableDeclarationStatement@@HttpMessage msg=exchange.getIn(HttpMessage.class); @AT@ 4575 @LENGTH@ 39
---------------------------------------------INS SimpleName@@msg @TO@ VariableDeclarationFragment@@msg=exchange.getIn(HttpMessage.class) @AT@ 4575 @LENGTH@ 3
---------------------------------------------INS MethodInvocation@@exchange.getIn(HttpMessage.class) @TO@ VariableDeclarationFragment@@msg=exchange.getIn(HttpMessage.class) @AT@ 4581 @LENGTH@ 33
------------------------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn(HttpMessage.class) @AT@ 4581 @LENGTH@ 8
------------------------------------------------INS SimpleName@@MethodName:getIn:[HttpMessage.class] @TO@ MethodInvocation@@exchange.getIn(HttpMessage.class) @AT@ 4590 @LENGTH@ 24
---------------------------------------------------INS TypeLiteral@@HttpMessage.class @TO@ SimpleName@@MethodName:getIn:[HttpMessage.class] @AT@ 4596 @LENGTH@ 17
---------------------------------------INS VariableDeclarationStatement@@ServletInputStream sis=HttpConverter.toServletInputStream(msg); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4712 @LENGTH@ 65
------------------------------------------INS SimpleType@@ServletInputStream @TO@ VariableDeclarationStatement@@ServletInputStream sis=HttpConverter.toServletInputStream(msg); @AT@ 4712 @LENGTH@ 18
------------------------------------------INS VariableDeclarationFragment@@sis=HttpConverter.toServletInputStream(msg) @TO@ VariableDeclarationStatement@@ServletInputStream sis=HttpConverter.toServletInputStream(msg); @AT@ 4731 @LENGTH@ 45
---------------------------------------------INS SimpleName@@sis @TO@ VariableDeclarationFragment@@sis=HttpConverter.toServletInputStream(msg) @AT@ 4731 @LENGTH@ 3
---------------------------------------------INS MethodInvocation@@HttpConverter.toServletInputStream(msg) @TO@ VariableDeclarationFragment@@sis=HttpConverter.toServletInputStream(msg) @AT@ 4737 @LENGTH@ 39
------------------------------------------------INS SimpleName@@Name:HttpConverter @TO@ MethodInvocation@@HttpConverter.toServletInputStream(msg) @AT@ 4737 @LENGTH@ 13
------------------------------------------------INS SimpleName@@MethodName:toServletInputStream:[msg] @TO@ MethodInvocation@@HttpConverter.toServletInputStream(msg) @AT@ 4751 @LENGTH@ 25
---------------------------------------------------INS SimpleName@@msg @TO@ SimpleName@@MethodName:toServletInputStream:[msg] @AT@ 4772 @LENGTH@ 3
---------------------------------------INS ExpressionStatement@@MethodInvocation:assertNotNull(sis) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4802 @LENGTH@ 19
------------------------------------------INS MethodInvocation@@assertNotNull(sis) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(sis) @AT@ 4802 @LENGTH@ 18
---------------------------------------------INS SimpleName@@MethodName:assertNotNull:[sis] @TO@ MethodInvocation@@assertNotNull(sis) @AT@ 4802 @LENGTH@ 18
------------------------------------------------INS SimpleName@@sis @TO@ SimpleName@@MethodName:assertNotNull:[sis] @AT@ 4816 @LENGTH@ 3
---------------------------------------INS ExpressionStatement@@MethodInvocation:assertEquals(11,sis.available()) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4846 @LENGTH@ 34
------------------------------------------INS MethodInvocation@@assertEquals(11,sis.available()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(11,sis.available()) @AT@ 4846 @LENGTH@ 33
---------------------------------------------INS SimpleName@@MethodName:assertEquals:[11, sis.available()] @TO@ MethodInvocation@@assertEquals(11,sis.available()) @AT@ 4846 @LENGTH@ 33
------------------------------------------------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:assertEquals:[11, sis.available()] @AT@ 4859 @LENGTH@ 2
------------------------------------------------INS MethodInvocation@@sis.available() @TO@ SimpleName@@MethodName:assertEquals:[11, sis.available()] @AT@ 4863 @LENGTH@ 15
---------------------------------------------------INS SimpleName@@Name:sis @TO@ MethodInvocation@@sis.available() @AT@ 4863 @LENGTH@ 3
---------------------------------------------------INS SimpleName@@MethodName:available:[] @TO@ MethodInvocation@@sis.available() @AT@ 4867 @LENGTH@ 11
---------------------------------------INS VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,sis); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4905 @LENGTH@ 67
------------------------------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,sis); @AT@ 4905 @LENGTH@ 6
------------------------------------------INS VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,sis) @TO@ VariableDeclarationStatement@@String s=context.getTypeConverter().convertTo(String.class,sis); @AT@ 4912 @LENGTH@ 59
---------------------------------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,sis) @AT@ 4912 @LENGTH@ 1
---------------------------------------------INS MethodInvocation@@context.getTypeConverter().convertTo(String.class,sis) @TO@ VariableDeclarationFragment@@s=context.getTypeConverter().convertTo(String.class,sis) @AT@ 4916 @LENGTH@ 55
------------------------------------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,sis) @AT@ 4916 @LENGTH@ 26
------------------------------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,sis) @AT@ 4916 @LENGTH@ 7
------------------------------------------------INS SimpleName@@MethodName:convertTo:[String.class, sis] @TO@ MethodInvocation@@context.getTypeConverter().convertTo(String.class,sis) @AT@ 4943 @LENGTH@ 28
---------------------------------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:convertTo:[String.class, sis] @AT@ 4953 @LENGTH@ 12
---------------------------------------------------INS SimpleName@@sis @TO@ SimpleName@@MethodName:convertTo:[String.class, sis] @AT@ 4967 @LENGTH@ 3
---------------------------------------INS ExpressionStatement@@MethodInvocation:assertEquals("Hello World",s) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 4998 @LENGTH@ 31
------------------------------------------INS MethodInvocation@@assertEquals("Hello World",s) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello World",s) @AT@ 4998 @LENGTH@ 30
---------------------------------------------INS SimpleName@@MethodName:assertEquals:["Hello World", s] @TO@ MethodInvocation@@assertEquals("Hello World",s) @AT@ 4998 @LENGTH@ 30
------------------------------------------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:["Hello World", s] @AT@ 5011 @LENGTH@ 13
------------------------------------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:assertEquals:["Hello World", s] @AT@ 5026 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:from:["jetty://http://localhost:{{port}}/test?disableStreamCache=true"] @TO@ MethodInvocation@@from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @AT@ 4364 @LENGTH@ 70
------------------------------INS StringLiteral@@"jetty://http://localhost:{{port}}/test?disableStreamCache=true" @TO@ MethodInvocation@@MethodName:from:["jetty://http://localhost:{{port}}/test?disableStreamCache=true"] @AT@ 4369 @LENGTH@ 64
---------------------------INS SimpleName@@MethodName:transform:[constant("Bye World")] @TO@ MethodInvocation@@from("jetty://http://localhost:{{port}}/test?disableStreamCache=true").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    HttpMessage msg=exchange.getIn(HttpMessage.class);
    ServletInputStream sis=HttpConverter.toServletInputStream(msg);
    assertNotNull(sis);
    assertEquals(11,sis.available());
    String s=context.getTypeConverter().convertTo(String.class,sis);
    assertEquals("Hello World",s);
  }
}
).transform(constant("Bye World")) @AT@ 5071 @LENGTH@ 32
------------------------------INS MethodInvocation@@constant("Bye World") @TO@ SimpleName@@MethodName:transform:[constant("Bye World")] @AT@ 5081 @LENGTH@ 21
---------------------------------INS SimpleName@@MethodName:constant:["Bye World"] @TO@ MethodInvocation@@constant("Bye World") @AT@ 5081 @LENGTH@ 21
------------------------------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:constant:["Bye World"] @AT@ 5090 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 5139 @LENGTH@ 16
------INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 5139 @LENGTH@ 15
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 5139 @LENGTH@ 7
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 5147 @LENGTH@ 7
---INS VariableDeclarationStatement@@String out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class); @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 5165 @LENGTH@ 97
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class); @AT@ 5165 @LENGTH@ 6
------INS VariableDeclarationFragment@@out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @TO@ VariableDeclarationStatement@@String out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class); @AT@ 5172 @LENGTH@ 89
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @AT@ 5172 @LENGTH@ 3
---------INS MethodInvocation@@template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @TO@ VariableDeclarationFragment@@out=template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @AT@ 5178 @LENGTH@ 83
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @AT@ 5178 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/test", "Hello World", String.class] @TO@ MethodInvocation@@template.requestBody("http://localhost:{{port}}/test","Hello World",String.class) @AT@ 5187 @LENGTH@ 74
---------------INS StringLiteral@@"http://localhost:{{port}}/test" @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/test", "Hello World", String.class] @AT@ 5199 @LENGTH@ 32
---------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/test", "Hello World", String.class] @AT@ 5233 @LENGTH@ 13
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/test", "Hello World", String.class] @AT@ 5248 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @TO@ MethodDeclaration@@public, void, MethodName:testToServletInputDisableStreamStreamCaching, Exception,  @AT@ 5271 @LENGTH@ 31
------INS MethodInvocation@@assertEquals("Bye World",out) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @AT@ 5271 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertEquals:["Bye World", out] @TO@ MethodInvocation@@assertEquals("Bye World",out) @AT@ 5271 @LENGTH@ 30
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 5284 @LENGTH@ 11
------------INS SimpleName@@out @TO@ SimpleName@@MethodName:assertEquals:["Bye World", out] @AT@ 5297 @LENGTH@ 3


UPD TypeDeclaration@@[@org.junit.Ignore("HIVE-23944"), public]TestStatsReplicationScenariosMMNoAutogather, TestStatsReplicationScenarios @TO@ [public]TestStatsReplicationScenariosMMNoAutogather, TestStatsReplicationScenarios @AT@ 1230 @LENGTH@ 1042
---DEL SingleMemberAnnotation@@@org.junit.Ignore("HIVE-23944") @AT@ 1230 @LENGTH@ 31


DEL MethodDeclaration@@private, static, void, MethodName:ignoreByteVector24, ByteBuffer input,  @AT@ 18969 @LENGTH@ 114
---DEL Modifier@@private @AT@ 18969 @LENGTH@ 7
---DEL Modifier@@static @AT@ 18977 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 18984 @LENGTH@ 4
---DEL SimpleName@@MethodName:ignoreByteVector24 @AT@ 18989 @LENGTH@ 18
---DEL SingleVariableDeclaration@@ByteBuffer input @AT@ 19008 @LENGTH@ 16
------DEL SimpleType@@ByteBuffer @AT@ 19008 @LENGTH@ 10
------DEL SimpleName@@input @AT@ 19019 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:ignoreByteVector(input,getInt24(input)) @AT@ 19036 @LENGTH@ 41
------DEL MethodInvocation@@ignoreByteVector(input,getInt24(input)) @AT@ 19036 @LENGTH@ 40
---------DEL SimpleName@@MethodName:ignoreByteVector:[input, getInt24(input)] @AT@ 19036 @LENGTH@ 40
------------DEL SimpleName@@input @AT@ 19053 @LENGTH@ 5
------------DEL MethodInvocation@@getInt24(input) @AT@ 19060 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:getInt24:[input] @AT@ 19060 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 19069 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:customConversion.getOptional().map(c -> nullSafeWrite(c::write)).orElse(null) @TO@ MethodInvocation:customConversion.getOptional().map(c -> {
  Function<Object,Value> originalConversion=c::write;
  return this.isComposite() ? originalConversion : nullSafeWrite(originalConversion);
}
).orElse(null) @AT@ 8436 @LENGTH@ 85
---UPD MethodInvocation@@customConversion.getOptional().map(c -> nullSafeWrite(c::write)).orElse(null) @TO@ customConversion.getOptional().map(c -> {
  Function<Object,Value> originalConversion=c::write;
  return this.isComposite() ? originalConversion : nullSafeWrite(originalConversion);
}
).orElse(null) @AT@ 8443 @LENGTH@ 77
------UPD MethodInvocation@@MethodName:map:[c -> nullSafeWrite(c::write)] @TO@ MethodName:map:[c -> {
  Function<Object,Value> originalConversion=c::write;
  return this.isComposite() ? originalConversion : nullSafeWrite(originalConversion);
}
] @AT@ 8443 @LENGTH@ 64
---------UPD LambdaExpression@@c -> nullSafeWrite(c::write) @TO@ c -> {
  Function<Object,Value> originalConversion=c::write;
  return this.isComposite() ? originalConversion : nullSafeWrite(originalConversion);
}
 @AT@ 8478 @LENGTH@ 28
------------DEL MethodInvocation@@nullSafeWrite(c::write) @AT@ 8483 @LENGTH@ 23
------------INS VariableDeclarationStatement@@Function<Object,Value> originalConversion=c::write; @TO@ LambdaExpression@@c -> nullSafeWrite(c::write) @AT@ 8495 @LENGTH@ 54
---------------INS ParameterizedType@@Function<Object,Value> @TO@ VariableDeclarationStatement@@Function<Object,Value> originalConversion=c::write; @AT@ 8495 @LENGTH@ 23
------------------INS SimpleType@@Function @TO@ ParameterizedType@@Function<Object,Value> @AT@ 8495 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Function<Object,Value> @AT@ 8504 @LENGTH@ 6
------------------INS SimpleType@@Value @TO@ ParameterizedType@@Function<Object,Value> @AT@ 8512 @LENGTH@ 5
---------------INS VariableDeclarationFragment@@originalConversion=c::write @TO@ VariableDeclarationStatement@@Function<Object,Value> originalConversion=c::write; @AT@ 8519 @LENGTH@ 29
------------------INS SimpleName@@originalConversion @TO@ VariableDeclarationFragment@@originalConversion=c::write @AT@ 8519 @LENGTH@ 18
------------INS ReturnStatement@@ConditionalExpression:this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @TO@ LambdaExpression@@c -> nullSafeWrite(c::write) @AT@ 8555 @LENGTH@ 83
---------------INS ConditionalExpression@@this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @TO@ ReturnStatement@@ConditionalExpression:this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @AT@ 8562 @LENGTH@ 75
------------------INS MethodInvocation@@this.isComposite() @TO@ ConditionalExpression@@this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @AT@ 8562 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.isComposite() @AT@ 8562 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:isComposite:[] @TO@ MethodInvocation@@this.isComposite() @AT@ 8567 @LENGTH@ 13
------------------INS SimpleName@@originalConversion @TO@ ConditionalExpression@@this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @AT@ 8583 @LENGTH@ 18
------------------INS MethodInvocation@@nullSafeWrite(originalConversion) @TO@ ConditionalExpression@@this.isComposite() ? originalConversion : nullSafeWrite(originalConversion) @AT@ 8604 @LENGTH@ 33
---------------------MOV SimpleName@@MethodName:nullSafeWrite:[c::write] @TO@ MethodInvocation@@nullSafeWrite(originalConversion) @AT@ 8483 @LENGTH@ 23
------------------------INS SimpleName@@originalConversion @TO@ SimpleName@@MethodName:nullSafeWrite:[c::write] @AT@ 8618 @LENGTH@ 18


UPD FieldDeclaration@@private, final, Map<String,Long>, [lastProcessedOffset=new ConcurrentHashMap<>()] @TO@ private, final, Map<String,Long>, [lastProcessedOffset=new HashMap<>()] @AT@ 2591 @LENGTH@ 80
---UPD VariableDeclarationFragment@@lastProcessedOffset=new ConcurrentHashMap<>() @TO@ lastProcessedOffset=new HashMap<>() @AT@ 2623 @LENGTH@ 47
------UPD ClassInstanceCreation@@ConcurrentHashMap<>[] @TO@ HashMap<>[] @AT@ 2645 @LENGTH@ 25
---------UPD ParameterizedType@@ConcurrentHashMap<> @TO@ HashMap<> @AT@ 2649 @LENGTH@ 19
------------UPD SimpleType@@ConcurrentHashMap @TO@ HashMap @AT@ 2649 @LENGTH@ 17


UPD VariableDeclarationStatement@@Neo4jPersistentEntity entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @TO@ Neo4jPersistentEntity<?> entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @AT@ 17267 @LENGTH@ 92
---DEL SimpleType@@Neo4jPersistentEntity @AT@ 17267 @LENGTH@ 21
---INS ParameterizedType@@Neo4jPersistentEntity<?> @TO@ VariableDeclarationStatement@@Neo4jPersistentEntity entityMetaData=neo4jMappingContext.getPersistentEntity(domainClass); @AT@ 17350 @LENGTH@ 24
------INS SimpleType@@Neo4jPersistentEntity @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 17350 @LENGTH@ 21
------INS WildcardType@@? @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 17372 @LENGTH@ 1


UPD Block@@ElseBody:{  fillBuffer();  if (endOfInput && !encoderOut.hasRemaining()) {    break;  }} @TO@ ElseBody:if (endOfInput) {  break;} else {  fillBuffer();} @AT@ 12156 @LENGTH@ 154
---DEL ExpressionStatement@@MethodInvocation:fillBuffer() @AT@ 12174 @LENGTH@ 13
------DEL MethodInvocation@@MethodName:fillBuffer:[] @AT@ 12174 @LENGTH@ 12
---UPD IfStatement@@if (endOfInput && !encoderOut.hasRemaining()) {  break;} @TO@ if (endOfInput) {  break;} else {  fillBuffer();} @AT@ 12204 @LENGTH@ 92
------DEL InfixExpression@@endOfInput && !encoderOut.hasRemaining() @AT@ 12208 @LENGTH@ 40
---------DEL SimpleName@@endOfInput @AT@ 12208 @LENGTH@ 10
---------DEL Operator@@&& @AT@ 12218 @LENGTH@ 2
---------DEL PrefixExpression@@!encoderOut.hasRemaining() @AT@ 12222 @LENGTH@ 26
------------DEL Operator@@! @AT@ 12222 @LENGTH@ 1
------------DEL MethodInvocation@@encoderOut.hasRemaining() @AT@ 12223 @LENGTH@ 25
---------------DEL SimpleName@@Name:encoderOut @AT@ 12223 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:hasRemaining:[] @AT@ 12234 @LENGTH@ 14
------INS SimpleName@@endOfInput @TO@ IfStatement@@if (endOfInput && !encoderOut.hasRemaining()) {  break;} @AT@ 12304 @LENGTH@ 10
------INS Block@@ElseBody:{  fillBuffer();} @TO@ IfStatement@@if (endOfInput && !encoderOut.hasRemaining()) {  break;} @AT@ 12398 @LENGTH@ 59
---------INS ExpressionStatement@@MethodInvocation:fillBuffer() @TO@ Block@@ElseBody:{  fillBuffer();} @AT@ 12430 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:fillBuffer:[] @TO@ ExpressionStatement@@MethodInvocation:fillBuffer() @AT@ 12430 @LENGTH@ 12


UPD MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ protected, void, MethodName:doInit, Exception,  @AT@ 54866 @LENGTH@ 769
---UPD SimpleName@@MethodName:doStart @TO@ MethodName:doInit @AT@ 54881 @LENGTH@ 7
---UPD ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ SuperMethodInvocation:super.doInit() @AT@ 54918 @LENGTH@ 16
------UPD SuperMethodInvocation@@super.doStart() @TO@ super.doInit() @AT@ 54918 @LENGTH@ 15
---------UPD SimpleName@@MethodName:doStart:[] @TO@ MethodName:doInit:[] @AT@ 54924 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:Integer.valueOf(sqlType) @TO@ MethodInvocation:Integer.parseInt(sqlType) @AT@ 1561 @LENGTH@ 32
---UPD MethodInvocation@@Integer.valueOf(sqlType) @TO@ Integer.parseInt(sqlType) @AT@ 1568 @LENGTH@ 24
------UPD SimpleName@@MethodName:valueOf:[sqlType] @TO@ MethodName:parseInt:[sqlType] @AT@ 1576 @LENGTH@ 16


UPD VariableDeclarationStatement@@final OperationMessageHandlerProxy messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId); @TO@ final OperationMessageHandler messageHandlerProxy=OperationMessageHandler.DISCARD; @AT@ 13747 @LENGTH@ 119
---UPD SimpleType@@OperationMessageHandlerProxy @TO@ OperationMessageHandler @AT@ 13753 @LENGTH@ 28
---UPD VariableDeclarationFragment@@messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId) @TO@ messageHandlerProxy=OperationMessageHandler.DISCARD @AT@ 13782 @LENGTH@ 83
------DEL ClassInstanceCreation@@OperationMessageHandlerProxy[channelAssociation, batchId] @AT@ 13804 @LENGTH@ 61
---------DEL New@@new @AT@ 13804 @LENGTH@ 3
---------DEL SimpleType@@OperationMessageHandlerProxy @AT@ 13808 @LENGTH@ 28
---------DEL SimpleName@@channelAssociation @AT@ 13837 @LENGTH@ 18
---------DEL SimpleName@@batchId @AT@ 13857 @LENGTH@ 7
------INS QualifiedName@@OperationMessageHandler.DISCARD @TO@ VariableDeclarationFragment@@messageHandlerProxy=new OperationMessageHandlerProxy(channelAssociation,batchId) @AT@ 13862 @LENGTH@ 31
---------INS SimpleName@@OperationMessageHandler @TO@ QualifiedName@@OperationMessageHandler.DISCARD @AT@ 13862 @LENGTH@ 23
---------INS SimpleName@@DISCARD @TO@ QualifiedName@@OperationMessageHandler.DISCARD @AT@ 13886 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.info("Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()) @TO@ MethodInvocation:LOG.info("Attempting to become master for endpoint: {} in {} with singletonID: {}",route.getEndpoint(),getCamelContext(),getGroupName()) @AT@ 8005 @LENGTH@ 164
---UPD MethodInvocation@@LOG.info("Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()) @TO@ LOG.info("Attempting to become master for endpoint: {} in {} with singletonID: {}",route.getEndpoint(),getCamelContext(),getGroupName()) @AT@ 8005 @LENGTH@ 163
------UPD SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()] @TO@ MethodName:info:["Attempting to become master for endpoint: {} in {} with singletonID: {}", route.getEndpoint(), getCamelContext(), getGroupName()] @AT@ 8009 @LENGTH@ 159
---------DEL InfixExpression@@"Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName() @AT@ 8014 @LENGTH@ 153
------------DEL StringLiteral@@"Attempting to become master for endpoint: " @AT@ 8014 @LENGTH@ 44
------------DEL Operator@@+ @AT@ 8058 @LENGTH@ 1
------------DEL MethodInvocation@@route.getEndpoint() @AT@ 8061 @LENGTH@ 19
------------DEL StringLiteral@@" in " @AT@ 8083 @LENGTH@ 6
------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 8092 @LENGTH@ 17
------------DEL StringLiteral@@" with singletonID: " @AT@ 8129 @LENGTH@ 21
------------DEL MethodInvocation@@MethodName:getGroupName:[] @AT@ 8153 @LENGTH@ 14
---------INS StringLiteral@@"Attempting to become master for endpoint: {} in {} with singletonID: {}" @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()] @AT@ 8014 @LENGTH@ 73
---------INS MethodInvocation@@route.getEndpoint() @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()] @AT@ 8089 @LENGTH@ 19
------------MOV SimpleName@@Name:route @TO@ MethodInvocation@@route.getEndpoint() @AT@ 8061 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@route.getEndpoint() @AT@ 8067 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()] @AT@ 8126 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:getGroupName:[] @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + route.getEndpoint() + " in "+ getCamelContext()+ " with singletonID: "+ getGroupName()] @AT@ 8145 @LENGTH@ 14


UPD Block@@ElseBody:if (recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @TO@ ElseBody:if (recipientList != null && recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @AT@ 9467 @LENGTH@ 639
---UPD IfStatement@@if (recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @TO@ if (recipientList != null && recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @AT@ 9467 @LENGTH@ 639
------INS InfixExpression@@recipientList != null && recipientList.getClass().isArray() @TO@ IfStatement@@if (recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @AT@ 9471 @LENGTH@ 59
---------INS InfixExpression@@recipientList != null @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 21
------------INS SimpleName@@recipientList @TO@ InfixExpression@@recipientList != null @AT@ 9471 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@recipientList != null @AT@ 9484 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@recipientList != null @AT@ 9488 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9492 @LENGTH@ 2
---------INS MethodInvocation@@recipientList.getClass().isArray() @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9496 @LENGTH@ 34
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9496 @LENGTH@ 9
------DEL MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 34
---UPD IfStatement@@if (recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @TO@ if (recipientList != null && recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @AT@ 9467 @LENGTH@ 639
------INS InfixExpression@@recipientList != null && recipientList.getClass().isArray() @TO@ IfStatement@@if (recipientList.getClass().isArray()) {  Object[] arr=(Object[])recipientList;  int size=Array.getLength(recipientList);  List<ProcessorExchangePair> result=new ArrayList<>(size);  int index=0;  for (int i=0; i < size; i++) {    Object recipient=arr[i];    index=doCreateProcessorExchangePairs(exchange,recipient,result,index);  }  return result;} @AT@ 9471 @LENGTH@ 59
---------INS InfixExpression@@recipientList != null @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 21
------------INS SimpleName@@recipientList @TO@ InfixExpression@@recipientList != null @AT@ 9471 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@recipientList != null @AT@ 9484 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@recipientList != null @AT@ 9488 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9492 @LENGTH@ 2
---------INS MethodInvocation@@recipientList.getClass().isArray() @TO@ InfixExpression@@recipientList != null && recipientList.getClass().isArray() @AT@ 9496 @LENGTH@ 34
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 24
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@Name:recipientList @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 13
------------MOV SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@recipientList.getClass().isArray() @AT@ 9496 @LENGTH@ 9
------DEL MethodInvocation@@recipientList.getClass().isArray() @AT@ 9471 @LENGTH@ 34


UPD TryStatement@@try {  return IOUtils.readLines(new FileReader(repository));} catch (IOException e) {  throw new IOError(e);} @TO@ try (FileReader reader=new FileReader(repository)){  return IOUtils.readLines(reader);} catch (IOException e) {  throw new IOError(e);} @AT@ 2163 @LENGTH@ 149
---INS VariableDeclarationExpression@@FileReader reader=new FileReader(repository) @TO@ TryStatement@@try {  return IOUtils.readLines(new FileReader(repository));} catch (IOException e) {  throw new IOError(e);} @AT@ 2168 @LENGTH@ 46
------INS SimpleType@@FileReader @TO@ VariableDeclarationExpression@@FileReader reader=new FileReader(repository) @AT@ 2168 @LENGTH@ 10
------INS VariableDeclarationFragment@@reader=new FileReader(repository) @TO@ VariableDeclarationExpression@@FileReader reader=new FileReader(repository) @AT@ 2179 @LENGTH@ 35
---------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new FileReader(repository) @AT@ 2179 @LENGTH@ 6
---------INS ClassInstanceCreation@@FileReader[repository] @TO@ VariableDeclarationFragment@@reader=new FileReader(repository) @AT@ 2188 @LENGTH@ 26
------------MOV New@@new @TO@ ClassInstanceCreation@@FileReader[repository] @AT@ 2206 @LENGTH@ 3
------------MOV SimpleType@@FileReader @TO@ ClassInstanceCreation@@FileReader[repository] @AT@ 2210 @LENGTH@ 10
------------MOV SimpleName@@repository @TO@ ClassInstanceCreation@@FileReader[repository] @AT@ 2221 @LENGTH@ 10
---DEL ReturnStatement@@MethodInvocation:IOUtils.readLines(new FileReader(repository)) @AT@ 2181 @LENGTH@ 53
------DEL MethodInvocation@@IOUtils.readLines(new FileReader(repository)) @AT@ 2188 @LENGTH@ 45
---------DEL SimpleName@@Name:IOUtils @AT@ 2188 @LENGTH@ 7
---------DEL SimpleName@@MethodName:readLines:[new FileReader(repository)] @AT@ 2196 @LENGTH@ 37
------------DEL ClassInstanceCreation@@FileReader[repository] @AT@ 2206 @LENGTH@ 26
---INS ReturnStatement@@MethodInvocation:IOUtils.readLines(reader) @TO@ TryStatement@@try {  return IOUtils.readLines(new FileReader(repository));} catch (IOException e) {  throw new IOError(e);} @AT@ 2230 @LENGTH@ 33
------INS MethodInvocation@@IOUtils.readLines(reader) @TO@ ReturnStatement@@MethodInvocation:IOUtils.readLines(reader) @AT@ 2237 @LENGTH@ 25
---------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.readLines(reader) @AT@ 2237 @LENGTH@ 7
---------INS SimpleName@@MethodName:readLines:[reader] @TO@ MethodInvocation@@IOUtils.readLines(reader) @AT@ 2245 @LENGTH@ 17
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:readLines:[reader] @AT@ 2255 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Set<Action.ActionEffect>, [ADDRESS_EFFECT=EnumSet.of(Action.ActionEffect.ADDRESS)] @AT@ 1937 @LENGTH@ 103
---DEL Modifier@@private @AT@ 1937 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1945 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1952 @LENGTH@ 5
---DEL ParameterizedType@@Set<Action.ActionEffect> @AT@ 1958 @LENGTH@ 24
------DEL SimpleType@@Set @AT@ 1958 @LENGTH@ 3
------DEL SimpleType@@Action.ActionEffect @AT@ 1962 @LENGTH@ 19
---DEL VariableDeclarationFragment@@ADDRESS_EFFECT=EnumSet.of(Action.ActionEffect.ADDRESS) @AT@ 1983 @LENGTH@ 56
------DEL SimpleName@@ADDRESS_EFFECT @AT@ 1983 @LENGTH@ 14
------DEL MethodInvocation@@EnumSet.of(Action.ActionEffect.ADDRESS) @AT@ 2000 @LENGTH@ 39
---------DEL SimpleName@@Name:EnumSet @AT@ 2000 @LENGTH@ 7
---------DEL SimpleName@@MethodName:of:[Action.ActionEffect.ADDRESS] @AT@ 2008 @LENGTH@ 31
------------DEL QualifiedName@@Action.ActionEffect.ADDRESS @AT@ 2011 @LENGTH@ 27
---------------DEL QualifiedName@@Action.ActionEffect @AT@ 2011 @LENGTH@ 19
------------------DEL SimpleName@@Action @AT@ 2011 @LENGTH@ 6
------------------DEL SimpleName@@ActionEffect @AT@ 2018 @LENGTH@ 12
---------------DEL SimpleName@@ADDRESS @AT@ 2031 @LENGTH@ 7


INS VariableDeclarationStatement@@Collection<OAuth2Error> details=this.validator.validate(jwt).getErrors(); @TO@ MethodDeclaration@@public, void, MethodName:validateWhenClaimFailsTheTestThenReturnsFailure,  @AT@ 1848 @LENGTH@ 75
---INS ParameterizedType@@Collection<OAuth2Error> @TO@ VariableDeclarationStatement@@Collection<OAuth2Error> details=this.validator.validate(jwt).getErrors(); @AT@ 1848 @LENGTH@ 23
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<OAuth2Error> @AT@ 1848 @LENGTH@ 10
------INS SimpleType@@OAuth2Error @TO@ ParameterizedType@@Collection<OAuth2Error> @AT@ 1859 @LENGTH@ 11
---INS VariableDeclarationFragment@@details=this.validator.validate(jwt).getErrors() @TO@ VariableDeclarationStatement@@Collection<OAuth2Error> details=this.validator.validate(jwt).getErrors(); @AT@ 1872 @LENGTH@ 50
------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=this.validator.validate(jwt).getErrors() @AT@ 1872 @LENGTH@ 7
------INS MethodInvocation@@this.validator.validate(jwt).getErrors() @TO@ VariableDeclarationFragment@@details=this.validator.validate(jwt).getErrors() @AT@ 1882 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:validate:[jwt] @TO@ MethodInvocation@@this.validator.validate(jwt).getErrors() @AT@ 1882 @LENGTH@ 28
------------INS SimpleName@@jwt @TO@ MethodInvocation@@MethodName:validate:[jwt] @AT@ 1906 @LENGTH@ 3
---------INS FieldAccess@@this.validator @TO@ MethodInvocation@@this.validator.validate(jwt).getErrors() @AT@ 1882 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.validator @AT@ 1882 @LENGTH@ 4
------------INS SimpleName@@validator @TO@ FieldAccess@@this.validator @AT@ 1887 @LENGTH@ 9
---------INS SimpleName@@MethodName:getErrors:[] @TO@ MethodInvocation@@this.validator.validate(jwt).getErrors() @AT@ 1911 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from(from).routeId("foo").process(exchange -> {
  byte[] id=exchange.getIn().getHeader("id",byte[].class);
  BigInteger bi=new BigInteger(id);
  exchange.getIn().setHeader("id",String.valueOf(bi.longValue()));
}
).idempotentConsumer(header("id")).messageIdRepositoryRef("kafkaIdempotentRepository").to(to) @TO@ MethodInvocation:from(from).routeId("idemp-with-prop").process(exchange -> {
  byte[] id=exchange.getIn().getHeader("id",byte[].class);
  BigInteger bi=new BigInteger(id);
  exchange.getIn().setHeader("id",String.valueOf(bi.longValue()));
}
).idempotentConsumer(header("id")).messageIdRepositoryRef("kafkaIdempotentRepository").to(to) @AT@ 3062 @LENGTH@ 515
---UPD MethodInvocation@@from(from).routeId("foo").process(exchange -> {
  byte[] id=exchange.getIn().getHeader("id",byte[].class);
  BigInteger bi=new BigInteger(id);
  exchange.getIn().setHeader("id",String.valueOf(bi.longValue()));
}
).idempotentConsumer(header("id")).messageIdRepositoryRef("kafkaIdempotentRepository").to(to) @TO@ from(from).routeId("idemp-with-prop").process(exchange -> {
  byte[] id=exchange.getIn().getHeader("id",byte[].class);
  BigInteger bi=new BigInteger(id);
  exchange.getIn().setHeader("id",String.valueOf(bi.longValue()));
}
).idempotentConsumer(header("id")).messageIdRepositoryRef("kafkaIdempotentRepository").to(to) @AT@ 3062 @LENGTH@ 514
------UPD MethodInvocation@@MethodName:routeId:["foo"] @TO@ MethodName:routeId:["idemp-with-prop"] @AT@ 3062 @LENGTH@ 25
---------UPD StringLiteral@@"foo" @TO@ "idemp-with-prop" @AT@ 3081 @LENGTH@ 5


MOV IfStatement@@if (tsk.getException() != null) {  result.setTaskError(tsk.getException());} @TO@ MethodDeclaration@@public, void, MethodName:runSequential,  @AT@ 3238 @LENGTH@ 86


UPD ExpressionStatement@@MethodInvocation:READ_TXN_TOKENS.addAll(Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES,HiveParser.TOK_EXPLAIN)) @TO@ MethodInvocation:READ_TXN_TOKENS.addAll(Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES)) @AT@ 8701 @LENGTH@ 290
---UPD MethodInvocation@@READ_TXN_TOKENS.addAll(Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES,HiveParser.TOK_EXPLAIN)) @TO@ READ_TXN_TOKENS.addAll(Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES)) @AT@ 8701 @LENGTH@ 289
------UPD SimpleName@@MethodName:addAll:[Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES,HiveParser.TOK_EXPLAIN)] @TO@ MethodName:addAll:[Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES)] @AT@ 8717 @LENGTH@ 273
---------UPD MethodInvocation@@Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES,HiveParser.TOK_EXPLAIN) @TO@ Arrays.asList(HiveParser.TOK_DESCDATABASE,HiveParser.TOK_DESCTABLE,HiveParser.TOK_SHOWTABLES,HiveParser.TOK_SHOW_TABLESTATUS,HiveParser.TOK_SHOW_TBLPROPERTIES) @AT@ 8724 @LENGTH@ 265
------------UPD SimpleName@@MethodName:asList:[HiveParser.TOK_DESCDATABASE, HiveParser.TOK_DESCTABLE, HiveParser.TOK_SHOWTABLES, HiveParser.TOK_SHOW_TABLESTATUS, HiveParser.TOK_SHOW_TBLPROPERTIES, HiveParser.TOK_EXPLAIN] @TO@ MethodName:asList:[HiveParser.TOK_DESCDATABASE, HiveParser.TOK_DESCTABLE, HiveParser.TOK_SHOWTABLES, HiveParser.TOK_SHOW_TABLESTATUS, HiveParser.TOK_SHOW_TBLPROPERTIES] @AT@ 8731 @LENGTH@ 258
---------------DEL QualifiedName@@HiveParser.TOK_EXPLAIN @AT@ 8961 @LENGTH@ 22
------------------DEL SimpleName@@HiveParser @AT@ 8961 @LENGTH@ 10
------------------DEL SimpleName@@TOK_EXPLAIN @AT@ 8972 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("direct:upsertSObject").to("salesforce:upsertSObject?SObjectIdName=Name") @TO@ MethodInvocation:from("direct:upsertSObject").to("salesforce:upsertSObject?sObjectIdName=Name") @AT@ 5727 @LENGTH@ 79
---UPD MethodInvocation@@from("direct:upsertSObject").to("salesforce:upsertSObject?SObjectIdName=Name") @TO@ from("direct:upsertSObject").to("salesforce:upsertSObject?sObjectIdName=Name") @AT@ 5727 @LENGTH@ 78
------UPD SimpleName@@MethodName:to:["salesforce:upsertSObject?SObjectIdName=Name"] @TO@ MethodName:to:["salesforce:upsertSObject?sObjectIdName=Name"] @AT@ 5756 @LENGTH@ 49
---------UPD StringLiteral@@"salesforce:upsertSObject?SObjectIdName=Name" @TO@ "salesforce:upsertSObject?sObjectIdName=Name" @AT@ 5759 @LENGTH@ 45


INS MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @TO@ TypeDeclaration@@[@Nested]ClassesWithAdditionalLabels, SpringTestBase @AT@ 15594 @LENGTH@ 866
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15589 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConvertIds @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15594 @LENGTH@ 16
---INS SingleVariableDeclaration@@@Autowired ReactiveNeo4jTemplate template @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15611 @LENGTH@ 41
------INS SimpleType@@ReactiveNeo4jTemplate @TO@ SingleVariableDeclaration@@@Autowired ReactiveNeo4jTemplate template @AT@ 15622 @LENGTH@ 21
------INS SimpleName@@template @TO@ SingleVariableDeclaration@@@Autowired ReactiveNeo4jTemplate template @AT@ 15644 @LENGTH@ 8
---INS VariableDeclarationStatement@@String label="value_1"; @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15660 @LENGTH@ 25
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String label="value_1"; @AT@ 15660 @LENGTH@ 6
------INS VariableDeclarationFragment@@label="value_1" @TO@ VariableDeclarationStatement@@String label="value_1"; @AT@ 15667 @LENGTH@ 17
---------INS SimpleName@@label @TO@ VariableDeclarationFragment@@label="value_1" @AT@ 15667 @LENGTH@ 5
---------INS StringLiteral@@"value_1" @TO@ VariableDeclarationFragment@@label="value_1" @AT@ 15675 @LENGTH@ 9
---INS VariableDeclarationStatement@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label); @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15689 @LENGTH@ 190
------INS ParameterizedType@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @TO@ VariableDeclarationStatement@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label); @AT@ 15689 @LENGTH@ 61
---------INS SimpleType@@Predicate @TO@ ParameterizedType@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @AT@ 15689 @LENGTH@ 9
---------INS SimpleType@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted @TO@ ParameterizedType@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @AT@ 15699 @LENGTH@ 50
------INS VariableDeclarationFragment@@expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @TO@ VariableDeclarationStatement@@Predicate<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label); @AT@ 15751 @LENGTH@ 127
---------INS SimpleName@@expectatations @TO@ VariableDeclarationFragment@@expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15751 @LENGTH@ 14
---------INS LambdaExpression@@savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @TO@ VariableDeclarationFragment@@expectatations=savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15768 @LENGTH@ 110
------------INS VariableDeclarationFragment@@savedInstance @TO@ LambdaExpression@@savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15768 @LENGTH@ 13
---------------INS SimpleName@@savedInstance @TO@ VariableDeclarationFragment@@savedInstance @AT@ 15768 @LENGTH@ 13
------------INS InfixExpression@@label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @TO@ LambdaExpression@@savedInstance -> label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15790 @LENGTH@ 88
---------------INS MethodInvocation@@label.equals(savedInstance.getValue()) @TO@ InfixExpression@@label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15790 @LENGTH@ 38
------------------INS SimpleName@@Name:label @TO@ MethodInvocation@@label.equals(savedInstance.getValue()) @AT@ 15790 @LENGTH@ 5
------------------INS SimpleName@@MethodName:equals:[savedInstance.getValue()] @TO@ MethodInvocation@@label.equals(savedInstance.getValue()) @AT@ 15796 @LENGTH@ 32
---------------------INS MethodInvocation@@savedInstance.getValue() @TO@ SimpleName@@MethodName:equals:[savedInstance.getValue()] @AT@ 15803 @LENGTH@ 24
------------------------INS SimpleName@@Name:savedInstance @TO@ MethodInvocation@@savedInstance.getValue() @AT@ 15803 @LENGTH@ 13
------------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@savedInstance.getValue() @AT@ 15817 @LENGTH@ 10
---------------INS Operator@@&& @TO@ InfixExpression@@label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15828 @LENGTH@ 2
---------------INS MethodInvocation@@savedInstance.getExtraLabels().contains(label) @TO@ InfixExpression@@label.equals(savedInstance.getValue()) && savedInstance.getExtraLabels().contains(label) @AT@ 15832 @LENGTH@ 46
------------------INS MethodInvocation@@MethodName:getExtraLabels:[] @TO@ MethodInvocation@@savedInstance.getExtraLabels().contains(label) @AT@ 15832 @LENGTH@ 30
------------------INS SimpleName@@Name:savedInstance @TO@ MethodInvocation@@savedInstance.getExtraLabels().contains(label) @AT@ 15832 @LENGTH@ 13
------------------INS SimpleName@@MethodName:contains:[label] @TO@ MethodInvocation@@savedInstance.getExtraLabels().contains(label) @AT@ 15863 @LENGTH@ 15
---------------------INS SimpleName@@label @TO@ SimpleName@@MethodName:contains:[label] @AT@ 15872 @LENGTH@ 5
---INS VariableDeclarationStatement@@AtomicReference<UUID> generatedUUID=new AtomicReference<>(); @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15884 @LENGTH@ 62
------INS ParameterizedType@@AtomicReference<UUID> @TO@ VariableDeclarationStatement@@AtomicReference<UUID> generatedUUID=new AtomicReference<>(); @AT@ 15884 @LENGTH@ 21
---------INS SimpleType@@AtomicReference @TO@ ParameterizedType@@AtomicReference<UUID> @AT@ 15884 @LENGTH@ 15
---------INS SimpleType@@UUID @TO@ ParameterizedType@@AtomicReference<UUID> @AT@ 15900 @LENGTH@ 4
------INS VariableDeclarationFragment@@generatedUUID=new AtomicReference<>() @TO@ VariableDeclarationStatement@@AtomicReference<UUID> generatedUUID=new AtomicReference<>(); @AT@ 15906 @LENGTH@ 39
---------INS SimpleName@@generatedUUID @TO@ VariableDeclarationFragment@@generatedUUID=new AtomicReference<>() @AT@ 15906 @LENGTH@ 13
---------INS ClassInstanceCreation@@AtomicReference<>[] @TO@ VariableDeclarationFragment@@generatedUUID=new AtomicReference<>() @AT@ 15922 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@AtomicReference<>[] @AT@ 15922 @LENGTH@ 3
------------INS ParameterizedType@@AtomicReference<> @TO@ ClassInstanceCreation@@AtomicReference<>[] @AT@ 15926 @LENGTH@ 17
---------------INS SimpleType@@AtomicReference @TO@ ParameterizedType@@AtomicReference<> @AT@ 15926 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 15950 @LENGTH@ 310
------INS MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 309
---------INS MethodInvocation@@MethodName:expectNextMatches:[expectatations] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 286
------------INS SimpleName@@expectatations @TO@ MethodInvocation@@MethodName:expectNextMatches:[expectatations] @AT@ 16221 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 246
---------INS MethodInvocation@@MethodName:doOnNext:[s -> generatedUUID.set(s.getId())] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 215
------------INS LambdaExpression@@s -> generatedUUID.set(s.getId()) @TO@ MethodInvocation@@MethodName:doOnNext:[s -> generatedUUID.set(s.getId())] @AT@ 16131 @LENGTH@ 33
---------------INS VariableDeclarationFragment@@s @TO@ LambdaExpression@@s -> generatedUUID.set(s.getId()) @AT@ 16131 @LENGTH@ 1
------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 16131 @LENGTH@ 1
---------------INS MethodInvocation@@generatedUUID.set(s.getId()) @TO@ LambdaExpression@@s -> generatedUUID.set(s.getId()) @AT@ 16136 @LENGTH@ 28
------------------INS SimpleName@@Name:generatedUUID @TO@ MethodInvocation@@generatedUUID.set(s.getId()) @AT@ 16136 @LENGTH@ 13
------------------INS SimpleName@@MethodName:set:[s.getId()] @TO@ MethodInvocation@@generatedUUID.set(s.getId()) @AT@ 16150 @LENGTH@ 14
---------------------INS MethodInvocation@@s.getId() @TO@ SimpleName@@MethodName:set:[s.getId()] @AT@ 16154 @LENGTH@ 9
------------------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.getId() @AT@ 16154 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@s.getId() @AT@ 16156 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:then:[template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 165
------------INS MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label)) @TO@ MethodInvocation@@MethodName:then:[template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))] @AT@ 16038 @LENGTH@ 76
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label)) @AT@ 16038 @LENGTH@ 8
---------------INS SimpleName@@MethodName:save:[new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label)] @TO@ MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label)) @AT@ 16047 @LENGTH@ 67
------------------INS ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted[label] @TO@ SimpleName@@MethodName:save:[new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label)] @AT@ 16052 @LENGTH@ 61
---------------------INS New@@new @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted[label] @AT@ 16052 @LENGTH@ 3
---------------------INS SimpleType@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted[label] @AT@ 16056 @LENGTH@ 50
---------------------INS SimpleName@@label @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted[label] @AT@ 16107 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:deleteAll:[EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 76
------------INS TypeLiteral@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class @TO@ MethodInvocation@@MethodName:deleteAll:[EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 15969 @LENGTH@ 56
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 15950 @LENGTH@ 8
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).then(template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted(label))).doOnNext(s -> generatedUUID.set(s.getId())).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16243 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired ReactiveNeo4jTemplate template,  @AT@ 16265 @LENGTH@ 191
------INS MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16265 @LENGTH@ 190
---------INS MethodInvocation@@MethodName:expectNextMatches:[expectatations] @TO@ MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16265 @LENGTH@ 167
------------INS SimpleName@@expectatations @TO@ MethodInvocation@@MethodName:expectNextMatches:[expectatations] @AT@ 16417 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16265 @LENGTH@ 127
---------INS MethodInvocation@@MethodName:findById:[generatedUUID.get(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @TO@ MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16265 @LENGTH@ 96
------------INS MethodInvocation@@generatedUUID.get() @TO@ MethodInvocation@@MethodName:findById:[generatedUUID.get(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 16283 @LENGTH@ 19
---------------INS SimpleName@@Name:generatedUUID @TO@ MethodInvocation@@generatedUUID.get() @AT@ 16283 @LENGTH@ 13
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@generatedUUID.get() @AT@ 16297 @LENGTH@ 5
------------INS TypeLiteral@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class @TO@ MethodInvocation@@MethodName:findById:[generatedUUID.get(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 16304 @LENGTH@ 56
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16265 @LENGTH@ 8
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@template.findById(generatedUUID.get(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class).as(StepVerifier::create).expectNextMatches(expectatations).verifyComplete() @AT@ 16439 @LENGTH@ 16


DEL MethodDeclaration@@public, void, MethodName:testfiltermethods, Exception,  @AT@ 3035 @LENGTH@ 72
---DEL Modifier@@public @AT@ 3035 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 3042 @LENGTH@ 4
---DEL SimpleName@@MethodName:testfiltermethods @AT@ 3047 @LENGTH@ 17
---DEL SimpleType@@Exception @AT@ 3074 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:readsDtoProjections,  @TO@ TypeDeclaration@@[@ExtendWith(SpringExtension.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 72073 @LENGTH@ 109
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:readsDtoProjections,  @AT@ 72068 @LENGTH@ 4
---INS SimpleName@@MethodName:readsDtoProjections @TO@ MethodDeclaration@@void, MethodName:readsDtoProjections,  @AT@ 72073 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@void, MethodName:readsDtoProjections,  @AT@ 72100 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 72100 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findAllDtoProjectedBy()).hasSize(4) @TO@ MethodDeclaration@@void, MethodName:readsDtoProjections,  @AT@ 72121 @LENGTH@ 58
------INS MethodInvocation@@assertThat(repository.findAllDtoProjectedBy()).hasSize(4) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findAllDtoProjectedBy()).hasSize(4) @AT@ 72121 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:assertThat:[repository.findAllDtoProjectedBy()] @TO@ MethodInvocation@@assertThat(repository.findAllDtoProjectedBy()).hasSize(4) @AT@ 72121 @LENGTH@ 46
------------INS MethodInvocation@@repository.findAllDtoProjectedBy() @TO@ MethodInvocation@@MethodName:assertThat:[repository.findAllDtoProjectedBy()] @AT@ 72132 @LENGTH@ 34
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAllDtoProjectedBy() @AT@ 72132 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findAllDtoProjectedBy:[] @TO@ MethodInvocation@@repository.findAllDtoProjectedBy() @AT@ 72143 @LENGTH@ 23
---------INS SimpleName@@MethodName:hasSize:[4] @TO@ MethodInvocation@@assertThat(repository.findAllDtoProjectedBy()).hasSize(4) @AT@ 72168 @LENGTH@ 10
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:hasSize:[4] @AT@ 72176 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:startRow.setId(start) @AT@ 8937 @LENGTH@ 22
---DEL MethodInvocation@@startRow.setId(start) @AT@ 8937 @LENGTH@ 21
------DEL SimpleName@@Name:startRow @AT@ 8937 @LENGTH@ 8
------DEL SimpleName@@MethodName:setId:[start] @AT@ 8946 @LENGTH@ 12
---------DEL SimpleName@@start @AT@ 8952 @LENGTH@ 5


DEL FieldDeclaration@@Long, [maxRetryWaitingTime] @AT@ 972 @LENGTH@ 25
---DEL SimpleType@@Long @AT@ 972 @LENGTH@ 4
---DEL VariableDeclarationFragment@@maxRetryWaitingTime @AT@ 977 @LENGTH@ 19
------DEL SimpleName@@maxRetryWaitingTime @AT@ 977 @LENGTH@ 19


UPD TryStatement@@try {  for (  PropertiesSource source : getCamelContext().getRegistry().findByType(PropertiesSource.class)) {    addPropertiesSource(source);    LOG.info("PropertiesComponent added custom PropertiesSource (registry): {}",source);  }  FactoryFinder factoryFinder=getCamelContext().adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder();  Class<?> type=factoryFinder.findClass("properties-source-factory").orElse(null);  if (type != null) {    Object obj=getCamelContext().getInjector().newInstance(type,false);    if (obj instanceof PropertiesSource) {      PropertiesSource ps=(PropertiesSource)obj;      addPropertiesSource(ps);      LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);    } else     if (obj != null) {      LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());    }  }} catch (Exception e) {  LOG.debug("Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored",e);} @TO@ try {  for (  PropertiesSource source : getCamelContext().getRegistry().findByType(PropertiesSource.class)) {    addPropertiesSource(source);    LOG.info("PropertiesComponent added custom PropertiesSource (registry): {}",source);  }  FactoryFinder factoryFinder=getCamelContext().adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder();  Class<?> type=factoryFinder.findClass("properties-source-factory").orElse(null);  if (type != null) {    Object obj=getCamelContext().getInjector().newInstance(type,false);    if (obj instanceof PropertiesSource) {      PropertiesSource ps=(PropertiesSource)obj;      addPropertiesSource(ps);      LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);    } else     if (obj != null) {      LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());    }  }} catch (Exception e) {  LOG.debug("Error discovering and using custom PropertiesSource due to {}. This exception is ignored",e.getMessage(),e);} @AT@ 21880 @LENGTH@ 1542
---UPD IfStatement@@if (type != null) {  Object obj=getCamelContext().getInjector().newInstance(type,false);  if (obj instanceof PropertiesSource) {    PropertiesSource ps=(PropertiesSource)obj;    addPropertiesSource(ps);    LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);  } else   if (obj != null) {    LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());  }} @TO@ if (type != null) {  Object obj=getCamelContext().getInjector().newInstance(type,false);  if (obj instanceof PropertiesSource) {    PropertiesSource ps=(PropertiesSource)obj;    addPropertiesSource(ps);    LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);  } else   if (obj != null) {    LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());  }} @AT@ 22444 @LENGTH@ 736
------UPD Block@@ThenBody:{  Object obj=getCamelContext().getInjector().newInstance(type,false);  if (obj instanceof PropertiesSource) {    PropertiesSource ps=(PropertiesSource)obj;    addPropertiesSource(ps);    LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);  } else   if (obj != null) {    LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());  }} @TO@ ThenBody:{  Object obj=getCamelContext().getInjector().newInstance(type,false);  if (obj instanceof PropertiesSource) {    PropertiesSource ps=(PropertiesSource)obj;    addPropertiesSource(ps);    LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);  } else   if (obj != null) {    LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());  }} @AT@ 22462 @LENGTH@ 718
---------UPD IfStatement@@if (obj instanceof PropertiesSource) {  PropertiesSource ps=(PropertiesSource)obj;  addPropertiesSource(ps);  LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);} else if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());} @TO@ if (obj instanceof PropertiesSource) {  PropertiesSource ps=(PropertiesSource)obj;  addPropertiesSource(ps);  LOG.info("PropertiesComponent added custom PropertiesSource (factory): {}",ps);} else if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());} @AT@ 22575 @LENGTH@ 587
------------UPD Block@@ElseBody:if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());} @TO@ ElseBody:if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());} @AT@ 22865 @LENGTH@ 297
---------------UPD IfStatement@@if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());} @TO@ if (obj != null) {  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());} @AT@ 22865 @LENGTH@ 297
------------------UPD Block@@ThenBody:{  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName());} @TO@ ThenBody:{  LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName());} @AT@ 22882 @LENGTH@ 280
---------------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()) @TO@ MethodInvocation:LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName()) @AT@ 22908 @LENGTH@ 232
------------------------UPD MethodInvocation@@LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()) @TO@ LOG.warn("PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}",PropertiesSource.class.getName(),type.getName()) @AT@ 22908 @LENGTH@ 231
---------------------------UPD SimpleName@@MethodName:warn:["PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()] @TO@ MethodName:warn:["PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}", PropertiesSource.class.getName(), type.getName()] @AT@ 22912 @LENGTH@ 227
------------------------------DEL InfixExpression@@"PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName() @AT@ 22950 @LENGTH@ 188
---------------------------------DEL StringLiteral@@"PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " @AT@ 22950 @LENGTH@ 138
---------------------------------DEL Operator@@+ @AT@ 23088 @LENGTH@ 1
---------------------------------DEL MethodInvocation@@type.getName() @AT@ 23124 @LENGTH@ 14
------------------------------INS StringLiteral@@"PropertiesComponent cannot add custom PropertiesSource as the type is not a {} but: {}" @TO@ SimpleName@@MethodName:warn:["PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()] @AT@ 22950 @LENGTH@ 88
------------------------------INS MethodInvocation@@PropertiesSource.class.getName() @TO@ SimpleName@@MethodName:warn:["PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()] @AT@ 23072 @LENGTH@ 32
---------------------------------INS TypeLiteral@@PropertiesSource.class @TO@ MethodInvocation@@PropertiesSource.class.getName() @AT@ 23072 @LENGTH@ 22
---------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@PropertiesSource.class.getName() @AT@ 23095 @LENGTH@ 9
------------------------------INS MethodInvocation@@type.getName() @TO@ SimpleName@@MethodName:warn:["PropertiesComponent cannot add custom PropertiesSource as the type is not a org.apache.camel.component.properties.PropertiesSource but: " + type.getName()] @AT@ 23106 @LENGTH@ 14
---------------------------------MOV SimpleName@@Name:type @TO@ MethodInvocation@@type.getName() @AT@ 23124 @LENGTH@ 4
---------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@type.getName() @AT@ 23129 @LENGTH@ 9
---UPD CatchClause@@catch (Exception e) {  LOG.debug("Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored",e);} @TO@ catch (Exception e) {  LOG.debug("Error discovering and using custom PropertiesSource due to {}. This exception is ignored",e.getMessage(),e);} @AT@ 23195 @LENGTH@ 227
------UPD ExpressionStatement@@MethodInvocation:LOG.debug("Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored",e) @TO@ MethodInvocation:LOG.debug("Error discovering and using custom PropertiesSource due to {}. This exception is ignored",e.getMessage(),e) @AT@ 23233 @LENGTH@ 175
---------UPD MethodInvocation@@LOG.debug("Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored",e) @TO@ LOG.debug("Error discovering and using custom PropertiesSource due to {}. This exception is ignored",e.getMessage(),e) @AT@ 23233 @LENGTH@ 174
------------UPD SimpleName@@MethodName:debug:["Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored", e] @TO@ MethodName:debug:["Error discovering and using custom PropertiesSource due to {}. This exception is ignored", e.getMessage(), e] @AT@ 23237 @LENGTH@ 170
---------------INS StringLiteral@@"Error discovering and using custom PropertiesSource due to {}. This exception is ignored" @TO@ SimpleName@@MethodName:debug:["Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored", e] @AT@ 23225 @LENGTH@ 90
---------------DEL InfixExpression@@"Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored" @AT@ 23243 @LENGTH@ 136
------------------DEL StringLiteral@@"Error discovering and using custom PropertiesSource due to " @AT@ 23243 @LENGTH@ 61
------------------DEL Operator@@+ @AT@ 23304 @LENGTH@ 1
------------------DEL MethodInvocation@@e.getMessage() @AT@ 23307 @LENGTH@ 14
------------------DEL StringLiteral@@". This exception is ignored" @AT@ 23350 @LENGTH@ 29
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:debug:["Error discovering and using custom PropertiesSource due to " + e.getMessage() + ". This exception is ignored", e] @AT@ 23341 @LENGTH@ 14
------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 23307 @LENGTH@ 1
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 23309 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:this.filterOrders.put(filter.getClass(),order) @TO@ MethodDeclaration@@private, HttpSecurity, MethodName:addFilterAtOffsetOf, Filter filter, int offset, Class<? extends Filter> registeredFilter,  @AT@ 102975 @LENGTH@ 48
---INS MethodInvocation@@this.filterOrders.put(filter.getClass(),order) @TO@ ExpressionStatement@@MethodInvocation:this.filterOrders.put(filter.getClass(),order) @AT@ 102975 @LENGTH@ 47
------INS FieldAccess@@this.filterOrders @TO@ MethodInvocation@@this.filterOrders.put(filter.getClass(),order) @AT@ 102975 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ FieldAccess@@this.filterOrders @AT@ 102975 @LENGTH@ 4
---------INS SimpleName@@filterOrders @TO@ FieldAccess@@this.filterOrders @AT@ 102980 @LENGTH@ 12
------INS SimpleName@@MethodName:put:[filter.getClass(), order] @TO@ MethodInvocation@@this.filterOrders.put(filter.getClass(),order) @AT@ 102993 @LENGTH@ 29
---------INS MethodInvocation@@filter.getClass() @TO@ SimpleName@@MethodName:put:[filter.getClass(), order] @AT@ 102997 @LENGTH@ 17
------------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.getClass() @AT@ 102997 @LENGTH@ 6
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@filter.getClass() @AT@ 103004 @LENGTH@ 10
---------INS SimpleName@@order @TO@ SimpleName@@MethodName:put:[filter.getClass(), order] @AT@ 103016 @LENGTH@ 5


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurations, Exception,  @AT@ 4755 @LENGTH@ 635
---DEL PrimitiveType@@void @AT@ 4750 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurations @AT@ 4755 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 4806 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining=""; @AT@ 4826 @LENGTH@ 28
------DEL Modifier@@final @AT@ 4826 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4832 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="" @AT@ 4839 @LENGTH@ 14
---------DEL SimpleName@@remaining @AT@ 4839 @LENGTH@ 9
---------DEL StringLiteral@@"" @AT@ 4851 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final String uri="debezium:"; @AT@ 4863 @LENGTH@ 31
------DEL Modifier@@final @AT@ 4863 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4869 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:" @AT@ 4876 @LENGTH@ 17
---------DEL SimpleName@@uri @AT@ 4876 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:" @AT@ 4882 @LENGTH@ 11
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 4903 @LENGTH@ 481
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext()) @AT@ 4908 @LENGTH@ 99
---------DEL Modifier@@final @AT@ 4908 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 4914 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumMongodbComponent(new DefaultCamelContext()) @AT@ 4932 @LENGTH@ 75
------------DEL SimpleName@@debeziumComponent @AT@ 4932 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumMongodbComponent[new DefaultCamelContext()] @AT@ 4952 @LENGTH@ 55
---------------DEL New@@new @AT@ 4952 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumMongodbComponent @AT@ 4956 @LENGTH@ 24
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 4981 @LENGTH@ 25
------------------DEL New@@new @AT@ 4981 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 4985 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5023 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5023 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5023 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5041 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5097 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5097 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5097 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5115 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5132 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5152 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5152 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5158 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5158 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5162 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5170 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5178 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5178 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5191 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5191 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5203 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5228 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5228 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 5228 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5241 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 5273 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5297 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5297 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 5297 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 5315 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 5330 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 5335 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 5346 @LENGTH@ 10


UPD Block@@FinallyBody:{  assertNull(template().requestBody("direct:deleteSObjectWithId",merchandise));  QueryRecordsPushTopic records=template().requestBody("direct:query",null,QueryRecordsPushTopic.class);  assertEquals(1,records.getTotalSize(),"Test topic not found");  assertNull(template().requestBody("direct:deleteSObject",records.getRecords().get(0)));} @TO@ FinallyBody:{  template().requestBody("direct:deleteSObjectWithId",merchandise);  QueryRecordsPushTopic records=template().requestBody("direct:query",null,QueryRecordsPushTopic.class);  assertEquals(1,records.getTotalSize(),"Test topic not found");  template().requestBody("direct:deleteSObject",records.getRecords().get(0));} @AT@ 4100 @LENGTH@ 516
---UPD ExpressionStatement@@MethodInvocation:assertNull(template().requestBody("direct:deleteSObjectWithId",merchandise)) @TO@ MethodInvocation:template().requestBody("direct:deleteSObjectWithId",merchandise) @AT@ 4152 @LENGTH@ 78
------DEL MethodInvocation@@assertNull(template().requestBody("direct:deleteSObjectWithId",merchandise)) @AT@ 4152 @LENGTH@ 77
---------DEL SimpleName@@MethodName:assertNull:[template().requestBody("direct:deleteSObjectWithId",merchandise)] @AT@ 4152 @LENGTH@ 77
------MOV MethodInvocation@@template().requestBody("direct:deleteSObjectWithId",merchandise) @TO@ ExpressionStatement@@MethodInvocation:assertNull(template().requestBody("direct:deleteSObjectWithId",merchandise)) @AT@ 4163 @LENGTH@ 65
---UPD ExpressionStatement@@MethodInvocation:assertNull(template().requestBody("direct:deleteSObject",records.getRecords().get(0))) @TO@ MethodInvocation:template().requestBody("direct:deleteSObject",records.getRecords().get(0)) @AT@ 4517 @LENGTH@ 88
------DEL MethodInvocation@@assertNull(template().requestBody("direct:deleteSObject",records.getRecords().get(0))) @AT@ 4517 @LENGTH@ 87
---------DEL SimpleName@@MethodName:assertNull:[template().requestBody("direct:deleteSObject",records.getRecords().get(0))] @AT@ 4517 @LENGTH@ 87
------MOV MethodInvocation@@template().requestBody("direct:deleteSObject",records.getRecords().get(0)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(template().requestBody("direct:deleteSObject",records.getRecords().get(0))) @AT@ 4528 @LENGTH@ 75


UPD IfStatement@@if (seekPolicy.equals("beginning")) {  LOG.debug("Seeking from the beginning of topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToBeginning(consumer.assignment());} else if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToEnd(consumer.assignment());} @TO@ if (seekPolicy.equals("beginning")) {  LOG.debug("Seeking from the beginning of topic");  consumer.seekToBeginning(consumer.assignment());} else if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.seekToEnd(consumer.assignment());} @AT@ 1550 @LENGTH@ 647
---UPD Block@@ThenBody:{  LOG.debug("Seeking from the beginning of topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToBeginning(consumer.assignment());} @TO@ ThenBody:{  LOG.debug("Seeking from the beginning of topic");  consumer.seekToBeginning(consumer.assignment());} @AT@ 1586 @LENGTH@ 291
------DEL ExpressionStatement@@MethodInvocation:consumer.poll(Duration.ofMillis(100)) @AT@ 1768 @LENGTH@ 38
---------DEL MethodInvocation@@consumer.poll(Duration.ofMillis(100)) @AT@ 1768 @LENGTH@ 37
------------DEL SimpleName@@Name:consumer @AT@ 1768 @LENGTH@ 8
------------DEL SimpleName@@MethodName:poll:[Duration.ofMillis(100)] @AT@ 1777 @LENGTH@ 28
---------------DEL MethodInvocation@@Duration.ofMillis(100) @AT@ 1782 @LENGTH@ 22
------------------DEL SimpleName@@Name:Duration @AT@ 1782 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:ofMillis:[100] @AT@ 1791 @LENGTH@ 13
---------------------DEL NumberLiteral@@100 @AT@ 1800 @LENGTH@ 3
---UPD Block@@ElseBody:if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToEnd(consumer.assignment());} @TO@ ElseBody:if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.seekToEnd(consumer.assignment());} @AT@ 1883 @LENGTH@ 314
------UPD IfStatement@@if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToEnd(consumer.assignment());} @TO@ if (seekPolicy.equals("end")) {  LOG.debug("Seeking from the end off the topic");  consumer.seekToEnd(consumer.assignment());} @AT@ 1883 @LENGTH@ 314
---------UPD Block@@ThenBody:{  LOG.debug("Seeking from the end off the topic");  consumer.poll(Duration.ofMillis(100));  consumer.seekToEnd(consumer.assignment());} @TO@ ThenBody:{  LOG.debug("Seeking from the end off the topic");  consumer.seekToEnd(consumer.assignment());} @AT@ 1913 @LENGTH@ 284
------------DEL ExpressionStatement@@MethodInvocation:consumer.poll(Duration.ofMillis(100)) @AT@ 2094 @LENGTH@ 38
---------------DEL MethodInvocation@@consumer.poll(Duration.ofMillis(100)) @AT@ 2094 @LENGTH@ 37
------------------DEL SimpleName@@Name:consumer @AT@ 2094 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:poll:[Duration.ofMillis(100)] @AT@ 2103 @LENGTH@ 28
---------------------DEL MethodInvocation@@Duration.ofMillis(100) @AT@ 2108 @LENGTH@ 22
------------------------DEL SimpleName@@Name:Duration @AT@ 2108 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:ofMillis:[100] @AT@ 2117 @LENGTH@ 13
---------------------------DEL NumberLiteral@@100 @AT@ 2126 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isExecutable(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isExecutable(file)) @AT@ 2948 @LENGTH@ 57
---UPD MethodInvocation@@toFileVisitResult(Files.isExecutable(file),file) @TO@ toFileVisitResult(Files.isExecutable(file)) @AT@ 2955 @LENGTH@ 49
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isExecutable(file), file] @TO@ MethodName:toFileVisitResult:[Files.isExecutable(file)] @AT@ 2955 @LENGTH@ 49
---------DEL SimpleName@@file @AT@ 2999 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @TO@ MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null))) @AT@ 7115 @LENGTH@ 83
---UPD MethodInvocation@@toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @TO@ toFileVisitResult(accept(Objects.toString(file.getFileName(),null))) @AT@ 7122 @LENGTH@ 75
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null)), file] @TO@ MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null))] @AT@ 7122 @LENGTH@ 75
---------DEL SimpleName@@file @AT@ 7192 @LENGTH@ 4


UPD IfStatement@@if (getConfiguration().isPojoRequest()) {  request=exchange.getIn().getMandatoryBody(GetAliasRequest.class);} else {  GetAliasRequest.Builder builder=GetAliasRequest.builder();  builder.functionName(getEndpoint().getFunction());  String aliasName=exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function alias must be specified to get an alias");  }  builder.name(aliasName);} @TO@ if (getConfiguration().isPojoRequest()) {  request=exchange.getIn().getMandatoryBody(GetAliasRequest.class);} else {  GetAliasRequest.Builder builder=GetAliasRequest.builder();  builder.functionName(getEndpoint().getFunction());  String aliasName=exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function alias must be specified to get an alias");  }  builder.name(aliasName);  request=builder.build();} @AT@ 33955 @LENGTH@ 601
---UPD Block@@ElseBody:{  GetAliasRequest.Builder builder=GetAliasRequest.builder();  builder.functionName(getEndpoint().getFunction());  String aliasName=exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function alias must be specified to get an alias");  }  builder.name(aliasName);} @TO@ ElseBody:{  GetAliasRequest.Builder builder=GetAliasRequest.builder();  builder.functionName(getEndpoint().getFunction());  String aliasName=exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function alias must be specified to get an alias");  }  builder.name(aliasName);  request=builder.build();} @AT@ 34092 @LENGTH@ 464
------INS ExpressionStatement@@Assignment:request=builder.build() @TO@ Block@@ElseBody:{  GetAliasRequest.Builder builder=GetAliasRequest.builder();  builder.functionName(getEndpoint().getFunction());  String aliasName=exchange.getIn().getHeader(Lambda2Constants.FUNCTION_ALIAS_NAME,String.class);  if (ObjectHelper.isEmpty(aliasName)) {    throw new IllegalArgumentException("Function alias must be specified to get an alias");  }  builder.name(aliasName);} @AT@ 34559 @LENGTH@ 26
---------INS Assignment@@request=builder.build() @TO@ ExpressionStatement@@Assignment:request=builder.build() @AT@ 34559 @LENGTH@ 25
------------INS SimpleName@@request @TO@ Assignment@@request=builder.build() @AT@ 34559 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@request=builder.build() @AT@ 34566 @LENGTH@ 1
------------INS MethodInvocation@@builder.build() @TO@ Assignment@@request=builder.build() @AT@ 34569 @LENGTH@ 15
---------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.build() @AT@ 34569 @LENGTH@ 7
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@builder.build() @AT@ 34577 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:result=prime * result + Objects.hash(creationTime,groupId,groupSequence,replyToGroupId,subject,to) @TO@ Assignment:result=prime * result + Objects.hash(this.creationTime,this.groupId,this.groupSequence,this.replyToGroupId,this.subject,this.to) @AT@ 4020 @LENGTH@ 106
---UPD Assignment@@result=prime * result + Objects.hash(creationTime,groupId,groupSequence,replyToGroupId,subject,to) @TO@ result=prime * result + Objects.hash(this.creationTime,this.groupId,this.groupSequence,this.replyToGroupId,this.subject,this.to) @AT@ 4020 @LENGTH@ 105
------UPD InfixExpression@@prime * result + Objects.hash(creationTime,groupId,groupSequence,replyToGroupId,subject,to) @TO@ prime * result + Objects.hash(this.creationTime,this.groupId,this.groupSequence,this.replyToGroupId,this.subject,this.to) @AT@ 4029 @LENGTH@ 96
---------UPD MethodInvocation@@Objects.hash(creationTime,groupId,groupSequence,replyToGroupId,subject,to) @TO@ Objects.hash(this.creationTime,this.groupId,this.groupSequence,this.replyToGroupId,this.subject,this.to) @AT@ 4046 @LENGTH@ 79
------------UPD SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @TO@ MethodName:hash:[this.creationTime, this.groupId, this.groupSequence, this.replyToGroupId, this.subject, this.to] @AT@ 4054 @LENGTH@ 71
---------------INS FieldAccess@@this.creationTime @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4059 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.creationTime @AT@ 4059 @LENGTH@ 4
------------------INS SimpleName@@creationTime @TO@ FieldAccess@@this.creationTime @AT@ 4064 @LENGTH@ 12
---------------DEL SimpleName@@creationTime @AT@ 4059 @LENGTH@ 12
---------------DEL SimpleName@@groupId @AT@ 4073 @LENGTH@ 7
---------------INS FieldAccess@@this.groupId @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4078 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.groupId @AT@ 4078 @LENGTH@ 4
------------------INS SimpleName@@groupId @TO@ FieldAccess@@this.groupId @AT@ 4083 @LENGTH@ 7
---------------DEL SimpleName@@groupSequence @AT@ 4082 @LENGTH@ 13
---------------INS FieldAccess@@this.groupSequence @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4092 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.groupSequence @AT@ 4092 @LENGTH@ 4
------------------INS SimpleName@@groupSequence @TO@ FieldAccess@@this.groupSequence @AT@ 4097 @LENGTH@ 13
---------------DEL SimpleName@@replyToGroupId @AT@ 4097 @LENGTH@ 14
---------------INS FieldAccess@@this.replyToGroupId @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4112 @LENGTH@ 19
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.replyToGroupId @AT@ 4112 @LENGTH@ 4
------------------INS SimpleName@@replyToGroupId @TO@ FieldAccess@@this.replyToGroupId @AT@ 4117 @LENGTH@ 14
---------------DEL SimpleName@@subject @AT@ 4113 @LENGTH@ 7
---------------DEL SimpleName@@to @AT@ 4122 @LENGTH@ 2
---------------INS FieldAccess@@this.subject @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4137 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.subject @AT@ 4137 @LENGTH@ 4
------------------INS SimpleName@@subject @TO@ FieldAccess@@this.subject @AT@ 4142 @LENGTH@ 7
---------------INS FieldAccess@@this.to @TO@ SimpleName@@MethodName:hash:[creationTime, groupId, groupSequence, replyToGroupId, subject, to] @AT@ 4151 @LENGTH@ 7
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.to @AT@ 4151 @LENGTH@ 4
------------------INS SimpleName@@to @TO@ FieldAccess@@this.to @AT@ 4156 @LENGTH@ 2


UPD VariableDeclarationStatement@@URL[] urls=project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path " + url)).toArray(URL[]::new); @TO@ URL[] urls=project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path {}",url)).toArray(URL[]::new); @AT@ 5083 @LENGTH@ 272
---UPD VariableDeclarationFragment@@urls=project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path " + url)).toArray(URL[]::new) @TO@ urls=project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path {}",url)).toArray(URL[]::new) @AT@ 5089 @LENGTH@ 265
------UPD MethodInvocation@@project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path " + url)).toArray(URL[]::new) @TO@ project.getTestClasspathElements().stream().map(File::new).map(ThrowingHelper.wrapAsFunction(e -> e.toURI().toURL())).peek(url -> log.debug("Adding project path {}",url)).toArray(URL[]::new) @AT@ 5096 @LENGTH@ 258
---------UPD MethodInvocation@@MethodName:peek:[url -> log.debug("Adding project path " + url)] @TO@ MethodName:peek:[url -> log.debug("Adding project path {}",url)] @AT@ 5096 @LENGTH@ 221
------------UPD LambdaExpression@@url -> log.debug("Adding project path " + url) @TO@ url -> log.debug("Adding project path {}",url) @AT@ 5270 @LENGTH@ 46
---------------UPD MethodInvocation@@log.debug("Adding project path " + url) @TO@ log.debug("Adding project path {}",url) @AT@ 5277 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:debug:["Adding project path " + url] @TO@ MethodName:debug:["Adding project path {}", url] @AT@ 5281 @LENGTH@ 35
---------------------DEL InfixExpression@@"Adding project path " + url @AT@ 5287 @LENGTH@ 28
------------------------DEL StringLiteral@@"Adding project path " @AT@ 5287 @LENGTH@ 22
------------------------DEL Operator@@+ @AT@ 5309 @LENGTH@ 1
------------------------DEL SimpleName@@url @AT@ 5312 @LENGTH@ 3
---------------------INS StringLiteral@@"Adding project path {}" @TO@ SimpleName@@MethodName:debug:["Adding project path " + url] @AT@ 5287 @LENGTH@ 24
---------------------INS SimpleName@@url @TO@ SimpleName@@MethodName:debug:["Adding project path " + url] @AT@ 5313 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:proxyEquals(proxy,args[0]) @TO@ MethodInvocation:proxyEquals(o,args[0]) @AT@ 5681 @LENGTH@ 35
---UPD MethodInvocation@@proxyEquals(proxy,args[0]) @TO@ proxyEquals(o,args[0]) @AT@ 5688 @LENGTH@ 27
------UPD SimpleName@@MethodName:proxyEquals:[proxy, args[0]] @TO@ MethodName:proxyEquals:[o, args[0]] @AT@ 5688 @LENGTH@ 27
---------UPD SimpleName@@proxy @TO@ o @AT@ 5700 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:ee.setUnitOfWork(null) @TO@ MethodDeclaration@@protected, void, MethodName:onDone,  @AT@ 10675 @LENGTH@ 23
---INS MethodInvocation@@ee.setUnitOfWork(null) @TO@ ExpressionStatement@@MethodInvocation:ee.setUnitOfWork(null) @AT@ 10675 @LENGTH@ 22
------INS SimpleName@@Name:ee @TO@ MethodInvocation@@ee.setUnitOfWork(null) @AT@ 10675 @LENGTH@ 2
------INS SimpleName@@MethodName:setUnitOfWork:[null] @TO@ MethodInvocation@@ee.setUnitOfWork(null) @AT@ 10678 @LENGTH@ 19
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setUnitOfWork:[null] @AT@ 10692 @LENGTH@ 4


UPD FieldDeclaration@@private, OpaqueTokenIntrospector, [introspector] @TO@ private, final, OpaqueTokenIntrospector, [introspector] @AT@ 3132 @LENGTH@ 45
---INS Modifier@@final @TO@ FieldDeclaration@@private, OpaqueTokenIntrospector, [introspector] @AT@ 3140 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new ArrayList<>(endpoints.values()) @TO@ MethodInvocation:endpoints.getReadOnlyValues() @AT@ 31478 @LENGTH@ 43
---DEL ClassInstanceCreation@@ArrayList<>[endpoints.values()] @AT@ 31485 @LENGTH@ 35
------DEL New@@new @AT@ 31485 @LENGTH@ 3
------DEL ParameterizedType@@ArrayList<> @AT@ 31489 @LENGTH@ 11
---------DEL SimpleType@@ArrayList @AT@ 31489 @LENGTH@ 9
------DEL MethodInvocation@@endpoints.values() @AT@ 31501 @LENGTH@ 18
---INS MethodInvocation@@endpoints.getReadOnlyValues() @TO@ ReturnStatement@@ClassInstanceCreation:new ArrayList<>(endpoints.values()) @AT@ 31485 @LENGTH@ 29
------MOV SimpleName@@Name:endpoints @TO@ MethodInvocation@@endpoints.getReadOnlyValues() @AT@ 31501 @LENGTH@ 9
------MOV SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@endpoints.getReadOnlyValues() @AT@ 31511 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @TO@ public, void, MethodName:testBadConfiguration,  @AT@ 4127 @LENGTH@ 349
---DEL SimpleType@@Exception @AT@ 4169 @LENGTH@ 9
---DEL TryStatement@@try {  template.sendBody(String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @AT@ 4189 @LENGTH@ 281
------DEL ExpressionStatement@@MethodInvocation:template.sendBody(String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World") @AT@ 4207 @LENGTH@ 109
---------DEL MethodInvocation@@template.sendBody(String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World") @AT@ 4207 @LENGTH@ 108
------------DEL SimpleName@@Name:template @AT@ 4207 @LENGTH@ 8
------------DEL SimpleName@@MethodName:sendBody:[String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",getPort()), "Hello World"] @AT@ 4216 @LENGTH@ 99
---------------DEL MethodInvocation@@String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",getPort()) @AT@ 4225 @LENGTH@ 74
---------------DEL StringLiteral@@"Hello World" @AT@ 4301 @LENGTH@ 13
------DEL ExpressionStatement@@MethodInvocation:fail("Should have thrown a ResolveEndpointFailedException") @AT@ 4329 @LENGTH@ 60
------DEL CatchClause@@catch (ResolveEndpointFailedException e) {} @AT@ 4400 @LENGTH@ 70
---------DEL SingleVariableDeclaration@@ResolveEndpointFailedException e @AT@ 4407 @LENGTH@ 32
------------DEL SimpleType@@ResolveEndpointFailedException @AT@ 4407 @LENGTH@ 30
------------DEL SimpleName@@e @AT@ 4438 @LENGTH@ 1
---INS VariableDeclarationStatement@@final int port=getPort(); @TO@ MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @AT@ 4233 @LENGTH@ 27
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int port=getPort(); @AT@ 4233 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int port=getPort(); @AT@ 4239 @LENGTH@ 3
------INS VariableDeclarationFragment@@port=getPort() @TO@ VariableDeclarationStatement@@final int port=getPort(); @AT@ 4243 @LENGTH@ 16
---------INS SimpleName@@port @TO@ VariableDeclarationFragment@@port=getPort() @AT@ 4243 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ VariableDeclarationFragment@@port=getPort() @AT@ 4250 @LENGTH@ 9
---INS VariableDeclarationStatement@@final String format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port); @TO@ MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @AT@ 4269 @LENGTH@ 92
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port); @AT@ 4269 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port); @AT@ 4275 @LENGTH@ 6
------INS VariableDeclarationFragment@@format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @TO@ VariableDeclarationStatement@@final String format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port); @AT@ 4282 @LENGTH@ 78
---------INS SimpleName@@format @TO@ VariableDeclarationFragment@@format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @AT@ 4282 @LENGTH@ 6
---------INS MethodInvocation@@String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @TO@ VariableDeclarationFragment@@format=String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @AT@ 4291 @LENGTH@ 69
------------MOV SimpleName@@Name:String @TO@ MethodInvocation@@String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @AT@ 4225 @LENGTH@ 6
------------MOV SimpleName@@MethodName:format:["mina:tcp://localhost:%1$s?sync=true&codec=#XXX", getPort()] @TO@ MethodInvocation@@String.format("mina:tcp://localhost:%1$s?sync=true&codec=#XXX",port) @AT@ 4232 @LENGTH@ 67
---------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 4289 @LENGTH@ 9
---------------INS SimpleName@@port @TO@ SimpleName@@MethodName:format:["mina:tcp://localhost:%1$s?sync=true&codec=#XXX", getPort()] @AT@ 4355 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @TO@ MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @AT@ 4371 @LENGTH@ 170
------MOV MethodInvocation@@fail("Should have thrown a ResolveEndpointFailedException") @TO@ ExpressionStatement@@MethodInvocation:assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @AT@ 4329 @LENGTH@ 59
---------UPD SimpleName@@MethodName:fail:["Should have thrown a ResolveEndpointFailedException"] @TO@ MethodName:assertThrows:[ResolveEndpointFailedException.class, () -> template.sendBody(format,"Hello World"), "Should have thrown a ResolveEndpointFailedException"] @AT@ 4329 @LENGTH@ 59
------------INS TypeLiteral@@ResolveEndpointFailedException.class @TO@ SimpleName@@MethodName:fail:["Should have thrown a ResolveEndpointFailedException"] @AT@ 4384 @LENGTH@ 36
------------INS LambdaExpression@@() -> template.sendBody(format,"Hello World") @TO@ SimpleName@@MethodName:fail:["Should have thrown a ResolveEndpointFailedException"] @AT@ 4422 @LENGTH@ 46
---------------INS MethodInvocation@@template.sendBody(format,"Hello World") @TO@ LambdaExpression@@() -> template.sendBody(format,"Hello World") @AT@ 4428 @LENGTH@ 40
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody(format,"Hello World") @AT@ 4428 @LENGTH@ 8
------------------INS SimpleName@@MethodName:sendBody:[format, "Hello World"] @TO@ MethodInvocation@@template.sendBody(format,"Hello World") @AT@ 4437 @LENGTH@ 31
---------------------INS SimpleName@@format @TO@ SimpleName@@MethodName:sendBody:[format, "Hello World"] @AT@ 4446 @LENGTH@ 6
---------------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:sendBody:[format, "Hello World"] @AT@ 4454 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:it.intitalEntitySet(AuditablePerson.class) @TO@ MethodInvocation:it.initialEntitySet(AuditablePerson.class) @AT@ 5678 @LENGTH@ 43
---UPD MethodInvocation@@it.intitalEntitySet(AuditablePerson.class) @TO@ it.initialEntitySet(AuditablePerson.class) @AT@ 5678 @LENGTH@ 42
------UPD SimpleName@@MethodName:intitalEntitySet:[AuditablePerson.class] @TO@ MethodName:initialEntitySet:[AuditablePerson.class] @AT@ 5681 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:LOG.trace("Complected from processing all exchanges...") @TO@ MethodInvocation:LOG.trace("Completed from processing all exchanges...") @AT@ 6405 @LENGTH@ 57
---UPD MethodInvocation@@LOG.trace("Complected from processing all exchanges...") @TO@ LOG.trace("Completed from processing all exchanges...") @AT@ 6405 @LENGTH@ 56
------UPD SimpleName@@MethodName:trace:["Complected from processing all exchanges..."] @TO@ MethodName:trace:["Completed from processing all exchanges..."] @AT@ 6409 @LENGTH@ 52
---------UPD StringLiteral@@"Complected from processing all exchanges..." @TO@ "Completed from processing all exchanges..." @AT@ 6415 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtIsTooEarlyThenErrorMessageIndicatesNotBeforeTime,  @AT@ 3207 @LENGTH@ 110
---INS MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 3207 @LENGTH@ 109
------INS MethodInvocation@@MethodName:assertThat:[details] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 3207 @LENGTH@ 19
---------INS SimpleName@@details @TO@ MethodInvocation@@MethodName:assertThat:[details] @AT@ 3218 @LENGTH@ 7
------INS SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 3227 @LENGTH@ 89
---------INS LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @AT@ 3236 @LENGTH@ 79
------------INS VariableDeclarationFragment@@error @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 3237 @LENGTH@ 5
---------------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error @AT@ 3237 @LENGTH@ 5
------------INS MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 3247 @LENGTH@ 68
---------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 3247 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 3255 @LENGTH@ 60
------------------INS MethodInvocation@@error.getErrorCode() @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 3262 @LENGTH@ 20
---------------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getErrorCode() @AT@ 3262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@error.getErrorCode() @AT@ 3268 @LENGTH@ 14
------------------INS QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 3284 @LENGTH@ 30
---------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 3284 @LENGTH@ 16
---------------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 3301 @LENGTH@ 13


UPD LambdaExpression@@association -> {
  NestedRelationshipContext relationshipContext=NestedRelationshipContext.of(association,propertyAccessor,sourceEntity);
  Object rawValue=relationshipContext.getValue();
  Collection<?> relatedValuesToStore=MappingSupport.unifyRelationshipValue(relationshipContext.getInverse(),rawValue);
  RelationshipDescription relationshipDescription=relationshipContext.getRelationship();
  RelationshipDescription relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse();
  if (!includeProperty.test(relationshipDescription.getFieldName())) {
    return;
  }
  Neo4jPersistentProperty idProperty;
  if (!relationshipDescription.hasInternalIdProperty()) {
    idProperty=null;
  }
 else {
    Neo4jPersistentEntity<?> relationshipPropertiesEntity=(Neo4jPersistentEntity<?>)relationshipDescription.getRelationshipPropertiesEntity();
    idProperty=relationshipPropertiesEntity.getIdProperty();
  }
  ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore);
  if (processState == ProcessState.PROCESSED_ALL_RELATIONSHIPS || processState == ProcessState.PROCESSED_BOTH) {
    return;
  }
  if (!isParentObjectNew && !stateMachine.hasProcessedRelationship(fromId,relationshipDescription)) {
    List<Long> knownRelationshipsIds=new ArrayList<>();
    if (idProperty != null) {
      for (      Object relatedValueToStore : relatedValuesToStore) {
        if (relatedValueToStore == null) {
          continue;
        }
        Long id=(Long)relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty);
        if (id != null) {
          knownRelationshipsIds.add(id);
        }
      }
    }
    Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(sourceEntity,relationshipDescription);
    neo4jClient.query(renderer.render(relationshipRemoveQuery)).bind(convertIdValues(sourceEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(knownRelationshipsIds).to(Constants.NAME_OF_KNOWN_RELATIONSHIPS_PARAM).run();
  }
  if (relationshipContext.inverseValueIsEmpty()) {
    return;
  }
  stateMachine.markRelationshipAsProcessed(fromId,relationshipDescription);
  Neo4jPersistentProperty relationshipProperty=association.getInverse();
  RelationshipHandler relationshipHandler=RelationshipHandler.forProperty(relationshipProperty,rawValue);
  for (  Object relatedValueToStore : relatedValuesToStore) {
    Object relatedObjectBeforeCallbacksApplied=relationshipContext.identifyAndExtractRelationshipTargetNode(relatedValueToStore);
    Neo4jPersistentEntity<?> targetEntity=neo4jMappingContext.getPersistentEntity(relatedObjectBeforeCallbacksApplied.getClass());
    boolean isEntityNew=targetEntity.isNew(relatedObjectBeforeCallbacksApplied);
    Object newRelatedObject=stateMachine.hasProcessedValue(relatedObjectBeforeCallbacksApplied) ? stateMachine.getProcessedAs(relatedObjectBeforeCallbacksApplied) : eventSupport.maybeCallBeforeBind(relatedObjectBeforeCallbacksApplied);
    Long relatedInternalId;
    Entity savedEntity=null;
    if (stateMachine.hasProcessedValue(relatedValueToStore)) {
      relatedInternalId=stateMachine.getInternalId(relatedObjectBeforeCallbacksApplied);
    }
 else {
      savedEntity=saveRelatedNode(newRelatedObject,targetEntity);
      relatedInternalId=savedEntity.id();
    }
    stateMachine.markValueAsProcessed(relatedValueToStore,relatedInternalId);
    Object idValue=idProperty != null ? relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty) : null;
    boolean isNewRelationship=idValue == null;
    CreateRelationshipStatementHolder statementHolder=neo4jMappingContext.createStatement(sourceEntity,relationshipContext,relatedValueToStore,isNewRelationship);
    Optional<Long> relationshipInternalId=neo4jClient.query(renderer.render(statementHolder.getStatement())).bind(convertIdValues(sourceEntity.getRequiredIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(relatedInternalId).to(Constants.TO_ID_PARAMETER_NAME).bind(idValue).to(Constants.NAME_OF_KNOWN_RELATIONSHIP_PARAM).bindAll(statementHolder.getProperties()).fetchAs(Long.class).one();
    if (idProperty != null && isNewRelationship) {
      relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).setProperty(idProperty,relationshipInternalId.get());
    }
    PersistentPropertyAccessor<?> targetPropertyAccessor=targetEntity.getPropertyAccessor(newRelatedObject);
    if (targetEntity.isUsingInternalIds()) {
      targetPropertyAccessor.setProperty(targetEntity.getRequiredIdProperty(),relatedInternalId);
    }
    if (savedEntity != null) {
      TemplateSupport.updateVersionPropertyIfPossible(targetEntity,targetPropertyAccessor,savedEntity);
    }
    stateMachine.markValueAsProcessedAs(relatedObjectBeforeCallbacksApplied,targetPropertyAccessor.getBean());
    if (processState != ProcessState.PROCESSED_ALL_VALUES) {
      processNestedRelations(targetEntity,targetPropertyAccessor,isEntityNew,stateMachine,s -> true);
    }
    Object potentiallyRecreatedNewRelatedObject=MappingSupport.getRelationshipOrRelationshipPropertiesObject(neo4jMappingContext,relationshipDescription.hasRelationshipProperties(),relationshipProperty.isDynamicAssociation(),relatedValueToStore,targetPropertyAccessor);
    relationshipHandler.handle(relatedValueToStore,relatedObjectBeforeCallbacksApplied,potentiallyRecreatedNewRelatedObject);
  }
  relationshipHandler.applyFinalResultToOwner(propertyAccessor);
}
 @TO@ association -> {
  NestedRelationshipContext relationshipContext=NestedRelationshipContext.of(association,propertyAccessor,sourceEntity);
  Object rawValue=relationshipContext.getValue();
  Collection<?> relatedValuesToStore=MappingSupport.unifyRelationshipValue(relationshipContext.getInverse(),rawValue);
  RelationshipDescription relationshipDescription=relationshipContext.getRelationship();
  if (!includeProperty.test(relationshipDescription.getFieldName())) {
    return;
  }
  Neo4jPersistentProperty idProperty;
  if (!relationshipDescription.hasInternalIdProperty()) {
    idProperty=null;
  }
 else {
    Neo4jPersistentEntity<?> relationshipPropertiesEntity=(Neo4jPersistentEntity<?>)relationshipDescription.getRelationshipPropertiesEntity();
    idProperty=relationshipPropertiesEntity.getIdProperty();
  }
  ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore);
  if (processState == ProcessState.PROCESSED_ALL_RELATIONSHIPS || processState == ProcessState.PROCESSED_BOTH) {
    return;
  }
  if (!isParentObjectNew && !stateMachine.hasProcessedRelationship(fromId,relationshipDescription)) {
    List<Long> knownRelationshipsIds=new ArrayList<>();
    if (idProperty != null) {
      for (      Object relatedValueToStore : relatedValuesToStore) {
        if (relatedValueToStore == null) {
          continue;
        }
        Long id=(Long)relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty);
        if (id != null) {
          knownRelationshipsIds.add(id);
        }
      }
    }
    Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(sourceEntity,relationshipDescription);
    neo4jClient.query(renderer.render(relationshipRemoveQuery)).bind(convertIdValues(sourceEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(knownRelationshipsIds).to(Constants.NAME_OF_KNOWN_RELATIONSHIPS_PARAM).run();
  }
  if (relationshipContext.inverseValueIsEmpty()) {
    return;
  }
  stateMachine.markRelationshipAsProcessed(fromId,relationshipDescription);
  Neo4jPersistentProperty relationshipProperty=association.getInverse();
  RelationshipHandler relationshipHandler=RelationshipHandler.forProperty(relationshipProperty,rawValue);
  for (  Object relatedValueToStore : relatedValuesToStore) {
    Object relatedObjectBeforeCallbacksApplied=relationshipContext.identifyAndExtractRelationshipTargetNode(relatedValueToStore);
    Neo4jPersistentEntity<?> targetEntity=neo4jMappingContext.getPersistentEntity(relatedObjectBeforeCallbacksApplied.getClass());
    boolean isEntityNew=targetEntity.isNew(relatedObjectBeforeCallbacksApplied);
    Object newRelatedObject=stateMachine.hasProcessedValue(relatedObjectBeforeCallbacksApplied) ? stateMachine.getProcessedAs(relatedObjectBeforeCallbacksApplied) : eventSupport.maybeCallBeforeBind(relatedObjectBeforeCallbacksApplied);
    Long relatedInternalId;
    Entity savedEntity=null;
    if (stateMachine.hasProcessedValue(relatedValueToStore)) {
      relatedInternalId=stateMachine.getInternalId(relatedObjectBeforeCallbacksApplied);
    }
 else {
      savedEntity=saveRelatedNode(newRelatedObject,targetEntity);
      relatedInternalId=savedEntity.id();
    }
    stateMachine.markValueAsProcessed(relatedValueToStore,relatedInternalId);
    Object idValue=idProperty != null ? relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty) : null;
    boolean isNewRelationship=idValue == null;
    CreateRelationshipStatementHolder statementHolder=neo4jMappingContext.createStatement(sourceEntity,relationshipContext,relatedValueToStore,isNewRelationship);
    Optional<Long> relationshipInternalId=neo4jClient.query(renderer.render(statementHolder.getStatement())).bind(convertIdValues(sourceEntity.getRequiredIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(relatedInternalId).to(Constants.TO_ID_PARAMETER_NAME).bind(idValue).to(Constants.NAME_OF_KNOWN_RELATIONSHIP_PARAM).bindAll(statementHolder.getProperties()).fetchAs(Long.class).one();
    if (idProperty != null && isNewRelationship) {
      relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).setProperty(idProperty,relationshipInternalId.get());
    }
    PersistentPropertyAccessor<?> targetPropertyAccessor=targetEntity.getPropertyAccessor(newRelatedObject);
    if (targetEntity.isUsingInternalIds()) {
      targetPropertyAccessor.setProperty(targetEntity.getRequiredIdProperty(),relatedInternalId);
    }
    if (savedEntity != null) {
      TemplateSupport.updateVersionPropertyIfPossible(targetEntity,targetPropertyAccessor,savedEntity);
    }
    stateMachine.markValueAsProcessedAs(relatedObjectBeforeCallbacksApplied,targetPropertyAccessor.getBean());
    if (processState != ProcessState.PROCESSED_ALL_VALUES) {
      processNestedRelations(targetEntity,targetPropertyAccessor,isEntityNew,stateMachine,s -> true);
    }
    Object potentiallyRecreatedNewRelatedObject=MappingSupport.getRelationshipOrRelationshipPropertiesObject(neo4jMappingContext,relationshipDescription.hasRelationshipProperties(),relationshipProperty.isDynamicAssociation(),relatedValueToStore,targetPropertyAccessor);
    relationshipHandler.handle(relatedValueToStore,relatedObjectBeforeCallbacksApplied,potentiallyRecreatedNewRelatedObject);
  }
  relationshipHandler.applyFinalResultToOwner(propertyAccessor);
}
 @AT@ 27243 @LENGTH@ 6503
---DEL VariableDeclarationStatement@@RelationshipDescription relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse(); @AT@ 27707 @LENGTH@ 106
------DEL SimpleType@@RelationshipDescription @AT@ 27707 @LENGTH@ 23
------DEL VariableDeclarationFragment@@relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse() @AT@ 27731 @LENGTH@ 81
---------DEL SimpleName@@relationshipDescriptionObverse @AT@ 27731 @LENGTH@ 30
---------DEL MethodInvocation@@relationshipDescription.getRelationshipObverse() @AT@ 27764 @LENGTH@ 48
------------DEL SimpleName@@Name:relationshipDescription @AT@ 27764 @LENGTH@ 23
------------DEL SimpleName@@MethodName:getRelationshipObverse:[] @AT@ 27788 @LENGTH@ 24
---UPD VariableDeclarationStatement@@ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore); @TO@ ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore); @AT@ 28337 @LENGTH@ 114
------UPD VariableDeclarationFragment@@processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore) @TO@ processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore) @AT@ 28350 @LENGTH@ 100
---------UPD MethodInvocation@@stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore) @TO@ stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore) @AT@ 28365 @LENGTH@ 85
------------UPD SimpleName@@MethodName:getStateOf:[fromId, relationshipDescriptionObverse, relatedValuesToStore] @TO@ MethodName:getStateOf:[fromId, relationshipDescription, relatedValuesToStore] @AT@ 28378 @LENGTH@ 72
---------------UPD SimpleName@@relationshipDescriptionObverse @TO@ relationshipDescription @AT@ 28397 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @TO@ MethodInvocation:kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)).all() @AT@ 3571 @LENGTH@ 64
---UPD MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @TO@ MethodName:deleteTopics:[Collections.singletonList(TOPIC)] @AT@ 3571 @LENGTH@ 63
---INS MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)).all() @TO@ ExpressionStatement@@MethodInvocation:kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @AT@ 3571 @LENGTH@ 69
------MOV MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)).all() @AT@ 3571 @LENGTH@ 63
---------MOV MethodInvocation@@Collections.singletonList(TOPIC) @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @AT@ 3601 @LENGTH@ 32
------INS SimpleName@@Name:kafkaAdminClient @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)).all() @AT@ 3571 @LENGTH@ 16
------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)).all() @AT@ 3635 @LENGTH@ 5


UPD IfStatement@@if (!ArrayUtils.isEmpty(mappingValues)) this.mappingValues=mappingValues; @TO@ if (!ArrayUtils.isEmpty(mappingValues)) {  this.mappingValues=mappingValues;} @AT@ 2288 @LENGTH@ 87
---UPD Block@@ThenBody:this.mappingValues=mappingValues; @TO@ ThenBody:{  this.mappingValues=mappingValues;} @AT@ 2340 @LENGTH@ 35


INS MethodDeclaration@@public, String, MethodName:getTableName,  @TO@ TypeDeclaration@@[@Explain(displayName="HDFS Copy Operator",explainLevels={Explain.Level.USER,Explain.Level.DEFAULT,Explain.Level.EXTENDED}), public]DirCopyWork, [Serializable, StringConvertibleObject] @AT@ 3624 @LENGTH@ 56
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getTableName,  @AT@ 3624 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getTableName,  @AT@ 3631 @LENGTH@ 6
---INS SimpleName@@MethodName:getTableName @TO@ MethodDeclaration@@public, String, MethodName:getTableName,  @AT@ 3638 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:tableName @TO@ MethodDeclaration@@public, String, MethodName:getTableName,  @AT@ 3659 @LENGTH@ 17
------INS SimpleName@@tableName @TO@ ReturnStatement@@SimpleName:tableName @AT@ 3666 @LENGTH@ 9


UPD FieldDeclaration@@private, Integer, [port=8080] @TO@ private, Integer, [port=AvailablePortFinder.getNextAvailable()] @AT@ 1234 @LENGTH@ 28
---UPD VariableDeclarationFragment@@port=8080 @TO@ port=AvailablePortFinder.getNextAvailable() @AT@ 1250 @LENGTH@ 11
------DEL NumberLiteral@@8080 @AT@ 1257 @LENGTH@ 4
------INS MethodInvocation@@AvailablePortFinder.getNextAvailable() @TO@ VariableDeclarationFragment@@port=8080 @AT@ 1307 @LENGTH@ 38
---------INS SimpleName@@Name:AvailablePortFinder @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable() @AT@ 1307 @LENGTH@ 19
---------INS SimpleName@@MethodName:getNextAvailable:[] @TO@ MethodInvocation@@AvailablePortFinder.getNextAvailable() @AT@ 1327 @LENGTH@ 18


UPD FieldDeclaration@@protected, Boolean, [defaultRequeueRejected] @TO@ private, Boolean, [defaultRequeueRejected] @AT@ 1703 @LENGTH@ 41
---UPD Modifier@@protected @TO@ private @AT@ 1703 @LENGTH@ 9


UPD IfStatement@@if (value instanceof Iterable) {  value=((Iterable<?>)value).iterator().next();} @TO@ if (value instanceof Iterable) {  Iterator iterator=((Iterable)value).iterator();  value=iterator.hasNext() ? iterator.next() : new Document();} @AT@ 4955 @LENGTH@ 88
---UPD Block@@ThenBody:{  value=((Iterable<?>)value).iterator().next();} @TO@ ThenBody:{  Iterator iterator=((Iterable)value).iterator();  value=iterator.hasNext() ? iterator.next() : new Document();} @AT@ 4986 @LENGTH@ 57
------DEL ExpressionStatement@@Assignment:value=((Iterable<?>)value).iterator().next() @AT@ 4991 @LENGTH@ 48
---------DEL Assignment@@value=((Iterable<?>)value).iterator().next() @AT@ 4991 @LENGTH@ 47
------------DEL SimpleName@@value @AT@ 4991 @LENGTH@ 5
------------DEL Operator@@= @AT@ 4996 @LENGTH@ 1
------------DEL MethodInvocation@@((Iterable<?>)value).iterator().next() @AT@ 4999 @LENGTH@ 39
---------------DEL MethodInvocation@@MethodName:iterator:[] @AT@ 4999 @LENGTH@ 32
------INS VariableDeclarationStatement@@Iterator iterator=((Iterable)value).iterator(); @TO@ Block@@ThenBody:{  value=((Iterable<?>)value).iterator().next();} @AT@ 5019 @LENGTH@ 50
---------INS SimpleType@@Iterator @TO@ VariableDeclarationStatement@@Iterator iterator=((Iterable)value).iterator(); @AT@ 5019 @LENGTH@ 8
---------INS VariableDeclarationFragment@@iterator=((Iterable)value).iterator() @TO@ VariableDeclarationStatement@@Iterator iterator=((Iterable)value).iterator(); @AT@ 5028 @LENGTH@ 40
------------INS SimpleName@@iterator @TO@ VariableDeclarationFragment@@iterator=((Iterable)value).iterator() @AT@ 5028 @LENGTH@ 8
------------INS MethodInvocation@@((Iterable)value).iterator() @TO@ VariableDeclarationFragment@@iterator=((Iterable)value).iterator() @AT@ 5039 @LENGTH@ 29
---------------MOV ParenthesizedExpression@@((Iterable<?>)value) @TO@ MethodInvocation@@((Iterable)value).iterator() @AT@ 4999 @LENGTH@ 21
------------------UPD CastExpression@@(Iterable<?>)value @TO@ (Iterable)value @AT@ 5000 @LENGTH@ 19
---------------------DEL ParameterizedType@@Iterable<?> @AT@ 5001 @LENGTH@ 11
------------------------DEL SimpleType@@Iterable @AT@ 5001 @LENGTH@ 8
------------------------DEL WildcardType@@? @AT@ 5010 @LENGTH@ 1
---------------------INS SimpleType@@Iterable @TO@ CastExpression@@(Iterable<?>)value @AT@ 5041 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@((Iterable)value).iterator() @AT@ 5032 @LENGTH@ 6
------INS ExpressionStatement@@Assignment:value=iterator.hasNext() ? iterator.next() : new Document() @TO@ Block@@ThenBody:{  value=((Iterable<?>)value).iterator().next();} @AT@ 5073 @LENGTH@ 62
---------INS Assignment@@value=iterator.hasNext() ? iterator.next() : new Document() @TO@ ExpressionStatement@@Assignment:value=iterator.hasNext() ? iterator.next() : new Document() @AT@ 5073 @LENGTH@ 61
------------INS SimpleName@@value @TO@ Assignment@@value=iterator.hasNext() ? iterator.next() : new Document() @AT@ 5073 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@value=iterator.hasNext() ? iterator.next() : new Document() @AT@ 5078 @LENGTH@ 1
------------INS ConditionalExpression@@iterator.hasNext() ? iterator.next() : new Document() @TO@ Assignment@@value=iterator.hasNext() ? iterator.next() : new Document() @AT@ 5081 @LENGTH@ 53
---------------INS MethodInvocation@@iterator.hasNext() @TO@ ConditionalExpression@@iterator.hasNext() ? iterator.next() : new Document() @AT@ 5081 @LENGTH@ 18
------------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.hasNext() @AT@ 5081 @LENGTH@ 8
------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@iterator.hasNext() @AT@ 5090 @LENGTH@ 9
---------------INS MethodInvocation@@iterator.next() @TO@ ConditionalExpression@@iterator.hasNext() ? iterator.next() : new Document() @AT@ 5102 @LENGTH@ 15
------------------INS SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 5102 @LENGTH@ 8
------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 5111 @LENGTH@ 6
---------------INS ClassInstanceCreation@@Document[] @TO@ ConditionalExpression@@iterator.hasNext() ? iterator.next() : new Document() @AT@ 5120 @LENGTH@ 14
------------------INS New@@new @TO@ ClassInstanceCreation@@Document[] @AT@ 5120 @LENGTH@ 3
------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document[] @AT@ 5124 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @TO@ TypeDeclaration@@[public]CamelFilterWrapper, [Filter] @AT@ 1375 @LENGTH@ 84
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @AT@ 1375 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @AT@ 1383 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @AT@ 1390 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @AT@ 1396 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelFilterWrapper.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelFilterWrapper.class)] @AT@ 1403 @LENGTH@ 55
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelFilterWrapper.class) @AT@ 1403 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(CamelFilterWrapper.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelFilterWrapper.class) @AT@ 1409 @LENGTH@ 49
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(CamelFilterWrapper.class) @AT@ 1409 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[CamelFilterWrapper.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(CamelFilterWrapper.class) @AT@ 1423 @LENGTH@ 35
------------INS TypeLiteral@@CamelFilterWrapper.class @TO@ SimpleName@@MethodName:getLogger:[CamelFilterWrapper.class] @AT@ 1433 @LENGTH@ 24


UPD LambdaExpression@@p -> {
  PersistentPropertyAccessor propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  ReactiveNeo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  return runnableQuery.fetch().one().map(m -> (Collection<String>)m.get(Constants.NAME_OF_LABELS)).switchIfEmpty(Mono.just(Collections.emptyList())).zipWith(Mono.just((Collection<String>)propertyAccessor.getProperty(p))).map(t -> Tuples.of(entityToBeSaved,new DynamicLabels(t.getT1(),t.getT2())));
}
 @TO@ p -> {
  PersistentPropertyAccessor propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty();
  ReactiveNeo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  return runnableQuery.fetch().one().map(m -> (Collection<String>)m.get(Constants.NAME_OF_LABELS)).switchIfEmpty(Mono.just(Collections.emptyList())).zipWith(Mono.just((Collection<String>)propertyAccessor.getProperty(p))).map(t -> Tuples.of(entityToBeSaved,new DynamicLabels(t.getT1(),t.getT2())));
}
 @AT@ 15696 @LENGTH@ 1038
---UPD VariableDeclarationStatement@@ReactiveNeo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM); @TO@ ReactiveNeo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM); @AT@ 15809 @LENGTH@ 375
------UPD VariableDeclarationFragment@@runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @TO@ runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @AT@ 15857 @LENGTH@ 326
---------UPD MethodInvocation@@neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @TO@ neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @AT@ 15873 @LENGTH@ 310
------------UPD MethodInvocation@@MethodName:bind:[propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())] @TO@ MethodName:bind:[convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))] @AT@ 15873 @LENGTH@ 198
---------------UPD MethodInvocation@@propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty()) @TO@ convertIdValues(idProperty,propertyAccessor.getProperty(idProperty)) @AT@ 16002 @LENGTH@ 68
------------------DEL SimpleName@@Name:propertyAccessor @AT@ 16002 @LENGTH@ 16
------------------UPD SimpleName@@MethodName:getProperty:[entityMetaData.getRequiredIdProperty()] @TO@ MethodName:convertIdValues:[idProperty, propertyAccessor.getProperty(idProperty)] @AT@ 16019 @LENGTH@ 51
---------------------UPD MethodInvocation@@entityMetaData.getRequiredIdProperty() @TO@ propertyAccessor.getProperty(idProperty) @AT@ 16031 @LENGTH@ 38
------------------------UPD SimpleName@@Name:entityMetaData @TO@ Name:propertyAccessor @AT@ 16031 @LENGTH@ 14
------------------------UPD SimpleName@@MethodName:getRequiredIdProperty:[] @TO@ MethodName:getProperty:[idProperty] @AT@ 16046 @LENGTH@ 23
---------------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:getRequiredIdProperty:[] @AT@ 16245 @LENGTH@ 10
---------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:getProperty:[entityMetaData.getRequiredIdProperty()] @AT@ 16204 @LENGTH@ 10
---INS VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @TO@ LambdaExpression@@p -> {
  PersistentPropertyAccessor propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  ReactiveNeo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  return runnableQuery.fetch().one().map(m -> (Collection<String>)m.get(Constants.NAME_OF_LABELS)).switchIfEmpty(Mono.just(Collections.emptyList())).zipWith(Mono.just((Collection<String>)propertyAccessor.getProperty(p))).map(t -> Tuples.of(entityToBeSaved,new DynamicLabels(t.getT1(),t.getT2())));
}
 @AT@ 15915 @LENGTH@ 76
------INS SimpleType@@Neo4jPersistentProperty @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @AT@ 15915 @LENGTH@ 23
------INS VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @AT@ 15939 @LENGTH@ 51
---------INS SimpleName@@idProperty @TO@ VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @AT@ 15939 @LENGTH@ 10
---------INS MethodInvocation@@entityMetaData.getRequiredIdProperty() @TO@ VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @AT@ 15952 @LENGTH@ 38
------------INS SimpleName@@Name:entityMetaData @TO@ MethodInvocation@@entityMetaData.getRequiredIdProperty() @AT@ 15952 @LENGTH@ 14
------------INS SimpleName@@MethodName:getRequiredIdProperty:[] @TO@ MethodInvocation@@entityMetaData.getRequiredIdProperty() @AT@ 15967 @LENGTH@ 23


UPD Block@@ThenBody:{  final String sqlForDefaultPreparedStamentStrategy=sql.replace(":",":?");  final String preparedQuery=sqlPrepareStatementStrategy.prepareQuery(sqlForDefaultPreparedStamentStrategy,getEndpoint().isAllowNamedParameters(),exchange);  final Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    final Object value=iterator.next();    final Iterator<?> i=sqlPrepareStatementStrategy.createPopulateIterator(sqlForDefaultPreparedStamentStrategy,preparedQuery,expected,exchange,value);    sqlPrepareStatementStrategy.populateStatement(ps,i,expected);    ps.addBatch();  }} @TO@ ThenBody:{  final String sqlForDefaultPreparedStamentStrategy=sql.replace(":",":?");  final String preparedQuery=sqlPrepareStatementStrategy.prepareQuery(sqlForDefaultPreparedStamentStrategy,getEndpoint().isAllowNamedParameters(),exchange);  Object body=exchange.getIn().getBody();  final Iterator<?> iterator=body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    final Object value=iterator.next();    final Iterator<?> i=sqlPrepareStatementStrategy.createPopulateIterator(sqlForDefaultPreparedStamentStrategy,preparedQuery,expected,exchange,value);    sqlPrepareStatementStrategy.populateStatement(ps,i,expected);    ps.addBatch();  }} @AT@ 4706 @LENGTH@ 953
---UPD VariableDeclarationStatement@@final Iterator<?> iterator=exchange.getIn().getBody(Iterator.class); @TO@ final Iterator<?> iterator=body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class); @AT@ 5048 @LENGTH@ 70
------UPD VariableDeclarationFragment@@iterator=exchange.getIn().getBody(Iterator.class) @TO@ iterator=body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class) @AT@ 5066 @LENGTH@ 51
---------INS ConditionalExpression@@body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class) @TO@ VariableDeclarationFragment@@iterator=exchange.getIn().getBody(Iterator.class) @AT@ 5319 @LENGTH@ 135
------------MOV MethodInvocation@@exchange.getIn().getBody(Iterator.class) @TO@ ConditionalExpression@@body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class) @AT@ 5077 @LENGTH@ 40
------------INS InstanceofExpression@@body instanceof Map @TO@ ConditionalExpression@@body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class) @AT@ 5319 @LENGTH@ 19
---------------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Map @AT@ 5319 @LENGTH@ 4
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Map @AT@ 5324 @LENGTH@ 10
---------------INS SimpleType@@Map @TO@ InstanceofExpression@@body instanceof Map @AT@ 5335 @LENGTH@ 3
------------INS MethodInvocation@@Collections.singleton(body).iterator() @TO@ ConditionalExpression@@body instanceof Map ? Collections.singleton(body).iterator() : exchange.getIn().getBody(Iterator.class) @AT@ 5373 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:singleton:[body] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 5373 @LENGTH@ 27
------------------INS SimpleName@@body @TO@ MethodInvocation@@MethodName:singleton:[body] @AT@ 5395 @LENGTH@ 4
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 5373 @LENGTH@ 11
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 5401 @LENGTH@ 10
---INS VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @TO@ Block@@ThenBody:{  final String sqlForDefaultPreparedStamentStrategy=sql.replace(":",":?");  final String preparedQuery=sqlPrepareStatementStrategy.prepareQuery(sqlForDefaultPreparedStamentStrategy,getEndpoint().isAllowNamedParameters(),exchange);  final Iterator<?> iterator=exchange.getIn().getBody(Iterator.class);  while (iterator != null && iterator.hasNext()) {    final Object value=iterator.next();    final Iterator<?> i=sqlPrepareStatementStrategy.createPopulateIterator(sqlForDefaultPreparedStamentStrategy,preparedQuery,expected,exchange,value);    sqlPrepareStatementStrategy.populateStatement(ps,i,expected);    ps.addBatch();  }} @AT@ 5224 @LENGTH@ 41
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @AT@ 5224 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=exchange.getIn().getBody() @TO@ VariableDeclarationStatement@@Object body=exchange.getIn().getBody(); @AT@ 5231 @LENGTH@ 33
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getIn().getBody() @AT@ 5231 @LENGTH@ 4
---------INS MethodInvocation@@exchange.getIn().getBody() @TO@ VariableDeclarationFragment@@body=exchange.getIn().getBody() @AT@ 5238 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5238 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5238 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5255 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:setProducerCustomizer, ProducerCustomizer producerCustomizer,  @TO@ public, synchronized, void, MethodName:setProducerCustomizer, ProducerCustomizer producerCustomizer,  @AT@ 4066 @LENGTH@ 202
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:setProducerCustomizer, ProducerCustomizer producerCustomizer,  @AT@ 4086 @LENGTH@ 12


UPD IfStatement@@if (getFileExist() == GenericFileExist.Append && ((getTempPrefix() != null) || (getTempFileName() != null))) {  throw new IllegalArgumentException("You cannot set both fileExist=Append and tempPrefix/tempFileName options");} @TO@ if (getFileExist() == GenericFileExist.Append && (getTempPrefix() != null || getTempFileName() != null)) {  throw new IllegalArgumentException("You cannot set both fileExist=Append and tempPrefix/tempFileName options");} @AT@ 7611 @LENGTH@ 244
---UPD InfixExpression@@getFileExist() == GenericFileExist.Append && ((getTempPrefix() != null) || (getTempFileName() != null)) @TO@ getFileExist() == GenericFileExist.Append && (getTempPrefix() != null || getTempFileName() != null) @AT@ 7615 @LENGTH@ 103
------UPD ParenthesizedExpression@@((getTempPrefix() != null) || (getTempFileName() != null)) @TO@ (getTempPrefix() != null || getTempFileName() != null) @AT@ 7660 @LENGTH@ 58
---------UPD InfixExpression@@(getTempPrefix() != null) || (getTempFileName() != null) @TO@ getTempPrefix() != null || getTempFileName() != null @AT@ 7661 @LENGTH@ 56
------------DEL ParenthesizedExpression@@(getTempPrefix() != null) @AT@ 7661 @LENGTH@ 25
---------------DEL InfixExpression@@getTempPrefix() != null @AT@ 7662 @LENGTH@ 23
------------INS InfixExpression@@getTempPrefix() != null @TO@ InfixExpression@@(getTempPrefix() != null) || (getTempFileName() != null) @AT@ 7661 @LENGTH@ 23
---------------MOV MethodInvocation@@MethodName:getTempPrefix:[] @TO@ InfixExpression@@getTempPrefix() != null @AT@ 7662 @LENGTH@ 15
---------------MOV Operator@@!= @TO@ InfixExpression@@getTempPrefix() != null @AT@ 7677 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@getTempPrefix() != null @AT@ 7681 @LENGTH@ 4
------------INS InfixExpression@@getTempFileName() != null @TO@ InfixExpression@@(getTempPrefix() != null) || (getTempFileName() != null) @AT@ 7688 @LENGTH@ 25
---------------MOV MethodInvocation@@MethodName:getTempFileName:[] @TO@ InfixExpression@@getTempFileName() != null @AT@ 7691 @LENGTH@ 17
---------------MOV Operator@@!= @TO@ InfixExpression@@getTempFileName() != null @AT@ 7708 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@getTempFileName() != null @AT@ 7712 @LENGTH@ 4
------------DEL ParenthesizedExpression@@(getTempFileName() != null) @AT@ 7690 @LENGTH@ 27
---------------DEL InfixExpression@@getTempFileName() != null @AT@ 7691 @LENGTH@ 25


UPD IfStatement@@if (newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan))) {  LOG.trace("Read lock acquired.");  exclusive=true;} else {  lastModified=newLastModified;  length=newLength;  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @TO@ if (newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan) {  LOG.trace("Read lock acquired.");  exclusive=true;} else {  lastModified=newLastModified;  length=newLength;  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @AT@ 3788 @LENGTH@ 698
---UPD InfixExpression@@newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @TO@ newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan @AT@ 3792 @LENGTH@ 170
------INS InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length @TO@ InfixExpression@@newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3792 @LENGTH@ 95
---------INS InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3792 @LENGTH@ 72
------------INS InfixExpression@@newLength >= minLength && minAge == 0 @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified @AT@ 3792 @LENGTH@ 37
---------------MOV InfixExpression@@newLength >= minLength @TO@ InfixExpression@@newLength >= minLength && minAge == 0 @AT@ 3792 @LENGTH@ 22
---------------MOV Operator@@&& @TO@ InfixExpression@@newLength >= minLength && minAge == 0 @AT@ 3814 @LENGTH@ 2
---------------MOV InfixExpression@@minAge == 0 @TO@ InfixExpression@@newLength >= minLength && minAge == 0 @AT@ 3820 @LENGTH@ 11
------------MOV Operator@@&& @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified @AT@ 3831 @LENGTH@ 2
------------MOV InfixExpression@@newLastModified == lastModified @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified @AT@ 3835 @LENGTH@ 31
---------MOV Operator@@&& @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3866 @LENGTH@ 2
---------MOV InfixExpression@@newLength == length @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3870 @LENGTH@ 19
------DEL ParenthesizedExpression@@((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3818 @LENGTH@ 144
---------DEL InfixExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan) @AT@ 3819 @LENGTH@ 142
------------DEL ParenthesizedExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) @AT@ 3819 @LENGTH@ 71
---------------DEL InfixExpression@@minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3820 @LENGTH@ 69
------------------DEL InfixExpression@@minAge == 0 && newLastModified == lastModified @AT@ 3820 @LENGTH@ 46
------------DEL ParenthesizedExpression@@(minAge != 0 && newLastModified < newOlderThan) @AT@ 3914 @LENGTH@ 47
------MOV Operator@@|| @TO@ InfixExpression@@newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3890 @LENGTH@ 2
------MOV InfixExpression@@minAge != 0 && newLastModified < newOlderThan @TO@ InfixExpression@@newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3915 @LENGTH@ 45


UPD ReturnStatement@@MethodInvocation:Cypher.unwind(parameter(Constants.NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.withProperties(nameOfIdProperty,Cypher.property(row,Constants.NAME_OF_ID))).mutate(rootNode,Cypher.property(row,Constants.NAME_OF_PROPERTIES_PARAM)).returning(Functions.collect(rootNode.property(nameOfIdProperty)).as(Constants.NAME_OF_IDS)).build() @TO@ MethodInvocation:Cypher.unwind(parameter(Constants.NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.withProperties(nameOfIdProperty,Cypher.property(row,Constants.NAME_OF_ID))).mutate(rootNode,Cypher.property(row,Constants.NAME_OF_PROPERTIES_PARAM)).returning(rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID),rootNode.property(nameOfIdProperty).as(Constants.NAME_OF_ID)).build() @AT@ 16213 @LENGTH@ 360
---UPD MethodInvocation@@Cypher.unwind(parameter(Constants.NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.withProperties(nameOfIdProperty,Cypher.property(row,Constants.NAME_OF_ID))).mutate(rootNode,Cypher.property(row,Constants.NAME_OF_PROPERTIES_PARAM)).returning(Functions.collect(rootNode.property(nameOfIdProperty)).as(Constants.NAME_OF_IDS)).build() @TO@ Cypher.unwind(parameter(Constants.NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.withProperties(nameOfIdProperty,Cypher.property(row,Constants.NAME_OF_ID))).mutate(rootNode,Cypher.property(row,Constants.NAME_OF_PROPERTIES_PARAM)).returning(rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID),rootNode.property(nameOfIdProperty).as(Constants.NAME_OF_ID)).build() @AT@ 16220 @LENGTH@ 352
------UPD MethodInvocation@@MethodName:returning:[Functions.collect(rootNode.property(nameOfIdProperty)).as(Constants.NAME_OF_IDS)] @TO@ MethodName:returning:[rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID), rootNode.property(nameOfIdProperty).as(Constants.NAME_OF_ID)] @AT@ 16220 @LENGTH@ 344
---------UPD MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(Constants.NAME_OF_IDS) @TO@ rootNode.property(nameOfIdProperty).as(Constants.NAME_OF_ID) @AT@ 16483 @LENGTH@ 80
------------UPD MethodInvocation@@MethodName:collect:[rootNode.property(nameOfIdProperty)] @TO@ MethodName:property:[nameOfIdProperty] @AT@ 16483 @LENGTH@ 54
---------------DEL MethodInvocation@@rootNode.property(nameOfIdProperty) @AT@ 16501 @LENGTH@ 35
------------------DEL SimpleName@@Name:rootNode @AT@ 16501 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:property:[nameOfIdProperty] @AT@ 16510 @LENGTH@ 26
---------------------DEL SimpleName@@nameOfIdProperty @AT@ 16519 @LENGTH@ 16
---------------INS SimpleName@@nameOfIdProperty @TO@ MethodInvocation@@MethodName:collect:[rootNode.property(nameOfIdProperty)] @AT@ 16558 @LENGTH@ 16
------------UPD SimpleName@@Name:Functions @TO@ Name:rootNode @AT@ 16483 @LENGTH@ 9
------------UPD SimpleName@@MethodName:as:[Constants.NAME_OF_IDS] @TO@ MethodName:as:[Constants.NAME_OF_ID] @AT@ 16538 @LENGTH@ 25
---------------UPD QualifiedName@@Constants.NAME_OF_IDS @TO@ Constants.NAME_OF_ID @AT@ 16541 @LENGTH@ 21
------------------UPD SimpleName@@NAME_OF_IDS @TO@ NAME_OF_ID @AT@ 16551 @LENGTH@ 11
---------INS MethodInvocation@@rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID) @TO@ MethodInvocation@@MethodName:returning:[Functions.collect(rootNode.property(nameOfIdProperty)).as(Constants.NAME_OF_IDS)] @AT@ 16483 @LENGTH@ 55
------------INS MethodInvocation@@MethodName:internalId:[] @TO@ MethodInvocation@@rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID) @AT@ 16483 @LENGTH@ 21
------------INS SimpleName@@Name:rootNode @TO@ MethodInvocation@@rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID) @AT@ 16483 @LENGTH@ 8
------------INS SimpleName@@MethodName:as:[Constants.NAME_OF_INTERNAL_ID] @TO@ MethodInvocation@@rootNode.internalId().as(Constants.NAME_OF_INTERNAL_ID) @AT@ 16505 @LENGTH@ 33
---------------INS QualifiedName@@Constants.NAME_OF_INTERNAL_ID @TO@ SimpleName@@MethodName:as:[Constants.NAME_OF_INTERNAL_ID] @AT@ 16508 @LENGTH@ 29
------------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.NAME_OF_INTERNAL_ID @AT@ 16508 @LENGTH@ 9
------------------INS SimpleName@@NAME_OF_INTERNAL_ID @TO@ QualifiedName@@Constants.NAME_OF_INTERNAL_ID @AT@ 16518 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:exchange.getMessage().setHeaders(dataLakeOperationResponse.getHeaders()) @TO@ MethodInvocation:exchange.getMessage().getHeaders().putAll(dataLakeOperationResponse.getHeaders()) @AT@ 5595 @LENGTH@ 73
---UPD MethodInvocation@@exchange.getMessage().setHeaders(dataLakeOperationResponse.getHeaders()) @TO@ exchange.getMessage().getHeaders().putAll(dataLakeOperationResponse.getHeaders()) @AT@ 5595 @LENGTH@ 72
------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getMessage().setHeaders(dataLakeOperationResponse.getHeaders()) @AT@ 5595 @LENGTH@ 34
------UPD SimpleName@@MethodName:setHeaders:[dataLakeOperationResponse.getHeaders()] @TO@ MethodName:putAll:[dataLakeOperationResponse.getHeaders()] @AT@ 5617 @LENGTH@ 50


UPD TypeDeclaration@@[@Ignore, @RunWith(SpringRunner.class), public]LdifReaderBuilderTests,  @TO@ [@RunWith(SpringRunner.class), public]LdifReaderBuilderTests,  @AT@ 1589 @LENGTH@ 4886
---DEL MarkerAnnotation@@@Ignore @AT@ 1589 @LENGTH@ 7


UPD VariableDeclarationStatement@@String prefix=Kamelet.PROPERTIES_PREFIX; @TO@ StringBuffer prefixBuffer=new StringBuffer(Kamelet.PROPERTIES_PREFIX); @AT@ 4317 @LENGTH@ 42
---UPD SimpleType@@String @TO@ StringBuffer @AT@ 4317 @LENGTH@ 6
---UPD VariableDeclarationFragment@@prefix=Kamelet.PROPERTIES_PREFIX @TO@ prefixBuffer=new StringBuffer(Kamelet.PROPERTIES_PREFIX) @AT@ 4324 @LENGTH@ 34
------UPD SimpleName@@prefix @TO@ prefixBuffer @AT@ 4324 @LENGTH@ 6
------DEL QualifiedName@@Kamelet.PROPERTIES_PREFIX @AT@ 4333 @LENGTH@ 25
------INS ClassInstanceCreation@@StringBuffer[Kamelet.PROPERTIES_PREFIX] @TO@ VariableDeclarationFragment@@prefix=Kamelet.PROPERTIES_PREFIX @AT@ 4345 @LENGTH@ 43
---------INS New@@new @TO@ ClassInstanceCreation@@StringBuffer[Kamelet.PROPERTIES_PREFIX] @AT@ 4345 @LENGTH@ 3
---------INS SimpleType@@StringBuffer @TO@ ClassInstanceCreation@@StringBuffer[Kamelet.PROPERTIES_PREFIX] @AT@ 4349 @LENGTH@ 12
---------INS QualifiedName@@Kamelet.PROPERTIES_PREFIX @TO@ ClassInstanceCreation@@StringBuffer[Kamelet.PROPERTIES_PREFIX] @AT@ 4362 @LENGTH@ 25
------------MOV SimpleName@@Kamelet @TO@ QualifiedName@@Kamelet.PROPERTIES_PREFIX @AT@ 4333 @LENGTH@ 7
------------MOV SimpleName@@PROPERTIES_PREFIX @TO@ QualifiedName@@Kamelet.PROPERTIES_PREFIX @AT@ 4341 @LENGTH@ 17


UPD SwitchStatement@@switch (timelineType) {case HOME:  handler=new HomeConsumerHandler(this);break;case MENTIONS:handler=new MentionsConsumerHandler(this);break;case RETWEETSOFME:handler=new RetweetsConsumerHandler(this);break;case LIST:TwitterTimelineComponent component=(TwitterTimelineComponent)getComponent();handler=new UserListConsumerHandler(this,user,list);break;case USER:if (user == null || user.trim().isEmpty()) {throw new IllegalArgumentException("Fetch type set to USER TIMELINE but no user was set.");} else {handler=new UserConsumerHandler(this,user);break;}default :break;} @TO@ switch (timelineType) {case HOME:  handler=new HomeConsumerHandler(this);break;case MENTIONS:handler=new MentionsConsumerHandler(this);break;case RETWEETSOFME:handler=new RetweetsConsumerHandler(this);break;case LIST:handler=new UserListConsumerHandler(this,user,list);break;case USER:if (user == null || user.trim().isEmpty()) {throw new IllegalArgumentException("Fetch type set to USER TIMELINE but no user was set.");} else {handler=new UserConsumerHandler(this,user);break;}default :break;} @AT@ 3652 @LENGTH@ 954
---DEL VariableDeclarationStatement@@TwitterTimelineComponent component=(TwitterTimelineComponent)getComponent(); @AT@ 4044 @LENGTH@ 79
------DEL SimpleType@@TwitterTimelineComponent @AT@ 4044 @LENGTH@ 24
------DEL VariableDeclarationFragment@@component=(TwitterTimelineComponent)getComponent() @AT@ 4069 @LENGTH@ 53
---------DEL SimpleName@@component @AT@ 4069 @LENGTH@ 9
---------DEL CastExpression@@(TwitterTimelineComponent)getComponent() @AT@ 4081 @LENGTH@ 41
------------DEL SimpleType@@TwitterTimelineComponent @AT@ 4082 @LENGTH@ 24
------------DEL MethodInvocation@@MethodName:getComponent:[] @AT@ 4108 @LENGTH@ 14


UPD IfStatement@@if (property.isAssociation()) {  return writeCollectionInternal(collection.stream().map(it -> {    if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {      return conversionService.convert(it,DocumentPointer.class).getPointer();    } else {      return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();    }  }).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @TO@ if (property.isAssociation()) {  List<Object> targetCollection=collection.stream().map(it -> {    return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();  }).collect(Collectors.toList());  return writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @AT@ 31630 @LENGTH@ 568
---UPD Block@@ThenBody:{  return writeCollectionInternal(collection.stream().map(it -> {    if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {      return conversionService.convert(it,DocumentPointer.class).getPointer();    } else {      return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();    }  }).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @TO@ ThenBody:{  List<Object> targetCollection=collection.stream().map(it -> {    return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();  }).collect(Collectors.toList());  return writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @AT@ 31660 @LENGTH@ 538
------DEL ReturnStatement@@MethodInvocation:writeCollectionInternal(collection.stream().map(it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @AT@ 31666 @LENGTH@ 527
---------DEL MethodInvocation@@writeCollectionInternal(collection.stream().map(it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @AT@ 31673 @LENGTH@ 519
------------DEL SimpleName@@MethodName:writeCollectionInternal:[collection.stream().map(it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
).collect(Collectors.toList()), ClassTypeInformation.from(DocumentPointer.class), new ArrayList<>()] @AT@ 31673 @LENGTH@ 519
---------------DEL MethodInvocation@@collection.stream().map(it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
).collect(Collectors.toList()) @AT@ 31697 @LENGTH@ 425
------INS VariableDeclarationStatement@@List<Object> targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()); @TO@ Block@@ThenBody:{  return writeCollectionInternal(collection.stream().map(it -> {    if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {      return conversionService.convert(it,DocumentPointer.class).getPointer();    } else {      return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();    }  }).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @AT@ 31667 @LENGTH@ 221
---------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()); @AT@ 31667 @LENGTH@ 12
------------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 31667 @LENGTH@ 4
------------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 31672 @LENGTH@ 6
---------INS VariableDeclarationFragment@@targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @TO@ VariableDeclarationStatement@@List<Object> targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()); @AT@ 31680 @LENGTH@ 207
------------INS SimpleName@@targetCollection @TO@ VariableDeclarationFragment@@targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 31680 @LENGTH@ 16
------------INS MethodInvocation@@collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @TO@ VariableDeclarationFragment@@targetCollection=collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 31699 @LENGTH@ 188
---------------MOV MethodInvocation@@MethodName:map:[it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
] @TO@ MethodInvocation@@collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 31697 @LENGTH@ 396
------------------UPD LambdaExpression@@it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
 @TO@ it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
 @AT@ 31721 @LENGTH@ 371
---------------------DEL IfStatement@@if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {  return conversionService.convert(it,DocumentPointer.class).getPointer();} else {  return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();} @AT@ 31734 @LENGTH@ 352
------------------------DEL MethodInvocation@@conversionService.canConvert(it.getClass(),DocumentPointer.class) @AT@ 31738 @LENGTH@ 66
---------------------------DEL SimpleName@@Name:conversionService @AT@ 31738 @LENGTH@ 17
---------------------------DEL SimpleName@@MethodName:canConvert:[it.getClass(), DocumentPointer.class] @AT@ 31756 @LENGTH@ 48
------------------------------DEL MethodInvocation@@it.getClass() @AT@ 31767 @LENGTH@ 13
---------------------------------DEL SimpleName@@Name:it @AT@ 31767 @LENGTH@ 2
---------------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 31770 @LENGTH@ 10
------------------------------DEL TypeLiteral@@DocumentPointer.class @AT@ 31782 @LENGTH@ 21
------------------------DEL Block@@ThenBody:{  return conversionService.convert(it,DocumentPointer.class).getPointer();} @AT@ 31806 @LENGTH@ 88
---------------------------DEL ReturnStatement@@MethodInvocation:conversionService.convert(it,DocumentPointer.class).getPointer() @AT@ 31814 @LENGTH@ 73
------------------------------DEL MethodInvocation@@conversionService.convert(it,DocumentPointer.class).getPointer() @AT@ 31821 @LENGTH@ 65
---------------------------------DEL MethodInvocation@@MethodName:convert:[it, DocumentPointer.class] @AT@ 31821 @LENGTH@ 52
------------------------------------DEL SimpleName@@it @AT@ 31847 @LENGTH@ 2
------------------------------------DEL TypeLiteral@@DocumentPointer.class @AT@ 31851 @LENGTH@ 21
---------------------------------DEL SimpleName@@Name:conversionService @AT@ 31821 @LENGTH@ 17
---------------------------------DEL SimpleName@@MethodName:getPointer:[] @AT@ 31874 @LENGTH@ 12
------------------------DEL Block@@ElseBody:{  return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();} @AT@ 31900 @LENGTH@ 186
---------------------------DEL ReturnStatement@@MethodInvocation:mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier() @AT@ 31949 @LENGTH@ 130
---------------------INS ReturnStatement@@MethodInvocation:documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer() @TO@ LambdaExpression@@it -> {
  if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {
    return conversionService.convert(it,DocumentPointer.class).getPointer();
  }
 else {
    return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();
  }
}
 @AT@ 31737 @LENGTH@ 114
------------------------MOV MethodInvocation@@mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier() @TO@ ReturnStatement@@MethodInvocation:documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer() @AT@ 31956 @LENGTH@ 122
---------------MOV MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 31697 @LENGTH@ 19
---------------MOV SimpleName@@Name:collection @TO@ MethodInvocation@@collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 31697 @LENGTH@ 10
---------------MOV SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@collection.stream().map(it -> {
  return documentPointerFactory.computePointer(mappingContext,property,it,property.getActualType()).getPointer();
}
).collect(Collectors.toList()) @AT@ 32094 @LENGTH@ 28
------INS ReturnStatement@@MethodInvocation:writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @TO@ Block@@ThenBody:{  return writeCollectionInternal(collection.stream().map(it -> {    if (conversionService.canConvert(it.getClass(),DocumentPointer.class)) {      return conversionService.convert(it,DocumentPointer.class).getPointer();    } else {      return mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(it).getIdentifier();    }  }).collect(Collectors.toList()),ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>());} @AT@ 31894 @LENGTH@ 118
---------INS MethodInvocation@@writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @TO@ ReturnStatement@@MethodInvocation:writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @AT@ 31901 @LENGTH@ 110
------------INS SimpleName@@MethodName:writeCollectionInternal:[targetCollection, ClassTypeInformation.from(DocumentPointer.class), new ArrayList<>()] @TO@ MethodInvocation@@writeCollectionInternal(targetCollection,ClassTypeInformation.from(DocumentPointer.class),new ArrayList<>()) @AT@ 31901 @LENGTH@ 110
---------------INS SimpleName@@targetCollection @TO@ SimpleName@@MethodName:writeCollectionInternal:[targetCollection, ClassTypeInformation.from(DocumentPointer.class), new ArrayList<>()] @AT@ 31925 @LENGTH@ 16
---------------MOV MethodInvocation@@ClassTypeInformation.from(DocumentPointer.class) @TO@ SimpleName@@MethodName:writeCollectionInternal:[targetCollection, ClassTypeInformation.from(DocumentPointer.class), new ArrayList<>()] @AT@ 32124 @LENGTH@ 48
---------------MOV ClassInstanceCreation@@ArrayList<>[] @TO@ SimpleName@@MethodName:writeCollectionInternal:[targetCollection, ClassTypeInformation.from(DocumentPointer.class), new ArrayList<>()] @AT@ 32174 @LENGTH@ 17


UPD VariableDeclarationStatement@@String pathString=new String(configuration.getPath()); @TO@ String pathString=configuration.getPath(); @AT@ 4457 @LENGTH@ 56
---UPD VariableDeclarationFragment@@pathString=new String(configuration.getPath()) @TO@ pathString=configuration.getPath() @AT@ 4464 @LENGTH@ 48
------DEL ClassInstanceCreation@@String[configuration.getPath()] @AT@ 4477 @LENGTH@ 35
---------DEL New@@new @AT@ 4477 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 4481 @LENGTH@ 6
---------DEL MethodInvocation@@configuration.getPath() @AT@ 4488 @LENGTH@ 23
------INS MethodInvocation@@configuration.getPath() @TO@ VariableDeclarationFragment@@pathString=new String(configuration.getPath()) @AT@ 4477 @LENGTH@ 23
---------MOV SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getPath() @AT@ 4488 @LENGTH@ 13
---------MOV SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@configuration.getPath() @AT@ 4502 @LENGTH@ 9


INS MethodDeclaration@@boolean, MethodName:canContinue,  @TO@ TypeDeclaration@@[public]Budget,  @AT@ 1441 @LENGTH@ 14
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:canContinue,  @AT@ 1433 @LENGTH@ 7
---INS SimpleName@@MethodName:canContinue @TO@ MethodDeclaration@@boolean, MethodName:canContinue,  @AT@ 1441 @LENGTH@ 11


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri, Exception,  @AT@ 5531 @LENGTH@ 658
---DEL PrimitiveType@@void @AT@ 5526 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri @AT@ 5531 @LENGTH@ 53
---DEL SimpleType@@Exception @AT@ 5594 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining="dummy"; @AT@ 5614 @LENGTH@ 33
------DEL Modifier@@final @AT@ 5614 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5620 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="dummy" @AT@ 5627 @LENGTH@ 19
---------DEL SimpleName@@remaining @AT@ 5627 @LENGTH@ 9
---------DEL StringLiteral@@"dummy" @AT@ 5639 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final String uri="debezium:dummy"; @AT@ 5656 @LENGTH@ 36
------DEL Modifier@@final @AT@ 5656 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5662 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:dummy" @AT@ 5669 @LENGTH@ 22
---------DEL SimpleName@@uri @AT@ 5669 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:dummy" @AT@ 5675 @LENGTH@ 16
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5701 @LENGTH@ 482
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext()) @AT@ 5706 @LENGTH@ 101
---------DEL Modifier@@final @AT@ 5706 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5712 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext()) @AT@ 5730 @LENGTH@ 77
------------DEL SimpleName@@debeziumComponent @AT@ 5730 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumSqlserverComponent[new DefaultCamelContext()] @AT@ 5750 @LENGTH@ 57
---------------DEL New@@new @AT@ 5750 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumSqlserverComponent @AT@ 5754 @LENGTH@ 26
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5781 @LENGTH@ 25
------------------DEL New@@new @AT@ 5781 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5785 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5823 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5823 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5823 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5841 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5897 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5897 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5897 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5915 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5932 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5952 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5952 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5958 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5958 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5962 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5970 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5978 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5978 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5991 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5991 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 6003 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6027 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6027 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 6027 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 6040 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 6072 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6096 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6096 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 6096 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 6114 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 6129 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 6134 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 6145 @LENGTH@ 10


UPD TryStatement@@try {  CamelJmsTemplate template=(CamelJmsTemplate)getInOnlyTemplate();  if (LOG.isDebugEnabled()) {    LOG.debug("Testing JMS Connection on startup for destination: {}",template.getDefaultDestinationName());  }  Connection conn=template.getConnectionFactory().createConnection();  JmsUtils.closeConnection(conn);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",template.getDefaultDestinationName());} catch (Exception e) {  throw new FailedToCreateProducerException(getEndpoint(),e);} @TO@ try {  CamelJmsTemplate template=(CamelJmsTemplate)getInOnlyTemplate();  if (LOG.isDebugEnabled()) {    LOG.debug("Testing JMS Connection on startup for destination: {}",template.getDefaultDestinationName());  }  ConnectionFactory connectionfactory=template.getConnectionFactory();  if (connectionfactory != null) {    Connection conn=connectionfactory.createConnection();    JmsUtils.closeConnection(conn);  } else {    LOG.error("connection factory is null");    throw new IllegalStateException("connection factory is null");  }  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",template.getDefaultDestinationName());} catch (Exception e) {  throw new FailedToCreateProducerException(getEndpoint(),e);} @AT@ 23346 @LENGTH@ 655
---DEL VariableDeclarationStatement@@Connection conn=template.getConnectionFactory().createConnection(); @AT@ 23622 @LENGTH@ 69
---INS VariableDeclarationStatement@@ConnectionFactory connectionfactory=template.getConnectionFactory(); @TO@ TryStatement@@try {  CamelJmsTemplate template=(CamelJmsTemplate)getInOnlyTemplate();  if (LOG.isDebugEnabled()) {    LOG.debug("Testing JMS Connection on startup for destination: {}",template.getDefaultDestinationName());  }  Connection conn=template.getConnectionFactory().createConnection();  JmsUtils.closeConnection(conn);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",template.getDefaultDestinationName());} catch (Exception e) {  throw new FailedToCreateProducerException(getEndpoint(),e);} @AT@ 23658 @LENGTH@ 70
------INS SimpleType@@ConnectionFactory @TO@ VariableDeclarationStatement@@ConnectionFactory connectionfactory=template.getConnectionFactory(); @AT@ 23658 @LENGTH@ 17
------INS VariableDeclarationFragment@@connectionfactory=template.getConnectionFactory() @TO@ VariableDeclarationStatement@@ConnectionFactory connectionfactory=template.getConnectionFactory(); @AT@ 23676 @LENGTH@ 51
---------INS SimpleName@@connectionfactory @TO@ VariableDeclarationFragment@@connectionfactory=template.getConnectionFactory() @AT@ 23676 @LENGTH@ 17
---------INS MethodInvocation@@template.getConnectionFactory() @TO@ VariableDeclarationFragment@@connectionfactory=template.getConnectionFactory() @AT@ 23696 @LENGTH@ 31
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.getConnectionFactory() @AT@ 23696 @LENGTH@ 8
------------INS SimpleName@@MethodName:getConnectionFactory:[] @TO@ MethodInvocation@@template.getConnectionFactory() @AT@ 23705 @LENGTH@ 22
---INS IfStatement@@if (connectionfactory != null) {  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @TO@ TryStatement@@try {  CamelJmsTemplate template=(CamelJmsTemplate)getInOnlyTemplate();  if (LOG.isDebugEnabled()) {    LOG.debug("Testing JMS Connection on startup for destination: {}",template.getDefaultDestinationName());  }  Connection conn=template.getConnectionFactory().createConnection();  JmsUtils.closeConnection(conn);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",template.getDefaultDestinationName());} catch (Exception e) {  throw new FailedToCreateProducerException(getEndpoint(),e);} @AT@ 23741 @LENGTH@ 323
------INS InfixExpression@@connectionfactory != null @TO@ IfStatement@@if (connectionfactory != null) {  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 23745 @LENGTH@ 25
---------INS SimpleName@@connectionfactory @TO@ InfixExpression@@connectionfactory != null @AT@ 23745 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@connectionfactory != null @AT@ 23762 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@connectionfactory != null @AT@ 23766 @LENGTH@ 4
------INS Block@@ThenBody:{  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} @TO@ IfStatement@@if (connectionfactory != null) {  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 23772 @LENGTH@ 135
---------MOV ExpressionStatement@@MethodInvocation:JmsUtils.closeConnection(conn) @TO@ Block@@ThenBody:{  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} @AT@ 23704 @LENGTH@ 31
---------INS VariableDeclarationStatement@@Connection conn=connectionfactory.createConnection(); @TO@ Block@@ThenBody:{  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} @AT@ 23790 @LENGTH@ 55
------------MOV SimpleType@@Connection @TO@ VariableDeclarationStatement@@Connection conn=connectionfactory.createConnection(); @AT@ 23622 @LENGTH@ 10
------------MOV VariableDeclarationFragment@@conn=template.getConnectionFactory().createConnection() @TO@ VariableDeclarationStatement@@Connection conn=connectionfactory.createConnection(); @AT@ 23633 @LENGTH@ 57
---------------UPD MethodInvocation@@template.getConnectionFactory().createConnection() @TO@ connectionfactory.createConnection() @AT@ 23640 @LENGTH@ 50
------------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 23640 @LENGTH@ 31
------------------UPD SimpleName@@Name:template @TO@ Name:connectionfactory @AT@ 23640 @LENGTH@ 8
------INS Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @TO@ IfStatement@@if (connectionfactory != null) {  Connection conn=connectionfactory.createConnection();  JmsUtils.closeConnection(conn);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 23913 @LENGTH@ 151
---------INS ExpressionStatement@@MethodInvocation:LOG.error("connection factory is null") @TO@ Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 23931 @LENGTH@ 40
------------INS MethodInvocation@@LOG.error("connection factory is null") @TO@ ExpressionStatement@@MethodInvocation:LOG.error("connection factory is null") @AT@ 23931 @LENGTH@ 39
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("connection factory is null") @AT@ 23931 @LENGTH@ 3
---------------INS SimpleName@@MethodName:error:["connection factory is null"] @TO@ MethodInvocation@@LOG.error("connection factory is null") @AT@ 23935 @LENGTH@ 35
------------------INS StringLiteral@@"connection factory is null" @TO@ SimpleName@@MethodName:error:["connection factory is null"] @AT@ 23941 @LENGTH@ 28
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("connection factory is null") @TO@ Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 23988 @LENGTH@ 62
------------INS ClassInstanceCreation@@IllegalStateException["connection factory is null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("connection factory is null") @AT@ 23994 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 23994 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 23998 @LENGTH@ 21
---------------INS StringLiteral@@"connection factory is null" @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 24020 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:exchange.getMessage().setHeaders(blobOperationResponse.getHeaders()) @TO@ MethodInvocation:exchange.getMessage().getHeaders().putAll(blobOperationResponse.getHeaders()) @AT@ 6554 @LENGTH@ 69
---UPD MethodInvocation@@exchange.getMessage().setHeaders(blobOperationResponse.getHeaders()) @TO@ exchange.getMessage().getHeaders().putAll(blobOperationResponse.getHeaders()) @AT@ 6554 @LENGTH@ 68
------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getMessage().setHeaders(blobOperationResponse.getHeaders()) @AT@ 6554 @LENGTH@ 34
------UPD SimpleName@@MethodName:setHeaders:[blobOperationResponse.getHeaders()] @TO@ MethodName:putAll:[blobOperationResponse.getHeaders()] @AT@ 6576 @LENGTH@ 46


UPD IfStatement@@if ((properties != null) && properties.containsKey(ROLLBACK_LOGGING_LEVEL_PROPERTY)) {  rollbackLoggingLevel=LoggingLevel.valueOf(properties.get(ROLLBACK_LOGGING_LEVEL_PROPERTY));} @TO@ if (properties != null && properties.containsKey(ROLLBACK_LOGGING_LEVEL_PROPERTY)) {  rollbackLoggingLevel=LoggingLevel.valueOf(properties.get(ROLLBACK_LOGGING_LEVEL_PROPERTY));} @AT@ 4850 @LENGTH@ 202
---UPD InfixExpression@@(properties != null) && properties.containsKey(ROLLBACK_LOGGING_LEVEL_PROPERTY) @TO@ properties != null && properties.containsKey(ROLLBACK_LOGGING_LEVEL_PROPERTY) @AT@ 4854 @LENGTH@ 79
------DEL ParenthesizedExpression@@(properties != null) @AT@ 4854 @LENGTH@ 20
---------DEL InfixExpression@@properties != null @AT@ 4855 @LENGTH@ 18
------INS InfixExpression@@properties != null @TO@ InfixExpression@@(properties != null) && properties.containsKey(ROLLBACK_LOGGING_LEVEL_PROPERTY) @AT@ 4854 @LENGTH@ 18
---------MOV SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 4855 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 4865 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 4869 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1658 @LENGTH@ 64
---UPD MethodInvocation@@from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1658 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true&delay=3000"] @TO@ MethodName:from:["file:src/test/data?noop=true&delay=3000"] @AT@ 1658 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/main/data?noop=true&delay=3000" @TO@ "file:src/test/data?noop=true&delay=3000" @AT@ 1663 @LENGTH@ 41


MOV TypeDeclaration@@[static]VerifierPartial,  @TO@ TypeDeclaration@@[final]OpenSamlVerificationUtils,  @AT@ 3152 @LENGTH@ 6115


INS MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @TO@ TypeDeclaration@@[abstract]Neo4jQuerySupport,  @AT@ 4828 @LENGTH@ 539
---INS Modifier@@static @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4828 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4835 @LENGTH@ 4
---INS SimpleName@@MethodName:logParameterIfNull @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4840 @LENGTH@ 18
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4859 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 4859 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 4866 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4872 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 4872 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 4879 @LENGTH@ 5
---INS IfStatement@@if (value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled()) {  return;} @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4891 @LENGTH@ 77
------INS InfixExpression@@value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled() @TO@ IfStatement@@if (value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled()) {  return;} @AT@ 4895 @LENGTH@ 55
---------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4895 @LENGTH@ 13
------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 4895 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 4900 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 4904 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4908 @LENGTH@ 2
---------INS PrefixExpression@@!REPOSITORY_QUERY_LOG.isDebugEnabled() @TO@ InfixExpression@@value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4912 @LENGTH@ 38
------------INS Operator@@! @TO@ PrefixExpression@@!REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4912 @LENGTH@ 1
------------INS MethodInvocation@@REPOSITORY_QUERY_LOG.isDebugEnabled() @TO@ PrefixExpression@@!REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4913 @LENGTH@ 37
---------------INS SimpleName@@Name:REPOSITORY_QUERY_LOG @TO@ MethodInvocation@@REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4913 @LENGTH@ 20
---------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@REPOSITORY_QUERY_LOG.isDebugEnabled() @AT@ 4934 @LENGTH@ 16
------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (value != null || !REPOSITORY_QUERY_LOG.isDebugEnabled()) {  return;} @AT@ 4952 @LENGTH@ 16
---------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 4957 @LENGTH@ 7
---INS VariableDeclarationStatement@@Supplier<CharSequence> messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
; @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 4972 @LENGTH@ 345
------INS ParameterizedType@@Supplier<CharSequence> @TO@ VariableDeclarationStatement@@Supplier<CharSequence> messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
; @AT@ 4972 @LENGTH@ 22
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<CharSequence> @AT@ 4972 @LENGTH@ 8
---------INS SimpleType@@CharSequence @TO@ ParameterizedType@@Supplier<CharSequence> @AT@ 4981 @LENGTH@ 12
------INS VariableDeclarationFragment@@messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @TO@ VariableDeclarationStatement@@Supplier<CharSequence> messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
; @AT@ 4995 @LENGTH@ 321
---------INS SimpleName@@messageSupplier @TO@ VariableDeclarationFragment@@messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @AT@ 4995 @LENGTH@ 15
---------INS LambdaExpression@@() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @TO@ VariableDeclarationFragment@@messageSupplier=() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @AT@ 5013 @LENGTH@ 303
------------INS VariableDeclarationStatement@@String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name; @TO@ LambdaExpression@@() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @AT@ 5024 @LENGTH@ 93
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name; @AT@ 5024 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @TO@ VariableDeclarationStatement@@String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name; @AT@ 5031 @LENGTH@ 85
------------------INS SimpleName@@pointer @TO@ VariableDeclarationFragment@@pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @AT@ 5031 @LENGTH@ 7
------------------INS ConditionalExpression@@name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @TO@ VariableDeclarationFragment@@pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @AT@ 5041 @LENGTH@ 75
---------------------INS InfixExpression@@name == null || name.trim().isEmpty() @TO@ ConditionalExpression@@name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @AT@ 5041 @LENGTH@ 37
------------------------INS InfixExpression@@name == null @TO@ InfixExpression@@name == null || name.trim().isEmpty() @AT@ 5041 @LENGTH@ 12
---------------------------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 5041 @LENGTH@ 4
---------------------------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 5045 @LENGTH@ 2
---------------------------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 5049 @LENGTH@ 4
------------------------INS Operator@@|| @TO@ InfixExpression@@name == null || name.trim().isEmpty() @AT@ 5053 @LENGTH@ 2
------------------------INS MethodInvocation@@name.trim().isEmpty() @TO@ InfixExpression@@name == null || name.trim().isEmpty() @AT@ 5057 @LENGTH@ 21
---------------------------INS MethodInvocation@@MethodName:trim:[] @TO@ MethodInvocation@@name.trim().isEmpty() @AT@ 5057 @LENGTH@ 11
---------------------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.trim().isEmpty() @AT@ 5057 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@name.trim().isEmpty() @AT@ 5069 @LENGTH@ 9
---------------------INS StringLiteral@@"An unknown parameter" @TO@ ConditionalExpression@@name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @AT@ 5081 @LENGTH@ 22
---------------------INS InfixExpression@@"$" + name @TO@ ConditionalExpression@@name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name @AT@ 5106 @LENGTH@ 10
------------------------INS StringLiteral@@"$" @TO@ InfixExpression@@"$" + name @AT@ 5106 @LENGTH@ 3
------------------------INS Operator@@+ @TO@ InfixExpression@@"$" + name @AT@ 5109 @LENGTH@ 1
------------------------INS SimpleName@@name @TO@ InfixExpression@@"$" + name @AT@ 5112 @LENGTH@ 4
------------INS ReturnStatement@@MethodInvocation:String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer) @TO@ LambdaExpression@@() -> {
  String pointer=name == null || name.trim().isEmpty() ? "An unknown parameter" : "$" + name;
  return String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer);
}
 @AT@ 5121 @LENGTH@ 191
---------------INS MethodInvocation@@String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer) @TO@ ReturnStatement@@MethodInvocation:String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer) @AT@ 5128 @LENGTH@ 183
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer) @AT@ 5128 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.", pointer] @TO@ MethodInvocation@@String.format("%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.",pointer) @AT@ 5135 @LENGTH@ 176
---------------------INS InfixExpression@@"%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result." @TO@ SimpleName@@MethodName:format:["%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.", pointer] @AT@ 5142 @LENGTH@ 154
------------------------INS StringLiteral@@"%s points to a literal `null` value during a comparison. " @TO@ InfixExpression@@"%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result." @AT@ 5142 @LENGTH@ 59
------------------------INS Operator@@+ @TO@ InfixExpression@@"%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result." @AT@ 5201 @LENGTH@ 1
------------------------INS StringLiteral@@"The comparisons will always resolve to false and probably lead to an empty result." @TO@ InfixExpression@@"%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result." @AT@ 5212 @LENGTH@ 84
---------------------INS SimpleName@@pointer @TO@ SimpleName@@MethodName:format:["%s points to a literal `null` value during a comparison. " + "The comparisons will always resolve to false and probably lead to an empty result.", pointer] @AT@ 5303 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:REPOSITORY_QUERY_LOG.debug(messageSupplier) @TO@ MethodDeclaration@@static, void, MethodName:logParameterIfNull, String name, Object value,  @AT@ 5320 @LENGTH@ 44
------INS MethodInvocation@@REPOSITORY_QUERY_LOG.debug(messageSupplier) @TO@ ExpressionStatement@@MethodInvocation:REPOSITORY_QUERY_LOG.debug(messageSupplier) @AT@ 5320 @LENGTH@ 43
---------INS SimpleName@@Name:REPOSITORY_QUERY_LOG @TO@ MethodInvocation@@REPOSITORY_QUERY_LOG.debug(messageSupplier) @AT@ 5320 @LENGTH@ 20
---------INS SimpleName@@MethodName:debug:[messageSupplier] @TO@ MethodInvocation@@REPOSITORY_QUERY_LOG.debug(messageSupplier) @AT@ 5341 @LENGTH@ 22
------------INS SimpleName@@messageSupplier @TO@ SimpleName@@MethodName:debug:[messageSupplier] @AT@ 5347 @LENGTH@ 15


UPD ReturnStatement@@ClassInstanceCreation:new SimpleTestServiceBuilder<>("consul") @TO@ ClassInstanceCreation:new SimpleTestServiceBuilder<>("couchbase") @AT@ 1113 @LENGTH@ 48
---UPD ClassInstanceCreation@@SimpleTestServiceBuilder<>["consul"] @TO@ SimpleTestServiceBuilder<>["couchbase"] @AT@ 1120 @LENGTH@ 40
------UPD StringLiteral@@"consul" @TO@ "couchbase" @AT@ 1151 @LENGTH@ 8


UPD EnhancedForStatement@@for (String element : elements) {  if (element == null) {    continue;  }  prefix=prefix + element + ".";  Properties prefixed=pc.loadProperties(Kamelet.startsWith(prefix));  for (  String name : prefixed.stringPropertyNames()) {    properties.put(name.substring(prefix.length()),prefixed.getProperty(name));  }} @TO@ for (String element : elements) {  if (element == null) {    continue;  }  prefixBuffer.append(element + ".");  Properties prefixed=pc.loadProperties(Kamelet.startsWith(prefixBuffer.toString()));  for (  String name : prefixed.stringPropertyNames()) {    properties.put(name.substring(prefixBuffer.toString().length()),prefixed.getProperty(name));  }} @AT@ 4369 @LENGTH@ 418
---UPD ExpressionStatement@@Assignment:prefix=prefix + element + "." @TO@ MethodInvocation:prefixBuffer.append(element + ".") @AT@ 4491 @LENGTH@ 32
------DEL Assignment@@prefix=prefix + element + "." @AT@ 4491 @LENGTH@ 31
---------DEL SimpleName@@prefix @AT@ 4491 @LENGTH@ 6
---------DEL Operator@@= @AT@ 4497 @LENGTH@ 1
---------DEL InfixExpression@@prefix + element + "." @AT@ 4500 @LENGTH@ 22
------------DEL SimpleName@@element @AT@ 4509 @LENGTH@ 7
------INS MethodInvocation@@prefixBuffer.append(element + ".") @TO@ ExpressionStatement@@Assignment:prefix=prefix + element + "." @AT@ 4520 @LENGTH@ 34
---------INS SimpleName@@Name:prefixBuffer @TO@ MethodInvocation@@prefixBuffer.append(element + ".") @AT@ 4520 @LENGTH@ 12
---------INS SimpleName@@MethodName:append:[element + "."] @TO@ MethodInvocation@@prefixBuffer.append(element + ".") @AT@ 4533 @LENGTH@ 21
------------INS InfixExpression@@element + "." @TO@ SimpleName@@MethodName:append:[element + "."] @AT@ 4540 @LENGTH@ 13
---------------MOV SimpleName@@prefix @TO@ InfixExpression@@element + "." @AT@ 4500 @LENGTH@ 6
---------------MOV Operator@@+ @TO@ InfixExpression@@element + "." @AT@ 4506 @LENGTH@ 1
---------------MOV StringLiteral@@"." @TO@ InfixExpression@@element + "." @AT@ 4519 @LENGTH@ 3
---UPD VariableDeclarationStatement@@Properties prefixed=pc.loadProperties(Kamelet.startsWith(prefix)); @TO@ Properties prefixed=pc.loadProperties(Kamelet.startsWith(prefixBuffer.toString())); @AT@ 4537 @LENGTH@ 68
------UPD VariableDeclarationFragment@@prefixed=pc.loadProperties(Kamelet.startsWith(prefix)) @TO@ prefixed=pc.loadProperties(Kamelet.startsWith(prefixBuffer.toString())) @AT@ 4548 @LENGTH@ 56
---------UPD MethodInvocation@@pc.loadProperties(Kamelet.startsWith(prefix)) @TO@ pc.loadProperties(Kamelet.startsWith(prefixBuffer.toString())) @AT@ 4559 @LENGTH@ 45
------------UPD SimpleName@@MethodName:loadProperties:[Kamelet.startsWith(prefix)] @TO@ MethodName:loadProperties:[Kamelet.startsWith(prefixBuffer.toString())] @AT@ 4562 @LENGTH@ 42
---------------UPD MethodInvocation@@Kamelet.startsWith(prefix) @TO@ Kamelet.startsWith(prefixBuffer.toString()) @AT@ 4577 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:startsWith:[prefix] @TO@ MethodName:startsWith:[prefixBuffer.toString()] @AT@ 4585 @LENGTH@ 18
---------------------DEL SimpleName@@prefix @AT@ 4596 @LENGTH@ 6
---------------------INS MethodInvocation@@prefixBuffer.toString() @TO@ SimpleName@@MethodName:startsWith:[prefix] @AT@ 4628 @LENGTH@ 23
------------------------INS SimpleName@@Name:prefixBuffer @TO@ MethodInvocation@@prefixBuffer.toString() @AT@ 4628 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@prefixBuffer.toString() @AT@ 4641 @LENGTH@ 10
---UPD EnhancedForStatement@@for (String name : prefixed.stringPropertyNames()) {  properties.put(name.substring(prefix.length()),prefixed.getProperty(name));} @TO@ for (String name : prefixed.stringPropertyNames()) {  properties.put(name.substring(prefixBuffer.toString().length()),prefixed.getProperty(name));} @AT@ 4618 @LENGTH@ 159
------UPD ExpressionStatement@@MethodInvocation:properties.put(name.substring(prefix.length()),prefixed.getProperty(name)) @TO@ MethodInvocation:properties.put(name.substring(prefixBuffer.toString().length()),prefixed.getProperty(name)) @AT@ 4687 @LENGTH@ 76
---------UPD MethodInvocation@@properties.put(name.substring(prefix.length()),prefixed.getProperty(name)) @TO@ properties.put(name.substring(prefixBuffer.toString().length()),prefixed.getProperty(name)) @AT@ 4687 @LENGTH@ 75
------------UPD SimpleName@@MethodName:put:[name.substring(prefix.length()), prefixed.getProperty(name)] @TO@ MethodName:put:[name.substring(prefixBuffer.toString().length()), prefixed.getProperty(name)] @AT@ 4698 @LENGTH@ 64
---------------UPD MethodInvocation@@name.substring(prefix.length()) @TO@ name.substring(prefixBuffer.toString().length()) @AT@ 4702 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:substring:[prefix.length()] @TO@ MethodName:substring:[prefixBuffer.toString().length()] @AT@ 4707 @LENGTH@ 26
---------------------UPD MethodInvocation@@prefix.length() @TO@ prefixBuffer.toString().length() @AT@ 4717 @LENGTH@ 15
------------------------UPD SimpleName@@Name:prefix @TO@ Name:prefixBuffer @AT@ 4717 @LENGTH@ 6
------------------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@prefix.length() @AT@ 4766 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived(values) @TO@ MethodInvocation:mock.expectedBodiesReceivedInAnyOrder(values) @AT@ 3367 @LENGTH@ 36
---UPD MethodInvocation@@mock.expectedBodiesReceived(values) @TO@ mock.expectedBodiesReceivedInAnyOrder(values) @AT@ 3367 @LENGTH@ 35
------UPD SimpleName@@MethodName:expectedBodiesReceived:[values] @TO@ MethodName:expectedBodiesReceivedInAnyOrder:[values] @AT@ 3372 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:Archive, final InputStream inputStream, final JarOutputStream outputStream, IOException,  @TO@ public, voidMethodName:Archive, final InputStream inputStream, final JarOutputStream outputStream,  @AT@ 2974 @LENGTH@ 190
---DEL SimpleType@@IOException @AT@ 3063 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Objects.equals(this.path,path),path) @TO@ MethodInvocation:toFileVisitResult(Objects.equals(this.path,path)) @AT@ 1912 @LENGTH@ 64
---UPD MethodInvocation@@toFileVisitResult(Objects.equals(this.path,path),path) @TO@ toFileVisitResult(Objects.equals(this.path,path)) @AT@ 1919 @LENGTH@ 56
------UPD SimpleName@@MethodName:toFileVisitResult:[Objects.equals(this.path,path), path] @TO@ MethodName:toFileVisitResult:[Objects.equals(this.path,path)] @AT@ 1919 @LENGTH@ 56
---------DEL SimpleName@@path @AT@ 1970 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(message,causeList == null ? null : causeList.get(0));
 @TO@ super(message,causeList == null || causeList.isEmpty() ? null : causeList.get(0));
 @AT@ 2027 @LENGTH@ 60
---UPD ConditionalExpression@@causeList == null ? null : causeList.get(0) @TO@ causeList == null || causeList.isEmpty() ? null : causeList.get(0) @AT@ 2042 @LENGTH@ 43
------INS InfixExpression@@causeList == null || causeList.isEmpty() @TO@ ConditionalExpression@@causeList == null ? null : causeList.get(0) @AT@ 2042 @LENGTH@ 40
---------INS InfixExpression@@causeList == null @TO@ InfixExpression@@causeList == null || causeList.isEmpty() @AT@ 2042 @LENGTH@ 17
------------MOV SimpleName@@causeList @TO@ InfixExpression@@causeList == null @AT@ 2042 @LENGTH@ 9
------------MOV Operator@@== @TO@ InfixExpression@@causeList == null @AT@ 2051 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@causeList == null @AT@ 2055 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@causeList == null || causeList.isEmpty() @AT@ 2059 @LENGTH@ 2
---------INS MethodInvocation@@causeList.isEmpty() @TO@ InfixExpression@@causeList == null || causeList.isEmpty() @AT@ 2063 @LENGTH@ 19
------------INS SimpleName@@Name:causeList @TO@ MethodInvocation@@causeList.isEmpty() @AT@ 2063 @LENGTH@ 9
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@causeList.isEmpty() @AT@ 2073 @LENGTH@ 9
------DEL InfixExpression@@causeList == null @AT@ 2042 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:bouncyCastleAesCbcWithPredictableIvEquvalent, Exception,  @TO@ public, void, MethodName:bouncyCastleAesCbcWithPredictableIvEquivalent, Exception,  @AT@ 1684 @LENGTH@ 434
---UPD SimpleName@@MethodName:bouncyCastleAesCbcWithPredictableIvEquvalent @TO@ MethodName:bouncyCastleAesCbcWithPredictableIvEquivalent @AT@ 1696 @LENGTH@ 44


INS MethodDeclaration@@public, int, MethodName:countConnections,  @TO@ TypeDeclaration@@[public]FtpEmbeddedService, AbstractTestService[FtpService] @AT@ 6819 @LENGTH@ 326
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 6819 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 6826 @LENGTH@ 3
---INS SimpleName@@MethodName:countConnections @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 6830 @LENGTH@ 16
---INS VariableDeclarationStatement@@int count=0; @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 6859 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int count=0; @AT@ 6859 @LENGTH@ 3
------INS VariableDeclarationFragment@@count=0 @TO@ VariableDeclarationStatement@@int count=0; @AT@ 6863 @LENGTH@ 9
---------INS SimpleName@@count @TO@ VariableDeclarationFragment@@count=0 @AT@ 6863 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@count=0 @AT@ 6871 @LENGTH@ 1
---INS VariableDeclarationStatement@@Map<String,Listener> listeners=((DefaultFtpServer)ftpServer).getListeners(); @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 6913 @LENGTH@ 80
------INS ParameterizedType@@Map<String,Listener> @TO@ VariableDeclarationStatement@@Map<String,Listener> listeners=((DefaultFtpServer)ftpServer).getListeners(); @AT@ 6913 @LENGTH@ 21
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Listener> @AT@ 6913 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Listener> @AT@ 6917 @LENGTH@ 6
---------INS SimpleType@@Listener @TO@ ParameterizedType@@Map<String,Listener> @AT@ 6925 @LENGTH@ 8
------INS VariableDeclarationFragment@@listeners=((DefaultFtpServer)ftpServer).getListeners() @TO@ VariableDeclarationStatement@@Map<String,Listener> listeners=((DefaultFtpServer)ftpServer).getListeners(); @AT@ 6935 @LENGTH@ 57
---------INS SimpleName@@listeners @TO@ VariableDeclarationFragment@@listeners=((DefaultFtpServer)ftpServer).getListeners() @AT@ 6935 @LENGTH@ 9
---------INS MethodInvocation@@((DefaultFtpServer)ftpServer).getListeners() @TO@ VariableDeclarationFragment@@listeners=((DefaultFtpServer)ftpServer).getListeners() @AT@ 6947 @LENGTH@ 45
------------INS ParenthesizedExpression@@((DefaultFtpServer)ftpServer) @TO@ MethodInvocation@@((DefaultFtpServer)ftpServer).getListeners() @AT@ 6947 @LENGTH@ 30
---------------INS CastExpression@@(DefaultFtpServer)ftpServer @TO@ ParenthesizedExpression@@((DefaultFtpServer)ftpServer) @AT@ 6948 @LENGTH@ 28
------------------INS SimpleType@@DefaultFtpServer @TO@ CastExpression@@(DefaultFtpServer)ftpServer @AT@ 6949 @LENGTH@ 16
------------------INS SimpleName@@ftpServer @TO@ CastExpression@@(DefaultFtpServer)ftpServer @AT@ 6967 @LENGTH@ 9
------------INS SimpleName@@MethodName:getListeners:[] @TO@ MethodInvocation@@((DefaultFtpServer)ftpServer).getListeners() @AT@ 6978 @LENGTH@ 14
---INS EnhancedForStatement@@for (Listener listener : listeners.values()) {  count+=listener.getActiveSessions().size();} @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 7002 @LENGTH@ 114
------INS SingleVariableDeclaration@@Listener listener @TO@ EnhancedForStatement@@for (Listener listener : listeners.values()) {  count+=listener.getActiveSessions().size();} @AT@ 7007 @LENGTH@ 17
---------INS SimpleType@@Listener @TO@ SingleVariableDeclaration@@Listener listener @AT@ 7007 @LENGTH@ 8
---------INS SimpleName@@listener @TO@ SingleVariableDeclaration@@Listener listener @AT@ 7016 @LENGTH@ 8
------INS MethodInvocation@@listeners.values() @TO@ EnhancedForStatement@@for (Listener listener : listeners.values()) {  count+=listener.getActiveSessions().size();} @AT@ 7027 @LENGTH@ 18
---------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.values() @AT@ 7027 @LENGTH@ 9
---------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@listeners.values() @AT@ 7037 @LENGTH@ 8
------INS ExpressionStatement@@Assignment:count+=listener.getActiveSessions().size() @TO@ EnhancedForStatement@@for (Listener listener : listeners.values()) {  count+=listener.getActiveSessions().size();} @AT@ 7061 @LENGTH@ 45
---------INS Assignment@@count+=listener.getActiveSessions().size() @TO@ ExpressionStatement@@Assignment:count+=listener.getActiveSessions().size() @AT@ 7061 @LENGTH@ 44
------------INS SimpleName@@count @TO@ Assignment@@count+=listener.getActiveSessions().size() @AT@ 7061 @LENGTH@ 5
------------INS Operator@@+= @TO@ Assignment@@count+=listener.getActiveSessions().size() @AT@ 7066 @LENGTH@ 2
------------INS MethodInvocation@@listener.getActiveSessions().size() @TO@ Assignment@@count+=listener.getActiveSessions().size() @AT@ 7070 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getActiveSessions:[] @TO@ MethodInvocation@@listener.getActiveSessions().size() @AT@ 7070 @LENGTH@ 28
---------------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.getActiveSessions().size() @AT@ 7070 @LENGTH@ 8
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@listener.getActiveSessions().size() @AT@ 7099 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:count @TO@ MethodDeclaration@@public, int, MethodName:countConnections,  @AT@ 7126 @LENGTH@ 13
------INS SimpleName@@count @TO@ ReturnStatement@@SimpleName:count @AT@ 7133 @LENGTH@ 5


UPD TypeDeclaration@@[@Ignore, @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/applicationContext-test2.xml"}), public]MappingLdifReaderTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/applicationContext-test2.xml"}), public]MappingLdifReaderTests,  @AT@ 1699 @LENGTH@ 2431
---DEL MarkerAnnotation@@@Ignore @AT@ 1699 @LENGTH@ 7


INS FieldDeclaration@@String, [SKIP_PACKAGE="wildfly.package.skip"] @TO@ TypeDeclaration@@[public]PropertyNames,  @AT@ 2893 @LENGTH@ 45
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [SKIP_PACKAGE="wildfly.package.skip"] @AT@ 2893 @LENGTH@ 6
---INS VariableDeclarationFragment@@SKIP_PACKAGE="wildfly.package.skip" @TO@ FieldDeclaration@@String, [SKIP_PACKAGE="wildfly.package.skip"] @AT@ 2900 @LENGTH@ 37
------INS SimpleName@@SKIP_PACKAGE @TO@ VariableDeclarationFragment@@SKIP_PACKAGE="wildfly.package.skip" @AT@ 2900 @LENGTH@ 12
------INS StringLiteral@@"wildfly.package.skip" @TO@ VariableDeclarationFragment@@SKIP_PACKAGE="wildfly.package.skip" @AT@ 2915 @LENGTH@ 22


DEL FieldDeclaration@@private, CallableStatementWrapperFactory, [callableStatementWrapperFactory] @AT@ 1241 @LENGTH@ 72
---DEL Modifier@@private @AT@ 1241 @LENGTH@ 7
---DEL SimpleType@@CallableStatementWrapperFactory @AT@ 1249 @LENGTH@ 31
---DEL VariableDeclarationFragment@@callableStatementWrapperFactory @AT@ 1281 @LENGTH@ 31
------DEL SimpleName@@callableStatementWrapperFactory @AT@ 1281 @LENGTH@ 31


MOV TypeDeclaration@@[static]QueryParametersPartial,  @TO@ TypeDeclaration@@[final]OpenSamlSigningUtils,  @AT@ 6478 @LENGTH@ 1415


UPD TypeDeclaration@@[@EnabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true"), public]KafkaConsumerIdempotentWithProcessorIT, KafkaConsumerIdempotentTestSupport @TO@ [public]KafkaConsumerIdempotentWithProcessorIT, KafkaConsumerIdempotentTestSupport @AT@ 1484 @LENGTH@ 2246
---DEL NormalAnnotation@@@EnabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true") @AT@ 1484 @LENGTH@ 93


UPD TypeDeclaration@@[private, final]UndertowClientResponseFuture, AbstractIoFuture<ClientExchange>[ClientCallback<ClientExchange>] @TO@ [private, static, final]UndertowClientResponseFuture, AbstractIoFuture<ClientExchange>[ClientCallback<ClientExchange>] @AT@ 10180 @LENGTH@ 710
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]UndertowClientResponseFuture, AbstractIoFuture<ClientExchange>[ClientCallback<ClientExchange>] @AT@ 10188 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:clazz.isAssignableFrom(MethodInvocation.class) @TO@ MethodInvocation:MethodInvocation.class.isAssignableFrom(clazz) @AT@ 2602 @LENGTH@ 54
---UPD MethodInvocation@@clazz.isAssignableFrom(MethodInvocation.class) @TO@ MethodInvocation.class.isAssignableFrom(clazz) @AT@ 2609 @LENGTH@ 46
------DEL SimpleName@@Name:clazz @AT@ 2609 @LENGTH@ 5
------DEL SimpleName@@MethodName:isAssignableFrom:[MethodInvocation.class] @AT@ 2615 @LENGTH@ 40
---------DEL TypeLiteral@@MethodInvocation.class @AT@ 2632 @LENGTH@ 22
------INS TypeLiteral@@MethodInvocation.class @TO@ MethodInvocation@@clazz.isAssignableFrom(MethodInvocation.class) @AT@ 2636 @LENGTH@ 22
------INS SimpleName@@MethodName:isAssignableFrom:[clazz] @TO@ MethodInvocation@@clazz.isAssignableFrom(MethodInvocation.class) @AT@ 2659 @LENGTH@ 23
---------INS SimpleName@@clazz @TO@ SimpleName@@MethodName:isAssignableFrom:[clazz] @AT@ 2676 @LENGTH@ 5


UPD IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }} else {  HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name);} @TO@ if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }  final AsyncFuture<OperationResponse> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} else {  HOST_CONTROLLER_LOGGER.tracef("Discard sending %s (transformed to null) for %s",operation,name);  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 5513 @LENGTH@ 932
---UPD Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }} @TO@ ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }  final AsyncFuture<OperationResponse> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} @AT@ 5546 @LENGTH@ 764
------MOV VariableDeclarationStatement@@final AsyncFuture<OperationResponse> result=client.execute(subsystemListener,proxyOperation); @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }} @AT@ 6463 @LENGTH@ 96
------MOV ReturnStatement@@ClassInstanceCreation:new ExecutedHostRequest(result,transformationResult) @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (!operation.equals(transformedOperation)) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to %s) to %s",operation,transformedOperation,name);  } else {    HOST_CONTROLLER_LOGGER.tracef("Sending %s (untransformed) to %s",transformedOperation,name);  }} @AT@ 6576 @LENGTH@ 61
---UPD Block@@ElseBody:{  HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name);} @TO@ ElseBody:{  HOST_CONTROLLER_LOGGER.tracef("Discard sending %s (transformed to null) for %s",operation,name);  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 6316 @LENGTH@ 129
------UPD ExpressionStatement@@MethodInvocation:HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name) @TO@ MethodInvocation:HOST_CONTROLLER_LOGGER.tracef("Discard sending %s (transformed to null) for %s",operation,name) @AT@ 6338 @LENGTH@ 89
---------UPD MethodInvocation@@HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name) @TO@ HOST_CONTROLLER_LOGGER.tracef("Discard sending %s (transformed to null) for %s",operation,name) @AT@ 6338 @LENGTH@ 88
------------UPD SimpleName@@MethodName:tracef:["Sending %s (transformed to null) to %s", operation, name] @TO@ MethodName:tracef:["Discard sending %s (transformed to null) for %s", operation, name] @AT@ 6361 @LENGTH@ 65
---------------UPD StringLiteral@@"Sending %s (transformed to null) to %s" @TO@ "Discard sending %s (transformed to null) for %s" @AT@ 6368 @LENGTH@ 40
------INS VariableDeclarationStatement@@final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation); @TO@ Block@@ElseBody:{  HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name);} @AT@ 7219 @LENGTH@ 150
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation); @AT@ 7219 @LENGTH@ 5
---------INS ParameterizedType@@TransactionalProtocolClient.PreparedOperation<ProxyOperation> @TO@ VariableDeclarationStatement@@final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation); @AT@ 7225 @LENGTH@ 61
------------INS SimpleType@@TransactionalProtocolClient.PreparedOperation @TO@ ParameterizedType@@TransactionalProtocolClient.PreparedOperation<ProxyOperation> @AT@ 7225 @LENGTH@ 45
------------INS SimpleType@@ProxyOperation @TO@ ParameterizedType@@TransactionalProtocolClient.PreparedOperation<ProxyOperation> @AT@ 7271 @LENGTH@ 14
---------INS VariableDeclarationFragment@@result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @TO@ VariableDeclarationStatement@@final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation); @AT@ 7287 @LENGTH@ 81
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @AT@ 7287 @LENGTH@ 6
------------INS MethodInvocation@@BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @TO@ VariableDeclarationFragment@@result=BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @AT@ 7296 @LENGTH@ 72
---------------INS QualifiedName@@Name:BlockingQueueOperationListener.SucceededOperation @TO@ MethodInvocation@@BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @AT@ 7296 @LENGTH@ 49
---------------INS SimpleName@@MethodName:create:[proxyOperation] @TO@ MethodInvocation@@BlockingQueueOperationListener.SucceededOperation.create(proxyOperation) @AT@ 7346 @LENGTH@ 22
------------------INS SimpleName@@proxyOperation @TO@ SimpleName@@MethodName:create:[proxyOperation] @AT@ 7353 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:subsystemListener.operationPrepared(result) @TO@ Block@@ElseBody:{  HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name);} @AT@ 7390 @LENGTH@ 44
---------INS MethodInvocation@@subsystemListener.operationPrepared(result) @TO@ ExpressionStatement@@MethodInvocation:subsystemListener.operationPrepared(result) @AT@ 7390 @LENGTH@ 43
------------INS SimpleName@@Name:subsystemListener @TO@ MethodInvocation@@subsystemListener.operationPrepared(result) @AT@ 7390 @LENGTH@ 17
------------INS SimpleName@@MethodName:operationPrepared:[result] @TO@ MethodInvocation@@subsystemListener.operationPrepared(result) @AT@ 7408 @LENGTH@ 25
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:operationPrepared:[result] @AT@ 7426 @LENGTH@ 6
------INS ReturnStatement@@ClassInstanceCreation:new ExecutedHostRequest(result.getFinalResult(),transformationResult) @TO@ Block@@ElseBody:{  HOST_CONTROLLER_LOGGER.tracef("Sending %s (transformed to null) to %s",operation,name);} @AT@ 7455 @LENGTH@ 78
---------INS ClassInstanceCreation@@ExecutedHostRequest[result.getFinalResult(), transformationResult] @TO@ ReturnStatement@@ClassInstanceCreation:new ExecutedHostRequest(result.getFinalResult(),transformationResult) @AT@ 7462 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@ExecutedHostRequest[result.getFinalResult(), transformationResult] @AT@ 7462 @LENGTH@ 3
------------INS SimpleType@@ExecutedHostRequest @TO@ ClassInstanceCreation@@ExecutedHostRequest[result.getFinalResult(), transformationResult] @AT@ 7466 @LENGTH@ 19
------------INS MethodInvocation@@result.getFinalResult() @TO@ ClassInstanceCreation@@ExecutedHostRequest[result.getFinalResult(), transformationResult] @AT@ 7486 @LENGTH@ 23
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getFinalResult() @AT@ 7486 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getFinalResult:[] @TO@ MethodInvocation@@result.getFinalResult() @AT@ 7493 @LENGTH@ 16
------------INS SimpleName@@transformationResult @TO@ ClassInstanceCreation@@ExecutedHostRequest[result.getFinalResult(), transformationResult] @AT@ 7511 @LENGTH@ 20


UPD IfStatement@@if (clientConfigurations.getProxyHost() != null) {  httpConfig=HttpConfig.getDefaultHttpConfig();  httpConfig.withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).setIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.withProxyUsername(clientConfigurations.getProxyUser());    httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());  }} @TO@ if (!StringUtils.isEmpty(clientConfigurations.getProxyHost())) {  httpConfig.setProxyHost(clientConfigurations.getProxyHost());  httpConfig.setProxyPort(clientConfigurations.getProxyPort());  if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 11870 @LENGTH@ 609
---DEL InfixExpression@@clientConfigurations.getProxyHost() != null @AT@ 11874 @LENGTH@ 43
------DEL MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 11874 @LENGTH@ 35
------DEL Operator@@!= @AT@ 11909 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 11913 @LENGTH@ 4
---UPD Block@@ThenBody:{  httpConfig=HttpConfig.getDefaultHttpConfig();  httpConfig.withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).setIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.withProxyUsername(clientConfigurations.getProxyUser());    httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());  }} @TO@ ThenBody:{  httpConfig.setProxyHost(clientConfigurations.getProxyHost());  httpConfig.setProxyPort(clientConfigurations.getProxyPort());  if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {    httpConfig.setProxyUsername(clientConfigurations.getProxyUser());    httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 11919 @LENGTH@ 560
------UPD ExpressionStatement@@Assignment:httpConfig=HttpConfig.getDefaultHttpConfig() @TO@ MethodInvocation:httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 11933 @LENGTH@ 47
---------DEL Assignment@@httpConfig=HttpConfig.getDefaultHttpConfig() @AT@ 11933 @LENGTH@ 46
------------DEL SimpleName@@httpConfig @AT@ 11933 @LENGTH@ 10
------------DEL Operator@@= @AT@ 11943 @LENGTH@ 1
------------DEL MethodInvocation@@HttpConfig.getDefaultHttpConfig() @AT@ 11946 @LENGTH@ 33
---------INS MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @TO@ ExpressionStatement@@Assignment:httpConfig=HttpConfig.getDefaultHttpConfig() @AT@ 12061 @LENGTH@ 60
------------INS SimpleName@@Name:httpConfig @TO@ MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 12061 @LENGTH@ 10
------------INS SimpleName@@MethodName:setProxyHost:[clientConfigurations.getProxyHost()] @TO@ MethodInvocation@@httpConfig.setProxyHost(clientConfigurations.getProxyHost()) @AT@ 12072 @LENGTH@ 49
---------------INS MethodInvocation@@clientConfigurations.getProxyHost() @TO@ SimpleName@@MethodName:setProxyHost:[clientConfigurations.getProxyHost()] @AT@ 12085 @LENGTH@ 35
------------------MOV SimpleName@@Name:HttpConfig @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 11946 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:getDefaultHttpConfig:[] @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 11957 @LENGTH@ 22
------UPD ExpressionStatement@@MethodInvocation:httpConfig.withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).setIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @TO@ MethodInvocation:httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @AT@ 11993 @LENGTH@ 228
---------UPD MethodInvocation@@httpConfig.withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).setIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @TO@ httpConfig.setProxyPort(clientConfigurations.getProxyPort()) @AT@ 11993 @LENGTH@ 227
------------DEL MethodInvocation@@MethodName:withProxyPort:[clientConfigurations.getProxyPort()] @AT@ 11993 @LENGTH@ 133
---------------DEL MethodInvocation@@clientConfigurations.getProxyPort() @AT@ 12090 @LENGTH@ 35
------------------DEL SimpleName@@Name:clientConfigurations @AT@ 12090 @LENGTH@ 20
------------------DEL SimpleName@@MethodName:getProxyPort:[] @AT@ 12111 @LENGTH@ 14
------------DEL MethodInvocation@@MethodName:withProxyHost:[clientConfigurations.getProxyHost()] @AT@ 11993 @LENGTH@ 61
---------------DEL MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 12018 @LENGTH@ 35
------------------DEL SimpleName@@Name:clientConfigurations @AT@ 12018 @LENGTH@ 20
------------------DEL SimpleName@@MethodName:getProxyHost:[] @AT@ 12039 @LENGTH@ 14
------------UPD SimpleName@@MethodName:setIgnoreSSLVerification:[clientConfigurations.isIgnoreSslVerification()] @TO@ MethodName:setProxyPort:[clientConfigurations.getProxyPort()] @AT@ 12148 @LENGTH@ 72
---------------UPD MethodInvocation@@clientConfigurations.isIgnoreSslVerification() @TO@ clientConfigurations.getProxyPort() @AT@ 12173 @LENGTH@ 46
------------------UPD SimpleName@@MethodName:isIgnoreSslVerification:[] @TO@ MethodName:getProxyPort:[] @AT@ 12194 @LENGTH@ 25
------UPD IfStatement@@if (clientConfigurations.getProxyUser() != null) {  httpConfig.withProxyUsername(clientConfigurations.getProxyUser());  httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());} @TO@ if (!StringUtils.isEmpty(clientConfigurations.getProxyUser())) {  httpConfig.setProxyUsername(clientConfigurations.getProxyUser());  httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());} @AT@ 12235 @LENGTH@ 234
---------INS PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @TO@ IfStatement@@if (clientConfigurations.getProxyUser() != null) {  httpConfig.withProxyUsername(clientConfigurations.getProxyUser());  httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());} @AT@ 12213 @LENGTH@ 57
------------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 12213 @LENGTH@ 1
------------INS MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 12214 @LENGTH@ 56
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 12214 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyUser()] @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyUser()) @AT@ 12226 @LENGTH@ 44
------------------INS MethodInvocation@@clientConfigurations.getProxyUser() @TO@ SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyUser()] @AT@ 12234 @LENGTH@ 35
---------------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 12239 @LENGTH@ 20
---------------------MOV SimpleName@@MethodName:getProxyUser:[] @TO@ MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 12260 @LENGTH@ 14
---------DEL InfixExpression@@clientConfigurations.getProxyUser() != null @AT@ 12239 @LENGTH@ 43
------------DEL MethodInvocation@@clientConfigurations.getProxyUser() @AT@ 12239 @LENGTH@ 35
------------DEL Operator@@!= @AT@ 12274 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 12278 @LENGTH@ 4
---------UPD Block@@ThenBody:{  httpConfig.withProxyUsername(clientConfigurations.getProxyUser());  httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());} @TO@ ThenBody:{  httpConfig.setProxyUsername(clientConfigurations.getProxyUser());  httpConfig.setProxyPassword(clientConfigurations.getProxyPassword());} @AT@ 12284 @LENGTH@ 185
------------UPD ExpressionStatement@@MethodInvocation:httpConfig.withProxyUsername(clientConfigurations.getProxyUser()) @TO@ MethodInvocation:httpConfig.setProxyUsername(clientConfigurations.getProxyUser()) @AT@ 12302 @LENGTH@ 66
---------------UPD MethodInvocation@@httpConfig.withProxyUsername(clientConfigurations.getProxyUser()) @TO@ httpConfig.setProxyUsername(clientConfigurations.getProxyUser()) @AT@ 12302 @LENGTH@ 65
------------------UPD SimpleName@@MethodName:withProxyUsername:[clientConfigurations.getProxyUser()] @TO@ MethodName:setProxyUsername:[clientConfigurations.getProxyUser()] @AT@ 12313 @LENGTH@ 54
------------UPD ExpressionStatement@@MethodInvocation:httpConfig.withProxyPassword(clientConfigurations.getProxyPassword()) @TO@ MethodInvocation:httpConfig.setProxyPassword(clientConfigurations.getProxyPassword()) @AT@ 12385 @LENGTH@ 70
---------------UPD MethodInvocation@@httpConfig.withProxyPassword(clientConfigurations.getProxyPassword()) @TO@ httpConfig.setProxyPassword(clientConfigurations.getProxyPassword()) @AT@ 12385 @LENGTH@ 69
------------------UPD SimpleName@@MethodName:withProxyPassword:[clientConfigurations.getProxyPassword()] @TO@ MethodName:setProxyPassword:[clientConfigurations.getProxyPassword()] @AT@ 12396 @LENGTH@ 58
---INS PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @TO@ IfStatement@@if (clientConfigurations.getProxyHost() != null) {  httpConfig=HttpConfig.getDefaultHttpConfig();  httpConfig.withProxyHost(clientConfigurations.getProxyHost()).withProxyPort(clientConfigurations.getProxyPort()).setIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification());  if (clientConfigurations.getProxyUser() != null) {    httpConfig.withProxyUsername(clientConfigurations.getProxyUser());    httpConfig.withProxyPassword(clientConfigurations.getProxyPassword());  }} @AT@ 11988 @LENGTH@ 57
------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 11988 @LENGTH@ 1
------INS MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @TO@ PrefixExpression@@!StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 11989 @LENGTH@ 56
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 11989 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyHost()] @TO@ MethodInvocation@@StringUtils.isEmpty(clientConfigurations.getProxyHost()) @AT@ 12001 @LENGTH@ 44
------------INS MethodInvocation@@clientConfigurations.getProxyHost() @TO@ SimpleName@@MethodName:isEmpty:[clientConfigurations.getProxyHost()] @AT@ 12009 @LENGTH@ 35
---------------MOV SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 11874 @LENGTH@ 20
---------------MOV SimpleName@@MethodName:getProxyHost:[] @TO@ MethodInvocation@@clientConfigurations.getProxyHost() @AT@ 11895 @LENGTH@ 14


INS TryStatement@@try {  this.terminated=true;  bufferCopy=new LinkedList<>(buffer);  this.buffer.clear();}  finally {  mutex.unlock();} @TO@ MethodDeclaration@@public, void, MethodName:cancel,  @AT@ 6272 @LENGTH@ 183
---MOV ExpressionStatement@@Assignment:this.terminated=true @TO@ TryStatement@@try {  this.terminated=true;  bufferCopy=new LinkedList<>(buffer);  this.buffer.clear();}  finally {  mutex.unlock();} @AT@ 6237 @LENGTH@ 23
---INS ExpressionStatement@@Assignment:bufferCopy=new LinkedList<>(buffer) @TO@ TryStatement@@try {  this.terminated=true;  bufferCopy=new LinkedList<>(buffer);  this.buffer.clear();}  finally {  mutex.unlock();} @AT@ 6326 @LENGTH@ 38
------INS Assignment@@bufferCopy=new LinkedList<>(buffer) @TO@ ExpressionStatement@@Assignment:bufferCopy=new LinkedList<>(buffer) @AT@ 6326 @LENGTH@ 37
---------MOV ClassInstanceCreation@@LinkedList<>[buffer] @TO@ Assignment@@bufferCopy=new LinkedList<>(buffer) @AT@ 6297 @LENGTH@ 24
---------INS SimpleName@@bufferCopy @TO@ Assignment@@bufferCopy=new LinkedList<>(buffer) @AT@ 6326 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@bufferCopy=new LinkedList<>(buffer) @AT@ 6336 @LENGTH@ 1
---MOV ExpressionStatement@@MethodInvocation:this.buffer.clear() @TO@ TryStatement@@try {  this.terminated=true;  bufferCopy=new LinkedList<>(buffer);  this.buffer.clear();}  finally {  mutex.unlock();} @AT@ 6331 @LENGTH@ 20
---INS Block@@FinallyBody:{  mutex.unlock();} @TO@ TryStatement@@try {  this.terminated=true;  bufferCopy=new LinkedList<>(buffer);  this.buffer.clear();}  finally {  mutex.unlock();} @AT@ 6416 @LENGTH@ 39
------MOV ExpressionStatement@@MethodInvocation:mutex.unlock() @TO@ Block@@FinallyBody:{  mutex.unlock();} @AT@ 6360 @LENGTH@ 15


DEL ExpressionStatement@@MethodInvocation:ee.setUnitOfWork(null) @AT@ 2544 @LENGTH@ 23
---DEL MethodInvocation@@ee.setUnitOfWork(null) @AT@ 2544 @LENGTH@ 22
------DEL SimpleName@@Name:ee @AT@ 2544 @LENGTH@ 2
------DEL SimpleName@@MethodName:setUnitOfWork:[null] @AT@ 2547 @LENGTH@ 19
---------DEL NullLiteral@@null @AT@ 2561 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setConsumerCustomizer, java.util.function.Consumer<ConsumerBuilder> consumerCustomizer,  @TO@ public, synchronized, void, MethodName:setConsumerCustomizer, java.util.function.Consumer<ConsumerBuilder> consumerCustomizer,  @AT@ 3446 @LENGTH@ 151
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:setConsumerCustomizer, java.util.function.Consumer<ConsumerBuilder> consumerCustomizer,  @AT@ 3453 @LENGTH@ 12


UPD ExpressionStatement@@ClassInstanceCreation:new KafkaConsumer(endpoint,processor) @TO@ MethodInvocation:assertDoesNotThrow(() -> new KafkaConsumer(endpoint,processor)) @AT@ 3208 @LENGTH@ 39
---DEL ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @AT@ 3208 @LENGTH@ 38
---INS MethodInvocation@@assertDoesNotThrow(() -> new KafkaConsumer(endpoint,processor)) @TO@ ExpressionStatement@@ClassInstanceCreation:new KafkaConsumer(endpoint,processor) @AT@ 3276 @LENGTH@ 64
------INS SimpleName@@MethodName:assertDoesNotThrow:[() -> new KafkaConsumer(endpoint,processor)] @TO@ MethodInvocation@@assertDoesNotThrow(() -> new KafkaConsumer(endpoint,processor)) @AT@ 3276 @LENGTH@ 64
---------INS LambdaExpression@@() -> new KafkaConsumer(endpoint,processor) @TO@ SimpleName@@MethodName:assertDoesNotThrow:[() -> new KafkaConsumer(endpoint,processor)] @AT@ 3295 @LENGTH@ 44
------------INS ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @TO@ LambdaExpression@@() -> new KafkaConsumer(endpoint,processor) @AT@ 3301 @LENGTH@ 38
---------------MOV New@@new @TO@ ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @AT@ 3208 @LENGTH@ 3
---------------MOV SimpleType@@KafkaConsumer @TO@ ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @AT@ 3212 @LENGTH@ 13
---------------MOV SimpleName@@endpoint @TO@ ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @AT@ 3226 @LENGTH@ 8
---------------MOV SimpleName@@processor @TO@ ClassInstanceCreation@@KafkaConsumer[endpoint, processor] @AT@ 3236 @LENGTH@ 9


UPD MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @TO@ private, boolean, MethodName:insertOrQueryCheck,  @AT@ 3292 @LENGTH@ 378
---UPD SimpleName@@MethodName:isValidAuthority @TO@ MethodName:insertOrQueryCheck @AT@ 3308 @LENGTH@ 16
---DEL SimpleType@@URISyntaxException @AT@ 3334 @LENGTH@ 18
---UPD IfStatement@@if ((!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")))) {  return false;} @TO@ if (!authority.contains(":") || authority.split(":")[0] == null || insertOrQueryCheck()) {  return false;} @AT@ 3363 @LENGTH@ 279
---UPD ReturnStatement@@BooleanLiteral:true @TO@ InfixExpression:!authority.split(":")[1].equalsIgnoreCase("insert") && !authority.split(":")[1].equalsIgnoreCase("query") @AT@ 3651 @LENGTH@ 12
------MOV InfixExpression@@(!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")) @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3469 @LENGTH@ 133
---------DEL ParenthesizedExpression@@(!authority.split(":")[1].equalsIgnoreCase("insert")) @AT@ 3469 @LENGTH@ 53
---------MOV PrefixExpression@@!authority.split(":")[1].equalsIgnoreCase("insert") @TO@ InfixExpression@@(!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")) @AT@ 3470 @LENGTH@ 51
---------DEL ParenthesizedExpression@@(!authority.split(":")[1].equalsIgnoreCase("query")) @AT@ 3550 @LENGTH@ 52
---------MOV PrefixExpression@@!authority.split(":")[1].equalsIgnoreCase("query") @TO@ InfixExpression@@(!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")) @AT@ 3551 @LENGTH@ 50
------DEL BooleanLiteral@@true @AT@ 3658 @LENGTH@ 4


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurations, Exception,  @AT@ 4874 @LENGTH@ 636
---DEL PrimitiveType@@void @AT@ 4869 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurations @AT@ 4874 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 4925 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining=""; @AT@ 4945 @LENGTH@ 28
------DEL Modifier@@final @AT@ 4945 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4951 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="" @AT@ 4958 @LENGTH@ 14
---------DEL SimpleName@@remaining @AT@ 4958 @LENGTH@ 9
---------DEL StringLiteral@@"" @AT@ 4970 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final String uri="debezium:"; @AT@ 4982 @LENGTH@ 31
------DEL Modifier@@final @AT@ 4982 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4988 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:" @AT@ 4995 @LENGTH@ 17
---------DEL SimpleName@@uri @AT@ 4995 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:" @AT@ 5001 @LENGTH@ 11
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5022 @LENGTH@ 482
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext()) @AT@ 5027 @LENGTH@ 101
---------DEL Modifier@@final @AT@ 5027 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5033 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumSqlserverComponent(new DefaultCamelContext()) @AT@ 5051 @LENGTH@ 77
------------DEL SimpleName@@debeziumComponent @AT@ 5051 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumSqlserverComponent[new DefaultCamelContext()] @AT@ 5071 @LENGTH@ 57
---------------DEL New@@new @AT@ 5071 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumSqlserverComponent @AT@ 5075 @LENGTH@ 26
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5102 @LENGTH@ 25
------------------DEL New@@new @AT@ 5102 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5106 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5144 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5144 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5144 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5162 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5218 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5218 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5218 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5236 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5253 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5273 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5273 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5279 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5279 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5283 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5291 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5299 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5299 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5312 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5312 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5324 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5348 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5348 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 5348 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5361 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 5393 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5417 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5417 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 5417 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 5435 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 5450 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 5455 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 5466 @LENGTH@ 10


INS MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @TO@ TypeDeclaration@@[public, final]JmsMessageHelper,  @AT@ 14001 @LENGTH@ 218
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14001 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14008 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14015 @LENGTH@ 6
---INS SimpleName@@MethodName:getJMSCorrelationID @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14022 @LENGTH@ 19
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14042 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 14042 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 14050 @LENGTH@ 7
---INS TryStatement@@try {  return message.getJMSCorrelationID();} catch (JMSException e) {} @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14069 @LENGTH@ 122
------INS ReturnStatement@@MethodInvocation:message.getJMSCorrelationID() @TO@ TryStatement@@try {  return message.getJMSCorrelationID();} catch (JMSException e) {} @AT@ 14087 @LENGTH@ 37
---------INS MethodInvocation@@message.getJMSCorrelationID() @TO@ ReturnStatement@@MethodInvocation:message.getJMSCorrelationID() @AT@ 14094 @LENGTH@ 29
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getJMSCorrelationID() @AT@ 14094 @LENGTH@ 7
------------INS SimpleName@@MethodName:getJMSCorrelationID:[] @TO@ MethodInvocation@@message.getJMSCorrelationID() @AT@ 14102 @LENGTH@ 21
------INS CatchClause@@catch (JMSException e) {} @TO@ TryStatement@@try {  return message.getJMSCorrelationID();} catch (JMSException e) {} @AT@ 14135 @LENGTH@ 56
---------INS SingleVariableDeclaration@@JMSException e @TO@ CatchClause@@catch (JMSException e) {} @AT@ 14142 @LENGTH@ 14
------------INS SimpleType@@JMSException @TO@ SingleVariableDeclaration@@JMSException e @AT@ 14142 @LENGTH@ 12
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@JMSException e @AT@ 14155 @LENGTH@ 1
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, static, String, MethodName:getJMSCorrelationID, Message message,  @AT@ 14201 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 14208 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testToServletInputStream, Exception,  @TO@ public, void, MethodName:testToServletInputStreamWithStreamCaching, Exception,  @AT@ 2997 @LENGTH@ 1142
---UPD SimpleName@@MethodName:testToServletInputStream @TO@ MethodName:testToServletInputStreamWithStreamCaching @AT@ 3009 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:it.intitalEntitySet(initialEntities) @TO@ MethodInvocation:it.initialEntitySet(initialEntities) @AT@ 1936 @LENGTH@ 37
---UPD MethodInvocation@@it.intitalEntitySet(initialEntities) @TO@ it.initialEntitySet(initialEntities) @AT@ 1936 @LENGTH@ 36
------UPD SimpleName@@MethodName:intitalEntitySet:[initialEntities] @TO@ MethodName:initialEntitySet:[initialEntities] @AT@ 1939 @LENGTH@ 33


UPD IfStatement@@if (serverGroupPlans != null) {  copy=new ArrayList<Set<ServerGroupDeploymentPlan>>(serverGroupPlans.size());  for (  Set<ServerGroupDeploymentPlan> set : serverGroupPlans) {    copy.add(Collections.unmodifiableSet(new LinkedHashSet<ServerGroupDeploymentPlan>(set)));  }} else {  copy=Collections.emptyList();} @TO@ if (serverGroupPlans != null && !serverGroupPlans.isEmpty()) {  copy=new ArrayList<Set<ServerGroupDeploymentPlan>>(serverGroupPlans.size());  for (  Set<ServerGroupDeploymentPlan> set : serverGroupPlans) {    copy.add(Collections.unmodifiableSet(new LinkedHashSet<ServerGroupDeploymentPlan>(set)));  }} else {  copy=Collections.emptyList();} @AT@ 4127 @LENGTH@ 395
---INS InfixExpression@@serverGroupPlans != null && !serverGroupPlans.isEmpty() @TO@ IfStatement@@if (serverGroupPlans != null) {  copy=new ArrayList<Set<ServerGroupDeploymentPlan>>(serverGroupPlans.size());  for (  Set<ServerGroupDeploymentPlan> set : serverGroupPlans) {    copy.add(Collections.unmodifiableSet(new LinkedHashSet<ServerGroupDeploymentPlan>(set)));  }} else {  copy=Collections.emptyList();} @AT@ 4131 @LENGTH@ 55
------INS InfixExpression@@serverGroupPlans != null @TO@ InfixExpression@@serverGroupPlans != null && !serverGroupPlans.isEmpty() @AT@ 4131 @LENGTH@ 24
---------MOV SimpleName@@serverGroupPlans @TO@ InfixExpression@@serverGroupPlans != null @AT@ 4131 @LENGTH@ 16
---------MOV Operator@@!= @TO@ InfixExpression@@serverGroupPlans != null @AT@ 4147 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@serverGroupPlans != null @AT@ 4151 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@serverGroupPlans != null && !serverGroupPlans.isEmpty() @AT@ 4155 @LENGTH@ 2
------INS PrefixExpression@@!serverGroupPlans.isEmpty() @TO@ InfixExpression@@serverGroupPlans != null && !serverGroupPlans.isEmpty() @AT@ 4159 @LENGTH@ 27
---------INS Operator@@! @TO@ PrefixExpression@@!serverGroupPlans.isEmpty() @AT@ 4159 @LENGTH@ 1
---------INS MethodInvocation@@serverGroupPlans.isEmpty() @TO@ PrefixExpression@@!serverGroupPlans.isEmpty() @AT@ 4160 @LENGTH@ 26
------------INS SimpleName@@Name:serverGroupPlans @TO@ MethodInvocation@@serverGroupPlans.isEmpty() @AT@ 4160 @LENGTH@ 16
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@serverGroupPlans.isEmpty() @AT@ 4177 @LENGTH@ 9
---DEL InfixExpression@@serverGroupPlans != null @AT@ 4131 @LENGTH@ 24


UPD MethodDeclaration@@protected, final, BiFunction<TypeSystem,MapAccessor,?>, MethodName:getMappingFunction, final ResultProcessor resultProcessor,  @TO@ protected, final, Supplier<BiFunction<TypeSystem,MapAccessor,?>>, MethodName:getMappingFunction, final ResultProcessor resultProcessor,  @AT@ 4344 @LENGTH@ 957
---INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ MethodDeclaration@@protected, final, BiFunction<TypeSystem,MapAccessor,?>, MethodName:getMappingFunction, final ResultProcessor resultProcessor,  @AT@ 4360 @LENGTH@ 48
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 4360 @LENGTH@ 8
------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 4369 @LENGTH@ 38
---------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4360 @LENGTH@ 10
---------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4371 @LENGTH@ 10
---------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4383 @LENGTH@ 11
---------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4396 @LENGTH@ 1
---DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4360 @LENGTH@ 38
---INS ReturnStatement@@LambdaExpression:() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @TO@ MethodDeclaration@@protected, final, BiFunction<TypeSystem,MapAccessor,?>, MethodName:getMappingFunction, final ResultProcessor resultProcessor,  @AT@ 4472 @LENGTH@ 879
------INS LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @TO@ ReturnStatement@@LambdaExpression:() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4479 @LENGTH@ 871
---------MOV VariableDeclarationStatement@@final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType(); @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4462 @LENGTH@ 76
---------MOV VariableDeclarationStatement@@final Class<?> returnedType=returnedTypeMetadata.getReturnedType(); @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4541 @LENGTH@ 69
---------MOV VariableDeclarationStatement@@final Class<?> domainType=returnedTypeMetadata.getDomainType(); @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4613 @LENGTH@ 65
---------MOV VariableDeclarationStatement@@final BiFunction<TypeSystem,MapAccessor,?> mappingFunction; @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4682 @LENGTH@ 61
---------MOV IfStatement@@if (mappingContext.getConversionService().isSimpleType(returnedType)) {  mappingFunction=null;} else if (returnedTypeMetadata.isProjecting()) {  mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));} else {  mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);} @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 4747 @LENGTH@ 525
---------INS ReturnStatement@@SimpleName:mappingFunction @TO@ LambdaExpression@@() -> {
  final ReturnedType returnedTypeMetadata=resultProcessor.getReturnedType();
  final Class<?> returnedType=returnedTypeMetadata.getReturnedType();
  final Class<?> domainType=returnedTypeMetadata.getDomainType();
  final BiFunction<TypeSystem,MapAccessor,?> mappingFunction;
  if (mappingContext.getConversionService().isSimpleType(returnedType)) {
    mappingFunction=null;
  }
 else   if (returnedTypeMetadata.isProjecting()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(this.mappingContext.getRequiredMappingFunctionFor(domainType));
  }
 else {
    mappingFunction=this.mappingContext.getRequiredMappingFunctionFor(domainType);
  }
  return mappingFunction;
}
 @AT@ 5323 @LENGTH@ 23
------------MOV SimpleName@@mappingFunction @TO@ ReturnStatement@@SimpleName:mappingFunction @AT@ 5282 @LENGTH@ 15
---DEL ReturnStatement@@SimpleName:mappingFunction @AT@ 5275 @LENGTH@ 23


UPD VariableDeclarationStatement@@List<Record> records=session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list()); @TO@ List<Record> records=session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list()); @AT@ 3269 @LENGTH@ 139
---UPD VariableDeclarationFragment@@records=session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list()) @TO@ records=session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list()) @AT@ 3282 @LENGTH@ 125
------UPD MethodInvocation@@session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list()) @TO@ session.readTransaction(tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list()) @AT@ 3292 @LENGTH@ 115
---------UPD SimpleName@@MethodName:readTransaction:[tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list()] @TO@ MethodName:readTransaction:[tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list()] @AT@ 3300 @LENGTH@ 107
------------UPD LambdaExpression@@tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list() @TO@ tx -> tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list() @AT@ 3322 @LENGTH@ 84
---------------UPD MethodInvocation@@tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows").list() @TO@ tx.run("MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC").list() @AT@ 3328 @LENGTH@ 78
------------------UPD MethodInvocation@@MethodName:run:["MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows"] @TO@ MethodName:run:["MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC"] @AT@ 3328 @LENGTH@ 71
---------------------UPD StringLiteral@@"MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows" @TO@ "MATCH (a:Application)-->(w) RETURN a, collect(w) as workflows ORDER by a.id ASC" @AT@ 3335 @LENGTH@ 63


UPD IfStatement@@if (this.encoding != null) {  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);} @TO@ if (this.encoding != null) {  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);  handler.setResult(new StreamResult(new OutputStreamWriter(output,this.encoding)));} else {  LOG.error("encoding is null");  return null;} @AT@ 7007 @LENGTH@ 130
---UPD Block@@ThenBody:{  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);} @TO@ ThenBody:{  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);  handler.setResult(new StreamResult(new OutputStreamWriter(output,this.encoding)));} @AT@ 7034 @LENGTH@ 103
------MOV ExpressionStatement@@MethodInvocation:handler.setResult(new StreamResult(new OutputStreamWriter(output,this.encoding))) @TO@ Block@@ThenBody:{  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);} @AT@ 7146 @LENGTH@ 83
---INS Block@@ElseBody:{  LOG.error("encoding is null");  return null;} @TO@ IfStatement@@if (this.encoding != null) {  handler.getTransformer().setOutputProperty(OutputKeys.ENCODING,this.encoding);} @AT@ 7380 @LENGTH@ 79
------INS ExpressionStatement@@MethodInvocation:LOG.error("encoding is null") @TO@ Block@@ElseBody:{  LOG.error("encoding is null");  return null;} @AT@ 7394 @LENGTH@ 30
---------INS MethodInvocation@@LOG.error("encoding is null") @TO@ ExpressionStatement@@MethodInvocation:LOG.error("encoding is null") @AT@ 7394 @LENGTH@ 29
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("encoding is null") @AT@ 7394 @LENGTH@ 3
------------INS SimpleName@@MethodName:error:["encoding is null"] @TO@ MethodInvocation@@LOG.error("encoding is null") @AT@ 7398 @LENGTH@ 25
---------------INS StringLiteral@@"encoding is null" @TO@ SimpleName@@MethodName:error:["encoding is null"] @AT@ 7404 @LENGTH@ 18
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  LOG.error("encoding is null");  return null;} @AT@ 7437 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 7444 @LENGTH@ 4


UPD IfStatement@@if (!operations.contains(operation)) {  operations.offer(operation);} @TO@ if (!operations.contains(operation)) {  boolean result=operations.offer(operation);  if (!result) {    LOG.error("failed to offer() an operation");  }} @AT@ 22591 @LENGTH@ 89
---INS Block@@ThenBody:{  boolean result=operations.offer(operation);  if (!result) {    LOG.error("failed to offer() an operation");  }} @TO@ IfStatement@@if (!operations.contains(operation)) {  operations.offer(operation);} @AT@ 22628 @LENGTH@ 171
------INS VariableDeclarationStatement@@boolean result=operations.offer(operation); @TO@ Block@@ThenBody:{  boolean result=operations.offer(operation);  if (!result) {    LOG.error("failed to offer() an operation");  }} @AT@ 22642 @LENGTH@ 45
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=operations.offer(operation); @AT@ 22642 @LENGTH@ 7
---------INS VariableDeclarationFragment@@result=operations.offer(operation) @TO@ VariableDeclarationStatement@@boolean result=operations.offer(operation); @AT@ 22650 @LENGTH@ 36
------------MOV MethodInvocation@@operations.offer(operation) @TO@ VariableDeclarationFragment@@result=operations.offer(operation) @AT@ 22642 @LENGTH@ 27
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=operations.offer(operation) @AT@ 22650 @LENGTH@ 6
------INS IfStatement@@if (!result) {  LOG.error("failed to offer() an operation");} @TO@ Block@@ThenBody:{  boolean result=operations.offer(operation);  if (!result) {    LOG.error("failed to offer() an operation");  }} @AT@ 22700 @LENGTH@ 89
---------MOV Block@@ThenBody:{  operations.offer(operation);} @TO@ IfStatement@@if (!result) {  LOG.error("failed to offer() an operation");} @AT@ 22628 @LENGTH@ 52
------------UPD ExpressionStatement@@MethodInvocation:operations.offer(operation) @TO@ MethodInvocation:LOG.error("failed to offer() an operation") @AT@ 22642 @LENGTH@ 28
---------------INS MethodInvocation@@LOG.error("failed to offer() an operation") @TO@ ExpressionStatement@@MethodInvocation:operations.offer(operation) @AT@ 22731 @LENGTH@ 43
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("failed to offer() an operation") @AT@ 22731 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["failed to offer() an operation"] @TO@ MethodInvocation@@LOG.error("failed to offer() an operation") @AT@ 22735 @LENGTH@ 39
---------------------INS StringLiteral@@"failed to offer() an operation" @TO@ SimpleName@@MethodName:error:["failed to offer() an operation"] @AT@ 22741 @LENGTH@ 32
---------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("failed to offer() an operation");} @AT@ 22704 @LENGTH@ 7
------------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 22704 @LENGTH@ 1
------------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 22705 @LENGTH@ 6
---UPD Block@@ThenBody:{  operations.offer(operation);} @TO@ ThenBody:{  LOG.error("failed to offer() an operation");} @AT@ 22628 @LENGTH@ 52


UPD TypeDeclaration@@[protected]RedeliveryPolicyDefinitionParser, BeanDefinitionParser @TO@ [protected, static]RedeliveryPolicyDefinitionParser, BeanDefinitionParser @AT@ 12637 @LENGTH@ 294
---INS Modifier@@static @TO@ TypeDeclaration@@[protected]RedeliveryPolicyDefinitionParser, BeanDefinitionParser @AT@ 12647 @LENGTH@ 6


UPD IfStatement@@if (polledMessages == 0 && sendEmptyMessageWhenIdle) {  processEmptyMessage();} else if (polledMessages == 0 && timeout > 0) {  done=false;} @TO@ if (polledMessages == 0 && sendEmptyMessageWhenIdle) {  processEmptyMessage();  polledMessages=1;} else if (polledMessages == 0 && timeout > 0) {  done=false;} @AT@ 5190 @LENGTH@ 438
---UPD Block@@ThenBody:{  processEmptyMessage();} @TO@ ThenBody:{  processEmptyMessage();  polledMessages=1;} @AT@ 5243 @LENGTH@ 134
------INS ExpressionStatement@@Assignment:polledMessages=1 @TO@ Block@@ThenBody:{  processEmptyMessage();} @AT@ 5466 @LENGTH@ 19
---------INS Assignment@@polledMessages=1 @TO@ ExpressionStatement@@Assignment:polledMessages=1 @AT@ 5466 @LENGTH@ 18
------------INS SimpleName@@polledMessages @TO@ Assignment@@polledMessages=1 @AT@ 5466 @LENGTH@ 14
------------INS Operator@@= @TO@ Assignment@@polledMessages=1 @AT@ 5480 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ Assignment@@polledMessages=1 @AT@ 5483 @LENGTH@ 1


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="3.9.0",scheme="google-functions",title="GoogleCloudFunctions",syntax="google-functions:functionName",category={Category.CLOUD},producerOnly=true), public]GoogleCloudFunctionsEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(firstVersion="3.9.0",scheme="google-functions",title="Google Cloud Functions",syntax="google-functions:functionName",category={Category.CLOUD},producerOnly=true), public]GoogleCloudFunctionsEndpoint, DefaultEndpoint @AT@ 1391 @LENGTH@ 2005
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="3.9.0",scheme="google-functions",title="GoogleCloudFunctions",syntax="google-functions:functionName",category={Category.CLOUD},producerOnly=true) @TO@ @UriEndpoint(firstVersion="3.9.0",scheme="google-functions",title="Google Cloud Functions",syntax="google-functions:functionName",category={Category.CLOUD},producerOnly=true) @AT@ 1391 @LENGTH@ 238


UPD MethodDeclaration@@public, void, MethodName:instantiationSuceedsWithProperServerList,  @TO@ public, void, MethodName:instantiationSucceedsWithProperServerList,  @AT@ 5080 @LENGTH@ 444
---UPD SimpleName@@MethodName:instantiationSuceedsWithProperServerList @TO@ MethodName:instantiationSucceedsWithProperServerList @AT@ 5092 @LENGTH@ 40


INS MethodDeclaration@@PersonSummaryWithOptional, MethodName:findSummaryWithOptionalByLastname, String lastname,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 9172 @LENGTH@ 51
---INS SimpleType@@PersonSummaryWithOptional @TO@ MethodDeclaration@@PersonSummaryWithOptional, MethodName:findSummaryWithOptionalByLastname, String lastname,  @AT@ 9146 @LENGTH@ 25
---INS SimpleName@@MethodName:findSummaryWithOptionalByLastname @TO@ MethodDeclaration@@PersonSummaryWithOptional, MethodName:findSummaryWithOptionalByLastname, String lastname,  @AT@ 9172 @LENGTH@ 33
---INS SingleVariableDeclaration@@String lastname @TO@ MethodDeclaration@@PersonSummaryWithOptional, MethodName:findSummaryWithOptionalByLastname, String lastname,  @AT@ 9206 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String lastname @AT@ 9206 @LENGTH@ 6
------INS SimpleName@@lastname @TO@ SingleVariableDeclaration@@String lastname @AT@ 9213 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:dirLocationToCopy(fullyQualifiedDataLocation.getName(),fileList,fullyQualifiedDataLocation,conf,isSnapshotEnabled,snapshotPrefix,replSnapshotCount,snapPathFileList,prevSnaps,isBootstrap) @TO@ MethodInvocation:dirLocationToCopy("dbPath:" + fullyQualifiedDataLocation.getName(),fileList,fullyQualifiedDataLocation,conf,isSnapshotEnabled,snapshotPrefix,replSnapshotCount,snapPathFileList,prevSnaps,isBootstrap) @AT@ 7417 @LENGTH@ 208
---UPD MethodInvocation@@dirLocationToCopy(fullyQualifiedDataLocation.getName(),fileList,fullyQualifiedDataLocation,conf,isSnapshotEnabled,snapshotPrefix,replSnapshotCount,snapPathFileList,prevSnaps,isBootstrap) @TO@ dirLocationToCopy("dbPath:" + fullyQualifiedDataLocation.getName(),fileList,fullyQualifiedDataLocation,conf,isSnapshotEnabled,snapshotPrefix,replSnapshotCount,snapPathFileList,prevSnaps,isBootstrap) @AT@ 7417 @LENGTH@ 207
------UPD SimpleName@@MethodName:dirLocationToCopy:[fullyQualifiedDataLocation.getName(), fileList, fullyQualifiedDataLocation, conf, isSnapshotEnabled, snapshotPrefix, replSnapshotCount, snapPathFileList, prevSnaps, isBootstrap] @TO@ MethodName:dirLocationToCopy:["dbPath:" + fullyQualifiedDataLocation.getName(), fileList, fullyQualifiedDataLocation, conf, isSnapshotEnabled, snapshotPrefix, replSnapshotCount, snapPathFileList, prevSnaps, isBootstrap] @AT@ 7417 @LENGTH@ 207
---------INS InfixExpression@@"dbPath:" + fullyQualifiedDataLocation.getName() @TO@ SimpleName@@MethodName:dirLocationToCopy:[fullyQualifiedDataLocation.getName(), fileList, fullyQualifiedDataLocation, conf, isSnapshotEnabled, snapshotPrefix, replSnapshotCount, snapPathFileList, prevSnaps, isBootstrap] @AT@ 7435 @LENGTH@ 48
------------INS StringLiteral@@"dbPath:" @TO@ InfixExpression@@"dbPath:" + fullyQualifiedDataLocation.getName() @AT@ 7435 @LENGTH@ 9
------------INS Operator@@+ @TO@ InfixExpression@@"dbPath:" + fullyQualifiedDataLocation.getName() @AT@ 7444 @LENGTH@ 1
------------INS MethodInvocation@@fullyQualifiedDataLocation.getName() @TO@ InfixExpression@@"dbPath:" + fullyQualifiedDataLocation.getName() @AT@ 7447 @LENGTH@ 36
---------------MOV SimpleName@@Name:fullyQualifiedDataLocation @TO@ MethodInvocation@@fullyQualifiedDataLocation.getName() @AT@ 7435 @LENGTH@ 26
---------------MOV SimpleName@@Name:fullyQualifiedDataLocation @TO@ MethodInvocation@@fullyQualifiedDataLocation.getName() @AT@ 7435 @LENGTH@ 26
---------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@fullyQualifiedDataLocation.getName() @AT@ 7462 @LENGTH@ 9
---------DEL MethodInvocation@@fullyQualifiedDataLocation.getName() @AT@ 7435 @LENGTH@ 36


DEL FieldDeclaration@@private, static, final, String, [N_OR_PATTERN="\\$.*or"] @AT@ 25212 @LENGTH@ 53
---DEL Modifier@@private @AT@ 25212 @LENGTH@ 7
---DEL Modifier@@static @AT@ 25220 @LENGTH@ 6
---DEL Modifier@@final @AT@ 25227 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 25233 @LENGTH@ 6
---DEL VariableDeclarationFragment@@N_OR_PATTERN="\\$.*or" @AT@ 25240 @LENGTH@ 24
------DEL SimpleName@@N_OR_PATTERN @AT@ 25240 @LENGTH@ 12
------DEL StringLiteral@@"\\$.*or" @AT@ 25255 @LENGTH@ 9


UPD IfStatement@@if (newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan) {  LOG.trace("Read lock acquired.");  exclusive=true;} else {  lastModified=newLastModified;  length=newLength;  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @TO@ if (newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan))) {  LOG.trace("Read lock acquired.");  exclusive=true;} else {  lastModified=newLastModified;  length=newLength;  boolean interrupted=sleep();  if (interrupted) {    return false;  }} @AT@ 3788 @LENGTH@ 692
---UPD InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan @TO@ newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3792 @LENGTH@ 164
------DEL InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3792 @LENGTH@ 95
---------DEL InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified @AT@ 3792 @LENGTH@ 72
------------DEL InfixExpression@@newLength >= minLength && minAge == 0 @AT@ 3792 @LENGTH@ 37
------MOV InfixExpression@@newLength >= minLength @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan @AT@ 3792 @LENGTH@ 22
------MOV Operator@@&& @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan @AT@ 3814 @LENGTH@ 2
------INS ParenthesizedExpression@@((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @TO@ InfixExpression@@newLength >= minLength && minAge == 0 && newLastModified == lastModified && newLength == length || minAge != 0 && newLastModified < newOlderThan @AT@ 3818 @LENGTH@ 144
---------INS InfixExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan) @TO@ ParenthesizedExpression@@((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan)) @AT@ 3819 @LENGTH@ 142
------------INS ParenthesizedExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) @TO@ InfixExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan) @AT@ 3819 @LENGTH@ 71
---------------INS InfixExpression@@minAge == 0 && newLastModified == lastModified && newLength == length @TO@ ParenthesizedExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) @AT@ 3820 @LENGTH@ 69
------------------INS InfixExpression@@minAge == 0 && newLastModified == lastModified @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3820 @LENGTH@ 46
---------------------MOV InfixExpression@@minAge == 0 @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified @AT@ 3818 @LENGTH@ 11
---------------------MOV Operator@@&& @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified @AT@ 3829 @LENGTH@ 2
---------------------MOV InfixExpression@@newLastModified == lastModified @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified @AT@ 3833 @LENGTH@ 31
------------------MOV Operator@@&& @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3864 @LENGTH@ 2
------------------MOV InfixExpression@@newLength == length @TO@ InfixExpression@@minAge == 0 && newLastModified == lastModified && newLength == length @AT@ 3868 @LENGTH@ 19
------------MOV Operator@@|| @TO@ InfixExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan) @AT@ 3887 @LENGTH@ 2
------------INS ParenthesizedExpression@@(minAge != 0 && newLastModified < newOlderThan) @TO@ InfixExpression@@(minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan) @AT@ 3914 @LENGTH@ 47
---------------MOV InfixExpression@@minAge != 0 && newLastModified < newOlderThan @TO@ ParenthesizedExpression@@(minAge != 0 && newLastModified < newOlderThan) @AT@ 3911 @LENGTH@ 45


UPD MethodDeclaration@@public, Map<K,Value>, MethodName:decompose, Map<K,Object> property, Neo4jConversionService conversionService,  @TO@ public, Map<K,Value>, MethodName:decompose, @Nullable Map<K,Object> property, Neo4jConversionService conversionService,  @AT@ 5437 @LENGTH@ 308
---UPD SingleVariableDeclaration@@Map<K,Object> property @TO@ @Nullable Map<K,Object> property @AT@ 5468 @LENGTH@ 23
---INS IfStatement@@if (property == null) {  return Collections.emptyMap();} @TO@ MethodDeclaration@@public, Map<K,Value>, MethodName:decompose, Map<K,Object> property, Neo4jConversionService conversionService,  @AT@ 5581 @LENGTH@ 63
------INS InfixExpression@@property == null @TO@ IfStatement@@if (property == null) {  return Collections.emptyMap();} @AT@ 5585 @LENGTH@ 16
---------INS SimpleName@@property @TO@ InfixExpression@@property == null @AT@ 5585 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@property == null @AT@ 5593 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@property == null @AT@ 5597 @LENGTH@ 4
------INS Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (property == null) {  return Collections.emptyMap();} @AT@ 5603 @LENGTH@ 41
---------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ Block@@ThenBody:{  return Collections.emptyMap();} @AT@ 5609 @LENGTH@ 30
------------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 5616 @LENGTH@ 22
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5616 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 5628 @LENGTH@ 10


UPD FieldDeclaration@@EntityOperations, [operations=new EntityOperations(new MongoMappingContext())] @TO@ EntityOperations, [operations=new EntityOperations(MongoTestMappingContext.newTestContext())] @AT@ 1090 @LENGTH@ 78
---UPD VariableDeclarationFragment@@operations=new EntityOperations(new MongoMappingContext()) @TO@ operations=new EntityOperations(MongoTestMappingContext.newTestContext()) @AT@ 1107 @LENGTH@ 60
------UPD ClassInstanceCreation@@EntityOperations[new MongoMappingContext()] @TO@ EntityOperations[MongoTestMappingContext.newTestContext()] @AT@ 1120 @LENGTH@ 47
---------DEL ClassInstanceCreation@@MongoMappingContext[] @AT@ 1141 @LENGTH@ 25
------------DEL New@@new @AT@ 1141 @LENGTH@ 3
------------DEL SimpleType@@MongoMappingContext @AT@ 1145 @LENGTH@ 19
---------INS MethodInvocation@@MongoTestMappingContext.newTestContext() @TO@ ClassInstanceCreation@@EntityOperations[new MongoMappingContext()] @AT@ 1216 @LENGTH@ 40
------------INS SimpleName@@Name:MongoTestMappingContext @TO@ MethodInvocation@@MongoTestMappingContext.newTestContext() @AT@ 1216 @LENGTH@ 23
------------INS SimpleName@@MethodName:newTestContext:[] @TO@ MethodInvocation@@MongoTestMappingContext.newTestContext() @AT@ 1240 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1684 @LENGTH@ 64
---UPD MethodInvocation@@from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1684 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true&delay=3000"] @TO@ MethodName:from:["file:src/test/data?noop=true&delay=3000"] @AT@ 1684 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/main/data?noop=true&delay=3000" @TO@ "file:src/test/data?noop=true&delay=3000" @AT@ 1689 @LENGTH@ 41


UPD MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUpMocks, Exception,  @AT@ 1573 @LENGTH@ 145
---UPD SimpleName@@MethodName:setUp @TO@ MethodName:setUpMocks @AT@ 1585 @LENGTH@ 5


INS IfStatement@@if (consumerAware != null) {  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} else {  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @TO@ MethodDeclaration@@protected, void, MethodName:configureConsumer, String eventListenerType, InternalRuntimeManager manager, JBPMConsumer consumer,  @AT@ 8319 @LENGTH@ 399
---INS InfixExpression@@consumerAware != null @TO@ IfStatement@@if (consumerAware != null) {  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} else {  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @AT@ 8323 @LENGTH@ 21
------INS SimpleName@@consumerAware @TO@ InfixExpression@@consumerAware != null @AT@ 8323 @LENGTH@ 13
------INS Operator@@!= @TO@ InfixExpression@@consumerAware != null @AT@ 8336 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@consumerAware != null @AT@ 8340 @LENGTH@ 4
---INS Block@@ThenBody:{  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} @TO@ IfStatement@@if (consumerAware != null) {  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} else {  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @AT@ 8346 @LENGTH@ 139
------MOV ExpressionStatement@@MethodInvocation:LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware) @TO@ Block@@ThenBody:{  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} @AT@ 8319 @LENGTH@ 66
------MOV ExpressionStatement@@MethodInvocation:consumerAware.addConsumer(consumer) @TO@ Block@@ThenBody:{  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} @AT@ 8394 @LENGTH@ 36
---INS Block@@ElseBody:{  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @TO@ IfStatement@@if (consumerAware != null) {  LOGGER.debug("Adding consumer {} on {}",consumer,consumerAware);  consumerAware.addConsumer(consumer);} else {  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @AT@ 8491 @LENGTH@ 227
------INS ExpressionStatement@@MethodInvocation:LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.") @TO@ Block@@ElseBody:{  LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.");} @AT@ 8505 @LENGTH@ 203
---------INS MethodInvocation@@LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.") @TO@ ExpressionStatement@@MethodInvocation:LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.") @AT@ 8505 @LENGTH@ 202
------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.") @AT@ 8505 @LENGTH@ 6
------------INS SimpleName@@MethodName:error:["Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it."] @TO@ MethodInvocation@@LOGGER.error("Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it.") @AT@ 8512 @LENGTH@ 195
---------------INS StringLiteral@@"Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it." @TO@ SimpleName@@MethodName:error:["Skipping adding of consumer on instance of JBPMCamelConsumerAware, as we failed either to get non-null instance of JBPMCamelConsumerAware from cache or to create it."] @AT@ 8539 @LENGTH@ 167


UPD ExpressionStatement@@MethodInvocation:assertNotNull(ex.getCause()) @TO@ MethodInvocation:assertNotNull(ex) @AT@ 2691 @LENGTH@ 29
---UPD MethodInvocation@@assertNotNull(ex.getCause()) @TO@ assertNotNull(ex) @AT@ 2691 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertNotNull:[ex.getCause()] @TO@ MethodName:assertNotNull:[ex] @AT@ 2691 @LENGTH@ 28
---------DEL MethodInvocation@@ex.getCause() @AT@ 2705 @LENGTH@ 13
------------DEL SimpleName@@Name:ex @AT@ 2705 @LENGTH@ 2
------------DEL SimpleName@@MethodName:getCause:[] @AT@ 2708 @LENGTH@ 10
---------INS SimpleName@@ex @TO@ SimpleName@@MethodName:assertNotNull:[ex.getCause()] @AT@ 2705 @LENGTH@ 2


INS IfStatement@@if (claims == null) {  return Collections.emptyMap();} @TO@ MethodDeclaration@@private, Map<String,Object>, MethodName:adaptToNimbusResponse, ResponseEntity<Map<String,Object>> responseEntity,  @AT@ 6750 @LENGTH@ 59
---INS InfixExpression@@claims == null @TO@ IfStatement@@if (claims == null) {  return Collections.emptyMap();} @AT@ 6754 @LENGTH@ 14
------INS SimpleName@@claims @TO@ InfixExpression@@claims == null @AT@ 6754 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@claims == null @AT@ 6760 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@claims == null @AT@ 6764 @LENGTH@ 4
---INS Block@@ThenBody:{  return Collections.emptyMap();} @TO@ IfStatement@@if (claims == null) {  return Collections.emptyMap();} @AT@ 6770 @LENGTH@ 39
------INS ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ Block@@ThenBody:{  return Collections.emptyMap();} @AT@ 6775 @LENGTH@ 30
---------INS MethodInvocation@@Collections.emptyMap() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyMap() @AT@ 6782 @LENGTH@ 22
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 6782 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.emptyMap() @AT@ 6794 @LENGTH@ 10


UPD VariableDeclarationStatement@@DynamicContainer reads=DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())))); @TO@ DynamicContainer reads=DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
))); @AT@ 6968 @LENGTH@ 264
---UPD VariableDeclarationFragment@@reads=DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())))) @TO@ reads=DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
))) @AT@ 6985 @LENGTH@ 246
------UPD MethodInvocation@@DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())))) @TO@ DynamicContainer.dynamicContainer("read",entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
))) @AT@ 6993 @LENGTH@ 238
---------UPD SimpleName@@MethodName:dynamicContainer:["read", entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())))] @TO@ MethodName:dynamicContainer:["read", entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
))] @AT@ 7010 @LENGTH@ 221
------------UPD MethodInvocation@@entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()))) @TO@ entry.getValue().entrySet().stream().map(a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
)) @AT@ 7040 @LENGTH@ 190
---------------UPD SimpleName@@MethodName:map:[a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()))] @TO@ MethodName:map:[a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
)] @AT@ 7077 @LENGTH@ 153
------------------UPD LambdaExpression@@a -> DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())) @TO@ a -> DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
) @AT@ 7081 @LENGTH@ 148
---------------------UPD MethodInvocation@@DynamicTest.dynamicTest(a.getKey(),() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())) @TO@ DynamicTest.dynamicTest(a.getKey(),() -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
) @AT@ 7086 @LENGTH@ 143
------------------------UPD SimpleName@@MethodName:dynamicTest:[a.getKey(), () -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue())] @TO@ MethodName:dynamicTest:[a.getKey(), () -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
] @AT@ 7098 @LENGTH@ 131
---------------------------UPD LambdaExpression@@() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @TO@ () -> {
  Object actual=ReflectionTestUtils.getField(thing,a.getKey());
  Object expected=a.getValue();
  if (actual instanceof URL && expected instanceof URL) {
    actual=((URL)actual).getHost();
    expected=((URL)expected).getHost();
  }
  assertThat(actual).isEqualTo(expected);
}
 @AT@ 7129 @LENGTH@ 99
------------------------------DEL MethodInvocation@@assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @AT@ 7135 @LENGTH@ 93
---------------------------------DEL MethodInvocation@@MethodName:assertThat:[ReflectionTestUtils.getField(thing,a.getKey())] @AT@ 7135 @LENGTH@ 59
---------------------------------DEL SimpleName@@MethodName:isEqualTo:[a.getValue()] @AT@ 7205 @LENGTH@ 23
------------------------------------DEL MethodInvocation@@a.getValue() @AT@ 7215 @LENGTH@ 12
------------------------------INS VariableDeclarationStatement@@Object actual=ReflectionTestUtils.getField(thing,a.getKey()); @TO@ LambdaExpression@@() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @AT@ 7166 @LENGTH@ 64
---------------------------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object actual=ReflectionTestUtils.getField(thing,a.getKey()); @AT@ 7166 @LENGTH@ 6
---------------------------------INS VariableDeclarationFragment@@actual=ReflectionTestUtils.getField(thing,a.getKey()) @TO@ VariableDeclarationStatement@@Object actual=ReflectionTestUtils.getField(thing,a.getKey()); @AT@ 7173 @LENGTH@ 56
------------------------------------MOV MethodInvocation@@ReflectionTestUtils.getField(thing,a.getKey()) @TO@ VariableDeclarationFragment@@actual=ReflectionTestUtils.getField(thing,a.getKey()) @AT@ 7146 @LENGTH@ 47
------------------------------------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=ReflectionTestUtils.getField(thing,a.getKey()) @AT@ 7173 @LENGTH@ 6
------------------------------INS VariableDeclarationStatement@@Object expected=a.getValue(); @TO@ LambdaExpression@@() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @AT@ 7239 @LENGTH@ 31
---------------------------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object expected=a.getValue(); @AT@ 7239 @LENGTH@ 6
---------------------------------INS VariableDeclarationFragment@@expected=a.getValue() @TO@ VariableDeclarationStatement@@Object expected=a.getValue(); @AT@ 7246 @LENGTH@ 23
------------------------------------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=a.getValue() @AT@ 7246 @LENGTH@ 8
------------------------------------INS MethodInvocation@@a.getValue() @TO@ VariableDeclarationFragment@@expected=a.getValue() @AT@ 7257 @LENGTH@ 12
---------------------------------------MOV SimpleName@@Name:a @TO@ MethodInvocation@@a.getValue() @AT@ 7215 @LENGTH@ 1
---------------------------------------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@a.getValue() @AT@ 7217 @LENGTH@ 10
------------------------------INS IfStatement@@if (actual instanceof URL && expected instanceof URL) {  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @TO@ LambdaExpression@@() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @AT@ 7279 @LENGTH@ 291
---------------------------------INS InfixExpression@@actual instanceof URL && expected instanceof URL @TO@ IfStatement@@if (actual instanceof URL && expected instanceof URL) {  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @AT@ 7283 @LENGTH@ 48
------------------------------------INS InstanceofExpression@@actual instanceof URL @TO@ InfixExpression@@actual instanceof URL && expected instanceof URL @AT@ 7283 @LENGTH@ 21
---------------------------------------INS SimpleName@@actual @TO@ InstanceofExpression@@actual instanceof URL @AT@ 7283 @LENGTH@ 6
---------------------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@actual instanceof URL @AT@ 7290 @LENGTH@ 10
---------------------------------------INS SimpleType@@URL @TO@ InstanceofExpression@@actual instanceof URL @AT@ 7301 @LENGTH@ 3
------------------------------------INS Operator@@&& @TO@ InfixExpression@@actual instanceof URL && expected instanceof URL @AT@ 7304 @LENGTH@ 2
------------------------------------INS InstanceofExpression@@expected instanceof URL @TO@ InfixExpression@@actual instanceof URL && expected instanceof URL @AT@ 7308 @LENGTH@ 23
---------------------------------------INS SimpleName@@expected @TO@ InstanceofExpression@@expected instanceof URL @AT@ 7308 @LENGTH@ 8
---------------------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@expected instanceof URL @AT@ 7317 @LENGTH@ 10
---------------------------------------INS SimpleType@@URL @TO@ InstanceofExpression@@expected instanceof URL @AT@ 7328 @LENGTH@ 3
---------------------------------INS Block@@ThenBody:{  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @TO@ IfStatement@@if (actual instanceof URL && expected instanceof URL) {  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @AT@ 7333 @LENGTH@ 237
------------------------------------INS ExpressionStatement@@Assignment:actual=((URL)actual).getHost() @TO@ Block@@ThenBody:{  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @AT@ 7478 @LENGTH@ 34
---------------------------------------INS Assignment@@actual=((URL)actual).getHost() @TO@ ExpressionStatement@@Assignment:actual=((URL)actual).getHost() @AT@ 7478 @LENGTH@ 33
------------------------------------------INS SimpleName@@actual @TO@ Assignment@@actual=((URL)actual).getHost() @AT@ 7478 @LENGTH@ 6
------------------------------------------INS Operator@@= @TO@ Assignment@@actual=((URL)actual).getHost() @AT@ 7484 @LENGTH@ 1
------------------------------------------INS MethodInvocation@@((URL)actual).getHost() @TO@ Assignment@@actual=((URL)actual).getHost() @AT@ 7487 @LENGTH@ 24
---------------------------------------------INS ParenthesizedExpression@@((URL)actual) @TO@ MethodInvocation@@((URL)actual).getHost() @AT@ 7487 @LENGTH@ 14
------------------------------------------------INS CastExpression@@(URL)actual @TO@ ParenthesizedExpression@@((URL)actual) @AT@ 7488 @LENGTH@ 12
---------------------------------------------------INS SimpleType@@URL @TO@ CastExpression@@(URL)actual @AT@ 7489 @LENGTH@ 3
---------------------------------------------------INS SimpleName@@actual @TO@ CastExpression@@(URL)actual @AT@ 7494 @LENGTH@ 6
---------------------------------------------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@((URL)actual).getHost() @AT@ 7502 @LENGTH@ 9
------------------------------------INS ExpressionStatement@@Assignment:expected=((URL)expected).getHost() @TO@ Block@@ThenBody:{  actual=((URL)actual).getHost();  expected=((URL)expected).getHost();} @AT@ 7522 @LENGTH@ 38
---------------------------------------INS Assignment@@expected=((URL)expected).getHost() @TO@ ExpressionStatement@@Assignment:expected=((URL)expected).getHost() @AT@ 7522 @LENGTH@ 37
------------------------------------------INS SimpleName@@expected @TO@ Assignment@@expected=((URL)expected).getHost() @AT@ 7522 @LENGTH@ 8
------------------------------------------INS Operator@@= @TO@ Assignment@@expected=((URL)expected).getHost() @AT@ 7530 @LENGTH@ 1
------------------------------------------INS MethodInvocation@@((URL)expected).getHost() @TO@ Assignment@@expected=((URL)expected).getHost() @AT@ 7533 @LENGTH@ 26
---------------------------------------------INS ParenthesizedExpression@@((URL)expected) @TO@ MethodInvocation@@((URL)expected).getHost() @AT@ 7533 @LENGTH@ 16
------------------------------------------------INS CastExpression@@(URL)expected @TO@ ParenthesizedExpression@@((URL)expected) @AT@ 7534 @LENGTH@ 14
---------------------------------------------------INS SimpleType@@URL @TO@ CastExpression@@(URL)expected @AT@ 7535 @LENGTH@ 3
---------------------------------------------------INS SimpleName@@expected @TO@ CastExpression@@(URL)expected @AT@ 7540 @LENGTH@ 8
---------------------------------------------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@((URL)expected).getHost() @AT@ 7550 @LENGTH@ 9
------------------------------INS ExpressionStatement@@MethodInvocation:assertThat(actual).isEqualTo(expected) @TO@ LambdaExpression@@() -> assertThat(ReflectionTestUtils.getField(thing,a.getKey())).isEqualTo(a.getValue()) @AT@ 7579 @LENGTH@ 39
---------------------------------INS MethodInvocation@@assertThat(actual).isEqualTo(expected) @TO@ ExpressionStatement@@MethodInvocation:assertThat(actual).isEqualTo(expected) @AT@ 7579 @LENGTH@ 38
------------------------------------INS MethodInvocation@@MethodName:assertThat:[actual] @TO@ MethodInvocation@@assertThat(actual).isEqualTo(expected) @AT@ 7579 @LENGTH@ 18
---------------------------------------INS SimpleName@@actual @TO@ MethodInvocation@@MethodName:assertThat:[actual] @AT@ 7590 @LENGTH@ 6
------------------------------------INS SimpleName@@MethodName:isEqualTo:[expected] @TO@ MethodInvocation@@assertThat(actual).isEqualTo(expected) @AT@ 7598 @LENGTH@ 19
---------------------------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:isEqualTo:[expected] @AT@ 7608 @LENGTH@ 8


UPD IfStatement@@if (value == null) {  return Values.NULL;} @TO@ if (value == null) {  try {    return conversion.apply(null);  } catch (  NullPointerException e) {    return Values.NULL;  }} @AT@ 4127 @LENGTH@ 47
---UPD Block@@ThenBody:{  return Values.NULL;} @TO@ ThenBody:{  try {    return conversion.apply(null);  } catch (  NullPointerException e) {    return Values.NULL;  }} @AT@ 4146 @LENGTH@ 28
------INS TryStatement@@try {  return conversion.apply(null);} catch (NullPointerException e) {  return Values.NULL;} @TO@ Block@@ThenBody:{  return Values.NULL;} @AT@ 4152 @LENGTH@ 208
---------INS ReturnStatement@@MethodInvocation:conversion.apply(null) @TO@ TryStatement@@try {  return conversion.apply(null);} catch (NullPointerException e) {  return Values.NULL;} @AT@ 4263 @LENGTH@ 30
------------INS MethodInvocation@@conversion.apply(null) @TO@ ReturnStatement@@MethodInvocation:conversion.apply(null) @AT@ 4270 @LENGTH@ 22
---------------INS SimpleName@@Name:conversion @TO@ MethodInvocation@@conversion.apply(null) @AT@ 4270 @LENGTH@ 10
---------------INS SimpleName@@MethodName:apply:[null] @TO@ MethodInvocation@@conversion.apply(null) @AT@ 4281 @LENGTH@ 11
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:apply:[null] @AT@ 4287 @LENGTH@ 4
---------INS CatchClause@@catch (NullPointerException e) {  return Values.NULL;} @TO@ TryStatement@@try {  return conversion.apply(null);} catch (NullPointerException e) {  return Values.NULL;} @AT@ 4299 @LENGTH@ 61
------------MOV ReturnStatement@@QualifiedName:Values.NULL @TO@ CatchClause@@catch (NullPointerException e) {  return Values.NULL;} @AT@ 4151 @LENGTH@ 19
------------INS SingleVariableDeclaration@@NullPointerException e @TO@ CatchClause@@catch (NullPointerException e) {  return Values.NULL;} @AT@ 4306 @LENGTH@ 22
---------------INS SimpleType@@NullPointerException @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 4306 @LENGTH@ 20
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 4327 @LENGTH@ 1


INS MethodDeclaration@@void, MethodName:detectsJMoleculesIdentity,  @TO@ TypeDeclaration@@[public]AnnotationBasedPersistentPropertyUnitTests,  @AT@ 11696 @LENGTH@ 165
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:detectsJMoleculesIdentity,  @AT@ 11691 @LENGTH@ 4
---INS SimpleName@@MethodName:detectsJMoleculesIdentity @TO@ MethodDeclaration@@void, MethodName:detectsJMoleculesIdentity,  @AT@ 11696 @LENGTH@ 25
---INS VariableDeclarationStatement@@SamplePersistentProperty property=getProperty(JMolecules.class,"identifier"); @TO@ MethodDeclaration@@void, MethodName:detectsJMoleculesIdentity,  @AT@ 11729 @LENGTH@ 80
------INS SimpleType@@SamplePersistentProperty @TO@ VariableDeclarationStatement@@SamplePersistentProperty property=getProperty(JMolecules.class,"identifier"); @AT@ 11729 @LENGTH@ 24
------INS VariableDeclarationFragment@@property=getProperty(JMolecules.class,"identifier") @TO@ VariableDeclarationStatement@@SamplePersistentProperty property=getProperty(JMolecules.class,"identifier"); @AT@ 11754 @LENGTH@ 54
---------INS SimpleName@@property @TO@ VariableDeclarationFragment@@property=getProperty(JMolecules.class,"identifier") @AT@ 11754 @LENGTH@ 8
---------INS MethodInvocation@@getProperty(JMolecules.class,"identifier") @TO@ VariableDeclarationFragment@@property=getProperty(JMolecules.class,"identifier") @AT@ 11765 @LENGTH@ 43
------------INS SimpleName@@MethodName:getProperty:[JMolecules.class, "identifier"] @TO@ MethodInvocation@@getProperty(JMolecules.class,"identifier") @AT@ 11765 @LENGTH@ 43
---------------INS TypeLiteral@@JMolecules.class @TO@ SimpleName@@MethodName:getProperty:[JMolecules.class, "identifier"] @AT@ 11777 @LENGTH@ 16
---------------INS StringLiteral@@"identifier" @TO@ SimpleName@@MethodName:getProperty:[JMolecules.class, "identifier"] @AT@ 11795 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(property.isIdProperty()).isTrue() @TO@ MethodDeclaration@@void, MethodName:detectsJMoleculesIdentity,  @AT@ 11813 @LENGTH@ 45
------INS MethodInvocation@@assertThat(property.isIdProperty()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(property.isIdProperty()).isTrue() @AT@ 11813 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:assertThat:[property.isIdProperty()] @TO@ MethodInvocation@@assertThat(property.isIdProperty()).isTrue() @AT@ 11813 @LENGTH@ 35
------------INS MethodInvocation@@property.isIdProperty() @TO@ MethodInvocation@@MethodName:assertThat:[property.isIdProperty()] @AT@ 11824 @LENGTH@ 23
---------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isIdProperty() @AT@ 11824 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isIdProperty:[] @TO@ MethodInvocation@@property.isIdProperty() @AT@ 11833 @LENGTH@ 14
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(property.isIdProperty()).isTrue() @AT@ 11849 @LENGTH@ 8


UPD TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.0"), public, final]ReactiveNeo4jTemplate, [ReactiveNeo4jOperations, ReactiveFluentNeo4jOperations, ReactiveFluentSaveOperation, BeanClassLoaderAware, BeanFactoryAware] @TO@ [@API(status=API.Status.STABLE,since="6.0"), public, final]ReactiveNeo4jTemplate, [ReactiveNeo4jOperations, ReactiveFluentNeo4jOperations, BeanClassLoaderAware, BeanFactoryAware] @AT@ 4675 @LENGTH@ 46936
---DEL SimpleType@@ReactiveFluentSaveOperation @AT@ 4833 @LENGTH@ 27


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @TO@ MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null))) @AT@ 7341 @LENGTH@ 83
---UPD MethodInvocation@@toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @TO@ toFileVisitResult(accept(Objects.toString(file.getFileName(),null))) @AT@ 7348 @LENGTH@ 75
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null)), file] @TO@ MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null))] @AT@ 7348 @LENGTH@ 75
---------DEL SimpleName@@file @AT@ 7418 @LENGTH@ 4


UPD MethodDeclaration@@public, Map<String,Value>, MethodName:decompose, SomeOtherDTO property, Neo4jConversionService conversionService,  @TO@ public, Map<String,Value>, MethodName:decompose, @Nullable SomeOtherDTO property, Neo4jConversionService conversionService,  @AT@ 6027 @LENGTH@ 340
---UPD SingleVariableDeclaration@@SomeOtherDTO property @TO@ @Nullable SomeOtherDTO property @AT@ 6063 @LENGTH@ 21
---INS IfStatement@@if (property == null) {  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} else {  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @TO@ MethodDeclaration@@public, Map<String,Value>, MethodName:decompose, SomeOtherDTO property, Neo4jConversionService conversionService,  @AT@ 6298 @LENGTH@ 307
------INS InfixExpression@@property == null @TO@ IfStatement@@if (property == null) {  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} else {  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6302 @LENGTH@ 16
---------INS SimpleName@@property @TO@ InfixExpression@@property == null @AT@ 6302 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@property == null @AT@ 6310 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@property == null @AT@ 6314 @LENGTH@ 4
------INS Block@@ThenBody:{  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} @TO@ IfStatement@@if (property == null) {  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} else {  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6320 @LENGTH@ 120
---------INS ExpressionStatement@@MethodInvocation:decomposed.put("x",Values.NULL) @TO@ Block@@ThenBody:{  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} @AT@ 6326 @LENGTH@ 33
------------INS MethodInvocation@@decomposed.put("x",Values.NULL) @TO@ ExpressionStatement@@MethodInvocation:decomposed.put("x",Values.NULL) @AT@ 6326 @LENGTH@ 32
---------------INS SimpleName@@Name:decomposed @TO@ MethodInvocation@@decomposed.put("x",Values.NULL) @AT@ 6326 @LENGTH@ 10
---------------INS SimpleName@@MethodName:put:["x", Values.NULL] @TO@ MethodInvocation@@decomposed.put("x",Values.NULL) @AT@ 6337 @LENGTH@ 21
------------------INS StringLiteral@@"x" @TO@ SimpleName@@MethodName:put:["x", Values.NULL] @AT@ 6341 @LENGTH@ 3
------------------INS QualifiedName@@Values.NULL @TO@ SimpleName@@MethodName:put:["x", Values.NULL] @AT@ 6346 @LENGTH@ 11
---------------------INS SimpleName@@Values @TO@ QualifiedName@@Values.NULL @AT@ 6346 @LENGTH@ 6
---------------------INS SimpleName@@NULL @TO@ QualifiedName@@Values.NULL @AT@ 6353 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:decomposed.put("y",Values.NULL) @TO@ Block@@ThenBody:{  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} @AT@ 6364 @LENGTH@ 33
------------INS MethodInvocation@@decomposed.put("y",Values.NULL) @TO@ ExpressionStatement@@MethodInvocation:decomposed.put("y",Values.NULL) @AT@ 6364 @LENGTH@ 32
---------------INS SimpleName@@Name:decomposed @TO@ MethodInvocation@@decomposed.put("y",Values.NULL) @AT@ 6364 @LENGTH@ 10
---------------INS SimpleName@@MethodName:put:["y", Values.NULL] @TO@ MethodInvocation@@decomposed.put("y",Values.NULL) @AT@ 6375 @LENGTH@ 21
------------------INS StringLiteral@@"y" @TO@ SimpleName@@MethodName:put:["y", Values.NULL] @AT@ 6379 @LENGTH@ 3
------------------INS QualifiedName@@Values.NULL @TO@ SimpleName@@MethodName:put:["y", Values.NULL] @AT@ 6384 @LENGTH@ 11
---------------------INS SimpleName@@Values @TO@ QualifiedName@@Values.NULL @AT@ 6384 @LENGTH@ 6
---------------------INS SimpleName@@NULL @TO@ QualifiedName@@Values.NULL @AT@ 6391 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:decomposed.put("z",Values.NULL) @TO@ Block@@ThenBody:{  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} @AT@ 6402 @LENGTH@ 33
------------INS MethodInvocation@@decomposed.put("z",Values.NULL) @TO@ ExpressionStatement@@MethodInvocation:decomposed.put("z",Values.NULL) @AT@ 6402 @LENGTH@ 32
---------------INS SimpleName@@Name:decomposed @TO@ MethodInvocation@@decomposed.put("z",Values.NULL) @AT@ 6402 @LENGTH@ 10
---------------INS SimpleName@@MethodName:put:["z", Values.NULL] @TO@ MethodInvocation@@decomposed.put("z",Values.NULL) @AT@ 6413 @LENGTH@ 21
------------------INS StringLiteral@@"z" @TO@ SimpleName@@MethodName:put:["z", Values.NULL] @AT@ 6417 @LENGTH@ 3
------------------INS QualifiedName@@Values.NULL @TO@ SimpleName@@MethodName:put:["z", Values.NULL] @AT@ 6422 @LENGTH@ 11
---------------------INS SimpleName@@Values @TO@ QualifiedName@@Values.NULL @AT@ 6422 @LENGTH@ 6
---------------------INS SimpleName@@NULL @TO@ QualifiedName@@Values.NULL @AT@ 6429 @LENGTH@ 4
------INS Block@@ElseBody:{  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @TO@ IfStatement@@if (property == null) {  decomposed.put("x",Values.NULL);  decomposed.put("y",Values.NULL);  decomposed.put("z",Values.NULL);} else {  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6446 @LENGTH@ 159
---------MOV ExpressionStatement@@MethodInvocation:decomposed.put("x",Values.value(property.x)) @TO@ Block@@ElseBody:{  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6195 @LENGTH@ 46
---------MOV ExpressionStatement@@MethodInvocation:decomposed.put("y",Values.value(property.y)) @TO@ Block@@ElseBody:{  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6245 @LENGTH@ 46
---------MOV ExpressionStatement@@MethodInvocation:decomposed.put("z",Values.value(property.z)) @TO@ Block@@ElseBody:{  decomposed.put("x",Values.value(property.x));  decomposed.put("y",Values.value(property.y));  decomposed.put("z",Values.value(property.z));} @AT@ 6295 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues);
}
) @TO@ MethodInvocation:assertThrows(IllegalArgumentException.class,() -> ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues)) @AT@ 3205 @LENGTH@ 172
---UPD MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues);
}
) @TO@ assertThrows(IllegalArgumentException.class,() -> ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues)) @AT@ 3205 @LENGTH@ 171
------UPD SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues);
}
] @TO@ MethodName:assertThrows:[IllegalArgumentException.class, () -> ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues)] @AT@ 3205 @LENGTH@ 171
---------UPD LambdaExpression@@() -> {
  ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues);
}
 @TO@ () -> ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @AT@ 3250 @LENGTH@ 125
------------DEL ExpressionStatement@@MethodInvocation:ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues) @AT@ 3270 @LENGTH@ 95
---------------DEL MethodInvocation@@ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues) @AT@ 3270 @LENGTH@ 94
------------INS MethodInvocation@@ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @TO@ LambdaExpression@@() -> {
  ConnectorConfigGenerator.create(connector,getClass(),requiredFields,overridenDefaultValues);
}
 @AT@ 3310 @LENGTH@ 89
---------------MOV SimpleName@@Name:ConnectorConfigGenerator @TO@ MethodInvocation@@ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @AT@ 3270 @LENGTH@ 24
---------------MOV SimpleName@@Name:ConnectorConfigGenerator @TO@ MethodInvocation@@ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @AT@ 3270 @LENGTH@ 24
---------------MOV SimpleName@@MethodName:create:[connector, getClass(), requiredFields, overridenDefaultValues] @TO@ MethodInvocation@@ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @AT@ 3295 @LENGTH@ 69
------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 3313 @LENGTH@ 10
------------------INS SimpleName@@clazz @TO@ SimpleName@@MethodName:create:[connector, getClass(), requiredFields, overridenDefaultValues] @AT@ 3353 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:create:[connector, getClass(), requiredFields, overridenDefaultValues] @TO@ MethodInvocation@@ConnectorConfigGenerator.create(connector,clazz,requiredFields,overridenDefaultValues) @AT@ 3295 @LENGTH@ 69
------------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 3313 @LENGTH@ 10
------------------INS SimpleName@@clazz @TO@ SimpleName@@MethodName:create:[connector, getClass(), requiredFields, overridenDefaultValues] @AT@ 3353 @LENGTH@ 5


UPD VariableDeclarationStatement@@ChatScriptMessage inputMessage=new ChatScriptMessage(); @TO@ ChatScriptMessage inputMessage; @AT@ 1532 @LENGTH@ 57
---UPD VariableDeclarationFragment@@inputMessage=new ChatScriptMessage() @TO@ inputMessage @AT@ 1550 @LENGTH@ 38
------DEL ClassInstanceCreation@@ChatScriptMessage[] @AT@ 1565 @LENGTH@ 23
---------DEL New@@new @AT@ 1565 @LENGTH@ 3
---------DEL SimpleType@@ChatScriptMessage @AT@ 1569 @LENGTH@ 17


UPD IfStatement@@if (event instanceof ExchangeSendingEvent) {  ExchangeSendingEvent ese=(ExchangeSendingEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  if (!sd.newSegment()) {    return;  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity != null) {    AWSXRay.setTraceEntity(entity);    String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());    if (sd.getComponent() != null) {      name=sd.getComponent() + ":" + name;    }    name=sanitizeName(name);    try {      Subsegment subsegment=AWSXRay.beginSubsegment(name);      sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());      if (LOG.isTraceEnabled()) {        LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");    }  } else {    LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");  }} else if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @TO@ if (event instanceof ExchangeSendingEvent) {  ExchangeSendingEvent ese=(ExchangeSendingEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  if (!sd.newSegment()) {    return;  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity != null) {    AWSXRay.setTraceEntity(entity);    String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());    if (sd.getComponent() != null) {      name=sd.getComponent() + ":" + name;    }    name=sanitizeName(name);    try {      Subsegment subsegment=AWSXRay.beginSubsegment(name);      sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());      if (LOG.isTraceEnabled()) {        LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);    }  } else {    LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");  }} else if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @AT@ 11273 @LENGTH@ 4007
---UPD Block@@ThenBody:{  ExchangeSendingEvent ese=(ExchangeSendingEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  if (!sd.newSegment()) {    return;  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity != null) {    AWSXRay.setTraceEntity(entity);    String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());    if (sd.getComponent() != null) {      name=sd.getComponent() + ":" + name;    }    name=sanitizeName(name);    try {      Subsegment subsegment=AWSXRay.beginSubsegment(name);      sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());      if (LOG.isTraceEnabled()) {        LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");    }  } else {    LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");  }} @TO@ ThenBody:{  ExchangeSendingEvent ese=(ExchangeSendingEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  if (!sd.newSegment()) {    return;  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity != null) {    AWSXRay.setTraceEntity(entity);    String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());    if (sd.getComponent() != null) {      name=sd.getComponent() + ":" + name;    }    name=sanitizeName(name);    try {      Subsegment subsegment=AWSXRay.beginSubsegment(name);      sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());      if (LOG.isTraceEnabled()) {        LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);    }  } else {    LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");  }} @AT@ 11316 @LENGTH@ 2249
------UPD IfStatement@@if (entity != null) {  AWSXRay.setTraceEntity(entity);  String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());  if (sd.getComponent() != null) {    name=sd.getComponent() + ":" + name;  }  name=sanitizeName(name);  try {    Subsegment subsegment=AWSXRay.beginSubsegment(name);    sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());    if (LOG.isTraceEnabled()) {      LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");  }} else {  LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");} @TO@ if (entity != null) {  AWSXRay.setTraceEntity(entity);  String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());  if (sd.getComponent() != null) {    name=sd.getComponent() + ":" + name;  }  name=sanitizeName(name);  try {    Subsegment subsegment=AWSXRay.beginSubsegment(name);    sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());    if (LOG.isTraceEnabled()) {      LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);  }} else {  LOG.trace("Ignoring creation of XRay subsegment as no segment exists in the current thread");} @AT@ 11926 @LENGTH@ 1624
---------UPD Block@@ThenBody:{  AWSXRay.setTraceEntity(entity);  String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());  if (sd.getComponent() != null) {    name=sd.getComponent() + ":" + name;  }  name=sanitizeName(name);  try {    Subsegment subsegment=AWSXRay.beginSubsegment(name);    sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());    if (LOG.isTraceEnabled()) {      LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");  }} @TO@ ThenBody:{  AWSXRay.setTraceEntity(entity);  String name=sd.getOperationName(ese.getExchange(),ese.getEndpoint());  if (sd.getComponent() != null) {    name=sd.getComponent() + ":" + name;  }  name=sanitizeName(name);  try {    Subsegment subsegment=AWSXRay.beginSubsegment(name);    sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());    if (LOG.isTraceEnabled()) {      LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);  }} @AT@ 11946 @LENGTH@ 1465
------------UPD TryStatement@@try {  Subsegment subsegment=AWSXRay.beginSubsegment(name);  sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());  if (LOG.isTraceEnabled()) {    LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());  }  ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);} catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");} @TO@ try {  Subsegment subsegment=AWSXRay.beginSubsegment(name);  sd.pre(subsegment,ese.getExchange(),ese.getEndpoint());  if (LOG.isTraceEnabled()) {    LOG.trace("Creating new subsegment with ID {} and name {} (parent {}, references: {})",subsegment.getId(),subsegment.getName(),subsegment.getParentSegment().getId(),subsegment.getParentSegment().getReferenceCount());  }  ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment);} catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);} @AT@ 12491 @LENGTH@ 902
---------------UPD CatchClause@@catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.");} @TO@ catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name);} @AT@ 13163 @LENGTH@ 230
------------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.") @TO@ MethodInvocation:LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name) @AT@ 13226 @LENGTH@ 145
---------------------UPD MethodInvocation@@LOG.warn("Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS.") @TO@ LOG.warn("Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.",name) @AT@ 13226 @LENGTH@ 144
------------------------UPD SimpleName@@MethodName:warn:["Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS."] @TO@ MethodName:warn:["Ignoring starting of subsegment {} as its parent segment was already emitted to AWS.", name] @AT@ 13230 @LENGTH@ 140
---------------------------DEL InfixExpression@@"Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS." @AT@ 13235 @LENGTH@ 134
------------------------------DEL StringLiteral@@"Ignoring starting of subsegment " @AT@ 13235 @LENGTH@ 34
------------------------------DEL Operator@@+ @AT@ 13269 @LENGTH@ 1
------------------------------DEL SimpleName@@name @AT@ 13272 @LENGTH@ 4
------------------------------DEL StringLiteral@@" as its parent segment" @AT@ 13279 @LENGTH@ 24
------------------------------DEL StringLiteral@@" was already emitted to AWS." @AT@ 13339 @LENGTH@ 30
---------------------------INS StringLiteral@@"Ignoring starting of subsegment {} as its parent segment was already emitted to AWS." @TO@ SimpleName@@MethodName:warn:["Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS."] @AT@ 13235 @LENGTH@ 86
---------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:warn:["Ignoring starting of subsegment " + name + " as its parent segment"+ " was already emitted to AWS."] @AT@ 13355 @LENGTH@ 4
---UPD Block@@ElseBody:if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @TO@ ElseBody:if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @AT@ 13571 @LENGTH@ 1709
------UPD IfStatement@@if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @TO@ if (event instanceof ExchangeSentEvent) {  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());    }  }} else {  LOG.trace("Received event {} from source {}",event,event.getSource());} @AT@ 13571 @LENGTH@ 1709
---------UPD Block@@ThenBody:{  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");    }  }} @TO@ ThenBody:{  ExchangeSentEvent ese=(ExchangeSentEvent)event;  if (LOG.isTraceEnabled()) {    LOG.trace("-> {} - target: {} (routeId: {})",event.getClass().getSimpleName(),ese.getEndpoint(),ese.getExchange().getFromRouteId());  }  Entity entity=getTraceEntityFromExchange(ese.getExchange());  if (entity instanceof Subsegment) {    AWSXRay.setTraceEntity(entity);    SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());    try {      Subsegment subsegment=(Subsegment)entity;      sd.post(subsegment,ese.getExchange(),ese.getEndpoint());      subsegment.close();      if (LOG.isTraceEnabled()) {        LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());        LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());      }      ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());    } catch (    AlreadyEmittedException aeEx) {      LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());    }  }} @AT@ 13611 @LENGTH@ 1559
------------UPD IfStatement@@if (entity instanceof Subsegment) {  AWSXRay.setTraceEntity(entity);  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  try {    Subsegment subsegment=(Subsegment)entity;    sd.post(subsegment,ese.getExchange(),ese.getEndpoint());    subsegment.close();    if (LOG.isTraceEnabled()) {      LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());      LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");  }} @TO@ if (entity instanceof Subsegment) {  AWSXRay.setTraceEntity(entity);  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  try {    Subsegment subsegment=(Subsegment)entity;    sd.post(subsegment,ese.getExchange(),ese.getEndpoint());    subsegment.close();    if (LOG.isTraceEnabled()) {      LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());      LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());  }} @AT@ 14022 @LENGTH@ 1134
---------------UPD Block@@ThenBody:{  AWSXRay.setTraceEntity(entity);  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  try {    Subsegment subsegment=(Subsegment)entity;    sd.post(subsegment,ese.getExchange(),ese.getEndpoint());    subsegment.close();    if (LOG.isTraceEnabled()) {      LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());      LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");  }} @TO@ ThenBody:{  AWSXRay.setTraceEntity(entity);  SegmentDecorator sd=getSegmentDecorator(ese.getEndpoint());  try {    Subsegment subsegment=(Subsegment)entity;    sd.post(subsegment,ese.getExchange(),ese.getEndpoint());    subsegment.close();    if (LOG.isTraceEnabled()) {      LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());      LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());    }    ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());  } catch (  AlreadyEmittedException aeEx) {    LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());  }} @AT@ 14056 @LENGTH@ 1100
------------------UPD TryStatement@@try {  Subsegment subsegment=(Subsegment)entity;  sd.post(subsegment,ese.getExchange(),ese.getEndpoint());  subsegment.close();  if (LOG.isTraceEnabled()) {    LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());    LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());  }  ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());} catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");} @TO@ try {  Subsegment subsegment=(Subsegment)entity;  sd.post(subsegment,ese.getExchange(),ese.getEndpoint());  subsegment.close();  if (LOG.isTraceEnabled()) {    LOG.trace("Closing down subsegment with ID {} and name {}",subsegment.getId(),subsegment.getName());    LOG.trace("Setting trace entity for exchange {} to {}",ese.getExchange(),subsegment.getParent());  }  ese.getExchange().setProperty(CURRENT_SEGMENT,subsegment.getParent());} catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());} @AT@ 14212 @LENGTH@ 926
---------------------UPD CatchClause@@catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS");} @TO@ catch (AlreadyEmittedException aeEx) {  LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName());} @AT@ 14905 @LENGTH@ 233
------------------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS") @TO@ MethodInvocation:LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName()) @AT@ 14968 @LENGTH@ 148
---------------------------UPD MethodInvocation@@LOG.warn("Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS") @TO@ LOG.warn("Ignoring close of subsegment {} as its parent segment was already emitted to AWS",entity.getName()) @AT@ 14968 @LENGTH@ 147
------------------------------UPD SimpleName@@MethodName:warn:["Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS"] @TO@ MethodName:warn:["Ignoring close of subsegment {} as its parent segment was already emitted to AWS", entity.getName()] @AT@ 14972 @LENGTH@ 143
---------------------------------INS StringLiteral@@"Ignoring close of subsegment {} as its parent segment was already emitted to AWS" @TO@ SimpleName@@MethodName:warn:["Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS"] @AT@ 14967 @LENGTH@ 82
---------------------------------INS StringLiteral@@"Ignoring close of subsegment {} as its parent segment was already emitted to AWS" @TO@ SimpleName@@MethodName:warn:["Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS"] @AT@ 14967 @LENGTH@ 82
---------------------------------DEL InfixExpression@@"Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS" @AT@ 14977 @LENGTH@ 137
------------------------------------DEL StringLiteral@@"Ignoring close of subsegment " @AT@ 14977 @LENGTH@ 31
------------------------------------DEL Operator@@+ @AT@ 15008 @LENGTH@ 1
------------------------------------DEL MethodInvocation@@entity.getName() @AT@ 15011 @LENGTH@ 16
------------------------------------DEL StringLiteral@@" as its parent segment was already emitted to AWS" @AT@ 15063 @LENGTH@ 51
---------------------------------INS MethodInvocation@@entity.getName() @TO@ SimpleName@@MethodName:warn:["Ignoring close of subsegment " + entity.getName() + " as its parent segment was already emitted to AWS"] @AT@ 15083 @LENGTH@ 16
------------------------------------MOV SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getName() @AT@ 15011 @LENGTH@ 6
------------------------------------MOV SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getName() @AT@ 15011 @LENGTH@ 6
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entity.getName() @AT@ 15018 @LENGTH@ 9
------------------------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@entity.getName() @AT@ 15018 @LENGTH@ 9


MOV ExpressionStatement@@Assignment:this.embeddedDatabase=new EmbeddedDatabaseBuilder().addScript("createAclSchemaWithAclClassIdType.sql").addScript("db/sql/test_data_hierarchy.sql").build() @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 2818 @LENGTH@ 169


MOV IfStatement@@if (resultHandlerFactory != null) {  xslt.setResultHandlerFactory(resultHandlerFactory);} @TO@ MethodDeclaration@@protected, XsltBuilder, MethodName:createXsltBuilder, Exception,  @AT@ 14362 @LENGTH@ 109


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 3947 @LENGTH@ 110
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3962 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 3987 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 3987 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4033 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:MicroProfileMetricsHelper.getMetricRegistry(camelContext) @TO@ MethodInvocation:assertDoesNotThrow(() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext)) @AT@ 2800 @LENGTH@ 58
---INS MethodInvocation@@assertDoesNotThrow(() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext)) @TO@ ExpressionStatement@@MethodInvocation:MicroProfileMetricsHelper.getMetricRegistry(camelContext) @AT@ 2868 @LENGTH@ 83
------INS SimpleName@@MethodName:assertDoesNotThrow:[() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext)] @TO@ MethodInvocation@@assertDoesNotThrow(() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext)) @AT@ 2868 @LENGTH@ 83
---------INS LambdaExpression@@() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext) @TO@ SimpleName@@MethodName:assertDoesNotThrow:[() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext)] @AT@ 2887 @LENGTH@ 63
------------MOV MethodInvocation@@MicroProfileMetricsHelper.getMetricRegistry(camelContext) @TO@ LambdaExpression@@() -> MicroProfileMetricsHelper.getMetricRegistry(camelContext) @AT@ 2800 @LENGTH@ 57


INS MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @TO@ TypeDeclaration@@[public]ExtendedBufferedReaderTest,  @AT@ 8335 @LENGTH@ 304
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8335 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8342 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadingInDifferentBuffer @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8347 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8385 @LENGTH@ 9
---INS VariableDeclarationStatement@@char[] tmp1=new char[2], tmp2=new char[4]; @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8405 @LENGTH@ 46
------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@char[] tmp1=new char[2], tmp2=new char[4]; @AT@ 8405 @LENGTH@ 6
---------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 8405 @LENGTH@ 4
------INS VariableDeclarationFragment@@tmp1=new char[2] @TO@ VariableDeclarationStatement@@char[] tmp1=new char[2], tmp2=new char[4]; @AT@ 8412 @LENGTH@ 18
---------INS SimpleName@@tmp1 @TO@ VariableDeclarationFragment@@tmp1=new char[2] @AT@ 8412 @LENGTH@ 4
---------INS ArrayCreation@@new char[2] @TO@ VariableDeclarationFragment@@tmp1=new char[2] @AT@ 8419 @LENGTH@ 11
------------INS ArrayType@@char[] @TO@ ArrayCreation@@new char[2] @AT@ 8423 @LENGTH@ 7
---------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 8423 @LENGTH@ 4
------------INS NumberLiteral@@2 @TO@ ArrayCreation@@new char[2] @AT@ 8428 @LENGTH@ 1
------INS VariableDeclarationFragment@@tmp2=new char[4] @TO@ VariableDeclarationStatement@@char[] tmp1=new char[2], tmp2=new char[4]; @AT@ 8432 @LENGTH@ 18
---------INS SimpleName@@tmp2 @TO@ VariableDeclarationFragment@@tmp2=new char[4] @AT@ 8432 @LENGTH@ 4
---------INS ArrayCreation@@new char[4] @TO@ VariableDeclarationFragment@@tmp2=new char[4] @AT@ 8439 @LENGTH@ 11
------------INS ArrayType@@char[] @TO@ ArrayCreation@@new char[4] @AT@ 8443 @LENGTH@ 7
---------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 8443 @LENGTH@ 4
------------INS NumberLiteral@@4 @TO@ ArrayCreation@@new char[4] @AT@ 8448 @LENGTH@ 1
---INS VariableDeclarationStatement@@ExtendedBufferedReader br=createBufferedReader("1\r\n2\r\n"); @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8460 @LENGTH@ 63
------INS SimpleType@@ExtendedBufferedReader @TO@ VariableDeclarationStatement@@ExtendedBufferedReader br=createBufferedReader("1\r\n2\r\n"); @AT@ 8460 @LENGTH@ 22
------INS VariableDeclarationFragment@@br=createBufferedReader("1\r\n2\r\n") @TO@ VariableDeclarationStatement@@ExtendedBufferedReader br=createBufferedReader("1\r\n2\r\n"); @AT@ 8483 @LENGTH@ 39
---------INS SimpleName@@br @TO@ VariableDeclarationFragment@@br=createBufferedReader("1\r\n2\r\n") @AT@ 8483 @LENGTH@ 2
---------INS MethodInvocation@@createBufferedReader("1\r\n2\r\n") @TO@ VariableDeclarationFragment@@br=createBufferedReader("1\r\n2\r\n") @AT@ 8488 @LENGTH@ 34
------------INS SimpleName@@MethodName:createBufferedReader:["1\r\n2\r\n"] @TO@ MethodInvocation@@createBufferedReader("1\r\n2\r\n") @AT@ 8488 @LENGTH@ 34
---------------INS StringLiteral@@"1\r\n2\r\n" @TO@ SimpleName@@MethodName:createBufferedReader:["1\r\n2\r\n"] @AT@ 8509 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:br.read(tmp1,0,2) @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8532 @LENGTH@ 20
------INS MethodInvocation@@br.read(tmp1,0,2) @TO@ ExpressionStatement@@MethodInvocation:br.read(tmp1,0,2) @AT@ 8532 @LENGTH@ 19
---------INS SimpleName@@Name:br @TO@ MethodInvocation@@br.read(tmp1,0,2) @AT@ 8532 @LENGTH@ 2
---------INS SimpleName@@MethodName:read:[tmp1, 0, 2] @TO@ MethodInvocation@@br.read(tmp1,0,2) @AT@ 8535 @LENGTH@ 16
------------INS SimpleName@@tmp1 @TO@ SimpleName@@MethodName:read:[tmp1, 0, 2] @AT@ 8540 @LENGTH@ 4
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:read:[tmp1, 0, 2] @AT@ 8546 @LENGTH@ 1
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:read:[tmp1, 0, 2] @AT@ 8549 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:br.read(tmp2,2,2) @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8561 @LENGTH@ 20
------INS MethodInvocation@@br.read(tmp2,2,2) @TO@ ExpressionStatement@@MethodInvocation:br.read(tmp2,2,2) @AT@ 8561 @LENGTH@ 19
---------INS SimpleName@@Name:br @TO@ MethodInvocation@@br.read(tmp2,2,2) @AT@ 8561 @LENGTH@ 2
---------INS SimpleName@@MethodName:read:[tmp2, 2, 2] @TO@ MethodInvocation@@br.read(tmp2,2,2) @AT@ 8564 @LENGTH@ 16
------------INS SimpleName@@tmp2 @TO@ SimpleName@@MethodName:read:[tmp2, 2, 2] @AT@ 8569 @LENGTH@ 4
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:read:[tmp2, 2, 2] @AT@ 8575 @LENGTH@ 1
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:read:[tmp2, 2, 2] @AT@ 8578 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,br.getCurrentLineNumber()) @TO@ MethodDeclaration@@public, void, MethodName:testReadingInDifferentBuffer, Exception,  @AT@ 8590 @LENGTH@ 43
------INS MethodInvocation@@assertEquals(2,br.getCurrentLineNumber()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,br.getCurrentLineNumber()) @AT@ 8590 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertEquals:[2, br.getCurrentLineNumber()] @TO@ MethodInvocation@@assertEquals(2,br.getCurrentLineNumber()) @AT@ 8590 @LENGTH@ 42
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, br.getCurrentLineNumber()] @AT@ 8603 @LENGTH@ 1
------------INS MethodInvocation@@br.getCurrentLineNumber() @TO@ SimpleName@@MethodName:assertEquals:[2, br.getCurrentLineNumber()] @AT@ 8606 @LENGTH@ 25
---------------INS SimpleName@@Name:br @TO@ MethodInvocation@@br.getCurrentLineNumber() @AT@ 8606 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getCurrentLineNumber:[] @TO@ MethodInvocation@@br.getCurrentLineNumber() @AT@ 8609 @LENGTH@ 22


UPD TypeDeclaration@@[@org.junit.Ignore("HIVE-25267"), public]TestReplicationScenariosAcidTables, BaseReplicationScenariosAcidTables @TO@ [public]TestReplicationScenariosAcidTables, BaseReplicationScenariosAcidTables @AT@ 3196 @LENGTH@ 124149
---DEL SingleMemberAnnotation@@@org.junit.Ignore("HIVE-25267") @AT@ 3196 @LENGTH@ 31


UPD ExpressionStatement@@Assignment:singleValue=p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalReadingConverter()) @TO@ Assignment:singleValue=p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalConverter()) @AT@ 9995 @LENGTH@ 127
---UPD Assignment@@singleValue=p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalReadingConverter()) @TO@ singleValue=p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalConverter()) @AT@ 9995 @LENGTH@ 126
------UPD LambdaExpression@@p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalReadingConverter()) @TO@ p -> context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalConverter()) @AT@ 10009 @LENGTH@ 112
---------UPD MethodInvocation@@context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalReadingConverter()) @TO@ context.getConversionService().readValue(p,actualTargetType,targetProperty.getOptionalConverter()) @AT@ 10014 @LENGTH@ 107
------------UPD SimpleName@@MethodName:readValue:[p, actualTargetType, targetProperty.getOptionalReadingConverter()] @TO@ MethodName:readValue:[p, actualTargetType, targetProperty.getOptionalConverter()] @AT@ 10045 @LENGTH@ 76
---------------UPD MethodInvocation@@targetProperty.getOptionalReadingConverter() @TO@ targetProperty.getOptionalConverter() @AT@ 10076 @LENGTH@ 44
------------------UPD SimpleName@@MethodName:getOptionalReadingConverter:[] @TO@ MethodName:getOptionalConverter:[] @AT@ 10091 @LENGTH@ 29


UPD Block@@ElseBody:if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7020 @LENGTH@ 822
---UPD IfStatement@@if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7020 @LENGTH@ 822
------UPD Block@@ElseBody:if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---UPD IfStatement@@if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof InputStream) {  final byte[] bytes=new byte[4096];  try (InputStream in=(InputStream)body){    int len;    while ((len=in.read(bytes)) >= 0) {      final Buffer b=Buffer.buffer(len);      b.appendBytes(bytes,0,len);      response.write(b);    }  }   response.end();} else if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7020 @LENGTH@ 822
------UPD Block@@ElseBody:if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13
---------UPD IfStatement@@if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ if (body instanceof Buffer) {  response.end((Buffer)body);} else {  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7460 @LENGTH@ 382
------------UPD Block@@ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @TO@ ElseBody:{  final TypeConverter tc=camelExchange.getContext().getTypeConverter();  final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body);  final Buffer b=Buffer.buffer(bb.capacity());  b.setBytes(0,bb);  response.end(b);} @AT@ 7546 @LENGTH@ 296
---------------UPD VariableDeclarationStatement@@final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,body); @TO@ final ByteBuffer bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body); @AT@ 7644 @LENGTH@ 68
------------------UPD VariableDeclarationFragment@@bb=tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ bb=tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7661 @LENGTH@ 50
---------------------UPD MethodInvocation@@tc.mandatoryConvertTo(ByteBuffer.class,body) @TO@ tc.mandatoryConvertTo(ByteBuffer.class,camelExchange,body) @AT@ 7666 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @TO@ MethodName:mandatoryConvertTo:[ByteBuffer.class, camelExchange, body] @AT@ 7669 @LENGTH@ 42
---------------------------INS SimpleName@@camelExchange @TO@ SimpleName@@MethodName:mandatoryConvertTo:[ByteBuffer.class, body] @AT@ 7706 @LENGTH@ 13


INS MethodDeclaration@@List<NameOnlyDto>, MethodName:findAllDtoProjectedBy,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 21265 @LENGTH@ 24
---INS ParameterizedType@@List<NameOnlyDto> @TO@ MethodDeclaration@@List<NameOnlyDto>, MethodName:findAllDtoProjectedBy,  @AT@ 21247 @LENGTH@ 17
------INS SimpleType@@List @TO@ ParameterizedType@@List<NameOnlyDto> @AT@ 21247 @LENGTH@ 4
------INS SimpleType@@NameOnlyDto @TO@ ParameterizedType@@List<NameOnlyDto> @AT@ 21252 @LENGTH@ 11
---INS SimpleName@@MethodName:findAllDtoProjectedBy @TO@ MethodDeclaration@@List<NameOnlyDto>, MethodName:findAllDtoProjectedBy,  @AT@ 21265 @LENGTH@ 21


UPD IfStatement@@if (endpoint.getReplyTo() != null && endpoint.getReplyToType().equals(ReplyToType.Temporary.name())) {  throw new IllegalArgumentException("ReplyToType " + ReplyToType.Temporary + " is not supported when replyTo "+ endpoint.getReplyTo()+ " is also configured.");} @TO@ if (endpoint.getReplyTo() != null && endpoint.getReplyToType().equals(ReplyToType.Temporary)) {  throw new IllegalArgumentException("ReplyToType " + ReplyToType.Temporary + " is not supported when replyTo "+ endpoint.getReplyTo()+ " is also configured.");} @AT@ 4473 @LENGTH@ 480
---UPD InfixExpression@@endpoint.getReplyTo() != null && endpoint.getReplyToType().equals(ReplyToType.Temporary.name()) @TO@ endpoint.getReplyTo() != null && endpoint.getReplyToType().equals(ReplyToType.Temporary) @AT@ 4477 @LENGTH@ 95
------UPD MethodInvocation@@endpoint.getReplyToType().equals(ReplyToType.Temporary.name()) @TO@ endpoint.getReplyToType().equals(ReplyToType.Temporary) @AT@ 4510 @LENGTH@ 62
---------UPD SimpleName@@MethodName:equals:[ReplyToType.Temporary.name()] @TO@ MethodName:equals:[ReplyToType.Temporary] @AT@ 4536 @LENGTH@ 36
------------DEL MethodInvocation@@ReplyToType.Temporary.name() @AT@ 4543 @LENGTH@ 28
---------------DEL QualifiedName@@Name:ReplyToType.Temporary @AT@ 4543 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:name:[] @AT@ 4565 @LENGTH@ 6
------------INS QualifiedName@@ReplyToType.Temporary @TO@ SimpleName@@MethodName:equals:[ReplyToType.Temporary.name()] @AT@ 4543 @LENGTH@ 21
---------------INS SimpleName@@ReplyToType @TO@ QualifiedName@@ReplyToType.Temporary @AT@ 4543 @LENGTH@ 11
---------------INS SimpleName@@Temporary @TO@ QualifiedName@@ReplyToType.Temporary @AT@ 4555 @LENGTH@ 9


INS FieldDeclaration@@Long, [identifier] @TO@ TypeDeclaration@@[static]JMolecules,  @AT@ 15691 @LENGTH@ 16
---INS SimpleType@@Long @TO@ FieldDeclaration@@Long, [identifier] @AT@ 15691 @LENGTH@ 4
---INS VariableDeclarationFragment@@identifier @TO@ FieldDeclaration@@Long, [identifier] @AT@ 15696 @LENGTH@ 10
------INS SimpleName@@identifier @TO@ VariableDeclarationFragment@@identifier @AT@ 15696 @LENGTH@ 10


UPD MethodDeclaration@@public, void, MethodName:setStreamConverter, StreamMessageConverter streamConverter,  @TO@ public, synchronized, void, MethodName:setStreamConverter, StreamMessageConverter streamConverter,  @AT@ 3947 @LENGTH@ 222
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:setStreamConverter, StreamMessageConverter streamConverter,  @AT@ 3954 @LENGTH@ 12


UPD TryStatement@@try (InputStream fileInputStream=new FileInputStream(filePayload)){  fileInputStream.skip(filePosition);  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @TO@ try (InputStream fileInputStream=new FileInputStream(filePayload)){  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @AT@ 10130 @LENGTH@ 532
---DEL ExpressionStatement@@MethodInvocation:fileInputStream.skip(filePosition) @AT@ 10221 @LENGTH@ 35
---INS VariableDeclarationStatement@@long skipped=fileInputStream.skip(filePosition); @TO@ TryStatement@@try (InputStream fileInputStream=new FileInputStream(filePayload)){  fileInputStream.skip(filePosition);  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @AT@ 10223 @LENGTH@ 50
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long skipped=fileInputStream.skip(filePosition); @AT@ 10223 @LENGTH@ 4
------INS VariableDeclarationFragment@@skipped=fileInputStream.skip(filePosition) @TO@ VariableDeclarationStatement@@long skipped=fileInputStream.skip(filePosition); @AT@ 10228 @LENGTH@ 44
---------MOV MethodInvocation@@fileInputStream.skip(filePosition) @TO@ VariableDeclarationFragment@@skipped=fileInputStream.skip(filePosition) @AT@ 10221 @LENGTH@ 34
---------INS SimpleName@@skipped @TO@ VariableDeclarationFragment@@skipped=fileInputStream.skip(filePosition) @AT@ 10228 @LENGTH@ 7
---INS IfStatement@@if (skipped == 0) {  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @TO@ TryStatement@@try (InputStream fileInputStream=new FileInputStream(filePayload)){  fileInputStream.skip(filePosition);  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @AT@ 10294 @LENGTH@ 149
------INS InfixExpression@@skipped == 0 @TO@ IfStatement@@if (skipped == 0) {  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @AT@ 10298 @LENGTH@ 12
---------INS SimpleName@@skipped @TO@ InfixExpression@@skipped == 0 @AT@ 10298 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@skipped == 0 @AT@ 10305 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@skipped == 0 @AT@ 10309 @LENGTH@ 1
------INS Block@@ThenBody:{  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @TO@ IfStatement@@if (skipped == 0) {  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @AT@ 10312 @LENGTH@ 131
---------INS ExpressionStatement@@MethodInvocation:LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName) @TO@ Block@@ThenBody:{  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @AT@ 10338 @LENGTH@ 83
------------INS MethodInvocation@@LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName) @AT@ 10338 @LENGTH@ 82
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName) @AT@ 10338 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["While trying to upload the file {} file, 0 bytes were skipped", keyName] @TO@ MethodInvocation@@LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName) @AT@ 10342 @LENGTH@ 78
------------------INS StringLiteral@@"While trying to upload the file {} file, 0 bytes were skipped" @TO@ SimpleName@@MethodName:warn:["While trying to upload the file {} file, 0 bytes were skipped", keyName] @AT@ 10347 @LENGTH@ 63
------------------INS SimpleName@@keyName @TO@ SimpleName@@MethodName:warn:["While trying to upload the file {} file, 0 bytes were skipped", keyName] @AT@ 10412 @LENGTH@ 7


DEL MethodDeclaration@@private, voidMethodName:AuthenticationCallbackHandler, String username, String digest,  @AT@ 88350 @LENGTH@ 153
---DEL Modifier@@private @AT@ 88350 @LENGTH@ 7
---DEL SimpleName@@MethodName:AuthenticationCallbackHandler @AT@ 88358 @LENGTH@ 29
---DEL SingleVariableDeclaration@@String username @AT@ 88388 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 88388 @LENGTH@ 6
------DEL SimpleName@@username @AT@ 88395 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String digest @AT@ 88405 @LENGTH@ 13
------DEL SimpleType@@String @AT@ 88405 @LENGTH@ 6
------DEL SimpleName@@digest @AT@ 88412 @LENGTH@ 6
---DEL ExpressionStatement@@Assignment:this.username=username @AT@ 88434 @LENGTH@ 25
------DEL Assignment@@this.username=username @AT@ 88434 @LENGTH@ 24
---------DEL FieldAccess@@this.username @AT@ 88434 @LENGTH@ 13
------------DEL ThisExpression@@this @AT@ 88434 @LENGTH@ 4
------------DEL SimpleName@@username @AT@ 88439 @LENGTH@ 8
---------DEL Operator@@= @AT@ 88447 @LENGTH@ 1
---------DEL SimpleName@@username @AT@ 88450 @LENGTH@ 8
---DEL ExpressionStatement@@Assignment:this.digest=digest @AT@ 88472 @LENGTH@ 21
------DEL Assignment@@this.digest=digest @AT@ 88472 @LENGTH@ 20
---------DEL FieldAccess@@this.digest @AT@ 88472 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 88472 @LENGTH@ 4
------------DEL SimpleName@@digest @AT@ 88477 @LENGTH@ 6
---------DEL Operator@@= @AT@ 88483 @LENGTH@ 1
---------DEL SimpleName@@digest @AT@ 88486 @LENGTH@ 6


UPD LambdaExpression@@association -> {
  NestedRelationshipContext relationshipContext=NestedRelationshipContext.of(association,parentPropertyAccessor,sourceEntity);
  Object rawValue=relationshipContext.getValue();
  Collection<?> relatedValuesToStore=MappingSupport.unifyRelationshipValue(relationshipContext.getInverse(),rawValue);
  RelationshipDescription relationshipDescription=relationshipContext.getRelationship();
  RelationshipDescription relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse();
  if (!includeProperty.test(relationshipDescription.getFieldName())) {
    return;
  }
  Neo4jPersistentProperty idProperty;
  if (!relationshipDescription.hasInternalIdProperty()) {
    idProperty=null;
  }
 else {
    Neo4jPersistentEntity<?> relationshipPropertiesEntity=(Neo4jPersistentEntity<?>)relationshipDescription.getRelationshipPropertiesEntity();
    idProperty=relationshipPropertiesEntity.getIdProperty();
  }
  ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore);
  if (processState == ProcessState.PROCESSED_ALL_RELATIONSHIPS || processState == ProcessState.PROCESSED_BOTH) {
    return;
  }
  if (!isParentObjectNew && !stateMachine.hasProcessedRelationship(fromId,relationshipDescription)) {
    List<Long> knownRelationshipsIds=new ArrayList<>();
    if (idProperty != null) {
      for (      Object relatedValueToStore : relatedValuesToStore) {
        if (relatedValueToStore == null) {
          continue;
        }
        Long id=(Long)relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty);
        if (id != null) {
          knownRelationshipsIds.add(id);
        }
      }
    }
    Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(sourceEntity,relationshipDescription);
    relationshipDeleteMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).bind(convertIdValues(sourceEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(knownRelationshipsIds).to(Constants.NAME_OF_KNOWN_RELATIONSHIPS_PARAM).run().checkpoint("delete relationships").then());
  }
  if (relationshipContext.inverseValueIsEmpty()) {
    return;
  }
  Neo4jPersistentProperty relationshipProperty=association.getInverse();
  stateMachine.markRelationshipAsProcessed(fromId,relationshipDescription);
  Flux<RelationshipHandler> relationshipCreation=Flux.fromIterable(relatedValuesToStore).concatMap(relatedValueToStore -> {
    Object relatedObjectBeforeCallbacksApplied=relationshipContext.identifyAndExtractRelationshipTargetNode(relatedValueToStore);
    return Mono.deferContextual(ctx -> eventSupport.maybeCallBeforeBind(relatedObjectBeforeCallbacksApplied).flatMap(newRelatedObject -> {
      Neo4jPersistentEntity<?> targetEntity=neo4jMappingContext.getPersistentEntity(relatedObjectBeforeCallbacksApplied.getClass());
      Mono<Tuple2<Long,Long>> queryOrSave;
      long noVersion=Long.MIN_VALUE;
      if (stateMachine.hasProcessedValue(relatedValueToStore)) {
        queryOrSave=Mono.just(stateMachine.getInternalId(relatedObjectBeforeCallbacksApplied)).map(id -> Tuples.of(id,noVersion));
      }
 else {
        queryOrSave=saveRelatedNode(newRelatedObject,targetEntity).map(entity -> Tuples.of(entity.id(),targetEntity.hasVersionProperty() ? entity.get(targetEntity.getVersionProperty().getPropertyName()).asLong() : noVersion));
      }
      return queryOrSave.flatMap(idAndVersion -> {
        long relatedInternalId=idAndVersion.getT1();
        stateMachine.markValueAsProcessed(relatedValueToStore,relatedInternalId);
        PersistentPropertyAccessor<?> targetPropertyAccessor=targetEntity.getPropertyAccessor(newRelatedObject);
        if (targetEntity.isUsingInternalIds()) {
          targetPropertyAccessor.setProperty(targetEntity.getRequiredIdProperty(),relatedInternalId);
          stateMachine.markValueAsProcessedAs(newRelatedObject,targetPropertyAccessor.getBean());
        }
        if (targetEntity.hasVersionProperty() && idAndVersion.getT2() != noVersion) {
          targetPropertyAccessor.setProperty(targetEntity.getVersionProperty(),idAndVersion.getT2());
        }
        Object idValue=idProperty != null ? relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty) : null;
        boolean isNewRelationship=idValue == null;
        CreateRelationshipStatementHolder statementHolder=neo4jMappingContext.createStatement(sourceEntity,relationshipContext,relatedValueToStore,isNewRelationship);
        return neo4jClient.query(renderer.render(statementHolder.getStatement())).bind(convertIdValues(sourceEntity.getRequiredIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(relatedInternalId).to(Constants.TO_ID_PARAMETER_NAME).bind(idValue).to(Constants.NAME_OF_KNOWN_RELATIONSHIP_PARAM).bindAll(statementHolder.getProperties()).fetchAs(Long.class).one().flatMap(relationshipInternalId -> {
          if (idProperty != null && isNewRelationship) {
            relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).setProperty(idProperty,relationshipInternalId);
          }
          Mono<Object> nestedRelationshipsSignal=null;
          if (processState != ProcessState.PROCESSED_ALL_VALUES) {
            nestedRelationshipsSignal=processNestedRelations(targetEntity,targetPropertyAccessor,targetEntity.isNew(newRelatedObject),stateMachine,s -> true);
          }
          Mono<Object> getRelationshipOrRelationshipPropertiesObject=Mono.fromSupplier(() -> MappingSupport.getRelationshipOrRelationshipPropertiesObject(neo4jMappingContext,relationshipDescription.hasRelationshipProperties(),relationshipProperty.isDynamicAssociation(),relatedValueToStore,targetPropertyAccessor));
          return nestedRelationshipsSignal == null ? getRelationshipOrRelationshipPropertiesObject : nestedRelationshipsSignal.then(getRelationshipOrRelationshipPropertiesObject);
        }
);
      }
).doOnNext(potentiallyRecreatedRelatedObject -> {
        RelationshipHandler handler=ctx.get(CONTEXT_RELATIONSHIP_HANDLER);
        handler.handle(relatedValueToStore,relatedObjectBeforeCallbacksApplied,potentiallyRecreatedRelatedObject);
      }
);
    }
).then(Mono.fromSupplier(() -> ctx.<RelationshipHandler>get(CONTEXT_RELATIONSHIP_HANDLER))));
  }
).contextWrite(ctx -> {
    RelationshipHandler relationshipHandler=RelationshipHandler.forProperty(relationshipProperty,rawValue);
    return ctx.put(CONTEXT_RELATIONSHIP_HANDLER,relationshipHandler);
  }
);
  relationshipCreationCreations.add(relationshipCreation);
}
 @TO@ association -> {
  NestedRelationshipContext relationshipContext=NestedRelationshipContext.of(association,parentPropertyAccessor,sourceEntity);
  Object rawValue=relationshipContext.getValue();
  Collection<?> relatedValuesToStore=MappingSupport.unifyRelationshipValue(relationshipContext.getInverse(),rawValue);
  RelationshipDescription relationshipDescription=relationshipContext.getRelationship();
  if (!includeProperty.test(relationshipDescription.getFieldName())) {
    return;
  }
  Neo4jPersistentProperty idProperty;
  if (!relationshipDescription.hasInternalIdProperty()) {
    idProperty=null;
  }
 else {
    Neo4jPersistentEntity<?> relationshipPropertiesEntity=(Neo4jPersistentEntity<?>)relationshipDescription.getRelationshipPropertiesEntity();
    idProperty=relationshipPropertiesEntity.getIdProperty();
  }
  ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore);
  if (processState == ProcessState.PROCESSED_ALL_RELATIONSHIPS || processState == ProcessState.PROCESSED_BOTH) {
    return;
  }
  if (!isParentObjectNew && !stateMachine.hasProcessedRelationship(fromId,relationshipDescription)) {
    List<Long> knownRelationshipsIds=new ArrayList<>();
    if (idProperty != null) {
      for (      Object relatedValueToStore : relatedValuesToStore) {
        if (relatedValueToStore == null) {
          continue;
        }
        Long id=(Long)relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty);
        if (id != null) {
          knownRelationshipsIds.add(id);
        }
      }
    }
    Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(sourceEntity,relationshipDescription);
    relationshipDeleteMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).bind(convertIdValues(sourceEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(knownRelationshipsIds).to(Constants.NAME_OF_KNOWN_RELATIONSHIPS_PARAM).run().checkpoint("delete relationships").then());
  }
  if (relationshipContext.inverseValueIsEmpty()) {
    return;
  }
  Neo4jPersistentProperty relationshipProperty=association.getInverse();
  stateMachine.markRelationshipAsProcessed(fromId,relationshipDescription);
  Flux<RelationshipHandler> relationshipCreation=Flux.fromIterable(relatedValuesToStore).concatMap(relatedValueToStore -> {
    Object relatedObjectBeforeCallbacksApplied=relationshipContext.identifyAndExtractRelationshipTargetNode(relatedValueToStore);
    return Mono.deferContextual(ctx -> eventSupport.maybeCallBeforeBind(relatedObjectBeforeCallbacksApplied).flatMap(newRelatedObject -> {
      Neo4jPersistentEntity<?> targetEntity=neo4jMappingContext.getPersistentEntity(relatedObjectBeforeCallbacksApplied.getClass());
      Mono<Tuple2<Long,Long>> queryOrSave;
      long noVersion=Long.MIN_VALUE;
      if (stateMachine.hasProcessedValue(relatedValueToStore)) {
        queryOrSave=Mono.just(stateMachine.getInternalId(relatedObjectBeforeCallbacksApplied)).map(id -> Tuples.of(id,noVersion));
      }
 else {
        queryOrSave=saveRelatedNode(newRelatedObject,targetEntity).map(entity -> Tuples.of(entity.id(),targetEntity.hasVersionProperty() ? entity.get(targetEntity.getVersionProperty().getPropertyName()).asLong() : noVersion));
      }
      return queryOrSave.flatMap(idAndVersion -> {
        long relatedInternalId=idAndVersion.getT1();
        stateMachine.markValueAsProcessed(relatedValueToStore,relatedInternalId);
        PersistentPropertyAccessor<?> targetPropertyAccessor=targetEntity.getPropertyAccessor(newRelatedObject);
        if (targetEntity.isUsingInternalIds()) {
          targetPropertyAccessor.setProperty(targetEntity.getRequiredIdProperty(),relatedInternalId);
          stateMachine.markValueAsProcessedAs(newRelatedObject,targetPropertyAccessor.getBean());
        }
        if (targetEntity.hasVersionProperty() && idAndVersion.getT2() != noVersion) {
          targetPropertyAccessor.setProperty(targetEntity.getVersionProperty(),idAndVersion.getT2());
        }
        Object idValue=idProperty != null ? relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).getProperty(idProperty) : null;
        boolean isNewRelationship=idValue == null;
        CreateRelationshipStatementHolder statementHolder=neo4jMappingContext.createStatement(sourceEntity,relationshipContext,relatedValueToStore,isNewRelationship);
        return neo4jClient.query(renderer.render(statementHolder.getStatement())).bind(convertIdValues(sourceEntity.getRequiredIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).bind(relatedInternalId).to(Constants.TO_ID_PARAMETER_NAME).bind(idValue).to(Constants.NAME_OF_KNOWN_RELATIONSHIP_PARAM).bindAll(statementHolder.getProperties()).fetchAs(Long.class).one().flatMap(relationshipInternalId -> {
          if (idProperty != null && isNewRelationship) {
            relationshipContext.getRelationshipPropertiesPropertyAccessor(relatedValueToStore).setProperty(idProperty,relationshipInternalId);
          }
          Mono<Object> nestedRelationshipsSignal=null;
          if (processState != ProcessState.PROCESSED_ALL_VALUES) {
            nestedRelationshipsSignal=processNestedRelations(targetEntity,targetPropertyAccessor,targetEntity.isNew(newRelatedObject),stateMachine,s -> true);
          }
          Mono<Object> getRelationshipOrRelationshipPropertiesObject=Mono.fromSupplier(() -> MappingSupport.getRelationshipOrRelationshipPropertiesObject(neo4jMappingContext,relationshipDescription.hasRelationshipProperties(),relationshipProperty.isDynamicAssociation(),relatedValueToStore,targetPropertyAccessor));
          return nestedRelationshipsSignal == null ? getRelationshipOrRelationshipPropertiesObject : nestedRelationshipsSignal.then(getRelationshipOrRelationshipPropertiesObject);
        }
);
      }
).doOnNext(potentiallyRecreatedRelatedObject -> {
        RelationshipHandler handler=ctx.get(CONTEXT_RELATIONSHIP_HANDLER);
        handler.handle(relatedValueToStore,relatedObjectBeforeCallbacksApplied,potentiallyRecreatedRelatedObject);
      }
);
    }
).then(Mono.fromSupplier(() -> ctx.<RelationshipHandler>get(CONTEXT_RELATIONSHIP_HANDLER))));
  }
).contextWrite(ctx -> {
    RelationshipHandler relationshipHandler=RelationshipHandler.forProperty(relationshipProperty,rawValue);
    return ctx.put(CONTEXT_RELATIONSHIP_HANDLER,relationshipHandler);
  }
);
  relationshipCreationCreations.add(relationshipCreation);
}
 @AT@ 32865 @LENGTH@ 7858
---DEL VariableDeclarationStatement@@RelationshipDescription relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse(); @AT@ 33340 @LENGTH@ 106
------DEL SimpleType@@RelationshipDescription @AT@ 33340 @LENGTH@ 23
------DEL VariableDeclarationFragment@@relationshipDescriptionObverse=relationshipDescription.getRelationshipObverse() @AT@ 33364 @LENGTH@ 81
---------DEL SimpleName@@relationshipDescriptionObverse @AT@ 33364 @LENGTH@ 30
---------DEL MethodInvocation@@relationshipDescription.getRelationshipObverse() @AT@ 33397 @LENGTH@ 48
------------DEL SimpleName@@Name:relationshipDescription @AT@ 33397 @LENGTH@ 23
------------DEL SimpleName@@MethodName:getRelationshipObverse:[] @AT@ 33421 @LENGTH@ 24
---UPD VariableDeclarationStatement@@ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore); @TO@ ProcessState processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore); @AT@ 33972 @LENGTH@ 114
------UPD VariableDeclarationFragment@@processState=stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore) @TO@ processState=stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore) @AT@ 33985 @LENGTH@ 100
---------UPD MethodInvocation@@stateMachine.getStateOf(fromId,relationshipDescriptionObverse,relatedValuesToStore) @TO@ stateMachine.getStateOf(fromId,relationshipDescription,relatedValuesToStore) @AT@ 34000 @LENGTH@ 85
------------UPD SimpleName@@MethodName:getStateOf:[fromId, relationshipDescriptionObverse, relatedValuesToStore] @TO@ MethodName:getStateOf:[fromId, relationshipDescription, relatedValuesToStore] @AT@ 34013 @LENGTH@ 72
---------------UPD SimpleName@@relationshipDescriptionObverse @TO@ relationshipDescription @AT@ 34032 @LENGTH@ 30


UPD TypeDeclaration@@[@org.junit.Ignore("HIVE-23924"), public]TestStatsReplicationScenariosACID, TestStatsReplicationScenarios @TO@ [public]TestStatsReplicationScenariosACID, TestStatsReplicationScenarios @AT@ 1230 @LENGTH@ 961
---DEL SingleMemberAnnotation@@@org.junit.Ignore("HIVE-23924") @AT@ 1230 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 1858 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 1858 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 1858 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 1863 @LENGTH@ 30


UPD MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ public, void, MethodName:configure,  @AT@ 7379 @LENGTH@ 145
---DEL SimpleType@@Exception @AT@ 7410 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/").build()),new DefaultWebFilterChain((e) -> Mono.empty())) @TO@ ClassInstanceCreation:new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/").build()),new DefaultWebFilterChain((e) -> Mono.empty(),Collections.emptyList())) @AT@ 3874 @LENGTH@ 149
---UPD ClassInstanceCreation@@WebFilterExchange[MockServerWebExchange.from(MockServerHttpRequest.get("/").build()), new DefaultWebFilterChain((e) -> Mono.empty())] @TO@ WebFilterExchange[MockServerWebExchange.from(MockServerHttpRequest.get("/").build()), new DefaultWebFilterChain((e) -> Mono.empty(),Collections.emptyList())] @AT@ 3881 @LENGTH@ 141
------UPD ClassInstanceCreation@@DefaultWebFilterChain[(e) -> Mono.empty()] @TO@ DefaultWebFilterChain[(e) -> Mono.empty(), Collections.emptyList()] @AT@ 3975 @LENGTH@ 46
---------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@DefaultWebFilterChain[(e) -> Mono.empty()] @AT@ 4053 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4053 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 4065 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2183 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2183 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2183 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2188 @LENGTH@ 30


UPD VariableDeclarationStatement@@final C configuration=getConfiguration(); @TO@ final C configuration=(C)getConfiguration().copy(); @AT@ 1709 @LENGTH@ 43
---UPD VariableDeclarationFragment@@configuration=getConfiguration() @TO@ configuration=(C)getConfiguration().copy() @AT@ 1717 @LENGTH@ 34
------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 1733 @LENGTH@ 18
------INS CastExpression@@(C)getConfiguration().copy() @TO@ VariableDeclarationFragment@@configuration=getConfiguration() @AT@ 1771 @LENGTH@ 29
---------INS SimpleType@@C @TO@ CastExpression@@(C)getConfiguration().copy() @AT@ 1772 @LENGTH@ 1
---------INS MethodInvocation@@getConfiguration().copy() @TO@ CastExpression@@(C)getConfiguration().copy() @AT@ 1775 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().copy() @AT@ 1775 @LENGTH@ 18
------------INS SimpleName@@MethodName:copy:[] @TO@ MethodInvocation@@getConfiguration().copy() @AT@ 1794 @LENGTH@ 6


UPD TryStatement@@try (InputStream fileInputStream=new FileInputStream(filePayload)){  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @TO@ try (InputStream fileInputStream=new FileInputStream(filePayload)){  if (filePosition > 0) {    long skipped=fileInputStream.skip(filePosition);    if (skipped == 0) {      LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);    }  }  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @AT@ 9993 @LENGTH@ 717
---INS IfStatement@@if (filePosition > 0) {  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @TO@ TryStatement@@try (InputStream fileInputStream=new FileInputStream(filePayload)){  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }  String etag=getEndpoint().getS3Client().uploadPart(uploadRequest,RequestBody.fromInputStream(fileInputStream,partSize)).eTag();  CompletedPart partUpload=CompletedPart.builder().partNumber(part).eTag(etag).build();  completedParts.add(partUpload);  filePosition+=partSize;}  @AT@ 10084 @LENGTH@ 302
------INS InfixExpression@@filePosition > 0 @TO@ IfStatement@@if (filePosition > 0) {  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @AT@ 10088 @LENGTH@ 16
---------INS SimpleName@@filePosition @TO@ InfixExpression@@filePosition > 0 @AT@ 10088 @LENGTH@ 12
---------INS Operator@@> @TO@ InfixExpression@@filePosition > 0 @AT@ 10100 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@filePosition > 0 @AT@ 10103 @LENGTH@ 1
------INS Block@@ThenBody:{  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @TO@ IfStatement@@if (filePosition > 0) {  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @AT@ 10106 @LENGTH@ 280
---------MOV VariableDeclarationStatement@@long skipped=fileInputStream.skip(filePosition); @TO@ Block@@ThenBody:{  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @AT@ 10084 @LENGTH@ 50
---------MOV IfStatement@@if (skipped == 0) {  LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);} @TO@ Block@@ThenBody:{  long skipped=fileInputStream.skip(filePosition);  if (skipped == 0) {    LOG.warn("While trying to upload the file {} file, 0 bytes were skipped",keyName);  }} @AT@ 10155 @LENGTH@ 149


UPD ExpressionStatement@@MethodInvocation:slices.put(field,new Integer[]{offset,size}) @TO@ MethodInvocation:slices.put(field,Arrays.asList(offset,size)) @AT@ 5603 @LENGTH@ 50
---UPD MethodInvocation@@slices.put(field,new Integer[]{offset,size}) @TO@ slices.put(field,Arrays.asList(offset,size)) @AT@ 5603 @LENGTH@ 49
------UPD SimpleName@@MethodName:put:[field, new Integer[]{offset,size}] @TO@ MethodName:put:[field, Arrays.asList(offset,size)] @AT@ 5610 @LENGTH@ 42
---------DEL ArrayCreation@@new Integer[]{offset,size} @AT@ 5621 @LENGTH@ 30
------------DEL ArrayType@@Integer[] @AT@ 5625 @LENGTH@ 9
---------------DEL SimpleType@@Integer @AT@ 5625 @LENGTH@ 7
------------DEL ArrayInitializer@@{offset,size} @AT@ 5635 @LENGTH@ 16
---------------DEL SimpleName@@offset @AT@ 5637 @LENGTH@ 6
---------------DEL SimpleName@@size @AT@ 5645 @LENGTH@ 4
---------INS MethodInvocation@@Arrays.asList(offset,size) @TO@ SimpleName@@MethodName:put:[field, new Integer[]{offset,size}] @AT@ 5646 @LENGTH@ 27
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(offset,size) @AT@ 5646 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[offset, size] @TO@ MethodInvocation@@Arrays.asList(offset,size) @AT@ 5653 @LENGTH@ 20
---------------INS SimpleName@@offset @TO@ SimpleName@@MethodName:asList:[offset, size] @AT@ 5660 @LENGTH@ 6
---------------INS SimpleName@@size @TO@ SimpleName@@MethodName:asList:[offset, size] @AT@ 5668 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:httpDisableStreamCache, Exception,  @TO@ public, void, MethodName:httpDisableStreamCache,  @AT@ 2495 @LENGTH@ 876
---DEL SimpleType@@Exception @AT@ 2539 @LENGTH@ 9
---INS VariableDeclarationStatement@@TypeConverter converter=context.getTypeConverter(); @TO@ MethodDeclaration@@public, void, MethodName:httpDisableStreamCache, Exception,  @AT@ 3065 @LENGTH@ 53
------INS SimpleType@@TypeConverter @TO@ VariableDeclarationStatement@@TypeConverter converter=context.getTypeConverter(); @AT@ 3065 @LENGTH@ 13
------INS VariableDeclarationFragment@@converter=context.getTypeConverter() @TO@ VariableDeclarationStatement@@TypeConverter converter=context.getTypeConverter(); @AT@ 3079 @LENGTH@ 38
---------INS SimpleName@@converter @TO@ VariableDeclarationFragment@@converter=context.getTypeConverter() @AT@ 3079 @LENGTH@ 9
---------INS MethodInvocation@@context.getTypeConverter() @TO@ VariableDeclarationFragment@@converter=context.getTypeConverter() @AT@ 3091 @LENGTH@ 26
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getTypeConverter() @AT@ 3091 @LENGTH@ 7
------------INS SimpleName@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@context.getTypeConverter() @AT@ 3099 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertThrows(TypeConversionException.class,() -> converter.convertTo(String.class,exchange,is),"Should have thrown an exception") @TO@ MethodDeclaration@@public, void, MethodName:httpDisableStreamCache, Exception,  @AT@ 3127 @LENGTH@ 150
------MOV MethodInvocation@@assertEquals("camel rocks!",context.getTypeConverter().convertTo(String.class,exchange,is)) @TO@ ExpressionStatement@@MethodInvocation:assertThrows(TypeConversionException.class,() -> converter.convertTo(String.class,exchange,is),"Should have thrown an exception") @AT@ 3157 @LENGTH@ 94
---DEL TryStatement@@try {  assertEquals("camel rocks!",context.getTypeConverter().convertTo(String.class,exchange,is));  fail("Should fail");} catch (TypeConversionException e) {} @AT@ 3139 @LENGTH@ 226
------DEL ExpressionStatement@@MethodInvocation:assertEquals("camel rocks!",context.getTypeConverter().convertTo(String.class,exchange,is)) @AT@ 3157 @LENGTH@ 95
------DEL ExpressionStatement@@MethodInvocation:fail("Should fail") @AT@ 3265 @LENGTH@ 20
---------DEL MethodInvocation@@fail("Should fail") @AT@ 3265 @LENGTH@ 19
------------DEL SimpleName@@MethodName:fail:["Should fail"] @AT@ 3265 @LENGTH@ 19
---------------DEL StringLiteral@@"Should fail" @AT@ 3270 @LENGTH@ 13
------DEL CatchClause@@catch (TypeConversionException e) {} @AT@ 3296 @LENGTH@ 69
---------DEL SingleVariableDeclaration@@TypeConversionException e @AT@ 3303 @LENGTH@ 25
------------DEL SimpleType@@TypeConversionException @AT@ 3303 @LENGTH@ 23
------------DEL SimpleName@@e @AT@ 3327 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalWritingConverter()) @TO@ MethodInvocation:neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalConverter()) @AT@ 12735 @LENGTH@ 197
---UPD MethodInvocation@@neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalWritingConverter()) @TO@ neo4jMappingContext.getConversionService().writeValue(idValues,ClassTypeInformation.from(idValues.getClass()),idProperty == null ? null : idProperty.getOptionalConverter()) @AT@ 12742 @LENGTH@ 189
------UPD SimpleName@@MethodName:writeValue:[idValues, ClassTypeInformation.from(idValues.getClass()), idProperty == null ? null : idProperty.getOptionalWritingConverter()] @TO@ MethodName:writeValue:[idValues, ClassTypeInformation.from(idValues.getClass()), idProperty == null ? null : idProperty.getOptionalConverter()] @AT@ 12785 @LENGTH@ 146
---------UPD ConditionalExpression@@idProperty == null ? null : idProperty.getOptionalWritingConverter() @TO@ idProperty == null ? null : idProperty.getOptionalConverter() @AT@ 12862 @LENGTH@ 68
------------UPD MethodInvocation@@idProperty.getOptionalWritingConverter() @TO@ idProperty.getOptionalConverter() @AT@ 12890 @LENGTH@ 40
---------------UPD SimpleName@@MethodName:getOptionalWritingConverter:[] @TO@ MethodName:getOptionalConverter:[] @AT@ 12901 @LENGTH@ 29


DEL MethodDeclaration@@QueryMixin<Q>, MethodName:getQueryMixin,  @AT@ 5559 @LENGTH@ 41
---DEL ParameterizedType@@QueryMixin<Q> @AT@ 5545 @LENGTH@ 13
------DEL SimpleType@@QueryMixin @AT@ 5545 @LENGTH@ 10
------DEL SimpleType@@Q @AT@ 5556 @LENGTH@ 1
---DEL SimpleName@@MethodName:getQueryMixin @AT@ 5559 @LENGTH@ 13
---DEL ReturnStatement@@SimpleName:queryMixin @AT@ 5579 @LENGTH@ 18
------DEL SimpleName@@queryMixin @AT@ 5586 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "].") @TO@ MethodInvocation:LOG.debug("Loading ApplicationContext for locations [{}].",StringUtils.arrayToCommaDelimitedString(locations)) @AT@ 5009 @LENGTH@ 116
---UPD MethodInvocation@@LOG.debug("Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "].") @TO@ LOG.debug("Loading ApplicationContext for locations [{}].",StringUtils.arrayToCommaDelimitedString(locations)) @AT@ 5009 @LENGTH@ 115
------UPD SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @TO@ MethodName:debug:["Loading ApplicationContext for locations [{}].", StringUtils.arrayToCommaDelimitedString(locations)] @AT@ 5013 @LENGTH@ 111
---------DEL InfixExpression@@"Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]." @AT@ 5019 @LENGTH@ 104
------------DEL StringLiteral@@"Loading ApplicationContext for locations [" @AT@ 5019 @LENGTH@ 44
------------DEL Operator@@+ @AT@ 5063 @LENGTH@ 1
------------DEL StringLiteral@@"]." @AT@ 5119 @LENGTH@ 4
---------INS StringLiteral@@"Loading ApplicationContext for locations [{}]." @TO@ SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @AT@ 5019 @LENGTH@ 48
---------MOV MethodInvocation@@StringUtils.arrayToCommaDelimitedString(locations) @TO@ SimpleName@@MethodName:debug:["Loading ApplicationContext for locations [" + StringUtils.arrayToCommaDelimitedString(locations) + "]."] @AT@ 5066 @LENGTH@ 50


DEL FieldDeclaration@@private, static, final, String, [JBOSS_MODULES_DIR_NAME="modules"] @AT@ 2681 @LENGTH@ 63
---DEL Modifier@@private @AT@ 2681 @LENGTH@ 7
---DEL Modifier@@static @AT@ 2689 @LENGTH@ 6
---DEL Modifier@@final @AT@ 2696 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 2702 @LENGTH@ 6
---DEL VariableDeclarationFragment@@JBOSS_MODULES_DIR_NAME="modules" @AT@ 2709 @LENGTH@ 34
------DEL SimpleName@@JBOSS_MODULES_DIR_NAME @AT@ 2709 @LENGTH@ 22
------DEL StringLiteral@@"modules" @AT@ 2734 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:primary.testEventCounts(primaryDbName,lastReplId,null,null,12) @TO@ MethodInvocation:primary.testEventCounts(primaryDbName,lastReplId,null,null,14) @AT@ 83875 @LENGTH@ 67
---UPD MethodInvocation@@primary.testEventCounts(primaryDbName,lastReplId,null,null,12) @TO@ primary.testEventCounts(primaryDbName,lastReplId,null,null,14) @AT@ 83875 @LENGTH@ 66
------UPD SimpleName@@MethodName:testEventCounts:[primaryDbName, lastReplId, null, null, 12] @TO@ MethodName:testEventCounts:[primaryDbName, lastReplId, null, null, 14] @AT@ 83883 @LENGTH@ 58
---------UPD NumberLiteral@@12 @TO@ 14 @AT@ 83938 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:this.allowedSecurityPolicies=allowedSecurityPolicies != null ? new HashSet<>(other.allowedSecurityPolicies) : null @TO@ Assignment:this.allowedSecurityPolicies=new HashSet<>(other.allowedSecurityPolicies) @AT@ 4940 @LENGTH@ 117
---UPD Assignment@@this.allowedSecurityPolicies=allowedSecurityPolicies != null ? new HashSet<>(other.allowedSecurityPolicies) : null @TO@ this.allowedSecurityPolicies=new HashSet<>(other.allowedSecurityPolicies) @AT@ 4940 @LENGTH@ 116
------DEL ConditionalExpression@@allowedSecurityPolicies != null ? new HashSet<>(other.allowedSecurityPolicies) : null @AT@ 4971 @LENGTH@ 85
---------DEL InfixExpression@@allowedSecurityPolicies != null @AT@ 4971 @LENGTH@ 31
------------DEL SimpleName@@allowedSecurityPolicies @AT@ 4971 @LENGTH@ 23
------------DEL Operator@@!= @AT@ 4994 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 4998 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 5052 @LENGTH@ 4
------MOV ClassInstanceCreation@@HashSet<>[other.allowedSecurityPolicies] @TO@ Assignment@@this.allowedSecurityPolicies=allowedSecurityPolicies != null ? new HashSet<>(other.allowedSecurityPolicies) : null @AT@ 5005 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:assertFalse(Files.isWritable(testDir),() -> String.format("Directory '%s' should NOT be Writable, permissions are %s ",testDir,permissions)) @TO@ MethodInvocation:assertFalse(Files.isWritable(testDir),() -> String.format("Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ",testDir,file,permissions)) @AT@ 4362 @LENGTH@ 144
---UPD MethodInvocation@@assertFalse(Files.isWritable(testDir),() -> String.format("Directory '%s' should NOT be Writable, permissions are %s ",testDir,permissions)) @TO@ assertFalse(Files.isWritable(testDir),() -> String.format("Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ",testDir,file,permissions)) @AT@ 4362 @LENGTH@ 143
------UPD SimpleName@@MethodName:assertFalse:[Files.isWritable(testDir), () -> String.format("Directory '%s' should NOT be Writable, permissions are %s ",testDir,permissions)] @TO@ MethodName:assertFalse:[Files.isWritable(testDir), () -> String.format("Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ",testDir,file,permissions)] @AT@ 4362 @LENGTH@ 143
---------UPD LambdaExpression@@() -> String.format("Directory '%s' should NOT be Writable, permissions are %s ",testDir,permissions) @TO@ () -> String.format("Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ",testDir,file,permissions) @AT@ 4401 @LENGTH@ 103
------------UPD MethodInvocation@@String.format("Directory '%s' should NOT be Writable, permissions are %s ",testDir,permissions) @TO@ String.format("Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ",testDir,file,permissions) @AT@ 4407 @LENGTH@ 97
---------------UPD SimpleName@@MethodName:format:["Directory '%s' should NOT be Writable, permissions are %s ", testDir, permissions] @TO@ MethodName:format:["Parent directory '%s' of '%s' should NOT be Writable, permissions are %s ", testDir, file, permissions] @AT@ 4414 @LENGTH@ 90
------------------UPD StringLiteral@@"Directory '%s' should NOT be Writable, permissions are %s " @TO@ "Parent directory '%s' of '%s' should NOT be Writable, permissions are %s " @AT@ 4421 @LENGTH@ 60
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:format:["Directory '%s' should NOT be Writable, permissions are %s ", testDir, permissions] @AT@ 4523 @LENGTH@ 4


UPD TypeDeclaration@@CamelMetricsGauge, [Gauge<Object>] @TO@ [static]CamelMetricsGauge, [Gauge<Object>] @AT@ 3046 @LENGTH@ 359
---INS Modifier@@static @TO@ TypeDeclaration@@CamelMetricsGauge, [Gauge<Object>] @AT@ 3040 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:main.invoke(null,arguments) @TO@ MethodInvocation:main.invoke(null,new Object[]{arguments}) @AT@ 17383 @LENGTH@ 29
---UPD MethodInvocation@@main.invoke(null,arguments) @TO@ main.invoke(null,new Object[]{arguments}) @AT@ 17383 @LENGTH@ 28
------UPD SimpleName@@MethodName:invoke:[null, arguments] @TO@ MethodName:invoke:[null, new Object[]{arguments}] @AT@ 17388 @LENGTH@ 23
---------INS ArrayCreation@@new Object[]{arguments} @TO@ SimpleName@@MethodName:invoke:[null, arguments] @AT@ 17401 @LENGTH@ 26
------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{arguments} @AT@ 17405 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 17405 @LENGTH@ 6
------------INS ArrayInitializer@@{arguments} @TO@ ArrayCreation@@new Object[]{arguments} @AT@ 17414 @LENGTH@ 13
---------------INS SimpleName@@arguments @TO@ ArrayInitializer@@{arguments} @AT@ 17416 @LENGTH@ 9
---------DEL SimpleName@@arguments @AT@ 17401 @LENGTH@ 9


INS IfStatement@@if (!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null) {  return (T)value;} @TO@ MethodDeclaration@@private, T, T, MethodName:parseValueOrGet, String value, ParameterBindingContext bindingContext, Supplier<T> defaultValue,  @AT@ 7832 @LENGTH@ 104
---INS InfixExpression@@!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null @TO@ IfStatement@@if (!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null) {  return (T)value;} @AT@ 7835 @LENGTH@ 73
------INS PrefixExpression@@!value.startsWith("#") @TO@ InfixExpression@@!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null @AT@ 7835 @LENGTH@ 22
---------INS Operator@@! @TO@ PrefixExpression@@!value.startsWith("#") @AT@ 7835 @LENGTH@ 1
---------INS MethodInvocation@@value.startsWith("#") @TO@ PrefixExpression@@!value.startsWith("#") @AT@ 7836 @LENGTH@ 21
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.startsWith("#") @AT@ 7836 @LENGTH@ 5
------------INS SimpleName@@MethodName:startsWith:["#"] @TO@ MethodInvocation@@value.startsWith("#") @AT@ 7842 @LENGTH@ 15
---------------INS StringLiteral@@"#" @TO@ SimpleName@@MethodName:startsWith:["#"] @AT@ 7853 @LENGTH@ 3
------INS Operator@@&& @TO@ InfixExpression@@!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null @AT@ 7857 @LENGTH@ 2
------INS InfixExpression@@ExpressionUtils.detectExpression(value) == null @TO@ InfixExpression@@!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null @AT@ 7861 @LENGTH@ 47
---------INS MethodInvocation@@ExpressionUtils.detectExpression(value) @TO@ InfixExpression@@ExpressionUtils.detectExpression(value) == null @AT@ 7861 @LENGTH@ 39
------------INS SimpleName@@Name:ExpressionUtils @TO@ MethodInvocation@@ExpressionUtils.detectExpression(value) @AT@ 7861 @LENGTH@ 15
------------INS SimpleName@@MethodName:detectExpression:[value] @TO@ MethodInvocation@@ExpressionUtils.detectExpression(value) @AT@ 7877 @LENGTH@ 23
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:detectExpression:[value] @AT@ 7894 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@ExpressionUtils.detectExpression(value) == null @AT@ 7900 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@ExpressionUtils.detectExpression(value) == null @AT@ 7904 @LENGTH@ 4
---INS Block@@ThenBody:{  return (T)value;} @TO@ IfStatement@@if (!value.startsWith("#") && ExpressionUtils.detectExpression(value) == null) {  return (T)value;} @AT@ 7910 @LENGTH@ 26
------INS ReturnStatement@@CastExpression:(T)value @TO@ Block@@ThenBody:{  return (T)value;} @AT@ 7915 @LENGTH@ 17
---------INS CastExpression@@(T)value @TO@ ReturnStatement@@CastExpression:(T)value @AT@ 7922 @LENGTH@ 9
------------INS SimpleType@@T @TO@ CastExpression@@(T)value @AT@ 7923 @LENGTH@ 1
------------INS SimpleName@@value @TO@ CastExpression@@(T)value @AT@ 7926 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertThat(result.getErrors().iterator().next().getErrorCode()).isEqualTo(OAuth2ErrorCodes.INVALID_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenConfiguredWithClockSkewThenValidatesUsingThatSkew,  @AT@ 4467 @LENGTH@ 106
---INS MethodInvocation@@assertThat(result.getErrors().iterator().next().getErrorCode()).isEqualTo(OAuth2ErrorCodes.INVALID_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getErrors().iterator().next().getErrorCode()).isEqualTo(OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 4467 @LENGTH@ 105
------INS MethodInvocation@@MethodName:assertThat:[result.getErrors().iterator().next().getErrorCode()] @TO@ MethodInvocation@@assertThat(result.getErrors().iterator().next().getErrorCode()).isEqualTo(OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 4467 @LENGTH@ 63
---------INS MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @TO@ MethodInvocation@@MethodName:assertThat:[result.getErrors().iterator().next().getErrorCode()] @AT@ 4478 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @AT@ 4478 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @AT@ 4478 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:getErrors:[] @TO@ MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @AT@ 4478 @LENGTH@ 18
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @AT@ 4478 @LENGTH@ 6
------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@result.getErrors().iterator().next().getErrorCode() @AT@ 4515 @LENGTH@ 14
------INS SimpleName@@MethodName:isEqualTo:[OAuth2ErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@assertThat(result.getErrors().iterator().next().getErrorCode()).isEqualTo(OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 4531 @LENGTH@ 41
---------INS QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:isEqualTo:[OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 4541 @LENGTH@ 30
------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 4541 @LENGTH@ 16
------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 4558 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new IndexOutOfBoundsException("Array Size=" + array.length + ", offset="+ off+ ", length="+ len) @TO@ ClassInstanceCreation:new IndexOutOfBoundsException("Array size=" + array.length + ", offset="+ off+ ", length="+ len) @AT@ 9668 @LENGTH@ 126
---UPD ClassInstanceCreation@@IndexOutOfBoundsException["Array Size=" + array.length + ", offset="+ off+ ", length="+ len] @TO@ IndexOutOfBoundsException["Array size=" + array.length + ", offset="+ off+ ", length="+ len] @AT@ 9674 @LENGTH@ 119
------UPD InfixExpression@@"Array Size=" + array.length + ", offset="+ off+ ", length="+ len @TO@ "Array size=" + array.length + ", offset="+ off+ ", length="+ len @AT@ 9704 @LENGTH@ 88
---------UPD StringLiteral@@"Array Size=" @TO@ "Array size=" @AT@ 9704 @LENGTH@ 13


INS IfStatement@@if (property.isDocumentReference()) {  return (T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert);} @TO@ MethodDeclaration@@public, T, T, MethodName:getPropertyValue, MongoPersistentProperty property,  @AT@ 61621 @LENGTH@ 172
---INS MethodInvocation@@property.isDocumentReference() @TO@ IfStatement@@if (property.isDocumentReference()) {  return (T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert);} @AT@ 61625 @LENGTH@ 30
------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isDocumentReference() @AT@ 61625 @LENGTH@ 8
------INS SimpleName@@MethodName:isDocumentReference:[] @TO@ MethodInvocation@@property.isDocumentReference() @AT@ 61634 @LENGTH@ 21
---INS Block@@ThenBody:{  return (T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert);} @TO@ IfStatement@@if (property.isDocumentReference()) {  return (T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert);} @AT@ 61657 @LENGTH@ 136
------INS ReturnStatement@@CastExpression:(T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @TO@ Block@@ThenBody:{  return (T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert);} @AT@ 61663 @LENGTH@ 125
---------INS CastExpression@@(T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @TO@ ReturnStatement@@CastExpression:(T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @AT@ 61670 @LENGTH@ 117
------------INS SimpleType@@T @TO@ CastExpression@@(T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @AT@ 61671 @LENGTH@ 1
------------INS MethodInvocation@@dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @TO@ CastExpression@@(T)dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @AT@ 61674 @LENGTH@ 113
---------------INS SimpleName@@Name:dbRefResolver @TO@ MethodInvocation@@dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @AT@ 61674 @LENGTH@ 13
---------------INS SimpleName@@MethodName:resolveReference:[property, accessor.get(property), referenceLookupDelegate, context::convert] @TO@ MethodInvocation@@dbRefResolver.resolveReference(property,accessor.get(property),referenceLookupDelegate,context::convert) @AT@ 61688 @LENGTH@ 99
------------------INS SimpleName@@property @TO@ SimpleName@@MethodName:resolveReference:[property, accessor.get(property), referenceLookupDelegate, context::convert] @AT@ 61705 @LENGTH@ 8
------------------INS MethodInvocation@@accessor.get(property) @TO@ SimpleName@@MethodName:resolveReference:[property, accessor.get(property), referenceLookupDelegate, context::convert] @AT@ 61715 @LENGTH@ 22
---------------------INS SimpleName@@Name:accessor @TO@ MethodInvocation@@accessor.get(property) @AT@ 61715 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:get:[property] @TO@ MethodInvocation@@accessor.get(property) @AT@ 61724 @LENGTH@ 13
------------------------INS SimpleName@@property @TO@ SimpleName@@MethodName:get:[property] @AT@ 61728 @LENGTH@ 8
------------------INS SimpleName@@referenceLookupDelegate @TO@ SimpleName@@MethodName:resolveReference:[property, accessor.get(property), referenceLookupDelegate, context::convert] @AT@ 61739 @LENGTH@ 23


UPD IfStatement@@if (property.isDbReference()) {  document.put(simpleKey,value != null ? createDBRef(value,property) : null);} else {  if (conversionService.canConvert(value.getClass(),DocumentPointer.class)) {    document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer());  } else {    document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier());  }} @TO@ if (property.isDbReference()) {  document.put(simpleKey,value != null ? createDBRef(value,property) : null);} else {  document.put(simpleKey,documentPointerFactory.computePointer(mappingContext,property,value,property.getActualType()).getPointer());} @AT@ 33507 @LENGTH@ 536
---DEL Block@@ElseBody:{  if (conversionService.canConvert(value.getClass(),DocumentPointer.class)) {    document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer());  } else {    document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier());  }} @AT@ 33633 @LENGTH@ 410
------DEL IfStatement@@if (conversionService.canConvert(value.getClass(),DocumentPointer.class)) {  document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer());} else {  document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier());} @AT@ 33640 @LENGTH@ 397
---------DEL MethodInvocation@@conversionService.canConvert(value.getClass(),DocumentPointer.class) @AT@ 33644 @LENGTH@ 69
------------DEL SimpleName@@Name:conversionService @AT@ 33644 @LENGTH@ 17
------------DEL SimpleName@@MethodName:canConvert:[value.getClass(), DocumentPointer.class] @AT@ 33662 @LENGTH@ 51
---------------DEL MethodInvocation@@value.getClass() @AT@ 33673 @LENGTH@ 16
------------------DEL SimpleName@@Name:value @AT@ 33673 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 33679 @LENGTH@ 10
---------------DEL TypeLiteral@@DocumentPointer.class @AT@ 33691 @LENGTH@ 21
---------DEL Block@@ThenBody:{  document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer());} @AT@ 33715 @LENGTH@ 109
------------DEL ExpressionStatement@@MethodInvocation:document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer()) @AT@ 33723 @LENGTH@ 94
---------------DEL MethodInvocation@@document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer()) @AT@ 33723 @LENGTH@ 93
------------------DEL SimpleName@@Name:document @AT@ 33723 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:put:[simpleKey, conversionService.convert(value,DocumentPointer.class).getPointer()] @AT@ 33732 @LENGTH@ 84
---------------------DEL SimpleName@@simpleKey @AT@ 33736 @LENGTH@ 9
---------------------DEL MethodInvocation@@conversionService.convert(value,DocumentPointer.class).getPointer() @AT@ 33747 @LENGTH@ 68
------------------------DEL MethodInvocation@@MethodName:convert:[value, DocumentPointer.class] @AT@ 33747 @LENGTH@ 55
---------------------------DEL SimpleName@@value @AT@ 33773 @LENGTH@ 5
---------------------------DEL TypeLiteral@@DocumentPointer.class @AT@ 33780 @LENGTH@ 21
------------------------DEL SimpleName@@Name:conversionService @AT@ 33747 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:getPointer:[] @AT@ 33803 @LENGTH@ 12
---MOV Block@@ElseBody:{  document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier());} @TO@ IfStatement@@if (property.isDbReference()) {  document.put(simpleKey,value != null ? createDBRef(value,property) : null);} else {  if (conversionService.canConvert(value.getClass(),DocumentPointer.class)) {    document.put(simpleKey,conversionService.convert(value,DocumentPointer.class).getPointer());  } else {    document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier());  }} @AT@ 33830 @LENGTH@ 207
------UPD ExpressionStatement@@MethodInvocation:document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier()) @TO@ MethodInvocation:document.put(simpleKey,documentPointerFactory.computePointer(mappingContext,property,value,property.getActualType()).getPointer()) @AT@ 33879 @LENGTH@ 151
---------UPD MethodInvocation@@document.put(simpleKey,mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier()) @TO@ document.put(simpleKey,documentPointerFactory.computePointer(mappingContext,property,value,property.getActualType()).getPointer()) @AT@ 33879 @LENGTH@ 150
------------UPD SimpleName@@MethodName:put:[simpleKey, mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier()] @TO@ MethodName:put:[simpleKey, documentPointerFactory.computePointer(mappingContext,property,value,property.getActualType()).getPointer()] @AT@ 33888 @LENGTH@ 141
---------------UPD MethodInvocation@@mappingContext.getPersistentEntity(property.getAssociationTargetType()).getIdentifierAccessor(value).getIdentifier() @TO@ documentPointerFactory.computePointer(mappingContext,property,value,property.getActualType()).getPointer() @AT@ 33903 @LENGTH@ 125
------------------DEL MethodInvocation@@MethodName:getIdentifierAccessor:[value] @AT@ 33903 @LENGTH@ 109
---------------------DEL SimpleName@@value @AT@ 34006 @LENGTH@ 5
------------------UPD MethodInvocation@@MethodName:getPersistentEntity:[property.getAssociationTargetType()] @TO@ MethodName:computePointer:[mappingContext, property, value, property.getActualType()] @AT@ 33903 @LENGTH@ 71
---------------------INS SimpleName@@mappingContext @TO@ MethodInvocation@@MethodName:getPersistentEntity:[property.getAssociationTargetType()] @AT@ 33521 @LENGTH@ 14
---------------------INS SimpleName@@property @TO@ MethodInvocation@@MethodName:getPersistentEntity:[property.getAssociationTargetType()] @AT@ 33537 @LENGTH@ 8
---------------------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:getPersistentEntity:[property.getAssociationTargetType()] @AT@ 33547 @LENGTH@ 5
---------------------UPD MethodInvocation@@property.getAssociationTargetType() @TO@ property.getActualType() @AT@ 33938 @LENGTH@ 35
------------------------UPD SimpleName@@MethodName:getAssociationTargetType:[] @TO@ MethodName:getActualType:[] @AT@ 33947 @LENGTH@ 26
------------------UPD SimpleName@@Name:mappingContext @TO@ Name:documentPointerFactory @AT@ 33903 @LENGTH@ 14
------------------UPD SimpleName@@MethodName:getIdentifier:[] @TO@ MethodName:getPointer:[] @AT@ 34013 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertThat(logbackCapture.getFormattedMessages()).anyMatch(message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title")) @TO@ MethodInvocation:assertThat(logbackCapture.getFormattedMessages()).anyMatch(message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title")) @AT@ 9245 @LENGTH@ 161
---UPD MethodInvocation@@assertThat(logbackCapture.getFormattedMessages()).anyMatch(message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title")) @TO@ assertThat(logbackCapture.getFormattedMessages()).anyMatch(message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title")) @AT@ 9245 @LENGTH@ 160
------UPD SimpleName@@MethodName:anyMatch:[message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title")] @TO@ MethodName:anyMatch:[message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title")] @AT@ 9295 @LENGTH@ 110
---------UPD LambdaExpression@@message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title") @TO@ message -> message.contains("MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title") @AT@ 9304 @LENGTH@ 100
------------UPD MethodInvocation@@message.contains("MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title") @TO@ message.contains("MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title") @AT@ 9320 @LENGTH@ 84
---------------UPD SimpleName@@MethodName:contains:["MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title"] @TO@ MethodName:contains:["MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title"] @AT@ 9328 @LENGTH@ 76
------------------UPD StringLiteral@@"MATCH (movie:`Movie`) WHERE movie.title = $0 RETURN movie{.title" @TO@ "MATCH (movie:`Movie`) WHERE movie.title = $title RETURN movie{.title" @AT@ 9337 @LENGTH@ 66


UPD VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @TO@ Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 27226 @LENGTH@ 153
---DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27226 @LENGTH@ 38
---INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=TemplateSupport.getAndDecorateMappingFunction(neo4jMappingContext,domainType,resultType); @AT@ 27262 @LENGTH@ 48
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 27262 @LENGTH@ 8
------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 27271 @LENGTH@ 38
---------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27226 @LENGTH@ 10
---------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27237 @LENGTH@ 10
---------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27249 @LENGTH@ 11
---------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 27262 @LENGTH@ 1


INS MethodDeclaration@@private, void, MethodName:givenExtractPrincipalWillReturn,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), public]ServerX509AuthenticationConverterTests,  @AT@ 2032 @LENGTH@ 135
---MOV ExpressionStatement@@MethodInvocation:given(this.principalExtractor.extractPrincipal(any())).willReturn("Luke Taylor") @TO@ MethodDeclaration@@private, void, MethodName:givenExtractPrincipalWillReturn,  @AT@ 2029 @LENGTH@ 81
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:givenExtractPrincipalWillReturn,  @AT@ 2032 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:givenExtractPrincipalWillReturn,  @AT@ 2040 @LENGTH@ 4
---INS SimpleName@@MethodName:givenExtractPrincipalWillReturn @TO@ MethodDeclaration@@private, void, MethodName:givenExtractPrincipalWillReturn,  @AT@ 2045 @LENGTH@ 31


INS MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @TO@ TypeDeclaration@@[@ExtendWith(SpringExtension.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 46903 @LENGTH@ 380
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 46898 @LENGTH@ 4
---INS SimpleName@@MethodName:resultProjectionWithOptionalIsExcecutedCorrectly @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 46903 @LENGTH@ 48
---INS ExpressionStatement@@MethodInvocation:carter.setAddress(new Address("batman","robin","gotham")) @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 46959 @LENGTH@ 60
------INS MethodInvocation@@carter.setAddress(new Address("batman","robin","gotham")) @TO@ ExpressionStatement@@MethodInvocation:carter.setAddress(new Address("batman","robin","gotham")) @AT@ 46959 @LENGTH@ 59
---------INS SimpleName@@Name:carter @TO@ MethodInvocation@@carter.setAddress(new Address("batman","robin","gotham")) @AT@ 46959 @LENGTH@ 6
---------INS SimpleName@@MethodName:setAddress:[new Address("batman","robin","gotham")] @TO@ MethodInvocation@@carter.setAddress(new Address("batman","robin","gotham")) @AT@ 46966 @LENGTH@ 52
------------INS ClassInstanceCreation@@Address["batman", "robin", "gotham"] @TO@ SimpleName@@MethodName:setAddress:[new Address("batman","robin","gotham")] @AT@ 46977 @LENGTH@ 40
---------------INS New@@new @TO@ ClassInstanceCreation@@Address["batman", "robin", "gotham"] @AT@ 46977 @LENGTH@ 3
---------------INS SimpleType@@Address @TO@ ClassInstanceCreation@@Address["batman", "robin", "gotham"] @AT@ 46981 @LENGTH@ 7
---------------INS StringLiteral@@"batman" @TO@ ClassInstanceCreation@@Address["batman", "robin", "gotham"] @AT@ 46989 @LENGTH@ 8
---------------INS StringLiteral@@"robin" @TO@ ClassInstanceCreation@@Address["batman", "robin", "gotham"] @AT@ 46999 @LENGTH@ 7
---------------INS StringLiteral@@"gotham" @TO@ ClassInstanceCreation@@Address["batman", "robin", "gotham"] @AT@ 47008 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:repository.save(carter) @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 47022 @LENGTH@ 24
------INS MethodInvocation@@repository.save(carter) @TO@ ExpressionStatement@@MethodInvocation:repository.save(carter) @AT@ 47022 @LENGTH@ 23
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(carter) @AT@ 47022 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[carter] @TO@ MethodInvocation@@repository.save(carter) @AT@ 47033 @LENGTH@ 12
------------INS SimpleName@@carter @TO@ SimpleName@@MethodName:save:[carter] @AT@ 47038 @LENGTH@ 6
---INS VariableDeclarationStatement@@PersonSummaryWithOptional result=repository.findSummaryWithOptionalByLastname("Beauford"); @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 47050 @LENGTH@ 92
------INS SimpleType@@PersonSummaryWithOptional @TO@ VariableDeclarationStatement@@PersonSummaryWithOptional result=repository.findSummaryWithOptionalByLastname("Beauford"); @AT@ 47050 @LENGTH@ 25
------INS VariableDeclarationFragment@@result=repository.findSummaryWithOptionalByLastname("Beauford") @TO@ VariableDeclarationStatement@@PersonSummaryWithOptional result=repository.findSummaryWithOptionalByLastname("Beauford"); @AT@ 47076 @LENGTH@ 65
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findSummaryWithOptionalByLastname("Beauford") @AT@ 47076 @LENGTH@ 6
---------INS MethodInvocation@@repository.findSummaryWithOptionalByLastname("Beauford") @TO@ VariableDeclarationFragment@@result=repository.findSummaryWithOptionalByLastname("Beauford") @AT@ 47085 @LENGTH@ 56
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findSummaryWithOptionalByLastname("Beauford") @AT@ 47085 @LENGTH@ 10
------------INS SimpleName@@MethodName:findSummaryWithOptionalByLastname:["Beauford"] @TO@ MethodInvocation@@repository.findSummaryWithOptionalByLastname("Beauford") @AT@ 47096 @LENGTH@ 45
---------------INS StringLiteral@@"Beauford" @TO@ SimpleName@@MethodName:findSummaryWithOptionalByLastname:["Beauford"] @AT@ 47130 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(result).isNotNull() @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 47146 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result).isNotNull() @AT@ 47146 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodInvocation@@assertThat(result).isNotNull() @AT@ 47146 @LENGTH@ 18
------------INS SimpleName@@result @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 47157 @LENGTH@ 6
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(result).isNotNull() @AT@ 47165 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getAddress()).isPresent() @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 47180 @LENGTH@ 44
------INS MethodInvocation@@assertThat(result.getAddress()).isPresent() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getAddress()).isPresent() @AT@ 47180 @LENGTH@ 43
---------INS MethodInvocation@@MethodName:assertThat:[result.getAddress()] @TO@ MethodInvocation@@assertThat(result.getAddress()).isPresent() @AT@ 47180 @LENGTH@ 31
------------INS MethodInvocation@@result.getAddress() @TO@ MethodInvocation@@MethodName:assertThat:[result.getAddress()] @AT@ 47191 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getAddress() @AT@ 47191 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getAddress:[] @TO@ MethodInvocation@@result.getAddress() @AT@ 47198 @LENGTH@ 12
---------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@assertThat(result.getAddress()).isPresent() @AT@ 47212 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getFirstname()).contains("Carter") @TO@ MethodDeclaration@@void, MethodName:resultProjectionWithOptionalIsExcecutedCorrectly,  @AT@ 47227 @LENGTH@ 53
------INS MethodInvocation@@assertThat(result.getFirstname()).contains("Carter") @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getFirstname()).contains("Carter") @AT@ 47227 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:assertThat:[result.getFirstname()] @TO@ MethodInvocation@@assertThat(result.getFirstname()).contains("Carter") @AT@ 47227 @LENGTH@ 33
------------INS MethodInvocation@@result.getFirstname() @TO@ MethodInvocation@@MethodName:assertThat:[result.getFirstname()] @AT@ 47238 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getFirstname() @AT@ 47238 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getFirstname:[] @TO@ MethodInvocation@@result.getFirstname() @AT@ 47245 @LENGTH@ 14
---------INS SimpleName@@MethodName:contains:["Carter"] @TO@ MethodInvocation@@assertThat(result.getFirstname()).contains("Carter") @AT@ 47261 @LENGTH@ 18
------------INS StringLiteral@@"Carter" @TO@ SimpleName@@MethodName:contains:["Carter"] @AT@ 47270 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @TO@ MethodDeclaration@@protected, void, MethodName:doRun, MockEndpoint mockEndpoint, int size, InterruptedException,  @AT@ 2360 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(5000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(5000) @AT@ 2360 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 2360 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[5000] @TO@ MethodInvocation@@Thread.sleep(5000) @AT@ 2367 @LENGTH@ 11
---------INS NumberLiteral@@5000 @TO@ SimpleName@@MethodName:sleep:[5000] @AT@ 2373 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:this.metricCollector.reportFailoverStart("REPL_LOAD",metricMap,new FailoverMetaData(new Path(dumpDirectory),conf)) @TO@ MethodInvocation:this.metricCollector.reportFailoverStart("REPL_LOAD",metricMap,new FailoverMetaData(new Path(dumpDirectory,ReplUtils.REPL_HIVE_BASE_DIR),conf)) @AT@ 4570 @LENGTH@ 132
---UPD MethodInvocation@@this.metricCollector.reportFailoverStart("REPL_LOAD",metricMap,new FailoverMetaData(new Path(dumpDirectory),conf)) @TO@ this.metricCollector.reportFailoverStart("REPL_LOAD",metricMap,new FailoverMetaData(new Path(dumpDirectory,ReplUtils.REPL_HIVE_BASE_DIR),conf)) @AT@ 4570 @LENGTH@ 131
------UPD SimpleName@@MethodName:reportFailoverStart:["REPL_LOAD", metricMap, new FailoverMetaData(new Path(dumpDirectory),conf)] @TO@ MethodName:reportFailoverStart:["REPL_LOAD", metricMap, new FailoverMetaData(new Path(dumpDirectory,ReplUtils.REPL_HIVE_BASE_DIR),conf)] @AT@ 4591 @LENGTH@ 110
---------UPD ClassInstanceCreation@@FailoverMetaData[new Path(dumpDirectory), conf] @TO@ FailoverMetaData[new Path(dumpDirectory,ReplUtils.REPL_HIVE_BASE_DIR), conf] @AT@ 4649 @LENGTH@ 51
------------UPD ClassInstanceCreation@@Path[dumpDirectory] @TO@ Path[dumpDirectory, ReplUtils.REPL_HIVE_BASE_DIR] @AT@ 4670 @LENGTH@ 23
---------------INS QualifiedName@@ReplUtils.REPL_HIVE_BASE_DIR @TO@ ClassInstanceCreation@@Path[dumpDirectory] @AT@ 4694 @LENGTH@ 28
------------------INS SimpleName@@ReplUtils @TO@ QualifiedName@@ReplUtils.REPL_HIVE_BASE_DIR @AT@ 4694 @LENGTH@ 9
------------------INS SimpleName@@REPL_HIVE_BASE_DIR @TO@ QualifiedName@@ReplUtils.REPL_HIVE_BASE_DIR @AT@ 4704 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Putting ${file:name}").to(getFtpUrl(false)) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Putting ${file:name}").to(getFtpUrl(false)) @AT@ 2413 @LENGTH@ 86
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Putting ${file:name}").to(getFtpUrl(false)) @TO@ from("file:src/test/data?noop=true").log("Putting ${file:name}").to(getFtpUrl(false)) @AT@ 2413 @LENGTH@ 85
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2413 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2418 @LENGTH@ 30


UPD IfStatement@@if ((applyLdifs != null) && (applyLdifs.value() != null)) {  String[] ldifs=applyLdifs.value();  String dnStart="dn:";  StringBuilder sb=new StringBuilder();  for (int i=0; i < ldifs.length; ) {    String s=ldifs[i++].trim();    if (s.startsWith(dnStart)) {      sb.append(s).append('\n');      while (i < ldifs.length) {        s=ldifs[i++];        if (!s.startsWith(dnStart)) {          sb.append(s).append('\n');        } else {          break;        }      }      LOG.debug("Applying {} to {}",sb,desc.getDisplayName());      injectEntries(service,sb.toString());      sb.setLength(0);      i--;    }  }} @TO@ if (applyLdifs != null && applyLdifs.value() != null) {  String[] ldifs=applyLdifs.value();  String dnStart="dn:";  StringBuilder sb=new StringBuilder();  for (int i=0; i < ldifs.length; ) {    String s=ldifs[i++].trim();    if (s.startsWith(dnStart)) {      sb.append(s).append('\n');      while (i < ldifs.length) {        s=ldifs[i++];        if (!s.startsWith(dnStart)) {          sb.append(s).append('\n');        } else {          break;        }      }      LOG.debug("Applying {} to {}",sb,desc.getDisplayName());      injectEntries(service,sb.toString());      sb.setLength(0);      i--;    }  }} @AT@ 18081 @LENGTH@ 1034
---UPD InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @TO@ applyLdifs != null && applyLdifs.value() != null @AT@ 18085 @LENGTH@ 52
------INS InfixExpression@@applyLdifs != null @TO@ InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @AT@ 18081 @LENGTH@ 18
---------MOV SimpleName@@applyLdifs @TO@ InfixExpression@@applyLdifs != null @AT@ 18086 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@applyLdifs != null @AT@ 18096 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@applyLdifs != null @AT@ 18100 @LENGTH@ 4
------DEL ParenthesizedExpression@@(applyLdifs != null) @AT@ 18085 @LENGTH@ 20
---------DEL InfixExpression@@applyLdifs != null @AT@ 18086 @LENGTH@ 18
------DEL ParenthesizedExpression@@(applyLdifs.value() != null) @AT@ 18109 @LENGTH@ 28
------MOV InfixExpression@@applyLdifs.value() != null @TO@ InfixExpression@@(applyLdifs != null) && (applyLdifs.value() != null) @AT@ 18110 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2520 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2520 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2520 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2525 @LENGTH@ 30


UPD ThrowStatement@@ClassInstanceCreation:new ItemStreamException("Unable to close the the ItemWriter",ioe) @TO@ ClassInstanceCreation:new ItemStreamException("Unable to close the ItemWriter",ioe) @AT@ 14525 @LENGTH@ 73
---UPD ClassInstanceCreation@@ItemStreamException["Unable to close the the ItemWriter", ioe] @TO@ ItemStreamException["Unable to close the ItemWriter", ioe] @AT@ 14531 @LENGTH@ 66
------UPD StringLiteral@@"Unable to close the the ItemWriter" @TO@ "Unable to close the ItemWriter" @AT@ 14555 @LENGTH@ 36


UPD FieldDeclaration@@private, IterationBudget, [iterationBudget] @TO@ private, final, IterationBudget, [iterationBudget] @AT@ 936 @LENGTH@ 40
---INS Modifier@@final @TO@ FieldDeclaration@@private, IterationBudget, [iterationBudget] @AT@ 1252 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("A valid issue type id is required, actual: id(" + issueTypeId + "), name("+ issueTypeName+ ")") @TO@ ClassInstanceCreation:new IllegalArgumentException("A valid issue type id is required, actual: id(" + null + "), name("+ issueTypeName+ ")") @AT@ 3670 @LENGTH@ 155
---UPD ClassInstanceCreation@@IllegalArgumentException["A valid issue type id is required, actual: id(" + issueTypeId + "), name("+ issueTypeName+ ")"] @TO@ IllegalArgumentException["A valid issue type id is required, actual: id(" + null + "), name("+ issueTypeName+ ")"] @AT@ 3676 @LENGTH@ 148
------UPD InfixExpression@@"A valid issue type id is required, actual: id(" + issueTypeId + "), name("+ issueTypeName+ ")" @TO@ "A valid issue type id is required, actual: id(" + null + "), name("+ issueTypeName+ ")" @AT@ 3726 @LENGTH@ 97
---------DEL SimpleName@@issueTypeId @AT@ 3777 @LENGTH@ 11
---------INS NullLiteral@@null @TO@ InfixExpression@@"A valid issue type id is required, actual: id(" + issueTypeId + "), name("+ issueTypeName+ ")" @AT@ 3777 @LENGTH@ 4


UPD Block@@ThenBody:{  if (component) {    for (    BaseOptionModel bo : findConfigurations(options)) {      w.write(createGetOrCreateConfiguration(en,bo.getConfigurationClass(),bo.getConfigurationField()));      w.write("\n");    }  }  w.write("    @Override\n");  w.write("    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        " + en + " target = ("+ en+ ") obj;\n");    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String getOrSet=option.getName();      getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);      String setterLambda=setterLambda(getOrSet,option.getJavaType(),option.getSetterMethod(),option.getConfigurationField(),component,option.getType());      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": %s; return true;\n",option.getName(),setterLambda));    }    if (hasSuper) {      w.write("        default: return super.configure(camelContext, obj, name, value, ignoreCase);\n");    } else {      w.write("        default: return false;\n");    }    w.write("        }\n");  }  w.write("    }\n");  if (extended) {    w.write("\n");    w.write("    @Override\n");    w.write("    public Map<String, Object> getAllOptions(Object target) {\n");    if (model != null || !hasSuper) {      w.write("        return ALL_OPTIONS;\n");      w.write("    }\n");    } else {      w.write("        Map<String, Object> answer = super.getAllOptions(target);\n");      if (!options.isEmpty()) {        for (        BaseOptionModel option : options) {          String type=option.getJavaType();          if (type.indexOf('<') != -1) {            type=type.substring(0,type.indexOf('<'));          }          type=type.replace('$','.');          w.write(String.format("        answer.put(\"%s\", %s.class);\n",option.getName(),type));        }        w.write("        return answer;\n");        w.write("    }\n");      }    }  }  if (bootstrap && extended) {    w.write("\n");    w.write("    public static void clearBootstrapConfigurers() {\n");    w.write("        ALL_OPTIONS.clear();\n");    w.write("    }\n");  }  if (options.stream().anyMatch(BaseOptionModel::isAutowired)) {    w.write("\n");    w.write("    @Override\n");    w.write("    public String[] getAutowiredNames() {\n");    String names=options.stream().filter(BaseOptionModel::isAutowired).map(BaseOptionModel::getName).map(PropertyConfigurerGenerator::quote).collect(Collectors.joining(","));    w.write("        return new String[]{");    w.write(names);    w.write("};\n");    w.write("    }\n");  }  w.write("\n");  w.write("    @Override\n");  w.write("    public Class<?> getOptionType(String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String type=option.getJavaType();      if (type.indexOf('<') != -1) {        type=type.substring(0,type.indexOf('<'));      }      type=type.replace('$','.');      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),type));    }    if (hasSuper) {      w.write("        default: return super.getOptionType(name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  }  w.write("    }\n");  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        " + en + " target = ("+ en+ ") obj;\n");    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String getOrSet=option.getName();      getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);      String getterLambda=getterLambda(getOrSet,option.getJavaType(),option.getGetterMethod(),option.getConfigurationField(),component);      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s;\n",option.getName(),getterLambda));    }    if (hasSuper) {      w.write("        default: return super.getOptionValue(obj, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  }  w.write("    }\n");  boolean hasNestedTypes=options.stream().map(BaseOptionModel::getNestedType).anyMatch(s -> s != null && !s.trim().isEmpty());  if (hasNestedTypes) {    w.write("\n");    w.write("    @Override\n");    w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");    if (!options.isEmpty()) {      w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");      for (      BaseOptionModel option : options) {        String nestedType=option.getNestedType();        if (nestedType != null && !nestedType.isEmpty()) {          nestedType=nestedType.replace('$','.');          if (!option.getName().toLowerCase().equals(option.getName())) {            w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));          }          w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));        }      }      if (hasSuper) {        w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");      } else {        w.write("        default: return null;\n");      }      w.write("        }\n");    }    w.write("    }\n");  }} @TO@ ThenBody:{  if (component) {    for (    BaseOptionModel bo : findConfigurations(options)) {      w.write(createGetOrCreateConfiguration(en,bo.getConfigurationClass(),bo.getConfigurationField()));      w.write("\n");    }  }  w.write("    @Override\n");  w.write("    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        " + en + " target = ("+ en+ ") obj;\n");    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String getOrSet=option.getName();      getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);      String setterLambda=setterLambda(getOrSet,option.getJavaType(),option.getSetterMethod(),option.getConfigurationField(),component,option.getType());      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": %s; return true;\n",option.getName(),setterLambda));    }    if (hasSuper) {      w.write("        default: return super.configure(camelContext, obj, name, value, ignoreCase);\n");    } else {      w.write("        default: return false;\n");    }    w.write("        }\n");  } else {    w.write("        return false;\n");  }  w.write("    }\n");  if (extended) {    w.write("\n");    w.write("    @Override\n");    w.write("    public Map<String, Object> getAllOptions(Object target) {\n");    if (model != null || !hasSuper) {      w.write("        return ALL_OPTIONS;\n");      w.write("    }\n");    } else {      w.write("        Map<String, Object> answer = super.getAllOptions(target);\n");      if (!options.isEmpty()) {        for (        BaseOptionModel option : options) {          String type=option.getJavaType();          if (type.indexOf('<') != -1) {            type=type.substring(0,type.indexOf('<'));          }          type=type.replace('$','.');          w.write(String.format("        answer.put(\"%s\", %s.class);\n",option.getName(),type));        }        w.write("        return answer;\n");        w.write("    }\n");      }    }  }  if (bootstrap && extended) {    w.write("\n");    w.write("    public static void clearBootstrapConfigurers() {\n");    w.write("        ALL_OPTIONS.clear();\n");    w.write("    }\n");  }  if (options.stream().anyMatch(BaseOptionModel::isAutowired)) {    w.write("\n");    w.write("    @Override\n");    w.write("    public String[] getAutowiredNames() {\n");    String names=options.stream().filter(BaseOptionModel::isAutowired).map(BaseOptionModel::getName).map(PropertyConfigurerGenerator::quote).collect(Collectors.joining(","));    w.write("        return new String[]{");    w.write(names);    w.write("};\n");    w.write("    }\n");  }  w.write("\n");  w.write("    @Override\n");  w.write("    public Class<?> getOptionType(String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String type=option.getJavaType();      if (type.indexOf('<') != -1) {        type=type.substring(0,type.indexOf('<'));      }      type=type.replace('$','.');      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),type));    }    if (hasSuper) {      w.write("        default: return super.getOptionType(name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  } else {    w.write("        return null;\n");  }  w.write("    }\n");  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        " + en + " target = ("+ en+ ") obj;\n");    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String getOrSet=option.getName();      getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);      String getterLambda=getterLambda(getOrSet,option.getJavaType(),option.getGetterMethod(),option.getConfigurationField(),component);      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s;\n",option.getName(),getterLambda));    }    if (hasSuper) {      w.write("        default: return super.getOptionValue(obj, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  } else {    w.write("        return null;\n");  }  w.write("    }\n");  boolean hasNestedTypes=options.stream().map(BaseOptionModel::getNestedType).anyMatch(s -> s != null && !s.trim().isEmpty());  if (hasNestedTypes) {    w.write("\n");    w.write("    @Override\n");    w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");    if (!options.isEmpty()) {      w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");      for (      BaseOptionModel option : options) {        String nestedType=option.getNestedType();        if (nestedType != null && !nestedType.isEmpty()) {          nestedType=nestedType.replace('$','.');          if (!option.getName().toLowerCase().equals(option.getName())) {            w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));          }          w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));        }      }      if (hasSuper) {        w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");      } else {        w.write("        default: return null;\n");      }      w.write("        }\n");    } else {      w.write("        return null;\n");    }    w.write("    }\n");  }} @AT@ 3694 @LENGTH@ 8896
---UPD IfStatement@@if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String setterLambda=setterLambda(getOrSet,option.getJavaType(),option.getSetterMethod(),option.getConfigurationField(),component,option.getType());    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": %s; return true;\n",option.getName(),setterLambda));  }  if (hasSuper) {    w.write("        default: return super.configure(camelContext, obj, name, value, ignoreCase);\n");  } else {    w.write("        default: return false;\n");  }  w.write("        }\n");} @TO@ if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String setterLambda=setterLambda(getOrSet,option.getJavaType(),option.getSetterMethod(),option.getConfigurationField(),component,option.getType());    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": %s; return true;\n",option.getName(),setterLambda));  }  if (hasSuper) {    w.write("        default: return super.configure(camelContext, obj, name, value, ignoreCase);\n");  } else {    w.write("        default: return false;\n");  }  w.write("        }\n");} else {  w.write("        return false;\n");} @AT@ 4407 @LENGTH@ 1265
------INS Block@@ElseBody:{  w.write("        return false;\n");} @TO@ IfStatement@@if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String setterLambda=setterLambda(getOrSet,option.getJavaType(),option.getSetterMethod(),option.getConfigurationField(),component,option.getType());    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": %s; return true;\n",option.getName(),setterLambda));  }  if (hasSuper) {    w.write("        default: return super.configure(camelContext, obj, name, value, ignoreCase);\n");  } else {    w.write("        default: return false;\n");  }  w.write("        }\n");} @AT@ 5678 @LENGTH@ 67
---------INS ExpressionStatement@@MethodInvocation:w.write("        return false;\n") @TO@ Block@@ElseBody:{  w.write("        return false;\n");} @AT@ 5696 @LENGTH@ 35
------------INS MethodInvocation@@w.write("        return false;\n") @TO@ ExpressionStatement@@MethodInvocation:w.write("        return false;\n") @AT@ 5696 @LENGTH@ 34
---------------INS SimpleName@@Name:w @TO@ MethodInvocation@@w.write("        return false;\n") @AT@ 5696 @LENGTH@ 1
---------------INS SimpleName@@MethodName:write:["        return false;\n"] @TO@ MethodInvocation@@w.write("        return false;\n") @AT@ 5698 @LENGTH@ 32
------------------INS StringLiteral@@"        return false;\n" @TO@ SimpleName@@MethodName:write:["        return false;\n"] @AT@ 5704 @LENGTH@ 25
---UPD IfStatement@@if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String type=option.getJavaType();    if (type.indexOf('<') != -1) {      type=type.substring(0,type.indexOf('<'));    }    type=type.replace('$','.');    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),type));  }  if (hasSuper) {    w.write("        default: return super.getOptionType(name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @TO@ if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String type=option.getJavaType();    if (type.indexOf('<') != -1) {      type=type.substring(0,type.indexOf('<'));    }    type=type.replace('$','.');    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),type));  }  if (hasSuper) {    w.write("        default: return super.getOptionType(name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} else {  w.write("        return null;\n");} @AT@ 8246 @LENGTH@ 1115
------INS Block@@ElseBody:{  w.write("        return null;\n");} @TO@ IfStatement@@if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String type=option.getJavaType();    if (type.indexOf('<') != -1) {      type=type.substring(0,type.indexOf('<'));    }    type=type.replace('$','.');    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),type));  }  if (hasSuper) {    w.write("        default: return super.getOptionType(name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @AT@ 9440 @LENGTH@ 66
---------INS ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @TO@ Block@@ElseBody:{  w.write("        return null;\n");} @AT@ 9458 @LENGTH@ 34
------------INS MethodInvocation@@w.write("        return null;\n") @TO@ ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @AT@ 9458 @LENGTH@ 33
---------------INS SimpleName@@Name:w @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 9458 @LENGTH@ 1
---------------INS SimpleName@@MethodName:write:["        return null;\n"] @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 9460 @LENGTH@ 31
------------------INS StringLiteral@@"        return null;\n" @TO@ SimpleName@@MethodName:write:["        return null;\n"] @AT@ 9466 @LENGTH@ 24
---UPD IfStatement@@if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String getterLambda=getterLambda(getOrSet,option.getJavaType(),option.getGetterMethod(),option.getConfigurationField(),component);    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s;\n",option.getName(),getterLambda));  }  if (hasSuper) {    w.write("        default: return super.getOptionValue(obj, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @TO@ if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String getterLambda=getterLambda(getOrSet,option.getJavaType(),option.getGetterMethod(),option.getConfigurationField(),component);    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s;\n",option.getName(),getterLambda));  }  if (hasSuper) {    w.write("        default: return super.getOptionValue(obj, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} else {  w.write("        return null;\n");} @AT@ 9634 @LENGTH@ 1224
------INS Block@@ElseBody:{  w.write("        return null;\n");} @TO@ IfStatement@@if (!options.isEmpty()) {  w.write("        " + en + " target = ("+ en+ ") obj;\n");  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String getOrSet=option.getName();    getOrSet=Character.toUpperCase(getOrSet.charAt(0)) + getOrSet.substring(1);    String getterLambda=getterLambda(getOrSet,option.getJavaType(),option.getGetterMethod(),option.getConfigurationField(),component);    if (!option.getName().toLowerCase().equals(option.getName())) {      w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));    }    w.write(String.format("        case \"%s\": return %s;\n",option.getName(),getterLambda));  }  if (hasSuper) {    w.write("        default: return super.getOptionValue(obj, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @AT@ 11009 @LENGTH@ 67
---------INS ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @TO@ Block@@ElseBody:{  w.write("        return null;\n");} @AT@ 11027 @LENGTH@ 34
------------INS MethodInvocation@@w.write("        return null;\n") @TO@ ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @AT@ 11027 @LENGTH@ 33
---------------INS SimpleName@@Name:w @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 11027 @LENGTH@ 1
---------------INS SimpleName@@MethodName:write:["        return null;\n"] @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 11029 @LENGTH@ 31
------------------INS StringLiteral@@"        return null;\n" @TO@ SimpleName@@MethodName:write:["        return null;\n"] @AT@ 11035 @LENGTH@ 24
---UPD IfStatement@@if (hasNestedTypes) {  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String nestedType=option.getNestedType();      if (nestedType != null && !nestedType.isEmpty()) {        nestedType=nestedType.replace('$','.');        if (!option.getName().toLowerCase().equals(option.getName())) {          w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));        }        w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));      }    }    if (hasSuper) {      w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  }  w.write("    }\n");} @TO@ if (hasNestedTypes) {  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String nestedType=option.getNestedType();      if (nestedType != null && !nestedType.isEmpty()) {        nestedType=nestedType.replace('$','.');        if (!option.getName().toLowerCase().equals(option.getName())) {          w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));        }        w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));      }    }    if (hasSuper) {      w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  } else {    w.write("        return null;\n");  }  w.write("    }\n");} @AT@ 11160 @LENGTH@ 1420
------UPD Block@@ThenBody:{  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String nestedType=option.getNestedType();      if (nestedType != null && !nestedType.isEmpty()) {        nestedType=nestedType.replace('$','.');        if (!option.getName().toLowerCase().equals(option.getName())) {          w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));        }        w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));      }    }    if (hasSuper) {      w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  }  w.write("    }\n");} @TO@ ThenBody:{  w.write("\n");  w.write("    @Override\n");  w.write("    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {\n");  if (!options.isEmpty()) {    w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");    for (    BaseOptionModel option : options) {      String nestedType=option.getNestedType();      if (nestedType != null && !nestedType.isEmpty()) {        nestedType=nestedType.replace('$','.');        if (!option.getName().toLowerCase().equals(option.getName())) {          w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));        }        w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));      }    }    if (hasSuper) {      w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");    } else {      w.write("        default: return null;\n");    }    w.write("        }\n");  } else {    w.write("        return null;\n");  }  w.write("    }\n");} @AT@ 11180 @LENGTH@ 1400
---------UPD IfStatement@@if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String nestedType=option.getNestedType();    if (nestedType != null && !nestedType.isEmpty()) {      nestedType=nestedType.replace('$','.');      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));    }  }  if (hasSuper) {    w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @TO@ if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String nestedType=option.getNestedType();    if (nestedType != null && !nestedType.isEmpty()) {      nestedType=nestedType.replace('$','.');      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));    }  }  if (hasSuper) {    w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} else {  w.write("        return null;\n");} @AT@ 11394 @LENGTH@ 1136
------------INS Block@@ElseBody:{  w.write("        return null;\n");} @TO@ IfStatement@@if (!options.isEmpty()) {  w.write("        switch (ignoreCase ? name.toLowerCase() : name) {\n");  for (  BaseOptionModel option : options) {    String nestedType=option.getNestedType();    if (nestedType != null && !nestedType.isEmpty()) {      nestedType=nestedType.replace('$','.');      if (!option.getName().toLowerCase().equals(option.getName())) {        w.write(String.format("        case \"%s\":\n",option.getName().toLowerCase()));      }      w.write(String.format("        case \"%s\": return %s.class;\n",option.getName(),nestedType));    }  }  if (hasSuper) {    w.write("        default: return super.getCollectionValueType(target, name, ignoreCase);\n");  } else {    w.write("        default: return null;\n");  }  w.write("        }\n");} @AT@ 12754 @LENGTH@ 74
---------------INS ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @TO@ Block@@ElseBody:{  w.write("        return null;\n");} @AT@ 12776 @LENGTH@ 34
------------------INS MethodInvocation@@w.write("        return null;\n") @TO@ ExpressionStatement@@MethodInvocation:w.write("        return null;\n") @AT@ 12776 @LENGTH@ 33
---------------------INS SimpleName@@Name:w @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 12776 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:write:["        return null;\n"] @TO@ MethodInvocation@@w.write("        return null;\n") @AT@ 12778 @LENGTH@ 31
------------------------INS StringLiteral@@"        return null;\n" @TO@ SimpleName@@MethodName:write:["        return null;\n"] @AT@ 12784 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2136 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2136 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2136 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2141 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2326 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2326 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2326 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2331 @LENGTH@ 30


DEL ExpressionStatement@@Assignment:this.maxRetryWaitingTime=maxRetryWaitingTime @AT@ 1211 @LENGTH@ 47
---DEL Assignment@@this.maxRetryWaitingTime=maxRetryWaitingTime @AT@ 1211 @LENGTH@ 46
------DEL FieldAccess@@this.maxRetryWaitingTime @AT@ 1211 @LENGTH@ 24
---------DEL ThisExpression@@this @AT@ 1211 @LENGTH@ 4
---------DEL SimpleName@@maxRetryWaitingTime @AT@ 1216 @LENGTH@ 19
------DEL Operator@@= @AT@ 1235 @LENGTH@ 1
------DEL SimpleName@@maxRetryWaitingTime @AT@ 1238 @LENGTH@ 19


UPD CatchClause@@catch (NoSuchFileException e) {  index=null;  ;} @TO@ catch (NoSuchFileException e) {  index=null;} @AT@ 5478 @LENGTH@ 138


INS ExpressionStatement@@SuperMethodInvocation:super.onDone() @TO@ MethodDeclaration@@protected, void, MethodName:onDone,  @AT@ 7397 @LENGTH@ 15
---INS SuperMethodInvocation@@super.onDone() @TO@ ExpressionStatement@@SuperMethodInvocation:super.onDone() @AT@ 7397 @LENGTH@ 14
------INS SimpleName@@MethodName:onDone:[] @TO@ SuperMethodInvocation@@super.onDone() @AT@ 7403 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:war.addAsWebInfResource(UsersRolesLoginModuleTestCase.class.getPackage(),"web-basic-authn.xml","web.xml") @AT@ 3830 @LENGTH@ 108
---DEL MethodInvocation@@war.addAsWebInfResource(UsersRolesLoginModuleTestCase.class.getPackage(),"web-basic-authn.xml","web.xml") @AT@ 3830 @LENGTH@ 107
------DEL SimpleName@@Name:war @AT@ 3830 @LENGTH@ 3
------DEL SimpleName@@MethodName:addAsWebInfResource:[UsersRolesLoginModuleTestCase.class.getPackage(), "web-basic-authn.xml", "web.xml"] @AT@ 3834 @LENGTH@ 103
---------DEL MethodInvocation@@UsersRolesLoginModuleTestCase.class.getPackage() @AT@ 3854 @LENGTH@ 48
------------DEL TypeLiteral@@UsersRolesLoginModuleTestCase.class @AT@ 3854 @LENGTH@ 35
------------DEL SimpleName@@MethodName:getPackage:[] @AT@ 3890 @LENGTH@ 12
---------DEL StringLiteral@@"web-basic-authn.xml" @AT@ 3904 @LENGTH@ 21
---------DEL StringLiteral@@"web.xml" @AT@ 3927 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @TO@ TypeDeclaration@@[public]SpringCamelContext, DefaultCamelContext[Lifecycle, ApplicationContextAware, Phased, ApplicationListener<ApplicationEvent>, Ordered] @AT@ 4525 @LENGTH@ 407
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 4525 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 4532 @LENGTH@ 4
---INS SimpleName@@MethodName:doBuild @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 4537 @LENGTH@ 7
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 4554 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doBuild() @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 4574 @LENGTH@ 16
------INS SuperMethodInvocation@@super.doBuild() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doBuild() @AT@ 4574 @LENGTH@ 15
---------INS SimpleName@@MethodName:doBuild:[] @TO@ SuperMethodInvocation@@super.doBuild() @AT@ 4580 @LENGTH@ 7
---MOV IfStatement@@if (applicationContext instanceof ConfigurableApplicationContext) {  if (hasComponent("spring-event") == null) {    eventComponent=new EventComponent(applicationContext);    addComponent("spring-event",eventComponent);  }} @TO@ MethodDeclaration@@public, void, MethodName:doBuild, Exception,  @AT@ 7391 @LENGTH@ 327


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @TO@ TypeDeclaration@@[public]TikaProducer, DefaultProducer @AT@ 2154 @LENGTH@ 78
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @AT@ 2154 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @AT@ 2162 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @AT@ 2169 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @AT@ 2175 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(TikaProducer.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(TikaProducer.class)] @AT@ 2182 @LENGTH@ 49
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(TikaProducer.class) @AT@ 2182 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(TikaProducer.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(TikaProducer.class) @AT@ 2188 @LENGTH@ 43
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(TikaProducer.class) @AT@ 2188 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[TikaProducer.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(TikaProducer.class) @AT@ 2202 @LENGTH@ 29
------------INS TypeLiteral@@TikaProducer.class @TO@ SimpleName@@MethodName:getLogger:[TikaProducer.class] @AT@ 2212 @LENGTH@ 18


UPD EnhancedForStatement@@for (Entry<String,Object> evaluatedParam : spelEvaluator.evaluate(parameterAccessor.getValues()).entrySet()) {  Object value;  if (evaluatedParam.getValue() instanceof LiteralReplacement) {    value=evaluatedParam.getValue();  } else {    value=super.convertParameter(evaluatedParam.getValue());  }  resolvedParameters.put(evaluatedParam.getKey(),value);} @TO@ for (Entry<String,Object> evaluatedParam : spelEvaluator.evaluate(parameterAccessor.getValues()).entrySet()) {  Object value=evaluatedParam.getValue();  if (!(evaluatedParam.getValue() instanceof LiteralReplacement)) {    Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);    value=super.convertParameter(evaluatedParam.getValue());  }  resolvedParameters.put(evaluatedParam.getKey(),value);} @AT@ 9236 @LENGTH@ 376
---UPD VariableDeclarationStatement@@Object value; @TO@ Object value=evaluatedParam.getValue(); @AT@ 9351 @LENGTH@ 13
------UPD VariableDeclarationFragment@@value @TO@ value=evaluatedParam.getValue() @AT@ 9358 @LENGTH@ 5
---------INS MethodInvocation@@evaluatedParam.getValue() @TO@ VariableDeclarationFragment@@value @AT@ 9366 @LENGTH@ 25
------------INS SimpleName@@Name:evaluatedParam @TO@ MethodInvocation@@evaluatedParam.getValue() @AT@ 9366 @LENGTH@ 14
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@evaluatedParam.getValue() @AT@ 9381 @LENGTH@ 10
---UPD IfStatement@@if (evaluatedParam.getValue() instanceof LiteralReplacement) {  value=evaluatedParam.getValue();} else {  value=super.convertParameter(evaluatedParam.getValue());} @TO@ if (!(evaluatedParam.getValue() instanceof LiteralReplacement)) {  Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 9368 @LENGTH@ 181
------INS PrefixExpression@@!(evaluatedParam.getValue() instanceof LiteralReplacement) @TO@ IfStatement@@if (evaluatedParam.getValue() instanceof LiteralReplacement) {  value=evaluatedParam.getValue();} else {  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 9400 @LENGTH@ 58
---------INS Operator@@! @TO@ PrefixExpression@@!(evaluatedParam.getValue() instanceof LiteralReplacement) @AT@ 9400 @LENGTH@ 1
---------INS ParenthesizedExpression@@(evaluatedParam.getValue() instanceof LiteralReplacement) @TO@ PrefixExpression@@!(evaluatedParam.getValue() instanceof LiteralReplacement) @AT@ 9401 @LENGTH@ 57
------------MOV InstanceofExpression@@evaluatedParam.getValue() instanceof LiteralReplacement @TO@ ParenthesizedExpression@@(evaluatedParam.getValue() instanceof LiteralReplacement) @AT@ 9372 @LENGTH@ 55
------DEL Block@@ThenBody:{  value=evaluatedParam.getValue();} @AT@ 9429 @LENGTH@ 45
---------DEL ExpressionStatement@@Assignment:value=evaluatedParam.getValue() @AT@ 9435 @LENGTH@ 34
------------DEL Assignment@@value=evaluatedParam.getValue() @AT@ 9435 @LENGTH@ 33
---------------DEL SimpleName@@value @AT@ 9435 @LENGTH@ 5
---------------DEL Operator@@= @AT@ 9440 @LENGTH@ 1
---------------DEL MethodInvocation@@evaluatedParam.getValue() @AT@ 9443 @LENGTH@ 25
------------------DEL SimpleName@@Name:evaluatedParam @AT@ 9443 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 9458 @LENGTH@ 10
------UPD Block@@ElseBody:{  value=super.convertParameter(evaluatedParam.getValue());} @TO@ ThenBody:{  Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 9480 @LENGTH@ 69
---------INS ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @TO@ Block@@ElseBody:{  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 9466 @LENGTH@ 69
------------INS MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @TO@ ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 9466 @LENGTH@ 68
---------------INS SimpleName@@Name:Neo4jQuerySupport @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 9466 @LENGTH@ 17
---------------INS SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 9484 @LENGTH@ 50
------------------INS MethodInvocation@@evaluatedParam.getKey() @TO@ SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @AT@ 9503 @LENGTH@ 23
---------------------INS SimpleName@@Name:evaluatedParam @TO@ MethodInvocation@@evaluatedParam.getKey() @AT@ 9503 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@evaluatedParam.getKey() @AT@ 9518 @LENGTH@ 8
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @AT@ 9528 @LENGTH@ 5


UPD FieldDeclaration@@boolean, [skip] @TO@ private, boolean, [skip] @AT@ 4749 @LENGTH@ 13
---INS Modifier@@private @TO@ FieldDeclaration@@boolean, [skip] @AT@ 4759 @LENGTH@ 7


UPD FieldDeclaration@@private, PostgresConnectorEmbeddedDebeziumConfiguration, [configuration] @TO@ private, PostgresConnectorEmbeddedDebeziumConfiguration, [configuration=new PostgresConnectorEmbeddedDebeziumConfiguration()] @AT@ 1254 @LENGTH@ 69
---UPD VariableDeclarationFragment@@configuration @TO@ configuration=new PostgresConnectorEmbeddedDebeziumConfiguration() @AT@ 1309 @LENGTH@ 13
------INS ClassInstanceCreation@@PostgresConnectorEmbeddedDebeziumConfiguration[] @TO@ VariableDeclarationFragment@@configuration @AT@ 1325 @LENGTH@ 52
---------INS New@@new @TO@ ClassInstanceCreation@@PostgresConnectorEmbeddedDebeziumConfiguration[] @AT@ 1325 @LENGTH@ 3
---------INS SimpleType@@PostgresConnectorEmbeddedDebeziumConfiguration @TO@ ClassInstanceCreation@@PostgresConnectorEmbeddedDebeziumConfiguration[] @AT@ 1329 @LENGTH@ 46


UPD IfStatement@@if ((ldifFiles != null) && (ldifFiles.length > 0)) {  for (  String ldifFile : ldifFiles) {    InputStream is=clazz.getClassLoader().getResourceAsStream(ldifFile);    if (is == null) {      throw new FileNotFoundException("LDIF file '" + ldifFile + "' not found.");    } else {      LdifReader ldifReader=new LdifReader(is);      for (      LdifEntry entry : ldifReader) {        injectEntry(entry,service);      }      ldifReader.close();    }  }} @TO@ if (ldifFiles != null && ldifFiles.length > 0) {  for (  String ldifFile : ldifFiles) {    InputStream is=clazz.getClassLoader().getResourceAsStream(ldifFile);    if (is == null) {      throw new FileNotFoundException("LDIF file '" + ldifFile + "' not found.");    } else {      LdifReader ldifReader=new LdifReader(is);      for (      LdifEntry entry : ldifReader) {        injectEntry(entry,service);      }      ldifReader.close();    }  }} @AT@ 15187 @LENGTH@ 728
---UPD InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @TO@ ldifFiles != null && ldifFiles.length > 0 @AT@ 15191 @LENGTH@ 45
------DEL ParenthesizedExpression@@(ldifFiles != null) @AT@ 15191 @LENGTH@ 19
---------DEL InfixExpression@@ldifFiles != null @AT@ 15192 @LENGTH@ 17
------INS InfixExpression@@ldifFiles != null @TO@ InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @AT@ 15191 @LENGTH@ 17
---------MOV SimpleName@@ldifFiles @TO@ InfixExpression@@ldifFiles != null @AT@ 15192 @LENGTH@ 9
---------MOV Operator@@!= @TO@ InfixExpression@@ldifFiles != null @AT@ 15201 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@ldifFiles != null @AT@ 15205 @LENGTH@ 4
------DEL ParenthesizedExpression@@(ldifFiles.length > 0) @AT@ 15214 @LENGTH@ 22
------MOV InfixExpression@@ldifFiles.length > 0 @TO@ InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @AT@ 15215 @LENGTH@ 20


INS IfStatement@@if (body instanceof Map && isUnmarshalSingleObject()) {  models=new ArrayList<>();  models.add(body);} else if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @TO@ MethodDeclaration@@private, List<Object>, MethodName:getModels, Exchange exchange, Object body,  @AT@ 4844 @LENGTH@ 403
---INS InfixExpression@@body instanceof Map && isUnmarshalSingleObject() @TO@ IfStatement@@if (body instanceof Map && isUnmarshalSingleObject()) {  models=new ArrayList<>();  models.add(body);} else if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @AT@ 4848 @LENGTH@ 48
------INS InstanceofExpression@@body instanceof Map @TO@ InfixExpression@@body instanceof Map && isUnmarshalSingleObject() @AT@ 4848 @LENGTH@ 19
---------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Map @AT@ 4848 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Map @AT@ 4853 @LENGTH@ 10
---------INS SimpleType@@Map @TO@ InstanceofExpression@@body instanceof Map @AT@ 4864 @LENGTH@ 3
------INS Operator@@&& @TO@ InfixExpression@@body instanceof Map && isUnmarshalSingleObject() @AT@ 4867 @LENGTH@ 2
------INS MethodInvocation@@MethodName:isUnmarshalSingleObject:[] @TO@ InfixExpression@@body instanceof Map && isUnmarshalSingleObject() @AT@ 4871 @LENGTH@ 25
---INS Block@@ThenBody:{  models=new ArrayList<>();  models.add(body);} @TO@ IfStatement@@if (body instanceof Map && isUnmarshalSingleObject()) {  models=new ArrayList<>();  models.add(body);} else if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @AT@ 4898 @LENGTH@ 81
------INS ExpressionStatement@@Assignment:models=new ArrayList<>() @TO@ Block@@ThenBody:{  models=new ArrayList<>();  models.add(body);} @AT@ 4912 @LENGTH@ 27
---------INS Assignment@@models=new ArrayList<>() @TO@ ExpressionStatement@@Assignment:models=new ArrayList<>() @AT@ 4912 @LENGTH@ 26
------------INS SimpleName@@models @TO@ Assignment@@models=new ArrayList<>() @AT@ 4912 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@models=new ArrayList<>() @AT@ 4918 @LENGTH@ 1
------------INS ClassInstanceCreation@@ArrayList<>[] @TO@ Assignment@@models=new ArrayList<>() @AT@ 4921 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 4921 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 4925 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 4925 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:models.add(body) @TO@ Block@@ThenBody:{  models=new ArrayList<>();  models.add(body);} @AT@ 4952 @LENGTH@ 17
---------INS MethodInvocation@@models.add(body) @TO@ ExpressionStatement@@MethodInvocation:models.add(body) @AT@ 4952 @LENGTH@ 16
------------INS SimpleName@@Name:models @TO@ MethodInvocation@@models.add(body) @AT@ 4952 @LENGTH@ 6
------------INS SimpleName@@MethodName:add:[body] @TO@ MethodInvocation@@models.add(body) @AT@ 4959 @LENGTH@ 9
---------------INS SimpleName@@body @TO@ SimpleName@@MethodName:add:[body] @AT@ 4963 @LENGTH@ 4
---INS Block@@ElseBody:if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @TO@ IfStatement@@if (body instanceof Map && isUnmarshalSingleObject()) {  models=new ArrayList<>();  models.add(body);} else if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @AT@ 4985 @LENGTH@ 262
------MOV IfStatement@@if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @TO@ Block@@ElseBody:if ((models=exchange.getContext().getTypeConverter().convertTo(List.class,body)) == null) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    models.add(model);  }} @AT@ 4821 @LENGTH@ 262


INS MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @TO@ TypeDeclaration@@[public]Oidc,  @AT@ 11884 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11884 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11891 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11898 @LENGTH@ 7
---INS SimpleName@@MethodName:isOpaqueToken @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11906 @LENGTH@ 13
---INS SingleVariableDeclaration@@String token @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11920 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String token @AT@ 11920 @LENGTH@ 6
------INS SimpleName@@token @TO@ SingleVariableDeclaration@@String token @AT@ 11927 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:new StringTokenizer(token,".").countTokens() != 3 @TO@ MethodDeclaration@@public, static, boolean, MethodName:isOpaqueToken, String token,  @AT@ 11944 @LENGTH@ 58
------INS InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @TO@ ReturnStatement@@InfixExpression:new StringTokenizer(token,".").countTokens() != 3 @AT@ 11951 @LENGTH@ 50
---------INS MethodInvocation@@new StringTokenizer(token,".").countTokens() @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 11951 @LENGTH@ 45
------------INS ClassInstanceCreation@@StringTokenizer[token, "."] @TO@ MethodInvocation@@new StringTokenizer(token,".").countTokens() @AT@ 11951 @LENGTH@ 31
---------------INS New@@new @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11951 @LENGTH@ 3
---------------INS SimpleType@@StringTokenizer @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11955 @LENGTH@ 15
---------------INS SimpleName@@token @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11971 @LENGTH@ 5
---------------INS StringLiteral@@"." @TO@ ClassInstanceCreation@@StringTokenizer[token, "."] @AT@ 11978 @LENGTH@ 3
------------INS SimpleName@@MethodName:countTokens:[] @TO@ MethodInvocation@@new StringTokenizer(token,".").countTokens() @AT@ 11983 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 11996 @LENGTH@ 2
---------INS NumberLiteral@@3 @TO@ InfixExpression@@new StringTokenizer(token,".").countTokens() != 3 @AT@ 12000 @LENGTH@ 1


UPD IfStatement@@if (copy.getUnitOfWork() != null) {  uow=copy.getUnitOfWork();} else {  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @TO@ if (copy.getUnitOfWork() != null) {  uow=copy.getUnitOfWork();} else {  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);  Route route=ExchangeHelper.getRoute(exchange);  if (route != null) {    uow.pushRoute(route);  }} @AT@ 18470 @LENGTH@ 345
---UPD Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @TO@ ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);  Route route=ExchangeHelper.getRoute(exchange);  if (route != null) {    uow.pushRoute(route);  }} @AT@ 18569 @LENGTH@ 246
------INS VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @TO@ Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @AT@ 18931 @LENGTH@ 48
---------INS SimpleType@@Route @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 18931 @LENGTH@ 5
---------INS VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 18937 @LENGTH@ 41
------------INS SimpleName@@route @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 18937 @LENGTH@ 5
------------INS MethodInvocation@@ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 18945 @LENGTH@ 33
---------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 18945 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getRoute:[exchange] @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 18960 @LENGTH@ 18
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getRoute:[exchange] @AT@ 18969 @LENGTH@ 8
------INS IfStatement@@if (route != null) {  uow.pushRoute(route);} @TO@ Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @AT@ 18996 @LENGTH@ 80
---------INS InfixExpression@@route != null @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 19000 @LENGTH@ 13
------------INS SimpleName@@route @TO@ InfixExpression@@route != null @AT@ 19000 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@route != null @AT@ 19005 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@route != null @AT@ 19009 @LENGTH@ 4
---------INS Block@@ThenBody:{  uow.pushRoute(route);} @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 19015 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @TO@ Block@@ThenBody:{  uow.pushRoute(route);} @AT@ 19037 @LENGTH@ 21
---------------INS MethodInvocation@@uow.pushRoute(route) @TO@ ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @AT@ 19037 @LENGTH@ 20
------------------INS SimpleName@@Name:uow @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 19037 @LENGTH@ 3
------------------INS SimpleName@@MethodName:pushRoute:[route] @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 19041 @LENGTH@ 16
---------------------INS SimpleName@@route @TO@ SimpleName@@MethodName:pushRoute:[route] @AT@ 19051 @LENGTH@ 5


UPD FieldDeclaration@@protected, static, final, Map, [byteCodesByName=new HashMap(256)] @TO@ protected, static, final, Map<String,ByteCodeForm>, [byteCodesByName=new HashMap<>(256)] @AT@ 1336 @LENGTH@ 62
---INS ParameterizedType@@Map<String,ByteCodeForm> @TO@ FieldDeclaration@@protected, static, final, Map, [byteCodesByName=new HashMap(256)] @AT@ 1359 @LENGTH@ 25
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ByteCodeForm> @AT@ 1359 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ByteCodeForm> @AT@ 1363 @LENGTH@ 6
------INS SimpleType@@ByteCodeForm @TO@ ParameterizedType@@Map<String,ByteCodeForm> @AT@ 1371 @LENGTH@ 12
---DEL SimpleType@@Map @AT@ 1359 @LENGTH@ 3
---UPD VariableDeclarationFragment@@byteCodesByName=new HashMap(256) @TO@ byteCodesByName=new HashMap<>(256) @AT@ 1363 @LENGTH@ 34
------UPD ClassInstanceCreation@@HashMap[256] @TO@ HashMap<>[256] @AT@ 1381 @LENGTH@ 16
---------DEL SimpleType@@HashMap @AT@ 1385 @LENGTH@ 7
---------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap[256] @AT@ 1407 @LENGTH@ 9
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 1407 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:readServerElement_1_1(readerNS,reader,address,operationList) @TO@ MethodInvocation:readServerElement_18(readerNS,reader,address,operationList) @AT@ 5364 @LENGTH@ 64
---UPD MethodInvocation@@readServerElement_1_1(readerNS,reader,address,operationList) @TO@ readServerElement_18(readerNS,reader,address,operationList) @AT@ 5364 @LENGTH@ 63
------UPD SimpleName@@MethodName:readServerElement_1_1:[readerNS, reader, address, operationList] @TO@ MethodName:readServerElement_18:[readerNS, reader, address, operationList] @AT@ 5364 @LENGTH@ 63


UPD MethodDeclaration@@protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction,  @TO@ protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction,  @AT@ 6145 @LENGTH@ 812
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 6358 @LENGTH@ 64
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6368 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 6404 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 6404 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 6413 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6368 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6379 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6391 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6404 @LENGTH@ 1


INS VariableDeclarationStatement@@JobExecution lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance); @TO@ MethodDeclaration@@public, JobExecution, MethodName:getLastJobExecution, JobInstance jobInstance,  @AT@ 3183 @LENGTH@ 81
---INS SimpleType@@JobExecution @TO@ VariableDeclarationStatement@@JobExecution lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance); @AT@ 3183 @LENGTH@ 12
---INS VariableDeclarationFragment@@lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance) @TO@ VariableDeclarationStatement@@JobExecution lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance); @AT@ 3196 @LENGTH@ 67
------MOV MethodInvocation@@jobExecutionDao.getLastJobExecution(jobInstance) @TO@ VariableDeclarationFragment@@lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance) @AT@ 3190 @LENGTH@ 48
------INS SimpleName@@lastJobExecution @TO@ VariableDeclarationFragment@@lastJobExecution=jobExecutionDao.getLastJobExecution(jobInstance) @AT@ 3196 @LENGTH@ 16


INS VariableDeclarationStatement@@Class<?> clazz=getClass(); @TO@ MethodDeclaration@@void, MethodName:testIfItHandlesWrongClassInput,  @AT@ 3205 @LENGTH@ 28
---INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> clazz=getClass(); @AT@ 3205 @LENGTH@ 8
------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3205 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3211 @LENGTH@ 1
---INS VariableDeclarationFragment@@clazz=getClass() @TO@ VariableDeclarationStatement@@Class<?> clazz=getClass(); @AT@ 3214 @LENGTH@ 18
------INS SimpleName@@clazz @TO@ VariableDeclarationFragment@@clazz=getClass() @AT@ 3214 @LENGTH@ 5
------INS MethodInvocation@@MethodName:getClass:[] @TO@ VariableDeclarationFragment@@clazz=getClass() @AT@ 3222 @LENGTH@ 10


DEL MethodDeclaration@@E, MethodName:handle, ResultSet resultSet, SQLException,  @AT@ 11707 @LENGTH@ 48
---DEL SimpleType@@E @AT@ 11705 @LENGTH@ 1
---DEL SimpleName@@MethodName:handle @AT@ 11707 @LENGTH@ 6
---DEL SingleVariableDeclaration@@ResultSet resultSet @AT@ 11714 @LENGTH@ 19
------DEL SimpleType@@ResultSet @AT@ 11714 @LENGTH@ 9
------DEL SimpleName@@resultSet @AT@ 11724 @LENGTH@ 9
---DEL SimpleType@@SQLException @AT@ 11742 @LENGTH@ 12


INS MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @TO@ TypeDeclaration@@[public]IOUtils,  @AT@ 35370 @LENGTH@ 312
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35370 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35377 @LENGTH@ 6
---INS SimpleType@@QueueInputStream @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35384 @LENGTH@ 16
---INS SimpleName@@MethodName:copy @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35401 @LENGTH@ 4
---INS SingleVariableDeclaration@@final java.io.ByteArrayOutputStream outputStream @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35406 @LENGTH@ 48
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final java.io.ByteArrayOutputStream outputStream @AT@ 35406 @LENGTH@ 5
------INS SimpleType@@java.io.ByteArrayOutputStream @TO@ SingleVariableDeclaration@@final java.io.ByteArrayOutputStream outputStream @AT@ 35412 @LENGTH@ 29
------INS SimpleName@@outputStream @TO@ SingleVariableDeclaration@@final java.io.ByteArrayOutputStream outputStream @AT@ 35442 @LENGTH@ 12
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35463 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:Objects.requireNonNull(outputStream,"outputStream") @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35485 @LENGTH@ 53
------INS MethodInvocation@@Objects.requireNonNull(outputStream,"outputStream") @TO@ ExpressionStatement@@MethodInvocation:Objects.requireNonNull(outputStream,"outputStream") @AT@ 35485 @LENGTH@ 52
---------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.requireNonNull(outputStream,"outputStream") @AT@ 35485 @LENGTH@ 7
---------INS SimpleName@@MethodName:requireNonNull:[outputStream, "outputStream"] @TO@ MethodInvocation@@Objects.requireNonNull(outputStream,"outputStream") @AT@ 35493 @LENGTH@ 44
------------INS SimpleName@@outputStream @TO@ SimpleName@@MethodName:requireNonNull:[outputStream, "outputStream"] @AT@ 35508 @LENGTH@ 12
------------INS StringLiteral@@"outputStream" @TO@ SimpleName@@MethodName:requireNonNull:[outputStream, "outputStream"] @AT@ 35522 @LENGTH@ 14
---INS VariableDeclarationStatement@@final QueueInputStream in=new QueueInputStream(); @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35548 @LENGTH@ 51
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final QueueInputStream in=new QueueInputStream(); @AT@ 35548 @LENGTH@ 5
------INS SimpleType@@QueueInputStream @TO@ VariableDeclarationStatement@@final QueueInputStream in=new QueueInputStream(); @AT@ 35554 @LENGTH@ 16
------INS VariableDeclarationFragment@@in=new QueueInputStream() @TO@ VariableDeclarationStatement@@final QueueInputStream in=new QueueInputStream(); @AT@ 35571 @LENGTH@ 27
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=new QueueInputStream() @AT@ 35571 @LENGTH@ 2
---------INS ClassInstanceCreation@@QueueInputStream[] @TO@ VariableDeclarationFragment@@in=new QueueInputStream() @AT@ 35576 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@QueueInputStream[] @AT@ 35576 @LENGTH@ 3
------------INS SimpleType@@QueueInputStream @TO@ ClassInstanceCreation@@QueueInputStream[] @AT@ 35580 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:outputStream.writeTo(in.newQueueOutputStream()) @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35608 @LENGTH@ 48
------INS MethodInvocation@@outputStream.writeTo(in.newQueueOutputStream()) @TO@ ExpressionStatement@@MethodInvocation:outputStream.writeTo(in.newQueueOutputStream()) @AT@ 35608 @LENGTH@ 47
---------INS SimpleName@@Name:outputStream @TO@ MethodInvocation@@outputStream.writeTo(in.newQueueOutputStream()) @AT@ 35608 @LENGTH@ 12
---------INS SimpleName@@MethodName:writeTo:[in.newQueueOutputStream()] @TO@ MethodInvocation@@outputStream.writeTo(in.newQueueOutputStream()) @AT@ 35621 @LENGTH@ 34
------------INS MethodInvocation@@in.newQueueOutputStream() @TO@ SimpleName@@MethodName:writeTo:[in.newQueueOutputStream()] @AT@ 35629 @LENGTH@ 25
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.newQueueOutputStream() @AT@ 35629 @LENGTH@ 2
---------------INS SimpleName@@MethodName:newQueueOutputStream:[] @TO@ MethodInvocation@@in.newQueueOutputStream() @AT@ 35632 @LENGTH@ 22
---INS ReturnStatement@@SimpleName:in @TO@ MethodDeclaration@@public, static, QueueInputStream, MethodName:copy, final java.io.ByteArrayOutputStream outputStream, IOException,  @AT@ 35666 @LENGTH@ 10
------INS SimpleName@@in @TO@ ReturnStatement@@SimpleName:in @AT@ 35673 @LENGTH@ 2


DEL FieldDeclaration@@private, String, [keyspace] @AT@ 1104 @LENGTH@ 24
---DEL Modifier@@private @AT@ 1104 @LENGTH@ 7
---DEL SimpleType@@String @AT@ 1112 @LENGTH@ 6
---DEL VariableDeclarationFragment@@keyspace @AT@ 1119 @LENGTH@ 8
------DEL SimpleName@@keyspace @AT@ 1119 @LENGTH@ 8


UPD TryStatement@@try {  LOG.debug("Testing JMS Connection on startup for destination: {}",getDestinationName());  Connection con=listenerContainer.getConnectionFactory().createConnection();  JmsUtils.closeConnection(con);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",getDestinationName());} catch (Exception e) {  String msg="Cannot get JMS Connection on startup for destination " + getDestinationName();  throw new FailedToCreateConsumerException(getEndpoint(),msg,e);} @TO@ try {  LOG.debug("Testing JMS Connection on startup for destination: {}",getDestinationName());  ConnectionFactory connectionfactory=listenerContainer.getConnectionFactory();  if (connectionfactory != null) {    Connection con=connectionfactory.createConnection();    JmsUtils.closeConnection(con);  } else {    LOG.error("connection factory is null");    throw new IllegalStateException("connection factory is null");  }  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",getDestinationName());} catch (Exception e) {  String msg="Cannot get JMS Connection on startup for destination " + getDestinationName();  throw new FailedToCreateConsumerException(getEndpoint(),msg,e);} @AT@ 5538 @LENGTH@ 579
---DEL VariableDeclarationStatement@@Connection con=listenerContainer.getConnectionFactory().createConnection(); @AT@ 5658 @LENGTH@ 77
---INS VariableDeclarationStatement@@ConnectionFactory connectionfactory=listenerContainer.getConnectionFactory(); @TO@ TryStatement@@try {  LOG.debug("Testing JMS Connection on startup for destination: {}",getDestinationName());  Connection con=listenerContainer.getConnectionFactory().createConnection();  JmsUtils.closeConnection(con);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",getDestinationName());} catch (Exception e) {  String msg="Cannot get JMS Connection on startup for destination " + getDestinationName();  throw new FailedToCreateConsumerException(getEndpoint(),msg,e);} @AT@ 5694 @LENGTH@ 79
------INS SimpleType@@ConnectionFactory @TO@ VariableDeclarationStatement@@ConnectionFactory connectionfactory=listenerContainer.getConnectionFactory(); @AT@ 5694 @LENGTH@ 17
------INS VariableDeclarationFragment@@connectionfactory=listenerContainer.getConnectionFactory() @TO@ VariableDeclarationStatement@@ConnectionFactory connectionfactory=listenerContainer.getConnectionFactory(); @AT@ 5712 @LENGTH@ 60
---------INS SimpleName@@connectionfactory @TO@ VariableDeclarationFragment@@connectionfactory=listenerContainer.getConnectionFactory() @AT@ 5712 @LENGTH@ 17
---------INS MethodInvocation@@listenerContainer.getConnectionFactory() @TO@ VariableDeclarationFragment@@connectionfactory=listenerContainer.getConnectionFactory() @AT@ 5732 @LENGTH@ 40
------------INS SimpleName@@Name:listenerContainer @TO@ MethodInvocation@@listenerContainer.getConnectionFactory() @AT@ 5732 @LENGTH@ 17
------------INS SimpleName@@MethodName:getConnectionFactory:[] @TO@ MethodInvocation@@listenerContainer.getConnectionFactory() @AT@ 5750 @LENGTH@ 22
---INS IfStatement@@if (connectionfactory != null) {  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @TO@ TryStatement@@try {  LOG.debug("Testing JMS Connection on startup for destination: {}",getDestinationName());  Connection con=listenerContainer.getConnectionFactory().createConnection();  JmsUtils.closeConnection(con);  LOG.debug("Successfully tested JMS Connection on startup for destination: {}",getDestinationName());} catch (Exception e) {  String msg="Cannot get JMS Connection on startup for destination " + getDestinationName();  throw new FailedToCreateConsumerException(getEndpoint(),msg,e);} @AT@ 5786 @LENGTH@ 321
------INS InfixExpression@@connectionfactory != null @TO@ IfStatement@@if (connectionfactory != null) {  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 5790 @LENGTH@ 25
---------INS SimpleName@@connectionfactory @TO@ InfixExpression@@connectionfactory != null @AT@ 5790 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@connectionfactory != null @AT@ 5807 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@connectionfactory != null @AT@ 5811 @LENGTH@ 4
------INS Block@@ThenBody:{  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} @TO@ IfStatement@@if (connectionfactory != null) {  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 5817 @LENGTH@ 133
---------MOV ExpressionStatement@@MethodInvocation:JmsUtils.closeConnection(con) @TO@ Block@@ThenBody:{  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} @AT@ 5748 @LENGTH@ 30
---------INS VariableDeclarationStatement@@Connection con=connectionfactory.createConnection(); @TO@ Block@@ThenBody:{  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} @AT@ 5835 @LENGTH@ 54
------------MOV SimpleType@@Connection @TO@ VariableDeclarationStatement@@Connection con=connectionfactory.createConnection(); @AT@ 5658 @LENGTH@ 10
------------MOV VariableDeclarationFragment@@con=listenerContainer.getConnectionFactory().createConnection() @TO@ VariableDeclarationStatement@@Connection con=connectionfactory.createConnection(); @AT@ 5669 @LENGTH@ 65
---------------UPD MethodInvocation@@listenerContainer.getConnectionFactory().createConnection() @TO@ connectionfactory.createConnection() @AT@ 5675 @LENGTH@ 59
------------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 5675 @LENGTH@ 40
------------------UPD SimpleName@@Name:listenerContainer @TO@ Name:connectionfactory @AT@ 5675 @LENGTH@ 17
------INS Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @TO@ IfStatement@@if (connectionfactory != null) {  Connection con=connectionfactory.createConnection();  JmsUtils.closeConnection(con);} else {  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 5956 @LENGTH@ 151
---------INS ExpressionStatement@@MethodInvocation:LOG.error("connection factory is null") @TO@ Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 5974 @LENGTH@ 40
------------INS MethodInvocation@@LOG.error("connection factory is null") @TO@ ExpressionStatement@@MethodInvocation:LOG.error("connection factory is null") @AT@ 5974 @LENGTH@ 39
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("connection factory is null") @AT@ 5974 @LENGTH@ 3
---------------INS SimpleName@@MethodName:error:["connection factory is null"] @TO@ MethodInvocation@@LOG.error("connection factory is null") @AT@ 5978 @LENGTH@ 35
------------------INS StringLiteral@@"connection factory is null" @TO@ SimpleName@@MethodName:error:["connection factory is null"] @AT@ 5984 @LENGTH@ 28
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("connection factory is null") @TO@ Block@@ElseBody:{  LOG.error("connection factory is null");  throw new IllegalStateException("connection factory is null");} @AT@ 6031 @LENGTH@ 62
------------INS ClassInstanceCreation@@IllegalStateException["connection factory is null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("connection factory is null") @AT@ 6037 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 6037 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 6041 @LENGTH@ 21
---------------INS StringLiteral@@"connection factory is null" @TO@ ClassInstanceCreation@@IllegalStateException["connection factory is null"] @AT@ 6063 @LENGTH@ 28


UPD TryStatement@@try {  if (Files.isDirectory(file)) {    try (Stream<Path> stream=Files.list(file)){      return toFileVisitResult(!stream.findFirst().isPresent(),file);    }   }  return toFileVisitResult(Files.size(file) == 0,file);} catch (final IOException e) {  return handle(e);} @TO@ try {  if (Files.isDirectory(file)) {    try (Stream<Path> stream=Files.list(file)){      return toFileVisitResult(!stream.findFirst().isPresent());    }   }  return toFileVisitResult(Files.size(file) == 0);} catch (final IOException e) {  return handle(e);} @AT@ 3840 @LENGTH@ 375
---UPD IfStatement@@if (Files.isDirectory(file)) {  try (Stream<Path> stream=Files.list(file)){    return toFileVisitResult(!stream.findFirst().isPresent(),file);  } } @TO@ if (Files.isDirectory(file)) {  try (Stream<Path> stream=Files.list(file)){    return toFileVisitResult(!stream.findFirst().isPresent());  } } @AT@ 3858 @LENGTH@ 210
------UPD Block@@ThenBody:{  try (Stream<Path> stream=Files.list(file)){    return toFileVisitResult(!stream.findFirst().isPresent(),file);  } } @TO@ ThenBody:{  try (Stream<Path> stream=Files.list(file)){    return toFileVisitResult(!stream.findFirst().isPresent());  } } @AT@ 3887 @LENGTH@ 181
---------UPD TryStatement@@try (Stream<Path> stream=Files.list(file)){  return toFileVisitResult(!stream.findFirst().isPresent(),file);}  @TO@ try (Stream<Path> stream=Files.list(file)){  return toFileVisitResult(!stream.findFirst().isPresent());}  @AT@ 3905 @LENGTH@ 149
------------UPD ReturnStatement@@MethodInvocation:toFileVisitResult(!stream.findFirst().isPresent(),file) @TO@ MethodInvocation:toFileVisitResult(!stream.findFirst().isPresent()) @AT@ 3972 @LENGTH@ 64
---------------UPD MethodInvocation@@toFileVisitResult(!stream.findFirst().isPresent(),file) @TO@ toFileVisitResult(!stream.findFirst().isPresent()) @AT@ 3979 @LENGTH@ 56
------------------UPD SimpleName@@MethodName:toFileVisitResult:[!stream.findFirst().isPresent(), file] @TO@ MethodName:toFileVisitResult:[!stream.findFirst().isPresent()] @AT@ 3979 @LENGTH@ 56
---------------------DEL SimpleName@@file @AT@ 4030 @LENGTH@ 4
---UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.size(file) == 0,file) @TO@ MethodInvocation:toFileVisitResult(Files.size(file) == 0) @AT@ 4081 @LENGTH@ 54
------UPD MethodInvocation@@toFileVisitResult(Files.size(file) == 0,file) @TO@ toFileVisitResult(Files.size(file) == 0) @AT@ 4088 @LENGTH@ 46
---------UPD SimpleName@@MethodName:toFileVisitResult:[Files.size(file) == 0, file] @TO@ MethodName:toFileVisitResult:[Files.size(file) == 0] @AT@ 4088 @LENGTH@ 46
------------DEL SimpleName@@file @AT@ 4129 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setConnectionTimeotUnit, TimeUnit connectionTimeotUnit,  @TO@ public, void, MethodName:setConnectionTimeoutUnit, TimeUnit connectionTimeotUnit,  @AT@ 5287 @LENGTH@ 144
---UPD SimpleName@@MethodName:setConnectionTimeotUnit @TO@ MethodName:setConnectionTimeoutUnit @AT@ 5299 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(pattern.matcher(pathToString.apply(path)).matches(),path) @TO@ MethodInvocation:toFileVisitResult(pattern.matcher(pathToString.apply(path)).matches()) @AT@ 6171 @LENGTH@ 84
---UPD MethodInvocation@@toFileVisitResult(pattern.matcher(pathToString.apply(path)).matches(),path) @TO@ toFileVisitResult(pattern.matcher(pathToString.apply(path)).matches()) @AT@ 6178 @LENGTH@ 76
------UPD SimpleName@@MethodName:toFileVisitResult:[pattern.matcher(pathToString.apply(path)).matches(), path] @TO@ MethodName:toFileVisitResult:[pattern.matcher(pathToString.apply(path)).matches()] @AT@ 6178 @LENGTH@ 76
---------DEL SimpleName@@path @AT@ 6249 @LENGTH@ 4


DEL MethodDeclaration@@public, void, MethodName:authenticateWhenIntrospectionTokenReturnsMalformedIssuerResponseThenInvalidToken,  @AT@ 8509 @LENGTH@ 440
---DEL Modifier@@public @AT@ 8509 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 8516 @LENGTH@ 4
---DEL SimpleName@@MethodName:authenticateWhenIntrospectionTokenReturnsMalformedIssuerResponseThenInvalidToken @AT@ 8521 @LENGTH@ 80
---DEL VariableDeclarationStatement@@WebClient webClient=mockResponse(MALFORMED_ISSUER_RESPONSE); @AT@ 8608 @LENGTH@ 62
------DEL SimpleType@@WebClient @AT@ 8608 @LENGTH@ 9
------DEL VariableDeclarationFragment@@webClient=mockResponse(MALFORMED_ISSUER_RESPONSE) @AT@ 8618 @LENGTH@ 51
---------DEL SimpleName@@webClient @AT@ 8618 @LENGTH@ 9
---------DEL MethodInvocation@@mockResponse(MALFORMED_ISSUER_RESPONSE) @AT@ 8630 @LENGTH@ 39
------------DEL SimpleName@@MethodName:mockResponse:[MALFORMED_ISSUER_RESPONSE] @AT@ 8630 @LENGTH@ 39
---------------DEL SimpleName@@MALFORMED_ISSUER_RESPONSE @AT@ 8643 @LENGTH@ 25
---DEL VariableDeclarationStatement@@SpringReactiveOpaqueTokenIntrospector introspectionClient=new SpringReactiveOpaqueTokenIntrospector(INTROSPECTION_URL,webClient); @AT@ 8673 @LENGTH@ 137
------DEL SimpleType@@SpringReactiveOpaqueTokenIntrospector @AT@ 8673 @LENGTH@ 37
------DEL VariableDeclarationFragment@@introspectionClient=new SpringReactiveOpaqueTokenIntrospector(INTROSPECTION_URL,webClient) @AT@ 8711 @LENGTH@ 98
---------DEL SimpleName@@introspectionClient @AT@ 8711 @LENGTH@ 19
---------DEL ClassInstanceCreation@@SpringReactiveOpaqueTokenIntrospector[INTROSPECTION_URL, webClient] @AT@ 8733 @LENGTH@ 76
------------DEL New@@new @AT@ 8733 @LENGTH@ 3
------------DEL SimpleType@@SpringReactiveOpaqueTokenIntrospector @AT@ 8737 @LENGTH@ 37
------------DEL SimpleName@@INTROSPECTION_URL @AT@ 8780 @LENGTH@ 17
------------DEL SimpleName@@webClient @AT@ 8799 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("token").block()) @AT@ 8813 @LENGTH@ 133
------DEL MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("token").block()) @AT@ 8813 @LENGTH@ 132
---------DEL MethodInvocation@@MethodName:assertThatExceptionOfType:[OAuth2IntrospectionException.class] @AT@ 8813 @LENGTH@ 61
------------DEL TypeLiteral@@OAuth2IntrospectionException.class @AT@ 8839 @LENGTH@ 34
---------DEL SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.introspect("token").block()] @AT@ 8880 @LENGTH@ 65
------------DEL LambdaExpression@@() -> introspectionClient.introspect("token").block() @AT@ 8891 @LENGTH@ 53
---------------DEL MethodInvocation@@introspectionClient.introspect("token").block() @AT@ 8897 @LENGTH@ 47
------------------DEL MethodInvocation@@MethodName:introspect:["token"] @AT@ 8897 @LENGTH@ 39
---------------------DEL StringLiteral@@"token" @AT@ 8928 @LENGTH@ 7
------------------DEL SimpleName@@Name:introspectionClient @AT@ 8897 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:block:[] @AT@ 8937 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isSymbolicLink(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isSymbolicLink(file)) @AT@ 3047 @LENGTH@ 59
---UPD MethodInvocation@@toFileVisitResult(Files.isSymbolicLink(file),file) @TO@ toFileVisitResult(Files.isSymbolicLink(file)) @AT@ 3054 @LENGTH@ 51
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isSymbolicLink(file), file] @TO@ MethodName:toFileVisitResult:[Files.isSymbolicLink(file)] @AT@ 3054 @LENGTH@ 51
---------DEL SimpleName@@file @AT@ 3100 @LENGTH@ 4


DEL MethodDeclaration@@private, void, MethodName:setFailure, final Throwable t,  @AT@ 82136 @LENGTH@ 86
---DEL Modifier@@private @AT@ 82136 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 82144 @LENGTH@ 4
---DEL SimpleName@@MethodName:setFailure @AT@ 82149 @LENGTH@ 10
---DEL SingleVariableDeclaration@@final Throwable t @AT@ 82160 @LENGTH@ 17
------DEL Modifier@@final @AT@ 82160 @LENGTH@ 5
------DEL SimpleType@@Throwable @AT@ 82166 @LENGTH@ 9
------DEL SimpleName@@t @AT@ 82176 @LENGTH@ 1
---DEL ExpressionStatement@@SuperMethodInvocation:super.setFailed(t) @AT@ 82193 @LENGTH@ 19
------DEL SuperMethodInvocation@@super.setFailed(t) @AT@ 82193 @LENGTH@ 18
---------DEL SimpleName@@MethodName:setFailed:[t] @AT@ 82199 @LENGTH@ 9
---------DEL SimpleName@@t @AT@ 82209 @LENGTH@ 1


INS IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @TO@ MethodDeclaration@@private, Object, MethodName:convertIdValues, @Nullable Neo4jPersistentProperty idProperty, Object idValues,  @AT@ 11959 @LENGTH@ 102
---INS MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @TO@ IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @AT@ 11963 @LENGTH@ 71
------INS ParenthesizedExpression@@((Neo4jPersistentEntity<?>)idProperty.getOwner()) @TO@ MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @AT@ 11963 @LENGTH@ 50
---------INS CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @TO@ ParenthesizedExpression@@((Neo4jPersistentEntity<?>)idProperty.getOwner()) @AT@ 11964 @LENGTH@ 48
------------INS ParameterizedType@@Neo4jPersistentEntity<?> @TO@ CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @AT@ 11965 @LENGTH@ 24
---------------INS SimpleType@@Neo4jPersistentEntity @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 11965 @LENGTH@ 21
---------------INS WildcardType@@? @TO@ ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 11987 @LENGTH@ 1
------------INS MethodInvocation@@idProperty.getOwner() @TO@ CastExpression@@(Neo4jPersistentEntity<?>)idProperty.getOwner() @AT@ 11991 @LENGTH@ 21
---------------INS SimpleName@@Name:idProperty @TO@ MethodInvocation@@idProperty.getOwner() @AT@ 11991 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getOwner:[] @TO@ MethodInvocation@@idProperty.getOwner() @AT@ 12002 @LENGTH@ 10
------INS SimpleName@@MethodName:isUsingInternalIds:[] @TO@ MethodInvocation@@((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds() @AT@ 12014 @LENGTH@ 20
---INS Block@@ThenBody:{  return idValues;} @TO@ IfStatement@@if (((Neo4jPersistentEntity<?>)idProperty.getOwner()).isUsingInternalIds()) {  return idValues;} @AT@ 12036 @LENGTH@ 25
------INS ReturnStatement@@SimpleName:idValues @TO@ Block@@ThenBody:{  return idValues;} @AT@ 12041 @LENGTH@ 16
---------INS SimpleName@@idValues @TO@ ReturnStatement@@SimpleName:idValues @AT@ 12048 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @TO@ TypeDeclaration@@[public]NimbusOpaqueTokenIntrospectorTests,  @AT@ 14841 @LENGTH@ 610
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14841 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14848 @LENGTH@ 4
---INS SimpleName@@MethodName:handleNonJsonContentType @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14853 @LENGTH@ 24
---INS SingleVariableDeclaration@@String type @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14878 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String type @AT@ 14878 @LENGTH@ 6
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@String type @AT@ 14885 @LENGTH@ 4
---INS VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14895 @LENGTH@ 59
------INS SimpleType@@RestOperations @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 14895 @LENGTH@ 14
------INS VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 14910 @LENGTH@ 43
---------INS SimpleName@@restOperations @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 14910 @LENGTH@ 14
---------INS MethodInvocation@@mock(RestOperations.class) @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 14927 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[RestOperations.class] @TO@ MethodInvocation@@mock(RestOperations.class) @AT@ 14927 @LENGTH@ 26
---------------INS TypeLiteral@@RestOperations.class @TO@ SimpleName@@MethodName:mock:[RestOperations.class] @AT@ 14932 @LENGTH@ 20
---INS VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE); @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 14957 @LENGTH@ 129
------INS ParameterizedType@@ResponseEntity<String> @TO@ VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE); @AT@ 14957 @LENGTH@ 22
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 14957 @LENGTH@ 14
---------INS SimpleType@@String @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 14972 @LENGTH@ 6
------INS VariableDeclarationFragment@@stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @TO@ VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE); @AT@ 14980 @LENGTH@ 105
---------INS SimpleName@@stubResponse @TO@ VariableDeclarationFragment@@stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 14980 @LENGTH@ 12
---------INS MethodInvocation@@ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @TO@ VariableDeclarationFragment@@stubResponse=ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 14995 @LENGTH@ 90
------------INS MethodInvocation@@MethodName:contentType:[MediaType.parseMediaType(type)] @TO@ MethodInvocation@@ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 14995 @LENGTH@ 63
---------------INS MethodInvocation@@MediaType.parseMediaType(type) @TO@ MethodInvocation@@MethodName:contentType:[MediaType.parseMediaType(type)] @AT@ 15027 @LENGTH@ 30
------------------INS SimpleName@@Name:MediaType @TO@ MethodInvocation@@MediaType.parseMediaType(type) @AT@ 15027 @LENGTH@ 9
------------------INS SimpleName@@MethodName:parseMediaType:[type] @TO@ MethodInvocation@@MediaType.parseMediaType(type) @AT@ 15037 @LENGTH@ 20
---------------------INS SimpleName@@type @TO@ SimpleName@@MethodName:parseMediaType:[type] @AT@ 15052 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:ok:[] @TO@ MethodInvocation@@ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 14995 @LENGTH@ 19
------------INS SimpleName@@Name:ResponseEntity @TO@ MethodInvocation@@ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 14995 @LENGTH@ 14
------------INS SimpleName@@MethodName:body:[ACTIVE_RESPONSE] @TO@ MethodInvocation@@ResponseEntity.ok().contentType(MediaType.parseMediaType(type)).body(ACTIVE_RESPONSE) @AT@ 15064 @LENGTH@ 21
---------------INS SimpleName@@ACTIVE_RESPONSE @TO@ SimpleName@@MethodName:body:[ACTIVE_RESPONSE] @AT@ 15069 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 15089 @LENGTH@ 100
------INS MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @TO@ ExpressionStatement@@MethodInvocation:given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 15089 @LENGTH@ 99
---------INS MethodInvocation@@MethodName:given:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @TO@ MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 15089 @LENGTH@ 74
------------INS MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @TO@ MethodInvocation@@MethodName:given:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @AT@ 15095 @LENGTH@ 67
---------------INS SimpleName@@Name:restOperations @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 15095 @LENGTH@ 14
---------------INS SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 15110 @LENGTH@ 52
------------------INS MethodInvocation@@any(RequestEntity.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 15119 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:any:[RequestEntity.class] @TO@ MethodInvocation@@any(RequestEntity.class) @AT@ 15119 @LENGTH@ 24
------------------------INS TypeLiteral@@RequestEntity.class @TO@ SimpleName@@MethodName:any:[RequestEntity.class] @AT@ 15123 @LENGTH@ 19
------------------INS MethodInvocation@@eq(String.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 15145 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:eq:[String.class] @TO@ MethodInvocation@@eq(String.class) @AT@ 15145 @LENGTH@ 16
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:eq:[String.class] @AT@ 15148 @LENGTH@ 12
---------INS SimpleName@@MethodName:willReturn:[stubResponse] @TO@ MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 15164 @LENGTH@ 24
------------INS SimpleName@@stubResponse @TO@ SimpleName@@MethodName:willReturn:[stubResponse] @AT@ 15175 @LENGTH@ 12
---INS VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 15192 @LENGTH@ 119
------INS SimpleType@@OpaqueTokenIntrospector @TO@ VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @AT@ 15192 @LENGTH@ 23
------INS VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @TO@ VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @AT@ 15216 @LENGTH@ 94
---------INS SimpleName@@introspectionClient @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @AT@ 15216 @LENGTH@ 19
---------INS ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @AT@ 15238 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 15238 @LENGTH@ 3
------------INS SimpleType@@NimbusOpaqueTokenIntrospector @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 15242 @LENGTH@ 29
------------INS SimpleName@@INTROSPECTION_URL @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 15272 @LENGTH@ 17
------------INS SimpleName@@restOperations @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 15295 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @TO@ MethodDeclaration@@public, void, MethodName:handleNonJsonContentType, String type,  @AT@ 15315 @LENGTH@ 133
------INS MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @TO@ ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 15315 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:assertThatExceptionOfType:[OAuth2IntrospectionException.class] @TO@ MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 15315 @LENGTH@ 61
------------INS TypeLiteral@@OAuth2IntrospectionException.class @TO@ MethodInvocation@@MethodName:assertThatExceptionOfType:[OAuth2IntrospectionException.class] @AT@ 15341 @LENGTH@ 34
---------INS SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.introspect("sometokenhere")] @TO@ MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 15382 @LENGTH@ 65
------------INS LambdaExpression@@() -> introspectionClient.introspect("sometokenhere") @TO@ SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.introspect("sometokenhere")] @AT@ 15393 @LENGTH@ 53
---------------INS MethodInvocation@@introspectionClient.introspect("sometokenhere") @TO@ LambdaExpression@@() -> introspectionClient.introspect("sometokenhere") @AT@ 15399 @LENGTH@ 47
------------------INS SimpleName@@Name:introspectionClient @TO@ MethodInvocation@@introspectionClient.introspect("sometokenhere") @AT@ 15399 @LENGTH@ 19
------------------INS SimpleName@@MethodName:introspect:["sometokenhere"] @TO@ MethodInvocation@@introspectionClient.introspect("sometokenhere") @AT@ 15419 @LENGTH@ 27
---------------------INS StringLiteral@@"sometokenhere" @TO@ SimpleName@@MethodName:introspect:["sometokenhere"] @AT@ 15430 @LENGTH@ 15


INS MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @TO@ TypeDeclaration@@[@Nested]ClassesWithAdditionalLabels, SpringTestBase @AT@ 15492 @LENGTH@ 746
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15487 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConvertIds @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15492 @LENGTH@ 16
---INS SingleVariableDeclaration@@@Autowired Neo4jTemplate template @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15509 @LENGTH@ 33
------INS SimpleType@@Neo4jTemplate @TO@ SingleVariableDeclaration@@@Autowired Neo4jTemplate template @AT@ 15520 @LENGTH@ 13
------INS SimpleName@@template @TO@ SingleVariableDeclaration@@@Autowired Neo4jTemplate template @AT@ 15534 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15550 @LENGTH@ 77
------INS MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @TO@ ExpressionStatement@@MethodInvocation:template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 15550 @LENGTH@ 76
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 15550 @LENGTH@ 8
---------INS SimpleName@@MethodName:deleteAll:[EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @TO@ MethodInvocation@@template.deleteAll(EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 15559 @LENGTH@ 67
------------INS TypeLiteral@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class @TO@ SimpleName@@MethodName:deleteAll:[EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 15569 @LENGTH@ 56
---INS VariableDeclarationStatement@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")); @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15631 @LENGTH@ 154
------INS SimpleType@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted @TO@ VariableDeclarationStatement@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")); @AT@ 15631 @LENGTH@ 50
------INS VariableDeclarationFragment@@savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @TO@ VariableDeclarationStatement@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")); @AT@ 15682 @LENGTH@ 102
---------INS SimpleName@@savedInstance @TO@ VariableDeclarationFragment@@savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @AT@ 15682 @LENGTH@ 13
---------INS MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @TO@ VariableDeclarationFragment@@savedInstance=template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @AT@ 15698 @LENGTH@ 86
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @AT@ 15698 @LENGTH@ 8
------------INS SimpleName@@MethodName:save:[new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")] @TO@ MethodInvocation@@template.save(new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")) @AT@ 15713 @LENGTH@ 71
---------------INS ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted["value_1"] @TO@ SimpleName@@MethodName:save:[new EntityWithDynamicLabelsAndIdThatNeedsToBeConverted("value_1")] @AT@ 15718 @LENGTH@ 65
------------------INS New@@new @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted["value_1"] @AT@ 15718 @LENGTH@ 3
------------------INS SimpleType@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted["value_1"] @AT@ 15722 @LENGTH@ 50
------------------INS StringLiteral@@"value_1" @TO@ ClassInstanceCreation@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted["value_1"] @AT@ 15773 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(savedInstance.getValue()).isEqualTo("value_1") @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15790 @LENGTH@ 58
------INS MethodInvocation@@assertThat(savedInstance.getValue()).isEqualTo("value_1") @TO@ ExpressionStatement@@MethodInvocation:assertThat(savedInstance.getValue()).isEqualTo("value_1") @AT@ 15790 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:assertThat:[savedInstance.getValue()] @TO@ MethodInvocation@@assertThat(savedInstance.getValue()).isEqualTo("value_1") @AT@ 15790 @LENGTH@ 36
------------INS MethodInvocation@@savedInstance.getValue() @TO@ MethodInvocation@@MethodName:assertThat:[savedInstance.getValue()] @AT@ 15801 @LENGTH@ 24
---------------INS SimpleName@@Name:savedInstance @TO@ MethodInvocation@@savedInstance.getValue() @AT@ 15801 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@savedInstance.getValue() @AT@ 15815 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["value_1"] @TO@ MethodInvocation@@assertThat(savedInstance.getValue()).isEqualTo("value_1") @AT@ 15827 @LENGTH@ 20
------------INS StringLiteral@@"value_1" @TO@ SimpleName@@MethodName:isEqualTo:["value_1"] @AT@ 15837 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(savedInstance.getExtraLabels()).containsExactlyInAnyOrder("value_1") @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15852 @LENGTH@ 80
------INS MethodInvocation@@assertThat(savedInstance.getExtraLabels()).containsExactlyInAnyOrder("value_1") @TO@ ExpressionStatement@@MethodInvocation:assertThat(savedInstance.getExtraLabels()).containsExactlyInAnyOrder("value_1") @AT@ 15852 @LENGTH@ 79
---------INS MethodInvocation@@MethodName:assertThat:[savedInstance.getExtraLabels()] @TO@ MethodInvocation@@assertThat(savedInstance.getExtraLabels()).containsExactlyInAnyOrder("value_1") @AT@ 15852 @LENGTH@ 42
------------INS MethodInvocation@@savedInstance.getExtraLabels() @TO@ MethodInvocation@@MethodName:assertThat:[savedInstance.getExtraLabels()] @AT@ 15863 @LENGTH@ 30
---------------INS SimpleName@@Name:savedInstance @TO@ MethodInvocation@@savedInstance.getExtraLabels() @AT@ 15863 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getExtraLabels:[] @TO@ MethodInvocation@@savedInstance.getExtraLabels() @AT@ 15877 @LENGTH@ 16
---------INS SimpleName@@MethodName:containsExactlyInAnyOrder:["value_1"] @TO@ MethodInvocation@@assertThat(savedInstance.getExtraLabels()).containsExactlyInAnyOrder("value_1") @AT@ 15895 @LENGTH@ 36
------------INS StringLiteral@@"value_1" @TO@ SimpleName@@MethodName:containsExactlyInAnyOrder:["value_1"] @AT@ 15921 @LENGTH@ 9
---INS VariableDeclarationStatement@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class); @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 15937 @LENGTH@ 192
------INS ParameterizedType@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @TO@ VariableDeclarationStatement@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class); @AT@ 15937 @LENGTH@ 60
---------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @AT@ 15937 @LENGTH@ 8
---------INS SimpleType@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted @TO@ ParameterizedType@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> @AT@ 15946 @LENGTH@ 50
------INS VariableDeclarationFragment@@optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @TO@ VariableDeclarationStatement@@Optional<EntityWithDynamicLabelsAndIdThatNeedsToBeConverted> optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class); @AT@ 15998 @LENGTH@ 130
---------INS SimpleName@@optionalReloadedInstance @TO@ VariableDeclarationFragment@@optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 15998 @LENGTH@ 24
---------INS MethodInvocation@@template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @TO@ VariableDeclarationFragment@@optionalReloadedInstance=template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 16030 @LENGTH@ 98
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 16030 @LENGTH@ 8
------------INS SimpleName@@MethodName:findById:[savedInstance.getId(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @TO@ MethodInvocation@@template.findById(savedInstance.getId(),EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class) @AT@ 16039 @LENGTH@ 89
---------------INS MethodInvocation@@savedInstance.getId() @TO@ SimpleName@@MethodName:findById:[savedInstance.getId(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 16048 @LENGTH@ 21
------------------INS SimpleName@@Name:savedInstance @TO@ MethodInvocation@@savedInstance.getId() @AT@ 16048 @LENGTH@ 13
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@savedInstance.getId() @AT@ 16062 @LENGTH@ 7
---------------INS TypeLiteral@@EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class @TO@ SimpleName@@MethodName:findById:[savedInstance.getId(), EntityWithDynamicLabelsAndIdThatNeedsToBeConverted.class] @AT@ 16071 @LENGTH@ 56
---INS ExpressionStatement@@MethodInvocation:assertThat(optionalReloadedInstance).hasValueSatisfying(v -> v.getExtraLabels().contains("value_1")) @TO@ MethodDeclaration@@void, MethodName:shouldConvertIds, @Autowired Neo4jTemplate template,  @AT@ 16133 @LENGTH@ 101
------INS MethodInvocation@@assertThat(optionalReloadedInstance).hasValueSatisfying(v -> v.getExtraLabels().contains("value_1")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(optionalReloadedInstance).hasValueSatisfying(v -> v.getExtraLabels().contains("value_1")) @AT@ 16133 @LENGTH@ 100
---------INS MethodInvocation@@MethodName:assertThat:[optionalReloadedInstance] @TO@ MethodInvocation@@assertThat(optionalReloadedInstance).hasValueSatisfying(v -> v.getExtraLabels().contains("value_1")) @AT@ 16133 @LENGTH@ 36
------------INS SimpleName@@optionalReloadedInstance @TO@ MethodInvocation@@MethodName:assertThat:[optionalReloadedInstance] @AT@ 16144 @LENGTH@ 24
---------INS SimpleName@@MethodName:hasValueSatisfying:[v -> v.getExtraLabels().contains("value_1")] @TO@ MethodInvocation@@assertThat(optionalReloadedInstance).hasValueSatisfying(v -> v.getExtraLabels().contains("value_1")) @AT@ 16170 @LENGTH@ 63
------------INS LambdaExpression@@v -> v.getExtraLabels().contains("value_1") @TO@ SimpleName@@MethodName:hasValueSatisfying:[v -> v.getExtraLabels().contains("value_1")] @AT@ 16189 @LENGTH@ 43
---------------INS VariableDeclarationFragment@@v @TO@ LambdaExpression@@v -> v.getExtraLabels().contains("value_1") @AT@ 16189 @LENGTH@ 1
------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 16189 @LENGTH@ 1
---------------INS MethodInvocation@@v.getExtraLabels().contains("value_1") @TO@ LambdaExpression@@v -> v.getExtraLabels().contains("value_1") @AT@ 16194 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getExtraLabels:[] @TO@ MethodInvocation@@v.getExtraLabels().contains("value_1") @AT@ 16194 @LENGTH@ 18
------------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getExtraLabels().contains("value_1") @AT@ 16194 @LENGTH@ 1
------------------INS SimpleName@@MethodName:contains:["value_1"] @TO@ MethodInvocation@@v.getExtraLabels().contains("value_1") @AT@ 16213 @LENGTH@ 19
---------------------INS StringLiteral@@"value_1" @TO@ SimpleName@@MethodName:contains:["value_1"] @AT@ 16222 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @TO@ TypeDeclaration@@[@EnabledIfSystemProperty(named="azure.instance.type",matches="remote"), public]DataLakeProducerIT, Base @AT@ 4372 @LENGTH@ 378
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4367 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaderPreservation @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4372 @LENGTH@ 22
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4404 @LENGTH@ 20
---INS VariableDeclarationStatement@@Exchange result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
); @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4435 @LENGTH@ 230
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
); @AT@ 4435 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ VariableDeclarationStatement@@Exchange result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
); @AT@ 4444 @LENGTH@ 220
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4444 @LENGTH@ 6
---------INS MethodInvocation@@template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ VariableDeclarationFragment@@result=template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4453 @LENGTH@ 211
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4453 @LENGTH@ 8
------------INS SimpleName@@MethodName:send:[componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem), exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @TO@ MethodInvocation@@template.send(componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem),exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4462 @LENGTH@ 202
---------------INS MethodInvocation@@componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem) @TO@ SimpleName@@MethodName:send:[componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem), exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 4467 @LENGTH@ 73
------------------INS SimpleName@@MethodName:componentUri:[fileSystemName, DataLakeOperationsDefinition.listFileSystem] @TO@ MethodInvocation@@componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem) @AT@ 4467 @LENGTH@ 73
---------------------INS SimpleName@@fileSystemName @TO@ SimpleName@@MethodName:componentUri:[fileSystemName, DataLakeOperationsDefinition.listFileSystem] @AT@ 4480 @LENGTH@ 14
---------------------INS QualifiedName@@DataLakeOperationsDefinition.listFileSystem @TO@ SimpleName@@MethodName:componentUri:[fileSystemName, DataLakeOperationsDefinition.listFileSystem] @AT@ 4496 @LENGTH@ 43
------------------------INS SimpleName@@DataLakeOperationsDefinition @TO@ QualifiedName@@DataLakeOperationsDefinition.listFileSystem @AT@ 4496 @LENGTH@ 28
------------------------INS SimpleName@@listFileSystem @TO@ QualifiedName@@DataLakeOperationsDefinition.listFileSystem @AT@ 4525 @LENGTH@ 14
---------------INS LambdaExpression@@exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @TO@ SimpleName@@MethodName:send:[componentUri(fileSystemName,DataLakeOperationsDefinition.listFileSystem), exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 4558 @LENGTH@ 105
------------------INS VariableDeclarationFragment@@exchange @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 4558 @LENGTH@ 8
---------------------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange @AT@ 4558 @LENGTH@ 8
------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 4592 @LENGTH@ 53
---------------------INS MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 4592 @LENGTH@ 52
------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 4592 @LENGTH@ 16
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 4592 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 4609 @LENGTH@ 35
---------------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 4619 @LENGTH@ 13
---------------------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 4634 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getMessage().getHeader("DoNotDelete")) @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4674 @LENGTH@ 70
------INS MethodInvocation@@assertEquals("keep me",result.getMessage().getHeader("DoNotDelete")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getMessage().getHeader("DoNotDelete")) @AT@ 4674 @LENGTH@ 69
---------INS SimpleName@@MethodName:assertEquals:["keep me", result.getMessage().getHeader("DoNotDelete")] @TO@ MethodInvocation@@assertEquals("keep me",result.getMessage().getHeader("DoNotDelete")) @AT@ 4674 @LENGTH@ 69
------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getMessage().getHeader("DoNotDelete")] @AT@ 4687 @LENGTH@ 9
------------INS MethodInvocation@@result.getMessage().getHeader("DoNotDelete") @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getMessage().getHeader("DoNotDelete")] @AT@ 4698 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@result.getMessage().getHeader("DoNotDelete") @AT@ 4698 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getMessage().getHeader("DoNotDelete") @AT@ 4698 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getHeader:["DoNotDelete"] @TO@ MethodInvocation@@result.getMessage().getHeader("DoNotDelete") @AT@ 4718 @LENGTH@ 24
------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:getHeader:["DoNotDelete"] @AT@ 4728 @LENGTH@ 13


INS IfStatement@@if (endOfInput) {  lastCoderResult=charsetEncoder.flush(encoderOut);} @TO@ MethodDeclaration@@private, void, MethodName:fillBuffer, IOException,  @AT@ 10020 @LENGTH@ 91
---INS SimpleName@@endOfInput @TO@ IfStatement@@if (endOfInput) {  lastCoderResult=charsetEncoder.flush(encoderOut);} @AT@ 10024 @LENGTH@ 10
---INS Block@@ThenBody:{  lastCoderResult=charsetEncoder.flush(encoderOut);} @TO@ IfStatement@@if (endOfInput) {  lastCoderResult=charsetEncoder.flush(encoderOut);} @AT@ 10036 @LENGTH@ 75
------INS ExpressionStatement@@Assignment:lastCoderResult=charsetEncoder.flush(encoderOut) @TO@ Block@@ThenBody:{  lastCoderResult=charsetEncoder.flush(encoderOut);} @AT@ 10050 @LENGTH@ 51
---------INS Assignment@@lastCoderResult=charsetEncoder.flush(encoderOut) @TO@ ExpressionStatement@@Assignment:lastCoderResult=charsetEncoder.flush(encoderOut) @AT@ 10050 @LENGTH@ 50
------------INS SimpleName@@lastCoderResult @TO@ Assignment@@lastCoderResult=charsetEncoder.flush(encoderOut) @AT@ 10050 @LENGTH@ 15
------------INS Operator@@= @TO@ Assignment@@lastCoderResult=charsetEncoder.flush(encoderOut) @AT@ 10065 @LENGTH@ 1
------------INS MethodInvocation@@charsetEncoder.flush(encoderOut) @TO@ Assignment@@lastCoderResult=charsetEncoder.flush(encoderOut) @AT@ 10068 @LENGTH@ 32
---------------INS SimpleName@@Name:charsetEncoder @TO@ MethodInvocation@@charsetEncoder.flush(encoderOut) @AT@ 10068 @LENGTH@ 14
---------------INS SimpleName@@MethodName:flush:[encoderOut] @TO@ MethodInvocation@@charsetEncoder.flush(encoderOut) @AT@ 10083 @LENGTH@ 17
------------------INS SimpleName@@encoderOut @TO@ SimpleName@@MethodName:flush:[encoderOut] @AT@ 10089 @LENGTH@ 10


UPD IfStatement@@if (keepRunning) {  log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll.");} else {  log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.",e);} @TO@ if (keepRunning) {  log.warn("Exception from consuming from MongoDB caused by {}. Will try again on next poll.",e.getMessage());} else {  log.warn("Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped.",e.getMessage(),e);} @AT@ 2563 @LENGTH@ 449
---UPD Block@@ThenBody:{  log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll.");} @TO@ ThenBody:{  log.warn("Exception from consuming from MongoDB caused by {}. Will try again on next poll.",e.getMessage());} @AT@ 2580 @LENGTH@ 194
------UPD ExpressionStatement@@MethodInvocation:log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll.") @TO@ MethodInvocation:log.warn("Exception from consuming from MongoDB caused by {}. Will try again on next poll.",e.getMessage()) @AT@ 2606 @LENGTH@ 146
---------UPD MethodInvocation@@log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll.") @TO@ log.warn("Exception from consuming from MongoDB caused by {}. Will try again on next poll.",e.getMessage()) @AT@ 2606 @LENGTH@ 145
------------UPD SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll."] @TO@ MethodName:warn:["Exception from consuming from MongoDB caused by {}. Will try again on next poll.", e.getMessage()] @AT@ 2610 @LENGTH@ 141
---------------DEL InfixExpression@@"Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll." @AT@ 2615 @LENGTH@ 135
------------------DEL StringLiteral@@"Exception from consuming from MongoDB caused by " @AT@ 2615 @LENGTH@ 50
------------------DEL Operator@@+ @AT@ 2665 @LENGTH@ 1
------------------DEL MethodInvocation@@e.getMessage() @AT@ 2668 @LENGTH@ 14
------------------DEL StringLiteral@@". Will try again on next poll." @AT@ 2718 @LENGTH@ 32
---------------INS StringLiteral@@"Exception from consuming from MongoDB caused by {}. Will try again on next poll." @TO@ SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll."] @AT@ 2615 @LENGTH@ 82
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". Will try again on next poll."] @AT@ 2731 @LENGTH@ 14
------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 2668 @LENGTH@ 1
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 2670 @LENGTH@ 12
---UPD Block@@ElseBody:{  log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.",e);} @TO@ ElseBody:{  log.warn("Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped.",e.getMessage(),e);} @AT@ 2780 @LENGTH@ 232
------UPD ExpressionStatement@@MethodInvocation:log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.",e) @TO@ MethodInvocation:log.warn("Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped.",e.getMessage(),e) @AT@ 2806 @LENGTH@ 184
---------UPD MethodInvocation@@log.warn("Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.",e) @TO@ log.warn("Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped.",e.getMessage(),e) @AT@ 2806 @LENGTH@ 183
------------UPD SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.", e] @TO@ MethodName:warn:["Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped.", e.getMessage(), e] @AT@ 2810 @LENGTH@ 179
---------------INS StringLiteral@@"Exception from consuming from MongoDB caused by {}. ConsumerThread will be stopped." @TO@ SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.", e] @AT@ 2810 @LENGTH@ 85
---------------DEL InfixExpression@@"Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped." @AT@ 2815 @LENGTH@ 138
------------------DEL StringLiteral@@"Exception from consuming from MongoDB caused by " @AT@ 2815 @LENGTH@ 50
------------------DEL Operator@@+ @AT@ 2865 @LENGTH@ 1
------------------DEL MethodInvocation@@e.getMessage() @AT@ 2868 @LENGTH@ 14
------------------DEL StringLiteral@@". ConsumerThread will be stopped." @AT@ 2918 @LENGTH@ 35
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:warn:["Exception from consuming from MongoDB caused by " + e.getMessage() + ". ConsumerThread will be stopped.", e] @AT@ 2929 @LENGTH@ 14
------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 2868 @LENGTH@ 1
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 2870 @LENGTH@ 12


INS MethodDeclaration@@public, DataSource, MethodName:dataSource,  @TO@ TypeDeclaration@@[@Configuration, @EnableBatchProcessing, public, static]JobConfiguration,  @AT@ 3841 @LENGTH@ 265
---INS Modifier@@public @TO@ MethodDeclaration@@public, DataSource, MethodName:dataSource,  @AT@ 3841 @LENGTH@ 6
---INS SimpleType@@DataSource @TO@ MethodDeclaration@@public, DataSource, MethodName:dataSource,  @AT@ 3848 @LENGTH@ 10
---INS SimpleName@@MethodName:dataSource @TO@ MethodDeclaration@@public, DataSource, MethodName:dataSource,  @AT@ 3859 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @TO@ MethodDeclaration@@public, DataSource, MethodName:dataSource,  @AT@ 3877 @LENGTH@ 225
------INS MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @TO@ ReturnStatement@@MethodInvocation:new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 3884 @LENGTH@ 217
---------INS MethodInvocation@@MethodName:generateUniqueName:[true] @TO@ MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 3884 @LENGTH@ 203
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:generateUniqueName:[true] @AT@ 4082 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:addScript:["/org/springframework/batch/core/schema-hsqldb.sql"] @TO@ MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 3884 @LENGTH@ 172
------------INS StringLiteral@@"/org/springframework/batch/core/schema-hsqldb.sql" @TO@ MethodInvocation@@MethodName:addScript:["/org/springframework/batch/core/schema-hsqldb.sql"] @AT@ 4004 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:addScript:["/org/springframework/batch/core/schema-drop-hsqldb.sql"] @TO@ MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 3884 @LENGTH@ 103
------------INS StringLiteral@@"/org/springframework/batch/core/schema-drop-hsqldb.sql" @TO@ MethodInvocation@@MethodName:addScript:["/org/springframework/batch/core/schema-drop-hsqldb.sql"] @AT@ 3930 @LENGTH@ 56
---------INS ClassInstanceCreation@@EmbeddedDatabaseBuilder[] @TO@ MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 3884 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@EmbeddedDatabaseBuilder[] @AT@ 3884 @LENGTH@ 3
------------INS SimpleType@@EmbeddedDatabaseBuilder @TO@ ClassInstanceCreation@@EmbeddedDatabaseBuilder[] @AT@ 3888 @LENGTH@ 23
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new EmbeddedDatabaseBuilder().addScript("/org/springframework/batch/core/schema-drop-hsqldb.sql").addScript("/org/springframework/batch/core/schema-hsqldb.sql").generateUniqueName(true).build() @AT@ 4094 @LENGTH@ 7


INS IfStatement@@if (property.isDocumentReference()) {  return true;} @TO@ MethodDeclaration@@protected, boolean, MethodName:isAssociationConversionNecessary, Field documentField, @Nullable Object value,  @AT@ 17230 @LENGTH@ 56
---INS MethodInvocation@@property.isDocumentReference() @TO@ IfStatement@@if (property.isDocumentReference()) {  return true;} @AT@ 17233 @LENGTH@ 30
------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isDocumentReference() @AT@ 17233 @LENGTH@ 8
------INS SimpleName@@MethodName:isDocumentReference:[] @TO@ MethodInvocation@@property.isDocumentReference() @AT@ 17242 @LENGTH@ 21
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (property.isDocumentReference()) {  return true;} @AT@ 17265 @LENGTH@ 21
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 17270 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 17277 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:processSendsMessageWithException, Exception,  @TO@ public, void, MethodName:processSendsMessageWithException,  @AT@ 5778 @LENGTH@ 544
---DEL SimpleType@@Exception @AT@ 5832 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getMessage()).thenReturn(in) @TO@ MethodDeclaration@@public, void, MethodName:processSendsMessageWithException, Exception,  @AT@ 6163 @LENGTH@ 51
------INS MethodInvocation@@Mockito.when(exchange.getMessage()).thenReturn(in) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getMessage()).thenReturn(in) @AT@ 6163 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:when:[exchange.getMessage()] @TO@ MethodInvocation@@Mockito.when(exchange.getMessage()).thenReturn(in) @AT@ 6163 @LENGTH@ 35
------------INS MethodInvocation@@exchange.getMessage() @TO@ MethodInvocation@@MethodName:when:[exchange.getMessage()] @AT@ 6176 @LENGTH@ 21
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getMessage() @AT@ 6176 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exchange.getMessage() @AT@ 6185 @LENGTH@ 12
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(exchange.getMessage()).thenReturn(in) @AT@ 6163 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[in] @TO@ MethodInvocation@@Mockito.when(exchange.getMessage()).thenReturn(in) @AT@ 6199 @LENGTH@ 14
------------INS SimpleName@@in @TO@ SimpleName@@MethodName:thenReturn:[in] @AT@ 6210 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:assertThrows(Exception.class,() -> producer.process(exchange)) @TO@ MethodInvocation:assertThrows(ApiException.class,() -> producer.process(exchange)) @AT@ 6236 @LENGTH@ 80
------UPD MethodInvocation@@assertThrows(Exception.class,() -> producer.process(exchange)) @TO@ assertThrows(ApiException.class,() -> producer.process(exchange)) @AT@ 6236 @LENGTH@ 79
---------UPD SimpleName@@MethodName:assertThrows:[Exception.class, () -> producer.process(exchange)] @TO@ MethodName:assertThrows:[ApiException.class, () -> producer.process(exchange)] @AT@ 6236 @LENGTH@ 79
------------UPD TypeLiteral@@Exception.class @TO@ ApiException.class @AT@ 6249 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:Assert.notNull(source,"Source must not be null") @TO@ MethodDeclaration@@public, S, S extends Object, MethodName:convert, Object source, TypeInformation<? extends S> typeHint,  @AT@ 68277 @LENGTH@ 50
---INS MethodInvocation@@Assert.notNull(source,"Source must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(source,"Source must not be null") @AT@ 68277 @LENGTH@ 49
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(source,"Source must not be null") @AT@ 68277 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[source, "Source must not be null"] @TO@ MethodInvocation@@Assert.notNull(source,"Source must not be null") @AT@ 68284 @LENGTH@ 42
---------INS SimpleName@@source @TO@ SimpleName@@MethodName:notNull:[source, "Source must not be null"] @AT@ 68292 @LENGTH@ 6
---------INS StringLiteral@@"Source must not be null" @TO@ SimpleName@@MethodName:notNull:[source, "Source must not be null"] @AT@ 68300 @LENGTH@ 25


UPD FieldDeclaration@@public, static, final, String, [RETRIES="retries"] @TO@ static, final, String, [RETRIES="retries"] @AT@ 3387 @LENGTH@ 47
---DEL Modifier@@public @AT@ 3387 @LENGTH@ 6


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 2887 @LENGTH@ 113
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2902 @LENGTH@ 97
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 2930 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 2930 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2976 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:nestedParameters.putAll(this.parameters) @TO@ MethodInvocation:addRestEndpointParameters(operation,nestedParameters) @AT@ 18125 @LENGTH@ 41
---UPD MethodInvocation@@nestedParameters.putAll(this.parameters) @TO@ addRestEndpointParameters(operation,nestedParameters) @AT@ 18125 @LENGTH@ 40
------DEL SimpleName@@Name:nestedParameters @AT@ 18125 @LENGTH@ 16
------UPD SimpleName@@MethodName:putAll:[this.parameters] @TO@ MethodName:addRestEndpointParameters:[operation, nestedParameters] @AT@ 18142 @LENGTH@ 23
---------DEL FieldAccess@@this.parameters @AT@ 18149 @LENGTH@ 15
------------DEL ThisExpression@@this @AT@ 18149 @LENGTH@ 4
------------DEL SimpleName@@parameters @AT@ 18154 @LENGTH@ 10
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:putAll:[this.parameters] @AT@ 18151 @LENGTH@ 9
---------INS SimpleName@@nestedParameters @TO@ SimpleName@@MethodName:putAll:[this.parameters] @AT@ 18162 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:TestUtils.sleep(200) @TO@ MethodInvocation:TestUtils.sleep(400) @AT@ 2498 @LENGTH@ 21
---UPD MethodInvocation@@TestUtils.sleep(200) @TO@ TestUtils.sleep(400) @AT@ 2498 @LENGTH@ 20
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[400] @AT@ 2508 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 400 @AT@ 2514 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2138 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2138 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2138 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2143 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @TO@ TypeDeclaration@@[public]NimbusOpaqueTokenIntrospectorTests,  @AT@ 13886 @LENGTH@ 715
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 13886 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 13893 @LENGTH@ 4
---INS SimpleName@@MethodName:handleMissingContentType @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 13898 @LENGTH@ 24
---INS VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 13929 @LENGTH@ 59
------INS SimpleType@@RestOperations @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 13929 @LENGTH@ 14
------INS VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 13944 @LENGTH@ 43
---------INS SimpleName@@restOperations @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 13944 @LENGTH@ 14
---------INS MethodInvocation@@mock(RestOperations.class) @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 13961 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[RestOperations.class] @TO@ MethodInvocation@@mock(RestOperations.class) @AT@ 13961 @LENGTH@ 26
---------------INS TypeLiteral@@RestOperations.class @TO@ SimpleName@@MethodName:mock:[RestOperations.class] @AT@ 13966 @LENGTH@ 20
---INS VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE); @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 13991 @LENGTH@ 73
------INS ParameterizedType@@ResponseEntity<String> @TO@ VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE); @AT@ 13991 @LENGTH@ 22
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 13991 @LENGTH@ 14
---------INS SimpleType@@String @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 14006 @LENGTH@ 6
------INS VariableDeclarationFragment@@stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE) @TO@ VariableDeclarationStatement@@ResponseEntity<String> stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE); @AT@ 14014 @LENGTH@ 49
---------INS SimpleName@@stubResponse @TO@ VariableDeclarationFragment@@stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE) @AT@ 14014 @LENGTH@ 12
---------INS MethodInvocation@@ResponseEntity.ok(ACTIVE_RESPONSE) @TO@ VariableDeclarationFragment@@stubResponse=ResponseEntity.ok(ACTIVE_RESPONSE) @AT@ 14029 @LENGTH@ 34
------------INS SimpleName@@Name:ResponseEntity @TO@ MethodInvocation@@ResponseEntity.ok(ACTIVE_RESPONSE) @AT@ 14029 @LENGTH@ 14
------------INS SimpleName@@MethodName:ok:[ACTIVE_RESPONSE] @TO@ MethodInvocation@@ResponseEntity.ok(ACTIVE_RESPONSE) @AT@ 14044 @LENGTH@ 19
---------------INS SimpleName@@ACTIVE_RESPONSE @TO@ SimpleName@@MethodName:ok:[ACTIVE_RESPONSE] @AT@ 14047 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 14067 @LENGTH@ 100
------INS MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @TO@ ExpressionStatement@@MethodInvocation:given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 14067 @LENGTH@ 99
---------INS MethodInvocation@@MethodName:given:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @TO@ MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 14067 @LENGTH@ 74
------------INS MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @TO@ MethodInvocation@@MethodName:given:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @AT@ 14073 @LENGTH@ 67
---------------INS SimpleName@@Name:restOperations @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 14073 @LENGTH@ 14
---------------INS SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 14088 @LENGTH@ 52
------------------INS MethodInvocation@@any(RequestEntity.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 14097 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:any:[RequestEntity.class] @TO@ MethodInvocation@@any(RequestEntity.class) @AT@ 14097 @LENGTH@ 24
------------------------INS TypeLiteral@@RequestEntity.class @TO@ SimpleName@@MethodName:any:[RequestEntity.class] @AT@ 14101 @LENGTH@ 19
------------------INS MethodInvocation@@eq(String.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 14123 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:eq:[String.class] @TO@ MethodInvocation@@eq(String.class) @AT@ 14123 @LENGTH@ 16
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:eq:[String.class] @AT@ 14126 @LENGTH@ 12
---------INS SimpleName@@MethodName:willReturn:[stubResponse] @TO@ MethodInvocation@@given(restOperations.exchange(any(RequestEntity.class),eq(String.class))).willReturn(stubResponse) @AT@ 14142 @LENGTH@ 24
------------INS SimpleName@@stubResponse @TO@ SimpleName@@MethodName:willReturn:[stubResponse] @AT@ 14153 @LENGTH@ 12
---INS VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 14170 @LENGTH@ 119
------INS SimpleType@@OpaqueTokenIntrospector @TO@ VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @AT@ 14170 @LENGTH@ 23
------INS VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @TO@ VariableDeclarationStatement@@OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations); @AT@ 14194 @LENGTH@ 94
---------INS SimpleName@@introspectionClient @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @AT@ 14194 @LENGTH@ 19
---------INS ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @TO@ VariableDeclarationFragment@@introspectionClient=new NimbusOpaqueTokenIntrospector(INTROSPECTION_URL,restOperations) @AT@ 14216 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 14216 @LENGTH@ 3
------------INS SimpleType@@NimbusOpaqueTokenIntrospector @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 14220 @LENGTH@ 29
------------INS SimpleName@@INTROSPECTION_URL @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 14250 @LENGTH@ 17
------------INS SimpleName@@restOperations @TO@ ClassInstanceCreation@@NimbusOpaqueTokenIntrospector[INTROSPECTION_URL, restOperations] @AT@ 14273 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assumeThat(stubResponse.getHeaders().getContentType()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 14397 @LENGTH@ 64
------INS MethodInvocation@@assumeThat(stubResponse.getHeaders().getContentType()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assumeThat(stubResponse.getHeaders().getContentType()).isNull() @AT@ 14397 @LENGTH@ 63
---------INS MethodInvocation@@MethodName:assumeThat:[stubResponse.getHeaders().getContentType()] @TO@ MethodInvocation@@assumeThat(stubResponse.getHeaders().getContentType()).isNull() @AT@ 14397 @LENGTH@ 54
------------INS MethodInvocation@@stubResponse.getHeaders().getContentType() @TO@ MethodInvocation@@MethodName:assumeThat:[stubResponse.getHeaders().getContentType()] @AT@ 14408 @LENGTH@ 42
---------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@stubResponse.getHeaders().getContentType() @AT@ 14408 @LENGTH@ 25
---------------INS SimpleName@@Name:stubResponse @TO@ MethodInvocation@@stubResponse.getHeaders().getContentType() @AT@ 14408 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@stubResponse.getHeaders().getContentType() @AT@ 14434 @LENGTH@ 16
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assumeThat(stubResponse.getHeaders().getContentType()).isNull() @AT@ 14452 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @TO@ MethodDeclaration@@public, void, MethodName:handleMissingContentType,  @AT@ 14465 @LENGTH@ 133
------INS MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @TO@ ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 14465 @LENGTH@ 132
---------INS MethodInvocation@@MethodName:assertThatExceptionOfType:[OAuth2IntrospectionException.class] @TO@ MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 14465 @LENGTH@ 61
------------INS TypeLiteral@@OAuth2IntrospectionException.class @TO@ MethodInvocation@@MethodName:assertThatExceptionOfType:[OAuth2IntrospectionException.class] @AT@ 14491 @LENGTH@ 34
---------INS SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.introspect("sometokenhere")] @TO@ MethodInvocation@@assertThatExceptionOfType(OAuth2IntrospectionException.class).isThrownBy(() -> introspectionClient.introspect("sometokenhere")) @AT@ 14532 @LENGTH@ 65
------------INS LambdaExpression@@() -> introspectionClient.introspect("sometokenhere") @TO@ SimpleName@@MethodName:isThrownBy:[() -> introspectionClient.introspect("sometokenhere")] @AT@ 14543 @LENGTH@ 53
---------------INS MethodInvocation@@introspectionClient.introspect("sometokenhere") @TO@ LambdaExpression@@() -> introspectionClient.introspect("sometokenhere") @AT@ 14549 @LENGTH@ 47
------------------INS SimpleName@@Name:introspectionClient @TO@ MethodInvocation@@introspectionClient.introspect("sometokenhere") @AT@ 14549 @LENGTH@ 19
------------------INS SimpleName@@MethodName:introspect:["sometokenhere"] @TO@ MethodInvocation@@introspectionClient.introspect("sometokenhere") @AT@ 14569 @LENGTH@ 27
---------------------INS StringLiteral@@"sometokenhere" @TO@ SimpleName@@MethodName:introspect:["sometokenhere"] @AT@ 14580 @LENGTH@ 15


UPD ReturnStatement@@MethodInvocation:key.matches(N_OR_PATTERN) @TO@ InfixExpression:key.equalsIgnoreCase("$or") || key.equalsIgnoreCase("$nor") @AT@ 26041 @LENGTH@ 33
---INS InfixExpression@@key.equalsIgnoreCase("$or") || key.equalsIgnoreCase("$nor") @TO@ ReturnStatement@@MethodInvocation:key.matches(N_OR_PATTERN) @AT@ 25992 @LENGTH@ 59
------INS MethodInvocation@@key.equalsIgnoreCase("$or") @TO@ InfixExpression@@key.equalsIgnoreCase("$or") || key.equalsIgnoreCase("$nor") @AT@ 25992 @LENGTH@ 27
---------MOV SimpleName@@Name:key @TO@ MethodInvocation@@key.equalsIgnoreCase("$or") @AT@ 26048 @LENGTH@ 3
---------MOV SimpleName@@MethodName:matches:[N_OR_PATTERN] @TO@ MethodInvocation@@key.equalsIgnoreCase("$or") @AT@ 26052 @LENGTH@ 21
------------INS StringLiteral@@"$or" @TO@ SimpleName@@MethodName:matches:[N_OR_PATTERN] @AT@ 26013 @LENGTH@ 5
------------INS StringLiteral@@"$or" @TO@ SimpleName@@MethodName:matches:[N_OR_PATTERN] @AT@ 26013 @LENGTH@ 5
------INS Operator@@|| @TO@ InfixExpression@@key.equalsIgnoreCase("$or") || key.equalsIgnoreCase("$nor") @AT@ 26019 @LENGTH@ 2
------INS MethodInvocation@@key.equalsIgnoreCase("$nor") @TO@ InfixExpression@@key.equalsIgnoreCase("$or") || key.equalsIgnoreCase("$nor") @AT@ 26023 @LENGTH@ 28
---------INS SimpleName@@Name:key @TO@ MethodInvocation@@key.equalsIgnoreCase("$nor") @AT@ 26023 @LENGTH@ 3
---------INS SimpleName@@MethodName:equalsIgnoreCase:["$nor"] @TO@ MethodInvocation@@key.equalsIgnoreCase("$nor") @AT@ 26027 @LENGTH@ 24
------------INS StringLiteral@@"$nor" @TO@ SimpleName@@MethodName:equalsIgnoreCase:["$nor"] @AT@ 26044 @LENGTH@ 6
---DEL MethodInvocation@@key.matches(N_OR_PATTERN) @AT@ 26048 @LENGTH@ 25


UPD TypeDeclaration@@[@EnabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true"), public]KafkaConsumerIdempotentWithCustomSerializerIT, KafkaConsumerIdempotentTestSupport @TO@ [public]KafkaConsumerIdempotentWithCustomSerializerIT, KafkaConsumerIdempotentTestSupport @AT@ 1455 @LENGTH@ 2032
---DEL NormalAnnotation@@@EnabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true") @AT@ 1455 @LENGTH@ 93


UPD TypeDeclaration@@[@org.junit.Ignore("HIVE-25288"), public]TestMmCompactorOnTez, CompactorOnTezTest @TO@ [public]TestMmCompactorOnTez, CompactorOnTezTest @AT@ 2393 @LENGTH@ 29292
---DEL SingleMemberAnnotation@@@org.junit.Ignore("HIVE-25288") @AT@ 2393 @LENGTH@ 31


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(HttpSamlAuthRequestInterceptor.class)] @AT@ 1638 @LENGTH@ 103
---DEL Modifier@@private @AT@ 1638 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1646 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1653 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1659 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(HttpSamlAuthRequestInterceptor.class) @AT@ 1666 @LENGTH@ 74
------DEL SimpleName@@LOG @AT@ 1666 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(HttpSamlAuthRequestInterceptor.class) @AT@ 1672 @LENGTH@ 68
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1672 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[HttpSamlAuthRequestInterceptor.class] @AT@ 1693 @LENGTH@ 47
------------DEL TypeLiteral@@HttpSamlAuthRequestInterceptor.class @AT@ 1703 @LENGTH@ 36


INS MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @TO@ TypeDeclaration@@[public, final]AvailablePortFinder,  @AT@ 5093 @LENGTH@ 620
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5093 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5100 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5111 @LENGTH@ 3
---INS SimpleName@@MethodName:getSpecificPort @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5115 @LENGTH@ 15
---INS SingleVariableDeclaration@@int portNumber @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5131 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int portNumber @AT@ 5131 @LENGTH@ 3
------INS SimpleName@@portNumber @TO@ SingleVariableDeclaration@@int portNumber @AT@ 5135 @LENGTH@ 10
---INS SingleVariableDeclaration@@T failurePayload @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5147 @LENGTH@ 16
------INS SimpleType@@T @TO@ SingleVariableDeclaration@@T failurePayload @AT@ 5147 @LENGTH@ 1
------INS SimpleName@@failurePayload @TO@ SingleVariableDeclaration@@T failurePayload @AT@ 5149 @LENGTH@ 14
---INS SingleVariableDeclaration@@Function<T,Integer> failureHandler @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5165 @LENGTH@ 35
------INS ParameterizedType@@Function<T,Integer> @TO@ SingleVariableDeclaration@@Function<T,Integer> failureHandler @AT@ 5165 @LENGTH@ 20
---------INS SimpleType@@Function @TO@ ParameterizedType@@Function<T,Integer> @AT@ 5165 @LENGTH@ 8
---------INS SimpleType@@T @TO@ ParameterizedType@@Function<T,Integer> @AT@ 5174 @LENGTH@ 1
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Function<T,Integer> @AT@ 5177 @LENGTH@ 7
------INS SimpleName@@failureHandler @TO@ SingleVariableDeclaration@@Function<T,Integer> failureHandler @AT@ 5186 @LENGTH@ 14
---INS TryStatement@@try (Port port=INSTANCE.findPort(portNumber,portNumber)){  return port.getPort();} catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @TO@ MethodDeclaration@@public, static, int, T, MethodName:getSpecificPort, int portNumber, T failurePayload, Function<T,Integer> failureHandler,  @AT@ 5212 @LENGTH@ 495
------INS VariableDeclarationExpression@@Port port=INSTANCE.findPort(portNumber,portNumber) @TO@ TryStatement@@try (Port port=INSTANCE.findPort(portNumber,portNumber)){  return port.getPort();} catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5217 @LENGTH@ 53
---------INS SimpleType@@Port @TO@ VariableDeclarationExpression@@Port port=INSTANCE.findPort(portNumber,portNumber) @AT@ 5217 @LENGTH@ 4
---------INS VariableDeclarationFragment@@port=INSTANCE.findPort(portNumber,portNumber) @TO@ VariableDeclarationExpression@@Port port=INSTANCE.findPort(portNumber,portNumber) @AT@ 5222 @LENGTH@ 48
------------INS SimpleName@@port @TO@ VariableDeclarationFragment@@port=INSTANCE.findPort(portNumber,portNumber) @AT@ 5222 @LENGTH@ 4
------------INS MethodInvocation@@INSTANCE.findPort(portNumber,portNumber) @TO@ VariableDeclarationFragment@@port=INSTANCE.findPort(portNumber,portNumber) @AT@ 5229 @LENGTH@ 41
---------------INS SimpleName@@Name:INSTANCE @TO@ MethodInvocation@@INSTANCE.findPort(portNumber,portNumber) @AT@ 5229 @LENGTH@ 8
---------------INS SimpleName@@MethodName:findPort:[portNumber, portNumber] @TO@ MethodInvocation@@INSTANCE.findPort(portNumber,portNumber) @AT@ 5238 @LENGTH@ 32
------------------INS SimpleName@@portNumber @TO@ SimpleName@@MethodName:findPort:[portNumber, portNumber] @AT@ 5247 @LENGTH@ 10
------------------INS SimpleName@@portNumber @TO@ SimpleName@@MethodName:findPort:[portNumber, portNumber] @AT@ 5259 @LENGTH@ 10
------INS ReturnStatement@@MethodInvocation:port.getPort() @TO@ TryStatement@@try (Port port=INSTANCE.findPort(portNumber,portNumber)){  return port.getPort();} catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5286 @LENGTH@ 22
---------INS MethodInvocation@@port.getPort() @TO@ ReturnStatement@@MethodInvocation:port.getPort() @AT@ 5293 @LENGTH@ 14
------------INS SimpleName@@Name:port @TO@ MethodInvocation@@port.getPort() @AT@ 5293 @LENGTH@ 4
------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@port.getPort() @AT@ 5298 @LENGTH@ 9
------INS CatchClause@@catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @TO@ TryStatement@@try (Port port=INSTANCE.findPort(portNumber,portNumber)){  return port.getPort();} catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5319 @LENGTH@ 388
---------INS SingleVariableDeclaration@@IllegalStateException e @TO@ CatchClause@@catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5326 @LENGTH@ 23
------------INS SimpleType@@IllegalStateException @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 5326 @LENGTH@ 21
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalStateException e @AT@ 5348 @LENGTH@ 1
---------INS IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} else {  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @TO@ CatchClause@@catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5365 @LENGTH@ 274
------------INS MethodInvocation@@LOG.isTraceEnabled() @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} else {  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @AT@ 5369 @LENGTH@ 20
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 5369 @LENGTH@ 3
---------------INS SimpleName@@MethodName:isTraceEnabled:[] @TO@ MethodInvocation@@LOG.isTraceEnabled() @AT@ 5373 @LENGTH@ 16
------------INS Block@@ThenBody:{  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} else {  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @AT@ 5391 @LENGTH@ 123
---------------INS ExpressionStatement@@MethodInvocation:LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e) @TO@ Block@@ThenBody:{  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} @AT@ 5409 @LENGTH@ 91
------------------INS MethodInvocation@@LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e) @AT@ 5409 @LENGTH@ 90
---------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e) @AT@ 5409 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:trace:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage(), e] @TO@ MethodInvocation@@LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e) @AT@ 5413 @LENGTH@ 86
------------------------INS StringLiteral@@"Unable to obtain the requested TCP port {}: {}" @TO@ SimpleName@@MethodName:trace:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage(), e] @AT@ 5419 @LENGTH@ 48
------------------------INS SimpleName@@portNumber @TO@ SimpleName@@MethodName:trace:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage(), e] @AT@ 5469 @LENGTH@ 10
------------------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:trace:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage(), e] @AT@ 5481 @LENGTH@ 14
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 5481 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 5483 @LENGTH@ 12
------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:trace:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage(), e] @AT@ 5497 @LENGTH@ 1
------------INS Block@@ElseBody:{  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @TO@ IfStatement@@if (LOG.isTraceEnabled()) {  LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);} else {  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @AT@ 5520 @LENGTH@ 119
---------------INS ExpressionStatement@@MethodInvocation:LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage()) @TO@ Block@@ElseBody:{  LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());} @AT@ 5538 @LENGTH@ 87
------------------INS MethodInvocation@@LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage()) @AT@ 5538 @LENGTH@ 86
---------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage()) @AT@ 5538 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:warn:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage()] @TO@ MethodInvocation@@LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage()) @AT@ 5542 @LENGTH@ 82
------------------------INS StringLiteral@@"Unable to obtain the requested TCP port {}: {}" @TO@ SimpleName@@MethodName:warn:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage()] @AT@ 5547 @LENGTH@ 48
------------------------INS SimpleName@@portNumber @TO@ SimpleName@@MethodName:warn:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage()] @AT@ 5597 @LENGTH@ 10
------------------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:warn:["Unable to obtain the requested TCP port {}: {}", portNumber, e.getMessage()] @AT@ 5609 @LENGTH@ 14
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 5609 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 5611 @LENGTH@ 12
---------INS ReturnStatement@@MethodInvocation:failureHandler.apply(failurePayload) @TO@ CatchClause@@catch (IllegalStateException e) {  if (LOG.isTraceEnabled()) {    LOG.trace("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage(),e);  } else {    LOG.warn("Unable to obtain the requested TCP port {}: {}",portNumber,e.getMessage());  }  return failureHandler.apply(failurePayload);} @AT@ 5653 @LENGTH@ 44
------------INS MethodInvocation@@failureHandler.apply(failurePayload) @TO@ ReturnStatement@@MethodInvocation:failureHandler.apply(failurePayload) @AT@ 5660 @LENGTH@ 36
---------------INS SimpleName@@Name:failureHandler @TO@ MethodInvocation@@failureHandler.apply(failurePayload) @AT@ 5660 @LENGTH@ 14
---------------INS SimpleName@@MethodName:apply:[failurePayload] @TO@ MethodInvocation@@failureHandler.apply(failurePayload) @AT@ 5675 @LENGTH@ 21
------------------INS SimpleName@@failurePayload @TO@ SimpleName@@MethodName:apply:[failurePayload] @AT@ 5681 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:bouncyCastleAesGcmWithPredictableIvEquvalent, Exception,  @TO@ public, void, MethodName:bouncyCastleAesGcmWithPredictableIvEquivalent, Exception,  @AT@ 2542 @LENGTH@ 455
---UPD SimpleName@@MethodName:bouncyCastleAesGcmWithPredictableIvEquvalent @TO@ MethodName:bouncyCastleAesGcmWithPredictableIvEquivalent @AT@ 2554 @LENGTH@ 44


UPD IfStatement@@if (messageHeaderFiltersMap.containsKey(ns) && messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap && !allowFilterNamespaceClash) {  throw new IllegalArgumentException("More then one MessageHeaderRelay activates " + "for the same namespace: " + ns);} @TO@ if (messageHeaderFiltersMap.containsKey(ns) && !allowFilterNamespaceClash) {  throw new IllegalArgumentException("More then one MessageHeaderRelay activates " + "for the same namespace: " + ns);} @AT@ 5763 @LENGTH@ 440
---UPD InfixExpression@@messageHeaderFiltersMap.containsKey(ns) && messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap && !allowFilterNamespaceClash @TO@ messageHeaderFiltersMap.containsKey(ns) && !allowFilterNamespaceClash @AT@ 5767 @LENGTH@ 210
------DEL InfixExpression@@messageHeaderFiltersMap.containsKey(ns) && messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap @AT@ 5767 @LENGTH@ 160
---------DEL InfixExpression@@messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap @AT@ 5810 @LENGTH@ 117
------------DEL MethodInvocation@@messageHeaderFiltersMap.get(ns) @AT@ 5810 @LENGTH@ 31
---------------DEL SimpleName@@Name:messageHeaderFiltersMap @AT@ 5810 @LENGTH@ 23
---------------DEL SimpleName@@MethodName:get:[ns] @AT@ 5834 @LENGTH@ 7
------------------DEL SimpleName@@ns @AT@ 5838 @LENGTH@ 2
------------DEL Operator@@!= @AT@ 5841 @LENGTH@ 2
------------DEL SimpleName@@messageHeaderFiltersMap @AT@ 5904 @LENGTH@ 23
------MOV MethodInvocation@@messageHeaderFiltersMap.containsKey(ns) @TO@ InfixExpression@@messageHeaderFiltersMap.containsKey(ns) && messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap && !allowFilterNamespaceClash @AT@ 5767 @LENGTH@ 39
------MOV Operator@@&& @TO@ InfixExpression@@messageHeaderFiltersMap.containsKey(ns) && messageHeaderFiltersMap.get(ns) != messageHeaderFiltersMap && !allowFilterNamespaceClash @AT@ 5806 @LENGTH@ 2
------DEL Operator@@&& @AT@ 5927 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertThat(TextEscapeUtils.escapeEntities("abc\uD801a")).isEqualTo("abc&#66560;a") @TO@ MethodInvocation:assertThat(TextEscapeUtils.escapeEntities("abc\uD801\uDC00a")).isEqualTo("abc&#66560;a") @AT@ 1887 @LENGTH@ 83
---UPD MethodInvocation@@assertThat(TextEscapeUtils.escapeEntities("abc\uD801a")).isEqualTo("abc&#66560;a") @TO@ assertThat(TextEscapeUtils.escapeEntities("abc\uD801\uDC00a")).isEqualTo("abc&#66560;a") @AT@ 1887 @LENGTH@ 82
------UPD MethodInvocation@@MethodName:assertThat:[TextEscapeUtils.escapeEntities("abc\uD801a")] @TO@ MethodName:assertThat:[TextEscapeUtils.escapeEntities("abc\uD801\uDC00a")] @AT@ 1887 @LENGTH@ 56
---------UPD MethodInvocation@@TextEscapeUtils.escapeEntities("abc\uD801a") @TO@ TextEscapeUtils.escapeEntities("abc\uD801\uDC00a") @AT@ 1898 @LENGTH@ 44
------------UPD SimpleName@@MethodName:escapeEntities:["abc\uD801a"] @TO@ MethodName:escapeEntities:["abc\uD801\uDC00a"] @AT@ 1914 @LENGTH@ 28
---------------UPD StringLiteral@@"abc\uD801a" @TO@ "abc\uD801\uDC00a" @AT@ 1929 @LENGTH@ 12


UPD VariableDeclarationStatement@@final Object[] escapedValues=new String[values.size()]; @TO@ final Object[] escapedValues=new Object[values.size()]; @AT@ 4308 @LENGTH@ 57
---UPD VariableDeclarationFragment@@escapedValues=new String[values.size()] @TO@ escapedValues=new Object[values.size()] @AT@ 4323 @LENGTH@ 41
------UPD ArrayCreation@@new String[values.size()] @TO@ new Object[values.size()] @AT@ 4339 @LENGTH@ 25
---------UPD ArrayType@@String[] @TO@ Object[] @AT@ 4343 @LENGTH@ 21
------------UPD SimpleType@@String @TO@ Object @AT@ 4343 @LENGTH@ 6


DEL IfStatement@@if (listenerContainer instanceof InitializingBean) {  try {    ((InitializingBean)listenerContainer).afterPropertiesSet();  } catch (  Exception ex) {    throw new BeanInitializationException("Failed to initialize message listener container",ex);  }} @AT@ 7502 @LENGTH@ 264
---DEL InstanceofExpression@@listenerContainer instanceof InitializingBean @AT@ 7506 @LENGTH@ 45
------DEL SimpleName@@listenerContainer @AT@ 7506 @LENGTH@ 17
------DEL Instanceof@@instanceof @AT@ 7524 @LENGTH@ 10
------DEL SimpleType@@InitializingBean @AT@ 7535 @LENGTH@ 16
---DEL Block@@ThenBody:{  try {    ((InitializingBean)listenerContainer).afterPropertiesSet();  } catch (  Exception ex) {    throw new BeanInitializationException("Failed to initialize message listener container",ex);  }} @AT@ 7553 @LENGTH@ 213
------DEL TryStatement@@try {  ((InitializingBean)listenerContainer).afterPropertiesSet();} catch (Exception ex) {  throw new BeanInitializationException("Failed to initialize message listener container",ex);} @AT@ 7558 @LENGTH@ 204
---------DEL ExpressionStatement@@MethodInvocation:((InitializingBean)listenerContainer).afterPropertiesSet() @AT@ 7568 @LENGTH@ 60
---------DEL CatchClause@@catch (Exception ex) {  throw new BeanInitializationException("Failed to initialize message listener container",ex);} @AT@ 7637 @LENGTH@ 125
------------DEL SingleVariableDeclaration@@Exception ex @AT@ 7644 @LENGTH@ 12
---------------DEL SimpleType@@Exception @AT@ 7644 @LENGTH@ 9
---------------DEL SimpleName@@ex @AT@ 7654 @LENGTH@ 2
------------DEL ThrowStatement@@ClassInstanceCreation:new BeanInitializationException("Failed to initialize message listener container",ex) @AT@ 7664 @LENGTH@ 93
---------------DEL ClassInstanceCreation@@BeanInitializationException["Failed to initialize message listener container", ex] @AT@ 7670 @LENGTH@ 86
------------------DEL New@@new @AT@ 7670 @LENGTH@ 3
------------------DEL SimpleType@@BeanInitializationException @AT@ 7674 @LENGTH@ 27
------------------DEL StringLiteral@@"Failed to initialize message listener container" @AT@ 7702 @LENGTH@ 49
------------------DEL SimpleName@@ex @AT@ 7753 @LENGTH@ 2


DEL MethodDeclaration@@public, void, MethodName:setUpEmbeddedDatabase,  @AT@ 2758 @LENGTH@ 251
---DEL Modifier@@public @AT@ 2758 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2765 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUpEmbeddedDatabase @AT@ 2770 @LENGTH@ 21


UPD FieldDeclaration@@private, TimeBoundedBudget, [timeBoundedBudget] @TO@ private, final, TimeBoundedBudget, [timeBoundedBudget] @AT@ 981 @LENGTH@ 44
---INS Modifier@@final @TO@ FieldDeclaration@@private, TimeBoundedBudget, [timeBoundedBudget] @AT@ 1303 @LENGTH@ 5


UPD VariableDeclarationStatement@@String key=conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalWritingConverter()).asString(); @TO@ String key=conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalConverter()).asString(); @AT@ 7018 @LENGTH@ 144
---UPD VariableDeclarationFragment@@key=conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalWritingConverter()).asString() @TO@ key=conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalConverter()).asString() @AT@ 7025 @LENGTH@ 136
------UPD MethodInvocation@@conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalWritingConverter()).asString() @TO@ conversionService.writeValue(relatedEntry.getKey(),keyType,property.getOptionalConverter()).asString() @AT@ 7031 @LENGTH@ 130
---------UPD MethodInvocation@@MethodName:writeValue:[relatedEntry.getKey(), keyType, property.getOptionalWritingConverter()] @TO@ MethodName:writeValue:[relatedEntry.getKey(), keyType, property.getOptionalConverter()] @AT@ 7031 @LENGTH@ 109
------------UPD MethodInvocation@@property.getOptionalWritingConverter() @TO@ property.getOptionalConverter() @AT@ 7101 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:getOptionalWritingConverter:[] @TO@ MethodName:getOptionalConverter:[] @AT@ 7110 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertThat(TextEscapeUtils.escapeEntities("abc\uD888a")).isEqualTo("abca") @TO@ MethodInvocation:assertThat(TextEscapeUtils.escapeEntities("abc\uD888\uDC00a")).isEqualTo("abca") @AT@ 2033 @LENGTH@ 75
---UPD MethodInvocation@@assertThat(TextEscapeUtils.escapeEntities("abc\uD888a")).isEqualTo("abca") @TO@ assertThat(TextEscapeUtils.escapeEntities("abc\uD888\uDC00a")).isEqualTo("abca") @AT@ 2033 @LENGTH@ 74
------UPD MethodInvocation@@MethodName:assertThat:[TextEscapeUtils.escapeEntities("abc\uD888a")] @TO@ MethodName:assertThat:[TextEscapeUtils.escapeEntities("abc\uD888\uDC00a")] @AT@ 2033 @LENGTH@ 56
---------UPD MethodInvocation@@TextEscapeUtils.escapeEntities("abc\uD888a") @TO@ TextEscapeUtils.escapeEntities("abc\uD888\uDC00a") @AT@ 2044 @LENGTH@ 44
------------UPD SimpleName@@MethodName:escapeEntities:["abc\uD888a"] @TO@ MethodName:escapeEntities:["abc\uD888\uDC00a"] @AT@ 2060 @LENGTH@ 28
---------------UPD StringLiteral@@"abc\uD888a" @TO@ "abc\uD888\uDC00a" @AT@ 2075 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Encountered unexpected type " + type + " in processing schema.") @TO@ MethodInvocation:LOG.warn("Encountered unexpected type {} in processing schema.",type) @AT@ 6242 @LENGTH@ 75
---UPD MethodInvocation@@LOG.warn("Encountered unexpected type " + type + " in processing schema.") @TO@ LOG.warn("Encountered unexpected type {} in processing schema.",type) @AT@ 6242 @LENGTH@ 74
------UPD SimpleName@@MethodName:warn:["Encountered unexpected type " + type + " in processing schema."] @TO@ MethodName:warn:["Encountered unexpected type {} in processing schema.", type] @AT@ 6246 @LENGTH@ 70
---------DEL InfixExpression@@"Encountered unexpected type " + type + " in processing schema." @AT@ 6251 @LENGTH@ 64
------------DEL StringLiteral@@"Encountered unexpected type " @AT@ 6251 @LENGTH@ 30
------------DEL Operator@@+ @AT@ 6281 @LENGTH@ 1
------------DEL SimpleName@@type @AT@ 6284 @LENGTH@ 4
------------DEL StringLiteral@@" in processing schema." @AT@ 6291 @LENGTH@ 24
---------INS StringLiteral@@"Encountered unexpected type {} in processing schema." @TO@ SimpleName@@MethodName:warn:["Encountered unexpected type " + type + " in processing schema."] @AT@ 6251 @LENGTH@ 54
---------INS SimpleName@@type @TO@ SimpleName@@MethodName:warn:["Encountered unexpected type " + type + " in processing schema."] @AT@ 6307 @LENGTH@ 4


UPD MethodDeclaration@@protected, abstract, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction, @Nullable UnaryOperator<Integer> limitModifier,  @TO@ protected, abstract, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction, @Nullable UnaryOperator<Integer> limitModifier,  @AT@ 6458 @LENGTH@ 342
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 6683 @LENGTH@ 64
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 6693 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 6693 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 6702 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6693 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6704 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6716 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6729 @LENGTH@ 1
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 6693 @LENGTH@ 38


DEL MethodDeclaration@@private, static, List<String>, MethodName:getNames, ModelControllerClient client, String type,  @AT@ 4570 @LENGTH@ 851
---DEL Modifier@@private @AT@ 4570 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4578 @LENGTH@ 6
---DEL ParameterizedType@@List<String> @AT@ 4585 @LENGTH@ 12
------DEL SimpleType@@List @AT@ 4585 @LENGTH@ 4
------DEL SimpleType@@String @AT@ 4590 @LENGTH@ 6
---DEL SimpleName@@MethodName:getNames @AT@ 4598 @LENGTH@ 8
---DEL SingleVariableDeclaration@@ModelControllerClient client @AT@ 4607 @LENGTH@ 28
------DEL SimpleType@@ModelControllerClient @AT@ 4607 @LENGTH@ 21
------DEL SimpleName@@client @AT@ 4629 @LENGTH@ 6
---DEL SingleVariableDeclaration@@String type @AT@ 4637 @LENGTH@ 11
------DEL SimpleType@@String @AT@ 4637 @LENGTH@ 6
------DEL SimpleName@@type @AT@ 4644 @LENGTH@ 4
---DEL VariableDeclarationStatement@@final DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder(); @AT@ 4660 @LENGTH@ 84
------DEL Modifier@@final @AT@ 4660 @LENGTH@ 5
------DEL SimpleType@@DefaultOperationRequestBuilder @AT@ 4666 @LENGTH@ 30
------DEL VariableDeclarationFragment@@builder=new DefaultOperationRequestBuilder() @AT@ 4697 @LENGTH@ 46
---------DEL SimpleName@@builder @AT@ 4697 @LENGTH@ 7
---------DEL ClassInstanceCreation@@DefaultOperationRequestBuilder[] @AT@ 4707 @LENGTH@ 36
------------DEL New@@new @AT@ 4707 @LENGTH@ 3
------------DEL SimpleType@@DefaultOperationRequestBuilder @AT@ 4711 @LENGTH@ 30
---DEL VariableDeclarationStatement@@final ModelNode request; @AT@ 4753 @LENGTH@ 24
------DEL Modifier@@final @AT@ 4753 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 4759 @LENGTH@ 9
------DEL VariableDeclarationFragment@@request @AT@ 4769 @LENGTH@ 7
---------DEL SimpleName@@request @AT@ 4769 @LENGTH@ 7
---DEL TryStatement@@try {  builder.setOperationName(Util.READ_CHILDREN_NAMES);  builder.addNode(Util.SUBSYSTEM,Util.UNDERTOW);  builder.addProperty(Util.CHILD_TYPE,type);  request=builder.buildRequest();} catch (OperationFormatException e) {  throw new IllegalStateException("Failed to build operation",e);} @AT@ 4786 @LENGTH@ 365
------DEL ExpressionStatement@@MethodInvocation:builder.setOperationName(Util.READ_CHILDREN_NAMES) @AT@ 4804 @LENGTH@ 51
---------DEL MethodInvocation@@builder.setOperationName(Util.READ_CHILDREN_NAMES) @AT@ 4804 @LENGTH@ 50
------------DEL SimpleName@@Name:builder @AT@ 4804 @LENGTH@ 7
------------DEL SimpleName@@MethodName:setOperationName:[Util.READ_CHILDREN_NAMES] @AT@ 4812 @LENGTH@ 42
---------------DEL QualifiedName@@Util.READ_CHILDREN_NAMES @AT@ 4829 @LENGTH@ 24
------------------DEL SimpleName@@Util @AT@ 4829 @LENGTH@ 4
------------------DEL SimpleName@@READ_CHILDREN_NAMES @AT@ 4834 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:builder.addNode(Util.SUBSYSTEM,Util.UNDERTOW) @AT@ 4868 @LENGTH@ 47
---------DEL MethodInvocation@@builder.addNode(Util.SUBSYSTEM,Util.UNDERTOW) @AT@ 4868 @LENGTH@ 46
------------DEL SimpleName@@Name:builder @AT@ 4868 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addNode:[Util.SUBSYSTEM, Util.UNDERTOW] @AT@ 4876 @LENGTH@ 38
---------------DEL QualifiedName@@Util.SUBSYSTEM @AT@ 4884 @LENGTH@ 14
------------------DEL SimpleName@@Util @AT@ 4884 @LENGTH@ 4
------------------DEL SimpleName@@SUBSYSTEM @AT@ 4889 @LENGTH@ 9
---------------DEL QualifiedName@@Util.UNDERTOW @AT@ 4900 @LENGTH@ 13
------------------DEL SimpleName@@Util @AT@ 4900 @LENGTH@ 4
------------------DEL SimpleName@@UNDERTOW @AT@ 4905 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:builder.addProperty(Util.CHILD_TYPE,type) @AT@ 4928 @LENGTH@ 43
---------DEL MethodInvocation@@builder.addProperty(Util.CHILD_TYPE,type) @AT@ 4928 @LENGTH@ 42
------------DEL SimpleName@@Name:builder @AT@ 4928 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addProperty:[Util.CHILD_TYPE, type] @AT@ 4936 @LENGTH@ 34
---------------DEL QualifiedName@@Util.CHILD_TYPE @AT@ 4948 @LENGTH@ 15
------------------DEL SimpleName@@Util @AT@ 4948 @LENGTH@ 4
------------------DEL SimpleName@@CHILD_TYPE @AT@ 4953 @LENGTH@ 10
---------------DEL SimpleName@@type @AT@ 4965 @LENGTH@ 4
------DEL ExpressionStatement@@Assignment:request=builder.buildRequest() @AT@ 4984 @LENGTH@ 33
---------DEL Assignment@@request=builder.buildRequest() @AT@ 4984 @LENGTH@ 32
------------DEL SimpleName@@request @AT@ 4984 @LENGTH@ 7
------------DEL Operator@@= @AT@ 4991 @LENGTH@ 1
------------DEL MethodInvocation@@builder.buildRequest() @AT@ 4994 @LENGTH@ 22
---------------DEL SimpleName@@Name:builder @AT@ 4994 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:buildRequest:[] @AT@ 5002 @LENGTH@ 14
------DEL CatchClause@@catch (OperationFormatException e) {  throw new IllegalStateException("Failed to build operation",e);} @AT@ 5028 @LENGTH@ 123
---------DEL SingleVariableDeclaration@@OperationFormatException e @AT@ 5035 @LENGTH@ 26
------------DEL SimpleType@@OperationFormatException @AT@ 5035 @LENGTH@ 24
------------DEL SimpleName@@e @AT@ 5060 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Failed to build operation",e) @AT@ 5077 @LENGTH@ 64
------------DEL ClassInstanceCreation@@IllegalStateException["Failed to build operation", e] @AT@ 5083 @LENGTH@ 57
---------------DEL New@@new @AT@ 5083 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 5087 @LENGTH@ 21
---------------DEL StringLiteral@@"Failed to build operation" @AT@ 5109 @LENGTH@ 27
---------------DEL SimpleName@@e @AT@ 5138 @LENGTH@ 1
---DEL TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (Util.isSuccess(outcome)) {    return Util.getList(outcome);  }} catch (Exception e) {} @AT@ 5161 @LENGTH@ 213
------DEL VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 5179 @LENGTH@ 50
---------DEL Modifier@@final @AT@ 5179 @LENGTH@ 5
---------DEL SimpleType@@ModelNode @AT@ 5185 @LENGTH@ 9
---------DEL VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 5195 @LENGTH@ 33
------------DEL SimpleName@@outcome @AT@ 5195 @LENGTH@ 7
------------DEL MethodInvocation@@client.execute(request) @AT@ 5205 @LENGTH@ 23
---------------DEL SimpleName@@Name:client @AT@ 5205 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:execute:[request] @AT@ 5212 @LENGTH@ 16
------------------DEL SimpleName@@request @AT@ 5220 @LENGTH@ 7
------DEL IfStatement@@if (Util.isSuccess(outcome)) {  return Util.getList(outcome);} @AT@ 5242 @LENGTH@ 90
---------DEL MethodInvocation@@Util.isSuccess(outcome) @AT@ 5246 @LENGTH@ 23
------------DEL SimpleName@@Name:Util @AT@ 5246 @LENGTH@ 4
------------DEL SimpleName@@MethodName:isSuccess:[outcome] @AT@ 5251 @LENGTH@ 18
---------------DEL SimpleName@@outcome @AT@ 5261 @LENGTH@ 7
---------DEL Block@@ThenBody:{  return Util.getList(outcome);} @AT@ 5271 @LENGTH@ 61
------------DEL ReturnStatement@@MethodInvocation:Util.getList(outcome) @AT@ 5289 @LENGTH@ 29
---------------DEL MethodInvocation@@Util.getList(outcome) @AT@ 5296 @LENGTH@ 21
------------------DEL SimpleName@@Name:Util @AT@ 5296 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:getList:[outcome] @AT@ 5301 @LENGTH@ 16
---------------------DEL SimpleName@@outcome @AT@ 5309 @LENGTH@ 7
------DEL CatchClause@@catch (Exception e) {} @AT@ 5343 @LENGTH@ 31
---------DEL SingleVariableDeclaration@@Exception e @AT@ 5350 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 5350 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 5360 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 5384 @LENGTH@ 31
------DEL MethodInvocation@@Collections.emptyList() @AT@ 5391 @LENGTH@ 23
---------DEL SimpleName@@Name:Collections @AT@ 5391 @LENGTH@ 11
---------DEL SimpleName@@MethodName:emptyList:[] @AT@ 5403 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ MethodDeclaration@@void, MethodName:setUp,  @AT@ 2908 @LENGTH@ 110
---INS MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 2908 @LENGTH@ 109
------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 2908 @LENGTH@ 14
------INS SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 2923 @LENGTH@ 94
---------INS MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @AT@ 2943 @LENGTH@ 73
------------INS ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 2943 @LENGTH@ 51
---------------INS New@@new @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 2943 @LENGTH@ 3
---------------INS SimpleType@@MongoCustomConversions @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 2947 @LENGTH@ 22
---------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 2970 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2970 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2982 @LENGTH@ 11
------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 2995 @LENGTH@ 21


UPD VariableDeclarationStatement@@String b=String.format("        var %s = (%s) args.get(\"%s\");\n",vn,cn,vn); @TO@ String b=String.format("        var %s = (%s) args.get(\"%s\");%n",vn,cn,vn); @AT@ 6695 @LENGTH@ 82
---UPD VariableDeclarationFragment@@b=String.format("        var %s = (%s) args.get(\"%s\");\n",vn,cn,vn) @TO@ b=String.format("        var %s = (%s) args.get(\"%s\");%n",vn,cn,vn) @AT@ 6702 @LENGTH@ 74
------UPD MethodInvocation@@String.format("        var %s = (%s) args.get(\"%s\");\n",vn,cn,vn) @TO@ String.format("        var %s = (%s) args.get(\"%s\");%n",vn,cn,vn) @AT@ 6706 @LENGTH@ 70
---------UPD SimpleName@@MethodName:format:["        var %s = (%s) args.get(\"%s\");\n", vn, cn, vn] @TO@ MethodName:format:["        var %s = (%s) args.get(\"%s\");%n", vn, cn, vn] @AT@ 6713 @LENGTH@ 63
------------UPD StringLiteral@@"        var %s = (%s) args.get(\"%s\");\n" @TO@ "        var %s = (%s) args.get(\"%s\");%n" @AT@ 6720 @LENGTH@ 43


UPD IfStatement@@if (HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) != null || HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) == AS2DispositionType.FAILED.getType()) {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} else {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} @TO@ if (AS2DispositionType.FAILED.getType().equals(HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE))) {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} else {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} @AT@ 7088 @LENGTH@ 1685
---DEL InfixExpression@@HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) != null || HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) == AS2DispositionType.FAILED.getType() @AT@ 7092 @LENGTH@ 222
------DEL InfixExpression@@HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) != null @AT@ 7092 @LENGTH@ 76
---------DEL Operator@@!= @AT@ 7160 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 7164 @LENGTH@ 4
------DEL Operator@@|| @AT@ 7168 @LENGTH@ 2
------DEL InfixExpression@@HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) == AS2DispositionType.FAILED.getType() @AT@ 7188 @LENGTH@ 126
---------DEL MethodInvocation@@HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) @AT@ 7188 @LENGTH@ 68
------------DEL SimpleName@@Name:HttpMessageUtils @AT@ 7188 @LENGTH@ 16
------------DEL SimpleName@@MethodName:getHeaderValue:[request, AS2Header.DISPOSITION_TYPE] @AT@ 7205 @LENGTH@ 51
---------------DEL SimpleName@@request @AT@ 7220 @LENGTH@ 7
---------------DEL QualifiedName@@AS2Header.DISPOSITION_TYPE @AT@ 7229 @LENGTH@ 26
------------------DEL SimpleName@@AS2Header @AT@ 7229 @LENGTH@ 9
------------------DEL SimpleName@@DISPOSITION_TYPE @AT@ 7239 @LENGTH@ 16
---------DEL Operator@@== @AT@ 7256 @LENGTH@ 2
---------DEL MethodInvocation@@AS2DispositionType.FAILED.getType() @AT@ 7279 @LENGTH@ 35
---INS MethodInvocation@@AS2DispositionType.FAILED.getType().equals(HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE)) @TO@ IfStatement@@if (HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) != null || HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) == AS2DispositionType.FAILED.getType()) {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.FAILED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} else {  String mdnMessage=createMdnDescription(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,mdnMessageTemplate);  multipartReportEntity=new DispositionNotificationMultipartReportEntity(httpEntityEnclosingRequest,response,DispositionMode.AUTOMATIC_ACTION_MDN_SENT_AUTOMATICALLY,AS2DispositionType.PROCESSED,null,null,null,null,null,AS2Charset.US_ASCII,boundary,true,decryptingPrivateKey,mdnMessage);} @AT@ 7092 @LENGTH@ 129
------INS MethodInvocation@@MethodName:getType:[] @TO@ MethodInvocation@@AS2DispositionType.FAILED.getType().equals(HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE)) @AT@ 7092 @LENGTH@ 35
------MOV QualifiedName@@Name:AS2DispositionType.FAILED @TO@ MethodInvocation@@AS2DispositionType.FAILED.getType().equals(HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE)) @AT@ 7279 @LENGTH@ 25
------MOV SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@AS2DispositionType.FAILED.getType().equals(HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE)) @AT@ 7305 @LENGTH@ 9
---------MOV MethodInvocation@@HttpMessageUtils.getHeaderValue(request,AS2Header.DISPOSITION_TYPE) @TO@ SimpleName@@MethodName:getType:[] @AT@ 7092 @LENGTH@ 68


UPD Block@@ThenBody:{  transformer.reset();  transformers.offer(transformer);} @TO@ ThenBody:{  transformer.reset();  boolean result=transformers.offer(transformer);  if (!result) {    LOG.error("failed to offer() a transform");  }} @AT@ 13838 @LENGTH@ 89
---INS VariableDeclarationStatement@@boolean result=transformers.offer(transformer); @TO@ Block@@ThenBody:{  transformer.reset();  transformers.offer(transformer);} @AT@ 13885 @LENGTH@ 49
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=transformers.offer(transformer); @AT@ 13885 @LENGTH@ 7
------INS VariableDeclarationFragment@@result=transformers.offer(transformer) @TO@ VariableDeclarationStatement@@boolean result=transformers.offer(transformer); @AT@ 13893 @LENGTH@ 40
---------MOV MethodInvocation@@transformers.offer(transformer) @TO@ VariableDeclarationFragment@@result=transformers.offer(transformer) @AT@ 13885 @LENGTH@ 31
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=transformers.offer(transformer) @AT@ 13893 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:transformers.offer(transformer) @TO@ MethodInvocation:LOG.error("failed to offer() a transform") @AT@ 13885 @LENGTH@ 32
---INS IfStatement@@if (!result) {  LOG.error("failed to offer() a transform");} @TO@ Block@@ThenBody:{  transformer.reset();  transformers.offer(transformer);} @AT@ 13947 @LENGTH@ 88
------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("failed to offer() a transform");} @AT@ 13951 @LENGTH@ 7
---------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 13951 @LENGTH@ 1
---------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 13952 @LENGTH@ 6
------INS Block@@ThenBody:{  LOG.error("failed to offer() a transform");} @TO@ IfStatement@@if (!result) {  LOG.error("failed to offer() a transform");} @AT@ 13960 @LENGTH@ 75
---------MOV ExpressionStatement@@MethodInvocation:transformers.offer(transformer) @TO@ Block@@ThenBody:{  LOG.error("failed to offer() a transform");} @AT@ 13885 @LENGTH@ 32
------------INS MethodInvocation@@LOG.error("failed to offer() a transform") @TO@ ExpressionStatement@@MethodInvocation:transformers.offer(transformer) @AT@ 13978 @LENGTH@ 42
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("failed to offer() a transform") @AT@ 13978 @LENGTH@ 3
---------------INS SimpleName@@MethodName:error:["failed to offer() a transform"] @TO@ MethodInvocation@@LOG.error("failed to offer() a transform") @AT@ 13982 @LENGTH@ 38
------------------INS StringLiteral@@"failed to offer() a transform" @TO@ SimpleName@@MethodName:error:["failed to offer() a transform"] @AT@ 13988 @LENGTH@ 31


UPD VariableDeclarationStatement@@final long contentLength=Long.valueOf(objectMetadata.get("Content-Length")); @TO@ final long contentLength=Long.parseLong(objectMetadata.get("Content-Length")); @AT@ 9326 @LENGTH@ 78
---UPD VariableDeclarationFragment@@contentLength=Long.valueOf(objectMetadata.get("Content-Length")) @TO@ contentLength=Long.parseLong(objectMetadata.get("Content-Length")) @AT@ 9337 @LENGTH@ 66
------UPD MethodInvocation@@Long.valueOf(objectMetadata.get("Content-Length")) @TO@ Long.parseLong(objectMetadata.get("Content-Length")) @AT@ 9353 @LENGTH@ 50
---------UPD SimpleName@@MethodName:valueOf:[objectMetadata.get("Content-Length")] @TO@ MethodName:parseLong:[objectMetadata.get("Content-Length")] @AT@ 9358 @LENGTH@ 45


UPD TypeDeclaration@@[@SuppressWarnings("raw"), public]MessageChannelPartitionHandlerTests,  @TO@ [public]MessageChannelPartitionHandlerTests,  @AT@ 1238 @LENGTH@ 8056
---DEL SingleMemberAnnotation@@@SuppressWarnings("raw") @AT@ 1238 @LENGTH@ 24


UPD EnhancedForStatement@@for (Map.Entry<String,Object> evaluatedParam : spelEvaluator.evaluate(parameterAccessor.getValues()).entrySet()) {  Object value;  if (evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) {    value=evaluatedParam.getValue();  } else {    value=super.convertParameter(evaluatedParam.getValue());  }  resolvedParameters.put(evaluatedParam.getKey(),value);} @TO@ for (Map.Entry<String,Object> evaluatedParam : spelEvaluator.evaluate(parameterAccessor.getValues()).entrySet()) {  Object value=evaluatedParam.getValue();  if (!(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement)) {    Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);    value=super.convertParameter(evaluatedParam.getValue());  }  resolvedParameters.put(evaluatedParam.getKey(),value);} @AT@ 6881 @LENGTH@ 398
---UPD VariableDeclarationStatement@@Object value; @TO@ Object value=evaluatedParam.getValue(); @AT@ 7000 @LENGTH@ 13
------UPD VariableDeclarationFragment@@value @TO@ value=evaluatedParam.getValue() @AT@ 7007 @LENGTH@ 5
---------INS MethodInvocation@@evaluatedParam.getValue() @TO@ VariableDeclarationFragment@@value @AT@ 7015 @LENGTH@ 25
------------INS SimpleName@@Name:evaluatedParam @TO@ MethodInvocation@@evaluatedParam.getValue() @AT@ 7015 @LENGTH@ 14
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@evaluatedParam.getValue() @AT@ 7030 @LENGTH@ 10
---UPD IfStatement@@if (evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) {  value=evaluatedParam.getValue();} else {  value=super.convertParameter(evaluatedParam.getValue());} @TO@ if (!(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement)) {  Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 7018 @LENGTH@ 198
------INS PrefixExpression@@!(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) @TO@ IfStatement@@if (evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) {  value=evaluatedParam.getValue();} else {  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 7049 @LENGTH@ 75
---------INS Operator@@! @TO@ PrefixExpression@@!(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) @AT@ 7049 @LENGTH@ 1
---------INS ParenthesizedExpression@@(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) @TO@ PrefixExpression@@!(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) @AT@ 7050 @LENGTH@ 74
------------MOV InstanceofExpression@@evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement @TO@ ParenthesizedExpression@@(evaluatedParam.getValue() instanceof Neo4jSpelSupport.LiteralReplacement) @AT@ 7022 @LENGTH@ 72
------DEL Block@@ThenBody:{  value=evaluatedParam.getValue();} @AT@ 7096 @LENGTH@ 45
---------DEL ExpressionStatement@@Assignment:value=evaluatedParam.getValue() @AT@ 7102 @LENGTH@ 34
------------DEL Assignment@@value=evaluatedParam.getValue() @AT@ 7102 @LENGTH@ 33
---------------DEL SimpleName@@value @AT@ 7102 @LENGTH@ 5
---------------DEL Operator@@= @AT@ 7107 @LENGTH@ 1
---------------DEL MethodInvocation@@evaluatedParam.getValue() @AT@ 7110 @LENGTH@ 25
------------------DEL SimpleName@@Name:evaluatedParam @AT@ 7110 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 7125 @LENGTH@ 10
------UPD Block@@ElseBody:{  value=super.convertParameter(evaluatedParam.getValue());} @TO@ ThenBody:{  Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value);  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 7147 @LENGTH@ 69
---------INS ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @TO@ Block@@ElseBody:{  value=super.convertParameter(evaluatedParam.getValue());} @AT@ 7132 @LENGTH@ 69
------------INS MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @TO@ ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 7132 @LENGTH@ 68
---------------INS SimpleName@@Name:Neo4jQuerySupport @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 7132 @LENGTH@ 17
---------------INS SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(evaluatedParam.getKey(),value) @AT@ 7150 @LENGTH@ 50
------------------INS MethodInvocation@@evaluatedParam.getKey() @TO@ SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @AT@ 7169 @LENGTH@ 23
---------------------INS SimpleName@@Name:evaluatedParam @TO@ MethodInvocation@@evaluatedParam.getKey() @AT@ 7169 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@evaluatedParam.getKey() @AT@ 7184 @LENGTH@ 8
------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:logParameterIfNull:[evaluatedParam.getKey(), value] @AT@ 7194 @LENGTH@ 5


UPD VariableDeclarationStatement@@final FileVisitResult expectedFileVisitResult=AbstractFileFilter.toFileVisitResult(expected,path); @TO@ final FileVisitResult expectedFileVisitResult=AbstractFileFilter.toDefaultFileVisitResult(expected); @AT@ 2353 @LENGTH@ 101
---UPD VariableDeclarationFragment@@expectedFileVisitResult=AbstractFileFilter.toFileVisitResult(expected,path) @TO@ expectedFileVisitResult=AbstractFileFilter.toDefaultFileVisitResult(expected) @AT@ 2375 @LENGTH@ 78
------UPD MethodInvocation@@AbstractFileFilter.toFileVisitResult(expected,path) @TO@ AbstractFileFilter.toDefaultFileVisitResult(expected) @AT@ 2401 @LENGTH@ 52
---------UPD SimpleName@@MethodName:toFileVisitResult:[expected, path] @TO@ MethodName:toDefaultFileVisitResult:[expected] @AT@ 2420 @LENGTH@ 33
------------DEL SimpleName@@path @AT@ 2448 @LENGTH@ 4


UPD VariableDeclarationStatement@@MappingContext mappingContext=new MongoMappingContext(); @TO@ MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> mappingContext=new MongoMappingContext(); @AT@ 2618 @LENGTH@ 58
---DEL SimpleType@@MappingContext @AT@ 2618 @LENGTH@ 14
---INS ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @TO@ VariableDeclarationStatement@@MappingContext mappingContext=new MongoMappingContext(); @AT@ 2772 @LENGTH@ 65
------INS SimpleType@@MappingContext @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 2772 @LENGTH@ 14
------INS ParameterizedType@@MongoPersistentEntity<?> @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 2787 @LENGTH@ 24
---------INS SimpleType@@MongoPersistentEntity @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 2787 @LENGTH@ 21
---------INS WildcardType@@? @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 2809 @LENGTH@ 1
------INS SimpleType@@MongoPersistentProperty @TO@ ParameterizedType@@MappingContext<MongoPersistentEntity<?>,MongoPersistentProperty> @AT@ 2813 @LENGTH@ 23


INS VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @TO@ MethodDeclaration@@protected, void, MethodName:onDone,  @AT@ 10616 @LENGTH@ 50
---INS SimpleType@@ExtendedExchange @TO@ VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @AT@ 10616 @LENGTH@ 16
---INS VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @TO@ VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @AT@ 10633 @LENGTH@ 32
------INS SimpleName@@ee @TO@ VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @AT@ 10633 @LENGTH@ 2
------INS CastExpression@@(ExtendedExchange)exchange @TO@ VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @AT@ 10638 @LENGTH@ 27
---------INS SimpleType@@ExtendedExchange @TO@ CastExpression@@(ExtendedExchange)exchange @AT@ 10639 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ CastExpression@@(ExtendedExchange)exchange @AT@ 10657 @LENGTH@ 8


DEL MethodDeclaration@@private, static, void, MethodName:ignoreByteVector16, ByteBuffer input,  @AT@ 18849 @LENGTH@ 114
---DEL Modifier@@private @AT@ 18849 @LENGTH@ 7
---DEL Modifier@@static @AT@ 18857 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 18864 @LENGTH@ 4
---DEL SimpleName@@MethodName:ignoreByteVector16 @AT@ 18869 @LENGTH@ 18
---DEL SingleVariableDeclaration@@ByteBuffer input @AT@ 18888 @LENGTH@ 16
------DEL SimpleType@@ByteBuffer @AT@ 18888 @LENGTH@ 10
------DEL SimpleName@@input @AT@ 18899 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:ignoreByteVector(input,getInt16(input)) @AT@ 18916 @LENGTH@ 41
------DEL MethodInvocation@@ignoreByteVector(input,getInt16(input)) @AT@ 18916 @LENGTH@ 40
---------DEL SimpleName@@MethodName:ignoreByteVector:[input, getInt16(input)] @AT@ 18916 @LENGTH@ 40
------------DEL SimpleName@@input @AT@ 18933 @LENGTH@ 5
------------DEL MethodInvocation@@getInt16(input) @AT@ 18940 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:getInt16:[input] @AT@ 18940 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 18949 @LENGTH@ 5


UPD VariableDeclarationStatement@@HttpConfig httpConfig=null; @TO@ HttpConfig httpConfig=HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()); @AT@ 11831 @LENGTH@ 29
---UPD VariableDeclarationFragment@@httpConfig=null @TO@ httpConfig=HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 11842 @LENGTH@ 17
------DEL NullLiteral@@null @AT@ 11855 @LENGTH@ 4
------INS MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @TO@ VariableDeclarationFragment@@httpConfig=null @AT@ 11867 @LENGTH@ 107
---------INS MethodInvocation@@MethodName:getDefaultHttpConfig:[] @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 11867 @LENGTH@ 33
---------INS SimpleName@@Name:HttpConfig @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 11867 @LENGTH@ 10
---------INS SimpleName@@MethodName:withIgnoreSSLVerification:[clientConfigurations.isIgnoreSslVerification()] @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 11901 @LENGTH@ 73
------------INS MethodInvocation@@clientConfigurations.isIgnoreSslVerification() @TO@ SimpleName@@MethodName:withIgnoreSSLVerification:[clientConfigurations.isIgnoreSslVerification()] @AT@ 11927 @LENGTH@ 46
---------------INS SimpleName@@Name:clientConfigurations @TO@ MethodInvocation@@clientConfigurations.isIgnoreSslVerification() @AT@ 11927 @LENGTH@ 20
---------------INS SimpleName@@MethodName:isIgnoreSslVerification:[] @TO@ MethodInvocation@@clientConfigurations.isIgnoreSslVerification() @AT@ 11948 @LENGTH@ 25


UPD IfStatement@@if (mappingContext == null) {  mappingContext=new MongoMappingContext();  mappingContext.setInitialEntitySet(mappingContextConfigurer.initialEntitySet());  mappingContext.setAutoIndexCreation(mappingContextConfigurer.autocreateIndex);  mappingContext.afterPropertiesSet();} @TO@ if (mappingContext == null) {  mappingContext=new MongoMappingContext();  mappingContext.setInitialEntitySet(mappingContextConfigurer.initialEntitySet());  mappingContext.setAutoIndexCreation(mappingContextConfigurer.autocreateIndex);  if (mongoConverterConfigurer.customConversions != null) {    mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());  }  mappingContext.afterPropertiesSet();} @AT@ 4505 @LENGTH@ 287
---UPD Block@@ThenBody:{  mappingContext=new MongoMappingContext();  mappingContext.setInitialEntitySet(mappingContextConfigurer.initialEntitySet());  mappingContext.setAutoIndexCreation(mappingContextConfigurer.autocreateIndex);  mappingContext.afterPropertiesSet();} @TO@ ThenBody:{  mappingContext=new MongoMappingContext();  mappingContext.setInitialEntitySet(mappingContextConfigurer.initialEntitySet());  mappingContext.setAutoIndexCreation(mappingContextConfigurer.autocreateIndex);  if (mongoConverterConfigurer.customConversions != null) {    mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());  }  mappingContext.afterPropertiesSet();} @AT@ 4533 @LENGTH@ 259
------INS IfStatement@@if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @TO@ Block@@ThenBody:{  mappingContext=new MongoMappingContext();  mappingContext.setInitialEntitySet(mappingContextConfigurer.initialEntitySet());  mappingContext.setAutoIndexCreation(mappingContextConfigurer.autocreateIndex);  mappingContext.afterPropertiesSet();} @AT@ 4752 @LENGTH@ 167
---------INS InfixExpression@@mongoConverterConfigurer.customConversions != null @TO@ IfStatement@@if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @AT@ 4755 @LENGTH@ 50
------------INS QualifiedName@@mongoConverterConfigurer.customConversions @TO@ InfixExpression@@mongoConverterConfigurer.customConversions != null @AT@ 4755 @LENGTH@ 42
---------------INS SimpleName@@mongoConverterConfigurer @TO@ QualifiedName@@mongoConverterConfigurer.customConversions @AT@ 4755 @LENGTH@ 24
---------------INS SimpleName@@customConversions @TO@ QualifiedName@@mongoConverterConfigurer.customConversions @AT@ 4780 @LENGTH@ 17
------------INS Operator@@!= @TO@ InfixExpression@@mongoConverterConfigurer.customConversions != null @AT@ 4797 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@mongoConverterConfigurer.customConversions != null @AT@ 4801 @LENGTH@ 4
---------INS Block@@ThenBody:{  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @TO@ IfStatement@@if (mongoConverterConfigurer.customConversions != null) {  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @AT@ 4807 @LENGTH@ 112
------------INS ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder()) @TO@ Block@@ThenBody:{  mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder());} @AT@ 4813 @LENGTH@ 101
---------------INS MethodInvocation@@mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder()) @AT@ 4813 @LENGTH@ 100
------------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder()) @AT@ 4813 @LENGTH@ 14
------------------INS SimpleName@@MethodName:setSimpleTypeHolder:[mongoConverterConfigurer.customConversions.getSimpleTypeHolder()] @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(mongoConverterConfigurer.customConversions.getSimpleTypeHolder()) @AT@ 4828 @LENGTH@ 85
---------------------INS MethodInvocation@@mongoConverterConfigurer.customConversions.getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[mongoConverterConfigurer.customConversions.getSimpleTypeHolder()] @AT@ 4848 @LENGTH@ 64
------------------------INS QualifiedName@@Name:mongoConverterConfigurer.customConversions @TO@ MethodInvocation@@mongoConverterConfigurer.customConversions.getSimpleTypeHolder() @AT@ 4848 @LENGTH@ 42
------------------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@mongoConverterConfigurer.customConversions.getSimpleTypeHolder() @AT@ 4891 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:ee.setUnitOfWork(null) @TO@ MethodDeclaration@@public, static, void, MethodName:doneUow, UnitOfWork uow, Exchange exchange,  @AT@ 2544 @LENGTH@ 23
---INS MethodInvocation@@ee.setUnitOfWork(null) @TO@ ExpressionStatement@@MethodInvocation:ee.setUnitOfWork(null) @AT@ 2544 @LENGTH@ 22
------INS SimpleName@@Name:ee @TO@ MethodInvocation@@ee.setUnitOfWork(null) @AT@ 2544 @LENGTH@ 2
------INS SimpleName@@MethodName:setUnitOfWork:[null] @TO@ MethodInvocation@@ee.setUnitOfWork(null) @AT@ 2547 @LENGTH@ 19
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setUnitOfWork:[null] @AT@ 2561 @LENGTH@ 4


UPD TypeDeclaration@@[@UriParams, public, abstract]EmbeddedDebeziumConfiguration,  @TO@ [@UriParams, public, abstract]EmbeddedDebeziumConfiguration, [Cloneable] @AT@ 1390 @LENGTH@ 16155
---INS SimpleType@@Cloneable @TO@ TypeDeclaration@@[@UriParams, public, abstract]EmbeddedDebeziumConfiguration,  @AT@ 1511 @LENGTH@ 9


UPD TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.1"), public]FluentNeo4jOperations, [FluentFindOperation] @TO@ [@API(status=API.Status.STABLE,since="6.1"), public]FluentNeo4jOperations, [FluentFindOperation, FluentSaveOperation] @AT@ 961 @LENGTH@ 118
---INS SimpleType@@FluentSaveOperation @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="6.1"), public]FluentNeo4jOperations, [FluentFindOperation] @AT@ 1077 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Subject returned was null and createEmtpySubject is true; " + "creating new empty subject to run as.") @TO@ MethodInvocation:this.logger.debug("Subject returned was null and createEmptySubject is true; " + "creating new empty subject to run as.") @AT@ 3104 @LENGTH@ 127
---UPD MethodInvocation@@this.logger.debug("Subject returned was null and createEmtpySubject is true; " + "creating new empty subject to run as.") @TO@ this.logger.debug("Subject returned was null and createEmptySubject is true; " + "creating new empty subject to run as.") @AT@ 3104 @LENGTH@ 126
------UPD SimpleName@@MethodName:debug:["Subject returned was null and createEmtpySubject is true; " + "creating new empty subject to run as."] @TO@ MethodName:debug:["Subject returned was null and createEmptySubject is true; " + "creating new empty subject to run as."] @AT@ 3116 @LENGTH@ 114
---------UPD InfixExpression@@"Subject returned was null and createEmtpySubject is true; " + "creating new empty subject to run as." @TO@ "Subject returned was null and createEmptySubject is true; " + "creating new empty subject to run as." @AT@ 3122 @LENGTH@ 107
------------UPD StringLiteral@@"Subject returned was null and createEmtpySubject is true; " @TO@ "Subject returned was null and createEmptySubject is true; " @AT@ 3122 @LENGTH@ 60


UPD TryStatement@@try {  KafkaConfiguration copy=(KafkaConfiguration)clone();  return copy;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @TO@ try {  KafkaConfiguration copy=(KafkaConfiguration)clone();  copy.additionalProperties=new HashMap<>(this.additionalProperties);  return copy;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 15537 @LENGTH@ 205
---INS ExpressionStatement@@Assignment:copy.additionalProperties=new HashMap<>(this.additionalProperties) @TO@ TryStatement@@try {  KafkaConfiguration copy=(KafkaConfiguration)clone();  return copy;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 15623 @LENGTH@ 69
------INS Assignment@@copy.additionalProperties=new HashMap<>(this.additionalProperties) @TO@ ExpressionStatement@@Assignment:copy.additionalProperties=new HashMap<>(this.additionalProperties) @AT@ 15623 @LENGTH@ 68
---------INS QualifiedName@@copy.additionalProperties @TO@ Assignment@@copy.additionalProperties=new HashMap<>(this.additionalProperties) @AT@ 15623 @LENGTH@ 25
------------INS SimpleName@@copy @TO@ QualifiedName@@copy.additionalProperties @AT@ 15623 @LENGTH@ 4
------------INS SimpleName@@additionalProperties @TO@ QualifiedName@@copy.additionalProperties @AT@ 15628 @LENGTH@ 20
---------INS Operator@@= @TO@ Assignment@@copy.additionalProperties=new HashMap<>(this.additionalProperties) @AT@ 15648 @LENGTH@ 1
---------INS ClassInstanceCreation@@HashMap<>[this.additionalProperties] @TO@ Assignment@@copy.additionalProperties=new HashMap<>(this.additionalProperties) @AT@ 15651 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[this.additionalProperties] @AT@ 15651 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[this.additionalProperties] @AT@ 15655 @LENGTH@ 9
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 15655 @LENGTH@ 7
------------INS FieldAccess@@this.additionalProperties @TO@ ClassInstanceCreation@@HashMap<>[this.additionalProperties] @AT@ 15665 @LENGTH@ 25
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.additionalProperties @AT@ 15665 @LENGTH@ 4
---------------INS SimpleName@@additionalProperties @TO@ FieldAccess@@this.additionalProperties @AT@ 15670 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isRegularFile(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isRegularFile(file)) @AT@ 3227 @LENGTH@ 58
---UPD MethodInvocation@@toFileVisitResult(Files.isRegularFile(file),file) @TO@ toFileVisitResult(Files.isRegularFile(file)) @AT@ 3234 @LENGTH@ 50
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isRegularFile(file), file] @TO@ MethodName:toFileVisitResult:[Files.isRegularFile(file)] @AT@ 3234 @LENGTH@ 50
---------DEL SimpleName@@file @AT@ 3279 @LENGTH@ 4


UPD MethodDeclaration@@protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction, UnaryOperator<Integer> limitModifier,  @TO@ protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction, UnaryOperator<Integer> limitModifier,  @AT@ 8518 @LENGTH@ 876
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 8731 @LENGTH@ 64
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 8741 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 8777 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 8777 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 8786 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 8741 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 8752 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 8764 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 8777 @LENGTH@ 1


UPD TryStatement@@try {  SoroushMessage soroushMessage=objectMapper.readValue(data,SoroushMessage.class);  exchange.getIn().setBody(soroushMessage);  if (LOG.isDebugEnabled()) {    LOG.debug("event data is: " + data);  }  if (endpoint.isAutoDownload()) {    endpoint.handleDownloadFiles(soroushMessage);  }  sendExchange(exchange);} catch (Exception ex) {  getExceptionHandler().handleException(ex);} @TO@ try {  SoroushMessage soroushMessage=objectMapper.readValue(data,SoroushMessage.class);  exchange.getIn().setBody(soroushMessage);  LOG.debug("event data is: {}",data);  if (endpoint.isAutoDownload()) {    endpoint.handleDownloadFiles(soroushMessage);  }  sendExchange(exchange);} catch (Exception ex) {  getExceptionHandler().handleException(ex);} @AT@ 5558 @LENGTH@ 798
---INS ExpressionStatement@@MethodInvocation:LOG.debug("event data is: {}",data) @TO@ TryStatement@@try {  SoroushMessage soroushMessage=objectMapper.readValue(data,SoroushMessage.class);  exchange.getIn().setBody(soroushMessage);  if (LOG.isDebugEnabled()) {    LOG.debug("event data is: " + data);  }  if (endpoint.isAutoDownload()) {    endpoint.handleDownloadFiles(soroushMessage);  }  sendExchange(exchange);} catch (Exception ex) {  getExceptionHandler().handleException(ex);} @AT@ 5665 @LENGTH@ 37
------MOV MethodInvocation@@LOG.debug("event data is: " + data) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("event data is: {}",data) @AT@ 5802 @LENGTH@ 35
---DEL IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("event data is: " + data);} @AT@ 5750 @LENGTH@ 110
------DEL MethodInvocation@@LOG.isDebugEnabled() @AT@ 5754 @LENGTH@ 20
---------DEL SimpleName@@Name:LOG @AT@ 5754 @LENGTH@ 3
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 5758 @LENGTH@ 16
------DEL Block@@ThenBody:{  LOG.debug("event data is: " + data);} @AT@ 5776 @LENGTH@ 84
---------DEL ExpressionStatement@@MethodInvocation:LOG.debug("event data is: " + data) @AT@ 5802 @LENGTH@ 36


UPD ReturnStatement@@ClassInstanceCreation:new Byte(string) @TO@ MethodInvocation:Byte.valueOf(string) @AT@ 1844 @LENGTH@ 24
---INS MethodInvocation@@Byte.valueOf(string) @TO@ ReturnStatement@@ClassInstanceCreation:new Byte(string) @AT@ 1851 @LENGTH@ 20
------INS SimpleName@@Name:Byte @TO@ MethodInvocation@@Byte.valueOf(string) @AT@ 1851 @LENGTH@ 4
------INS SimpleName@@MethodName:valueOf:[string] @TO@ MethodInvocation@@Byte.valueOf(string) @AT@ 1856 @LENGTH@ 15
---------INS SimpleName@@string @TO@ SimpleName@@MethodName:valueOf:[string] @AT@ 1864 @LENGTH@ 6
---DEL ClassInstanceCreation@@Byte[string] @AT@ 1851 @LENGTH@ 16
------DEL New@@new @AT@ 1851 @LENGTH@ 3
------DEL SimpleType@@Byte @AT@ 1855 @LENGTH@ 4
------DEL SimpleName@@string @AT@ 1860 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:operation.get(NAME).asString() @TO@ MethodInvocation:operation.get(OP).asString() @AT@ 25039 @LENGTH@ 38
---UPD MethodInvocation@@operation.get(NAME).asString() @TO@ operation.get(OP).asString() @AT@ 25046 @LENGTH@ 30
------UPD MethodInvocation@@MethodName:get:[NAME] @TO@ MethodName:get:[OP] @AT@ 25046 @LENGTH@ 19
---------UPD SimpleName@@NAME @TO@ OP @AT@ 25060 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @TO@ TypeDeclaration@@[public]MetaStoreUtils,  @AT@ 9101 @LENGTH@ 283
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9101 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9108 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9115 @LENGTH@ 7
---INS SimpleName@@MethodName:isDbReplIncompatible @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9123 @LENGTH@ 20
---INS SingleVariableDeclaration@@Database db @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9144 @LENGTH@ 11
------INS SimpleType@@Database @TO@ SingleVariableDeclaration@@Database db @AT@ 9144 @LENGTH@ 8
------INS SimpleName@@db @TO@ SingleVariableDeclaration@@Database db @AT@ 9153 @LENGTH@ 2
---INS IfStatement@@if (db == null) {  return false;} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9163 @LENGTH@ 43
------INS InfixExpression@@db == null @TO@ IfStatement@@if (db == null) {  return false;} @AT@ 9167 @LENGTH@ 10
---------INS SimpleName@@db @TO@ InfixExpression@@db == null @AT@ 9167 @LENGTH@ 2
---------INS Operator@@== @TO@ InfixExpression@@db == null @AT@ 9169 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@db == null @AT@ 9173 @LENGTH@ 4
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (db == null) {  return false;} @AT@ 9179 @LENGTH@ 27
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 9187 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 9194 @LENGTH@ 5
---INS VariableDeclarationStatement@@Map<String,String> dbParameters=db.getParameters(); @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9211 @LENGTH@ 54
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> dbParameters=db.getParameters(); @AT@ 9211 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 9211 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 9215 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 9223 @LENGTH@ 6
------INS VariableDeclarationFragment@@dbParameters=db.getParameters() @TO@ VariableDeclarationStatement@@Map<String,String> dbParameters=db.getParameters(); @AT@ 9231 @LENGTH@ 33
---------INS SimpleName@@dbParameters @TO@ VariableDeclarationFragment@@dbParameters=db.getParameters() @AT@ 9231 @LENGTH@ 12
---------INS MethodInvocation@@db.getParameters() @TO@ VariableDeclarationFragment@@dbParameters=db.getParameters() @AT@ 9246 @LENGTH@ 18
------------INS SimpleName@@Name:db @TO@ MethodInvocation@@db.getParameters() @AT@ 9246 @LENGTH@ 2
------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@db.getParameters() @AT@ 9249 @LENGTH@ 15
---INS ReturnStatement@@InfixExpression:dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @TO@ MethodDeclaration@@public, static, boolean, MethodName:isDbReplIncompatible, Database db,  @AT@ 9270 @LENGTH@ 110
------INS InfixExpression@@dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @TO@ ReturnStatement@@InfixExpression:dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9277 @LENGTH@ 102
---------INS InfixExpression@@dbParameters != null @TO@ InfixExpression@@dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9277 @LENGTH@ 20
------------INS SimpleName@@dbParameters @TO@ InfixExpression@@dbParameters != null @AT@ 9277 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@dbParameters != null @AT@ 9289 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@dbParameters != null @AT@ 9293 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9297 @LENGTH@ 2
---------INS MethodInvocation@@ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @TO@ InfixExpression@@dbParameters != null && ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9301 @LENGTH@ 78
------------INS QualifiedName@@Name:ReplConst.TRUE @TO@ MethodInvocation@@ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9301 @LENGTH@ 14
------------INS SimpleName@@MethodName:equalsIgnoreCase:[dbParameters.get(ReplConst.REPL_INCOMPATIBLE)] @TO@ MethodInvocation@@ReplConst.TRUE.equalsIgnoreCase(dbParameters.get(ReplConst.REPL_INCOMPATIBLE)) @AT@ 9316 @LENGTH@ 63
---------------INS MethodInvocation@@dbParameters.get(ReplConst.REPL_INCOMPATIBLE) @TO@ SimpleName@@MethodName:equalsIgnoreCase:[dbParameters.get(ReplConst.REPL_INCOMPATIBLE)] @AT@ 9333 @LENGTH@ 45
------------------INS SimpleName@@Name:dbParameters @TO@ MethodInvocation@@dbParameters.get(ReplConst.REPL_INCOMPATIBLE) @AT@ 9333 @LENGTH@ 12
------------------INS SimpleName@@MethodName:get:[ReplConst.REPL_INCOMPATIBLE] @TO@ MethodInvocation@@dbParameters.get(ReplConst.REPL_INCOMPATIBLE) @AT@ 9346 @LENGTH@ 32
---------------------INS QualifiedName@@ReplConst.REPL_INCOMPATIBLE @TO@ SimpleName@@MethodName:get:[ReplConst.REPL_INCOMPATIBLE] @AT@ 9350 @LENGTH@ 27
------------------------INS SimpleName@@ReplConst @TO@ QualifiedName@@ReplConst.REPL_INCOMPATIBLE @AT@ 9350 @LENGTH@ 9
------------------------INS SimpleName@@REPL_INCOMPATIBLE @TO@ QualifiedName@@ReplConst.REPL_INCOMPATIBLE @AT@ 9360 @LENGTH@ 17


UPD IfStatement@@if (byte[].class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(out);} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ if (byte[].class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(out);} else if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4340 @LENGTH@ 1249
---INS Block@@ElseBody:if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ IfStatement@@if (byte[].class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(out);} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4531 @LENGTH@ 1270
------INS IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ Block@@ElseBody:if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4531 @LENGTH@ 1270
---------MOV Block@@ElseBody:if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4503 @LENGTH@ 1086
---------INS MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4535 @LENGTH@ 39
------------INS TypeLiteral@@ByteBuffer.class @TO@ MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @AT@ 4535 @LENGTH@ 16
------------INS SimpleName@@MethodName:isAssignableFrom:[type] @TO@ MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @AT@ 4552 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAssignableFrom:[type] @AT@ 4569 @LENGTH@ 4
---------INS Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4576 @LENGTH@ 133
------------INS VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @TO@ Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @AT@ 4594 @LENGTH@ 45
---------------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @AT@ 4594 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4594 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @TO@ VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @AT@ 4601 @LENGTH@ 37
------------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @AT@ 4601 @LENGTH@ 3
------------------INS MethodInvocation@@mapper.writeValueAsBytes(value) @TO@ VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @AT@ 4607 @LENGTH@ 31
---------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsBytes(value) @AT@ 4607 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:writeValueAsBytes:[value] @TO@ MethodInvocation@@mapper.writeValueAsBytes(value) @AT@ 4614 @LENGTH@ 24
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:writeValueAsBytes:[value] @AT@ 4632 @LENGTH@ 5
------------INS ReturnStatement@@MethodInvocation:type.cast(ByteBuffer.wrap(out)) @TO@ Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @AT@ 4656 @LENGTH@ 39
---------------INS MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @TO@ ReturnStatement@@MethodInvocation:type.cast(ByteBuffer.wrap(out)) @AT@ 4663 @LENGTH@ 31
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @AT@ 4663 @LENGTH@ 4
------------------INS SimpleName@@MethodName:cast:[ByteBuffer.wrap(out)] @TO@ MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @AT@ 4668 @LENGTH@ 26
---------------------INS MethodInvocation@@ByteBuffer.wrap(out) @TO@ SimpleName@@MethodName:cast:[ByteBuffer.wrap(out)] @AT@ 4673 @LENGTH@ 20
------------------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap(out) @AT@ 4673 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:wrap:[out] @TO@ MethodInvocation@@ByteBuffer.wrap(out) @AT@ 4684 @LENGTH@ 9
---------------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:wrap:[out] @AT@ 4689 @LENGTH@ 3
------INS IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ Block@@ElseBody:if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4531 @LENGTH@ 1270
---------MOV Block@@ElseBody:if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4503 @LENGTH@ 1086
---------INS MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4535 @LENGTH@ 39
------------INS TypeLiteral@@ByteBuffer.class @TO@ MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @AT@ 4535 @LENGTH@ 16
------------INS SimpleName@@MethodName:isAssignableFrom:[type] @TO@ MethodInvocation@@ByteBuffer.class.isAssignableFrom(type) @AT@ 4552 @LENGTH@ 22
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:isAssignableFrom:[type] @AT@ 4569 @LENGTH@ 4
---------INS Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @TO@ IfStatement@@if (ByteBuffer.class.isAssignableFrom(type)) {  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} else if (mapper.canSerialize(type) && !Enum.class.isAssignableFrom(type)) {  if (String.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((String)value,type);  } else   if (byte[].class.isAssignableFrom(value.getClass())) {    return mapper.readValue((byte[])value,type);  } else   if (File.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((File)value,type);  } else   if (InputStream.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((InputStream)value,type);  } else   if (Reader.class.isAssignableFrom(value.getClass())) {    return mapper.readValue((Reader)value,type);  } else {    return mapper.convertValue(value,type);  }} @AT@ 4576 @LENGTH@ 133
------------INS VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @TO@ Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @AT@ 4594 @LENGTH@ 45
---------------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @AT@ 4594 @LENGTH@ 6
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4594 @LENGTH@ 4
---------------INS VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @TO@ VariableDeclarationStatement@@byte[] out=mapper.writeValueAsBytes(value); @AT@ 4601 @LENGTH@ 37
------------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @AT@ 4601 @LENGTH@ 3
------------------INS MethodInvocation@@mapper.writeValueAsBytes(value) @TO@ VariableDeclarationFragment@@out=mapper.writeValueAsBytes(value) @AT@ 4607 @LENGTH@ 31
---------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsBytes(value) @AT@ 4607 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:writeValueAsBytes:[value] @TO@ MethodInvocation@@mapper.writeValueAsBytes(value) @AT@ 4614 @LENGTH@ 24
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:writeValueAsBytes:[value] @AT@ 4632 @LENGTH@ 5
------------INS ReturnStatement@@MethodInvocation:type.cast(ByteBuffer.wrap(out)) @TO@ Block@@ThenBody:{  byte[] out=mapper.writeValueAsBytes(value);  return type.cast(ByteBuffer.wrap(out));} @AT@ 4656 @LENGTH@ 39
---------------INS MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @TO@ ReturnStatement@@MethodInvocation:type.cast(ByteBuffer.wrap(out)) @AT@ 4663 @LENGTH@ 31
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @AT@ 4663 @LENGTH@ 4
------------------INS SimpleName@@MethodName:cast:[ByteBuffer.wrap(out)] @TO@ MethodInvocation@@type.cast(ByteBuffer.wrap(out)) @AT@ 4668 @LENGTH@ 26
---------------------INS MethodInvocation@@ByteBuffer.wrap(out) @TO@ SimpleName@@MethodName:cast:[ByteBuffer.wrap(out)] @AT@ 4673 @LENGTH@ 20
------------------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap(out) @AT@ 4673 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:wrap:[out] @TO@ MethodInvocation@@ByteBuffer.wrap(out) @AT@ 4684 @LENGTH@ 9
---------------------------INS SimpleName@@out @TO@ SimpleName@@MethodName:wrap:[out] @AT@ 4689 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @TO@ public, void, MethodName:testBadConfiguration,  @AT@ 2997 @LENGTH@ 348
---DEL SimpleType@@Exception @AT@ 3039 @LENGTH@ 9
---INS VariableDeclarationStatement@@final String format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()); @TO@ MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @AT@ 3050 @LENGTH@ 96
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()); @AT@ 3050 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()); @AT@ 3056 @LENGTH@ 6
------INS VariableDeclarationFragment@@format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()) @TO@ VariableDeclarationStatement@@final String format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()); @AT@ 3063 @LENGTH@ 82
---------INS SimpleName@@format @TO@ VariableDeclarationFragment@@format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()) @AT@ 3063 @LENGTH@ 6
---------MOV MethodInvocation@@String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()) @TO@ VariableDeclarationFragment@@format=String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()) @AT@ 3095 @LENGTH@ 73
---DEL TryStatement@@try {  template.sendBody(String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World");  fail("Should have thrown a ResolveEndpointFailedException");} catch (ResolveEndpointFailedException e) {} @AT@ 3059 @LENGTH@ 280
------DEL ExpressionStatement@@MethodInvocation:template.sendBody(String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World") @AT@ 3077 @LENGTH@ 108
---------DEL MethodInvocation@@template.sendBody(String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()),"Hello World") @AT@ 3077 @LENGTH@ 107
------DEL ExpressionStatement@@MethodInvocation:fail("Should have thrown a ResolveEndpointFailedException") @AT@ 3198 @LENGTH@ 60
---------DEL MethodInvocation@@fail("Should have thrown a ResolveEndpointFailedException") @AT@ 3198 @LENGTH@ 59
------------DEL SimpleName@@MethodName:fail:["Should have thrown a ResolveEndpointFailedException"] @AT@ 3198 @LENGTH@ 59
------DEL CatchClause@@catch (ResolveEndpointFailedException e) {} @AT@ 3269 @LENGTH@ 70
---------DEL SingleVariableDeclaration@@ResolveEndpointFailedException e @AT@ 3276 @LENGTH@ 32
------------DEL SimpleType@@ResolveEndpointFailedException @AT@ 3276 @LENGTH@ 30
------------DEL SimpleName@@e @AT@ 3307 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @TO@ MethodDeclaration@@public, void, MethodName:testBadConfiguration, Exception,  @AT@ 3156 @LENGTH@ 170
------INS MethodInvocation@@assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @TO@ ExpressionStatement@@MethodInvocation:assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @AT@ 3156 @LENGTH@ 169
---------INS SimpleName@@MethodName:assertThrows:[ResolveEndpointFailedException.class, () -> template.sendBody(format,"Hello World"), "Should have thrown a ResolveEndpointFailedException"] @TO@ MethodInvocation@@assertThrows(ResolveEndpointFailedException.class,() -> template.sendBody(format,"Hello World"),"Should have thrown a ResolveEndpointFailedException") @AT@ 3156 @LENGTH@ 169
------------INS TypeLiteral@@ResolveEndpointFailedException.class @TO@ SimpleName@@MethodName:assertThrows:[ResolveEndpointFailedException.class, () -> template.sendBody(format,"Hello World"), "Should have thrown a ResolveEndpointFailedException"] @AT@ 3169 @LENGTH@ 36
------------MOV StringLiteral@@"Should have thrown a ResolveEndpointFailedException" @TO@ SimpleName@@MethodName:assertThrows:[ResolveEndpointFailedException.class, () -> template.sendBody(format,"Hello World"), "Should have thrown a ResolveEndpointFailedException"] @AT@ 3203 @LENGTH@ 53
------------INS LambdaExpression@@() -> template.sendBody(format,"Hello World") @TO@ SimpleName@@MethodName:assertThrows:[ResolveEndpointFailedException.class, () -> template.sendBody(format,"Hello World"), "Should have thrown a ResolveEndpointFailedException"] @AT@ 3207 @LENGTH@ 46
---------------INS MethodInvocation@@template.sendBody(format,"Hello World") @TO@ LambdaExpression@@() -> template.sendBody(format,"Hello World") @AT@ 3213 @LENGTH@ 40
------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody(format,"Hello World") @AT@ 3077 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:sendBody:[String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()), "Hello World"] @TO@ MethodInvocation@@template.sendBody(format,"Hello World") @AT@ 3086 @LENGTH@ 98
---------------------INS SimpleName@@format @TO@ SimpleName@@MethodName:sendBody:[String.format("mina:vm://localhost:%1$s?sync=true&codec=#XXX",getPort()), "Hello World"] @AT@ 3231 @LENGTH@ 6


UPD ThrowStatement@@MethodInvocation:getExceptionTranslator().translate("Executing stored procedure",getSql(),se) @TO@ MethodInvocation:translateSqlException("Executing stored procedure",getSql(),se) @AT@ 7337 @LENGTH@ 85
---UPD MethodInvocation@@getExceptionTranslator().translate("Executing stored procedure",getSql(),se) @TO@ translateSqlException("Executing stored procedure",getSql(),se) @AT@ 7343 @LENGTH@ 78
------DEL MethodInvocation@@MethodName:getExceptionTranslator:[] @AT@ 7343 @LENGTH@ 24
------UPD SimpleName@@MethodName:translate:["Executing stored procedure", getSql(), se] @TO@ MethodName:translateSqlException:["Executing stored procedure", getSql(), se] @AT@ 7368 @LENGTH@ 53


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(Files.size(file)),file) @TO@ MethodInvocation:toFileVisitResult(accept(Files.size(file))) @AT@ 5278 @LENGTH@ 57
---UPD MethodInvocation@@toFileVisitResult(accept(Files.size(file)),file) @TO@ toFileVisitResult(accept(Files.size(file))) @AT@ 5285 @LENGTH@ 49
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(Files.size(file)), file] @TO@ MethodName:toFileVisitResult:[accept(Files.size(file))] @AT@ 5285 @LENGTH@ 49
---------DEL SimpleName@@file @AT@ 5329 @LENGTH@ 4


DEL MethodDeclaration@@boolean, MethodName:canContinue,  @AT@ 1389 @LENGTH@ 14
---DEL PrimitiveType@@boolean @AT@ 1381 @LENGTH@ 7
---DEL SimpleName@@MethodName:canContinue @AT@ 1389 @LENGTH@ 11


UPD IfStatement@@if (!isPreparedList(body)) {  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    String name=model.getClass().getName();    Map<String,Object> row=new HashMap<>();    row.put(name,model);    row.putAll(createLinkedFieldsModel(model));    models.add(row);  }} else {  models=(List<Map<String,Object>>)body;} @TO@ if (!isPreparedList(body)) {  models=new ArrayList<>();  if (body instanceof Map) {    body=Collections.singleton(body).iterator();  }  for (  Object model : ObjectHelper.createIterable(body)) {    String name=model.getClass().getName();    Map<String,Object> row=new HashMap<>();    row.put(name,model);    row.putAll(createLinkedFieldsModel(model));    models.add(row);  }} else {  models=(List<Map<String,Object>>)body;} @AT@ 3103 @LENGTH@ 522
---UPD Block@@ThenBody:{  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    String name=model.getClass().getName();    Map<String,Object> row=new HashMap<>();    row.put(name,model);    row.putAll(createLinkedFieldsModel(model));    models.add(row);  }} @TO@ ThenBody:{  models=new ArrayList<>();  if (body instanceof Map) {    body=Collections.singleton(body).iterator();  }  for (  Object model : ObjectHelper.createIterable(body)) {    String name=model.getClass().getName();    Map<String,Object> row=new HashMap<>();    row.put(name,model);    row.putAll(createLinkedFieldsModel(model));    models.add(row);  }} @AT@ 3130 @LENGTH@ 382
------INS IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @TO@ Block@@ThenBody:{  models=new ArrayList<>();  for (  Object model : ObjectHelper.createIterable(body)) {    String name=model.getClass().getName();    Map<String,Object> row=new HashMap<>();    row.put(name,model);    row.putAll(createLinkedFieldsModel(model));    models.add(row);  }} @AT@ 3214 @LENGTH@ 271
---------INS InstanceofExpression@@body instanceof Map @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 3218 @LENGTH@ 19
------------INS SimpleName@@body @TO@ InstanceofExpression@@body instanceof Map @AT@ 3218 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@body instanceof Map @AT@ 3223 @LENGTH@ 10
------------INS SimpleType@@Map @TO@ InstanceofExpression@@body instanceof Map @AT@ 3234 @LENGTH@ 3
---------INS Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @TO@ IfStatement@@if (body instanceof Map) {  body=Collections.singleton(body).iterator();} @AT@ 3239 @LENGTH@ 246
------------INS ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @TO@ Block@@ThenBody:{  body=Collections.singleton(body).iterator();} @AT@ 3425 @LENGTH@ 46
---------------INS Assignment@@body=Collections.singleton(body).iterator() @TO@ ExpressionStatement@@Assignment:body=Collections.singleton(body).iterator() @AT@ 3425 @LENGTH@ 45
------------------INS SimpleName@@body @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3425 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3429 @LENGTH@ 1
------------------INS MethodInvocation@@Collections.singleton(body).iterator() @TO@ Assignment@@body=Collections.singleton(body).iterator() @AT@ 3432 @LENGTH@ 38
---------------------INS MethodInvocation@@MethodName:singleton:[body] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3432 @LENGTH@ 27
------------------------INS SimpleName@@body @TO@ MethodInvocation@@MethodName:singleton:[body] @AT@ 3454 @LENGTH@ 4
---------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3432 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@Collections.singleton(body).iterator() @AT@ 3460 @LENGTH@ 10


DEL ExpressionStatement@@Assignment:this.maxRetryWaitingTime=maxRetryWaitingTime @AT@ 1193 @LENGTH@ 47
---DEL Assignment@@this.maxRetryWaitingTime=maxRetryWaitingTime @AT@ 1193 @LENGTH@ 46
------DEL FieldAccess@@this.maxRetryWaitingTime @AT@ 1193 @LENGTH@ 24
---------DEL ThisExpression@@this @AT@ 1193 @LENGTH@ 4
---------DEL SimpleName@@maxRetryWaitingTime @AT@ 1198 @LENGTH@ 19
------DEL Operator@@= @AT@ 1217 @LENGTH@ 1
------DEL SimpleName@@maxRetryWaitingTime @AT@ 1220 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isDirectory(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isDirectory(file)) @AT@ 3409 @LENGTH@ 56
---UPD MethodInvocation@@toFileVisitResult(Files.isDirectory(file),file) @TO@ toFileVisitResult(Files.isDirectory(file)) @AT@ 3416 @LENGTH@ 48
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isDirectory(file), file] @TO@ MethodName:toFileVisitResult:[Files.isDirectory(file)] @AT@ 3416 @LENGTH@ 48
---------DEL SimpleName@@file @AT@ 3459 @LENGTH@ 4


INS MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @TO@ TypeDeclaration@@[@Component("platform-http"), public]PlatformHttpComponent, DefaultComponent[RestConsumerFactory, RestApiConsumerFactory] @AT@ 8323 @LENGTH@ 771
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8323 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8333 @LENGTH@ 4
---INS SimpleName@@MethodName:doInit @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8338 @LENGTH@ 6
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8354 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doInit() @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8374 @LENGTH@ 15
------INS SuperMethodInvocation@@super.doInit() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doInit() @AT@ 8374 @LENGTH@ 14
---------INS SimpleName@@MethodName:doInit:[] @TO@ SuperMethodInvocation@@super.doInit() @AT@ 8380 @LENGTH@ 6
---INS TryStatement@@try {  RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http");  if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {    setProperties(this,config.getComponentProperties());  }} catch (IllegalArgumentException e) {} @TO@ MethodDeclaration@@protected, void, MethodName:doInit, Exception,  @AT@ 8399 @LENGTH@ 689
------INS VariableDeclarationStatement@@RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http"); @TO@ TryStatement@@try {  RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http");  if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {    setProperties(this,config.getComponentProperties());  }} catch (IllegalArgumentException e) {} @AT@ 8417 @LENGTH@ 103
---------INS SimpleType@@RestConfiguration @TO@ VariableDeclarationStatement@@RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http"); @AT@ 8417 @LENGTH@ 17
---------INS VariableDeclarationFragment@@config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @TO@ VariableDeclarationStatement@@RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http"); @AT@ 8435 @LENGTH@ 84
------------INS SimpleName@@config @TO@ VariableDeclarationFragment@@config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @AT@ 8435 @LENGTH@ 6
------------INS MethodInvocation@@CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @TO@ VariableDeclarationFragment@@config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @AT@ 8444 @LENGTH@ 75
---------------INS SimpleName@@Name:CamelContextHelper @TO@ MethodInvocation@@CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @AT@ 8444 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getRestConfiguration:[getCamelContext(), "platform-http"] @TO@ MethodInvocation@@CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http") @AT@ 8463 @LENGTH@ 56
------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ SimpleName@@MethodName:getRestConfiguration:[getCamelContext(), "platform-http"] @AT@ 8484 @LENGTH@ 17
------------------INS StringLiteral@@"platform-http" @TO@ SimpleName@@MethodName:getRestConfiguration:[getCamelContext(), "platform-http"] @AT@ 8503 @LENGTH@ 15
------INS IfStatement@@if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {  setProperties(this,config.getComponentProperties());} @TO@ TryStatement@@try {  RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http");  if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {    setProperties(this,config.getComponentProperties());  }} catch (IllegalArgumentException e) {} @AT@ 8596 @LENGTH@ 176
---------INS InfixExpression@@config.getComponentProperties() != null && !config.getComponentProperties().isEmpty() @TO@ IfStatement@@if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {  setProperties(this,config.getComponentProperties());} @AT@ 8600 @LENGTH@ 85
------------INS InfixExpression@@config.getComponentProperties() != null @TO@ InfixExpression@@config.getComponentProperties() != null && !config.getComponentProperties().isEmpty() @AT@ 8600 @LENGTH@ 39
---------------INS MethodInvocation@@config.getComponentProperties() @TO@ InfixExpression@@config.getComponentProperties() != null @AT@ 8600 @LENGTH@ 31
------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getComponentProperties() @AT@ 8600 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getComponentProperties:[] @TO@ MethodInvocation@@config.getComponentProperties() @AT@ 8607 @LENGTH@ 24
---------------INS Operator@@!= @TO@ InfixExpression@@config.getComponentProperties() != null @AT@ 8631 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@config.getComponentProperties() != null @AT@ 8635 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@config.getComponentProperties() != null && !config.getComponentProperties().isEmpty() @AT@ 8639 @LENGTH@ 2
------------INS PrefixExpression@@!config.getComponentProperties().isEmpty() @TO@ InfixExpression@@config.getComponentProperties() != null && !config.getComponentProperties().isEmpty() @AT@ 8643 @LENGTH@ 42
---------------INS Operator@@! @TO@ PrefixExpression@@!config.getComponentProperties().isEmpty() @AT@ 8643 @LENGTH@ 1
---------------INS MethodInvocation@@config.getComponentProperties().isEmpty() @TO@ PrefixExpression@@!config.getComponentProperties().isEmpty() @AT@ 8644 @LENGTH@ 41
------------------INS MethodInvocation@@MethodName:getComponentProperties:[] @TO@ MethodInvocation@@config.getComponentProperties().isEmpty() @AT@ 8644 @LENGTH@ 31
------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getComponentProperties().isEmpty() @AT@ 8644 @LENGTH@ 6
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@config.getComponentProperties().isEmpty() @AT@ 8676 @LENGTH@ 9
---------INS Block@@ThenBody:{  setProperties(this,config.getComponentProperties());} @TO@ IfStatement@@if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {  setProperties(this,config.getComponentProperties());} @AT@ 8687 @LENGTH@ 85
------------INS ExpressionStatement@@MethodInvocation:setProperties(this,config.getComponentProperties()) @TO@ Block@@ThenBody:{  setProperties(this,config.getComponentProperties());} @AT@ 8705 @LENGTH@ 53
---------------INS MethodInvocation@@setProperties(this,config.getComponentProperties()) @TO@ ExpressionStatement@@MethodInvocation:setProperties(this,config.getComponentProperties()) @AT@ 8705 @LENGTH@ 52
------------------INS SimpleName@@MethodName:setProperties:[this, config.getComponentProperties()] @TO@ MethodInvocation@@setProperties(this,config.getComponentProperties()) @AT@ 8705 @LENGTH@ 52
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:setProperties:[this, config.getComponentProperties()] @AT@ 8719 @LENGTH@ 4
---------------------INS MethodInvocation@@config.getComponentProperties() @TO@ SimpleName@@MethodName:setProperties:[this, config.getComponentProperties()] @AT@ 8725 @LENGTH@ 31
------------------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getComponentProperties() @AT@ 8725 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getComponentProperties:[] @TO@ MethodInvocation@@config.getComponentProperties() @AT@ 8732 @LENGTH@ 24
------INS CatchClause@@catch (IllegalArgumentException e) {} @TO@ TryStatement@@try {  RestConfiguration config=CamelContextHelper.getRestConfiguration(getCamelContext(),"platform-http");  if (config.getComponentProperties() != null && !config.getComponentProperties().isEmpty()) {    setProperties(this,config.getComponentProperties());  }} catch (IllegalArgumentException e) {} @AT@ 8783 @LENGTH@ 305
---------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {} @AT@ 8790 @LENGTH@ 26
------------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 8790 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 8815 @LENGTH@ 1


UPD TypeDeclaration@@[private, final]HighLevelClient, RestHighLevelClient @TO@ [private, static, final]HighLevelClient, RestHighLevelClient @AT@ 17215 @LENGTH@ 221
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]HighLevelClient, RestHighLevelClient @AT@ 17223 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:equalsWhenEmtpyAndEmptyThenTrue,  @TO@ public, void, MethodName:equalsWhenEmptyAndEmptyThenTrue,  @AT@ 1736 @LENGTH@ 110
---UPD SimpleName@@MethodName:equalsWhenEmtpyAndEmptyThenTrue @TO@ MethodName:equalsWhenEmptyAndEmptyThenTrue @AT@ 1748 @LENGTH@ 31


MOV ExpressionStatement@@MethodInvocation:mutex.lock() @TO@ MethodDeclaration@@public, void, MethodName:cancel,  @AT@ 6215 @LENGTH@ 13


UPD IfStatement@@if (expressions == null) {  String spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);} @TO@ if (expressions == null) {  try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){    String spec=bufferedReader.lines().collect(Collectors.joining("\n"));    expressions=Expressions.parse(spec);  } } @AT@ 3501 @LENGTH@ 329
---UPD Block@@ThenBody:{  String spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);} @TO@ ThenBody:{  try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){    String spec=bufferedReader.lines().collect(Collectors.joining("\n"));    expressions=Expressions.parse(spec);  } } @AT@ 3526 @LENGTH@ 304
------INS TryStatement@@try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){  String spec=bufferedReader.lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);}  @TO@ Block@@ThenBody:{  String spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);} @AT@ 3540 @LENGTH@ 435
---------INS VariableDeclarationExpression@@InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8) @TO@ TryStatement@@try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){  String spec=bufferedReader.lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);}  @AT@ 3545 @LENGTH@ 131
------------INS SimpleType@@InputStreamReader @TO@ VariableDeclarationExpression@@InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8) @AT@ 3545 @LENGTH@ 17
------------MOV VariableDeclarationFragment@@spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n")) @TO@ VariableDeclarationExpression@@InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8) @AT@ 3547 @LENGTH@ 221
---------------MOV ClassInstanceCreation@@InputStreamReader[getResourceAsInputStream(), StandardCharsets.UTF_8] @TO@ VariableDeclarationFragment@@spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n")) @AT@ 3594 @LENGTH@ 73
---------INS VariableDeclarationExpression@@BufferedReader bufferedReader=new BufferedReader(inputStreamReader) @TO@ TryStatement@@try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){  String spec=bufferedReader.lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);}  @AT@ 3695 @LENGTH@ 69
------------INS SimpleType@@BufferedReader @TO@ VariableDeclarationExpression@@BufferedReader bufferedReader=new BufferedReader(inputStreamReader) @AT@ 3695 @LENGTH@ 14
------------INS VariableDeclarationFragment@@bufferedReader=new BufferedReader(inputStreamReader) @TO@ VariableDeclarationExpression@@BufferedReader bufferedReader=new BufferedReader(inputStreamReader) @AT@ 3710 @LENGTH@ 54
---------------INS SimpleName@@bufferedReader @TO@ VariableDeclarationFragment@@bufferedReader=new BufferedReader(inputStreamReader) @AT@ 3710 @LENGTH@ 14
---------------INS ClassInstanceCreation@@BufferedReader[inputStreamReader] @TO@ VariableDeclarationFragment@@bufferedReader=new BufferedReader(inputStreamReader) @AT@ 3727 @LENGTH@ 37
------------------INS New@@new @TO@ ClassInstanceCreation@@BufferedReader[inputStreamReader] @AT@ 3727 @LENGTH@ 3
------------------INS SimpleType@@BufferedReader @TO@ ClassInstanceCreation@@BufferedReader[inputStreamReader] @AT@ 3731 @LENGTH@ 14
------------------INS SimpleName@@inputStreamReader @TO@ ClassInstanceCreation@@BufferedReader[inputStreamReader] @AT@ 3746 @LENGTH@ 17
---------MOV ExpressionStatement@@Assignment:expressions=Expressions.parse(spec) @TO@ TryStatement@@try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){  String spec=bufferedReader.lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);}  @AT@ 3782 @LENGTH@ 38
---------INS VariableDeclarationStatement@@String spec=bufferedReader.lines().collect(Collectors.joining("\n")); @TO@ TryStatement@@try (InputStreamReader inputStreamReader=new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8);BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){  String spec=bufferedReader.lines().collect(Collectors.joining("\n"));  expressions=Expressions.parse(spec);}  @AT@ 3785 @LENGTH@ 121
------------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String spec=bufferedReader.lines().collect(Collectors.joining("\n")); @AT@ 3540 @LENGTH@ 6
------------INS VariableDeclarationFragment@@spec=bufferedReader.lines().collect(Collectors.joining("\n")) @TO@ VariableDeclarationStatement@@String spec=bufferedReader.lines().collect(Collectors.joining("\n")); @AT@ 3792 @LENGTH@ 113
---------------INS SimpleName@@spec @TO@ VariableDeclarationFragment@@spec=bufferedReader.lines().collect(Collectors.joining("\n")) @AT@ 3792 @LENGTH@ 4
---------------INS MethodInvocation@@bufferedReader.lines().collect(Collectors.joining("\n")) @TO@ VariableDeclarationFragment@@spec=bufferedReader.lines().collect(Collectors.joining("\n")) @AT@ 3799 @LENGTH@ 106
------------------MOV SimpleName@@MethodName:collect:[Collectors.joining("\n")] @TO@ MethodInvocation@@bufferedReader.lines().collect(Collectors.joining("\n")) @AT@ 3735 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:lines:[] @TO@ MethodInvocation@@bufferedReader.lines().collect(Collectors.joining("\n")) @AT@ 3799 @LENGTH@ 47
------------------INS SimpleName@@Name:bufferedReader @TO@ MethodInvocation@@bufferedReader.lines().collect(Collectors.joining("\n")) @AT@ 3799 @LENGTH@ 14
------DEL VariableDeclarationStatement@@String spec=new BufferedReader(new InputStreamReader(getResourceAsInputStream(),StandardCharsets.UTF_8)).lines().collect(Collectors.joining("\n")); @AT@ 3540 @LENGTH@ 229


UPD VariableDeclarationStatement@@HttpConfig httpConfig=null; @TO@ HttpConfig httpConfig=HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()); @AT@ 4585 @LENGTH@ 29
---UPD VariableDeclarationFragment@@httpConfig=null @TO@ httpConfig=HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4596 @LENGTH@ 17
------DEL NullLiteral@@null @AT@ 4609 @LENGTH@ 4
------INS MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @TO@ VariableDeclarationFragment@@httpConfig=null @AT@ 4624 @LENGTH@ 107
---------INS MethodInvocation@@MethodName:getDefaultHttpConfig:[] @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4624 @LENGTH@ 33
---------INS SimpleName@@Name:HttpConfig @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4624 @LENGTH@ 10
---------MOV SimpleName@@MethodName:withIgnoreSSLVerification:[clientConfigurations.isIgnoreSslVerification()] @TO@ MethodInvocation@@HttpConfig.getDefaultHttpConfig().withIgnoreSSLVerification(clientConfigurations.isIgnoreSslVerification()) @AT@ 4898 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2071 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2071 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2071 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2076 @LENGTH@ 30


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @TO@ TypeDeclaration@@[final]CamelCoapResource, CoapResource @AT@ 1512 @LENGTH@ 83
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @AT@ 1512 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @AT@ 1520 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @AT@ 1527 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @AT@ 1533 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelCoapResource.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCoapResource.class)] @AT@ 1540 @LENGTH@ 54
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelCoapResource.class) @AT@ 1540 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(CamelCoapResource.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(CamelCoapResource.class) @AT@ 1546 @LENGTH@ 48
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(CamelCoapResource.class) @AT@ 1546 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[CamelCoapResource.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(CamelCoapResource.class) @AT@ 1560 @LENGTH@ 34
------------INS TypeLiteral@@CamelCoapResource.class @TO@ SimpleName@@MethodName:getLogger:[CamelCoapResource.class] @AT@ 1570 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:part.getAndSet(Integer.valueOf(partString) + 1) @TO@ MethodInvocation:part.getAndSet(Integer.parseInt(partString) + 1) @AT@ 13719 @LENGTH@ 48
---UPD MethodInvocation@@part.getAndSet(Integer.valueOf(partString) + 1) @TO@ part.getAndSet(Integer.parseInt(partString) + 1) @AT@ 13719 @LENGTH@ 47
------UPD SimpleName@@MethodName:getAndSet:[Integer.valueOf(partString) + 1] @TO@ MethodName:getAndSet:[Integer.parseInt(partString) + 1] @AT@ 13724 @LENGTH@ 42
---------UPD InfixExpression@@Integer.valueOf(partString) + 1 @TO@ Integer.parseInt(partString) + 1 @AT@ 13734 @LENGTH@ 31
------------UPD MethodInvocation@@Integer.valueOf(partString) @TO@ Integer.parseInt(partString) @AT@ 13734 @LENGTH@ 27
---------------UPD SimpleName@@MethodName:valueOf:[partString] @TO@ MethodName:parseInt:[partString] @AT@ 13742 @LENGTH@ 19


INS IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @TO@ MethodDeclaration@@public, static, void, MethodName:logToken, String name, String token,  @AT@ 12079 @LENGTH@ 221
---INS InfixExpression@@token == null || isOpaqueToken(token) @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12083 @LENGTH@ 37
------INS InfixExpression@@token == null @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12083 @LENGTH@ 13
---------INS SimpleName@@token @TO@ InfixExpression@@token == null @AT@ 12083 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@token == null @AT@ 12088 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@token == null @AT@ 12092 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12096 @LENGTH@ 2
------INS MethodInvocation@@isOpaqueToken(token) @TO@ InfixExpression@@token == null || isOpaqueToken(token) @AT@ 12100 @LENGTH@ 20
---------INS SimpleName@@MethodName:isOpaqueToken:[token] @TO@ MethodInvocation@@isOpaqueToken(token) @AT@ 12100 @LENGTH@ 20
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:isOpaqueToken:[token] @AT@ 12114 @LENGTH@ 5
---INS Block@@ThenBody:{  log.tracef("\t%s: %s",name,token);} @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12122 @LENGTH@ 60
------INS ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token) @TO@ Block@@ThenBody:{  log.tracef("\t%s: %s",name,token);} @AT@ 12136 @LENGTH@ 36
---------INS MethodInvocation@@log.tracef("\t%s: %s",name,token) @TO@ ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token) @AT@ 12136 @LENGTH@ 35
------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.tracef("\t%s: %s",name,token) @AT@ 12136 @LENGTH@ 3
------------INS SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @TO@ MethodInvocation@@log.tracef("\t%s: %s",name,token) @AT@ 12140 @LENGTH@ 31
---------------INS StringLiteral@@"\t%s: %s" @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12147 @LENGTH@ 10
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12159 @LENGTH@ 4
---------------INS SimpleName@@token @TO@ SimpleName@@MethodName:tracef:["\t%s: %s", name, token] @AT@ 12165 @LENGTH@ 5
---INS Block@@ElseBody:{  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @TO@ IfStatement@@if (token == null || isOpaqueToken(token)) {  log.tracef("\t%s: %s",name,token);} else {  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 12188 @LENGTH@ 112
------MOV ExpressionStatement@@MethodInvocation:log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature") @TO@ Block@@ElseBody:{  log.tracef("\t%s: %s",name,token.substring(0,token.lastIndexOf(".")) + ".signature");} @AT@ 11915 @LENGTH@ 88


MOV TypeDeclaration@@[static]VerifierPartial,  @TO@ TypeDeclaration@@[final]OpenSamlVerificationUtils,  @AT@ 3998 @LENGTH@ 4722


UPD FieldDeclaration@@public, static, final, String, [AUTHENTICATION_INVALID="401::Authentication invalid"] @TO@ private, static, final, String, [AUTHENTICATION_INVALID="401::Authentication invalid"] @AT@ 3258 @LENGTH@ 82
---UPD Modifier@@public @TO@ private @AT@ 3258 @LENGTH@ 6


UPD VariableDeclarationStatement@@final AtomicBoolean wasInterrupted=new AtomicBoolean(false); @TO@ final AtomicBoolean wasInterrupted=new AtomicBoolean(); @AT@ 1454 @LENGTH@ 62
---UPD VariableDeclarationFragment@@wasInterrupted=new AtomicBoolean(false) @TO@ wasInterrupted=new AtomicBoolean() @AT@ 1474 @LENGTH@ 41
------UPD ClassInstanceCreation@@AtomicBoolean[false] @TO@ AtomicBoolean[] @AT@ 1491 @LENGTH@ 24
---------DEL BooleanLiteral@@false @AT@ 1509 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getMessage().setHeaders(response.getHeaders()) @TO@ MethodInvocation:exchange.getMessage().getHeaders().putAll(response.getHeaders()) @AT@ 4209 @LENGTH@ 56
---UPD MethodInvocation@@exchange.getMessage().setHeaders(response.getHeaders()) @TO@ exchange.getMessage().getHeaders().putAll(response.getHeaders()) @AT@ 4209 @LENGTH@ 55
------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getMessage().setHeaders(response.getHeaders()) @AT@ 4209 @LENGTH@ 34
------UPD SimpleName@@MethodName:setHeaders:[response.getHeaders()] @TO@ MethodName:putAll:[response.getHeaders()] @AT@ 4231 @LENGTH@ 33


UPD MethodDeclaration@@public, void, MethodName:doubleCloneOperationTest, Exception,  @TO@ public, void, MethodName:doubleCloneOperationTest,  @AT@ 4956 @LENGTH@ 344
---DEL SimpleType@@Exception @AT@ 5002 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:assertThrows(CamelExecutionException.class,() -> {
  template.sendBody("direct:clone","");
  template.sendBody("direct:clone","");
  File gitDir=new File(gitLocalRepo,".git");
  assertEquals(true,gitDir.exists());
}
) @TO@ MethodInvocation:assertThrows(CamelExecutionException.class,() -> template.sendBody("direct:clone","")) @AT@ 5022 @LENGTH@ 272
------UPD MethodInvocation@@assertThrows(CamelExecutionException.class,() -> {
  template.sendBody("direct:clone","");
  template.sendBody("direct:clone","");
  File gitDir=new File(gitLocalRepo,".git");
  assertEquals(true,gitDir.exists());
}
) @TO@ assertThrows(CamelExecutionException.class,() -> template.sendBody("direct:clone","")) @AT@ 5022 @LENGTH@ 271
---------UPD SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> {
  template.sendBody("direct:clone","");
  template.sendBody("direct:clone","");
  File gitDir=new File(gitLocalRepo,".git");
  assertEquals(true,gitDir.exists());
}
] @TO@ MethodName:assertThrows:[CamelExecutionException.class, () -> template.sendBody("direct:clone","")] @AT@ 5022 @LENGTH@ 271
------------UPD LambdaExpression@@() -> {
  template.sendBody("direct:clone","");
  template.sendBody("direct:clone","");
  File gitDir=new File(gitLocalRepo,".git");
  assertEquals(true,gitDir.exists());
}
 @TO@ () -> template.sendBody("direct:clone","") @AT@ 5066 @LENGTH@ 226
---------------DEL ExpressionStatement@@MethodInvocation:template.sendBody("direct:clone","") @AT@ 5086 @LENGTH@ 38
------------------DEL MethodInvocation@@template.sendBody("direct:clone","") @AT@ 5086 @LENGTH@ 37
---------------INS MethodInvocation@@template.sendBody("direct:clone","") @TO@ LambdaExpression@@() -> {
  template.sendBody("direct:clone","");
  template.sendBody("direct:clone","");
  File gitDir=new File(gitLocalRepo,".git");
  assertEquals(true,gitDir.exists());
}
 @AT@ 5103 @LENGTH@ 37
------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:clone","") @AT@ 5086 @LENGTH@ 8
------------------MOV SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:clone","") @AT@ 5086 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:sendBody:["direct:clone", ""] @TO@ MethodInvocation@@template.sendBody("direct:clone","") @AT@ 5095 @LENGTH@ 28
------------------MOV SimpleName@@MethodName:sendBody:["direct:clone", ""] @TO@ MethodInvocation@@template.sendBody("direct:clone","") @AT@ 5095 @LENGTH@ 28
---MOV ExpressionStatement@@MethodInvocation:template.sendBody("direct:clone","") @TO@ MethodDeclaration@@public, void, MethodName:doubleCloneOperationTest, Exception,  @AT@ 5137 @LENGTH@ 38
---MOV VariableDeclarationStatement@@File gitDir=new File(gitLocalRepo,".git"); @TO@ MethodDeclaration@@public, void, MethodName:doubleCloneOperationTest, Exception,  @AT@ 5188 @LENGTH@ 45
---MOV ExpressionStatement@@MethodInvocation:assertEquals(true,gitDir.exists()) @TO@ MethodDeclaration@@public, void, MethodName:doubleCloneOperationTest, Exception,  @AT@ 5246 @LENGTH@ 36


UPD MethodDeclaration@@public, TimeUnit, MethodName:getConnectionTimeotUnit,  @TO@ public, TimeUnit, MethodName:getConnectionTimeoutUnit,  @AT@ 5175 @LENGTH@ 106
---UPD SimpleName@@MethodName:getConnectionTimeotUnit @TO@ MethodName:getConnectionTimeoutUnit @AT@ 5191 @LENGTH@ 23


UPD TryStatement@@try {  if (fileChannel != null) {    fileChannel.close();  }} catch (IOException ioe) {  throw new ItemStreamException("Unable to close the the ItemWriter",ioe);} finally {  try {    if (os != null) {      os.close();    }  } catch (  IOException ioe) {    throw new ItemStreamException("Unable to close the the ItemWriter",ioe);  }} @TO@ try {  if (fileChannel != null) {    fileChannel.close();  }} catch (IOException ioe) {  throw new ItemStreamException("Unable to close the ItemWriter",ioe);} finally {  try {    if (os != null) {      os.close();    }  } catch (  IOException ioe) {    throw new ItemStreamException("Unable to close the ItemWriter",ioe);  }} @AT@ 14713 @LENGTH@ 382
---UPD CatchClause@@catch (IOException ioe) {  throw new ItemStreamException("Unable to close the the ItemWriter",ioe);} @TO@ catch (IOException ioe) {  throw new ItemStreamException("Unable to close the ItemWriter",ioe);} @AT@ 14790 @LENGTH@ 108
------UPD ThrowStatement@@ClassInstanceCreation:new ItemStreamException("Unable to close the the ItemWriter",ioe) @TO@ ClassInstanceCreation:new ItemStreamException("Unable to close the ItemWriter",ioe) @AT@ 14820 @LENGTH@ 73
---------UPD ClassInstanceCreation@@ItemStreamException["Unable to close the the ItemWriter", ioe] @TO@ ItemStreamException["Unable to close the ItemWriter", ioe] @AT@ 14826 @LENGTH@ 66
------------UPD StringLiteral@@"Unable to close the the ItemWriter" @TO@ "Unable to close the ItemWriter" @AT@ 14850 @LENGTH@ 36
---UPD Block@@FinallyBody:{  try {    if (os != null) {      os.close();    }  } catch (  IOException ioe) {    throw new ItemStreamException("Unable to close the the ItemWriter",ioe);  }} @TO@ FinallyBody:{  try {    if (os != null) {      os.close();    }  } catch (  IOException ioe) {    throw new ItemStreamException("Unable to close the ItemWriter",ioe);  }} @AT@ 14910 @LENGTH@ 185
------UPD TryStatement@@try {  if (os != null) {    os.close();  }} catch (IOException ioe) {  throw new ItemStreamException("Unable to close the the ItemWriter",ioe);} @TO@ try {  if (os != null) {    os.close();  }} catch (IOException ioe) {  throw new ItemStreamException("Unable to close the ItemWriter",ioe);} @AT@ 14916 @LENGTH@ 174
---------UPD CatchClause@@catch (IOException ioe) {  throw new ItemStreamException("Unable to close the the ItemWriter",ioe);} @TO@ catch (IOException ioe) {  throw new ItemStreamException("Unable to close the ItemWriter",ioe);} @AT@ 14980 @LENGTH@ 110
------------UPD ThrowStatement@@ClassInstanceCreation:new ItemStreamException("Unable to close the the ItemWriter",ioe) @TO@ ClassInstanceCreation:new ItemStreamException("Unable to close the ItemWriter",ioe) @AT@ 15011 @LENGTH@ 73
---------------UPD ClassInstanceCreation@@ItemStreamException["Unable to close the the ItemWriter", ioe] @TO@ ItemStreamException["Unable to close the ItemWriter", ioe] @AT@ 15017 @LENGTH@ 66
------------------UPD StringLiteral@@"Unable to close the the ItemWriter" @TO@ "Unable to close the ItemWriter" @AT@ 15041 @LENGTH@ 36


INS MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @TO@ TypeDeclaration@@[@org.junit.Ignore("HIVE-25265"), @RunWith(Parameterized.class), public]TestHiveIcebergStorageHandlerWithEngine,  @AT@ 27935 @LENGTH@ 1042
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 27935 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 27942 @LENGTH@ 4
---INS SimpleName@@MethodName:testSpecialCharacters @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 27947 @LENGTH@ 21
---INS VariableDeclarationStatement@@TableIdentifier table=TableIdentifier.of("default","tar,! ,get"); @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 27977 @LENGTH@ 68
------INS SimpleType@@TableIdentifier @TO@ VariableDeclarationStatement@@TableIdentifier table=TableIdentifier.of("default","tar,! ,get"); @AT@ 27977 @LENGTH@ 15
------INS VariableDeclarationFragment@@table=TableIdentifier.of("default","tar,! ,get") @TO@ VariableDeclarationStatement@@TableIdentifier table=TableIdentifier.of("default","tar,! ,get"); @AT@ 27993 @LENGTH@ 51
---------INS SimpleName@@table @TO@ VariableDeclarationFragment@@table=TableIdentifier.of("default","tar,! ,get") @AT@ 27993 @LENGTH@ 5
---------INS MethodInvocation@@TableIdentifier.of("default","tar,! ,get") @TO@ VariableDeclarationFragment@@table=TableIdentifier.of("default","tar,! ,get") @AT@ 28001 @LENGTH@ 43
------------INS SimpleName@@Name:TableIdentifier @TO@ MethodInvocation@@TableIdentifier.of("default","tar,! ,get") @AT@ 28001 @LENGTH@ 15
------------INS SimpleName@@MethodName:of:["default", "tar,! ,get"] @TO@ MethodInvocation@@TableIdentifier.of("default","tar,! ,get") @AT@ 28017 @LENGTH@ 27
---------------INS StringLiteral@@"default" @TO@ SimpleName@@MethodName:of:["default", "tar,! ,get"] @AT@ 28020 @LENGTH@ 9
---------------INS StringLiteral@@"tar,! ,get" @TO@ SimpleName@@MethodName:of:["default", "tar,! ,get"] @AT@ 28031 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:shell.executeStatement(String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)) @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28221 @LENGTH@ 318
------INS MethodInvocation@@shell.executeStatement(String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)) @TO@ ExpressionStatement@@MethodInvocation:shell.executeStatement(String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)) @AT@ 28221 @LENGTH@ 317
---------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.executeStatement(String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)) @AT@ 28221 @LENGTH@ 5
---------INS SimpleName@@MethodName:executeStatement:[String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)] @TO@ MethodInvocation@@shell.executeStatement(String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)) @AT@ 28227 @LENGTH@ 311
------------INS MethodInvocation@@String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME) @TO@ SimpleName@@MethodName:executeStatement:[String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME)] @AT@ 28244 @LENGTH@ 293
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME) @AT@ 28244 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @TO@ MethodInvocation@@String.format("CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')",table.name(),fileFormat,testTables.locationForCreateTableSQL(table),InputFormatConfig.CATALOG_NAME,Catalogs.ICEBERG_DEFAULT_CATALOG_NAME) @AT@ 28251 @LENGTH@ 286
------------------INS StringLiteral@@"CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')" @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28267 @LENGTH@ 111
------------------INS MethodInvocation@@table.name() @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28388 @LENGTH@ 12
---------------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.name() @AT@ 28388 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@table.name() @AT@ 28394 @LENGTH@ 6
------------------INS SimpleName@@fileFormat @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28402 @LENGTH@ 10
------------------INS MethodInvocation@@testTables.locationForCreateTableSQL(table) @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28414 @LENGTH@ 43
---------------------INS SimpleName@@Name:testTables @TO@ MethodInvocation@@testTables.locationForCreateTableSQL(table) @AT@ 28414 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:locationForCreateTableSQL:[table] @TO@ MethodInvocation@@testTables.locationForCreateTableSQL(table) @AT@ 28425 @LENGTH@ 32
------------------------INS SimpleName@@table @TO@ SimpleName@@MethodName:locationForCreateTableSQL:[table] @AT@ 28451 @LENGTH@ 5
------------------INS QualifiedName@@InputFormatConfig.CATALOG_NAME @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28467 @LENGTH@ 30
---------------------INS SimpleName@@InputFormatConfig @TO@ QualifiedName@@InputFormatConfig.CATALOG_NAME @AT@ 28467 @LENGTH@ 17
---------------------INS SimpleName@@CATALOG_NAME @TO@ QualifiedName@@InputFormatConfig.CATALOG_NAME @AT@ 28485 @LENGTH@ 12
------------------INS QualifiedName@@Catalogs.ICEBERG_DEFAULT_CATALOG_NAME @TO@ SimpleName@@MethodName:format:["CREATE TABLE `%s` (id bigint, `dep,! 是,t` string) STORED BY ICEBERG STORED AS %s %s TBLPROPERTIES ('%s'='%s')", table.name(), fileFormat, testTables.locationForCreateTableSQL(table), InputFormatConfig.CATALOG_NAME, Catalogs.ICEBERG_DEFAULT_CATALOG_NAME] @AT@ 28499 @LENGTH@ 37
---------------------INS SimpleName@@Catalogs @TO@ QualifiedName@@Catalogs.ICEBERG_DEFAULT_CATALOG_NAME @AT@ 28499 @LENGTH@ 8
---------------------INS SimpleName@@ICEBERG_DEFAULT_CATALOG_NAME @TO@ QualifiedName@@Catalogs.ICEBERG_DEFAULT_CATALOG_NAME @AT@ 28508 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:shell.executeStatement(String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())) @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28544 @LENGTH@ 104
------INS MethodInvocation@@shell.executeStatement(String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())) @TO@ ExpressionStatement@@MethodInvocation:shell.executeStatement(String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())) @AT@ 28544 @LENGTH@ 103
---------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.executeStatement(String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())) @AT@ 28544 @LENGTH@ 5
---------INS SimpleName@@MethodName:executeStatement:[String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())] @TO@ MethodInvocation@@shell.executeStatement(String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())) @AT@ 28550 @LENGTH@ 97
------------INS MethodInvocation@@String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name()) @TO@ SimpleName@@MethodName:executeStatement:[String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name())] @AT@ 28567 @LENGTH@ 79
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name()) @AT@ 28567 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')", table.name()] @TO@ MethodInvocation@@String.format("INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')",table.name()) @AT@ 28574 @LENGTH@ 72
------------------INS StringLiteral@@"INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')" @TO@ SimpleName@@MethodName:format:["INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')", table.name()] @AT@ 28581 @LENGTH@ 50
------------------INS MethodInvocation@@table.name() @TO@ SimpleName@@MethodName:format:["INSERT INTO `%s` VALUES (1, 'moon'), (2, 'star')", table.name()] @AT@ 28633 @LENGTH@ 12
---------------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.name() @AT@ 28633 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@table.name() @AT@ 28639 @LENGTH@ 6
---INS VariableDeclarationStatement@@List<Object[]> result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())); @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28654 @LENGTH@ 133
------INS ParameterizedType@@List<Object[]> @TO@ VariableDeclarationStatement@@List<Object[]> result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())); @AT@ 28654 @LENGTH@ 14
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object[]> @AT@ 28654 @LENGTH@ 4
---------INS ArrayType@@Object[] @TO@ ParameterizedType@@List<Object[]> @AT@ 28659 @LENGTH@ 8
------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 28659 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @TO@ VariableDeclarationStatement@@List<Object[]> result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())); @AT@ 28669 @LENGTH@ 117
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @AT@ 28669 @LENGTH@ 6
---------INS MethodInvocation@@shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @TO@ VariableDeclarationFragment@@result=shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @AT@ 28678 @LENGTH@ 108
------------INS SimpleName@@Name:shell @TO@ MethodInvocation@@shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @AT@ 28678 @LENGTH@ 5
------------INS SimpleName@@MethodName:executeStatement:[String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())] @TO@ MethodInvocation@@shell.executeStatement(String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())) @AT@ 28684 @LENGTH@ 102
---------------INS MethodInvocation@@String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name()) @TO@ SimpleName@@MethodName:executeStatement:[String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name())] @AT@ 28701 @LENGTH@ 84
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name()) @AT@ 28701 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id", table.name()] @TO@ MethodInvocation@@String.format("SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id",table.name()) @AT@ 28708 @LENGTH@ 77
---------------------INS StringLiteral@@"SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id" @TO@ SimpleName@@MethodName:format:["SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id", table.name()] @AT@ 28724 @LENGTH@ 46
---------------------INS MethodInvocation@@table.name() @TO@ SimpleName@@MethodName:format:["SELECT `dep,! 是,t`, id FROM `%s` ORDER BY id", table.name()] @AT@ 28772 @LENGTH@ 12
------------------------INS SimpleName@@Name:table @TO@ MethodInvocation@@table.name() @AT@ 28772 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@table.name() @AT@ 28778 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,result.size()) @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28793 @LENGTH@ 38
------INS MethodInvocation@@Assert.assertEquals(2,result.size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,result.size()) @AT@ 28793 @LENGTH@ 37
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(2,result.size()) @AT@ 28793 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[2, result.size()] @TO@ MethodInvocation@@Assert.assertEquals(2,result.size()) @AT@ 28800 @LENGTH@ 30
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, result.size()] @AT@ 28813 @LENGTH@ 1
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertEquals:[2, result.size()] @AT@ 28816 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 28816 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 28823 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new Object[]{"moon",1L},result.get(0)) @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28836 @LENGTH@ 66
------INS MethodInvocation@@Assert.assertArrayEquals(new Object[]{"moon",1L},result.get(0)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new Object[]{"moon",1L},result.get(0)) @AT@ 28836 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertArrayEquals(new Object[]{"moon",1L},result.get(0)) @AT@ 28836 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertArrayEquals:[new Object[]{"moon",1L}, result.get(0)] @TO@ MethodInvocation@@Assert.assertArrayEquals(new Object[]{"moon",1L},result.get(0)) @AT@ 28843 @LENGTH@ 58
------------INS ArrayCreation@@new Object[]{"moon",1L} @TO@ SimpleName@@MethodName:assertArrayEquals:[new Object[]{"moon",1L}, result.get(0)] @AT@ 28861 @LENGTH@ 24
---------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"moon",1L} @AT@ 28865 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 28865 @LENGTH@ 6
---------------INS ArrayInitializer@@{"moon",1L} @TO@ ArrayCreation@@new Object[]{"moon",1L} @AT@ 28873 @LENGTH@ 12
------------------INS StringLiteral@@"moon" @TO@ ArrayInitializer@@{"moon",1L} @AT@ 28874 @LENGTH@ 6
------------------INS NumberLiteral@@1L @TO@ ArrayInitializer@@{"moon",1L} @AT@ 28882 @LENGTH@ 2
------------INS MethodInvocation@@result.get(0) @TO@ SimpleName@@MethodName:assertArrayEquals:[new Object[]{"moon",1L}, result.get(0)] @AT@ 28887 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(0) @AT@ 28887 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@result.get(0) @AT@ 28894 @LENGTH@ 6
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 28898 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new Object[]{"star",2L},result.get(1)) @TO@ MethodDeclaration@@public, void, MethodName:testSpecialCharacters,  @AT@ 28907 @LENGTH@ 66
------INS MethodInvocation@@Assert.assertArrayEquals(new Object[]{"star",2L},result.get(1)) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new Object[]{"star",2L},result.get(1)) @AT@ 28907 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertArrayEquals(new Object[]{"star",2L},result.get(1)) @AT@ 28907 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertArrayEquals:[new Object[]{"star",2L}, result.get(1)] @TO@ MethodInvocation@@Assert.assertArrayEquals(new Object[]{"star",2L},result.get(1)) @AT@ 28914 @LENGTH@ 58
------------INS ArrayCreation@@new Object[]{"star",2L} @TO@ SimpleName@@MethodName:assertArrayEquals:[new Object[]{"star",2L}, result.get(1)] @AT@ 28932 @LENGTH@ 24
---------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{"star",2L} @AT@ 28936 @LENGTH@ 8
------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 28936 @LENGTH@ 6
---------------INS ArrayInitializer@@{"star",2L} @TO@ ArrayCreation@@new Object[]{"star",2L} @AT@ 28944 @LENGTH@ 12
------------------INS StringLiteral@@"star" @TO@ ArrayInitializer@@{"star",2L} @AT@ 28945 @LENGTH@ 6
------------------INS NumberLiteral@@2L @TO@ ArrayInitializer@@{"star",2L} @AT@ 28953 @LENGTH@ 2
------------INS MethodInvocation@@result.get(1) @TO@ SimpleName@@MethodName:assertArrayEquals:[new Object[]{"star",2L}, result.get(1)] @AT@ 28958 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(1) @AT@ 28958 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[1] @TO@ MethodInvocation@@result.get(1) @AT@ 28965 @LENGTH@ 6
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:get:[1] @AT@ 28969 @LENGTH@ 1


UPD MethodDeclaration@@private, Object, MethodName:applyFieldTargetTypeHintToValue, Field documentField, Object value,  @TO@ private, Object, MethodName:applyFieldTargetTypeHintToValue, Field documentField, @Nullable Object value,  @AT@ 24198 @LENGTH@ 739
---UPD SingleVariableDeclaration@@Object value @TO@ @Nullable Object value @AT@ 24266 @LENGTH@ 12
---UPD IfStatement@@if (documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget()) {  return value;} @TO@ if (value == null || documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget()) {  return value;} @AT@ 24285 @LENGTH@ 120
------UPD InfixExpression@@documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget() @TO@ value == null || documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget() @AT@ 24289 @LENGTH@ 92
---------INS InfixExpression@@value == null || documentField.getProperty() == null @TO@ InfixExpression@@documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget() @AT@ 24324 @LENGTH@ 52
------------MOV InfixExpression@@documentField.getProperty() == null @TO@ InfixExpression@@value == null || documentField.getProperty() == null @AT@ 24289 @LENGTH@ 35
------------INS InfixExpression@@value == null @TO@ InfixExpression@@value == null || documentField.getProperty() == null @AT@ 24324 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 24324 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 24329 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 24333 @LENGTH@ 4
------------MOV Operator@@|| @TO@ InfixExpression@@value == null || documentField.getProperty() == null @AT@ 24324 @LENGTH@ 2
---------INS Operator@@|| @TO@ InfixExpression@@documentField.getProperty() == null || !documentField.getProperty().hasExplicitWriteTarget() @AT@ 24376 @LENGTH@ 2


UPD TryStatement@@try {  return this.introspector.introspect(bearer.getToken());} catch (BadOpaqueTokenException failed) {  this.logger.debug("Failed to authenticate since token was invalid");  throw new InvalidBearerTokenException(failed.getMessage());}catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @TO@ try {  return this.introspector.introspect(bearer.getToken());} catch (BadOpaqueTokenException failed) {  this.logger.debug("Failed to authenticate since token was invalid");  throw new InvalidBearerTokenException(failed.getMessage(),failed);}catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 4526 @LENGTH@ 368
---UPD CatchClause@@catch (BadOpaqueTokenException failed) {  this.logger.debug("Failed to authenticate since token was invalid");  throw new InvalidBearerTokenException(failed.getMessage());} @TO@ catch (BadOpaqueTokenException failed) {  this.logger.debug("Failed to authenticate since token was invalid");  throw new InvalidBearerTokenException(failed.getMessage(),failed);} @AT@ 4597 @LENGTH@ 179
------UPD ThrowStatement@@ClassInstanceCreation:new InvalidBearerTokenException(failed.getMessage()) @TO@ ClassInstanceCreation:new InvalidBearerTokenException(failed.getMessage(),failed) @AT@ 4713 @LENGTH@ 59
---------UPD ClassInstanceCreation@@InvalidBearerTokenException[failed.getMessage()] @TO@ InvalidBearerTokenException[failed.getMessage(), failed] @AT@ 4719 @LENGTH@ 52
------------INS SimpleName@@failed @TO@ ClassInstanceCreation@@InvalidBearerTokenException[failed.getMessage()] @AT@ 4778 @LENGTH@ 6
---UPD CatchClause@@catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage());} @TO@ catch (OAuth2IntrospectionException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 4779 @LENGTH@ 115
------UPD ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage()) @TO@ ClassInstanceCreation:new AuthenticationServiceException(failed.getMessage(),failed) @AT@ 4828 @LENGTH@ 62
---------UPD ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @TO@ AuthenticationServiceException[failed.getMessage(), failed] @AT@ 4834 @LENGTH@ 55
------------INS SimpleName@@failed @TO@ ClassInstanceCreation@@AuthenticationServiceException[failed.getMessage()] @AT@ 4904 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @TO@ Initializer@@Initializer @AT@ 4934 @LENGTH@ 69
---INS MethodInvocation@@put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @TO@ ExpressionStatement@@MethodInvocation:put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @AT@ 4934 @LENGTH@ 68
------INS SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @TO@ MethodInvocation@@put(MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(),"2000") @AT@ 4934 @LENGTH@ 68
---------INS MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @TO@ SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @AT@ 4938 @LENGTH@ 55
------------INS QualifiedName@@Name:MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT @TO@ MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @AT@ 4938 @LENGTH@ 42
------------INS SimpleName@@MethodName:getVarname:[] @TO@ MethodInvocation@@MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname() @AT@ 4981 @LENGTH@ 12
---------INS StringLiteral@@"2000" @TO@ SimpleName@@MethodName:put:[MetastoreConf.ConfVars.TXN_OPENTXN_TIMEOUT.getVarname(), "2000"] @AT@ 4995 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:items.add(context.convert(element,componentType)) @TO@ MethodInvocation:items.add(element != null ? context.convert(element,componentType) : element) @AT@ 45533 @LENGTH@ 51
---UPD MethodInvocation@@items.add(context.convert(element,componentType)) @TO@ items.add(element != null ? context.convert(element,componentType) : element) @AT@ 45533 @LENGTH@ 50
------UPD SimpleName@@MethodName:add:[context.convert(element,componentType)] @TO@ MethodName:add:[element != null ? context.convert(element,componentType) : element] @AT@ 45539 @LENGTH@ 44
---------INS ConditionalExpression@@element != null ? context.convert(element,componentType) : element @TO@ SimpleName@@MethodName:add:[context.convert(element,componentType)] @AT@ 45543 @LENGTH@ 67
------------MOV MethodInvocation@@context.convert(element,componentType) @TO@ ConditionalExpression@@element != null ? context.convert(element,componentType) : element @AT@ 45543 @LENGTH@ 39
------------INS InfixExpression@@element != null @TO@ ConditionalExpression@@element != null ? context.convert(element,componentType) : element @AT@ 45543 @LENGTH@ 15
---------------INS SimpleName@@element @TO@ InfixExpression@@element != null @AT@ 45543 @LENGTH@ 7
---------------INS Operator@@!= @TO@ InfixExpression@@element != null @AT@ 45550 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@element != null @AT@ 45554 @LENGTH@ 4
------------INS SimpleName@@element @TO@ ConditionalExpression@@element != null ? context.convert(element,componentType) : element @AT@ 45603 @LENGTH@ 7


INS MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @TO@ TypeDeclaration@@[public]AbstractDynamicRegistry, AbstractMap<K,V>[StaticService] @AT@ 5909 @LENGTH@ 794
---INS Modifier@@public @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 5909 @LENGTH@ 6
---INS ParameterizedType@@Collection<V> @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 5916 @LENGTH@ 13
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<V> @AT@ 5916 @LENGTH@ 10
------INS SimpleType@@V @TO@ ParameterizedType@@Collection<V> @AT@ 5927 @LENGTH@ 1
---INS SimpleName@@MethodName:getReadOnlyValues @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 5930 @LENGTH@ 17
---INS IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 5960 @LENGTH@ 69
------INS MethodInvocation@@MethodName:isEmpty:[] @TO@ IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @AT@ 5964 @LENGTH@ 9
------INS Block@@ThenBody:{  return Collections.EMPTY_LIST;} @TO@ IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @AT@ 5975 @LENGTH@ 54
---------INS ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @TO@ Block@@ThenBody:{  return Collections.EMPTY_LIST;} @AT@ 5989 @LENGTH@ 30
------------INS QualifiedName@@Collections.EMPTY_LIST @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 5996 @LENGTH@ 22
---------------INS SimpleName@@Collections @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 5996 @LENGTH@ 11
---------------INS SimpleName@@EMPTY_LIST @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 6008 @LENGTH@ 10
---INS VariableDeclarationStatement@@Collection<V> answer=new ArrayList<>(); @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 6312 @LENGTH@ 41
------INS ParameterizedType@@Collection<V> @TO@ VariableDeclarationStatement@@Collection<V> answer=new ArrayList<>(); @AT@ 6312 @LENGTH@ 13
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<V> @AT@ 6312 @LENGTH@ 10
---------INS SimpleType@@V @TO@ ParameterizedType@@Collection<V> @AT@ 6323 @LENGTH@ 1
------INS VariableDeclarationFragment@@answer=new ArrayList<>() @TO@ VariableDeclarationStatement@@Collection<V> answer=new ArrayList<>(); @AT@ 6326 @LENGTH@ 26
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=new ArrayList<>() @AT@ 6326 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@answer=new ArrayList<>() @AT@ 6335 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 6335 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 6339 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 6339 @LENGTH@ 9
---INS VariableDeclarationStatement@@boolean done=false; @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 6362 @LENGTH@ 21
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean done=false; @AT@ 6362 @LENGTH@ 7
------INS VariableDeclarationFragment@@done=false @TO@ VariableDeclarationStatement@@boolean done=false; @AT@ 6370 @LENGTH@ 12
---------INS SimpleName@@done @TO@ VariableDeclarationFragment@@done=false @AT@ 6370 @LENGTH@ 4
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@done=false @AT@ 6377 @LENGTH@ 5
---INS WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 6392 @LENGTH@ 246
------INS PrefixExpression@@!done @TO@ WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 6399 @LENGTH@ 5
---------INS Operator@@! @TO@ PrefixExpression@@!done @AT@ 6399 @LENGTH@ 1
---------INS SimpleName@@done @TO@ PrefixExpression@@!done @AT@ 6400 @LENGTH@ 4
------INS Block@@WhileBody:{  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @TO@ WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 6406 @LENGTH@ 232
---------INS TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @TO@ Block@@WhileBody:{  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 6420 @LENGTH@ 208
------------INS ExpressionStatement@@MethodInvocation:answer.addAll(values()) @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 6442 @LENGTH@ 24
---------------INS MethodInvocation@@answer.addAll(values()) @TO@ ExpressionStatement@@MethodInvocation:answer.addAll(values()) @AT@ 6442 @LENGTH@ 23
------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.addAll(values()) @AT@ 6442 @LENGTH@ 6
------------------INS SimpleName@@MethodName:addAll:[values()] @TO@ MethodInvocation@@answer.addAll(values()) @AT@ 6449 @LENGTH@ 16
---------------------INS MethodInvocation@@MethodName:values:[] @TO@ SimpleName@@MethodName:addAll:[values()] @AT@ 6456 @LENGTH@ 8
------------INS ExpressionStatement@@Assignment:done=true @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 6483 @LENGTH@ 12
---------------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true @AT@ 6483 @LENGTH@ 11
------------------INS SimpleName@@done @TO@ Assignment@@done=true @AT@ 6483 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@done=true @AT@ 6487 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@done=true @AT@ 6490 @LENGTH@ 4
------------INS CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 6510 @LENGTH@ 118
---------------INS SingleVariableDeclaration@@ConcurrentModificationException e @TO@ CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 6517 @LENGTH@ 33
------------------INS SimpleType@@ConcurrentModificationException @TO@ SingleVariableDeclaration@@ConcurrentModificationException e @AT@ 6517 @LENGTH@ 31
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConcurrentModificationException e @AT@ 6549 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:answer.clear() @TO@ CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 6570 @LENGTH@ 15
------------------INS MethodInvocation@@answer.clear() @TO@ ExpressionStatement@@MethodInvocation:answer.clear() @AT@ 6570 @LENGTH@ 14
---------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.clear() @AT@ 6570 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@answer.clear() @AT@ 6577 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:Collections.unmodifiableCollection(answer) @TO@ MethodDeclaration@@public, Collection<V>, MethodName:getReadOnlyValues,  @AT@ 6647 @LENGTH@ 50
------INS MethodInvocation@@Collections.unmodifiableCollection(answer) @TO@ ReturnStatement@@MethodInvocation:Collections.unmodifiableCollection(answer) @AT@ 6654 @LENGTH@ 42
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.unmodifiableCollection(answer) @AT@ 6654 @LENGTH@ 11
---------INS SimpleName@@MethodName:unmodifiableCollection:[answer] @TO@ MethodInvocation@@Collections.unmodifiableCollection(answer) @AT@ 6666 @LENGTH@ 30
------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:unmodifiableCollection:[answer] @AT@ 6689 @LENGTH@ 6


UPD IfStatement@@if (deps.getNodeType() == NodeType.SEQUENCE) {  SequenceNode sn=(SequenceNode)deps;  for (  Node child : sn.getValue()) {    if (child.getNodeType() == NodeType.SCALAR) {      ScalarNode scn=(ScalarNode)child;      String dep=scn.getValue();      if (dep != null) {        LOG.trace("Kamelet dependency: {}",dep);        dependencies.add(dep);      }    }  }} @TO@ if (deps != null && deps.getNodeType() == NodeType.SEQUENCE) {  SequenceNode sn=(SequenceNode)deps;  for (  Node child : sn.getValue()) {    if (child.getNodeType() == NodeType.SCALAR) {      ScalarNode scn=(ScalarNode)child;      String dep=scn.getValue();      if (dep != null) {        LOG.trace("Kamelet dependency: {}",dep);        dependencies.add(dep);      }    }  }} @AT@ 2354 @LENGTH@ 529
---INS InfixExpression@@deps != null && deps.getNodeType() == NodeType.SEQUENCE @TO@ IfStatement@@if (deps.getNodeType() == NodeType.SEQUENCE) {  SequenceNode sn=(SequenceNode)deps;  for (  Node child : sn.getValue()) {    if (child.getNodeType() == NodeType.SCALAR) {      ScalarNode scn=(ScalarNode)child;      String dep=scn.getValue();      if (dep != null) {        LOG.trace("Kamelet dependency: {}",dep);        dependencies.add(dep);      }    }  }} @AT@ 2358 @LENGTH@ 55
------MOV InfixExpression@@deps.getNodeType() == NodeType.SEQUENCE @TO@ InfixExpression@@deps != null && deps.getNodeType() == NodeType.SEQUENCE @AT@ 2358 @LENGTH@ 39
------INS InfixExpression@@deps != null @TO@ InfixExpression@@deps != null && deps.getNodeType() == NodeType.SEQUENCE @AT@ 2358 @LENGTH@ 12
---------INS SimpleName@@deps @TO@ InfixExpression@@deps != null @AT@ 2358 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@deps != null @AT@ 2362 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@deps != null @AT@ 2366 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@deps != null && deps.getNodeType() == NodeType.SEQUENCE @AT@ 2370 @LENGTH@ 2


UPD MethodDeclaration@@MovieProjectionWithActorProjection, MethodName:findProjectionWithProjectionByTitle, String title,  @TO@ MovieProjectionWithActorProjection, MethodName:findProjectionWithProjectionByTitle, @Param("title") String title,  @AT@ 4547 @LENGTH@ 50
---UPD SingleVariableDeclaration@@String title @TO@ @Param("title") String title @AT@ 4583 @LENGTH@ 12


DEL FieldDeclaration@@private, CordaConfiguration, [configuration] @AT@ 2454 @LENGTH@ 41
---DEL Modifier@@private @AT@ 2454 @LENGTH@ 7
---DEL SimpleType@@CordaConfiguration @AT@ 2462 @LENGTH@ 18
---DEL VariableDeclarationFragment@@configuration @AT@ 2481 @LENGTH@ 13
------DEL SimpleName@@configuration @AT@ 2481 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:miniDFSCluster=new MiniDFSCluster.Builder(hadoopConf).numDataNodes(1).format(true).build() @TO@ Assignment:miniDFSCluster=new MiniDFSCluster.Builder(hadoopConf).numDataNodes(2).format(true).build() @AT@ 3482 @LENGTH@ 101
---UPD Assignment@@miniDFSCluster=new MiniDFSCluster.Builder(hadoopConf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(hadoopConf).numDataNodes(2).format(true).build() @AT@ 3482 @LENGTH@ 100
------UPD MethodInvocation@@new MiniDFSCluster.Builder(hadoopConf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(hadoopConf).numDataNodes(2).format(true).build() @AT@ 3507 @LENGTH@ 75
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 3507 @LENGTH@ 54
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 3559 @LENGTH@ 1


UPD TypeDeclaration@@[@Ignore, @RunWith(SpringRunner.class), public]MappingLdifReaderBuilderTests,  @TO@ [@RunWith(SpringRunner.class), public]MappingLdifReaderBuilderTests,  @AT@ 1702 @LENGTH@ 6344
---DEL MarkerAnnotation@@@Ignore @AT@ 1702 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:it.intitalEntitySet(initialEntities) @TO@ MethodInvocation:it.initialEntitySet(initialEntities) @AT@ 1674 @LENGTH@ 37
---UPD MethodInvocation@@it.intitalEntitySet(initialEntities) @TO@ it.initialEntitySet(initialEntities) @AT@ 1674 @LENGTH@ 36
------UPD SimpleName@@MethodName:intitalEntitySet:[initialEntities] @TO@ MethodName:initialEntitySet:[initialEntities] @AT@ 1677 @LENGTH@ 33


UPD VariableDeclarationStatement@@List<ListenableFuture> futures=new ArrayList<>(); @TO@ List<ListenableFuture<SendResult<String,String>>> futures=new ArrayList<>(); @AT@ 13206 @LENGTH@ 51
---UPD ParameterizedType@@List<ListenableFuture> @TO@ List<ListenableFuture<SendResult<String,String>>> @AT@ 13206 @LENGTH@ 22
------INS ParameterizedType@@ListenableFuture<SendResult<String,String>> @TO@ ParameterizedType@@List<ListenableFuture> @AT@ 13211 @LENGTH@ 44
---------MOV SimpleType@@ListenableFuture @TO@ ParameterizedType@@ListenableFuture<SendResult<String,String>> @AT@ 13211 @LENGTH@ 16
---------INS ParameterizedType@@SendResult<String,String> @TO@ ParameterizedType@@ListenableFuture<SendResult<String,String>> @AT@ 13228 @LENGTH@ 26
------------INS SimpleType@@SendResult @TO@ ParameterizedType@@SendResult<String,String> @AT@ 13228 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@SendResult<String,String> @AT@ 13239 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@SendResult<String,String> @AT@ 13247 @LENGTH@ 6


UPD MethodDeclaration@@protected, abstract, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction,  @TO@ protected, abstract, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction,  @AT@ 3921 @LENGTH@ 290
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 4145 @LENGTH@ 64
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4155 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 4191 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 4191 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 4200 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4155 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4166 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4178 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 4191 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, String[], [NOT_USED={"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger"}] @TO@ private, static, final, String[], [NOT_USED={"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger","org.wildfly.security.http.sfbasic"}] @AT@ 1196 @LENGTH@ 385
---UPD VariableDeclarationFragment@@NOT_USED={"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger"} @TO@ NOT_USED={"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger","org.wildfly.security.http.sfbasic"} @AT@ 1226 @LENGTH@ 354
------UPD ArrayInitializer@@{"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger"} @TO@ {"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger","org.wildfly.security.http.sfbasic"} @AT@ 1237 @LENGTH@ 343
---------INS StringLiteral@@"org.wildfly.security.http.sfbasic" @TO@ ArrayInitializer@@{"org.jboss.as.threads","javax.xml.stream.api","javax.sql.api","org.jboss.as.patching","org.jboss.as.patching.cli","org.wildfly.event.logger"} @AT@ 1631 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2344 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2344 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2344 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2349 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1677 @LENGTH@ 64
---UPD MethodInvocation@@from("file:src/main/data?noop=true&delay=3000").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true&delay=3000").to(getFtpUrl()) @AT@ 1677 @LENGTH@ 63
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true&delay=3000"] @TO@ MethodName:from:["file:src/test/data?noop=true&delay=3000"] @AT@ 1677 @LENGTH@ 47
---------UPD StringLiteral@@"file:src/main/data?noop=true&delay=3000" @TO@ "file:src/test/data?noop=true&delay=3000" @AT@ 1682 @LENGTH@ 41


UPD IfStatement@@if ((dirService != null) && (dirService.getChangeLog().isEnabled())) {  long revision=dirService.getChangeLog().getCurrentRevision();  LOG.debug("Create revision {}",revision);  return revision;} @TO@ if (dirService != null && dirService.getChangeLog().isEnabled()) {  long revision=dirService.getChangeLog().getCurrentRevision();  LOG.debug("Create revision {}",revision);  return revision;} @AT@ 10751 @LENGTH@ 256
---UPD InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @TO@ dirService != null && dirService.getChangeLog().isEnabled() @AT@ 10755 @LENGTH@ 63
------DEL ParenthesizedExpression@@(dirService != null) @AT@ 10755 @LENGTH@ 20
---------DEL InfixExpression@@dirService != null @AT@ 10756 @LENGTH@ 18
------INS InfixExpression@@dirService != null @TO@ InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @AT@ 10755 @LENGTH@ 18
---------MOV SimpleName@@dirService @TO@ InfixExpression@@dirService != null @AT@ 10756 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@dirService != null @AT@ 10766 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@dirService != null @AT@ 10770 @LENGTH@ 4
------INS MethodInvocation@@dirService.getChangeLog().isEnabled() @TO@ InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @AT@ 10777 @LENGTH@ 37
---------MOV MethodInvocation@@MethodName:getChangeLog:[] @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 25
---------MOV SimpleName@@Name:dirService @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 10
---------MOV SimpleName@@MethodName:isEnabled:[] @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10806 @LENGTH@ 11
------DEL ParenthesizedExpression@@(dirService.getChangeLog().isEnabled()) @AT@ 10779 @LENGTH@ 39
---------DEL MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 37


INS ExpressionStatement@@MethodInvocation:consumer.determineSObjectClass() @TO@ MethodDeclaration@@public, void, MethodName:shouldProcessMappedPayloadPushTopicMessages, Exception,  @AT@ 6637 @LENGTH@ 33
---INS MethodInvocation@@consumer.determineSObjectClass() @TO@ ExpressionStatement@@MethodInvocation:consumer.determineSObjectClass() @AT@ 6637 @LENGTH@ 32
------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.determineSObjectClass() @AT@ 6637 @LENGTH@ 8
------INS SimpleName@@MethodName:determineSObjectClass:[] @TO@ MethodInvocation@@consumer.determineSObjectClass() @AT@ 6646 @LENGTH@ 23


UPD Block@@ElseBody:{  return new Message(null,messageProperties);} @TO@ ElseBody:{  byte[] empty=new byte[0];  return new Message(empty,messageProperties);} @AT@ 2174 @LENGTH@ 76
---UPD ReturnStatement@@ClassInstanceCreation:new Message(null,messageProperties) @TO@ ClassInstanceCreation:new Message(empty,messageProperties) @AT@ 2192 @LENGTH@ 44
------UPD ClassInstanceCreation@@Message[null, messageProperties] @TO@ Message[empty, messageProperties] @AT@ 2199 @LENGTH@ 36
---------DEL NullLiteral@@null @AT@ 2211 @LENGTH@ 4
---------INS SimpleName@@empty @TO@ ClassInstanceCreation@@Message[null, messageProperties] @AT@ 2312 @LENGTH@ 5
---INS VariableDeclarationStatement@@byte[] empty=new byte[0]; @TO@ Block@@ElseBody:{  return new Message(null,messageProperties);} @AT@ 2249 @LENGTH@ 27
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] empty=new byte[0]; @AT@ 2249 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2249 @LENGTH@ 4
------INS VariableDeclarationFragment@@empty=new byte[0] @TO@ VariableDeclarationStatement@@byte[] empty=new byte[0]; @AT@ 2256 @LENGTH@ 19
---------INS SimpleName@@empty @TO@ VariableDeclarationFragment@@empty=new byte[0] @AT@ 2256 @LENGTH@ 5
---------INS ArrayCreation@@new byte[0] @TO@ VariableDeclarationFragment@@empty=new byte[0] @AT@ 2264 @LENGTH@ 11
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[0] @AT@ 2268 @LENGTH@ 7
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2268 @LENGTH@ 4
------------INS NumberLiteral@@0 @TO@ ArrayCreation@@new byte[0] @AT@ 2273 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:ss.getAuthorizerV2().checkPrivileges(HiveOperationType.KILL_QUERY,new ArrayList<>(),new ArrayList<>(),new HiveAuthzContext.Builder().build()) @TO@ MethodInvocation:ss.getAuthorizerV2().checkPrivileges(HiveOperationType.KILL_QUERY,Arrays.asList(serviceNameObj),new ArrayList<HivePrivilegeObject>(),new HiveAuthzContext.Builder().build()) @AT@ 5528 @LENGTH@ 157
---UPD MethodInvocation@@ss.getAuthorizerV2().checkPrivileges(HiveOperationType.KILL_QUERY,new ArrayList<>(),new ArrayList<>(),new HiveAuthzContext.Builder().build()) @TO@ ss.getAuthorizerV2().checkPrivileges(HiveOperationType.KILL_QUERY,Arrays.asList(serviceNameObj),new ArrayList<HivePrivilegeObject>(),new HiveAuthzContext.Builder().build()) @AT@ 5528 @LENGTH@ 156
------UPD SimpleName@@MethodName:checkPrivileges:[HiveOperationType.KILL_QUERY, new ArrayList<>(), new ArrayList<>(), new HiveAuthzContext.Builder().build()] @TO@ MethodName:checkPrivileges:[HiveOperationType.KILL_QUERY, Arrays.asList(serviceNameObj), new ArrayList<HivePrivilegeObject>(), new HiveAuthzContext.Builder().build()] @AT@ 5549 @LENGTH@ 135
---------UPD ClassInstanceCreation@@ArrayList<>[] @TO@ ArrayList<HivePrivilegeObject>[] @AT@ 5595 @LENGTH@ 17
------------UPD ParameterizedType@@ArrayList<> @TO@ ArrayList<HivePrivilegeObject> @AT@ 5599 @LENGTH@ 11
---------------INS SimpleType@@HivePrivilegeObject @TO@ ParameterizedType@@ArrayList<> @AT@ 5914 @LENGTH@ 19
---------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 5614 @LENGTH@ 17
------------DEL New@@new @AT@ 5614 @LENGTH@ 3
------------DEL ParameterizedType@@ArrayList<> @AT@ 5618 @LENGTH@ 11
---------------DEL SimpleType@@ArrayList @AT@ 5618 @LENGTH@ 9
---------INS MethodInvocation@@Arrays.asList(serviceNameObj) @TO@ SimpleName@@MethodName:checkPrivileges:[HiveOperationType.KILL_QUERY, new ArrayList<>(), new ArrayList<>(), new HiveAuthzContext.Builder().build()] @AT@ 5869 @LENGTH@ 29
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(serviceNameObj) @AT@ 5869 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[serviceNameObj] @TO@ MethodInvocation@@Arrays.asList(serviceNameObj) @AT@ 5876 @LENGTH@ 22
---------------INS SimpleName@@serviceNameObj @TO@ SimpleName@@MethodName:asList:[serviceNameObj] @AT@ 5883 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream,  @TO@ TypeDeclaration@@[public]IOUtilsCopyTest,  @AT@ 3797 @LENGTH@ 158
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream,  @AT@ 3797 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream,  @AT@ 3804 @LENGTH@ 4
---INS SimpleName@@MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream,  @AT@ 3809 @LENGTH@ 60
---INS ExpressionStatement@@MethodInvocation:assertThrows(NullPointerException.class,() -> IOUtils.copy(null)) @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream_nullOutputStream,  @AT@ 3882 @LENGTH@ 67
------INS MethodInvocation@@assertThrows(NullPointerException.class,() -> IOUtils.copy(null)) @TO@ ExpressionStatement@@MethodInvocation:assertThrows(NullPointerException.class,() -> IOUtils.copy(null)) @AT@ 3882 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertThrows:[NullPointerException.class, () -> IOUtils.copy(null)] @TO@ MethodInvocation@@assertThrows(NullPointerException.class,() -> IOUtils.copy(null)) @AT@ 3882 @LENGTH@ 66
------------INS TypeLiteral@@NullPointerException.class @TO@ SimpleName@@MethodName:assertThrows:[NullPointerException.class, () -> IOUtils.copy(null)] @AT@ 3895 @LENGTH@ 26
------------INS LambdaExpression@@() -> IOUtils.copy(null) @TO@ SimpleName@@MethodName:assertThrows:[NullPointerException.class, () -> IOUtils.copy(null)] @AT@ 3923 @LENGTH@ 24
---------------INS MethodInvocation@@IOUtils.copy(null) @TO@ LambdaExpression@@() -> IOUtils.copy(null) @AT@ 3929 @LENGTH@ 18
------------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.copy(null) @AT@ 3929 @LENGTH@ 7
------------------INS SimpleName@@MethodName:copy:[null] @TO@ MethodInvocation@@IOUtils.copy(null) @AT@ 3937 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:copy:[null] @AT@ 3942 @LENGTH@ 4


UPD TryStatement@@try {  GenericFile<FTPFile> target=(GenericFile<FTPFile>)exchange.getProperty(FileComponent.FILE_EXCHANGE_FILE);  org.apache.camel.util.ObjectHelper.notNull(target,"Exchange should have the " + FileComponent.FILE_EXCHANGE_FILE + " set");  String relativeName=target.getRelativeFilePath();  temp=new File(local,relativeName + ".inprogress");  local=new File(local,relativeName);  local.mkdirs();  if (local.exists()) {    if (!FileUtil.deleteFile(local)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + local);    }  }  boolean exists=temp.exists();  if (exists) {    existingSize=temp.length();  }  if (!resumeDownload) {    if (exists && !FileUtil.deleteFile(temp)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + temp);    }    if (!temp.createNewFile()) {      throw new GenericFileOperationFailedException("Cannot create new local work file: " + temp);    }  }  boolean append=resumeDownload && existingSize > 0;  os=new FileOutputStream(temp,append);  exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,local.getPath());} catch (Exception e) {  throw new GenericFileOperationFailedException("Cannot create new local work file: " + local);} @TO@ try {  GenericFile<FTPFile> target=(GenericFile<FTPFile>)exchange.getProperty(FileComponent.FILE_EXCHANGE_FILE);  org.apache.camel.util.ObjectHelper.notNull(target,"Exchange should have the " + FileComponent.FILE_EXCHANGE_FILE + " set");  String relativeName=target.getRelativeFilePath();  temp=new File(local,relativeName + ".inprogress");  local=new File(local,relativeName);  boolean result=local.mkdirs();  if (!result) {    log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);  }  if (local.exists()) {    if (!FileUtil.deleteFile(local)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + local);    }  }  boolean exists=temp.exists();  if (exists) {    existingSize=temp.length();  }  if (!resumeDownload) {    if (exists && !FileUtil.deleteFile(temp)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + temp);    }    if (!temp.createNewFile()) {      throw new GenericFileOperationFailedException("Cannot create new local work file: " + temp);    }  }  boolean append=resumeDownload && existingSize > 0;  os=new FileOutputStream(temp,append);  exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,local.getPath());} catch (Exception e) {  throw new GenericFileOperationFailedException("Cannot create new local work file: " + local);} @AT@ 22098 @LENGTH@ 2378
---INS VariableDeclarationStatement@@boolean result=local.mkdirs(); @TO@ TryStatement@@try {  GenericFile<FTPFile> target=(GenericFile<FTPFile>)exchange.getProperty(FileComponent.FILE_EXCHANGE_FILE);  org.apache.camel.util.ObjectHelper.notNull(target,"Exchange should have the " + FileComponent.FILE_EXCHANGE_FILE + " set");  String relativeName=target.getRelativeFilePath();  temp=new File(local,relativeName + ".inprogress");  local=new File(local,relativeName);  local.mkdirs();  if (local.exists()) {    if (!FileUtil.deleteFile(local)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + local);    }  }  boolean exists=temp.exists();  if (exists) {    existingSize=temp.length();  }  if (!resumeDownload) {    if (exists && !FileUtil.deleteFile(temp)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + temp);    }    if (!temp.createNewFile()) {      throw new GenericFileOperationFailedException("Cannot create new local work file: " + temp);    }  }  boolean append=resumeDownload && existingSize > 0;  os=new FileOutputStream(temp,append);  exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,local.getPath());} catch (Exception e) {  throw new GenericFileOperationFailedException("Cannot create new local work file: " + local);} @AT@ 22689 @LENGTH@ 32
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=local.mkdirs(); @AT@ 22689 @LENGTH@ 7
------INS VariableDeclarationFragment@@result=local.mkdirs() @TO@ VariableDeclarationStatement@@boolean result=local.mkdirs(); @AT@ 22697 @LENGTH@ 23
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=local.mkdirs() @AT@ 22697 @LENGTH@ 6
---------INS MethodInvocation@@local.mkdirs() @TO@ VariableDeclarationFragment@@result=local.mkdirs() @AT@ 22706 @LENGTH@ 14
------------MOV SimpleName@@Name:local @TO@ MethodInvocation@@local.mkdirs() @AT@ 22689 @LENGTH@ 5
------------MOV SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@local.mkdirs() @AT@ 22695 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:local.mkdirs() @AT@ 22689 @LENGTH@ 15
------DEL MethodInvocation@@local.mkdirs() @AT@ 22689 @LENGTH@ 14
---INS IfStatement@@if (!result) {  log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);} @TO@ TryStatement@@try {  GenericFile<FTPFile> target=(GenericFile<FTPFile>)exchange.getProperty(FileComponent.FILE_EXCHANGE_FILE);  org.apache.camel.util.ObjectHelper.notNull(target,"Exchange should have the " + FileComponent.FILE_EXCHANGE_FILE + " set");  String relativeName=target.getRelativeFilePath();  temp=new File(local,relativeName + ".inprogress");  local=new File(local,relativeName);  local.mkdirs();  if (local.exists()) {    if (!FileUtil.deleteFile(local)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + local);    }  }  boolean exists=temp.exists();  if (exists) {    existingSize=temp.length();  }  if (!resumeDownload) {    if (exists && !FileUtil.deleteFile(temp)) {      throw new GenericFileOperationFailedException("Cannot delete existing local work file: " + temp);    }    if (!temp.createNewFile()) {      throw new GenericFileOperationFailedException("Cannot create new local work file: " + temp);    }  }  boolean append=resumeDownload && existingSize > 0;  os=new FileOutputStream(temp,append);  exchange.getIn().setHeader(Exchange.FILE_LOCAL_WORK_PATH,local.getPath());} catch (Exception e) {  throw new GenericFileOperationFailedException("Cannot create new local work file: " + local);} @AT@ 22734 @LENGTH@ 256
------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);} @AT@ 22738 @LENGTH@ 7
---------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 22738 @LENGTH@ 1
---------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 22739 @LENGTH@ 6
------INS Block@@ThenBody:{  log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);} @TO@ IfStatement@@if (!result) {  log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);} @AT@ 22747 @LENGTH@ 243
---------INS ExpressionStatement@@MethodInvocation:log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local) @TO@ Block@@ThenBody:{  log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local);} @AT@ 22765 @LENGTH@ 211
------------INS MethodInvocation@@log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local) @AT@ 22765 @LENGTH@ 210
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local) @AT@ 22765 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally", local] @TO@ MethodInvocation@@log.warn("Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally",local) @AT@ 22769 @LENGTH@ 206
------------------INS StringLiteral@@"Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally" @TO@ SimpleName@@MethodName:warn:["Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally", local] @AT@ 22799 @LENGTH@ 144
------------------INS SimpleName@@local @TO@ SimpleName@@MethodName:warn:["Failed to create local directory {} while retrieving file in local work directory. Directory may already exist or have been created externally", local] @AT@ 22969 @LENGTH@ 5


DEL MethodDeclaration@@private, static, void, MethodName:parseEndDocument, final XMLStreamReader reader, XMLStreamException,  @AT@ 43436 @LENGTH@ 843
---DEL Modifier@@private @AT@ 43436 @LENGTH@ 7
---DEL Modifier@@static @AT@ 43444 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 43451 @LENGTH@ 4
---DEL SimpleName@@MethodName:parseEndDocument @AT@ 43456 @LENGTH@ 16
---DEL SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 43473 @LENGTH@ 28
------DEL Modifier@@final @AT@ 43473 @LENGTH@ 5
------DEL SimpleType@@XMLStreamReader @AT@ 43479 @LENGTH@ 15
------DEL SimpleName@@reader @AT@ 43495 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 43510 @LENGTH@ 18
---DEL WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 43539 @LENGTH@ 718
------DEL MethodInvocation@@reader.hasNext() @AT@ 43546 @LENGTH@ 16
---------DEL SimpleName@@Name:reader @AT@ 43546 @LENGTH@ 6
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 43553 @LENGTH@ 9
------DEL Block@@WhileBody:{switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 43564 @LENGTH@ 693
---------DEL SwitchStatement@@switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{    return;  }case XMLStreamConstants.CHARACTERS:{  if (!reader.isWhiteSpace()) {    throw unexpectedContent(reader);  }  break;}case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{break;}default :{throw unexpectedContent(reader);}} @AT@ 43578 @LENGTH@ 669
------------DEL MethodInvocation@@reader.next() @AT@ 43586 @LENGTH@ 13
---------------DEL SimpleName@@Name:reader @AT@ 43586 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:next:[] @AT@ 43593 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.END_DOCUMENT: @AT@ 43619 @LENGTH@ 37
---------------DEL QualifiedName@@XMLStreamConstants.END_DOCUMENT @AT@ 43624 @LENGTH@ 31
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43624 @LENGTH@ 18
------------------DEL SimpleName@@END_DOCUMENT @AT@ 43643 @LENGTH@ 12
------------DEL ReturnStatement@@ @AT@ 43679 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.CHARACTERS: @AT@ 43721 @LENGTH@ 35
---------------DEL QualifiedName@@XMLStreamConstants.CHARACTERS @AT@ 43726 @LENGTH@ 29
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43726 @LENGTH@ 18
------------------DEL SimpleName@@CHARACTERS @AT@ 43745 @LENGTH@ 10
------------DEL IfStatement@@if (!reader.isWhiteSpace()) {  throw unexpectedContent(reader);} @AT@ 43779 @LENGTH@ 108
---------------DEL PrefixExpression@@!reader.isWhiteSpace() @AT@ 43783 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 43783 @LENGTH@ 1
------------------DEL MethodInvocation@@reader.isWhiteSpace() @AT@ 43784 @LENGTH@ 21
---------------------DEL SimpleName@@Name:reader @AT@ 43784 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isWhiteSpace:[] @AT@ 43791 @LENGTH@ 14
---------------DEL Block@@ThenBody:{  throw unexpectedContent(reader);} @AT@ 43807 @LENGTH@ 80
------------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 43833 @LENGTH@ 32
---------------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 43839 @LENGTH@ 25
------------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 43839 @LENGTH@ 25
---------------------------DEL SimpleName@@reader @AT@ 43857 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 43938 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.COMMENT: @AT@ 43979 @LENGTH@ 32
---------------DEL QualifiedName@@XMLStreamConstants.COMMENT @AT@ 43984 @LENGTH@ 26
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43984 @LENGTH@ 18
------------------DEL SimpleName@@COMMENT @AT@ 44003 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.SPACE: @AT@ 44028 @LENGTH@ 30
---------------DEL QualifiedName@@XMLStreamConstants.SPACE @AT@ 44033 @LENGTH@ 24
------------------DEL SimpleName@@XMLStreamConstants @AT@ 44033 @LENGTH@ 18
------------------DEL SimpleName@@SPACE @AT@ 44052 @LENGTH@ 5
------------DEL BreakStatement@@ @AT@ 44111 @LENGTH@ 6
------------DEL SwitchCase@@default @AT@ 44152 @LENGTH@ 8
------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 44183 @LENGTH@ 32
---------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 44189 @LENGTH@ 25
------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 44189 @LENGTH@ 25
---------------------DEL SimpleName@@reader @AT@ 44207 @LENGTH@ 6
---DEL ReturnStatement@@ @AT@ 44266 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @TO@ TypeDeclaration@@StorageQueueProducerIT, StorageQueueBase @AT@ 4857 @LENGTH@ 589
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4857 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4864 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaderPreservation @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4869 @LENGTH@ 22
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4901 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:template.send("direct:sendMessage",ExchangePattern.InOnly,exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 4979 @LENGTH@ 360
------INS MethodInvocation@@template.send("direct:sendMessage",ExchangePattern.InOnly,exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ ExpressionStatement@@MethodInvocation:template.send("direct:sendMessage",ExchangePattern.InOnly,exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4979 @LENGTH@ 359
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send("direct:sendMessage",ExchangePattern.InOnly,exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4979 @LENGTH@ 8
---------INS SimpleName@@MethodName:send:["direct:sendMessage", ExchangePattern.InOnly, exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @TO@ MethodInvocation@@template.send("direct:sendMessage",ExchangePattern.InOnly,exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 4988 @LENGTH@ 350
------------INS StringLiteral@@"direct:sendMessage" @TO@ SimpleName@@MethodName:send:["direct:sendMessage", ExchangePattern.InOnly, exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 4993 @LENGTH@ 20
------------INS QualifiedName@@ExchangePattern.InOnly @TO@ SimpleName@@MethodName:send:["direct:sendMessage", ExchangePattern.InOnly, exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 5015 @LENGTH@ 22
---------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 5015 @LENGTH@ 15
---------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 5031 @LENGTH@ 6
------------INS LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @TO@ SimpleName@@MethodName:send:["direct:sendMessage", ExchangePattern.InOnly, exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 5039 @LENGTH@ 298
---------------INS VariableDeclarationFragment@@exchange @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 5039 @LENGTH@ 8
------------------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange @AT@ 5039 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 5065 @LENGTH@ 65
------------------INS MethodInvocation@@exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @AT@ 5065 @LENGTH@ 64
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @AT@ 5065 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @AT@ 5065 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:[QueueConstants.QUEUE_NAME, queueName] @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName) @AT@ 5082 @LENGTH@ 47
------------------------INS QualifiedName@@QueueConstants.QUEUE_NAME @TO@ SimpleName@@MethodName:setHeader:[QueueConstants.QUEUE_NAME, queueName] @AT@ 5092 @LENGTH@ 25
---------------------------INS SimpleName@@QueueConstants @TO@ QualifiedName@@QueueConstants.QUEUE_NAME @AT@ 5092 @LENGTH@ 14
---------------------------INS SimpleName@@QUEUE_NAME @TO@ QualifiedName@@QueueConstants.QUEUE_NAME @AT@ 5107 @LENGTH@ 10
------------------------INS SimpleName@@queueName @TO@ SimpleName@@MethodName:setHeader:[QueueConstants.QUEUE_NAME, queueName] @AT@ 5119 @LENGTH@ 9
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("test-message-1") @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 5143 @LENGTH@ 43
------------------INS MethodInvocation@@exchange.getIn().setBody("test-message-1") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("test-message-1") @AT@ 5143 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("test-message-1") @AT@ 5143 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("test-message-1") @AT@ 5143 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setBody:["test-message-1"] @TO@ MethodInvocation@@exchange.getIn().setBody("test-message-1") @AT@ 5160 @LENGTH@ 25
------------------------INS StringLiteral@@"test-message-1" @TO@ SimpleName@@MethodName:setBody:["test-message-1"] @AT@ 5168 @LENGTH@ 16
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 5199 @LENGTH@ 62
------------------INS MethodInvocation@@exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @AT@ 5199 @LENGTH@ 61
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @AT@ 5199 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @AT@ 5199 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:[QueueConstants.CREATE_QUEUE, true] @TO@ MethodInvocation@@exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true) @AT@ 5216 @LENGTH@ 44
------------------------INS QualifiedName@@QueueConstants.CREATE_QUEUE @TO@ SimpleName@@MethodName:setHeader:[QueueConstants.CREATE_QUEUE, true] @AT@ 5226 @LENGTH@ 27
---------------------------INS SimpleName@@QueueConstants @TO@ QualifiedName@@QueueConstants.CREATE_QUEUE @AT@ 5226 @LENGTH@ 14
---------------------------INS SimpleName@@CREATE_QUEUE @TO@ QualifiedName@@QueueConstants.CREATE_QUEUE @AT@ 5241 @LENGTH@ 12
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setHeader:[QueueConstants.CREATE_QUEUE, true] @AT@ 5255 @LENGTH@ 4
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setHeader(QueueConstants.QUEUE_NAME,queueName);
  exchange.getIn().setBody("test-message-1");
  exchange.getIn().setHeader(QueueConstants.CREATE_QUEUE,true);
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 5274 @LENGTH@ 53
------------------INS MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 5274 @LENGTH@ 52
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 5274 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 5274 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 5291 @LENGTH@ 35
------------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 5301 @LENGTH@ 13
------------------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 5316 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @TO@ MethodDeclaration@@public, void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 5348 @LENGTH@ 92
------INS MethodInvocation@@assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @AT@ 5348 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @TO@ MethodInvocation@@assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @AT@ 5348 @LENGTH@ 91
------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @AT@ 5361 @LENGTH@ 9
------------INS MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @AT@ 5372 @LENGTH@ 66
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 5372 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 5372 @LENGTH@ 28
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 5398 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getExchanges:[] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 5372 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 5372 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getHeader:["DoNotDelete"] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 5414 @LENGTH@ 24
------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:getHeader:["DoNotDelete"] @AT@ 5424 @LENGTH@ 13


DEL MethodDeclaration@@Function<Value,Object>, MethodName:getOptionalReadingConverter,  @AT@ 2617 @LENGTH@ 30
---DEL ParameterizedType@@Function<Value,Object> @AT@ 2593 @LENGTH@ 23
------DEL SimpleType@@Function @AT@ 2593 @LENGTH@ 8
------DEL SimpleType@@Value @AT@ 2602 @LENGTH@ 5
------DEL SimpleType@@Object @AT@ 2609 @LENGTH@ 6
---DEL SimpleName@@MethodName:getOptionalReadingConverter @AT@ 2617 @LENGTH@ 27


UPD VariableDeclarationStatement@@final URL servletUrl=new URL("https",TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getHttpPort(),"/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)); @TO@ final URL servletUrl=new URL("https",TestSuiteEnvironment.getServerAddress(),HTTPS_PORT,"/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)); @AT@ 4643 @LENGTH@ 193
---UPD VariableDeclarationFragment@@servletUrl=new URL("https",TestSuiteEnvironment.getServerAddress(),TestSuiteEnvironment.getHttpPort(),"/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)) @TO@ servletUrl=new URL("https",TestSuiteEnvironment.getServerAddress(),HTTPS_PORT,"/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)) @AT@ 4653 @LENGTH@ 182
------UPD ClassInstanceCreation@@URL["https", TestSuiteEnvironment.getServerAddress(), TestSuiteEnvironment.getHttpPort(), "/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)] @TO@ URL["https", TestSuiteEnvironment.getServerAddress(), HTTPS_PORT, "/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)] @AT@ 4666 @LENGTH@ 169
---------DEL MethodInvocation@@TestSuiteEnvironment.getHttpPort() @AT@ 4724 @LENGTH@ 34
------------DEL SimpleName@@Name:TestSuiteEnvironment @AT@ 4724 @LENGTH@ 20
------------DEL SimpleName@@MethodName:getHttpPort:[] @AT@ 4745 @LENGTH@ 13
---------INS SimpleName@@HTTPS_PORT @TO@ ClassInstanceCreation@@URL["https", TestSuiteEnvironment.getServerAddress(), TestSuiteEnvironment.getHttpPort(), "/" + NAME + "/"+ SimpleServlet.SERVLET_PATH.substring(1)] @AT@ 4724 @LENGTH@ 10


UPD IfStatement@@if (payload instanceof CreateGroupRequest) {  DeleteGroupResponse result;  try {    result=iamClient.deleteGroup((DeleteGroupRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("Delete Group command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @TO@ if (payload instanceof DeleteGroupResponse) {  DeleteGroupResponse result;  try {    result=iamClient.deleteGroup((DeleteGroupRequest)payload);  } catch (  AwsServiceException ase) {    LOG.trace("Delete Group command returned the error code {}",ase.awsErrorDetails().errorCode());    throw ase;  }  Message message=getMessageForResponse(exchange);  message.setBody(result);} @AT@ 21832 @LENGTH@ 532
---UPD InstanceofExpression@@payload instanceof CreateGroupRequest @TO@ payload instanceof DeleteGroupResponse @AT@ 21836 @LENGTH@ 37
------UPD SimpleType@@CreateGroupRequest @TO@ DeleteGroupResponse @AT@ 21855 @LENGTH@ 18


INS MethodDeclaration@@void, MethodName:shouldNotFailWithEmptyInput,  @TO@ TypeDeclaration@@TemplateSupportTest,  @AT@ 1824 @LENGTH@ 146
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithEmptyInput,  @AT@ 1819 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldNotFailWithEmptyInput @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithEmptyInput,  @AT@ 1824 @LENGTH@ 27
---INS VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(Collections.emptyList()); @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithEmptyInput,  @AT@ 1859 @LENGTH@ 79
------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(Collections.emptyList()); @AT@ 1859 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1859 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1865 @LENGTH@ 1
------INS VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(Collections.emptyList()) @TO@ VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(Collections.emptyList()); @AT@ 1868 @LENGTH@ 69
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(Collections.emptyList()) @AT@ 1868 @LENGTH@ 4
---------INS MethodInvocation@@TemplateSupport.findCommonElementType(Collections.emptyList()) @TO@ VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(Collections.emptyList()) @AT@ 1875 @LENGTH@ 62
------------INS SimpleName@@Name:TemplateSupport @TO@ MethodInvocation@@TemplateSupport.findCommonElementType(Collections.emptyList()) @AT@ 1875 @LENGTH@ 15
------------INS SimpleName@@MethodName:findCommonElementType:[Collections.emptyList()] @TO@ MethodInvocation@@TemplateSupport.findCommonElementType(Collections.emptyList()) @AT@ 1891 @LENGTH@ 46
---------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:findCommonElementType:[Collections.emptyList()] @AT@ 1913 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1913 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1925 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(type).isNull() @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithEmptyInput,  @AT@ 1941 @LENGTH@ 26
------INS MethodInvocation@@assertThat(type).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(type).isNull() @AT@ 1941 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:assertThat:[type] @TO@ MethodInvocation@@assertThat(type).isNull() @AT@ 1941 @LENGTH@ 16
------------INS SimpleName@@type @TO@ MethodInvocation@@MethodName:assertThat:[type] @AT@ 1952 @LENGTH@ 4
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(type).isNull() @AT@ 1958 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "].") @TO@ MethodInvocation:LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}]",StringUtils.arrayToCommaDelimitedString(excludedClasses)) @AT@ 9330 @LENGTH@ 240
---UPD MethodInvocation@@LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "].") @TO@ LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}]",StringUtils.arrayToCommaDelimitedString(excludedClasses)) @AT@ 9330 @LENGTH@ 239
------UPD SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @TO@ MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}]", StringUtils.arrayToCommaDelimitedString(excludedClasses)] @AT@ 9334 @LENGTH@ 235
---------DEL InfixExpression@@"Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]." @AT@ 9340 @LENGTH@ 228
------------DEL InfixExpression@@"Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" @AT@ 9340 @LENGTH@ 132
---------------DEL StringLiteral@@"Setting up package scanning excluded classes as ExcludeRoutes " @AT@ 9340 @LENGTH@ 64
---------------DEL Operator@@+ @AT@ 9404 @LENGTH@ 1
---------------DEL StringLiteral@@"annotation was found. Excluding [" @AT@ 9437 @LENGTH@ 35
------------DEL Operator@@+ @AT@ 9472 @LENGTH@ 1
------------DEL StringLiteral@@"]." @AT@ 9564 @LENGTH@ 4
---------INS StringLiteral@@"Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}]" @TO@ SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @AT@ 9365 @LENGTH@ 100
---------MOV MethodInvocation@@StringUtils.arrayToCommaDelimitedString(excludedClasses) @TO@ SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @AT@ 9475 @LENGTH@ 56


INS MethodDeclaration@@Collection<Endpoint>, MethodName:getReadOnlyValues,  @TO@ TypeDeclaration@@[public]EndpointRegistry, [Map<K,Endpoint>, StaticService] @AT@ 2867 @LENGTH@ 20
---INS ParameterizedType@@Collection<Endpoint> @TO@ MethodDeclaration@@Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2846 @LENGTH@ 20
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2846 @LENGTH@ 10
------INS SimpleType@@Endpoint @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2857 @LENGTH@ 8
---INS SimpleName@@MethodName:getReadOnlyValues @TO@ MethodDeclaration@@Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2867 @LENGTH@ 17


UPD MethodDeclaration@@Object, MethodName:readValue, @Nullable Value source, TypeInformation<?> targetType, @Nullable Function<Value,Object> conversionOverride,  @TO@ Object, MethodName:readValue, @Nullable Value source, TypeInformation<?> targetType, @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride,  @AT@ 3027 @LENGTH@ 125
---UPD SingleVariableDeclaration@@@Nullable Function<Value,Object> conversionOverride @TO@ @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride @AT@ 3096 @LENGTH@ 52
------UPD ParameterizedType@@Function<Value,Object> @TO@ Neo4jPersistentPropertyConverter<?> @AT@ 3106 @LENGTH@ 23
---------INS WildcardType@@? @TO@ ParameterizedType@@Function<Value,Object> @AT@ 3102 @LENGTH@ 1
---------UPD SimpleType@@Function @TO@ Neo4jPersistentPropertyConverter @AT@ 3106 @LENGTH@ 8
---------DEL SimpleType@@Value @AT@ 3115 @LENGTH@ 5
---------DEL SimpleType@@Object @AT@ 3122 @LENGTH@ 6


INS VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @TO@ MethodDeclaration@@public, static, void, MethodName:doneUow, UnitOfWork uow, Exchange exchange,  @AT@ 2485 @LENGTH@ 50
---INS SimpleType@@ExtendedExchange @TO@ VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @AT@ 2485 @LENGTH@ 16
---INS VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @TO@ VariableDeclarationStatement@@ExtendedExchange ee=(ExtendedExchange)exchange; @AT@ 2502 @LENGTH@ 32
------INS SimpleName@@ee @TO@ VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @AT@ 2502 @LENGTH@ 2
------INS CastExpression@@(ExtendedExchange)exchange @TO@ VariableDeclarationFragment@@ee=(ExtendedExchange)exchange @AT@ 2507 @LENGTH@ 27
---------INS SimpleType@@ExtendedExchange @TO@ CastExpression@@(ExtendedExchange)exchange @AT@ 2508 @LENGTH@ 16
---------INS SimpleName@@exchange @TO@ CastExpression@@(ExtendedExchange)exchange @AT@ 2526 @LENGTH@ 8


UPD SynchronizedStatement@@synchronized (lock) {  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }} @TO@ synchronized (lock) {  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }  if (!ServiceHelper.isStarted(delegate)) {    ServiceHelper.startService(delegate);  }} @AT@ 1656 @LENGTH@ 211
---UPD Block@@SyncBody:{  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }} @TO@ SyncBody:{  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }  if (!ServiceHelper.isStarted(delegate)) {    ServiceHelper.startService(delegate);  }} @AT@ 1676 @LENGTH@ 191
------MOV IfStatement@@if (!ServiceHelper.isStarted(delegate)) {  ServiceHelper.startService(delegate);} @TO@ Block@@SyncBody:{  if (delegate == null) {    delegate=AsyncProcessorConverterHelper.convert(getEndpoint().createProducer());  }} @AT@ 1894 @LENGTH@ 109


INS MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @TO@ TypeDeclaration@@BlobProducerIT, Base @AT@ 6578 @LENGTH@ 484
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6573 @LENGTH@ 4
---INS SimpleName@@MethodName:testHeaderPreservation @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6578 @LENGTH@ 22
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6610 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6641 @LENGTH@ 31
------INS MethodInvocation@@result.expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:result.expectedMessageCount(1) @AT@ 6641 @LENGTH@ 30
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.expectedMessageCount(1) @AT@ 6641 @LENGTH@ 6
---------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@result.expectedMessageCount(1) @AT@ 6648 @LENGTH@ 23
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 6669 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:template.send("direct:uploadBlockBlobWithConfigUri",exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6682 @LENGTH@ 236
------INS MethodInvocation@@template.send("direct:uploadBlockBlobWithConfigUri",exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @TO@ ExpressionStatement@@MethodInvocation:template.send("direct:uploadBlockBlobWithConfigUri",exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 6682 @LENGTH@ 235
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send("direct:uploadBlockBlobWithConfigUri",exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 6682 @LENGTH@ 8
---------INS SimpleName@@MethodName:send:["direct:uploadBlockBlobWithConfigUri", exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @TO@ MethodInvocation@@template.send("direct:uploadBlockBlobWithConfigUri",exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
) @AT@ 6691 @LENGTH@ 226
------------INS StringLiteral@@"direct:uploadBlockBlobWithConfigUri" @TO@ SimpleName@@MethodName:send:["direct:uploadBlockBlobWithConfigUri", exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 6696 @LENGTH@ 37
------------INS LambdaExpression@@exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @TO@ SimpleName@@MethodName:send:["direct:uploadBlockBlobWithConfigUri", exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
] @AT@ 6751 @LENGTH@ 165
---------------INS VariableDeclarationFragment@@exchange @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 6751 @LENGTH@ 8
------------------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange @AT@ 6751 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Block Blob") @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 6785 @LENGTH@ 39
------------------INS MethodInvocation@@exchange.getIn().setBody("Block Blob") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Block Blob") @AT@ 6785 @LENGTH@ 38
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("Block Blob") @AT@ 6785 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("Block Blob") @AT@ 6785 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setBody:["Block Blob"] @TO@ MethodInvocation@@exchange.getIn().setBody("Block Blob") @AT@ 6802 @LENGTH@ 21
------------------------INS StringLiteral@@"Block Blob" @TO@ SimpleName@@MethodName:setBody:["Block Blob"] @AT@ 6810 @LENGTH@ 12
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ LambdaExpression@@exchange -> {
  exchange.getIn().setBody("Block Blob");
  exchange.getIn().setHeader("DoNotDelete","keep me");
}
 @AT@ 6845 @LENGTH@ 53
------------------INS MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 6845 @LENGTH@ 52
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 6845 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 6845 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @TO@ MethodInvocation@@exchange.getIn().setHeader("DoNotDelete","keep me") @AT@ 6862 @LENGTH@ 35
------------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 6872 @LENGTH@ 13
------------------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:setHeader:["DoNotDelete", "keep me"] @AT@ 6887 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 6927 @LENGTH@ 92
------INS MethodInvocation@@assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @AT@ 6927 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @TO@ MethodInvocation@@assertEquals("keep me",result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")) @AT@ 6927 @LENGTH@ 91
------------INS StringLiteral@@"keep me" @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @AT@ 6940 @LENGTH@ 9
------------INS MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @TO@ SimpleName@@MethodName:assertEquals:["keep me", result.getExchanges().get(0).getMessage().getHeader("DoNotDelete")] @AT@ 6951 @LENGTH@ 66
---------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 6951 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 6951 @LENGTH@ 28
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 6977 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getExchanges:[] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 6951 @LENGTH@ 21
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 6951 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getHeader:["DoNotDelete"] @TO@ MethodInvocation@@result.getExchanges().get(0).getMessage().getHeader("DoNotDelete") @AT@ 6993 @LENGTH@ 24
------------------INS StringLiteral@@"DoNotDelete" @TO@ SimpleName@@MethodName:getHeader:["DoNotDelete"] @AT@ 7003 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:result.assertIsSatisfied() @TO@ MethodDeclaration@@void, MethodName:testHeaderPreservation, InterruptedException,  @AT@ 7029 @LENGTH@ 27
------INS MethodInvocation@@result.assertIsSatisfied() @TO@ ExpressionStatement@@MethodInvocation:result.assertIsSatisfied() @AT@ 7029 @LENGTH@ 26
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.assertIsSatisfied() @AT@ 7029 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertIsSatisfied:[] @TO@ MethodInvocation@@result.assertIsSatisfied() @AT@ 7036 @LENGTH@ 19


UPD TypeDeclaration@@[@API(status=API.Status.STABLE,since="TBA"), public]FluentSaveOperation,  @TO@ [@API(status=API.Status.STABLE,since="6.1.3"), public]FluentSaveOperation,  @AT@ 1339 @LENGTH@ 1512
---UPD NormalAnnotation@@@API(status=API.Status.STABLE,since="TBA") @TO@ @API(status=API.Status.STABLE,since="6.1.3") @AT@ 1339 @LENGTH@ 47


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("A summary field is required, actual value: " + summary) @TO@ ClassInstanceCreation:new IllegalArgumentException("A summary field is required.") @AT@ 3880 @LENGTH@ 92
---UPD ClassInstanceCreation@@IllegalArgumentException["A summary field is required, actual value: " + summary] @TO@ IllegalArgumentException["A summary field is required."] @AT@ 3886 @LENGTH@ 85
------INS StringLiteral@@"A summary field is required." @TO@ ClassInstanceCreation@@IllegalArgumentException["A summary field is required, actual value: " + summary] @AT@ 3908 @LENGTH@ 30
------DEL InfixExpression@@"A summary field is required, actual value: " + summary @AT@ 3915 @LENGTH@ 55
---------DEL StringLiteral@@"A summary field is required, actual value: " @AT@ 3915 @LENGTH@ 45
---------DEL Operator@@+ @AT@ 3960 @LENGTH@ 1
---------DEL SimpleName@@summary @AT@ 3963 @LENGTH@ 7


UPD LambdaExpression@@p -> {
  PersistentPropertyAccessor<T> propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  Neo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  Optional<Map<String,Object>> optionalResult=runnableQuery.fetch().one();
  return new DynamicLabels(optionalResult.map(r -> (Collection<String>)r.get(Constants.NAME_OF_LABELS)).orElseGet(Collections::emptyList),(Collection<String>)propertyAccessor.getProperty(p));
}
 @TO@ p -> {
  PersistentPropertyAccessor<T> propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty();
  Neo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  Optional<Map<String,Object>> optionalResult=runnableQuery.fetch().one();
  return new DynamicLabels(optionalResult.map(r -> (Collection<String>)r.get(Constants.NAME_OF_LABELS)).orElseGet(Collections::emptyList),(Collection<String>)propertyAccessor.getProperty(p));
}
 @AT@ 15465 @LENGTH@ 999
---UPD VariableDeclarationStatement@@Neo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM); @TO@ Neo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM); @AT@ 15581 @LENGTH@ 373
------UPD VariableDeclarationFragment@@runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @TO@ runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @AT@ 15621 @LENGTH@ 332
---------UPD MethodInvocation@@neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @TO@ neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM) @AT@ 15637 @LENGTH@ 316
------------UPD MethodInvocation@@MethodName:bind:[propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())] @TO@ MethodName:bind:[convertIdValues(idProperty,propertyAccessor.getProperty(idProperty))] @AT@ 15637 @LENGTH@ 198
---------------UPD MethodInvocation@@propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty()) @TO@ convertIdValues(idProperty,propertyAccessor.getProperty(idProperty)) @AT@ 15766 @LENGTH@ 68
------------------DEL SimpleName@@Name:propertyAccessor @AT@ 15766 @LENGTH@ 16
------------------UPD SimpleName@@MethodName:getProperty:[entityMetaData.getRequiredIdProperty()] @TO@ MethodName:convertIdValues:[idProperty, propertyAccessor.getProperty(idProperty)] @AT@ 15783 @LENGTH@ 51
---------------------UPD MethodInvocation@@entityMetaData.getRequiredIdProperty() @TO@ propertyAccessor.getProperty(idProperty) @AT@ 15795 @LENGTH@ 38
------------------------UPD SimpleName@@Name:entityMetaData @TO@ Name:propertyAccessor @AT@ 15795 @LENGTH@ 14
------------------------UPD SimpleName@@MethodName:getRequiredIdProperty:[] @TO@ MethodName:getProperty:[idProperty] @AT@ 15810 @LENGTH@ 23
---------------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:getRequiredIdProperty:[] @AT@ 16009 @LENGTH@ 10
---------------------INS SimpleName@@idProperty @TO@ SimpleName@@MethodName:getProperty:[entityMetaData.getRequiredIdProperty()] @AT@ 15968 @LENGTH@ 10
---INS VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @TO@ LambdaExpression@@p -> {
  PersistentPropertyAccessor<T> propertyAccessor=entityMetaData.getPropertyAccessor(entityToBeSaved);
  Neo4jClient.RunnableSpecTightToDatabase runnableQuery=neo4jClient.query(() -> renderer.render(cypherGenerator.createStatementReturningDynamicLabels(entityMetaData))).bind(propertyAccessor.getProperty(entityMetaData.getRequiredIdProperty())).to(Constants.NAME_OF_ID).bind(entityMetaData.getStaticLabels()).to(Constants.NAME_OF_STATIC_LABELS_PARAM);
  if (entityMetaData.hasVersionProperty()) {
    runnableQuery=runnableQuery.bind((Long)propertyAccessor.getProperty(entityMetaData.getRequiredVersionProperty())).to(Constants.NAME_OF_VERSION_PARAM);
  }
  Optional<Map<String,Object>> optionalResult=runnableQuery.fetch().one();
  return new DynamicLabels(optionalResult.map(r -> (Collection<String>)r.get(Constants.NAME_OF_LABELS)).orElseGet(Collections::emptyList),(Collection<String>)propertyAccessor.getProperty(p));
}
 @AT@ 15687 @LENGTH@ 76
------INS SimpleType@@Neo4jPersistentProperty @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @AT@ 15687 @LENGTH@ 23
------INS VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @TO@ VariableDeclarationStatement@@Neo4jPersistentProperty idProperty=entityMetaData.getRequiredIdProperty(); @AT@ 15711 @LENGTH@ 51
---------INS SimpleName@@idProperty @TO@ VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @AT@ 15711 @LENGTH@ 10
---------INS MethodInvocation@@entityMetaData.getRequiredIdProperty() @TO@ VariableDeclarationFragment@@idProperty=entityMetaData.getRequiredIdProperty() @AT@ 15724 @LENGTH@ 38
------------INS SimpleName@@Name:entityMetaData @TO@ MethodInvocation@@entityMetaData.getRequiredIdProperty() @AT@ 15724 @LENGTH@ 14
------------INS SimpleName@@MethodName:getRequiredIdProperty:[] @TO@ MethodInvocation@@entityMetaData.getRequiredIdProperty() @AT@ 15739 @LENGTH@ 23


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri, Exception,  @AT@ 5520 @LENGTH@ 657
---DEL PrimitiveType@@void @AT@ 5515 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurationsWithValidUri @AT@ 5520 @LENGTH@ 53
---DEL SimpleType@@Exception @AT@ 5583 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining="dummy"; @AT@ 5603 @LENGTH@ 33
------DEL Modifier@@final @AT@ 5603 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5609 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="dummy" @AT@ 5616 @LENGTH@ 19
---------DEL SimpleName@@remaining @AT@ 5616 @LENGTH@ 9
---------DEL StringLiteral@@"dummy" @AT@ 5628 @LENGTH@ 7
---DEL VariableDeclarationStatement@@final String uri="debezium:dummy"; @AT@ 5645 @LENGTH@ 36
------DEL Modifier@@final @AT@ 5645 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5651 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:dummy" @AT@ 5658 @LENGTH@ 22
---------DEL SimpleName@@uri @AT@ 5658 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:dummy" @AT@ 5664 @LENGTH@ 16
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5690 @LENGTH@ 481
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext()) @AT@ 5695 @LENGTH@ 100
---------DEL Modifier@@final @AT@ 5695 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5701 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext()) @AT@ 5719 @LENGTH@ 76
------------DEL SimpleName@@debeziumComponent @AT@ 5719 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumPostgresComponent[new DefaultCamelContext()] @AT@ 5739 @LENGTH@ 56
---------------DEL New@@new @AT@ 5739 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumPostgresComponent @AT@ 5743 @LENGTH@ 25
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5769 @LENGTH@ 25
------------------DEL New@@new @AT@ 5769 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5773 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5811 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5811 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5811 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5829 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5885 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5885 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5885 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5903 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5920 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5940 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5940 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5946 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5946 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5950 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5958 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5966 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5966 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5979 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5979 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5991 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6015 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 6015 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 6015 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 6028 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 6060 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6084 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 6084 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 6084 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 6102 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 6117 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 6122 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 6133 @LENGTH@ 10


UPD MethodDeclaration@@protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction, UnaryOperator<Integer> limitModifier,  @TO@ protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction, UnaryOperator<Integer> limitModifier,  @AT@ 2564 @LENGTH@ 831
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 2777 @LENGTH@ 64
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2787 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 2823 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2823 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2832 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2787 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2798 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2810 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2823 @LENGTH@ 1


UPD Block@@ElseBody:{  filename=Paths.get(filepath).getFileName().toString();} @TO@ ElseBody:{  Path filenamePath=Paths.get(filepath).getFileName();  if (filenamePath != null) {    filename=filenamePath.toString();  } else {    return;  }} @AT@ 2683 @LENGTH@ 108
---UPD ExpressionStatement@@Assignment:filename=Paths.get(filepath).getFileName().toString() @TO@ Assignment:filename=filenamePath.toString() @AT@ 2697 @LENGTH@ 56
---INS VariableDeclarationStatement@@Path filenamePath=Paths.get(filepath).getFileName(); @TO@ Block@@ElseBody:{  filename=Paths.get(filepath).getFileName().toString();} @AT@ 2697 @LENGTH@ 54
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path filenamePath=Paths.get(filepath).getFileName(); @AT@ 2697 @LENGTH@ 4
------INS VariableDeclarationFragment@@filenamePath=Paths.get(filepath).getFileName() @TO@ VariableDeclarationStatement@@Path filenamePath=Paths.get(filepath).getFileName(); @AT@ 2702 @LENGTH@ 48
---------INS SimpleName@@filenamePath @TO@ VariableDeclarationFragment@@filenamePath=Paths.get(filepath).getFileName() @AT@ 2702 @LENGTH@ 12
---------INS MethodInvocation@@Paths.get(filepath).getFileName() @TO@ VariableDeclarationFragment@@filenamePath=Paths.get(filepath).getFileName() @AT@ 2717 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:get:[filepath] @TO@ MethodInvocation@@Paths.get(filepath).getFileName() @AT@ 2717 @LENGTH@ 19
---------------INS SimpleName@@filepath @TO@ MethodInvocation@@MethodName:get:[filepath] @AT@ 2727 @LENGTH@ 8
------------INS SimpleName@@Name:Paths @TO@ MethodInvocation@@Paths.get(filepath).getFileName() @AT@ 2717 @LENGTH@ 5
------------INS SimpleName@@MethodName:getFileName:[] @TO@ MethodInvocation@@Paths.get(filepath).getFileName() @AT@ 2737 @LENGTH@ 13
---INS IfStatement@@if (filenamePath != null) {  filename=filenamePath.toString();} else {  return;} @TO@ Block@@ElseBody:{  filename=Paths.get(filepath).getFileName().toString();} @AT@ 2764 @LENGTH@ 206
------INS InfixExpression@@filenamePath != null @TO@ IfStatement@@if (filenamePath != null) {  filename=filenamePath.toString();} else {  return;} @AT@ 2768 @LENGTH@ 20
---------INS SimpleName@@filenamePath @TO@ InfixExpression@@filenamePath != null @AT@ 2768 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@filenamePath != null @AT@ 2780 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@filenamePath != null @AT@ 2784 @LENGTH@ 4
------INS Block@@ThenBody:{  filename=filenamePath.toString();} @TO@ IfStatement@@if (filenamePath != null) {  filename=filenamePath.toString();} else {  return;} @AT@ 2790 @LENGTH@ 95
---------MOV ExpressionStatement@@Assignment:filename=Paths.get(filepath).getFileName().toString() @TO@ Block@@ThenBody:{  filename=filenamePath.toString();} @AT@ 2697 @LENGTH@ 56
------------UPD Assignment@@filename=Paths.get(filepath).getFileName().toString() @TO@ filename=filenamePath.toString() @AT@ 2697 @LENGTH@ 55
---------------UPD MethodInvocation@@Paths.get(filepath).getFileName().toString() @TO@ filenamePath.toString() @AT@ 2708 @LENGTH@ 44
------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 2708 @LENGTH@ 33
------------------DEL MethodInvocation@@MethodName:get:[filepath] @AT@ 2708 @LENGTH@ 19
---------------------DEL SimpleName@@filepath @AT@ 2718 @LENGTH@ 8
------------------UPD SimpleName@@Name:Paths @TO@ Name:filenamePath @AT@ 2708 @LENGTH@ 5
------INS Block@@ElseBody:{  return;} @TO@ IfStatement@@if (filenamePath != null) {  filename=filenamePath.toString();} else {  return;} @AT@ 2891 @LENGTH@ 79
---------INS ReturnStatement@@ @TO@ Block@@ElseBody:{  return;} @AT@ 2949 @LENGTH@ 7


DEL ExpressionStatement@@Assignment:this.configuration=configuration @AT@ 2752 @LENGTH@ 35
---DEL Assignment@@this.configuration=configuration @AT@ 2752 @LENGTH@ 34
------DEL FieldAccess@@this.configuration @AT@ 2752 @LENGTH@ 18
---------DEL ThisExpression@@this @AT@ 2752 @LENGTH@ 4
---------DEL SimpleName@@configuration @AT@ 2757 @LENGTH@ 13
------DEL Operator@@= @AT@ 2770 @LENGTH@ 1
------DEL SimpleName@@configuration @AT@ 2773 @LENGTH@ 13


DEL MethodDeclaration@@private, static, boolean, MethodName:isDelim, int c,  @AT@ 17315 @LENGTH@ 80
---DEL Modifier@@private @AT@ 17315 @LENGTH@ 7
---DEL Modifier@@static @AT@ 17323 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 17330 @LENGTH@ 7
---DEL SimpleName@@MethodName:isDelim @AT@ 17338 @LENGTH@ 7
---DEL SingleVariableDeclaration@@int c @AT@ 17346 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 17346 @LENGTH@ 3
------DEL SimpleName@@c @AT@ 17350 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:isDelim(c,DELIMS) @AT@ 17363 @LENGTH@ 26
------DEL MethodInvocation@@isDelim(c,DELIMS) @AT@ 17370 @LENGTH@ 18
---------DEL SimpleName@@MethodName:isDelim:[c, DELIMS] @AT@ 17370 @LENGTH@ 18
------------DEL SimpleName@@c @AT@ 17378 @LENGTH@ 1
------------DEL SimpleName@@DELIMS @AT@ 17381 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(message).matches("Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons v2\\.\\d+\\.\\d+.(RELEASE|(?:DATACMNS-\\d+-)?SNAPSHOT) and Neo4j Driver v4\\.\\d+\\.\\d+(?:-.*)\\.") @TO@ MethodInvocation:assertThat(message).matches("Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons .+ and Neo4j Driver .+\\.") @AT@ 1014 @LENGTH@ 239
---UPD MethodInvocation@@assertThat(message).matches("Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons v2\\.\\d+\\.\\d+.(RELEASE|(?:DATACMNS-\\d+-)?SNAPSHOT) and Neo4j Driver v4\\.\\d+\\.\\d+(?:-.*)\\.") @TO@ assertThat(message).matches("Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons .+ and Neo4j Driver .+\\.") @AT@ 1014 @LENGTH@ 238
------UPD SimpleName@@MethodName:matches:["Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons v2\\.\\d+\\.\\d+.(RELEASE|(?:DATACMNS-\\d+-)?SNAPSHOT) and Neo4j Driver v4\\.\\d+\\.\\d+(?:-.*)\\."] @TO@ MethodName:matches:["Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons .+ and Neo4j Driver .+\\."] @AT@ 1034 @LENGTH@ 218
---------UPD StringLiteral@@"Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons v2\\.\\d+\\.\\d+.(RELEASE|(?:DATACMNS-\\d+-)?SNAPSHOT) and Neo4j Driver v4\\.\\d+\\.\\d+(?:-.*)\\." @TO@ "Bootstrapping imperative Neo4j repositories based on an unknown version of SDN with Spring Data Commons .+ and Neo4j Driver .+\\." @AT@ 1047 @LENGTH@ 204


UPD TypeDeclaration@@[final]PartDataSource, [DataSource] @TO@ [static, final]PartDataSource, [DataSource] @AT@ 5717 @LENGTH@ 633
---INS Modifier@@static @TO@ TypeDeclaration@@[final]PartDataSource, [DataSource] @AT@ 5717 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @TO@ MethodInvocation:kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2861 @LENGTH@ 64
---UPD MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @TO@ kafkaAdminClient.deleteTopics(Arrays.asList(TOPIC,"TEST_IDEMPOTENT")).all() @AT@ 2861 @LENGTH@ 63
------DEL SimpleName@@MethodName:deleteTopics:[Collections.singletonList(TOPIC)] @AT@ 2878 @LENGTH@ 46
---------DEL MethodInvocation@@Collections.singletonList(TOPIC) @AT@ 2891 @LENGTH@ 32
------INS MethodInvocation@@MethodName:deleteTopics:[Arrays.asList(TOPIC,"TEST_IDEMPOTENT")] @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @AT@ 2908 @LENGTH@ 70
---------INS MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @TO@ MethodInvocation@@MethodName:deleteTopics:[Arrays.asList(TOPIC,"TEST_IDEMPOTENT")] @AT@ 2938 @LENGTH@ 39
------------MOV SimpleName@@Name:Collections @TO@ MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @AT@ 2891 @LENGTH@ 11
------------MOV SimpleName@@MethodName:singletonList:[TOPIC] @TO@ MethodInvocation@@Arrays.asList(TOPIC,"TEST_IDEMPOTENT") @AT@ 2903 @LENGTH@ 20
---------------INS StringLiteral@@"TEST_IDEMPOTENT" @TO@ SimpleName@@MethodName:singletonList:[TOPIC] @AT@ 2959 @LENGTH@ 17
------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@kafkaAdminClient.deleteTopics(Collections.singletonList(TOPIC)) @AT@ 2979 @LENGTH@ 5


DEL MethodDeclaration@@private, static, void, MethodName:parseEndDocument, final XMLStreamReader reader, XMLStreamException,  @AT@ 42319 @LENGTH@ 843
---DEL Modifier@@private @AT@ 42319 @LENGTH@ 7
---DEL Modifier@@static @AT@ 42327 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 42334 @LENGTH@ 4
---DEL SimpleName@@MethodName:parseEndDocument @AT@ 42339 @LENGTH@ 16
---DEL SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 42356 @LENGTH@ 28
------DEL Modifier@@final @AT@ 42356 @LENGTH@ 5
------DEL SimpleType@@XMLStreamReader @AT@ 42362 @LENGTH@ 15
------DEL SimpleName@@reader @AT@ 42378 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 42393 @LENGTH@ 18
---DEL WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 42422 @LENGTH@ 718
------DEL MethodInvocation@@reader.hasNext() @AT@ 42429 @LENGTH@ 16
---------DEL SimpleName@@Name:reader @AT@ 42429 @LENGTH@ 6
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 42436 @LENGTH@ 9
------DEL Block@@WhileBody:{switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 42447 @LENGTH@ 693
---------DEL SwitchStatement@@switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{    return;  }case XMLStreamConstants.CHARACTERS:{  if (!reader.isWhiteSpace()) {    throw unexpectedContent(reader);  }  break;}case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{break;}default :{throw unexpectedContent(reader);}} @AT@ 42461 @LENGTH@ 669
------------DEL MethodInvocation@@reader.next() @AT@ 42469 @LENGTH@ 13
---------------DEL SimpleName@@Name:reader @AT@ 42469 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:next:[] @AT@ 42476 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.END_DOCUMENT: @AT@ 42502 @LENGTH@ 37
---------------DEL QualifiedName@@XMLStreamConstants.END_DOCUMENT @AT@ 42507 @LENGTH@ 31
------------------DEL SimpleName@@XMLStreamConstants @AT@ 42507 @LENGTH@ 18
------------------DEL SimpleName@@END_DOCUMENT @AT@ 42526 @LENGTH@ 12
------------DEL ReturnStatement@@ @AT@ 42562 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.CHARACTERS: @AT@ 42604 @LENGTH@ 35
---------------DEL QualifiedName@@XMLStreamConstants.CHARACTERS @AT@ 42609 @LENGTH@ 29
------------------DEL SimpleName@@XMLStreamConstants @AT@ 42609 @LENGTH@ 18
------------------DEL SimpleName@@CHARACTERS @AT@ 42628 @LENGTH@ 10
------------DEL IfStatement@@if (!reader.isWhiteSpace()) {  throw unexpectedContent(reader);} @AT@ 42662 @LENGTH@ 108
---------------DEL PrefixExpression@@!reader.isWhiteSpace() @AT@ 42666 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 42666 @LENGTH@ 1
------------------DEL MethodInvocation@@reader.isWhiteSpace() @AT@ 42667 @LENGTH@ 21
---------------------DEL SimpleName@@Name:reader @AT@ 42667 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isWhiteSpace:[] @AT@ 42674 @LENGTH@ 14
---------------DEL Block@@ThenBody:{  throw unexpectedContent(reader);} @AT@ 42690 @LENGTH@ 80
------------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 42716 @LENGTH@ 32
---------------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 42722 @LENGTH@ 25
------------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 42722 @LENGTH@ 25
---------------------------DEL SimpleName@@reader @AT@ 42740 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 42821 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.COMMENT: @AT@ 42862 @LENGTH@ 32
---------------DEL QualifiedName@@XMLStreamConstants.COMMENT @AT@ 42867 @LENGTH@ 26
------------------DEL SimpleName@@XMLStreamConstants @AT@ 42867 @LENGTH@ 18
------------------DEL SimpleName@@COMMENT @AT@ 42886 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.SPACE: @AT@ 42911 @LENGTH@ 30
---------------DEL QualifiedName@@XMLStreamConstants.SPACE @AT@ 42916 @LENGTH@ 24
------------------DEL SimpleName@@XMLStreamConstants @AT@ 42916 @LENGTH@ 18
------------------DEL SimpleName@@SPACE @AT@ 42935 @LENGTH@ 5
------------DEL BreakStatement@@ @AT@ 42994 @LENGTH@ 6
------------DEL SwitchCase@@default @AT@ 43035 @LENGTH@ 8
------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 43066 @LENGTH@ 32
---------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 43072 @LENGTH@ 25
------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 43072 @LENGTH@ 25
---------------------DEL SimpleName@@reader @AT@ 43090 @LENGTH@ 6
---DEL ReturnStatement@@ @AT@ 43149 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:Assert.notNull(domainClass,"Could not determine common domain class to save.") @TO@ MethodDeclaration@@private, Flux<T>, T, MethodName:saveAllImpl, Iterable<T> instances, @Nullable List<PropertyDescriptor> includedProperties,  @AT@ 18743 @LENGTH@ 80
---INS MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 18743 @LENGTH@ 79
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 18743 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @TO@ MethodInvocation@@Assert.notNull(domainClass,"Could not determine common domain class to save.") @AT@ 18750 @LENGTH@ 72
---------INS SimpleName@@domainClass @TO@ SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @AT@ 18758 @LENGTH@ 11
---------INS StringLiteral@@"Could not determine common domain class to save." @TO@ SimpleName@@MethodName:notNull:[domainClass, "Could not determine common domain class to save."] @AT@ 18771 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:LOG.info("The task is complete after iterations and the code is ready to continue") @TO@ MethodInvocation:LOG.debug("The task has finished the execution and it is ready to continue") @AT@ 5810 @LENGTH@ 84
---UPD MethodInvocation@@LOG.info("The task is complete after iterations and the code is ready to continue") @TO@ LOG.debug("The task has finished the execution and it is ready to continue") @AT@ 5810 @LENGTH@ 83
------UPD SimpleName@@MethodName:info:["The task is complete after iterations and the code is ready to continue"] @TO@ MethodName:debug:["The task has finished the execution and it is ready to continue"] @AT@ 5814 @LENGTH@ 79
---------UPD StringLiteral@@"The task is complete after iterations and the code is ready to continue" @TO@ "The task has finished the execution and it is ready to continue" @AT@ 5819 @LENGTH@ 73


UPD TypeDeclaration@@[private]DeleteTarFileOnCompletion, [Synchronization] @TO@ [private, static]DeleteTarFileOnCompletion, [Synchronization] @AT@ 11896 @LENGTH@ 577
---INS Modifier@@static @TO@ TypeDeclaration@@[private]DeleteTarFileOnCompletion, [Synchronization] @AT@ 11904 @LENGTH@ 6


UPD MethodDeclaration@@private, TypeInformation<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @TO@ private, Class<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @AT@ 7247 @LENGTH@ 445
---UPD ParameterizedType@@TypeInformation<?> @TO@ Class<?> @AT@ 7255 @LENGTH@ 18
------UPD SimpleType@@TypeInformation @TO@ Class @AT@ 7255 @LENGTH@ 15
---DEL ReturnStatement@@MethodInvocation:this.mappingContext.addPersistentEntity(ClassTypeInformation.from(relationshipPropertiesType)).map(entity -> entity.getPersistentProperty(TargetNode.class)).map(PersistentProperty::getTypeInformation).orElseThrow(() -> new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType)) @AT@ 7351 @LENGTH@ 338
------DEL MethodInvocation@@this.mappingContext.addPersistentEntity(ClassTypeInformation.from(relationshipPropertiesType)).map(entity -> entity.getPersistentProperty(TargetNode.class)).map(PersistentProperty::getTypeInformation).orElseThrow(() -> new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType)) @AT@ 7358 @LENGTH@ 330
---------DEL MethodInvocation@@MethodName:map:[entity -> entity.getPersistentProperty(TargetNode.class)] @AT@ 7358 @LENGTH@ 161
------------DEL LambdaExpression@@entity -> entity.getPersistentProperty(TargetNode.class) @AT@ 7462 @LENGTH@ 56
---------DEL MethodInvocation@@MethodName:addPersistentEntity:[ClassTypeInformation.from(relationshipPropertiesType)] @AT@ 7358 @LENGTH@ 94
---------DEL FieldAccess@@this.mappingContext @AT@ 7358 @LENGTH@ 19
------------DEL ThisExpression@@this @AT@ 7358 @LENGTH@ 4
------------DEL SimpleName@@mappingContext @AT@ 7363 @LENGTH@ 14
---INS VariableDeclarationStatement@@Field targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)); @TO@ MethodDeclaration@@private, TypeInformation<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @AT@ 7458 @LENGTH@ 136
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)); @AT@ 7458 @LENGTH@ 5
------INS VariableDeclarationFragment@@targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @TO@ VariableDeclarationStatement@@Field targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)); @AT@ 7464 @LENGTH@ 129
---------INS SimpleName@@targetNodeField @TO@ VariableDeclarationFragment@@targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @AT@ 7464 @LENGTH@ 15
---------INS MethodInvocation@@ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @TO@ VariableDeclarationFragment@@targetNodeField=ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @AT@ 7482 @LENGTH@ 111
------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @AT@ 7482 @LENGTH@ 15
------------INS SimpleName@@MethodName:findField:[relationshipPropertiesType, field -> field.isAnnotationPresent(TargetNode.class)] @TO@ MethodInvocation@@ReflectionUtils.findField(relationshipPropertiesType,field -> field.isAnnotationPresent(TargetNode.class)) @AT@ 7498 @LENGTH@ 95
---------------INS SimpleName@@relationshipPropertiesType @TO@ SimpleName@@MethodName:findField:[relationshipPropertiesType, field -> field.isAnnotationPresent(TargetNode.class)] @AT@ 7508 @LENGTH@ 26
---------------INS LambdaExpression@@field -> field.isAnnotationPresent(TargetNode.class) @TO@ SimpleName@@MethodName:findField:[relationshipPropertiesType, field -> field.isAnnotationPresent(TargetNode.class)] @AT@ 7540 @LENGTH@ 52
------------------MOV VariableDeclarationFragment@@entity @TO@ LambdaExpression@@field -> field.isAnnotationPresent(TargetNode.class) @AT@ 7462 @LENGTH@ 6
---------------------UPD SimpleName@@entity @TO@ field @AT@ 7462 @LENGTH@ 6
------------------MOV MethodInvocation@@entity.getPersistentProperty(TargetNode.class) @TO@ LambdaExpression@@field -> field.isAnnotationPresent(TargetNode.class) @AT@ 7472 @LENGTH@ 46
---------------------UPD SimpleName@@Name:entity @TO@ Name:field @AT@ 7472 @LENGTH@ 6
---------------------UPD SimpleName@@MethodName:getPersistentProperty:[TargetNode.class] @TO@ MethodName:isAnnotationPresent:[TargetNode.class] @AT@ 7479 @LENGTH@ 39
---INS IfStatement@@if (targetNodeField == null) {  throw new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType);} @TO@ MethodDeclaration@@private, TypeInformation<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @AT@ 7598 @LENGTH@ 133
------INS InfixExpression@@targetNodeField == null @TO@ IfStatement@@if (targetNodeField == null) {  throw new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType);} @AT@ 7602 @LENGTH@ 23
---------INS SimpleName@@targetNodeField @TO@ InfixExpression@@targetNodeField == null @AT@ 7602 @LENGTH@ 15
---------INS Operator@@== @TO@ InfixExpression@@targetNodeField == null @AT@ 7617 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@targetNodeField == null @AT@ 7621 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType);} @TO@ IfStatement@@if (targetNodeField == null) {  throw new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType);} @AT@ 7627 @LENGTH@ 104
---------INS ThrowStatement@@ClassInstanceCreation:new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType) @TO@ Block@@ThenBody:{  throw new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType);} @AT@ 7632 @LENGTH@ 95
------------MOV ClassInstanceCreation@@MappingException["Missing @TargetNode declaration in " + relationshipPropertiesType] @TO@ ThrowStatement@@ClassInstanceCreation:new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType) @AT@ 7599 @LENGTH@ 88
---INS VariableDeclarationStatement@@ClassTypeInformation<?> relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType); @TO@ MethodDeclaration@@private, TypeInformation<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @AT@ 7734 @LENGTH@ 118
------INS ParameterizedType@@ClassTypeInformation<?> @TO@ VariableDeclarationStatement@@ClassTypeInformation<?> relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType); @AT@ 7734 @LENGTH@ 23
---------INS SimpleType@@ClassTypeInformation @TO@ ParameterizedType@@ClassTypeInformation<?> @AT@ 7734 @LENGTH@ 20
---------INS WildcardType@@? @TO@ ParameterizedType@@ClassTypeInformation<?> @AT@ 7755 @LENGTH@ 1
------INS VariableDeclarationFragment@@relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType) @TO@ VariableDeclarationStatement@@ClassTypeInformation<?> relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType); @AT@ 7758 @LENGTH@ 93
---------MOV MethodInvocation@@ClassTypeInformation.from(relationshipPropertiesType) @TO@ VariableDeclarationFragment@@relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType) @AT@ 7398 @LENGTH@ 53
---------INS SimpleName@@relationshipPropertiesTypeInformation @TO@ VariableDeclarationFragment@@relationshipPropertiesTypeInformation=ClassTypeInformation.from(relationshipPropertiesType) @AT@ 7758 @LENGTH@ 37
---INS ReturnStatement@@MethodInvocation:relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @TO@ MethodDeclaration@@private, TypeInformation<?>, MethodName:getRelationshipPropertiesTargetType, Class<?> relationshipPropertiesType,  @AT@ 7855 @LENGTH@ 94
------INS MethodInvocation@@relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @TO@ ReturnStatement@@MethodInvocation:relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @AT@ 7862 @LENGTH@ 86
---------MOV MethodInvocation@@MethodName:map:[PersistentProperty::getTypeInformation] @TO@ MethodInvocation@@relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @AT@ 7358 @LENGTH@ 210
------------INS MethodInvocation@@targetNodeField.getName() @TO@ MethodInvocation@@MethodName:map:[PersistentProperty::getTypeInformation] @AT@ 7912 @LENGTH@ 25
---------------INS SimpleName@@Name:targetNodeField @TO@ MethodInvocation@@targetNodeField.getName() @AT@ 7912 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@targetNodeField.getName() @AT@ 7928 @LENGTH@ 9
---------MOV SimpleName@@MethodName:orElseThrow:[() -> new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType)] @TO@ MethodInvocation@@relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @AT@ 7574 @LENGTH@ 114
------------DEL LambdaExpression@@() -> new MappingException("Missing @TargetNode declaration in " + relationshipPropertiesType) @AT@ 7593 @LENGTH@ 94
---------INS SimpleName@@Name:relationshipPropertiesTypeInformation @TO@ MethodInvocation@@relationshipPropertiesTypeInformation.getProperty(targetNodeField.getName()).getType() @AT@ 7862 @LENGTH@ 37


DEL MethodDeclaration@@private, static, void, MethodName:addResourceRoot, final ModuleSpec.Builder specBuilder, String name, JarFile jarFile,  @AT@ 12781 @LENGTH@ 265
---DEL Modifier@@private @AT@ 12781 @LENGTH@ 7
---DEL Modifier@@static @AT@ 12789 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 12796 @LENGTH@ 4
---DEL SimpleName@@MethodName:addResourceRoot @AT@ 12801 @LENGTH@ 15
---DEL SingleVariableDeclaration@@final ModuleSpec.Builder specBuilder @AT@ 12817 @LENGTH@ 36
------DEL Modifier@@final @AT@ 12817 @LENGTH@ 5
------DEL SimpleType@@ModuleSpec.Builder @AT@ 12823 @LENGTH@ 18
------DEL SimpleName@@specBuilder @AT@ 12842 @LENGTH@ 11
---DEL SingleVariableDeclaration@@String name @AT@ 12855 @LENGTH@ 11
------DEL SimpleType@@String @AT@ 12855 @LENGTH@ 6
------DEL SimpleName@@name @AT@ 12862 @LENGTH@ 4
---DEL SingleVariableDeclaration@@JarFile jarFile @AT@ 12868 @LENGTH@ 15
------DEL SimpleType@@JarFile @AT@ 12868 @LENGTH@ 7
------DEL SimpleName@@jarFile @AT@ 12876 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:specBuilder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(name,jarFile))) @AT@ 12895 @LENGTH@ 145
------DEL MethodInvocation@@specBuilder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(name,jarFile))) @AT@ 12895 @LENGTH@ 144
---------DEL SimpleName@@Name:specBuilder @AT@ 12895 @LENGTH@ 11
---------DEL SimpleName@@MethodName:addResourceRoot:[ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(name,jarFile))] @AT@ 12907 @LENGTH@ 132
------------DEL MethodInvocation@@ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(name,jarFile)) @AT@ 12923 @LENGTH@ 115
---------------DEL SimpleName@@Name:ResourceLoaderSpec @AT@ 12923 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:createResourceLoaderSpec:[ResourceLoaders.createJarResourceLoader(name,jarFile)] @AT@ 12942 @LENGTH@ 96
------------------DEL MethodInvocation@@ResourceLoaders.createJarResourceLoader(name,jarFile) @AT@ 12967 @LENGTH@ 70
---------------------DEL SimpleName@@Name:ResourceLoaders @AT@ 12967 @LENGTH@ 15
---------------------DEL SimpleName@@MethodName:createJarResourceLoader:[name, jarFile] @AT@ 12983 @LENGTH@ 54
------------------------DEL SimpleName@@name @AT@ 13007 @LENGTH@ 4
------------------------DEL SimpleName@@jarFile @AT@ 13029 @LENGTH@ 7


UPD MethodDeclaration@@private, void, MethodName:readFully, final InputStream in, final byte[] data, IOException, Pack200Exception,  @TO@ private, void, MethodName:readFully, final InputStream in, final byte[] data, IOException,  @AT@ 12199 @LENGTH@ 541
---DEL SimpleType@@Pack200Exception @AT@ 12283 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @TO@ TypeDeclaration@@[public]IOUtilsTest,  @AT@ 6353 @LENGTH@ 797
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6353 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6360 @LENGTH@ 4
---INS SimpleName@@MethodName:readRangeMoreThanCopyBufferSize @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6365 @LENGTH@ 31
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6406 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Field COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE"); @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6426 @LENGTH@ 76
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Field COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE"); @AT@ 6426 @LENGTH@ 5
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@final Field COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE"); @AT@ 6432 @LENGTH@ 5
------INS VariableDeclarationFragment@@COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @TO@ VariableDeclarationStatement@@final Field COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE"); @AT@ 6438 @LENGTH@ 63
---------INS SimpleName@@COPY_BUF_SIZE @TO@ VariableDeclarationFragment@@COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @AT@ 6438 @LENGTH@ 13
---------INS MethodInvocation@@IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @TO@ VariableDeclarationFragment@@COPY_BUF_SIZE=IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @AT@ 6454 @LENGTH@ 47
------------INS TypeLiteral@@IOUtils.class @TO@ MethodInvocation@@IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @AT@ 6454 @LENGTH@ 13
------------INS SimpleName@@MethodName:getDeclaredField:["COPY_BUF_SIZE"] @TO@ MethodInvocation@@IOUtils.class.getDeclaredField("COPY_BUF_SIZE") @AT@ 6468 @LENGTH@ 33
---------------INS StringLiteral@@"COPY_BUF_SIZE" @TO@ SimpleName@@MethodName:getDeclaredField:["COPY_BUF_SIZE"] @AT@ 6485 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:COPY_BUF_SIZE.setAccessible(true) @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6511 @LENGTH@ 34
------INS MethodInvocation@@COPY_BUF_SIZE.setAccessible(true) @TO@ ExpressionStatement@@MethodInvocation:COPY_BUF_SIZE.setAccessible(true) @AT@ 6511 @LENGTH@ 33
---------INS SimpleName@@Name:COPY_BUF_SIZE @TO@ MethodInvocation@@COPY_BUF_SIZE.setAccessible(true) @AT@ 6511 @LENGTH@ 13
---------INS SimpleName@@MethodName:setAccessible:[true] @TO@ MethodInvocation@@COPY_BUF_SIZE.setAccessible(true) @AT@ 6525 @LENGTH@ 19
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAccessible:[true] @AT@ 6539 @LENGTH@ 4
---INS VariableDeclarationStatement@@final int copyBufSize=(int)COPY_BUF_SIZE.get(null); @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6554 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int copyBufSize=(int)COPY_BUF_SIZE.get(null); @AT@ 6554 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int copyBufSize=(int)COPY_BUF_SIZE.get(null); @AT@ 6560 @LENGTH@ 3
------INS VariableDeclarationFragment@@copyBufSize=(int)COPY_BUF_SIZE.get(null) @TO@ VariableDeclarationStatement@@final int copyBufSize=(int)COPY_BUF_SIZE.get(null); @AT@ 6564 @LENGTH@ 42
---------INS SimpleName@@copyBufSize @TO@ VariableDeclarationFragment@@copyBufSize=(int)COPY_BUF_SIZE.get(null) @AT@ 6564 @LENGTH@ 11
---------INS CastExpression@@(int)COPY_BUF_SIZE.get(null) @TO@ VariableDeclarationFragment@@copyBufSize=(int)COPY_BUF_SIZE.get(null) @AT@ 6578 @LENGTH@ 28
------------INS PrimitiveType@@int @TO@ CastExpression@@(int)COPY_BUF_SIZE.get(null) @AT@ 6579 @LENGTH@ 3
------------INS MethodInvocation@@COPY_BUF_SIZE.get(null) @TO@ CastExpression@@(int)COPY_BUF_SIZE.get(null) @AT@ 6583 @LENGTH@ 23
---------------INS SimpleName@@Name:COPY_BUF_SIZE @TO@ MethodInvocation@@COPY_BUF_SIZE.get(null) @AT@ 6583 @LENGTH@ 13
---------------INS SimpleName@@MethodName:get:[null] @TO@ MethodInvocation@@COPY_BUF_SIZE.get(null) @AT@ 6597 @LENGTH@ 9
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:get:[null] @AT@ 6601 @LENGTH@ 4
---INS VariableDeclarationStatement@@final byte[] input=new byte[copyBufSize + 10]; @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6695 @LENGTH@ 48
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] input=new byte[copyBufSize + 10]; @AT@ 6695 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] input=new byte[copyBufSize + 10]; @AT@ 6701 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6701 @LENGTH@ 4
------INS VariableDeclarationFragment@@input=new byte[copyBufSize + 10] @TO@ VariableDeclarationStatement@@final byte[] input=new byte[copyBufSize + 10]; @AT@ 6708 @LENGTH@ 34
---------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input=new byte[copyBufSize + 10] @AT@ 6708 @LENGTH@ 5
---------INS ArrayCreation@@new byte[copyBufSize + 10] @TO@ VariableDeclarationFragment@@input=new byte[copyBufSize + 10] @AT@ 6716 @LENGTH@ 26
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[copyBufSize + 10] @AT@ 6720 @LENGTH@ 22
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6720 @LENGTH@ 4
------------INS InfixExpression@@copyBufSize + 10 @TO@ ArrayCreation@@new byte[copyBufSize + 10] @AT@ 6725 @LENGTH@ 16
---------------INS SimpleName@@copyBufSize @TO@ InfixExpression@@copyBufSize + 10 @AT@ 6725 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@copyBufSize + 10 @AT@ 6736 @LENGTH@ 1
---------------INS NumberLiteral@@10 @TO@ InfixExpression@@copyBufSize + 10 @AT@ 6739 @LENGTH@ 2
---INS TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @TO@ MethodDeclaration@@public, void, MethodName:readRangeMoreThanCopyBufferSize, Exception,  @AT@ 6753 @LENGTH@ 391
------INS VariableDeclarationExpression@@SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input) @TO@ TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @AT@ 6758 @LENGTH@ 71
---------INS SimpleType@@SeekableInMemoryByteChannel @TO@ VariableDeclarationExpression@@SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input) @AT@ 6758 @LENGTH@ 27
---------INS VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(input) @TO@ VariableDeclarationExpression@@SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input) @AT@ 6786 @LENGTH@ 43
------------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(input) @AT@ 6786 @LENGTH@ 2
------------INS ClassInstanceCreation@@SeekableInMemoryByteChannel[input] @TO@ VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(input) @AT@ 6791 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[input] @AT@ 6791 @LENGTH@ 3
---------------INS SimpleType@@SeekableInMemoryByteChannel @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[input] @AT@ 6795 @LENGTH@ 27
---------------INS SimpleName@@input @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[input] @AT@ 6823 @LENGTH@ 5
------INS VariableDeclarationStatement@@final int toRead=copyBufSize + 1; @TO@ TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @AT@ 6926 @LENGTH@ 35
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int toRead=copyBufSize + 1; @AT@ 6926 @LENGTH@ 5
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int toRead=copyBufSize + 1; @AT@ 6932 @LENGTH@ 3
---------INS VariableDeclarationFragment@@toRead=copyBufSize + 1 @TO@ VariableDeclarationStatement@@final int toRead=copyBufSize + 1; @AT@ 6936 @LENGTH@ 24
------------INS SimpleName@@toRead @TO@ VariableDeclarationFragment@@toRead=copyBufSize + 1 @AT@ 6936 @LENGTH@ 6
------------INS InfixExpression@@copyBufSize + 1 @TO@ VariableDeclarationFragment@@toRead=copyBufSize + 1 @AT@ 6945 @LENGTH@ 15
---------------INS SimpleName@@copyBufSize @TO@ InfixExpression@@copyBufSize + 1 @AT@ 6945 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@copyBufSize + 1 @AT@ 6956 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@copyBufSize + 1 @AT@ 6959 @LENGTH@ 1
------INS VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,toRead); @TO@ TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @AT@ 6974 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,toRead); @AT@ 6974 @LENGTH@ 5
---------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,toRead); @AT@ 6980 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6980 @LENGTH@ 4
---------INS VariableDeclarationFragment@@read=IOUtils.readRange(in,toRead) @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,toRead); @AT@ 6987 @LENGTH@ 36
------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=IOUtils.readRange(in,toRead) @AT@ 6987 @LENGTH@ 4
------------INS MethodInvocation@@IOUtils.readRange(in,toRead) @TO@ VariableDeclarationFragment@@read=IOUtils.readRange(in,toRead) @AT@ 6994 @LENGTH@ 29
---------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.readRange(in,toRead) @AT@ 6994 @LENGTH@ 7
---------------INS SimpleName@@MethodName:readRange:[in, toRead] @TO@ MethodInvocation@@IOUtils.readRange(in,toRead) @AT@ 7002 @LENGTH@ 21
------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:readRange:[in, toRead] @AT@ 7012 @LENGTH@ 2
------------------INS SimpleName@@toRead @TO@ SimpleName@@MethodName:readRange:[in, toRead] @AT@ 7016 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(toRead,read.length) @TO@ TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @AT@ 7037 @LENGTH@ 41
---------INS MethodInvocation@@Assert.assertEquals(toRead,read.length) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(toRead,read.length) @AT@ 7037 @LENGTH@ 40
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(toRead,read.length) @AT@ 7037 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:[toRead, read.length] @TO@ MethodInvocation@@Assert.assertEquals(toRead,read.length) @AT@ 7044 @LENGTH@ 33
---------------INS SimpleName@@toRead @TO@ SimpleName@@MethodName:assertEquals:[toRead, read.length] @AT@ 7057 @LENGTH@ 6
---------------INS QualifiedName@@read.length @TO@ SimpleName@@MethodName:assertEquals:[toRead, read.length] @AT@ 7065 @LENGTH@ 11
------------------INS SimpleName@@read @TO@ QualifiedName@@read.length @AT@ 7065 @LENGTH@ 4
------------------INS SimpleName@@length @TO@ QualifiedName@@read.length @AT@ 7070 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(toRead,in.position()) @TO@ TryStatement@@try (SeekableInMemoryByteChannel in=new SeekableInMemoryByteChannel(input)){  final int toRead=copyBufSize + 1;  final byte[] read=IOUtils.readRange(in,toRead);  Assert.assertEquals(toRead,read.length);  Assert.assertEquals(toRead,in.position());}  @AT@ 7091 @LENGTH@ 43
---------INS MethodInvocation@@Assert.assertEquals(toRead,in.position()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(toRead,in.position()) @AT@ 7091 @LENGTH@ 42
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(toRead,in.position()) @AT@ 7091 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertEquals:[toRead, in.position()] @TO@ MethodInvocation@@Assert.assertEquals(toRead,in.position()) @AT@ 7098 @LENGTH@ 35
---------------INS SimpleName@@toRead @TO@ SimpleName@@MethodName:assertEquals:[toRead, in.position()] @AT@ 7111 @LENGTH@ 6
---------------INS MethodInvocation@@in.position() @TO@ SimpleName@@MethodName:assertEquals:[toRead, in.position()] @AT@ 7119 @LENGTH@ 13
------------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.position() @AT@ 7119 @LENGTH@ 2
------------------INS SimpleName@@MethodName:position:[] @TO@ MethodInvocation@@in.position() @AT@ 7122 @LENGTH@ 10


INS MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @TO@ TypeDeclaration@@ProvisionalEndpointRegistry, HashMap<NormalizedUri,Endpoint>[EndpointRegistry<NormalizedUri>] @AT@ 2156 @LENGTH@ 808
---INS Modifier@@public @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2156 @LENGTH@ 6
---INS ParameterizedType@@Collection<Endpoint> @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2163 @LENGTH@ 20
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2163 @LENGTH@ 10
------INS SimpleType@@Endpoint @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2174 @LENGTH@ 8
---INS SimpleName@@MethodName:getReadOnlyValues @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2184 @LENGTH@ 17
---INS IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2214 @LENGTH@ 69
------INS MethodInvocation@@MethodName:isEmpty:[] @TO@ IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @AT@ 2218 @LENGTH@ 9
------INS Block@@ThenBody:{  return Collections.EMPTY_LIST;} @TO@ IfStatement@@if (isEmpty()) {  return Collections.EMPTY_LIST;} @AT@ 2229 @LENGTH@ 54
---------INS ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @TO@ Block@@ThenBody:{  return Collections.EMPTY_LIST;} @AT@ 2243 @LENGTH@ 30
------------INS QualifiedName@@Collections.EMPTY_LIST @TO@ ReturnStatement@@QualifiedName:Collections.EMPTY_LIST @AT@ 2250 @LENGTH@ 22
---------------INS SimpleName@@Collections @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 2250 @LENGTH@ 11
---------------INS SimpleName@@EMPTY_LIST @TO@ QualifiedName@@Collections.EMPTY_LIST @AT@ 2262 @LENGTH@ 10
---INS VariableDeclarationStatement@@Collection<Endpoint> answer=new ArrayList<>(); @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2566 @LENGTH@ 48
------INS ParameterizedType@@Collection<Endpoint> @TO@ VariableDeclarationStatement@@Collection<Endpoint> answer=new ArrayList<>(); @AT@ 2566 @LENGTH@ 20
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2566 @LENGTH@ 10
---------INS SimpleType@@Endpoint @TO@ ParameterizedType@@Collection<Endpoint> @AT@ 2577 @LENGTH@ 8
------INS VariableDeclarationFragment@@answer=new ArrayList<>() @TO@ VariableDeclarationStatement@@Collection<Endpoint> answer=new ArrayList<>(); @AT@ 2587 @LENGTH@ 26
---------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=new ArrayList<>() @AT@ 2587 @LENGTH@ 6
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@answer=new ArrayList<>() @AT@ 2596 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2596 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2600 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 2600 @LENGTH@ 9
---INS VariableDeclarationStatement@@boolean done=false; @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2623 @LENGTH@ 21
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean done=false; @AT@ 2623 @LENGTH@ 7
------INS VariableDeclarationFragment@@done=false @TO@ VariableDeclarationStatement@@boolean done=false; @AT@ 2631 @LENGTH@ 12
---------INS SimpleName@@done @TO@ VariableDeclarationFragment@@done=false @AT@ 2631 @LENGTH@ 4
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@done=false @AT@ 2638 @LENGTH@ 5
---INS WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2653 @LENGTH@ 246
------INS PrefixExpression@@!done @TO@ WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 2660 @LENGTH@ 5
---------INS Operator@@! @TO@ PrefixExpression@@!done @AT@ 2660 @LENGTH@ 1
---------INS SimpleName@@done @TO@ PrefixExpression@@!done @AT@ 2661 @LENGTH@ 4
------INS Block@@WhileBody:{  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @TO@ WhileStatement@@while (!done) {  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 2667 @LENGTH@ 232
---------INS TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @TO@ Block@@WhileBody:{  try {    answer.addAll(values());    done=true;  } catch (  ConcurrentModificationException e) {    answer.clear();  }} @AT@ 2681 @LENGTH@ 208
------------INS ExpressionStatement@@MethodInvocation:answer.addAll(values()) @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 2703 @LENGTH@ 24
---------------INS MethodInvocation@@answer.addAll(values()) @TO@ ExpressionStatement@@MethodInvocation:answer.addAll(values()) @AT@ 2703 @LENGTH@ 23
------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.addAll(values()) @AT@ 2703 @LENGTH@ 6
------------------INS SimpleName@@MethodName:addAll:[values()] @TO@ MethodInvocation@@answer.addAll(values()) @AT@ 2710 @LENGTH@ 16
---------------------INS MethodInvocation@@MethodName:values:[] @TO@ SimpleName@@MethodName:addAll:[values()] @AT@ 2717 @LENGTH@ 8
------------INS ExpressionStatement@@Assignment:done=true @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 2744 @LENGTH@ 12
---------------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true @AT@ 2744 @LENGTH@ 11
------------------INS SimpleName@@done @TO@ Assignment@@done=true @AT@ 2744 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@done=true @AT@ 2748 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@done=true @AT@ 2751 @LENGTH@ 4
------------INS CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @TO@ TryStatement@@try {  answer.addAll(values());  done=true;} catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 2771 @LENGTH@ 118
---------------INS SingleVariableDeclaration@@ConcurrentModificationException e @TO@ CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 2778 @LENGTH@ 33
------------------INS SimpleType@@ConcurrentModificationException @TO@ SingleVariableDeclaration@@ConcurrentModificationException e @AT@ 2778 @LENGTH@ 31
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ConcurrentModificationException e @AT@ 2810 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:answer.clear() @TO@ CatchClause@@catch (ConcurrentModificationException e) {  answer.clear();} @AT@ 2831 @LENGTH@ 15
------------------INS MethodInvocation@@answer.clear() @TO@ ExpressionStatement@@MethodInvocation:answer.clear() @AT@ 2831 @LENGTH@ 14
---------------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.clear() @AT@ 2831 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@answer.clear() @AT@ 2838 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:Collections.unmodifiableCollection(answer) @TO@ MethodDeclaration@@public, Collection<Endpoint>, MethodName:getReadOnlyValues,  @AT@ 2908 @LENGTH@ 50
------INS MethodInvocation@@Collections.unmodifiableCollection(answer) @TO@ ReturnStatement@@MethodInvocation:Collections.unmodifiableCollection(answer) @AT@ 2915 @LENGTH@ 42
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.unmodifiableCollection(answer) @AT@ 2915 @LENGTH@ 11
---------INS SimpleName@@MethodName:unmodifiableCollection:[answer] @TO@ MethodInvocation@@Collections.unmodifiableCollection(answer) @AT@ 2927 @LENGTH@ 30
------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:unmodifiableCollection:[answer] @AT@ 2950 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:commitOffset, TopicPartition partition, long partitionLastOffset, boolean stopping, boolean forceCommit, String threadId,  @TO@ public, void, MethodName:commitOffset, TopicPartition partition, long partitionLastOffset, boolean stopping, boolean forceCommit,  @AT@ 8004 @LENGTH@ 265
---DEL SingleVariableDeclaration@@String threadId @AT@ 8133 @LENGTH@ 15
------DEL SimpleType@@String @AT@ 8133 @LENGTH@ 6
------DEL SimpleName@@threadId @AT@ 8140 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:LOG.warn("The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()) @TO@ MethodInvocation:LOG.warn("The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}",recoverable.getMaximumRedeliveries(),recoverable.getDeadLetterUri()) @AT@ 58592 @LENGTH@ 267
---UPD MethodInvocation@@LOG.warn("The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()) @TO@ LOG.warn("The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}",recoverable.getMaximumRedeliveries(),recoverable.getDeadLetterUri()) @AT@ 58592 @LENGTH@ 266
------UPD SimpleName@@MethodName:warn:["The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()] @TO@ MethodName:warn:["The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}", recoverable.getMaximumRedeliveries(), recoverable.getDeadLetterUri()] @AT@ 58596 @LENGTH@ 262
---------DEL InfixExpression@@"The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri() @AT@ 58601 @LENGTH@ 256
------------DEL MethodInvocation@@recoverable.getMaximumRedeliveries() @AT@ 58648 @LENGTH@ 36
------------DEL StringLiteral@@" attempts, will now be moved to dead letter channel: " @AT@ 58728 @LENGTH@ 55
------------DEL MethodInvocation@@recoverable.getDeadLetterUri() @AT@ 58827 @LENGTH@ 30
---------INS InfixExpression@@"The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}" @TO@ SimpleName@@MethodName:warn:["The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()] @AT@ 58601 @LENGTH@ 147
------------MOV StringLiteral@@"The recovered exchange is exhausted after " @TO@ InfixExpression@@"The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}" @AT@ 58601 @LENGTH@ 44
------------MOV Operator@@+ @TO@ InfixExpression@@"The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}" @AT@ 58645 @LENGTH@ 1
------------INS StringLiteral@@"dead letter channel: {}" @TO@ InfixExpression@@"The recovered exchange is exhausted after {} attempts, will now be moved to " + "dead letter channel: {}" @AT@ 58723 @LENGTH@ 25
---------INS MethodInvocation@@recoverable.getMaximumRedeliveries() @TO@ SimpleName@@MethodName:warn:["The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()] @AT@ 58790 @LENGTH@ 36
------------MOV SimpleName@@Name:recoverable @TO@ MethodInvocation@@recoverable.getMaximumRedeliveries() @AT@ 58648 @LENGTH@ 11
------------MOV SimpleName@@MethodName:getMaximumRedeliveries:[] @TO@ MethodInvocation@@recoverable.getMaximumRedeliveries() @AT@ 58660 @LENGTH@ 24
---------INS MethodInvocation@@recoverable.getDeadLetterUri() @TO@ SimpleName@@MethodName:warn:["The recovered exchange is exhausted after " + recoverable.getMaximumRedeliveries() + " attempts, will now be moved to dead letter channel: "+ recoverable.getDeadLetterUri()] @AT@ 58828 @LENGTH@ 30
------------MOV SimpleName@@Name:recoverable @TO@ MethodInvocation@@recoverable.getDeadLetterUri() @AT@ 58827 @LENGTH@ 11
------------MOV SimpleName@@MethodName:getDeadLetterUri:[] @TO@ MethodInvocation@@recoverable.getDeadLetterUri() @AT@ 58839 @LENGTH@ 18


UPD VariableDeclarationStatement@@List<AuthMechanism> mecs=fact.getMechanisms(); @TO@ List<AuthMechanism> mecs=fact != null ? fact.getMechanisms() : Collections.emptyList(); @AT@ 28452 @LENGTH@ 48
---UPD VariableDeclarationFragment@@mecs=fact.getMechanisms() @TO@ mecs=fact != null ? fact.getMechanisms() : Collections.emptyList() @AT@ 28472 @LENGTH@ 27
------INS ConditionalExpression@@fact != null ? fact.getMechanisms() : Collections.emptyList() @TO@ VariableDeclarationFragment@@mecs=fact.getMechanisms() @AT@ 28479 @LENGTH@ 61
---------INS InfixExpression@@fact != null @TO@ ConditionalExpression@@fact != null ? fact.getMechanisms() : Collections.emptyList() @AT@ 28479 @LENGTH@ 12
------------INS SimpleName@@fact @TO@ InfixExpression@@fact != null @AT@ 28479 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@fact != null @AT@ 28483 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@fact != null @AT@ 28487 @LENGTH@ 4
---------INS MethodInvocation@@fact.getMechanisms() @TO@ ConditionalExpression@@fact != null ? fact.getMechanisms() : Collections.emptyList() @AT@ 28494 @LENGTH@ 20
------------MOV SimpleName@@Name:fact @TO@ MethodInvocation@@fact.getMechanisms() @AT@ 28479 @LENGTH@ 4
------------MOV SimpleName@@MethodName:getMechanisms:[] @TO@ MethodInvocation@@fact.getMechanisms() @AT@ 28484 @LENGTH@ 15
---------INS MethodInvocation@@Collections.emptyList() @TO@ ConditionalExpression@@fact != null ? fact.getMechanisms() : Collections.emptyList() @AT@ 28517 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 28517 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 28529 @LENGTH@ 11
------DEL MethodInvocation@@fact.getMechanisms() @AT@ 28479 @LENGTH@ 20


UPD IfStatement@@if (getConfiguration().getSecureValidation() == Boolean.TRUE) {  valContext.setProperty("org.apache.jcp.xml.dsig.secureValidation",Boolean.TRUE);  valContext.setProperty("org.jcp.xml.dsig.secureValidation",Boolean.TRUE);} @TO@ if (getConfiguration().getSecureValidation().equals(Boolean.TRUE)) {  valContext.setProperty("org.apache.jcp.xml.dsig.secureValidation",Boolean.TRUE);  valContext.setProperty("org.jcp.xml.dsig.secureValidation",Boolean.TRUE);} @AT@ 4848 @LENGTH@ 254
---INS MethodInvocation@@getConfiguration().getSecureValidation().equals(Boolean.TRUE) @TO@ IfStatement@@if (getConfiguration().getSecureValidation() == Boolean.TRUE) {  valContext.setProperty("org.apache.jcp.xml.dsig.secureValidation",Boolean.TRUE);  valContext.setProperty("org.jcp.xml.dsig.secureValidation",Boolean.TRUE);} @AT@ 4852 @LENGTH@ 61
------INS MethodInvocation@@MethodName:getSecureValidation:[] @TO@ MethodInvocation@@getConfiguration().getSecureValidation().equals(Boolean.TRUE) @AT@ 4852 @LENGTH@ 40
------MOV MethodInvocation@@MethodName:getConfiguration:[] @TO@ MethodInvocation@@getConfiguration().getSecureValidation().equals(Boolean.TRUE) @AT@ 4852 @LENGTH@ 18
------INS SimpleName@@MethodName:equals:[Boolean.TRUE] @TO@ MethodInvocation@@getConfiguration().getSecureValidation().equals(Boolean.TRUE) @AT@ 4893 @LENGTH@ 20
---------INS QualifiedName@@Boolean.TRUE @TO@ SimpleName@@MethodName:equals:[Boolean.TRUE] @AT@ 4900 @LENGTH@ 12
------------MOV SimpleName@@Boolean @TO@ QualifiedName@@Boolean.TRUE @AT@ 4896 @LENGTH@ 7
------------MOV SimpleName@@TRUE @TO@ QualifiedName@@Boolean.TRUE @AT@ 4904 @LENGTH@ 4
---DEL InfixExpression@@getConfiguration().getSecureValidation() == Boolean.TRUE @AT@ 4852 @LENGTH@ 56
------DEL MethodInvocation@@getConfiguration().getSecureValidation() @AT@ 4852 @LENGTH@ 40
---------DEL SimpleName@@MethodName:getSecureValidation:[] @AT@ 4871 @LENGTH@ 21
------DEL Operator@@== @AT@ 4892 @LENGTH@ 2
------DEL QualifiedName@@Boolean.TRUE @AT@ 4896 @LENGTH@ 12


INS VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @TO@ MethodDeclaration@@protected, Message, MethodName:run, Exception,  @AT@ 6012 @LENGTH@ 48
---INS SimpleType@@Route @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 6012 @LENGTH@ 5
---INS VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 6018 @LENGTH@ 41
------INS SimpleName@@route @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 6018 @LENGTH@ 5
------INS MethodInvocation@@ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 6026 @LENGTH@ 33
---------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 6026 @LENGTH@ 14
---------INS SimpleName@@MethodName:getRoute:[exchange] @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 6041 @LENGTH@ 18
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getRoute:[exchange] @AT@ 6050 @LENGTH@ 8


UPD IfStatement@@if (!((JiraEndpoint)getEndpoint()).isSendOnlyUpdatedField()) {  processExchange(changed,changed.getKey(),fieldName);} else {  processExchange(changedField,changed.getKey(),fieldName);} @TO@ if (!getEndpoint().isSendOnlyUpdatedField()) {  processExchange(changed,changed.getKey(),fieldName);} else {  processExchange(changedField,changed.getKey(),fieldName);} @AT@ 3710 @LENGTH@ 245
---UPD PrefixExpression@@!((JiraEndpoint)getEndpoint()).isSendOnlyUpdatedField() @TO@ !getEndpoint().isSendOnlyUpdatedField() @AT@ 3714 @LENGTH@ 56
------UPD MethodInvocation@@((JiraEndpoint)getEndpoint()).isSendOnlyUpdatedField() @TO@ getEndpoint().isSendOnlyUpdatedField() @AT@ 3715 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@((JiraEndpoint)getEndpoint()).isSendOnlyUpdatedField() @AT@ 3714 @LENGTH@ 13
---------DEL ParenthesizedExpression@@((JiraEndpoint)getEndpoint()) @AT@ 3715 @LENGTH@ 30
------------DEL CastExpression@@(JiraEndpoint)getEndpoint() @AT@ 3716 @LENGTH@ 28
---------------DEL SimpleType@@JiraEndpoint @AT@ 3717 @LENGTH@ 12
---------------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 3731 @LENGTH@ 13


UPD TryStatement@@try {  LOG.debug("Searching folder(id=" + folderId + ") with query="+ query);  if (folderId == null) {    throw new IllegalArgumentException("Parameter 'folderId' can not be null");  }  if (query == null) {    throw new IllegalArgumentException("Parameter 'query' can not be null");  }  BoxSearchParameters bsp=new BoxSearchParameters();  bsp.setAncestorFolderIds(Collections.singletonList(folderId));  bsp.setQuery(query);  LinkedList<BoxItem> result=new LinkedList();  BoxSearch bs=new BoxSearch(boxConnection);  PartialCollection<BoxItem.Info> partialResult;  int offset=0;  do {    partialResult=bs.searchRange(offset,SEARCH_MAX_LIMIT,bsp);    offset+=partialResult.size();    partialResult.stream().map(i -> (BoxItem)i.getResource()).forEachOrdered(result::add);  } while (partialResult.size() == partialResult.limit());  return result;} catch (BoxAPIException e) {  throw new RuntimeException(String.format("Box API returned the error code %d\n\n%s",e.getResponseCode(),e.getResponse()),e);} @TO@ try {  LOG.debug("Searching folder(id={}) with query={}",folderId,query);  if (folderId == null) {    throw new IllegalArgumentException("Parameter 'folderId' can not be null");  }  if (query == null) {    throw new IllegalArgumentException("Parameter 'query' can not be null");  }  BoxSearchParameters bsp=new BoxSearchParameters();  bsp.setAncestorFolderIds(Collections.singletonList(folderId));  bsp.setQuery(query);  LinkedList<BoxItem> result=new LinkedList();  BoxSearch bs=new BoxSearch(boxConnection);  PartialCollection<BoxItem.Info> partialResult;  int offset=0;  do {    partialResult=bs.searchRange(offset,SEARCH_MAX_LIMIT,bsp);    offset+=partialResult.size();    partialResult.stream().map(i -> (BoxItem)i.getResource()).forEachOrdered(result::add);  } while (partialResult.size() == partialResult.limit());  return result;} catch (BoxAPIException e) {  throw new RuntimeException(String.format("Box API returned the error code %d%n%n%s",e.getResponseCode(),e.getResponse()),e);} @AT@ 2276 @LENGTH@ 1518
---UPD ExpressionStatement@@MethodInvocation:LOG.debug("Searching folder(id=" + folderId + ") with query="+ query) @TO@ MethodInvocation:LOG.debug("Searching folder(id={}) with query={}",folderId,query) @AT@ 2294 @LENGTH@ 71
------UPD MethodInvocation@@LOG.debug("Searching folder(id=" + folderId + ") with query="+ query) @TO@ LOG.debug("Searching folder(id={}) with query={}",folderId,query) @AT@ 2294 @LENGTH@ 70
---------UPD SimpleName@@MethodName:debug:["Searching folder(id=" + folderId + ") with query="+ query] @TO@ MethodName:debug:["Searching folder(id={}) with query={}", folderId, query] @AT@ 2298 @LENGTH@ 66
------------DEL InfixExpression@@"Searching folder(id=" + folderId + ") with query="+ query @AT@ 2304 @LENGTH@ 59
---------------DEL StringLiteral@@"Searching folder(id=" @AT@ 2304 @LENGTH@ 22
---------------DEL Operator@@+ @AT@ 2326 @LENGTH@ 1
---------------DEL SimpleName@@folderId @AT@ 2329 @LENGTH@ 8
---------------DEL StringLiteral@@") with query=" @AT@ 2340 @LENGTH@ 15
---------------DEL SimpleName@@query @AT@ 2358 @LENGTH@ 5
------------INS StringLiteral@@"Searching folder(id={}) with query={}" @TO@ SimpleName@@MethodName:debug:["Searching folder(id=" + folderId + ") with query="+ query] @AT@ 2304 @LENGTH@ 39
------------INS SimpleName@@folderId @TO@ SimpleName@@MethodName:debug:["Searching folder(id=" + folderId + ") with query="+ query] @AT@ 2345 @LENGTH@ 8
------------INS SimpleName@@query @TO@ SimpleName@@MethodName:debug:["Searching folder(id=" + folderId + ") with query="+ query] @AT@ 2355 @LENGTH@ 5
---UPD CatchClause@@catch (BoxAPIException e) {  throw new RuntimeException(String.format("Box API returned the error code %d\n\n%s",e.getResponseCode(),e.getResponse()),e);} @TO@ catch (BoxAPIException e) {  throw new RuntimeException(String.format("Box API returned the error code %d%n%n%s",e.getResponseCode(),e.getResponse()),e);} @AT@ 3596 @LENGTH@ 198
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(String.format("Box API returned the error code %d\n\n%s",e.getResponseCode(),e.getResponse()),e) @TO@ ClassInstanceCreation:new RuntimeException(String.format("Box API returned the error code %d%n%n%s",e.getResponseCode(),e.getResponse()),e) @AT@ 3636 @LENGTH@ 148
---------UPD ClassInstanceCreation@@RuntimeException[String.format("Box API returned the error code %d\n\n%s",e.getResponseCode(),e.getResponse()), e] @TO@ RuntimeException[String.format("Box API returned the error code %d%n%n%s",e.getResponseCode(),e.getResponse()), e] @AT@ 3642 @LENGTH@ 141
------------UPD MethodInvocation@@String.format("Box API returned the error code %d\n\n%s",e.getResponseCode(),e.getResponse()) @TO@ String.format("Box API returned the error code %d%n%n%s",e.getResponseCode(),e.getResponse()) @AT@ 3684 @LENGTH@ 95
---------------UPD SimpleName@@MethodName:format:["Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()] @TO@ MethodName:format:["Box API returned the error code %d%n%n%s", e.getResponseCode(), e.getResponse()] @AT@ 3691 @LENGTH@ 88
------------------UPD StringLiteral@@"Box API returned the error code %d\n\n%s" @TO@ "Box API returned the error code %d%n%n%s" @AT@ 3698 @LENGTH@ 42


UPD IfStatement@@if (copy.getUnitOfWork() != null) {  uow=copy.getUnitOfWork();} else {  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @TO@ if (copy.getUnitOfWork() != null) {  uow=copy.getUnitOfWork();} else {  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);  Route route=ExchangeHelper.getRoute(exchange);  if (route != null) {    uow.pushRoute(route);  }} @AT@ 16127 @LENGTH@ 369
---UPD Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @TO@ ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);  Route route=ExchangeHelper.getRoute(exchange);  if (route != null) {    uow.pushRoute(route);  }} @AT@ 16234 @LENGTH@ 262
------INS VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @TO@ Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @AT@ 16616 @LENGTH@ 48
---------INS SimpleType@@Route @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 16616 @LENGTH@ 5
---------INS VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationStatement@@Route route=ExchangeHelper.getRoute(exchange); @AT@ 16622 @LENGTH@ 41
------------INS SimpleName@@route @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 16622 @LENGTH@ 5
------------INS MethodInvocation@@ExchangeHelper.getRoute(exchange) @TO@ VariableDeclarationFragment@@route=ExchangeHelper.getRoute(exchange) @AT@ 16630 @LENGTH@ 33
---------------INS SimpleName@@Name:ExchangeHelper @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 16630 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getRoute:[exchange] @TO@ MethodInvocation@@ExchangeHelper.getRoute(exchange) @AT@ 16645 @LENGTH@ 18
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getRoute:[exchange] @AT@ 16654 @LENGTH@ 8
------INS IfStatement@@if (route != null) {  uow.pushRoute(route);} @TO@ Block@@ElseBody:{  uow=copy.getContext().adapt(ExtendedCamelContext.class).getUnitOfWorkFactory().createUnitOfWork(copy);  copy.adapt(ExtendedExchange.class).setUnitOfWork(uow);} @AT@ 16685 @LENGTH@ 88
---------INS InfixExpression@@route != null @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 16689 @LENGTH@ 13
------------INS SimpleName@@route @TO@ InfixExpression@@route != null @AT@ 16689 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@route != null @AT@ 16694 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@route != null @AT@ 16698 @LENGTH@ 4
---------INS Block@@ThenBody:{  uow.pushRoute(route);} @TO@ IfStatement@@if (route != null) {  uow.pushRoute(route);} @AT@ 16704 @LENGTH@ 69
------------INS ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @TO@ Block@@ThenBody:{  uow.pushRoute(route);} @AT@ 16730 @LENGTH@ 21
---------------INS MethodInvocation@@uow.pushRoute(route) @TO@ ExpressionStatement@@MethodInvocation:uow.pushRoute(route) @AT@ 16730 @LENGTH@ 20
------------------INS SimpleName@@Name:uow @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 16730 @LENGTH@ 3
------------------INS SimpleName@@MethodName:pushRoute:[route] @TO@ MethodInvocation@@uow.pushRoute(route) @AT@ 16734 @LENGTH@ 16
---------------------INS SimpleName@@route @TO@ SimpleName@@MethodName:pushRoute:[route] @AT@ 16744 @LENGTH@ 5


UPD VariableDeclarationStatement@@BlockingTask task=Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(endpoint.getMaximumReconnectAttempts()).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build(); @TO@ BlockingTask task=Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build(); @AT@ 4424 @LENGTH@ 343
---UPD VariableDeclarationFragment@@task=Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(endpoint.getMaximumReconnectAttempts()).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build() @TO@ task=Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build() @AT@ 4437 @LENGTH@ 329
------UPD MethodInvocation@@Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(endpoint.getMaximumReconnectAttempts()).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build() @TO@ Tasks.foregroundTask().withBudget(Budgets.iterationBudget().withMaxIterations(Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()).build() @AT@ 4444 @LENGTH@ 322
---------UPD MethodInvocation@@MethodName:withBudget:[Budgets.iterationBudget().withMaxIterations(endpoint.getMaximumReconnectAttempts()).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()] @TO@ MethodName:withBudget:[Budgets.iterationBudget().withMaxIterations(Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build()] @AT@ 4444 @LENGTH@ 297
------------UPD MethodInvocation@@Budgets.iterationBudget().withMaxIterations(endpoint.getMaximumReconnectAttempts()).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build() @TO@ Budgets.iterationBudget().withMaxIterations(Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())).withInterval(Duration.ofMillis(endpoint.getReconnectDelay())).build() @AT@ 4512 @LENGTH@ 228
---------------UPD MethodInvocation@@MethodName:withMaxIterations:[endpoint.getMaximumReconnectAttempts()] @TO@ MethodName:withMaxIterations:[Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts())] @AT@ 4512 @LENGTH@ 108
------------------INS MethodInvocation@@Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts()) @TO@ MethodInvocation@@MethodName:withMaxIterations:[endpoint.getMaximumReconnectAttempts()] @AT@ 4581 @LENGTH@ 59
---------------------INS SimpleName@@Name:Budgets @TO@ MethodInvocation@@Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts()) @AT@ 4581 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:atLeastOnce:[endpoint.getMaximumReconnectAttempts()] @TO@ MethodInvocation@@Budgets.atLeastOnce(endpoint.getMaximumReconnectAttempts()) @AT@ 4589 @LENGTH@ 51
------------------------INS MethodInvocation@@endpoint.getMaximumReconnectAttempts() @TO@ SimpleName@@MethodName:atLeastOnce:[endpoint.getMaximumReconnectAttempts()] @AT@ 4601 @LENGTH@ 38
---------------------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getMaximumReconnectAttempts() @AT@ 4581 @LENGTH@ 8
---------------------------MOV SimpleName@@MethodName:getMaximumReconnectAttempts:[] @TO@ MethodInvocation@@endpoint.getMaximumReconnectAttempts() @AT@ 4590 @LENGTH@ 29
------------------DEL MethodInvocation@@endpoint.getMaximumReconnectAttempts() @AT@ 4581 @LENGTH@ 38


UPD IfStatement@@if (!(Boolean.valueOf((String)printSettings.get("sendToPrinter")))) {  setSendToPrinter(false);} @TO@ if (!(Boolean.parseBoolean((String)printSettings.get("sendToPrinter")))) {  setSendToPrinter(false);} @AT@ 4015 @LENGTH@ 125
---UPD PrefixExpression@@!(Boolean.valueOf((String)printSettings.get("sendToPrinter"))) @TO@ !(Boolean.parseBoolean((String)printSettings.get("sendToPrinter"))) @AT@ 4019 @LENGTH@ 63
------UPD ParenthesizedExpression@@(Boolean.valueOf((String)printSettings.get("sendToPrinter"))) @TO@ (Boolean.parseBoolean((String)printSettings.get("sendToPrinter"))) @AT@ 4020 @LENGTH@ 62
---------UPD MethodInvocation@@Boolean.valueOf((String)printSettings.get("sendToPrinter")) @TO@ Boolean.parseBoolean((String)printSettings.get("sendToPrinter")) @AT@ 4021 @LENGTH@ 60
------------UPD SimpleName@@MethodName:valueOf:[(String)printSettings.get("sendToPrinter")] @TO@ MethodName:parseBoolean:[(String)printSettings.get("sendToPrinter")] @AT@ 4029 @LENGTH@ 52


UPD TypeDeclaration@@[@DisabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true",disabledReason="Runtime conflicts with the idempotency tests"), public]KafkaConsumerFullIT, BaseEmbeddedKafkaTestSupport @TO@ [@DisabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true",disabledReason="Runtime conflicts with the idempotency tests"), @TestMethodOrder(MethodOrderer.OrderAnnotation.class), public]KafkaConsumerFullIT, BaseEmbeddedKafkaTestSupport @AT@ 2031 @LENGTH@ 6771
---INS SingleMemberAnnotation@@@TestMethodOrder(MethodOrderer.OrderAnnotation.class) @TO@ TypeDeclaration@@[@DisabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true",disabledReason="Runtime conflicts with the idempotency tests"), public]KafkaConsumerFullIT, BaseEmbeddedKafkaTestSupport @AT@ 2343 @LENGTH@ 53


UPD FieldDeclaration@@String, [referenceLocation="../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc"] @TO@ String, [referenceLocation="../docs/modules/ROOT/pages/servlet/appendix/namespace.adoc"] @AT@ 1850 @LENGTH@ 104
---UPD VariableDeclarationFragment@@referenceLocation="../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc" @TO@ referenceLocation="../docs/modules/ROOT/pages/servlet/appendix/namespace.adoc" @AT@ 1857 @LENGTH@ 96
------UPD StringLiteral@@"../docs/manual/src/docs/asciidoc/_includes/servlet/appendix/namespace.adoc" @TO@ "../docs/modules/ROOT/pages/servlet/appendix/namespace.adoc" @AT@ 1877 @LENGTH@ 76


UPD IfStatement@@if (matrixParam != null) {  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @TO@ if (matrixStart > 0) {  matrixParam=requestURL.substring(matrixStart + 1,matrixEnd);  maps=getMatrixParametersFromMatrixString(matrixParam,ExchangeHelper.getCharsetName(exchange));} @AT@ 12325 @LENGTH@ 162


UPD WhileStatement@@while (read < len) {  final int readNow=input.read(b);  if (readNow <= 0) {    break;  }  output.write(b.array(),0,readNow);  b.rewind();  read+=readNow;} @TO@ while (read < len) {  b.limit(Math.min(len - read,b.capacity()));  final int readNow=input.read(b);  if (readNow <= 0) {    break;  }  output.write(b.array(),0,readNow);  b.rewind();  read+=readNow;} @AT@ 13275 @LENGTH@ 248
---UPD Block@@WhileBody:{  final int readNow=input.read(b);  if (readNow <= 0) {    break;  }  output.write(b.array(),0,readNow);  b.rewind();  read+=readNow;} @TO@ WhileBody:{  b.limit(Math.min(len - read,b.capacity()));  final int readNow=input.read(b);  if (readNow <= 0) {    break;  }  output.write(b.array(),0,readNow);  b.rewind();  read+=readNow;} @AT@ 13294 @LENGTH@ 229
------INS ExpressionStatement@@MethodInvocation:b.limit(Math.min(len - read,b.capacity())) @TO@ Block@@WhileBody:{  final int readNow=input.read(b);  if (readNow <= 0) {    break;  }  output.write(b.array(),0,readNow);  b.rewind();  read+=readNow;} @AT@ 13367 @LENGTH@ 44
---------INS MethodInvocation@@b.limit(Math.min(len - read,b.capacity())) @TO@ ExpressionStatement@@MethodInvocation:b.limit(Math.min(len - read,b.capacity())) @AT@ 13367 @LENGTH@ 43
------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.limit(Math.min(len - read,b.capacity())) @AT@ 13367 @LENGTH@ 1
------------INS SimpleName@@MethodName:limit:[Math.min(len - read,b.capacity())] @TO@ MethodInvocation@@b.limit(Math.min(len - read,b.capacity())) @AT@ 13369 @LENGTH@ 41
---------------INS MethodInvocation@@Math.min(len - read,b.capacity()) @TO@ SimpleName@@MethodName:limit:[Math.min(len - read,b.capacity())] @AT@ 13375 @LENGTH@ 34
------------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.min(len - read,b.capacity()) @AT@ 13375 @LENGTH@ 4
------------------INS SimpleName@@MethodName:min:[len - read, b.capacity()] @TO@ MethodInvocation@@Math.min(len - read,b.capacity()) @AT@ 13380 @LENGTH@ 29
---------------------INS InfixExpression@@len - read @TO@ SimpleName@@MethodName:min:[len - read, b.capacity()] @AT@ 13384 @LENGTH@ 10
------------------------INS SimpleName@@len @TO@ InfixExpression@@len - read @AT@ 13384 @LENGTH@ 3
------------------------INS Operator@@- @TO@ InfixExpression@@len - read @AT@ 13387 @LENGTH@ 1
------------------------INS SimpleName@@read @TO@ InfixExpression@@len - read @AT@ 13390 @LENGTH@ 4
---------------------INS MethodInvocation@@b.capacity() @TO@ SimpleName@@MethodName:min:[len - read, b.capacity()] @AT@ 13396 @LENGTH@ 12
------------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.capacity() @AT@ 13396 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:capacity:[] @TO@ MethodInvocation@@b.capacity() @AT@ 13398 @LENGTH@ 10


UPD IfStatement@@if (factory != schemaFactory) {  SCHEMA_FACTORY_POOL.offer(factory);} @TO@ if (factory != schemaFactory) {  boolean result=SCHEMA_FACTORY_POOL.offer(factory);  if (!result) {    LOG.error("offer() failed for SCHEMA_FACTORY_POOL");  }} @AT@ 24049 @LENGTH@ 89
---INS Block@@ThenBody:{  boolean result=SCHEMA_FACTORY_POOL.offer(factory);  if (!result) {    LOG.error("offer() failed for SCHEMA_FACTORY_POOL");  }} @TO@ IfStatement@@if (factory != schemaFactory) {  SCHEMA_FACTORY_POOL.offer(factory);} @AT@ 24079 @LENGTH@ 186
------INS VariableDeclarationStatement@@boolean result=SCHEMA_FACTORY_POOL.offer(factory); @TO@ Block@@ThenBody:{  boolean result=SCHEMA_FACTORY_POOL.offer(factory);  if (!result) {    LOG.error("offer() failed for SCHEMA_FACTORY_POOL");  }} @AT@ 24093 @LENGTH@ 52
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=SCHEMA_FACTORY_POOL.offer(factory); @AT@ 24093 @LENGTH@ 7
---------INS VariableDeclarationFragment@@result=SCHEMA_FACTORY_POOL.offer(factory) @TO@ VariableDeclarationStatement@@boolean result=SCHEMA_FACTORY_POOL.offer(factory); @AT@ 24101 @LENGTH@ 43
------------MOV MethodInvocation@@SCHEMA_FACTORY_POOL.offer(factory) @TO@ VariableDeclarationFragment@@result=SCHEMA_FACTORY_POOL.offer(factory) @AT@ 24093 @LENGTH@ 34
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=SCHEMA_FACTORY_POOL.offer(factory) @AT@ 24101 @LENGTH@ 6
------INS IfStatement@@if (!result) {  LOG.error("offer() failed for SCHEMA_FACTORY_POOL");} @TO@ Block@@ThenBody:{  boolean result=SCHEMA_FACTORY_POOL.offer(factory);  if (!result) {    LOG.error("offer() failed for SCHEMA_FACTORY_POOL");  }} @AT@ 24158 @LENGTH@ 97
---------MOV Block@@ThenBody:{  SCHEMA_FACTORY_POOL.offer(factory);} @TO@ IfStatement@@if (!result) {  LOG.error("offer() failed for SCHEMA_FACTORY_POOL");} @AT@ 24079 @LENGTH@ 59
------------UPD ExpressionStatement@@MethodInvocation:SCHEMA_FACTORY_POOL.offer(factory) @TO@ MethodInvocation:LOG.error("offer() failed for SCHEMA_FACTORY_POOL") @AT@ 24093 @LENGTH@ 35
---------------INS MethodInvocation@@LOG.error("offer() failed for SCHEMA_FACTORY_POOL") @TO@ ExpressionStatement@@MethodInvocation:SCHEMA_FACTORY_POOL.offer(factory) @AT@ 24189 @LENGTH@ 51
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("offer() failed for SCHEMA_FACTORY_POOL") @AT@ 24189 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["offer() failed for SCHEMA_FACTORY_POOL"] @TO@ MethodInvocation@@LOG.error("offer() failed for SCHEMA_FACTORY_POOL") @AT@ 24193 @LENGTH@ 47
---------------------INS StringLiteral@@"offer() failed for SCHEMA_FACTORY_POOL" @TO@ SimpleName@@MethodName:error:["offer() failed for SCHEMA_FACTORY_POOL"] @AT@ 24199 @LENGTH@ 40
---------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("offer() failed for SCHEMA_FACTORY_POOL");} @AT@ 24162 @LENGTH@ 7
------------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 24162 @LENGTH@ 1
------------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 24163 @LENGTH@ 6
---UPD Block@@ThenBody:{  SCHEMA_FACTORY_POOL.offer(factory);} @TO@ ThenBody:{  LOG.error("offer() failed for SCHEMA_FACTORY_POOL");} @AT@ 24079 @LENGTH@ 59


UPD LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @TO@ parameter -> {
  int index=parameter.getIndex();
  Object value=parameterAccessor.getBindableValue(index);
  Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value);
  Object convertedValue=super.convertParameter(value);
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue));
  resolvedParameters.put(Integer.toString(index),convertedValue);
}
 @AT@ 9665 @LENGTH@ 439
---UPD VariableDeclarationStatement@@int parameterIndex=parameter.getIndex(); @TO@ int index=parameter.getIndex(); @AT@ 9684 @LENGTH@ 42
------UPD VariableDeclarationFragment@@parameterIndex=parameter.getIndex() @TO@ index=parameter.getIndex() @AT@ 9688 @LENGTH@ 37
---------UPD SimpleName@@parameterIndex @TO@ index @AT@ 9688 @LENGTH@ 14
---UPD VariableDeclarationStatement@@Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)); @TO@ Object value=parameterAccessor.getBindableValue(index); @AT@ 9730 @LENGTH@ 99
------UPD VariableDeclarationFragment@@parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @TO@ value=parameterAccessor.getBindableValue(index) @AT@ 9737 @LENGTH@ 91
---------UPD SimpleName@@parameterValue @TO@ value @AT@ 9737 @LENGTH@ 14
---------DEL SuperMethodInvocation@@super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @AT@ 9754 @LENGTH@ 74
------------DEL SimpleName@@MethodName:convertParameter:[parameterAccessor.getBindableValue(parameterIndex)] @AT@ 9760 @LENGTH@ 16
------------DEL MethodInvocation@@parameterAccessor.getBindableValue(parameterIndex) @AT@ 9777 @LENGTH@ 50
---------INS MethodInvocation@@parameterAccessor.getBindableValue(index) @TO@ VariableDeclarationFragment@@parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex)) @AT@ 9790 @LENGTH@ 41
------------MOV SimpleName@@Name:parameterAccessor @TO@ MethodInvocation@@parameterAccessor.getBindableValue(index) @AT@ 9777 @LENGTH@ 17
------------MOV SimpleName@@MethodName:getBindableValue:[parameterIndex] @TO@ MethodInvocation@@parameterAccessor.getBindableValue(index) @AT@ 9795 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @TO@ LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @AT@ 9836 @LENGTH@ 106
------INS MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @TO@ ExpressionStatement@@MethodInvocation:Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 9836 @LENGTH@ 105
---------INS SimpleName@@Name:Neo4jQuerySupport @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 9836 @LENGTH@ 17
---------INS SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @TO@ MethodInvocation@@Neo4jQuerySupport.logParameterIfNull(parameter.getName().orElseGet(() -> Integer.toString(index)),value) @AT@ 9854 @LENGTH@ 87
------------INS MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @TO@ SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @AT@ 9873 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 9873 @LENGTH@ 19
---------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 9873 @LENGTH@ 9
---------------INS SimpleName@@MethodName:orElseGet:[() -> Integer.toString(index)] @TO@ MethodInvocation@@parameter.getName().orElseGet(() -> Integer.toString(index)) @AT@ 9893 @LENGTH@ 40
------------------INS LambdaExpression@@() -> Integer.toString(index) @TO@ SimpleName@@MethodName:orElseGet:[() -> Integer.toString(index)] @AT@ 9903 @LENGTH@ 29
---------------------INS MethodInvocation@@Integer.toString(index) @TO@ LambdaExpression@@() -> Integer.toString(index) @AT@ 9909 @LENGTH@ 23
------------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.toString(index) @AT@ 9909 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:toString:[index] @TO@ MethodInvocation@@Integer.toString(index) @AT@ 9917 @LENGTH@ 15
---------------------------INS SimpleName@@index @TO@ SimpleName@@MethodName:toString:[index] @AT@ 9926 @LENGTH@ 5
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:logParameterIfNull:[parameter.getName().orElseGet(() -> Integer.toString(index)), value] @AT@ 9935 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue)) @TO@ MethodInvocation:parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue)) @AT@ 9887 @LENGTH@ 102
------UPD MethodInvocation@@parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue)) @TO@ parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,convertedValue)) @AT@ 9887 @LENGTH@ 101
---------UPD SimpleName@@MethodName:ifPresent:[parameterName -> resolvedParameters.put(parameterName,parameterValue)] @TO@ MethodName:ifPresent:[parameterName -> resolvedParameters.put(parameterName,convertedValue)] @AT@ 9907 @LENGTH@ 81
------------UPD LambdaExpression@@parameterName -> resolvedParameters.put(parameterName,parameterValue) @TO@ parameterName -> resolvedParameters.put(parameterName,convertedValue) @AT@ 9917 @LENGTH@ 70
---------------UPD MethodInvocation@@resolvedParameters.put(parameterName,parameterValue) @TO@ resolvedParameters.put(parameterName,convertedValue) @AT@ 9934 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:put:[parameterName, parameterValue] @TO@ MethodName:put:[parameterName, convertedValue] @AT@ 9953 @LENGTH@ 34
---------------------UPD SimpleName@@parameterValue @TO@ convertedValue @AT@ 9972 @LENGTH@ 14
---INS VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @TO@ LambdaExpression@@parameter -> {
  int parameterIndex=parameter.getIndex();
  Object parameterValue=super.convertParameter(parameterAccessor.getBindableValue(parameterIndex));
  parameter.getName().ifPresent(parameterName -> resolvedParameters.put(parameterName,parameterValue));
  resolvedParameters.put(Integer.toString(parameterIndex),parameterValue);
}
 @AT@ 9946 @LENGTH@ 54
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @AT@ 9946 @LENGTH@ 6
------INS VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @TO@ VariableDeclarationStatement@@Object convertedValue=super.convertParameter(value); @AT@ 9953 @LENGTH@ 46
---------INS SimpleName@@convertedValue @TO@ VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @AT@ 9953 @LENGTH@ 14
---------INS SuperMethodInvocation@@super.convertParameter(value) @TO@ VariableDeclarationFragment@@convertedValue=super.convertParameter(value) @AT@ 9970 @LENGTH@ 29
------------INS SimpleName@@MethodName:convertParameter:[value] @TO@ SuperMethodInvocation@@super.convertParameter(value) @AT@ 9976 @LENGTH@ 16
------------INS SimpleName@@value @TO@ SuperMethodInvocation@@super.convertParameter(value) @AT@ 9993 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:resolvedParameters.put(Integer.toString(parameterIndex),parameterValue) @TO@ MethodInvocation:resolvedParameters.put(Integer.toString(index),convertedValue) @AT@ 10027 @LENGTH@ 73
------UPD MethodInvocation@@resolvedParameters.put(Integer.toString(parameterIndex),parameterValue) @TO@ resolvedParameters.put(Integer.toString(index),convertedValue) @AT@ 10027 @LENGTH@ 72
---------UPD SimpleName@@MethodName:put:[Integer.toString(parameterIndex), parameterValue] @TO@ MethodName:put:[Integer.toString(index), convertedValue] @AT@ 10046 @LENGTH@ 53
------------UPD MethodInvocation@@Integer.toString(parameterIndex) @TO@ Integer.toString(index) @AT@ 10050 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:toString:[parameterIndex] @TO@ MethodName:toString:[index] @AT@ 10058 @LENGTH@ 24
------------------UPD SimpleName@@parameterIndex @TO@ index @AT@ 10067 @LENGTH@ 14
------------UPD SimpleName@@parameterValue @TO@ convertedValue @AT@ 10084 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:started.await() @TO@ MethodDeclaration@@public, void, MethodName:testWaitForInterrupted, InterruptedException,  @AT@ 1846 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Using StrickHostKeyChecking: {}",sftpConfig.getStrictHostKeyChecking()) @TO@ MethodInvocation:LOG.debug("Using StrictHostKeyChecking: {}",sftpConfig.getStrictHostKeyChecking()) @AT@ 13039 @LENGTH@ 84
---UPD MethodInvocation@@LOG.debug("Using StrickHostKeyChecking: {}",sftpConfig.getStrictHostKeyChecking()) @TO@ LOG.debug("Using StrictHostKeyChecking: {}",sftpConfig.getStrictHostKeyChecking()) @AT@ 13039 @LENGTH@ 83
------UPD SimpleName@@MethodName:debug:["Using StrickHostKeyChecking: {}", sftpConfig.getStrictHostKeyChecking()] @TO@ MethodName:debug:["Using StrictHostKeyChecking: {}", sftpConfig.getStrictHostKeyChecking()] @AT@ 13043 @LENGTH@ 79
---------UPD StringLiteral@@"Using StrickHostKeyChecking: {}" @TO@ "Using StrictHostKeyChecking: {}" @AT@ 13049 @LENGTH@ 33


DEL MethodDeclaration@@void, MethodName:testIfItHandlesNullExternalConfigurations, Exception,  @AT@ 4864 @LENGTH@ 635
---DEL PrimitiveType@@void @AT@ 4859 @LENGTH@ 4
---DEL SimpleName@@MethodName:testIfItHandlesNullExternalConfigurations @AT@ 4864 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 4915 @LENGTH@ 9
---DEL VariableDeclarationStatement@@final String remaining=""; @AT@ 4935 @LENGTH@ 28
------DEL Modifier@@final @AT@ 4935 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4941 @LENGTH@ 6
------DEL VariableDeclarationFragment@@remaining="" @AT@ 4948 @LENGTH@ 14
---------DEL SimpleName@@remaining @AT@ 4948 @LENGTH@ 9
---------DEL StringLiteral@@"" @AT@ 4960 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final String uri="debezium:"; @AT@ 4972 @LENGTH@ 31
------DEL Modifier@@final @AT@ 4972 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 4978 @LENGTH@ 6
------DEL VariableDeclarationFragment@@uri="debezium:" @AT@ 4985 @LENGTH@ 17
---------DEL SimpleName@@uri @AT@ 4985 @LENGTH@ 3
---------DEL StringLiteral@@"debezium:" @AT@ 4991 @LENGTH@ 11
---DEL TryStatement@@try (final DebeziumComponent debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext())){  debeziumComponent.start();  debeziumComponent.setConfiguration(null);  final Map<String,Object> parameters=Collections.emptyMap();  assertThrows(IllegalArgumentException.class,() -> {    debeziumComponent.createEndpoint(uri,remaining,parameters);  });}  @AT@ 5012 @LENGTH@ 481
------DEL VariableDeclarationExpression@@final DebeziumComponent debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext()) @AT@ 5017 @LENGTH@ 100
---------DEL Modifier@@final @AT@ 5017 @LENGTH@ 5
---------DEL SimpleType@@DebeziumComponent @AT@ 5023 @LENGTH@ 17
---------DEL VariableDeclarationFragment@@debeziumComponent=new DebeziumPostgresComponent(new DefaultCamelContext()) @AT@ 5041 @LENGTH@ 76
------------DEL SimpleName@@debeziumComponent @AT@ 5041 @LENGTH@ 17
------------DEL ClassInstanceCreation@@DebeziumPostgresComponent[new DefaultCamelContext()] @AT@ 5061 @LENGTH@ 56
---------------DEL New@@new @AT@ 5061 @LENGTH@ 3
---------------DEL SimpleType@@DebeziumPostgresComponent @AT@ 5065 @LENGTH@ 25
---------------DEL ClassInstanceCreation@@DefaultCamelContext[] @AT@ 5091 @LENGTH@ 25
------------------DEL New@@new @AT@ 5091 @LENGTH@ 3
------------------DEL SimpleType@@DefaultCamelContext @AT@ 5095 @LENGTH@ 19
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.start() @AT@ 5133 @LENGTH@ 26
---------DEL MethodInvocation@@debeziumComponent.start() @AT@ 5133 @LENGTH@ 25
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5133 @LENGTH@ 17
------------DEL SimpleName@@MethodName:start:[] @AT@ 5151 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.setConfiguration(null) @AT@ 5207 @LENGTH@ 41
---------DEL MethodInvocation@@debeziumComponent.setConfiguration(null) @AT@ 5207 @LENGTH@ 40
------------DEL SimpleName@@Name:debeziumComponent @AT@ 5207 @LENGTH@ 17
------------DEL SimpleName@@MethodName:setConfiguration:[null] @AT@ 5225 @LENGTH@ 22
---------------DEL NullLiteral@@null @AT@ 5242 @LENGTH@ 4
------DEL VariableDeclarationStatement@@final Map<String,Object> parameters=Collections.emptyMap(); @AT@ 5262 @LENGTH@ 62
---------DEL Modifier@@final @AT@ 5262 @LENGTH@ 5
---------DEL ParameterizedType@@Map<String,Object> @AT@ 5268 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 5268 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 5272 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 5280 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=Collections.emptyMap() @AT@ 5288 @LENGTH@ 35
------------DEL SimpleName@@parameters @AT@ 5288 @LENGTH@ 10
------------DEL MethodInvocation@@Collections.emptyMap() @AT@ 5301 @LENGTH@ 22
---------------DEL SimpleName@@Name:Collections @AT@ 5301 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyMap:[] @AT@ 5313 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5337 @LENGTH@ 146
---------DEL MethodInvocation@@assertThrows(IllegalArgumentException.class,() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
) @AT@ 5337 @LENGTH@ 145
------------DEL SimpleName@@MethodName:assertThrows:[IllegalArgumentException.class, () -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
] @AT@ 5337 @LENGTH@ 145
---------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5350 @LENGTH@ 30
---------------DEL LambdaExpression@@() -> {
  debeziumComponent.createEndpoint(uri,remaining,parameters);
}
 @AT@ 5382 @LENGTH@ 99
------------------DEL ExpressionStatement@@MethodInvocation:debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5406 @LENGTH@ 61
---------------------DEL MethodInvocation@@debeziumComponent.createEndpoint(uri,remaining,parameters) @AT@ 5406 @LENGTH@ 60
------------------------DEL SimpleName@@Name:debeziumComponent @AT@ 5406 @LENGTH@ 17
------------------------DEL SimpleName@@MethodName:createEndpoint:[uri, remaining, parameters] @AT@ 5424 @LENGTH@ 42
---------------------------DEL SimpleName@@uri @AT@ 5439 @LENGTH@ 3
---------------------------DEL SimpleName@@remaining @AT@ 5444 @LENGTH@ 9
---------------------------DEL SimpleName@@parameters @AT@ 5455 @LENGTH@ 10


UPD CatchClause@@catch (Exception ignored) {} @TO@ catch (Throwable ignored) {} @AT@ 6095 @LENGTH@ 41
---UPD SingleVariableDeclaration@@Exception ignored @TO@ Throwable ignored @AT@ 6102 @LENGTH@ 17
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 6102 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")) @TO@ MethodInvocation:LOG.debug("Route: {} {}",order.getRoute().getId(),suspendOnly ? "shutdown deferred." : "suspension deferred.") @AT@ 27522 @LENGTH@ 144
---UPD MethodInvocation@@LOG.debug("Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")) @TO@ LOG.debug("Route: {} {}",order.getRoute().getId(),suspendOnly ? "shutdown deferred." : "suspension deferred.") @AT@ 27522 @LENGTH@ 143
------UPD SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @TO@ MethodName:debug:["Route: {} {}", order.getRoute().getId(), suspendOnly ? "shutdown deferred." : "suspension deferred."] @AT@ 27526 @LENGTH@ 139
---------INS StringLiteral@@"Route: {} {}" @TO@ SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @AT@ 27502 @LENGTH@ 14
---------INS StringLiteral@@"Route: {} {}" @TO@ SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @AT@ 27502 @LENGTH@ 14
---------INS MethodInvocation@@order.getRoute().getId() @TO@ SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @AT@ 27518 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getRoute:[] @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27544 @LENGTH@ 16
------------MOV SimpleName@@Name:order @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27544 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27561 @LENGTH@ 7
---------INS MethodInvocation@@order.getRoute().getId() @TO@ SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @AT@ 27518 @LENGTH@ 24
------------MOV MethodInvocation@@MethodName:getRoute:[] @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27544 @LENGTH@ 16
------------MOV SimpleName@@Name:order @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27544 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@order.getRoute().getId() @AT@ 27561 @LENGTH@ 7
---------DEL InfixExpression@@"Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.") @AT@ 27532 @LENGTH@ 132
------------DEL StringLiteral@@"Route: " @AT@ 27532 @LENGTH@ 9
------------DEL Operator@@+ @AT@ 27541 @LENGTH@ 1
------------DEL MethodInvocation@@order.getRoute().getId() @AT@ 27544 @LENGTH@ 24
------------DEL ParenthesizedExpression@@(suspendOnly ? " shutdown deferred." : " suspension deferred.") @AT@ 27601 @LENGTH@ 63
---------------DEL ConditionalExpression@@suspendOnly ? " shutdown deferred." : " suspension deferred." @AT@ 27602 @LENGTH@ 61
---------INS ConditionalExpression@@suspendOnly ? "shutdown deferred." : "suspension deferred." @TO@ SimpleName@@MethodName:debug:["Route: " + order.getRoute().getId() + (suspendOnly ? " shutdown deferred." : " suspension deferred.")] @AT@ 27572 @LENGTH@ 59
------------MOV SimpleName@@suspendOnly @TO@ ConditionalExpression@@suspendOnly ? "shutdown deferred." : "suspension deferred." @AT@ 27602 @LENGTH@ 11
------------MOV StringLiteral@@" shutdown deferred." @TO@ ConditionalExpression@@suspendOnly ? "shutdown deferred." : "suspension deferred." @AT@ 27616 @LENGTH@ 21
------------MOV StringLiteral@@" suspension deferred." @TO@ ConditionalExpression@@suspendOnly ? "shutdown deferred." : "suspension deferred." @AT@ 27640 @LENGTH@ 23


UPD IfStatement@@if (len > 0 && len <= max) {  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @TO@ if (len > 0 && len <= max) {  int i=(int)len;  byte[] arr=new byte[i];  int read=0;  int offset=0;  int remain=i;  while ((read=is.read(arr,offset,remain)) > 0 && remain > 0) {    offset+=read;    remain-=read;  }  IOHelper.close(is);  return arr;} @AT@ 23726 @LENGTH@ 267
---UPD Block@@ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @TO@ ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  int read=0;  int offset=0;  int remain=i;  while ((read=is.read(arr,offset,remain)) > 0 && remain > 0) {    offset+=read;    remain-=read;  }  IOHelper.close(is);  return arr;} @AT@ 23753 @LENGTH@ 240
------DEL ExpressionStatement@@MethodInvocation:is.read(arr,0,i) @AT@ 23872 @LENGTH@ 19
---------DEL MethodInvocation@@is.read(arr,0,i) @AT@ 23872 @LENGTH@ 18
------INS VariableDeclarationStatement@@int read=0; @TO@ Block@@ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @AT@ 23872 @LENGTH@ 13
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int read=0; @AT@ 23872 @LENGTH@ 3
---------INS VariableDeclarationFragment@@read=0 @TO@ VariableDeclarationStatement@@int read=0; @AT@ 23876 @LENGTH@ 8
------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=0 @AT@ 23876 @LENGTH@ 4
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@read=0 @AT@ 23883 @LENGTH@ 1
------INS VariableDeclarationStatement@@int offset=0; @TO@ Block@@ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @AT@ 23910 @LENGTH@ 15
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int offset=0; @AT@ 23910 @LENGTH@ 3
---------INS VariableDeclarationFragment@@offset=0 @TO@ VariableDeclarationStatement@@int offset=0; @AT@ 23914 @LENGTH@ 10
------------INS SimpleName@@offset @TO@ VariableDeclarationFragment@@offset=0 @AT@ 23914 @LENGTH@ 6
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@offset=0 @AT@ 23923 @LENGTH@ 1
------INS VariableDeclarationStatement@@int remain=i; @TO@ Block@@ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @AT@ 23950 @LENGTH@ 15
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int remain=i; @AT@ 23950 @LENGTH@ 3
---------INS VariableDeclarationFragment@@remain=i @TO@ VariableDeclarationStatement@@int remain=i; @AT@ 23954 @LENGTH@ 10
------------INS SimpleName@@remain @TO@ VariableDeclarationFragment@@remain=i @AT@ 23954 @LENGTH@ 6
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@remain=i @AT@ 23963 @LENGTH@ 1
------INS WhileStatement@@while ((read=is.read(arr,offset,remain)) > 0 && remain > 0) {  offset+=read;  remain-=read;} @TO@ Block@@ThenBody:{  int i=(int)len;  byte[] arr=new byte[i];  is.read(arr,0,i);  IOHelper.close(is);  return arr;} @AT@ 23990 @LENGTH@ 179
---------INS InfixExpression@@(read=is.read(arr,offset,remain)) > 0 && remain > 0 @TO@ WhileStatement@@while ((read=is.read(arr,offset,remain)) > 0 && remain > 0) {  offset+=read;  remain-=read;} @AT@ 23997 @LENGTH@ 55
------------INS InfixExpression@@(read=is.read(arr,offset,remain)) > 0 @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 && remain > 0 @AT@ 23997 @LENGTH@ 41
---------------INS ParenthesizedExpression@@(read=is.read(arr,offset,remain)) @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 @AT@ 23997 @LENGTH@ 37
------------------INS Assignment@@read=is.read(arr,offset,remain) @TO@ ParenthesizedExpression@@(read=is.read(arr,offset,remain)) @AT@ 23998 @LENGTH@ 35
---------------------INS SimpleName@@read @TO@ Assignment@@read=is.read(arr,offset,remain) @AT@ 23998 @LENGTH@ 4
---------------------INS Operator@@= @TO@ Assignment@@read=is.read(arr,offset,remain) @AT@ 24002 @LENGTH@ 1
---------------------INS MethodInvocation@@is.read(arr,offset,remain) @TO@ Assignment@@read=is.read(arr,offset,remain) @AT@ 24005 @LENGTH@ 28
------------------------MOV SimpleName@@Name:is @TO@ MethodInvocation@@is.read(arr,offset,remain) @AT@ 23872 @LENGTH@ 2
------------------------MOV SimpleName@@MethodName:read:[arr, 0, i] @TO@ MethodInvocation@@is.read(arr,offset,remain) @AT@ 23875 @LENGTH@ 15
---------------------------DEL NumberLiteral@@0 @AT@ 23885 @LENGTH@ 1
---------------------------UPD SimpleName@@i @TO@ offset @AT@ 23888 @LENGTH@ 1
---------------------------INS SimpleName@@remain @TO@ SimpleName@@MethodName:read:[arr, 0, i] @AT@ 24026 @LENGTH@ 6
---------------INS Operator@@> @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 @AT@ 24034 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 @AT@ 24037 @LENGTH@ 1
------------INS Operator@@&& @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 && remain > 0 @AT@ 24038 @LENGTH@ 2
------------INS InfixExpression@@remain > 0 @TO@ InfixExpression@@(read=is.read(arr,offset,remain)) > 0 && remain > 0 @AT@ 24042 @LENGTH@ 10
---------------INS SimpleName@@remain @TO@ InfixExpression@@remain > 0 @AT@ 24042 @LENGTH@ 6
---------------INS Operator@@> @TO@ InfixExpression@@remain > 0 @AT@ 24048 @LENGTH@ 1
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@remain > 0 @AT@ 24051 @LENGTH@ 1
---------INS Block@@WhileBody:{  offset+=read;  remain-=read;} @TO@ WhileStatement@@while ((read=is.read(arr,offset,remain)) > 0 && remain > 0) {  offset+=read;  remain-=read;} @AT@ 24054 @LENGTH@ 115
------------INS ExpressionStatement@@Assignment:offset+=read @TO@ Block@@WhileBody:{  offset+=read;  remain-=read;} @AT@ 24084 @LENGTH@ 15
---------------INS Assignment@@offset+=read @TO@ ExpressionStatement@@Assignment:offset+=read @AT@ 24084 @LENGTH@ 14
------------------INS SimpleName@@offset @TO@ Assignment@@offset+=read @AT@ 24084 @LENGTH@ 6
------------------INS Operator@@+= @TO@ Assignment@@offset+=read @AT@ 24090 @LENGTH@ 2
------------------INS SimpleName@@read @TO@ Assignment@@offset+=read @AT@ 24094 @LENGTH@ 4
------------INS ExpressionStatement@@Assignment:remain-=read @TO@ Block@@WhileBody:{  offset+=read;  remain-=read;} @AT@ 24128 @LENGTH@ 15
---------------INS Assignment@@remain-=read @TO@ ExpressionStatement@@Assignment:remain-=read @AT@ 24128 @LENGTH@ 14
------------------INS SimpleName@@remain @TO@ Assignment@@remain-=read @AT@ 24128 @LENGTH@ 6
------------------INS Operator@@-= @TO@ Assignment@@remain-=read @AT@ 24134 @LENGTH@ 2
------------------INS SimpleName@@read @TO@ Assignment@@remain-=read @AT@ 24138 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:doSend, int size, String topic, ExecutionException, InterruptedException, TimeoutException,  @TO@ protected, void, MethodName:doSend, int size, String topic,  @AT@ 1486 @LENGTH@ 806
---DEL SimpleType@@ExecutionException @AT@ 1539 @LENGTH@ 18
---DEL SimpleType@@InterruptedException @AT@ 1559 @LENGTH@ 20
---DEL SimpleType@@TimeoutException @AT@ 1581 @LENGTH@ 16


UPD CatchClause@@catch (Exception e) {  e.printStackTrace();} @TO@ catch (Exception e) {  e.printStackTrace();  return;} @AT@ 2202 @LENGTH@ 64
---INS ReturnStatement@@ @TO@ CatchClause@@catch (Exception e) {  e.printStackTrace();} @AT@ 2269 @LENGTH@ 7


UPD FieldDeclaration@@private, MongoDbConnectorEmbeddedDebeziumConfiguration, [configuration] @TO@ private, MongoDbConnectorEmbeddedDebeziumConfiguration, [configuration=new MongoDbConnectorEmbeddedDebeziumConfiguration()] @AT@ 1250 @LENGTH@ 68
---UPD VariableDeclarationFragment@@configuration @TO@ configuration=new MongoDbConnectorEmbeddedDebeziumConfiguration() @AT@ 1304 @LENGTH@ 13
------INS ClassInstanceCreation@@MongoDbConnectorEmbeddedDebeziumConfiguration[] @TO@ VariableDeclarationFragment@@configuration @AT@ 1320 @LENGTH@ 51
---------INS New@@new @TO@ ClassInstanceCreation@@MongoDbConnectorEmbeddedDebeziumConfiguration[] @AT@ 1320 @LENGTH@ 3
---------INS SimpleType@@MongoDbConnectorEmbeddedDebeziumConfiguration @TO@ ClassInstanceCreation@@MongoDbConnectorEmbeddedDebeziumConfiguration[] @AT@ 1324 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class)) @TO@ MethodInvocation:assertDoesNotThrow(() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class))) @AT@ 4315 @LENGTH@ 99
---INS MethodInvocation@@assertDoesNotThrow(() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class))) @TO@ ExpressionStatement@@MethodInvocation:expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class)) @AT@ 4383 @LENGTH@ 124
------INS SimpleName@@MethodName:assertDoesNotThrow:[() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class))] @TO@ MethodInvocation@@assertDoesNotThrow(() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class))) @AT@ 4383 @LENGTH@ 124
---------INS LambdaExpression@@() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class)) @TO@ SimpleName@@MethodName:assertDoesNotThrow:[() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class))] @AT@ 4402 @LENGTH@ 104
------------MOV MethodInvocation@@expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class)) @TO@ LambdaExpression@@() -> expectedOutputTest.accept(template.requestBody("direct:input",input,Map.class)) @AT@ 4315 @LENGTH@ 98


INS MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @TO@ TypeDeclaration@@[@UriParams, public]LuceneConfiguration,  @AT@ 3292 @LENGTH@ 225
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3292 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3300 @LENGTH@ 7
---INS SimpleName@@MethodName:isValidAuthority @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3308 @LENGTH@ 16
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3334 @LENGTH@ 18
---MOV IfStatement@@if ((!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")))) {  return false;} @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3363 @LENGTH@ 279
------INS InfixExpression@@!authority.contains(":") || authority.split(":")[0] == null || insertOrQueryCheck() @TO@ IfStatement@@if ((!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query")))) {  return false;} @AT@ 3367 @LENGTH@ 83
---------MOV InfixExpression@@(!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query"))) @TO@ InfixExpression@@!authority.contains(":") || authority.split(":")[0] == null || insertOrQueryCheck() @AT@ 3367 @LENGTH@ 236
------------DEL ParenthesizedExpression@@(!authority.contains(":")) @AT@ 3367 @LENGTH@ 26
------------MOV PrefixExpression@@!authority.contains(":") @TO@ InfixExpression@@(!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query"))) @AT@ 3368 @LENGTH@ 24
------------DEL ParenthesizedExpression@@((authority.split(":")[0]) == null) @AT@ 3413 @LENGTH@ 35
------------MOV InfixExpression@@(authority.split(":")[0]) == null @TO@ InfixExpression@@(!authority.contains(":")) || ((authority.split(":")[0]) == null) || ((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query"))) @AT@ 3414 @LENGTH@ 33
---------------DEL ParenthesizedExpression@@(authority.split(":")[0]) @AT@ 3414 @LENGTH@ 25
---------------MOV ArrayAccess@@authority.split(":")[0] @TO@ InfixExpression@@(authority.split(":")[0]) == null @AT@ 3415 @LENGTH@ 23
------------DEL ParenthesizedExpression@@((!authority.split(":")[1].equalsIgnoreCase("insert")) && (!authority.split(":")[1].equalsIgnoreCase("query"))) @AT@ 3468 @LENGTH@ 135
---------INS Operator@@|| @TO@ InfixExpression@@!authority.contains(":") || authority.split(":")[0] == null || insertOrQueryCheck() @AT@ 3426 @LENGTH@ 2
---------INS MethodInvocation@@MethodName:insertOrQueryCheck:[] @TO@ InfixExpression@@!authority.contains(":") || authority.split(":")[0] == null || insertOrQueryCheck() @AT@ 3430 @LENGTH@ 20
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@private, boolean, MethodName:isValidAuthority, URISyntaxException,  @AT@ 3498 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3505 @LENGTH@ 4


UPD MethodDeclaration@@public, InvocationResult, MethodName:invoke, Message<?> message, Object... providedArgs, Exception,  @TO@ public, InvocationResult, MethodName:invoke, @Nullable Message<?> message, Object... providedArgs, Exception,  @AT@ 2023 @LENGTH@ 820
---UPD SingleVariableDeclaration@@Message<?> message @TO@ @Nullable Message<?> message @AT@ 2054 @LENGTH@ 18


UPD TypeDeclaration@@[@Ignore("HIVE-22626 should fix this"), public]TestStatsReplicationScenariosACIDNoAutogather, TestStatsReplicationScenarios @TO@ [public]TestStatsReplicationScenariosACIDNoAutogather, TestStatsReplicationScenarios @AT@ 1312 @LENGTH@ 990
---DEL SingleMemberAnnotation@@@Ignore("HIVE-22626 should fix this") @AT@ 1312 @LENGTH@ 37


UPD VariableDeclarationStatement@@final WebArchive webArchive=ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class); @TO@ final WebArchive webArchive=ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class).addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")),"permissions.xml"); @AT@ 2871 @LENGTH@ 861
---UPD VariableDeclarationFragment@@webArchive=ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class) @TO@ webArchive=ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class).addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")),"permissions.xml") @AT@ 2888 @LENGTH@ 843
------UPD MethodInvocation@@ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class) @TO@ ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class).addAsManifestResource(createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")),"permissions.xml") @AT@ 2901 @LENGTH@ 830
---------INS MethodInvocation@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @TO@ MethodInvocation@@ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class) @AT@ 3203 @LENGTH@ 830
------------INS TypeLiteral@@PublisherToChannelPublisherEndpoint.class @TO@ MethodInvocation@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @AT@ 3777 @LENGTH@ 41
------------INS TypeLiteral@@EmitterToSubscriberEndpoint.class @TO@ MethodInvocation@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @AT@ 3844 @LENGTH@ 33
------------INS TypeLiteral@@EmitterToSubscribedChannelPublisherBuilderEndpoint.class @TO@ MethodInvocation@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @AT@ 3903 @LENGTH@ 56
------------INS TypeLiteral@@EmitterToChannelPublisherViaKafkaEndpoint.class @TO@ MethodInvocation@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @AT@ 3985 @LENGTH@ 47
---------DEL SimpleName@@MethodName:addClasses:[PublisherToChannelPublisherEndpoint.class, EmitterToSubscriberEndpoint.class, EmitterToSubscribedChannelPublisherBuilderEndpoint.class, EmitterToChannelPublisherViaKafkaEndpoint.class] @AT@ 3439 @LENGTH@ 292
------------DEL TypeLiteral@@PublisherToChannelPublisherEndpoint.class @AT@ 3475 @LENGTH@ 41
------------DEL TypeLiteral@@EmitterToSubscriberEndpoint.class @AT@ 3542 @LENGTH@ 33
------------DEL TypeLiteral@@EmitterToSubscribedChannelPublisherBuilderEndpoint.class @AT@ 3601 @LENGTH@ 56
------------DEL TypeLiteral@@EmitterToChannelPublisherViaKafkaEndpoint.class @AT@ 3683 @LENGTH@ 47
---------INS SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")), "permissions.xml"] @TO@ MethodInvocation@@ShrinkWrap.create(WebArchive.class,"rm-channels-client.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").setWebXML(ReactiveMessagingChannelsTestCase.class.getPackage(),"web.xml").addAsWebInfResource(ReactiveMessagingChannelsTestCase.class.getPackage(),"microprofile-config.properties","classes/META-INF/microprofile-config.properties").addClasses(EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class,RunKafkaSetupTask.class).addClasses(PublisherToChannelPublisherEndpoint.class,EmitterToSubscriberEndpoint.class,EmitterToSubscribedChannelPublisherBuilderEndpoint.class,EmitterToChannelPublisherViaKafkaEndpoint.class) @AT@ 4051 @LENGTH@ 1882
------------INS MethodInvocation@@createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")) @TO@ SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")), "permissions.xml"] @AT@ 4073 @LENGTH@ 1840
---------------INS SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @TO@ MethodInvocation@@createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")) @AT@ 4073 @LENGTH@ 1840
------------------INS ClassInstanceCreation@@SocketPermission["*", "connect, resolve"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 4322 @LENGTH@ 45
---------------------INS New@@new @TO@ ClassInstanceCreation@@SocketPermission["*", "connect, resolve"] @AT@ 4322 @LENGTH@ 3
---------------------INS SimpleType@@SocketPermission @TO@ ClassInstanceCreation@@SocketPermission["*", "connect, resolve"] @AT@ 4326 @LENGTH@ 16
---------------------INS StringLiteral@@"*" @TO@ ClassInstanceCreation@@SocketPermission["*", "connect, resolve"] @AT@ 4343 @LENGTH@ 3
---------------------INS StringLiteral@@"connect, resolve" @TO@ ClassInstanceCreation@@SocketPermission["*", "connect, resolve"] @AT@ 4348 @LENGTH@ 18
------------------INS ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5205 @LENGTH@ 43
---------------------INS New@@new @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 5205 @LENGTH@ 3
---------------------INS SimpleType@@FilePermission @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 5209 @LENGTH@ 14
---------------------INS StringLiteral@@"<<ALL FILES>>" @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 5224 @LENGTH@ 15
---------------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 5241 @LENGTH@ 6
------------------INS ClassInstanceCreation@@SecurityPermission["insertProvider"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5340 @LENGTH@ 40
---------------------INS New@@new @TO@ ClassInstanceCreation@@SecurityPermission["insertProvider"] @AT@ 5340 @LENGTH@ 3
---------------------INS SimpleType@@SecurityPermission @TO@ ClassInstanceCreation@@SecurityPermission["insertProvider"] @AT@ 5344 @LENGTH@ 18
---------------------INS StringLiteral@@"insertProvider" @TO@ ClassInstanceCreation@@SecurityPermission["insertProvider"] @AT@ 5363 @LENGTH@ 16
------------------INS ClassInstanceCreation@@MBeanServerPermission["createMBeanServer"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5582 @LENGTH@ 46
---------------------INS New@@new @TO@ ClassInstanceCreation@@MBeanServerPermission["createMBeanServer"] @AT@ 5582 @LENGTH@ 3
---------------------INS SimpleType@@MBeanServerPermission @TO@ ClassInstanceCreation@@MBeanServerPermission["createMBeanServer"] @AT@ 5586 @LENGTH@ 21
---------------------INS StringLiteral@@"createMBeanServer" @TO@ ClassInstanceCreation@@MBeanServerPermission["createMBeanServer"] @AT@ 5608 @LENGTH@ 19
------------------INS ClassInstanceCreation@@MBeanPermission["*", "registerMBean, unregisterMBean"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5654 @LENGTH@ 58
---------------------INS New@@new @TO@ ClassInstanceCreation@@MBeanPermission["*", "registerMBean, unregisterMBean"] @AT@ 5654 @LENGTH@ 3
---------------------INS SimpleType@@MBeanPermission @TO@ ClassInstanceCreation@@MBeanPermission["*", "registerMBean, unregisterMBean"] @AT@ 5658 @LENGTH@ 15
---------------------INS StringLiteral@@"*" @TO@ ClassInstanceCreation@@MBeanPermission["*", "registerMBean, unregisterMBean"] @AT@ 5674 @LENGTH@ 3
---------------------INS StringLiteral@@"registerMBean, unregisterMBean" @TO@ ClassInstanceCreation@@MBeanPermission["*", "registerMBean, unregisterMBean"] @AT@ 5679 @LENGTH@ 32
------------------INS ClassInstanceCreation@@RuntimePermission["getClassLoader"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5738 @LENGTH@ 39
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 5738 @LENGTH@ 3
---------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 5742 @LENGTH@ 17
---------------------INS StringLiteral@@"getClassLoader" @TO@ ClassInstanceCreation@@RuntimePermission["getClassLoader"] @AT@ 5760 @LENGTH@ 16
------------------INS ClassInstanceCreation@@RuntimePermission["modifyThread"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5803 @LENGTH@ 37
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 5803 @LENGTH@ 3
---------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 5807 @LENGTH@ 17
---------------------INS StringLiteral@@"modifyThread" @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 5825 @LENGTH@ 14
------------------INS ClassInstanceCreation@@RuntimePermission["setContextClassLoader"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new SocketPermission("*","connect, resolve"), new FilePermission("<<ALL FILES>>","read"), new SecurityPermission("insertProvider"), new MBeanServerPermission("createMBeanServer"), new MBeanPermission("*","registerMBean, unregisterMBean"), new RuntimePermission("getClassLoader"), new RuntimePermission("modifyThread"), new RuntimePermission("setContextClassLoader")] @AT@ 5866 @LENGTH@ 46
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["setContextClassLoader"] @AT@ 5866 @LENGTH@ 3
---------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["setContextClassLoader"] @AT@ 5870 @LENGTH@ 17
---------------------INS StringLiteral@@"setContextClassLoader" @TO@ ClassInstanceCreation@@RuntimePermission["setContextClassLoader"] @AT@ 5888 @LENGTH@ 23
------------INS StringLiteral@@"permissions.xml" @TO@ SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new SocketPermission("*","connect, resolve"),new FilePermission("<<ALL FILES>>","read"),new SecurityPermission("insertProvider"),new MBeanServerPermission("createMBeanServer"),new MBeanPermission("*","registerMBean, unregisterMBean"),new RuntimePermission("getClassLoader"),new RuntimePermission("modifyThread"),new RuntimePermission("setContextClassLoader")), "permissions.xml"] @AT@ 5915 @LENGTH@ 17


UPD IfStatement@@if (cl.isEnabled() && (revision < cl.getCurrentRevision())) {  LOG.debug("Revert revision {}",revision);  dirService.revert(revision);} @TO@ if (cl.isEnabled() && revision < cl.getCurrentRevision()) {  LOG.debug("Revert revision {}",revision);  dirService.revert(revision);} @AT@ 11274 @LENGTH@ 179
---UPD InfixExpression@@cl.isEnabled() && (revision < cl.getCurrentRevision()) @TO@ cl.isEnabled() && revision < cl.getCurrentRevision() @AT@ 11278 @LENGTH@ 54
------DEL ParenthesizedExpression@@(revision < cl.getCurrentRevision()) @AT@ 11296 @LENGTH@ 36
------MOV InfixExpression@@revision < cl.getCurrentRevision() @TO@ InfixExpression@@cl.isEnabled() && (revision < cl.getCurrentRevision()) @AT@ 11297 @LENGTH@ 34


DEL MethodDeclaration@@private, boolean, MethodName:contains, String p,  @AT@ 6029 @LENGTH@ 357
---DEL Modifier@@private @AT@ 6029 @LENGTH@ 7
---DEL PrimitiveType@@boolean @AT@ 6037 @LENGTH@ 7
---DEL SimpleName@@MethodName:contains @AT@ 6045 @LENGTH@ 8
---DEL SingleVariableDeclaration@@String p @AT@ 6054 @LENGTH@ 8
------DEL SimpleType@@String @AT@ 6054 @LENGTH@ 6
------DEL SimpleName@@p @AT@ 6061 @LENGTH@ 1
---DEL VariableDeclarationStatement@@boolean found=false; @AT@ 6078 @LENGTH@ 22
------DEL PrimitiveType@@boolean @AT@ 6078 @LENGTH@ 7
------DEL VariableDeclarationFragment@@found=false @AT@ 6086 @LENGTH@ 13
---------DEL SimpleName@@found @AT@ 6086 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 6094 @LENGTH@ 5
---DEL EnhancedForStatement@@for (Property prop : properties) {  if (prop.name != null && prop.name.equals(p) && prop.value != null) {    found=true;    break;  }} @AT@ 6113 @LENGTH@ 237
------DEL SingleVariableDeclaration@@Property prop @AT@ 6118 @LENGTH@ 13
---------DEL SimpleType@@Property @AT@ 6118 @LENGTH@ 8
---------DEL SimpleName@@prop @AT@ 6127 @LENGTH@ 4
------DEL SimpleName@@properties @AT@ 6134 @LENGTH@ 10
------DEL IfStatement@@if (prop.name != null && prop.name.equals(p) && prop.value != null) {  found=true;  break;} @AT@ 6164 @LENGTH@ 172
---------DEL InfixExpression@@prop.name != null && prop.name.equals(p) && prop.value != null @AT@ 6168 @LENGTH@ 86
------------DEL InfixExpression@@prop.name != null && prop.name.equals(p) @AT@ 6168 @LENGTH@ 40
---------------DEL InfixExpression@@prop.name != null @AT@ 6168 @LENGTH@ 17
------------------DEL QualifiedName@@prop.name @AT@ 6168 @LENGTH@ 9
---------------------DEL SimpleName@@prop @AT@ 6168 @LENGTH@ 4
---------------------DEL SimpleName@@name @AT@ 6173 @LENGTH@ 4
------------------DEL Operator@@!= @AT@ 6177 @LENGTH@ 2
------------------DEL NullLiteral@@null @AT@ 6181 @LENGTH@ 4
---------------DEL Operator@@&& @AT@ 6185 @LENGTH@ 2
---------------DEL MethodInvocation@@prop.name.equals(p) @AT@ 6189 @LENGTH@ 19
------------------DEL QualifiedName@@Name:prop.name @AT@ 6189 @LENGTH@ 9
------------------DEL SimpleName@@MethodName:equals:[p] @AT@ 6199 @LENGTH@ 9
---------------------DEL SimpleName@@p @AT@ 6206 @LENGTH@ 1
------------DEL Operator@@&& @AT@ 6208 @LENGTH@ 2
------------DEL InfixExpression@@prop.value != null @AT@ 6236 @LENGTH@ 18
---------------DEL QualifiedName@@prop.value @AT@ 6236 @LENGTH@ 10
------------------DEL SimpleName@@prop @AT@ 6236 @LENGTH@ 4
------------------DEL SimpleName@@value @AT@ 6241 @LENGTH@ 5
---------------DEL Operator@@!= @AT@ 6246 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 6250 @LENGTH@ 4
---------DEL Block@@ThenBody:{  found=true;  break;} @AT@ 6256 @LENGTH@ 80
------------DEL ExpressionStatement@@Assignment:found=true @AT@ 6278 @LENGTH@ 13
---------------DEL Assignment@@found=true @AT@ 6278 @LENGTH@ 12
------------------DEL SimpleName@@found @AT@ 6278 @LENGTH@ 5
------------------DEL Operator@@= @AT@ 6283 @LENGTH@ 1
------------------DEL BooleanLiteral@@true @AT@ 6286 @LENGTH@ 4
------------DEL BreakStatement@@ @AT@ 6312 @LENGTH@ 6
---DEL ReturnStatement@@SimpleName:found @AT@ 6363 @LENGTH@ 13
------DEL SimpleName@@found @AT@ 6370 @LENGTH@ 5


UPD IfStatement@@if (!strategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} else {  LOG.debug("Excluding header {} as per strategy",entry.getKey());} @TO@ if (!strategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {  if (entry.getValue().size() == 1) {    exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));  } else {    exchange.getIn().setHeader(entry.getKey(),entry.getValue());  }} else {  LOG.debug("Excluding header {} as per strategy",entry.getKey());} @AT@ 7759 @LENGTH@ 348
---INS Block@@ThenBody:{  if (entry.getValue().size() == 1) {    exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));  } else {    exchange.getIn().setHeader(entry.getKey(),entry.getValue());  }} @TO@ IfStatement@@if (!strategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),exchange)) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} else {  LOG.debug("Excluding header {} as per strategy",entry.getKey());} @AT@ 7847 @LENGTH@ 575
------INS IfStatement@@if (entry.getValue().size() == 1) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} else {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @TO@ Block@@ThenBody:{  if (entry.getValue().size() == 1) {    exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));  } else {    exchange.getIn().setHeader(entry.getKey(),entry.getValue());  }} @AT@ 7881 @LENGTH@ 511
---------MOV Block@@ThenBody:{  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @TO@ IfStatement@@if (entry.getValue().size() == 1) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} else {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @AT@ 7847 @LENGTH@ 125
---------INS InfixExpression@@entry.getValue().size() == 1 @TO@ IfStatement@@if (entry.getValue().size() == 1) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} else {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @AT@ 7885 @LENGTH@ 28
------------INS MethodInvocation@@entry.getValue().size() @TO@ InfixExpression@@entry.getValue().size() == 1 @AT@ 7885 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().size() @AT@ 7885 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().size() @AT@ 7885 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@entry.getValue().size() @AT@ 7902 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@entry.getValue().size() == 1 @AT@ 7908 @LENGTH@ 2
------------INS NumberLiteral@@1 @TO@ InfixExpression@@entry.getValue().size() == 1 @AT@ 7912 @LENGTH@ 1
---------INS Block@@ThenBody:{  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} @TO@ IfStatement@@if (entry.getValue().size() == 1) {  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} else {  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @AT@ 7915 @LENGTH@ 338
------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0));} @AT@ 8151 @LENGTH@ 68
---------------INS MethodInvocation@@exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @AT@ 8151 @LENGTH@ 67
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @AT@ 8151 @LENGTH@ 16
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @AT@ 8151 @LENGTH@ 8
------------------INS SimpleName@@MethodName:setHeader:[entry.getKey(), entry.getValue().get(0)] @TO@ MethodInvocation@@exchange.getIn().setHeader(entry.getKey(),entry.getValue().get(0)) @AT@ 8168 @LENGTH@ 50
---------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:setHeader:[entry.getKey(), entry.getValue().get(0)] @AT@ 8178 @LENGTH@ 14
------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 8178 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 8184 @LENGTH@ 8
---------------------INS MethodInvocation@@entry.getValue().get(0) @TO@ SimpleName@@MethodName:setHeader:[entry.getKey(), entry.getValue().get(0)] @AT@ 8194 @LENGTH@ 23
------------------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 8194 @LENGTH@ 16
------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 8194 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@entry.getValue().get(0) @AT@ 8211 @LENGTH@ 6
---------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 8215 @LENGTH@ 1
---UPD Block@@ThenBody:{  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @TO@ ElseBody:{  exchange.getIn().setHeader(entry.getKey(),entry.getValue());} @AT@ 7847 @LENGTH@ 125


UPD VariableDeclarationStatement@@Endpoint endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,SUBSCRIPTION_URI)); @TO@ Endpoint endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,SUBSCRIPTION_URI)); @AT@ 2118 @LENGTH@ 110
---UPD VariableDeclarationFragment@@endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,SUBSCRIPTION_URI)) @TO@ endpoint=context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,SUBSCRIPTION_URI)) @AT@ 2127 @LENGTH@ 100
------UPD MethodInvocation@@context.hasEndpoint(String.format("google-pubsub:%s:%s:1",PROJECT_ID,SUBSCRIPTION_URI)) @TO@ context.hasEndpoint(String.format("google-pubsub:%s:%s",PROJECT_ID,SUBSCRIPTION_URI)) @AT@ 2138 @LENGTH@ 89
---------UPD SimpleName@@MethodName:hasEndpoint:[String.format("google-pubsub:%s:%s:1",PROJECT_ID,SUBSCRIPTION_URI)] @TO@ MethodName:hasEndpoint:[String.format("google-pubsub:%s:%s",PROJECT_ID,SUBSCRIPTION_URI)] @AT@ 2146 @LENGTH@ 81
------------UPD MethodInvocation@@String.format("google-pubsub:%s:%s:1",PROJECT_ID,SUBSCRIPTION_URI) @TO@ String.format("google-pubsub:%s:%s",PROJECT_ID,SUBSCRIPTION_URI) @AT@ 2158 @LENGTH@ 68
---------------UPD SimpleName@@MethodName:format:["google-pubsub:%s:%s:1", PROJECT_ID, SUBSCRIPTION_URI] @TO@ MethodName:format:["google-pubsub:%s:%s", PROJECT_ID, SUBSCRIPTION_URI] @AT@ 2165 @LENGTH@ 61
------------------UPD StringLiteral@@"google-pubsub:%s:%s:1" @TO@ "google-pubsub:%s:%s" @AT@ 2172 @LENGTH@ 23


INS IfStatement@@if (NullableWrapperConverters.supports(type.getType())) {  return false;} @TO@ MethodDeclaration@@protected, boolean, MethodName:shouldCreatePersistentEntityFor, TypeInformation<?> type,  @AT@ 3036 @LENGTH@ 77
---INS MethodInvocation@@NullableWrapperConverters.supports(type.getType()) @TO@ IfStatement@@if (NullableWrapperConverters.supports(type.getType())) {  return false;} @AT@ 3039 @LENGTH@ 50
------INS SimpleName@@Name:NullableWrapperConverters @TO@ MethodInvocation@@NullableWrapperConverters.supports(type.getType()) @AT@ 3039 @LENGTH@ 25
------INS SimpleName@@MethodName:supports:[type.getType()] @TO@ MethodInvocation@@NullableWrapperConverters.supports(type.getType()) @AT@ 3065 @LENGTH@ 24
---------INS MethodInvocation@@type.getType() @TO@ SimpleName@@MethodName:supports:[type.getType()] @AT@ 3074 @LENGTH@ 14
------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getType() @AT@ 3074 @LENGTH@ 4
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@type.getType() @AT@ 3079 @LENGTH@ 9
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (NullableWrapperConverters.supports(type.getType())) {  return false;} @AT@ 3091 @LENGTH@ 22
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 3096 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3103 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @TO@ TypeDeclaration@@UnwrappedMongoPersistentProperty, [MongoPersistentProperty] @AT@ 7168 @LENGTH@ 332
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7168 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7175 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7183 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7190 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 7190 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 7197 @LENGTH@ 3
---INS IfStatement@@if (this == obj) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7206 @LENGTH@ 38
------INS InfixExpression@@this == obj @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 7210 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ InfixExpression@@this == obj @AT@ 7210 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == obj @AT@ 7214 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@this == obj @AT@ 7218 @LENGTH@ 3
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 7223 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 7228 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 7235 @LENGTH@ 4
---INS IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7248 @LENGTH@ 71
------INS InfixExpression@@obj == null || getClass() != obj.getClass() @TO@ IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @AT@ 7252 @LENGTH@ 43
---------INS InfixExpression@@obj == null @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 7252 @LENGTH@ 11
------------INS SimpleName@@obj @TO@ InfixExpression@@obj == null @AT@ 7252 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@obj == null @AT@ 7255 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@obj == null @AT@ 7259 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 7263 @LENGTH@ 2
---------INS InfixExpression@@getClass() != obj.getClass() @TO@ InfixExpression@@obj == null || getClass() != obj.getClass() @AT@ 7267 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 7267 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 7277 @LENGTH@ 2
------------INS MethodInvocation@@obj.getClass() @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 7281 @LENGTH@ 14
---------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getClass() @AT@ 7281 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@obj.getClass() @AT@ 7285 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (obj == null || getClass() != obj.getClass()) {  return false;} @AT@ 7297 @LENGTH@ 22
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 7302 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 7309 @LENGTH@ 5
---INS VariableDeclarationStatement@@UnwrappedMongoPersistentProperty other=(UnwrappedMongoPersistentProperty)obj; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7323 @LENGTH@ 80
------INS SimpleType@@UnwrappedMongoPersistentProperty @TO@ VariableDeclarationStatement@@UnwrappedMongoPersistentProperty other=(UnwrappedMongoPersistentProperty)obj; @AT@ 7323 @LENGTH@ 32
------INS VariableDeclarationFragment@@other=(UnwrappedMongoPersistentProperty)obj @TO@ VariableDeclarationStatement@@UnwrappedMongoPersistentProperty other=(UnwrappedMongoPersistentProperty)obj; @AT@ 7356 @LENGTH@ 46
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=(UnwrappedMongoPersistentProperty)obj @AT@ 7356 @LENGTH@ 5
---------INS CastExpression@@(UnwrappedMongoPersistentProperty)obj @TO@ VariableDeclarationFragment@@other=(UnwrappedMongoPersistentProperty)obj @AT@ 7364 @LENGTH@ 38
------------INS SimpleType@@UnwrappedMongoPersistentProperty @TO@ CastExpression@@(UnwrappedMongoPersistentProperty)obj @AT@ 7365 @LENGTH@ 32
------------INS SimpleName@@obj @TO@ CastExpression@@(UnwrappedMongoPersistentProperty)obj @AT@ 7399 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 7407 @LENGTH@ 90
------INS InfixExpression@@Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @TO@ ReturnStatement@@InfixExpression:Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @AT@ 7414 @LENGTH@ 82
---------INS MethodInvocation@@Objects.equals(delegate,other.delegate) @TO@ InfixExpression@@Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @AT@ 7414 @LENGTH@ 40
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(delegate,other.delegate) @AT@ 7414 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[delegate, other.delegate] @TO@ MethodInvocation@@Objects.equals(delegate,other.delegate) @AT@ 7422 @LENGTH@ 32
---------------INS SimpleName@@delegate @TO@ SimpleName@@MethodName:equals:[delegate, other.delegate] @AT@ 7429 @LENGTH@ 8
---------------INS QualifiedName@@other.delegate @TO@ SimpleName@@MethodName:equals:[delegate, other.delegate] @AT@ 7439 @LENGTH@ 14
------------------INS SimpleName@@other @TO@ QualifiedName@@other.delegate @AT@ 7439 @LENGTH@ 5
------------------INS SimpleName@@delegate @TO@ QualifiedName@@other.delegate @AT@ 7445 @LENGTH@ 8
---------INS Operator@@&& @TO@ InfixExpression@@Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @AT@ 7454 @LENGTH@ 2
---------INS MethodInvocation@@Objects.equals(context,other.context) @TO@ InfixExpression@@Objects.equals(delegate,other.delegate) && Objects.equals(context,other.context) @AT@ 7458 @LENGTH@ 38
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(context,other.context) @AT@ 7458 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[context, other.context] @TO@ MethodInvocation@@Objects.equals(context,other.context) @AT@ 7466 @LENGTH@ 30
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:equals:[context, other.context] @AT@ 7473 @LENGTH@ 7
---------------INS QualifiedName@@other.context @TO@ SimpleName@@MethodName:equals:[context, other.context] @AT@ 7482 @LENGTH@ 13
------------------INS SimpleName@@other @TO@ QualifiedName@@other.context @AT@ 7482 @LENGTH@ 5
------------------INS SimpleName@@context @TO@ QualifiedName@@other.context @AT@ 7488 @LENGTH@ 7


UPD IfStatement@@if ((dirService != null) && (dirService.getChangeLog().isEnabled())) {  long revision=dirService.getChangeLog().getCurrentRevision();  LOG.debug("Create revision {}",revision);  return revision;} @TO@ if (dirService != null && dirService.getChangeLog().isEnabled()) {  long revision=dirService.getChangeLog().getCurrentRevision();  LOG.debug("Create revision {}",revision);  return revision;} @AT@ 10751 @LENGTH@ 256
---UPD InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @TO@ dirService != null && dirService.getChangeLog().isEnabled() @AT@ 10755 @LENGTH@ 63
------DEL ParenthesizedExpression@@(dirService != null) @AT@ 10755 @LENGTH@ 20
---------DEL InfixExpression@@dirService != null @AT@ 10756 @LENGTH@ 18
------INS InfixExpression@@dirService != null @TO@ InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @AT@ 10755 @LENGTH@ 18
---------MOV SimpleName@@dirService @TO@ InfixExpression@@dirService != null @AT@ 10756 @LENGTH@ 10
---------MOV Operator@@!= @TO@ InfixExpression@@dirService != null @AT@ 10766 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@dirService != null @AT@ 10770 @LENGTH@ 4
------INS MethodInvocation@@dirService.getChangeLog().isEnabled() @TO@ InfixExpression@@(dirService != null) && (dirService.getChangeLog().isEnabled()) @AT@ 10777 @LENGTH@ 37
---------MOV MethodInvocation@@MethodName:getChangeLog:[] @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 25
---------MOV SimpleName@@Name:dirService @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 10
---------MOV SimpleName@@MethodName:isEnabled:[] @TO@ MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10806 @LENGTH@ 11
------DEL ParenthesizedExpression@@(dirService.getChangeLog().isEnabled()) @AT@ 10779 @LENGTH@ 39
---------DEL MethodInvocation@@dirService.getChangeLog().isEnabled() @AT@ 10780 @LENGTH@ 37


UPD TypeDeclaration@@Wrapper, [HttpHandler] @TO@ [static]Wrapper, [HttpHandler] @AT@ 2992 @LENGTH@ 425
---INS Modifier@@static @TO@ TypeDeclaration@@Wrapper, [HttpHandler] @AT@ 2986 @LENGTH@ 6


UPD IfStatement@@if ((sourceDirectory != null) && (!sourceDirectoryIndexed)) {  this.setSourceDirectory(sourceDirectory);  add(getSourceDirectory());  sourceDirectoryIndexed=true;} @TO@ if (sourceDirectory != null && !sourceDirectoryIndexed) {  this.setSourceDirectory(sourceDirectory);  add(getSourceDirectory());  sourceDirectoryIndexed=true;} @AT@ 2512 @LENGTH@ 207
---UPD InfixExpression@@(sourceDirectory != null) && (!sourceDirectoryIndexed) @TO@ sourceDirectory != null && !sourceDirectoryIndexed @AT@ 2516 @LENGTH@ 54
------DEL ParenthesizedExpression@@(sourceDirectory != null) @AT@ 2516 @LENGTH@ 25
---------DEL InfixExpression@@sourceDirectory != null @AT@ 2517 @LENGTH@ 23
------INS InfixExpression@@sourceDirectory != null @TO@ InfixExpression@@(sourceDirectory != null) && (!sourceDirectoryIndexed) @AT@ 2516 @LENGTH@ 23
---------MOV SimpleName@@sourceDirectory @TO@ InfixExpression@@sourceDirectory != null @AT@ 2517 @LENGTH@ 15
---------MOV Operator@@!= @TO@ InfixExpression@@sourceDirectory != null @AT@ 2532 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@sourceDirectory != null @AT@ 2536 @LENGTH@ 4
------INS PrefixExpression@@!sourceDirectoryIndexed @TO@ InfixExpression@@(sourceDirectory != null) && (!sourceDirectoryIndexed) @AT@ 2543 @LENGTH@ 23
---------MOV Operator@@! @TO@ PrefixExpression@@!sourceDirectoryIndexed @AT@ 2546 @LENGTH@ 1
---------MOV SimpleName@@sourceDirectoryIndexed @TO@ PrefixExpression@@!sourceDirectoryIndexed @AT@ 2547 @LENGTH@ 22
------DEL ParenthesizedExpression@@(!sourceDirectoryIndexed) @AT@ 2545 @LENGTH@ 25
---------DEL PrefixExpression@@!sourceDirectoryIndexed @AT@ 2546 @LENGTH@ 23


UPD ReturnStatement@@CastExpression:(ByteCodeForm)byteCodeArray[opcode] @TO@ ArrayAccess:byteCodeArray[opcode] @AT@ 22472 @LENGTH@ 44
---DEL CastExpression@@(ByteCodeForm)byteCodeArray[opcode] @AT@ 22479 @LENGTH@ 36
------DEL SimpleType@@ByteCodeForm @AT@ 22480 @LENGTH@ 12
------DEL ArrayAccess@@byteCodeArray[opcode] @AT@ 22494 @LENGTH@ 21
---INS ArrayAccess@@byteCodeArray[opcode] @TO@ ReturnStatement@@CastExpression:(ByteCodeForm)byteCodeArray[opcode] @AT@ 22503 @LENGTH@ 21
------MOV SimpleName@@byteCodeArray @TO@ ArrayAccess@@byteCodeArray[opcode] @AT@ 22494 @LENGTH@ 13
------MOV SimpleName@@opcode @TO@ ArrayAccess@@byteCodeArray[opcode] @AT@ 22508 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @TO@ TypeDeclaration@@[public]FileWriterWithEncodingTest,  @AT@ 3514 @LENGTH@ 408
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3514 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3521 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorAppend_File_existingFile_withContent @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3526 @LENGTH@ 47
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3583 @LENGTH@ 9
---INS TryStatement@@try (FileWriter fw1=new FileWriter(file1)){  fw1.write("ABcd");}  @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3603 @LENGTH@ 87
------INS VariableDeclarationExpression@@FileWriter fw1=new FileWriter(file1) @TO@ TryStatement@@try (FileWriter fw1=new FileWriter(file1)){  fw1.write("ABcd");}  @AT@ 3608 @LENGTH@ 38
---------INS SimpleType@@FileWriter @TO@ VariableDeclarationExpression@@FileWriter fw1=new FileWriter(file1) @AT@ 3608 @LENGTH@ 10
---------INS VariableDeclarationFragment@@fw1=new FileWriter(file1) @TO@ VariableDeclarationExpression@@FileWriter fw1=new FileWriter(file1) @AT@ 3619 @LENGTH@ 27
------------INS SimpleName@@fw1 @TO@ VariableDeclarationFragment@@fw1=new FileWriter(file1) @AT@ 3619 @LENGTH@ 3
------------INS ClassInstanceCreation@@FileWriter[file1] @TO@ VariableDeclarationFragment@@fw1=new FileWriter(file1) @AT@ 3625 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@FileWriter[file1] @AT@ 3625 @LENGTH@ 3
---------------INS SimpleType@@FileWriter @TO@ ClassInstanceCreation@@FileWriter[file1] @AT@ 3629 @LENGTH@ 10
---------------INS SimpleName@@file1 @TO@ ClassInstanceCreation@@FileWriter[file1] @AT@ 3640 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:fw1.write("ABcd") @TO@ TryStatement@@try (FileWriter fw1=new FileWriter(file1)){  fw1.write("ABcd");}  @AT@ 3662 @LENGTH@ 18
---------INS MethodInvocation@@fw1.write("ABcd") @TO@ ExpressionStatement@@MethodInvocation:fw1.write("ABcd") @AT@ 3662 @LENGTH@ 17
------------INS SimpleName@@Name:fw1 @TO@ MethodInvocation@@fw1.write("ABcd") @AT@ 3662 @LENGTH@ 3
------------INS SimpleName@@MethodName:write:["ABcd"] @TO@ MethodInvocation@@fw1.write("ABcd") @AT@ 3666 @LENGTH@ 13
---------------INS StringLiteral@@"ABcd" @TO@ SimpleName@@MethodName:write:["ABcd"] @AT@ 3672 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals(4,file1.length()) @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3699 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(4,file1.length()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(4,file1.length()) @AT@ 3699 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[4, file1.length()] @TO@ MethodInvocation@@assertEquals(4,file1.length()) @AT@ 3699 @LENGTH@ 31
------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[4, file1.length()] @AT@ 3712 @LENGTH@ 1
------------INS MethodInvocation@@file1.length() @TO@ SimpleName@@MethodName:assertEquals:[4, file1.length()] @AT@ 3715 @LENGTH@ 14
---------------INS SimpleName@@Name:file1 @TO@ MethodInvocation@@file1.length() @AT@ 3715 @LENGTH@ 5
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file1.length() @AT@ 3721 @LENGTH@ 8
---INS TryStatement@@try (FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true)){  fw1.write("XyZ");}  @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3741 @LENGTH@ 133
------INS VariableDeclarationExpression@@FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @TO@ TryStatement@@try (FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true)){  fw1.write("XyZ");}  @AT@ 3746 @LENGTH@ 85
---------INS SimpleType@@FileWriterWithEncoding @TO@ VariableDeclarationExpression@@FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @AT@ 3746 @LENGTH@ 22
---------INS VariableDeclarationFragment@@fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @TO@ VariableDeclarationExpression@@FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @AT@ 3769 @LENGTH@ 62
------------INS SimpleName@@fw1 @TO@ VariableDeclarationFragment@@fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @AT@ 3769 @LENGTH@ 3
------------INS ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @TO@ VariableDeclarationFragment@@fw1=new FileWriterWithEncoding(file1,defaultEncoding,true) @AT@ 3775 @LENGTH@ 56
---------------INS New@@new @TO@ ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @AT@ 3775 @LENGTH@ 3
---------------INS SimpleType@@FileWriterWithEncoding @TO@ ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @AT@ 3779 @LENGTH@ 22
---------------INS SimpleName@@file1 @TO@ ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @AT@ 3802 @LENGTH@ 5
---------------INS SimpleName@@defaultEncoding @TO@ ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @AT@ 3809 @LENGTH@ 15
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@FileWriterWithEncoding[file1, defaultEncoding, true] @AT@ 3826 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:fw1.write("XyZ") @TO@ TryStatement@@try (FileWriterWithEncoding fw1=new FileWriterWithEncoding(file1,defaultEncoding,true)){  fw1.write("XyZ");}  @AT@ 3847 @LENGTH@ 17
---------INS MethodInvocation@@fw1.write("XyZ") @TO@ ExpressionStatement@@MethodInvocation:fw1.write("XyZ") @AT@ 3847 @LENGTH@ 16
------------INS SimpleName@@Name:fw1 @TO@ MethodInvocation@@fw1.write("XyZ") @AT@ 3847 @LENGTH@ 3
------------INS SimpleName@@MethodName:write:["XyZ"] @TO@ MethodInvocation@@fw1.write("XyZ") @AT@ 3851 @LENGTH@ 12
---------------INS StringLiteral@@"XyZ" @TO@ SimpleName@@MethodName:write:["XyZ"] @AT@ 3857 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(7,file1.length()) @TO@ MethodDeclaration@@public, void, MethodName:constructorAppend_File_existingFile_withContent, Exception,  @AT@ 3884 @LENGTH@ 32
------INS MethodInvocation@@assertEquals(7,file1.length()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(7,file1.length()) @AT@ 3884 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:[7, file1.length()] @TO@ MethodInvocation@@assertEquals(7,file1.length()) @AT@ 3884 @LENGTH@ 31
------------INS NumberLiteral@@7 @TO@ SimpleName@@MethodName:assertEquals:[7, file1.length()] @AT@ 3897 @LENGTH@ 1
------------INS MethodInvocation@@file1.length() @TO@ SimpleName@@MethodName:assertEquals:[7, file1.length()] @AT@ 3900 @LENGTH@ 14
---------------INS SimpleName@@Name:file1 @TO@ MethodInvocation@@file1.length() @AT@ 3900 @LENGTH@ 5
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@file1.length() @AT@ 3906 @LENGTH@ 8


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="3.9.0",scheme="aws-secrets-manager",title="AWS Secrets Manager",syntax="aws-secrets-manager://label",producerOnly=true,category={Category.CLOUD,Category.MANAGEMENT}), public]SecretsManagerEndpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(firstVersion="3.9.0",scheme="aws-secrets-manager",title="AWS Secrets Manager",syntax="aws-secrets-manager:label",producerOnly=true,category={Category.CLOUD,Category.MANAGEMENT}), public]SecretsManagerEndpoint, ScheduledPollEndpoint @AT@ 1448 @LENGTH@ 1762
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="3.9.0",scheme="aws-secrets-manager",title="AWS Secrets Manager",syntax="aws-secrets-manager://label",producerOnly=true,category={Category.CLOUD,Category.MANAGEMENT}) @TO@ @UriEndpoint(firstVersion="3.9.0",scheme="aws-secrets-manager",title="AWS Secrets Manager",syntax="aws-secrets-manager:label",producerOnly=true,category={Category.CLOUD,Category.MANAGEMENT}) @AT@ 1448 @LENGTH@ 225


INS MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), public]QueryMapperUnitTests,  @AT@ 46864 @LENGTH@ 335
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @AT@ 46859 @LENGTH@ 4
---INS SimpleName@@MethodName:mapsNullValueForFieldWithCustomTargetType @TO@ MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @AT@ 46864 @LENGTH@ 41
---INS VariableDeclarationStatement@@Query query=query(where("stringAsOid").is(null)); @TO@ MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @AT@ 46913 @LENGTH@ 51
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("stringAsOid").is(null)); @AT@ 46913 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("stringAsOid").is(null)) @TO@ VariableDeclarationStatement@@Query query=query(where("stringAsOid").is(null)); @AT@ 46919 @LENGTH@ 44
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("stringAsOid").is(null)) @AT@ 46919 @LENGTH@ 5
---------INS MethodInvocation@@query(where("stringAsOid").is(null)) @TO@ VariableDeclarationFragment@@query=query(where("stringAsOid").is(null)) @AT@ 46927 @LENGTH@ 36
------------INS SimpleName@@MethodName:query:[where("stringAsOid").is(null)] @TO@ MethodInvocation@@query(where("stringAsOid").is(null)) @AT@ 46927 @LENGTH@ 36
---------------INS MethodInvocation@@where("stringAsOid").is(null) @TO@ SimpleName@@MethodName:query:[where("stringAsOid").is(null)] @AT@ 46933 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:where:["stringAsOid"] @TO@ MethodInvocation@@where("stringAsOid").is(null) @AT@ 46933 @LENGTH@ 20
---------------------INS StringLiteral@@"stringAsOid" @TO@ MethodInvocation@@MethodName:where:["stringAsOid"] @AT@ 46939 @LENGTH@ 13
------------------INS SimpleName@@MethodName:is:[null] @TO@ MethodInvocation@@where("stringAsOid").is(null) @AT@ 46954 @LENGTH@ 8
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:is:[null] @AT@ 46957 @LENGTH@ 4
---INS VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)); @TO@ MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @AT@ 46968 @LENGTH@ 149
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)); @AT@ 46968 @LENGTH@ 17
------INS VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)); @AT@ 46986 @LENGTH@ 130
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @AT@ 46986 @LENGTH@ 8
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @AT@ 46997 @LENGTH@ 119
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @AT@ 46997 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)) @AT@ 47004 @LENGTH@ 112
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)] @AT@ 47020 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 47020 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 47026 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class)] @AT@ 47048 @LENGTH@ 67
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class) @AT@ 47048 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[NonIdFieldWithObjectIdTargetType.class] @TO@ MethodInvocation@@context.getPersistentEntity(NonIdFieldWithObjectIdTargetType.class) @AT@ 47056 @LENGTH@ 59
---------------------INS TypeLiteral@@NonIdFieldWithObjectIdTargetType.class @TO@ SimpleName@@MethodName:getPersistentEntity:[NonIdFieldWithObjectIdTargetType.class] @AT@ 47076 @LENGTH@ 38
---INS ExpressionStatement@@MethodInvocation:assertThat(document).isEqualTo(new org.bson.Document("stringAsOid",null)) @TO@ MethodDeclaration@@void, MethodName:mapsNullValueForFieldWithCustomTargetType,  @AT@ 47121 @LENGTH@ 75
------INS MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("stringAsOid",null)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document).isEqualTo(new org.bson.Document("stringAsOid",null)) @AT@ 47121 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:assertThat:[document] @TO@ MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("stringAsOid",null)) @AT@ 47121 @LENGTH@ 20
------------INS SimpleName@@document @TO@ MethodInvocation@@MethodName:assertThat:[document] @AT@ 47132 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEqualTo:[new org.bson.Document("stringAsOid",null)] @TO@ MethodInvocation@@assertThat(document).isEqualTo(new org.bson.Document("stringAsOid",null)) @AT@ 47142 @LENGTH@ 53
------------INS ClassInstanceCreation@@org.bson.Document["stringAsOid", null] @TO@ SimpleName@@MethodName:isEqualTo:[new org.bson.Document("stringAsOid",null)] @AT@ 47152 @LENGTH@ 42
---------------INS New@@new @TO@ ClassInstanceCreation@@org.bson.Document["stringAsOid", null] @AT@ 47152 @LENGTH@ 3
---------------INS SimpleType@@org.bson.Document @TO@ ClassInstanceCreation@@org.bson.Document["stringAsOid", null] @AT@ 47156 @LENGTH@ 17
---------------INS StringLiteral@@"stringAsOid" @TO@ ClassInstanceCreation@@org.bson.Document["stringAsOid", null] @AT@ 47174 @LENGTH@ 13
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@org.bson.Document["stringAsOid", null] @AT@ 47189 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:fieldLength=Integer.valueOf(resultVals.get(0)) @TO@ Assignment:fieldLength=Integer.parseInt(resultVals.get(0)) @AT@ 17810 @LENGTH@ 49
---UPD Assignment@@fieldLength=Integer.valueOf(resultVals.get(0)) @TO@ fieldLength=Integer.parseInt(resultVals.get(0)) @AT@ 17810 @LENGTH@ 48
------UPD MethodInvocation@@Integer.valueOf(resultVals.get(0)) @TO@ Integer.parseInt(resultVals.get(0)) @AT@ 17824 @LENGTH@ 34
---------UPD SimpleName@@MethodName:valueOf:[resultVals.get(0)] @TO@ MethodName:parseInt:[resultVals.get(0)] @AT@ 17832 @LENGTH@ 26


UPD MethodDeclaration@@static, BiFunction<TypeSystem,MapAccessor,?>, T, MethodName:getAndDecorateMappingFunction, Neo4jMappingContext mappingContext, Class<T> domainType, @Nullable Class<?> resultType,  @TO@ static, Supplier<BiFunction<TypeSystem,MapAccessor,?>>, T, MethodName:getAndDecorateMappingFunction, Neo4jMappingContext mappingContext, Class<T> domainType, @Nullable Class<?> resultType,  @AT@ 9173 @LENGTH@ 611
---DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 9184 @LENGTH@ 38
---INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ MethodDeclaration@@static, BiFunction<TypeSystem,MapAccessor,?>, T, MethodName:getAndDecorateMappingFunction, Neo4jMappingContext mappingContext, Class<T> domainType, @Nullable Class<?> resultType,  @AT@ 9220 @LENGTH@ 48
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 9220 @LENGTH@ 8
------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 9229 @LENGTH@ 38
---------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 9184 @LENGTH@ 10
---------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 9195 @LENGTH@ 10
---------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 9207 @LENGTH@ 11
---------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 9220 @LENGTH@ 1
---INS ReturnStatement@@LambdaExpression:() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @TO@ MethodDeclaration@@static, BiFunction<TypeSystem,MapAccessor,?>, T, MethodName:getAndDecorateMappingFunction, Neo4jMappingContext mappingContext, Class<T> domainType, @Nullable Class<?> resultType,  @AT@ 9505 @LENGTH@ 350
------INS LambdaExpression@@() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @TO@ ReturnStatement@@LambdaExpression:() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @AT@ 9512 @LENGTH@ 342
---------MOV VariableDeclarationStatement@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType); @TO@ LambdaExpression@@() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @AT@ 9459 @LENGTH@ 119
---------MOV IfStatement@@if (resultType != null && domainType != resultType && !resultType.isInterface()) {  mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);} @TO@ LambdaExpression@@() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @AT@ 9581 @LENGTH@ 174
---------INS ReturnStatement@@SimpleName:mappingFunction @TO@ LambdaExpression@@() -> {
  BiFunction<TypeSystem,MapAccessor,?> mappingFunction=mappingContext.getRequiredMappingFunctionFor(domainType);
  if (resultType != null && domainType != resultType && !resultType.isInterface()) {
    mappingFunction=EntityInstanceWithSource.decorateMappingFunction(mappingFunction);
  }
  return mappingFunction;
}
 @AT@ 9827 @LENGTH@ 23
------------MOV SimpleName@@mappingFunction @TO@ ReturnStatement@@SimpleName:mappingFunction @AT@ 9765 @LENGTH@ 15
---DEL ReturnStatement@@SimpleName:mappingFunction @AT@ 9758 @LENGTH@ 23


INS IfStatement@@if (this.isRelationshipPropertiesEntity()) {  Supplier<String> messageSupplier=() -> String.format("The class `%s` for the properties of a relationship " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",this.getUnderlyingClass().getName());  Assert.state(this.getIdDescription() != null && this.getIdDescription().isInternallyGeneratedId(),messageSupplier);} @TO@ MethodDeclaration@@private, void, MethodName:verifyAssociationsWithProperties,  @AT@ 8382 @LENGTH@ 487
---MOV MethodInvocation@@relationship.hasRelationshipProperties() @TO@ IfStatement@@if (this.isRelationshipPropertiesEntity()) {  Supplier<String> messageSupplier=() -> String.format("The class `%s` for the properties of a relationship " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",this.getUnderlyingClass().getName());  Assert.state(this.getIdDescription() != null && this.getIdDescription().isInternallyGeneratedId(),messageSupplier);} @AT@ 8610 @LENGTH@ 40
------INS ThisExpression@@this @TO@ MethodInvocation@@relationship.hasRelationshipProperties() @AT@ 8386 @LENGTH@ 4
---MOV Block@@ThenBody:{  NodeDescription<?> relationshipPropertiesEntity=relationship.getRelationshipPropertiesEntity();  Supplier<String> messageSupplier=() -> String.format("The target class `%s` for the properties of the relationship `%s` " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",relationshipPropertiesEntity.getUnderlyingClass().getName(),relationship.getType());  Assert.state(relationshipPropertiesEntity.getIdDescription() != null && relationshipPropertiesEntity.getIdDescription().isInternallyGeneratedId(),messageSupplier);} @TO@ IfStatement@@if (this.isRelationshipPropertiesEntity()) {  Supplier<String> messageSupplier=() -> String.format("The class `%s` for the properties of a relationship " + "is missing a property for the generated, internal ID (`@Id @GeneratedValue Long id`) " + "which is needed for safely updating properties.",this.getUnderlyingClass().getName());  Assert.state(this.getIdDescription() != null && this.getIdDescription().isInternallyGeneratedId(),messageSupplier);} @AT@ 8652 @LENGTH@ 674


UPD TypeDeclaration@@[@Configuration, @EnableWebSocketMessageBroker, static]WebSocketConfig, AbstractWebSocketMessageBrokerConfigurer @TO@ [@Configuration, @EnableWebSocketMessageBroker, static]WebSocketConfig, [WebSocketMessageBrokerConfigurer] @AT@ 5173 @LENGTH@ 555
---UPD SimpleType@@AbstractWebSocketMessageBrokerConfigurer @TO@ WebSocketMessageBrokerConfigurer @AT@ 5257 @LENGTH@ 40


UPD MethodDeclaration@@Function<Object,Value>, MethodName:getOptionalWritingConverter,  @TO@ Neo4jPersistentPropertyConverter<?>, MethodName:getOptionalConverter,  @AT@ 2549 @LENGTH@ 30
---UPD ParameterizedType@@Function<Object,Value> @TO@ Neo4jPersistentPropertyConverter<?> @AT@ 2525 @LENGTH@ 23
------UPD SimpleType@@Function @TO@ Neo4jPersistentPropertyConverter @AT@ 2525 @LENGTH@ 8
------DEL SimpleType@@Object @AT@ 2534 @LENGTH@ 6
------DEL SimpleType@@Value @AT@ 2542 @LENGTH@ 5
------INS WildcardType@@? @TO@ ParameterizedType@@Function<Object,Value> @AT@ 2576 @LENGTH@ 1
---UPD SimpleName@@MethodName:getOptionalWritingConverter @TO@ MethodName:getOptionalConverter @AT@ 2549 @LENGTH@ 27


UPD FieldDeclaration@@private, static, final, Pattern, [POSITIONAL_PARAMETER_PATTERN=Pattern.compile("\\.\\$(\\[.*?\\])?|\\.\\d+")] @TO@ private, static, final, Pattern, [POSITIONAL_PARAMETER_PATTERN=Pattern.compile("\\.\\$(\\[.*?\\])?")] @AT@ 30569 @LENGTH@ 106
---UPD VariableDeclarationFragment@@POSITIONAL_PARAMETER_PATTERN=Pattern.compile("\\.\\$(\\[.*?\\])?|\\.\\d+") @TO@ POSITIONAL_PARAMETER_PATTERN=Pattern.compile("\\.\\$(\\[.*?\\])?") @AT@ 30598 @LENGTH@ 76
------UPD MethodInvocation@@Pattern.compile("\\.\\$(\\[.*?\\])?|\\.\\d+") @TO@ Pattern.compile("\\.\\$(\\[.*?\\])?") @AT@ 30629 @LENGTH@ 45
---------UPD SimpleName@@MethodName:compile:["\\.\\$(\\[.*?\\])?|\\.\\d+"] @TO@ MethodName:compile:["\\.\\$(\\[.*?\\])?"] @AT@ 30637 @LENGTH@ 37
------------UPD StringLiteral@@"\\.\\$(\\[.*?\\])?|\\.\\d+" @TO@ "\\.\\$(\\[.*?\\])?" @AT@ 30645 @LENGTH@ 28


INS IfStatement@@if (collection == null) {  return null;} @TO@ MethodDeclaration@@public, static, Class<?>, MethodName:findCommonElementType, Iterable<?> collection,  @AT@ 2274 @LENGTH@ 45
---INS InfixExpression@@collection == null @TO@ IfStatement@@if (collection == null) {  return null;} @AT@ 2278 @LENGTH@ 18
------INS SimpleName@@collection @TO@ InfixExpression@@collection == null @AT@ 2278 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@collection == null @AT@ 2288 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@collection == null @AT@ 2292 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (collection == null) {  return null;} @AT@ 2298 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 2303 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2310 @LENGTH@ 4


DEL FieldDeclaration@@private, int, [port] @AT@ 1737 @LENGTH@ 17
---DEL Modifier@@private @AT@ 1737 @LENGTH@ 7
---DEL PrimitiveType@@int @AT@ 1745 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port @AT@ 1749 @LENGTH@ 4
------DEL SimpleName@@port @AT@ 1749 @LENGTH@ 4


UPD IfStatement@@if (outputDest.exists()) {  outputDest.delete();} @TO@ if (outputDest.exists()) {  boolean result=outputDest.delete();  if (!result) {    LOG.error("Failed to delete output destination {}",outputDest);  }} @AT@ 6137 @LENGTH@ 77
---UPD Block@@ThenBody:{  outputDest.delete();} @TO@ ThenBody:{  boolean result=outputDest.delete();  if (!result) {    LOG.error("Failed to delete output destination {}",outputDest);  }} @AT@ 6162 @LENGTH@ 52
------DEL ExpressionStatement@@MethodInvocation:outputDest.delete() @AT@ 6180 @LENGTH@ 20
---------DEL MethodInvocation@@outputDest.delete() @AT@ 6180 @LENGTH@ 19
------INS VariableDeclarationStatement@@boolean result=outputDest.delete(); @TO@ Block@@ThenBody:{  outputDest.delete();} @AT@ 6329 @LENGTH@ 37
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=outputDest.delete(); @AT@ 6329 @LENGTH@ 7
---------INS VariableDeclarationFragment@@result=outputDest.delete() @TO@ VariableDeclarationStatement@@boolean result=outputDest.delete(); @AT@ 6337 @LENGTH@ 28
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=outputDest.delete() @AT@ 6337 @LENGTH@ 6
------------INS MethodInvocation@@outputDest.delete() @TO@ VariableDeclarationFragment@@result=outputDest.delete() @AT@ 6346 @LENGTH@ 19
---------------MOV SimpleName@@Name:outputDest @TO@ MethodInvocation@@outputDest.delete() @AT@ 6180 @LENGTH@ 10
---------------MOV SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@outputDest.delete() @AT@ 6191 @LENGTH@ 8
------INS IfStatement@@if (!result) {  LOG.error("Failed to delete output destination {}",outputDest);} @TO@ Block@@ThenBody:{  outputDest.delete();} @AT@ 6383 @LENGTH@ 117
---------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("Failed to delete output destination {}",outputDest);} @AT@ 6387 @LENGTH@ 7
------------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 6387 @LENGTH@ 1
------------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 6388 @LENGTH@ 6
---------INS Block@@ThenBody:{  LOG.error("Failed to delete output destination {}",outputDest);} @TO@ IfStatement@@if (!result) {  LOG.error("Failed to delete output destination {}",outputDest);} @AT@ 6396 @LENGTH@ 104
------------INS ExpressionStatement@@MethodInvocation:LOG.error("Failed to delete output destination {}",outputDest) @TO@ Block@@ThenBody:{  LOG.error("Failed to delete output destination {}",outputDest);} @AT@ 6418 @LENGTH@ 64
---------------INS MethodInvocation@@LOG.error("Failed to delete output destination {}",outputDest) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("Failed to delete output destination {}",outputDest) @AT@ 6418 @LENGTH@ 63
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("Failed to delete output destination {}",outputDest) @AT@ 6418 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["Failed to delete output destination {}", outputDest] @TO@ MethodInvocation@@LOG.error("Failed to delete output destination {}",outputDest) @AT@ 6422 @LENGTH@ 59
---------------------INS StringLiteral@@"Failed to delete output destination {}" @TO@ SimpleName@@MethodName:error:["Failed to delete output destination {}", outputDest] @AT@ 6428 @LENGTH@ 40
---------------------INS SimpleName@@outputDest @TO@ SimpleName@@MethodName:error:["Failed to delete output destination {}", outputDest] @AT@ 6470 @LENGTH@ 10


DEL MethodDeclaration@@public, void, MethodName:build, Exception,  @AT@ 1823 @LENGTH@ 45
---DEL Modifier@@public @AT@ 1823 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1830 @LENGTH@ 4
---DEL SimpleName@@MethodName:build @AT@ 1835 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1850 @LENGTH@ 9


DEL VariableDeclarationStatement@@Statement stmt=null; @AT@ 7713 @LENGTH@ 22
---DEL SimpleType@@Statement @AT@ 7713 @LENGTH@ 9
---DEL VariableDeclarationFragment@@stmt=null @AT@ 7723 @LENGTH@ 11
------DEL SimpleName@@stmt @AT@ 7723 @LENGTH@ 4
------DEL NullLiteral@@null @AT@ 7730 @LENGTH@ 4


UPD MethodDeclaration@@private, byte[], MethodName:createResponseAuth, HashMap<String,byte[]> parsedDigestResponse,  @TO@ private, byte[], MethodName:createResponseAuth,  @AT@ 12098 @LENGTH@ 463
---DEL SingleVariableDeclaration@@HashMap<String,byte[]> parsedDigestResponse @AT@ 12132 @LENGTH@ 44
------DEL ParameterizedType@@HashMap<String,byte[]> @AT@ 12132 @LENGTH@ 23
---------DEL SimpleType@@HashMap @AT@ 12132 @LENGTH@ 7
---------DEL SimpleType@@String @AT@ 12140 @LENGTH@ 6
---------DEL ArrayType@@byte[] @AT@ 12148 @LENGTH@ 6
------------DEL PrimitiveType@@byte @AT@ 12148 @LENGTH@ 4
------DEL SimpleName@@parsedDigestResponse @AT@ 12156 @LENGTH@ 20


UPD IfStatement@@if (o == null) {  return false;} @TO@ if (!(o instanceof TransactionOnCompletion) || o == null) {  return false;} @AT@ 2005 @LENGTH@ 52
---INS InfixExpression@@!(o instanceof TransactionOnCompletion) || o == null @TO@ IfStatement@@if (o == null) {  return false;} @AT@ 2009 @LENGTH@ 52
------INS PrefixExpression@@!(o instanceof TransactionOnCompletion) @TO@ InfixExpression@@!(o instanceof TransactionOnCompletion) || o == null @AT@ 2009 @LENGTH@ 39
---------INS Operator@@! @TO@ PrefixExpression@@!(o instanceof TransactionOnCompletion) @AT@ 2009 @LENGTH@ 1
---------INS ParenthesizedExpression@@(o instanceof TransactionOnCompletion) @TO@ PrefixExpression@@!(o instanceof TransactionOnCompletion) @AT@ 2010 @LENGTH@ 38
------------INS InstanceofExpression@@o instanceof TransactionOnCompletion @TO@ ParenthesizedExpression@@(o instanceof TransactionOnCompletion) @AT@ 2011 @LENGTH@ 36
---------------INS SimpleName@@o @TO@ InstanceofExpression@@o instanceof TransactionOnCompletion @AT@ 2011 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@o instanceof TransactionOnCompletion @AT@ 2013 @LENGTH@ 10
---------------INS SimpleType@@TransactionOnCompletion @TO@ InstanceofExpression@@o instanceof TransactionOnCompletion @AT@ 2024 @LENGTH@ 23
------INS Operator@@|| @TO@ InfixExpression@@!(o instanceof TransactionOnCompletion) || o == null @AT@ 2048 @LENGTH@ 2
------INS InfixExpression@@o == null @TO@ InfixExpression@@!(o instanceof TransactionOnCompletion) || o == null @AT@ 2052 @LENGTH@ 9
---------MOV SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 2009 @LENGTH@ 1
---------MOV Operator@@== @TO@ InfixExpression@@o == null @AT@ 2010 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 2014 @LENGTH@ 4
---DEL InfixExpression@@o == null @AT@ 2009 @LENGTH@ 9


UPD FieldDeclaration@@private, AccessDeniedHandler, [accessDeniedHandler=new BearerTokenAccessDeniedHandler()] @TO@ private, AccessDeniedHandler, [accessDeniedHandler=new DelegatingAccessDeniedHandler(new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())),new BearerTokenAccessDeniedHandler())] @AT@ 6657 @LENGTH@ 87
---UPD VariableDeclarationFragment@@accessDeniedHandler=new BearerTokenAccessDeniedHandler() @TO@ accessDeniedHandler=new DelegatingAccessDeniedHandler(new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())),new BearerTokenAccessDeniedHandler()) @AT@ 6685 @LENGTH@ 58
------DEL ClassInstanceCreation@@BearerTokenAccessDeniedHandler[] @AT@ 6707 @LENGTH@ 36
------INS ClassInstanceCreation@@DelegatingAccessDeniedHandler[new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())), new BearerTokenAccessDeniedHandler()] @TO@ VariableDeclarationFragment@@accessDeniedHandler=new BearerTokenAccessDeniedHandler() @AT@ 6971 @LENGTH@ 159
---------INS New@@new @TO@ ClassInstanceCreation@@DelegatingAccessDeniedHandler[new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())), new BearerTokenAccessDeniedHandler()] @AT@ 6971 @LENGTH@ 3
---------INS SimpleType@@DelegatingAccessDeniedHandler @TO@ ClassInstanceCreation@@DelegatingAccessDeniedHandler[new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())), new BearerTokenAccessDeniedHandler()] @AT@ 6975 @LENGTH@ 29
---------INS ClassInstanceCreation@@LinkedHashMap<>[Map.of(CsrfException.class,new AccessDeniedHandlerImpl())] @TO@ ClassInstanceCreation@@DelegatingAccessDeniedHandler[new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())), new BearerTokenAccessDeniedHandler()] @AT@ 7009 @LENGTH@ 79
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<>[Map.of(CsrfException.class,new AccessDeniedHandlerImpl())] @AT@ 7009 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashMap<> @TO@ ClassInstanceCreation@@LinkedHashMap<>[Map.of(CsrfException.class,new AccessDeniedHandlerImpl())] @AT@ 7013 @LENGTH@ 15
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<> @AT@ 7013 @LENGTH@ 13
------------INS MethodInvocation@@Map.of(CsrfException.class,new AccessDeniedHandlerImpl()) @TO@ ClassInstanceCreation@@LinkedHashMap<>[Map.of(CsrfException.class,new AccessDeniedHandlerImpl())] @AT@ 7029 @LENGTH@ 58
---------------INS SimpleName@@Name:Map @TO@ MethodInvocation@@Map.of(CsrfException.class,new AccessDeniedHandlerImpl()) @AT@ 7029 @LENGTH@ 3
---------------INS SimpleName@@MethodName:of:[CsrfException.class, new AccessDeniedHandlerImpl()] @TO@ MethodInvocation@@Map.of(CsrfException.class,new AccessDeniedHandlerImpl()) @AT@ 7033 @LENGTH@ 54
------------------INS TypeLiteral@@CsrfException.class @TO@ SimpleName@@MethodName:of:[CsrfException.class, new AccessDeniedHandlerImpl()] @AT@ 7036 @LENGTH@ 19
------------------INS ClassInstanceCreation@@AccessDeniedHandlerImpl[] @TO@ SimpleName@@MethodName:of:[CsrfException.class, new AccessDeniedHandlerImpl()] @AT@ 7057 @LENGTH@ 29
---------------------INS New@@new @TO@ ClassInstanceCreation@@AccessDeniedHandlerImpl[] @AT@ 7057 @LENGTH@ 3
---------------------INS SimpleType@@AccessDeniedHandlerImpl @TO@ ClassInstanceCreation@@AccessDeniedHandlerImpl[] @AT@ 7061 @LENGTH@ 23
---------INS ClassInstanceCreation@@BearerTokenAccessDeniedHandler[] @TO@ ClassInstanceCreation@@DelegatingAccessDeniedHandler[new LinkedHashMap<>(Map.of(CsrfException.class,new AccessDeniedHandlerImpl())), new BearerTokenAccessDeniedHandler()] @AT@ 7093 @LENGTH@ 36
------------MOV New@@new @TO@ ClassInstanceCreation@@BearerTokenAccessDeniedHandler[] @AT@ 6707 @LENGTH@ 3
------------MOV SimpleType@@BearerTokenAccessDeniedHandler @TO@ ClassInstanceCreation@@BearerTokenAccessDeniedHandler[] @AT@ 6711 @LENGTH@ 30


INS FieldDeclaration@@private, boolean, [skip] @TO@ TypeDeclaration@@[@Mojo(name="package",requiresDependencyResolution=ResolutionScope.COMPILE_PLUS_RUNTIME,defaultPhase=LifecyclePhase.PACKAGE), public]PackageServerMojo, AbstractProvisionServerMojo @AT@ 6568 @LENGTH@ 21
---INS Modifier@@private @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6568 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6576 @LENGTH@ 7
---INS VariableDeclarationFragment@@skip @TO@ FieldDeclaration@@private, boolean, [skip] @AT@ 6584 @LENGTH@ 4
------INS SimpleName@@skip @TO@ VariableDeclarationFragment@@skip @AT@ 6584 @LENGTH@ 4


UPD MethodDeclaration@@protected, PreparedQuery<T>, T, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, Neo4jQueryType queryType, BiFunction<TypeSystem,MapAccessor,?> mappingFunction, UnaryOperator<Integer> limitModifier,  @TO@ protected, PreparedQuery<T>, T, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, Neo4jQueryType queryType, Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction, UnaryOperator<Integer> limitModifier,  @AT@ 2323 @LENGTH@ 1730
---UPD SingleVariableDeclaration@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 2514 @LENGTH@ 54
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2514 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 2550 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2550 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2559 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2514 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2525 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2537 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2550 @LENGTH@ 1


DEL MethodDeclaration@@private, static, void, MethodName:parseEndDocument, final XMLStreamReader reader, XMLStreamException,  @AT@ 42713 @LENGTH@ 843
---DEL Modifier@@private @AT@ 42713 @LENGTH@ 7
---DEL Modifier@@static @AT@ 42721 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 42728 @LENGTH@ 4
---DEL SimpleName@@MethodName:parseEndDocument @AT@ 42733 @LENGTH@ 16
---DEL SingleVariableDeclaration@@final XMLStreamReader reader @AT@ 42750 @LENGTH@ 28
------DEL Modifier@@final @AT@ 42750 @LENGTH@ 5
------DEL SimpleType@@XMLStreamReader @AT@ 42756 @LENGTH@ 15
------DEL SimpleName@@reader @AT@ 42772 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 42787 @LENGTH@ 18
---DEL WhileStatement@@while (reader.hasNext()) {switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 42816 @LENGTH@ 718
------DEL MethodInvocation@@reader.hasNext() @AT@ 42823 @LENGTH@ 16
---------DEL SimpleName@@Name:reader @AT@ 42823 @LENGTH@ 6
---------DEL SimpleName@@MethodName:hasNext:[] @AT@ 42830 @LENGTH@ 9
------DEL Block@@WhileBody:{switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{      return;    }case XMLStreamConstants.CHARACTERS:{    if (!reader.isWhiteSpace()) {      throw unexpectedContent(reader);    }    break;  }case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{  break;}default :{throw unexpectedContent(reader);}}} @AT@ 42841 @LENGTH@ 693
---------DEL SwitchStatement@@switch (reader.next()) {case XMLStreamConstants.END_DOCUMENT:{    return;  }case XMLStreamConstants.CHARACTERS:{  if (!reader.isWhiteSpace()) {    throw unexpectedContent(reader);  }  break;}case XMLStreamConstants.COMMENT:case XMLStreamConstants.SPACE:{break;}default :{throw unexpectedContent(reader);}} @AT@ 42855 @LENGTH@ 669
------------DEL MethodInvocation@@reader.next() @AT@ 42863 @LENGTH@ 13
---------------DEL SimpleName@@Name:reader @AT@ 42863 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:next:[] @AT@ 42870 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.END_DOCUMENT: @AT@ 42896 @LENGTH@ 37
---------------DEL QualifiedName@@XMLStreamConstants.END_DOCUMENT @AT@ 42901 @LENGTH@ 31
------------------DEL SimpleName@@XMLStreamConstants @AT@ 42901 @LENGTH@ 18
------------------DEL SimpleName@@END_DOCUMENT @AT@ 42920 @LENGTH@ 12
------------DEL ReturnStatement@@ @AT@ 42956 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.CHARACTERS: @AT@ 42998 @LENGTH@ 35
---------------DEL QualifiedName@@XMLStreamConstants.CHARACTERS @AT@ 43003 @LENGTH@ 29
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43003 @LENGTH@ 18
------------------DEL SimpleName@@CHARACTERS @AT@ 43022 @LENGTH@ 10
------------DEL IfStatement@@if (!reader.isWhiteSpace()) {  throw unexpectedContent(reader);} @AT@ 43056 @LENGTH@ 108
---------------DEL PrefixExpression@@!reader.isWhiteSpace() @AT@ 43060 @LENGTH@ 22
------------------DEL Operator@@! @AT@ 43060 @LENGTH@ 1
------------------DEL MethodInvocation@@reader.isWhiteSpace() @AT@ 43061 @LENGTH@ 21
---------------------DEL SimpleName@@Name:reader @AT@ 43061 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isWhiteSpace:[] @AT@ 43068 @LENGTH@ 14
---------------DEL Block@@ThenBody:{  throw unexpectedContent(reader);} @AT@ 43084 @LENGTH@ 80
------------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 43110 @LENGTH@ 32
---------------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 43116 @LENGTH@ 25
------------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 43116 @LENGTH@ 25
---------------------------DEL SimpleName@@reader @AT@ 43134 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 43215 @LENGTH@ 6
------------DEL SwitchCase@@case XMLStreamConstants.COMMENT: @AT@ 43256 @LENGTH@ 32
---------------DEL QualifiedName@@XMLStreamConstants.COMMENT @AT@ 43261 @LENGTH@ 26
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43261 @LENGTH@ 18
------------------DEL SimpleName@@COMMENT @AT@ 43280 @LENGTH@ 7
------------DEL SwitchCase@@case XMLStreamConstants.SPACE: @AT@ 43305 @LENGTH@ 30
---------------DEL QualifiedName@@XMLStreamConstants.SPACE @AT@ 43310 @LENGTH@ 24
------------------DEL SimpleName@@XMLStreamConstants @AT@ 43310 @LENGTH@ 18
------------------DEL SimpleName@@SPACE @AT@ 43329 @LENGTH@ 5
------------DEL BreakStatement@@ @AT@ 43388 @LENGTH@ 6
------------DEL SwitchCase@@default @AT@ 43429 @LENGTH@ 8
------------DEL ThrowStatement@@MethodInvocation:unexpectedContent(reader) @AT@ 43460 @LENGTH@ 32
---------------DEL MethodInvocation@@unexpectedContent(reader) @AT@ 43466 @LENGTH@ 25
------------------DEL SimpleName@@MethodName:unexpectedContent:[reader] @AT@ 43466 @LENGTH@ 25
---------------------DEL SimpleName@@reader @AT@ 43484 @LENGTH@ 6
---DEL ReturnStatement@@ @AT@ 43543 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @TO@ TypeDeclaration@@[public]ReaderInputStreamTest,  @AT@ 2262 @LENGTH@ 460
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2269 @LENGTH@ 4
---INS SimpleName@@MethodName:testCharsetEncoderFlush @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2274 @LENGTH@ 23
---INS SingleVariableDeclaration@@final String charsetName @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2298 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String charsetName @AT@ 2298 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String charsetName @AT@ 2304 @LENGTH@ 6
------INS SimpleName@@charsetName @TO@ SingleVariableDeclaration@@final String charsetName @AT@ 2311 @LENGTH@ 11
---INS SingleVariableDeclaration@@final String data @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2324 @LENGTH@ 17
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String data @AT@ 2324 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String data @AT@ 2330 @LENGTH@ 6
------INS SimpleName@@data @TO@ SingleVariableDeclaration@@final String data @AT@ 2337 @LENGTH@ 4
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2350 @LENGTH@ 11
---INS VariableDeclarationStatement@@final Charset charset=Charset.forName(charsetName); @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2372 @LENGTH@ 53
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Charset charset=Charset.forName(charsetName); @AT@ 2372 @LENGTH@ 5
------INS SimpleType@@Charset @TO@ VariableDeclarationStatement@@final Charset charset=Charset.forName(charsetName); @AT@ 2378 @LENGTH@ 7
------INS VariableDeclarationFragment@@charset=Charset.forName(charsetName) @TO@ VariableDeclarationStatement@@final Charset charset=Charset.forName(charsetName); @AT@ 2386 @LENGTH@ 38
---------INS SimpleName@@charset @TO@ VariableDeclarationFragment@@charset=Charset.forName(charsetName) @AT@ 2386 @LENGTH@ 7
---------INS MethodInvocation@@Charset.forName(charsetName) @TO@ VariableDeclarationFragment@@charset=Charset.forName(charsetName) @AT@ 2396 @LENGTH@ 28
------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName(charsetName) @AT@ 2396 @LENGTH@ 7
------------INS SimpleName@@MethodName:forName:[charsetName] @TO@ MethodInvocation@@Charset.forName(charsetName) @AT@ 2404 @LENGTH@ 20
---------------INS SimpleName@@charsetName @TO@ SimpleName@@MethodName:forName:[charsetName] @AT@ 2412 @LENGTH@ 11
---INS VariableDeclarationStatement@@final byte[] expected=data.getBytes(charset); @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2434 @LENGTH@ 47
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] expected=data.getBytes(charset); @AT@ 2434 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] expected=data.getBytes(charset); @AT@ 2440 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2440 @LENGTH@ 4
------INS VariableDeclarationFragment@@expected=data.getBytes(charset) @TO@ VariableDeclarationStatement@@final byte[] expected=data.getBytes(charset); @AT@ 2447 @LENGTH@ 33
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=data.getBytes(charset) @AT@ 2447 @LENGTH@ 8
---------INS MethodInvocation@@data.getBytes(charset) @TO@ VariableDeclarationFragment@@expected=data.getBytes(charset) @AT@ 2458 @LENGTH@ 22
------------INS SimpleName@@Name:data @TO@ MethodInvocation@@data.getBytes(charset) @AT@ 2458 @LENGTH@ 4
------------INS SimpleName@@MethodName:getBytes:[charset] @TO@ MethodInvocation@@data.getBytes(charset) @AT@ 2463 @LENGTH@ 17
---------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:getBytes:[charset] @AT@ 2472 @LENGTH@ 7
---INS TryStatement@@try (InputStream in=new ReaderInputStream(new StringReader(data),charset)){  final byte[] actual=IOUtils.toByteArray(in);  assertEquals(Arrays.toString(expected),Arrays.toString(actual));}  @TO@ MethodDeclaration@@public, void, MethodName:testCharsetEncoderFlush, final String charsetName, final String data, IOException,  @AT@ 2490 @LENGTH@ 226
------INS VariableDeclarationExpression@@InputStream in=new ReaderInputStream(new StringReader(data),charset) @TO@ TryStatement@@try (InputStream in=new ReaderInputStream(new StringReader(data),charset)){  final byte[] actual=IOUtils.toByteArray(in);  assertEquals(Arrays.toString(expected),Arrays.toString(actual));}  @AT@ 2495 @LENGTH@ 71
---------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@InputStream in=new ReaderInputStream(new StringReader(data),charset) @AT@ 2495 @LENGTH@ 11
---------INS VariableDeclarationFragment@@in=new ReaderInputStream(new StringReader(data),charset) @TO@ VariableDeclarationExpression@@InputStream in=new ReaderInputStream(new StringReader(data),charset) @AT@ 2507 @LENGTH@ 59
------------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=new ReaderInputStream(new StringReader(data),charset) @AT@ 2507 @LENGTH@ 2
------------INS ClassInstanceCreation@@ReaderInputStream[new StringReader(data), charset] @TO@ VariableDeclarationFragment@@in=new ReaderInputStream(new StringReader(data),charset) @AT@ 2512 @LENGTH@ 54
---------------INS New@@new @TO@ ClassInstanceCreation@@ReaderInputStream[new StringReader(data), charset] @AT@ 2512 @LENGTH@ 3
---------------INS SimpleType@@ReaderInputStream @TO@ ClassInstanceCreation@@ReaderInputStream[new StringReader(data), charset] @AT@ 2516 @LENGTH@ 17
---------------INS ClassInstanceCreation@@StringReader[data] @TO@ ClassInstanceCreation@@ReaderInputStream[new StringReader(data), charset] @AT@ 2534 @LENGTH@ 22
------------------INS New@@new @TO@ ClassInstanceCreation@@StringReader[data] @AT@ 2534 @LENGTH@ 3
------------------INS SimpleType@@StringReader @TO@ ClassInstanceCreation@@StringReader[data] @AT@ 2538 @LENGTH@ 12
------------------INS SimpleName@@data @TO@ ClassInstanceCreation@@StringReader[data] @AT@ 2551 @LENGTH@ 4
---------------INS SimpleName@@charset @TO@ ClassInstanceCreation@@ReaderInputStream[new StringReader(data), charset] @AT@ 2558 @LENGTH@ 7
------INS VariableDeclarationStatement@@final byte[] actual=IOUtils.toByteArray(in); @TO@ TryStatement@@try (InputStream in=new ReaderInputStream(new StringReader(data),charset)){  final byte[] actual=IOUtils.toByteArray(in);  assertEquals(Arrays.toString(expected),Arrays.toString(actual));}  @AT@ 2582 @LENGTH@ 46
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] actual=IOUtils.toByteArray(in); @AT@ 2582 @LENGTH@ 5
---------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] actual=IOUtils.toByteArray(in); @AT@ 2588 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2588 @LENGTH@ 4
---------INS VariableDeclarationFragment@@actual=IOUtils.toByteArray(in) @TO@ VariableDeclarationStatement@@final byte[] actual=IOUtils.toByteArray(in); @AT@ 2595 @LENGTH@ 32
------------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=IOUtils.toByteArray(in) @AT@ 2595 @LENGTH@ 6
------------INS MethodInvocation@@IOUtils.toByteArray(in) @TO@ VariableDeclarationFragment@@actual=IOUtils.toByteArray(in) @AT@ 2604 @LENGTH@ 23
---------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.toByteArray(in) @AT@ 2604 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toByteArray:[in] @TO@ MethodInvocation@@IOUtils.toByteArray(in) @AT@ 2612 @LENGTH@ 15
------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:toByteArray:[in] @AT@ 2624 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:assertEquals(Arrays.toString(expected),Arrays.toString(actual)) @TO@ TryStatement@@try (InputStream in=new ReaderInputStream(new StringReader(data),charset)){  final byte[] actual=IOUtils.toByteArray(in);  assertEquals(Arrays.toString(expected),Arrays.toString(actual));}  @AT@ 2641 @LENGTH@ 65
---------INS MethodInvocation@@assertEquals(Arrays.toString(expected),Arrays.toString(actual)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Arrays.toString(expected),Arrays.toString(actual)) @AT@ 2641 @LENGTH@ 64
------------INS SimpleName@@MethodName:assertEquals:[Arrays.toString(expected), Arrays.toString(actual)] @TO@ MethodInvocation@@assertEquals(Arrays.toString(expected),Arrays.toString(actual)) @AT@ 2641 @LENGTH@ 64
---------------INS MethodInvocation@@Arrays.toString(expected) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.toString(expected), Arrays.toString(actual)] @AT@ 2654 @LENGTH@ 25
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 2654 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toString:[expected] @TO@ MethodInvocation@@Arrays.toString(expected) @AT@ 2661 @LENGTH@ 18
---------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:toString:[expected] @AT@ 2670 @LENGTH@ 8
---------------INS MethodInvocation@@Arrays.toString(actual) @TO@ SimpleName@@MethodName:assertEquals:[Arrays.toString(expected), Arrays.toString(actual)] @AT@ 2681 @LENGTH@ 23
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(actual) @AT@ 2681 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toString:[actual] @TO@ MethodInvocation@@Arrays.toString(actual) @AT@ 2688 @LENGTH@ 16
---------------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:toString:[actual] @AT@ 2697 @LENGTH@ 6


UPD IfStatement@@if (!indexDirectory.exists()) {  indexDirectory.mkdir();} @TO@ if (!indexDirectory.exists()) {  boolean result=indexDirectory.mkdir();  if (!result) {    LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);  }} @AT@ 2177 @LENGTH@ 85
---UPD Block@@ThenBody:{  indexDirectory.mkdir();} @TO@ ThenBody:{  boolean result=indexDirectory.mkdir();  if (!result) {    LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);  }} @AT@ 2207 @LENGTH@ 55
------INS VariableDeclarationStatement@@boolean result=indexDirectory.mkdir(); @TO@ Block@@ThenBody:{  indexDirectory.mkdir();} @AT@ 2225 @LENGTH@ 40
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean result=indexDirectory.mkdir(); @AT@ 2225 @LENGTH@ 7
---------INS VariableDeclarationFragment@@result=indexDirectory.mkdir() @TO@ VariableDeclarationStatement@@boolean result=indexDirectory.mkdir(); @AT@ 2233 @LENGTH@ 31
------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=indexDirectory.mkdir() @AT@ 2233 @LENGTH@ 6
------------INS MethodInvocation@@indexDirectory.mkdir() @TO@ VariableDeclarationFragment@@result=indexDirectory.mkdir() @AT@ 2242 @LENGTH@ 22
---------------MOV SimpleName@@Name:indexDirectory @TO@ MethodInvocation@@indexDirectory.mkdir() @AT@ 2225 @LENGTH@ 14
---------------MOV SimpleName@@MethodName:mkdir:[] @TO@ MethodInvocation@@indexDirectory.mkdir() @AT@ 2240 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:indexDirectory.mkdir() @AT@ 2225 @LENGTH@ 23
---------DEL MethodInvocation@@indexDirectory.mkdir() @AT@ 2225 @LENGTH@ 22
------INS IfStatement@@if (!result) {  LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);} @TO@ Block@@ThenBody:{  indexDirectory.mkdir();} @AT@ 2282 @LENGTH@ 144
---------INS PrefixExpression@@!result @TO@ IfStatement@@if (!result) {  LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);} @AT@ 2286 @LENGTH@ 7
------------INS Operator@@! @TO@ PrefixExpression@@!result @AT@ 2286 @LENGTH@ 1
------------INS SimpleName@@result @TO@ PrefixExpression@@!result @AT@ 2287 @LENGTH@ 6
---------INS Block@@ThenBody:{  LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);} @TO@ IfStatement@@if (!result) {  LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);} @AT@ 2295 @LENGTH@ 131
------------INS ExpressionStatement@@MethodInvocation:LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory) @TO@ Block@@ThenBody:{  LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory);} @AT@ 2317 @LENGTH@ 91
---------------INS MethodInvocation@@LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory) @AT@ 2317 @LENGTH@ 90
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory) @AT@ 2317 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["mkdir failed for {}. Maybe this folder was created externally", indexDirectory] @TO@ MethodInvocation@@LOG.error("mkdir failed for {}. Maybe this folder was created externally",indexDirectory) @AT@ 2321 @LENGTH@ 86
---------------------INS StringLiteral@@"mkdir failed for {}. Maybe this folder was created externally" @TO@ SimpleName@@MethodName:error:["mkdir failed for {}. Maybe this folder was created externally", indexDirectory] @AT@ 2327 @LENGTH@ 63
---------------------INS SimpleName@@indexDirectory @TO@ SimpleName@@MethodName:error:["mkdir failed for {}. Maybe this folder was created externally", indexDirectory] @AT@ 2392 @LENGTH@ 14


UPD IfStatement@@if ((ldifFiles != null) && (ldifFiles.length > 0)) {  for (  String ldifFile : ldifFiles) {    InputStream is=clazz.getClassLoader().getResourceAsStream(ldifFile);    if (is == null) {      throw new FileNotFoundException("LDIF file '" + ldifFile + "' not found.");    } else {      LdifReader ldifReader=new LdifReader(is);      for (      LdifEntry entry : ldifReader) {        injectEntry(entry,service);      }      ldifReader.close();    }  }} @TO@ if (ldifFiles != null && ldifFiles.length > 0) {  for (  String ldifFile : ldifFiles) {    InputStream is=clazz.getClassLoader().getResourceAsStream(ldifFile);    if (is == null) {      throw new FileNotFoundException("LDIF file '" + ldifFile + "' not found.");    } else {      LdifReader ldifReader=new LdifReader(is);      for (      LdifEntry entry : ldifReader) {        injectEntry(entry,service);      }      ldifReader.close();    }  }} @AT@ 15187 @LENGTH@ 728
---UPD InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @TO@ ldifFiles != null && ldifFiles.length > 0 @AT@ 15191 @LENGTH@ 45
------DEL ParenthesizedExpression@@(ldifFiles != null) @AT@ 15191 @LENGTH@ 19
---------DEL InfixExpression@@ldifFiles != null @AT@ 15192 @LENGTH@ 17
------INS InfixExpression@@ldifFiles != null @TO@ InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @AT@ 15191 @LENGTH@ 17
---------MOV SimpleName@@ldifFiles @TO@ InfixExpression@@ldifFiles != null @AT@ 15192 @LENGTH@ 9
---------MOV Operator@@!= @TO@ InfixExpression@@ldifFiles != null @AT@ 15201 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@ldifFiles != null @AT@ 15205 @LENGTH@ 4
------DEL ParenthesizedExpression@@(ldifFiles.length > 0) @AT@ 15214 @LENGTH@ 22
------MOV InfixExpression@@ldifFiles.length > 0 @TO@ InfixExpression@@(ldifFiles != null) && (ldifFiles.length > 0) @AT@ 15215 @LENGTH@ 20


UPD TypeDeclaration@@[@Ignore, @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/applicationContext-test1.xml"}), public]LdifReaderTests,  @TO@ [@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"/simple-job-launcher-context.xml","/applicationContext-test1.xml"}), public]LdifReaderTests,  @AT@ 1648 @LENGTH@ 2307
---DEL MarkerAnnotation@@@Ignore @AT@ 1648 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @TO@ public, void, MethodName:testKeepingTimeoutHeader,  @AT@ 2232 @LENGTH@ 669
---DEL SimpleType@@Exception @AT@ 2278 @LENGTH@ 9
---DEL TryStatement@@try {  String out=template.requestBody(endpoint,"Hello",String.class);  assertEquals("Bye World",out);  template.requestBody(endpoint,"Hello Camel",String.class);  fail("Should have thrown exception");} catch (CamelExecutionException e) {  ReadTimeoutException cause=assertIsInstanceOf(ReadTimeoutException.class,e.getCause());  assertNotNull(cause);} @AT@ 2450 @LENGTH@ 445
------DEL ExpressionStatement@@MethodInvocation:template.requestBody(endpoint,"Hello Camel",String.class) @AT@ 2592 @LENGTH@ 60
------DEL ExpressionStatement@@MethodInvocation:fail("Should have thrown exception") @AT@ 2665 @LENGTH@ 37
---------DEL MethodInvocation@@fail("Should have thrown exception") @AT@ 2665 @LENGTH@ 36
------------DEL SimpleName@@MethodName:fail:["Should have thrown exception"] @AT@ 2665 @LENGTH@ 36
---------------DEL StringLiteral@@"Should have thrown exception" @AT@ 2670 @LENGTH@ 30
------DEL CatchClause@@catch (CamelExecutionException e) {  ReadTimeoutException cause=assertIsInstanceOf(ReadTimeoutException.class,e.getCause());  assertNotNull(cause);} @AT@ 2713 @LENGTH@ 182
---------DEL SingleVariableDeclaration@@CamelExecutionException e @AT@ 2720 @LENGTH@ 25
------------DEL SimpleType@@CamelExecutionException @AT@ 2720 @LENGTH@ 23
------------DEL SimpleName@@e @AT@ 2744 @LENGTH@ 1
---MOV VariableDeclarationStatement@@String out=template.requestBody(endpoint,"Hello",String.class); @TO@ MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @AT@ 2468 @LENGTH@ 67
---MOV ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out) @TO@ MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @AT@ 2548 @LENGTH@ 31
---INS VariableDeclarationStatement@@CamelExecutionException e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)); @TO@ MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @AT@ 2611 @LENGTH@ 139
------INS SimpleType@@CamelExecutionException @TO@ VariableDeclarationStatement@@CamelExecutionException e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)); @AT@ 2611 @LENGTH@ 23
------INS VariableDeclarationFragment@@e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)) @TO@ VariableDeclarationStatement@@CamelExecutionException e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)); @AT@ 2635 @LENGTH@ 114
---------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)) @AT@ 2635 @LENGTH@ 1
---------INS MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)) @TO@ VariableDeclarationFragment@@e=assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)) @AT@ 2639 @LENGTH@ 110
------------INS SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.requestBody(endpoint,"Hello Camel",String.class)] @TO@ MethodInvocation@@assertThrows(CamelExecutionException.class,() -> template.requestBody(endpoint,"Hello Camel",String.class)) @AT@ 2639 @LENGTH@ 110
---------------INS TypeLiteral@@CamelExecutionException.class @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.requestBody(endpoint,"Hello Camel",String.class)] @AT@ 2652 @LENGTH@ 29
---------------INS LambdaExpression@@() -> template.requestBody(endpoint,"Hello Camel",String.class) @TO@ SimpleName@@MethodName:assertThrows:[CamelExecutionException.class, () -> template.requestBody(endpoint,"Hello Camel",String.class)] @AT@ 2683 @LENGTH@ 65
------------------MOV MethodInvocation@@template.requestBody(endpoint,"Hello Camel",String.class) @TO@ LambdaExpression@@() -> template.requestBody(endpoint,"Hello Camel",String.class) @AT@ 2592 @LENGTH@ 59
---MOV VariableDeclarationStatement@@ReadTimeoutException cause=assertIsInstanceOf(ReadTimeoutException.class,e.getCause()); @TO@ MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @AT@ 2761 @LENGTH@ 90
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(cause) @TO@ MethodDeclaration@@public, void, MethodName:testKeepingTimeoutHeader, Exception,  @AT@ 2864 @LENGTH@ 21


INS MethodDeclaration@@public, voidMethodName:StreamMessageProperties,  @TO@ TypeDeclaration@@[public]StreamMessageProperties, MessageProperties @AT@ 1318 @LENGTH@ 37
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:StreamMessageProperties,  @AT@ 1318 @LENGTH@ 6
---INS SimpleName@@MethodName:StreamMessageProperties @TO@ MethodDeclaration@@public, voidMethodName:StreamMessageProperties,  @AT@ 1325 @LENGTH@ 23


UPD VariableDeclarationStatement@@final WebArchive webArchive=ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")),"permissions.xml"); @TO@ final WebArchive webArchive=ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"),new FilePermission("<<ALL FILES>>","read"),new RuntimePermission("modifyThread")),"permissions.xml"); @AT@ 3324 @LENGTH@ 1120
---UPD VariableDeclarationFragment@@webArchive=ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")),"permissions.xml") @TO@ webArchive=ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"),new FilePermission("<<ALL FILES>>","read"),new RuntimePermission("modifyThread")),"permissions.xml") @AT@ 3341 @LENGTH@ 1102
------UPD MethodInvocation@@ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")),"permissions.xml") @TO@ ShrinkWrap.create(WebArchive.class,"rx-messaging-publisher-signature.war").addAsWebInfResource(EmptyAsset.INSTANCE,"beans.xml").addClasses(PublisherSignatureTestCase.class,BeanProducingAPublisherOfMessage.class,BeanProducingAPublisherOfPayload.class,BeanProducingAPublisherBuilderOfMessage.class,BeanProducingAPublisherBuilderOfPayload.class,BeanProducingPayloads.class,BeanProducingMessages.class,BeanProducingPayloadsAsynchronously.class,BeanProducingMessagesAsynchronously.class,Spy.class).addClasses(ReactiveMessagingTestUtils.class,TimeoutUtil.class,EnableReactiveExtensionsSetupTask.class,CLIServerSetupTask.class).addAsManifestResource(createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"),new FilePermission("<<ALL FILES>>","read"),new RuntimePermission("modifyThread")),"permissions.xml") @AT@ 3354 @LENGTH@ 1089
---------UPD SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")), "permissions.xml"] @TO@ MethodName:addAsManifestResource:[createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"),new FilePermission("<<ALL FILES>>","read"),new RuntimePermission("modifyThread")), "permissions.xml"] @AT@ 4273 @LENGTH@ 170
------------UPD MethodInvocation@@createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")) @TO@ createPermissionsXmlAsset(new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"),new FilePermission("<<ALL FILES>>","read"),new RuntimePermission("modifyThread")) @AT@ 4295 @LENGTH@ 128
---------------UPD SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")] @TO@ MethodName:createPermissionsXmlAsset:[new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read"), new FilePermission("<<ALL FILES>>","read"), new RuntimePermission("modifyThread")] @AT@ 4295 @LENGTH@ 128
------------------INS ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")] @AT@ 4574 @LENGTH@ 43
---------------------INS New@@new @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 4574 @LENGTH@ 3
---------------------INS SimpleType@@FilePermission @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 4578 @LENGTH@ 14
---------------------INS StringLiteral@@"<<ALL FILES>>" @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 4593 @LENGTH@ 15
---------------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@FilePermission["<<ALL FILES>>", "read"] @AT@ 4610 @LENGTH@ 6
------------------INS ClassInstanceCreation@@RuntimePermission["modifyThread"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new PropertyPermission(TimeoutUtil.FACTOR_SYS_PROP,"read")] @AT@ 4643 @LENGTH@ 37
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 4643 @LENGTH@ 3
---------------------INS SimpleType@@RuntimePermission @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 4647 @LENGTH@ 17
---------------------INS StringLiteral@@"modifyThread" @TO@ ClassInstanceCreation@@RuntimePermission["modifyThread"] @AT@ 4665 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:this.webFilterExchange=new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/")),new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete())) @TO@ Assignment:this.webFilterExchange=new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/")),new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete(),Collections.emptyList())) @AT@ 3137 @LENGTH@ 190
---UPD Assignment@@this.webFilterExchange=new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/")),new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete())) @TO@ this.webFilterExchange=new WebFilterExchange(MockServerWebExchange.from(MockServerHttpRequest.get("/")),new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete(),Collections.emptyList())) @AT@ 3137 @LENGTH@ 189
------UPD ClassInstanceCreation@@WebFilterExchange[MockServerWebExchange.from(MockServerHttpRequest.get("/")), new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete())] @TO@ WebFilterExchange[MockServerWebExchange.from(MockServerHttpRequest.get("/")), new DefaultWebFilterChain((exchange) -> exchange.getResponse().setComplete(),Collections.emptyList())] @AT@ 3162 @LENGTH@ 164
---------UPD ClassInstanceCreation@@DefaultWebFilterChain[(exchange) -> exchange.getResponse().setComplete()] @TO@ DefaultWebFilterChain[(exchange) -> exchange.getResponse().setComplete(), Collections.emptyList()] @AT@ 3248 @LENGTH@ 77
------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@DefaultWebFilterChain[(exchange) -> exchange.getResponse().setComplete()] @AT@ 3326 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3326 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3338 @LENGTH@ 11


DEL ExpressionStatement@@Assignment:this.client=client @AT@ 7513 @LENGTH@ 21
---DEL Assignment@@this.client=client @AT@ 7513 @LENGTH@ 20
------DEL FieldAccess@@this.client @AT@ 7513 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 7513 @LENGTH@ 4
---------DEL SimpleName@@client @AT@ 7518 @LENGTH@ 6
------DEL Operator@@= @AT@ 7524 @LENGTH@ 1
------DEL SimpleName@@client @AT@ 7527 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Objects.equals(this.path,path),path) @TO@ MethodInvocation:toFileVisitResult(Objects.equals(this.path,path)) @AT@ 1825 @LENGTH@ 64
---UPD MethodInvocation@@toFileVisitResult(Objects.equals(this.path,path),path) @TO@ toFileVisitResult(Objects.equals(this.path,path)) @AT@ 1832 @LENGTH@ 56
------UPD SimpleName@@MethodName:toFileVisitResult:[Objects.equals(this.path,path), path] @TO@ MethodName:toFileVisitResult:[Objects.equals(this.path,path)] @AT@ 1832 @LENGTH@ 56
---------DEL SimpleName@@path @AT@ 1883 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:conversionService.writeValue(v,neo4jPersistentProperty.getTypeInformation(),neo4jPersistentProperty.getOptionalWritingConverter()) @TO@ MethodInvocation:conversionService.writeValue(v,neo4jPersistentProperty.getTypeInformation(),neo4jPersistentProperty.getOptionalConverter()) @AT@ 5803 @LENGTH@ 151
---UPD MethodInvocation@@conversionService.writeValue(v,neo4jPersistentProperty.getTypeInformation(),neo4jPersistentProperty.getOptionalWritingConverter()) @TO@ conversionService.writeValue(v,neo4jPersistentProperty.getTypeInformation(),neo4jPersistentProperty.getOptionalConverter()) @AT@ 5810 @LENGTH@ 143
------UPD SimpleName@@MethodName:writeValue:[v, neo4jPersistentProperty.getTypeInformation(), neo4jPersistentProperty.getOptionalWritingConverter()] @TO@ MethodName:writeValue:[v, neo4jPersistentProperty.getTypeInformation(), neo4jPersistentProperty.getOptionalConverter()] @AT@ 5828 @LENGTH@ 125
---------UPD MethodInvocation@@neo4jPersistentProperty.getOptionalWritingConverter() @TO@ neo4jPersistentProperty.getOptionalConverter() @AT@ 5899 @LENGTH@ 53
------------UPD SimpleName@@MethodName:getOptionalWritingConverter:[] @TO@ MethodName:getOptionalConverter:[] @AT@ 5923 @LENGTH@ 29


UPD ThrowStatement@@MethodInvocation:getExceptionTranslator().translate("Executing query",getSql(),se) @TO@ MethodInvocation:translateSqlException("Executing query",getSql(),se) @AT@ 4130 @LENGTH@ 74
---UPD MethodInvocation@@getExceptionTranslator().translate("Executing query",getSql(),se) @TO@ translateSqlException("Executing query",getSql(),se) @AT@ 4136 @LENGTH@ 67
------DEL MethodInvocation@@MethodName:getExceptionTranslator:[] @AT@ 4136 @LENGTH@ 24
------UPD SimpleName@@MethodName:translate:["Executing query", getSql(), se] @TO@ MethodName:translateSqlException:["Executing query", getSql(), se] @AT@ 4161 @LENGTH@ 42


INS MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @TO@ TypeDeclaration@@[@Category(MetastoreUnitTest.class), public]TestDataSourceProviderFactory,  @AT@ 2072 @LENGTH@ 661
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2072 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2079 @LENGTH@ 4
---INS SimpleName@@MethodName:testSetHikariCpLeakDetectionThresholdProperty @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2084 @LENGTH@ 45
---INS SimpleType@@SQLException @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2139 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.CONNECTION_POOLING_TYPE,HikariCPDataSourceProvider.HIKARI) @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2159 @LENGTH@ 96
------INS MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.CONNECTION_POOLING_TYPE,HikariCPDataSourceProvider.HIKARI) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.CONNECTION_POOLING_TYPE,HikariCPDataSourceProvider.HIKARI) @AT@ 2159 @LENGTH@ 95
---------INS SimpleName@@Name:MetastoreConf @TO@ MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.CONNECTION_POOLING_TYPE,HikariCPDataSourceProvider.HIKARI) @AT@ 2159 @LENGTH@ 13
---------INS SimpleName@@MethodName:setVar:[conf, ConfVars.CONNECTION_POOLING_TYPE, HikariCPDataSourceProvider.HIKARI] @TO@ MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.CONNECTION_POOLING_TYPE,HikariCPDataSourceProvider.HIKARI) @AT@ 2173 @LENGTH@ 81
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setVar:[conf, ConfVars.CONNECTION_POOLING_TYPE, HikariCPDataSourceProvider.HIKARI] @AT@ 2180 @LENGTH@ 4
------------INS QualifiedName@@ConfVars.CONNECTION_POOLING_TYPE @TO@ SimpleName@@MethodName:setVar:[conf, ConfVars.CONNECTION_POOLING_TYPE, HikariCPDataSourceProvider.HIKARI] @AT@ 2186 @LENGTH@ 32
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.CONNECTION_POOLING_TYPE @AT@ 2186 @LENGTH@ 8
---------------INS SimpleName@@CONNECTION_POOLING_TYPE @TO@ QualifiedName@@ConfVars.CONNECTION_POOLING_TYPE @AT@ 2195 @LENGTH@ 23
------------INS QualifiedName@@HikariCPDataSourceProvider.HIKARI @TO@ SimpleName@@MethodName:setVar:[conf, ConfVars.CONNECTION_POOLING_TYPE, HikariCPDataSourceProvider.HIKARI] @AT@ 2220 @LENGTH@ 33
---------------INS SimpleName@@HikariCPDataSourceProvider @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2220 @LENGTH@ 26
---------------INS SimpleName@@HIKARI @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2247 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:conf.set(HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold","3600") @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2260 @LENGTH@ 80
------INS MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold","3600") @TO@ ExpressionStatement@@MethodInvocation:conf.set(HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold","3600") @AT@ 2260 @LENGTH@ 79
---------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold","3600") @AT@ 2260 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold", "3600"] @TO@ MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold","3600") @AT@ 2265 @LENGTH@ 74
------------INS InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold" @TO@ SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold", "3600"] @AT@ 2269 @LENGTH@ 61
---------------INS QualifiedName@@HikariCPDataSourceProvider.HIKARI @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold" @AT@ 2269 @LENGTH@ 33
------------------INS SimpleName@@HikariCPDataSourceProvider @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2269 @LENGTH@ 26
------------------INS SimpleName@@HIKARI @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2296 @LENGTH@ 6
---------------INS Operator@@+ @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold" @AT@ 2302 @LENGTH@ 1
---------------INS StringLiteral@@".leakDetectionThreshold" @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold" @AT@ 2305 @LENGTH@ 25
------------INS StringLiteral@@"3600" @TO@ SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".leakDetectionThreshold", "3600"] @AT@ 2332 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:conf.set(HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout","-1") @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2345 @LENGTH@ 81
------INS MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout","-1") @TO@ ExpressionStatement@@MethodInvocation:conf.set(HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout","-1") @AT@ 2345 @LENGTH@ 80
---------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout","-1") @AT@ 2345 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout", "-1"] @TO@ MethodInvocation@@conf.set(HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout","-1") @AT@ 2350 @LENGTH@ 75
------------INS InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout" @TO@ SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout", "-1"] @AT@ 2354 @LENGTH@ 64
---------------INS QualifiedName@@HikariCPDataSourceProvider.HIKARI @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout" @AT@ 2354 @LENGTH@ 33
------------------INS SimpleName@@HikariCPDataSourceProvider @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2354 @LENGTH@ 26
------------------INS SimpleName@@HIKARI @TO@ QualifiedName@@HikariCPDataSourceProvider.HIKARI @AT@ 2381 @LENGTH@ 6
---------------INS Operator@@+ @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout" @AT@ 2387 @LENGTH@ 1
---------------INS StringLiteral@@".initializationFailTimeout" @TO@ InfixExpression@@HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout" @AT@ 2390 @LENGTH@ 28
------------INS StringLiteral@@"-1" @TO@ SimpleName@@MethodName:set:[HikariCPDataSourceProvider.HIKARI + ".initializationFailTimeout", "-1"] @AT@ 2420 @LENGTH@ 4
---INS VariableDeclarationStatement@@DataSourceProvider dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf); @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2432 @LENGTH@ 88
------INS SimpleType@@DataSourceProvider @TO@ VariableDeclarationStatement@@DataSourceProvider dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf); @AT@ 2432 @LENGTH@ 18
------INS VariableDeclarationFragment@@dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @TO@ VariableDeclarationStatement@@DataSourceProvider dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf); @AT@ 2451 @LENGTH@ 68
---------INS SimpleName@@dsp @TO@ VariableDeclarationFragment@@dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @AT@ 2451 @LENGTH@ 3
---------INS MethodInvocation@@DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @TO@ VariableDeclarationFragment@@dsp=DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @AT@ 2457 @LENGTH@ 62
------------INS SimpleName@@Name:DataSourceProviderFactory @TO@ MethodInvocation@@DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @AT@ 2457 @LENGTH@ 25
------------INS SimpleName@@MethodName:tryGetDataSourceProviderOrNull:[conf] @TO@ MethodInvocation@@DataSourceProviderFactory.tryGetDataSourceProviderOrNull(conf) @AT@ 2483 @LENGTH@ 36
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:tryGetDataSourceProviderOrNull:[conf] @AT@ 2514 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(dsp) @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2525 @LENGTH@ 26
------INS MethodInvocation@@Assert.assertNotNull(dsp) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(dsp) @AT@ 2525 @LENGTH@ 25
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(dsp) @AT@ 2525 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[dsp] @TO@ MethodInvocation@@Assert.assertNotNull(dsp) @AT@ 2532 @LENGTH@ 18
------------INS SimpleName@@dsp @TO@ SimpleName@@MethodName:assertNotNull:[dsp] @AT@ 2546 @LENGTH@ 3
---INS VariableDeclarationStatement@@DataSource ds=dsp.create(conf); @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2557 @LENGTH@ 33
------INS SimpleType@@DataSource @TO@ VariableDeclarationStatement@@DataSource ds=dsp.create(conf); @AT@ 2557 @LENGTH@ 10
------INS VariableDeclarationFragment@@ds=dsp.create(conf) @TO@ VariableDeclarationStatement@@DataSource ds=dsp.create(conf); @AT@ 2568 @LENGTH@ 21
---------INS SimpleName@@ds @TO@ VariableDeclarationFragment@@ds=dsp.create(conf) @AT@ 2568 @LENGTH@ 2
---------INS MethodInvocation@@dsp.create(conf) @TO@ VariableDeclarationFragment@@ds=dsp.create(conf) @AT@ 2573 @LENGTH@ 16
------------INS SimpleName@@Name:dsp @TO@ MethodInvocation@@dsp.create(conf) @AT@ 2573 @LENGTH@ 3
------------INS SimpleName@@MethodName:create:[conf] @TO@ MethodInvocation@@dsp.create(conf) @AT@ 2577 @LENGTH@ 12
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:create:[conf] @AT@ 2584 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(ds instanceof HikariDataSource) @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2595 @LENGTH@ 50
------INS MethodInvocation@@Assert.assertTrue(ds instanceof HikariDataSource) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(ds instanceof HikariDataSource) @AT@ 2595 @LENGTH@ 49
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(ds instanceof HikariDataSource) @AT@ 2595 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[ds instanceof HikariDataSource] @TO@ MethodInvocation@@Assert.assertTrue(ds instanceof HikariDataSource) @AT@ 2602 @LENGTH@ 42
------------INS InstanceofExpression@@ds instanceof HikariDataSource @TO@ SimpleName@@MethodName:assertTrue:[ds instanceof HikariDataSource] @AT@ 2613 @LENGTH@ 30
---------------INS SimpleName@@ds @TO@ InstanceofExpression@@ds instanceof HikariDataSource @AT@ 2613 @LENGTH@ 2
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@ds instanceof HikariDataSource @AT@ 2616 @LENGTH@ 10
---------------INS SimpleType@@HikariDataSource @TO@ InstanceofExpression@@ds instanceof HikariDataSource @AT@ 2627 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(3600L,((HikariDataSource)ds).getLeakDetectionThreshold()) @TO@ MethodDeclaration@@public, void, MethodName:testSetHikariCpLeakDetectionThresholdProperty, SQLException,  @AT@ 2650 @LENGTH@ 79
------INS MethodInvocation@@Assert.assertEquals(3600L,((HikariDataSource)ds).getLeakDetectionThreshold()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(3600L,((HikariDataSource)ds).getLeakDetectionThreshold()) @AT@ 2650 @LENGTH@ 78
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(3600L,((HikariDataSource)ds).getLeakDetectionThreshold()) @AT@ 2650 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[3600L, ((HikariDataSource)ds).getLeakDetectionThreshold()] @TO@ MethodInvocation@@Assert.assertEquals(3600L,((HikariDataSource)ds).getLeakDetectionThreshold()) @AT@ 2657 @LENGTH@ 71
------------INS NumberLiteral@@3600L @TO@ SimpleName@@MethodName:assertEquals:[3600L, ((HikariDataSource)ds).getLeakDetectionThreshold()] @AT@ 2670 @LENGTH@ 5
------------INS MethodInvocation@@((HikariDataSource)ds).getLeakDetectionThreshold() @TO@ SimpleName@@MethodName:assertEquals:[3600L, ((HikariDataSource)ds).getLeakDetectionThreshold()] @AT@ 2677 @LENGTH@ 50
---------------INS ParenthesizedExpression@@((HikariDataSource)ds) @TO@ MethodInvocation@@((HikariDataSource)ds).getLeakDetectionThreshold() @AT@ 2677 @LENGTH@ 22
------------------INS CastExpression@@(HikariDataSource)ds @TO@ ParenthesizedExpression@@((HikariDataSource)ds) @AT@ 2678 @LENGTH@ 20
---------------------INS SimpleType@@HikariDataSource @TO@ CastExpression@@(HikariDataSource)ds @AT@ 2679 @LENGTH@ 16
---------------------INS SimpleName@@ds @TO@ CastExpression@@(HikariDataSource)ds @AT@ 2696 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getLeakDetectionThreshold:[] @TO@ MethodInvocation@@((HikariDataSource)ds).getLeakDetectionThreshold() @AT@ 2700 @LENGTH@ 27


INS MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @TO@ TypeDeclaration@@[public]IOUtilsTest,  @AT@ 5512 @LENGTH@ 825
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @AT@ 5512 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @AT@ 5519 @LENGTH@ 4
---INS SimpleName@@MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall @TO@ MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @AT@ 5524 @LENGTH@ 74
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @AT@ 5608 @LENGTH@ 11
---INS TryStatement@@try (ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){  @Override public int read(  ByteBuffer buf) throws IOException {    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));    final int read=super.read(temp);    if (read > 0) {      buf.put(temp.array(),0,read);    }    return read;  }}){  final byte[] read=IOUtils.readRange(in,5);  Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read);}  @TO@ MethodDeclaration@@public, void, MethodName:readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall, IOException,  @AT@ 5630 @LENGTH@ 701
------INS VariableDeclarationExpression@@ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @TO@ TryStatement@@try (ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){  @Override public int read(  ByteBuffer buf) throws IOException {    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));    final int read=super.read(temp);    if (read > 0) {      buf.put(temp.array(),0,read);    }    return read;  }}){  final byte[] read=IOUtils.readRange(in,5);  Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read);}  @AT@ 5635 @LENGTH@ 551
---------INS SimpleType@@ReadableByteChannel @TO@ VariableDeclarationExpression@@ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @AT@ 5635 @LENGTH@ 19
---------INS VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @TO@ VariableDeclarationExpression@@ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @AT@ 5655 @LENGTH@ 531
------------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @AT@ 5655 @LENGTH@ 2
------------INS ClassInstanceCreation@@SeekableInMemoryByteChannel[new byte[]{1,2,3,4,5,6,7}] @TO@ VariableDeclarationFragment@@in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){
  @Override public int read(  ByteBuffer buf) throws IOException {
    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));
    final int read=super.read(temp);
    if (read > 0) {
      buf.put(temp.array(),0,read);
    }
    return read;
  }
}
 @AT@ 5660 @LENGTH@ 526
---------------INS New@@new @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[new byte[]{1,2,3,4,5,6,7}] @AT@ 5660 @LENGTH@ 3
---------------INS SimpleType@@SeekableInMemoryByteChannel @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[new byte[]{1,2,3,4,5,6,7}] @AT@ 5664 @LENGTH@ 27
---------------INS ArrayCreation@@new byte[]{1,2,3,4,5,6,7} @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[new byte[]{1,2,3,4,5,6,7}] @AT@ 5692 @LENGTH@ 34
------------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{1,2,3,4,5,6,7} @AT@ 5696 @LENGTH@ 6
---------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 5696 @LENGTH@ 4
------------------INS ArrayInitializer@@{1,2,3,4,5,6,7} @TO@ ArrayCreation@@new byte[]{1,2,3,4,5,6,7} @AT@ 5703 @LENGTH@ 23
---------------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5705 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5708 @LENGTH@ 1
---------------------INS NumberLiteral@@3 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5711 @LENGTH@ 1
---------------------INS NumberLiteral@@4 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5714 @LENGTH@ 1
---------------------INS NumberLiteral@@5 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5717 @LENGTH@ 1
---------------------INS NumberLiteral@@6 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5720 @LENGTH@ 1
---------------------INS NumberLiteral@@7 @TO@ ArrayInitializer@@{1,2,3,4,5,6,7} @AT@ 5723 @LENGTH@ 1
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@SeekableInMemoryByteChannel[new byte[]{1,2,3,4,5,6,7}] @AT@ 5728 @LENGTH@ 458
------------------INS MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 5764 @LENGTH@ 412
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5764 @LENGTH@ 6
---------------------INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5771 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:read @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5775 @LENGTH@ 4
---------------------INS SingleVariableDeclaration@@ByteBuffer buf @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5780 @LENGTH@ 14
------------------------INS SimpleType@@ByteBuffer @TO@ SingleVariableDeclaration@@ByteBuffer buf @AT@ 5780 @LENGTH@ 10
------------------------INS SimpleName@@buf @TO@ SingleVariableDeclaration@@ByteBuffer buf @AT@ 5791 @LENGTH@ 3
---------------------INS SimpleType@@IOException @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5803 @LENGTH@ 11
---------------------INS VariableDeclarationStatement@@final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining())); @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5906 @LENGTH@ 74
------------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining())); @AT@ 5906 @LENGTH@ 5
------------------------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining())); @AT@ 5912 @LENGTH@ 10
------------------------INS VariableDeclarationFragment@@temp=ByteBuffer.allocate(Math.min(2,buf.remaining())) @TO@ VariableDeclarationStatement@@final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining())); @AT@ 5923 @LENGTH@ 56
---------------------------INS SimpleName@@temp @TO@ VariableDeclarationFragment@@temp=ByteBuffer.allocate(Math.min(2,buf.remaining())) @AT@ 5923 @LENGTH@ 4
---------------------------INS MethodInvocation@@ByteBuffer.allocate(Math.min(2,buf.remaining())) @TO@ VariableDeclarationFragment@@temp=ByteBuffer.allocate(Math.min(2,buf.remaining())) @AT@ 5930 @LENGTH@ 49
------------------------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.allocate(Math.min(2,buf.remaining())) @AT@ 5930 @LENGTH@ 10
------------------------------INS SimpleName@@MethodName:allocate:[Math.min(2,buf.remaining())] @TO@ MethodInvocation@@ByteBuffer.allocate(Math.min(2,buf.remaining())) @AT@ 5941 @LENGTH@ 38
---------------------------------INS MethodInvocation@@Math.min(2,buf.remaining()) @TO@ SimpleName@@MethodName:allocate:[Math.min(2,buf.remaining())] @AT@ 5950 @LENGTH@ 28
------------------------------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.min(2,buf.remaining()) @AT@ 5950 @LENGTH@ 4
------------------------------------INS SimpleName@@MethodName:min:[2, buf.remaining()] @TO@ MethodInvocation@@Math.min(2,buf.remaining()) @AT@ 5955 @LENGTH@ 23
---------------------------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:min:[2, buf.remaining()] @AT@ 5959 @LENGTH@ 1
---------------------------------------INS MethodInvocation@@buf.remaining() @TO@ SimpleName@@MethodName:min:[2, buf.remaining()] @AT@ 5962 @LENGTH@ 15
------------------------------------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.remaining() @AT@ 5962 @LENGTH@ 3
------------------------------------------INS SimpleName@@MethodName:remaining:[] @TO@ MethodInvocation@@buf.remaining() @AT@ 5966 @LENGTH@ 11
---------------------INS VariableDeclarationStatement@@final int read=super.read(temp); @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 5997 @LENGTH@ 34
------------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int read=super.read(temp); @AT@ 5997 @LENGTH@ 5
------------------------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int read=super.read(temp); @AT@ 6003 @LENGTH@ 3
------------------------INS VariableDeclarationFragment@@read=super.read(temp) @TO@ VariableDeclarationStatement@@final int read=super.read(temp); @AT@ 6007 @LENGTH@ 23
---------------------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=super.read(temp) @AT@ 6007 @LENGTH@ 4
---------------------------INS SuperMethodInvocation@@super.read(temp) @TO@ VariableDeclarationFragment@@read=super.read(temp) @AT@ 6014 @LENGTH@ 16
------------------------------INS SimpleName@@MethodName:read:[temp] @TO@ SuperMethodInvocation@@super.read(temp) @AT@ 6020 @LENGTH@ 4
------------------------------INS SimpleName@@temp @TO@ SuperMethodInvocation@@super.read(temp) @AT@ 6025 @LENGTH@ 4
---------------------INS IfStatement@@if (read > 0) {  buf.put(temp.array(),0,read);} @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 6048 @LENGTH@ 85
------------------------INS InfixExpression@@read > 0 @TO@ IfStatement@@if (read > 0) {  buf.put(temp.array(),0,read);} @AT@ 6052 @LENGTH@ 8
---------------------------INS SimpleName@@read @TO@ InfixExpression@@read > 0 @AT@ 6052 @LENGTH@ 4
---------------------------INS Operator@@> @TO@ InfixExpression@@read > 0 @AT@ 6056 @LENGTH@ 1
---------------------------INS NumberLiteral@@0 @TO@ InfixExpression@@read > 0 @AT@ 6059 @LENGTH@ 1
------------------------INS Block@@ThenBody:{  buf.put(temp.array(),0,read);} @TO@ IfStatement@@if (read > 0) {  buf.put(temp.array(),0,read);} @AT@ 6062 @LENGTH@ 71
---------------------------INS ExpressionStatement@@MethodInvocation:buf.put(temp.array(),0,read) @TO@ Block@@ThenBody:{  buf.put(temp.array(),0,read);} @AT@ 6084 @LENGTH@ 31
------------------------------INS MethodInvocation@@buf.put(temp.array(),0,read) @TO@ ExpressionStatement@@MethodInvocation:buf.put(temp.array(),0,read) @AT@ 6084 @LENGTH@ 30
---------------------------------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.put(temp.array(),0,read) @AT@ 6084 @LENGTH@ 3
---------------------------------INS SimpleName@@MethodName:put:[temp.array(), 0, read] @TO@ MethodInvocation@@buf.put(temp.array(),0,read) @AT@ 6088 @LENGTH@ 26
------------------------------------INS MethodInvocation@@temp.array() @TO@ SimpleName@@MethodName:put:[temp.array(), 0, read] @AT@ 6092 @LENGTH@ 12
---------------------------------------INS SimpleName@@Name:temp @TO@ MethodInvocation@@temp.array() @AT@ 6092 @LENGTH@ 4
---------------------------------------INS SimpleName@@MethodName:array:[] @TO@ MethodInvocation@@temp.array() @AT@ 6097 @LENGTH@ 7
------------------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:put:[temp.array(), 0, read] @AT@ 6106 @LENGTH@ 1
------------------------------------INS SimpleName@@read @TO@ SimpleName@@MethodName:put:[temp.array(), 0, read] @AT@ 6109 @LENGTH@ 4
---------------------INS ReturnStatement@@SimpleName:read @TO@ MethodDeclaration@@public, int, MethodName:read, ByteBuffer buf, IOException,  @AT@ 6150 @LENGTH@ 12
------------------------INS SimpleName@@read @TO@ ReturnStatement@@SimpleName:read @AT@ 6157 @LENGTH@ 4
------INS VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,5); @TO@ TryStatement@@try (ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){  @Override public int read(  ByteBuffer buf) throws IOException {    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));    final int read=super.read(temp);    if (read > 0) {      buf.put(temp.array(),0,read);    }    return read;  }}){  final byte[] read=IOUtils.readRange(in,5);  Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read);}  @AT@ 6202 @LENGTH@ 45
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,5); @AT@ 6202 @LENGTH@ 5
---------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,5); @AT@ 6208 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6208 @LENGTH@ 4
---------INS VariableDeclarationFragment@@read=IOUtils.readRange(in,5) @TO@ VariableDeclarationStatement@@final byte[] read=IOUtils.readRange(in,5); @AT@ 6215 @LENGTH@ 31
------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=IOUtils.readRange(in,5) @AT@ 6215 @LENGTH@ 4
------------INS MethodInvocation@@IOUtils.readRange(in,5) @TO@ VariableDeclarationFragment@@read=IOUtils.readRange(in,5) @AT@ 6222 @LENGTH@ 24
---------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.readRange(in,5) @AT@ 6222 @LENGTH@ 7
---------------INS SimpleName@@MethodName:readRange:[in, 5] @TO@ MethodInvocation@@IOUtils.readRange(in,5) @AT@ 6230 @LENGTH@ 16
------------------INS SimpleName@@in @TO@ SimpleName@@MethodName:readRange:[in, 5] @AT@ 6240 @LENGTH@ 2
------------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:readRange:[in, 5] @AT@ 6244 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read) @TO@ TryStatement@@try (ReadableByteChannel in=new SeekableInMemoryByteChannel(new byte[]{1,2,3,4,5,6,7}){  @Override public int read(  ByteBuffer buf) throws IOException {    final ByteBuffer temp=ByteBuffer.allocate(Math.min(2,buf.remaining()));    final int read=super.read(temp);    if (read > 0) {      buf.put(temp.array(),0,read);    }    return read;  }}){  final byte[] read=IOUtils.readRange(in,5);  Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read);}  @AT@ 6260 @LENGTH@ 61
---------INS MethodInvocation@@Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read) @AT@ 6260 @LENGTH@ 60
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read) @AT@ 6260 @LENGTH@ 6
------------INS SimpleName@@MethodName:assertArrayEquals:[new byte[]{1,2,3,4,5}, read] @TO@ MethodInvocation@@Assert.assertArrayEquals(new byte[]{1,2,3,4,5},read) @AT@ 6267 @LENGTH@ 53
---------------INS ArrayCreation@@new byte[]{1,2,3,4,5} @TO@ SimpleName@@MethodName:assertArrayEquals:[new byte[]{1,2,3,4,5}, read] @AT@ 6285 @LENGTH@ 28
------------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[]{1,2,3,4,5} @AT@ 6289 @LENGTH@ 6
---------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 6289 @LENGTH@ 4
------------------INS ArrayInitializer@@{1,2,3,4,5} @TO@ ArrayCreation@@new byte[]{1,2,3,4,5} @AT@ 6296 @LENGTH@ 17
---------------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1,2,3,4,5} @AT@ 6298 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ ArrayInitializer@@{1,2,3,4,5} @AT@ 6301 @LENGTH@ 1
---------------------INS NumberLiteral@@3 @TO@ ArrayInitializer@@{1,2,3,4,5} @AT@ 6304 @LENGTH@ 1
---------------------INS NumberLiteral@@4 @TO@ ArrayInitializer@@{1,2,3,4,5} @AT@ 6307 @LENGTH@ 1
---------------------INS NumberLiteral@@5 @TO@ ArrayInitializer@@{1,2,3,4,5} @AT@ 6310 @LENGTH@ 1
---------------INS SimpleName@@read @TO@ SimpleName@@MethodName:assertArrayEquals:[new byte[]{1,2,3,4,5}, read] @AT@ 6315 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.info("Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()) @TO@ MethodInvocation:LOG.info("Attempting to become master for endpoint: {} in {} with singletonID: {}",endpoint,endpoint.getCamelContext(),endpoint.getGroupName()) @AT@ 4218 @LENGTH@ 171
---UPD MethodInvocation@@LOG.info("Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()) @TO@ LOG.info("Attempting to become master for endpoint: {} in {} with singletonID: {}",endpoint,endpoint.getCamelContext(),endpoint.getGroupName()) @AT@ 4218 @LENGTH@ 170
------UPD SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()] @TO@ MethodName:info:["Attempting to become master for endpoint: {} in {} with singletonID: {}", endpoint, endpoint.getCamelContext(), endpoint.getGroupName()] @AT@ 4222 @LENGTH@ 166
---------DEL InfixExpression@@"Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName() @AT@ 4227 @LENGTH@ 160
------------DEL StringLiteral@@"Attempting to become master for endpoint: " @AT@ 4227 @LENGTH@ 44
------------DEL Operator@@+ @AT@ 4271 @LENGTH@ 1
------------DEL SimpleName@@endpoint @AT@ 4274 @LENGTH@ 8
------------DEL StringLiteral@@" in " @AT@ 4285 @LENGTH@ 6
------------DEL MethodInvocation@@endpoint.getCamelContext() @AT@ 4294 @LENGTH@ 26
------------DEL StringLiteral@@" with singletonID: " @AT@ 4340 @LENGTH@ 21
------------DEL MethodInvocation@@endpoint.getGroupName() @AT@ 4364 @LENGTH@ 23
---------INS StringLiteral@@"Attempting to become master for endpoint: {} in {} with singletonID: {}" @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()] @AT@ 4227 @LENGTH@ 73
---------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()] @AT@ 4302 @LENGTH@ 8
---------INS MethodInvocation@@endpoint.getCamelContext() @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()] @AT@ 4328 @LENGTH@ 26
------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getCamelContext() @AT@ 4294 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@endpoint.getCamelContext() @AT@ 4303 @LENGTH@ 17
---------INS MethodInvocation@@endpoint.getGroupName() @TO@ SimpleName@@MethodName:info:["Attempting to become master for endpoint: " + endpoint + " in "+ endpoint.getCamelContext()+ " with singletonID: "+ endpoint.getGroupName()] @AT@ 4356 @LENGTH@ 23
------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getGroupName() @AT@ 4364 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getGroupName:[] @TO@ MethodInvocation@@endpoint.getGroupName() @AT@ 4373 @LENGTH@ 14


UPD SynchronizedStatement@@synchronized (printer) {  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }  StringBuilder stringBuilder=(StringBuilder)printer.getOut();  outputStream.write(stringBuilder.toString().getBytes());  stringBuilder.setLength(0);} @TO@ synchronized (printer) {  if (object instanceof Map) {    Map map=(Map)object;    printer.printRecord(getMapRecordValues(map));  } else {    Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);    while (it.hasNext()) {      printer.printRecord(getMapRecordValues(it.next()));    }  }  StringBuilder stringBuilder=(StringBuilder)printer.getOut();  outputStream.write(stringBuilder.toString().getBytes());  stringBuilder.setLength(0);} @AT@ 4965 @LENGTH@ 472
---UPD Block@@SyncBody:{  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }  StringBuilder stringBuilder=(StringBuilder)printer.getOut();  outputStream.write(stringBuilder.toString().getBytes());  stringBuilder.setLength(0);} @TO@ SyncBody:{  if (object instanceof Map) {    Map map=(Map)object;    printer.printRecord(getMapRecordValues(map));  } else {    Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);    while (it.hasNext()) {      printer.printRecord(getMapRecordValues(it.next()));    }  }  StringBuilder stringBuilder=(StringBuilder)printer.getOut();  outputStream.write(stringBuilder.toString().getBytes());  stringBuilder.setLength(0);} @AT@ 4988 @LENGTH@ 449
------INS IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @TO@ Block@@SyncBody:{  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }  StringBuilder stringBuilder=(StringBuilder)printer.getOut();  outputStream.write(stringBuilder.toString().getBytes());  stringBuilder.setLength(0);} @AT@ 4890 @LENGTH@ 446
---------INS InstanceofExpression@@object instanceof Map @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 4894 @LENGTH@ 21
------------INS SimpleName@@object @TO@ InstanceofExpression@@object instanceof Map @AT@ 4894 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@object instanceof Map @AT@ 4901 @LENGTH@ 10
------------INS SimpleType@@Map @TO@ InstanceofExpression@@object instanceof Map @AT@ 4912 @LENGTH@ 3
---------INS Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 4917 @LENGTH@ 129
------------INS VariableDeclarationStatement@@Map map=(Map)object; @TO@ Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @AT@ 4939 @LENGTH@ 23
---------------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map map=(Map)object; @AT@ 4939 @LENGTH@ 3
---------------INS VariableDeclarationFragment@@map=(Map)object @TO@ VariableDeclarationStatement@@Map map=(Map)object; @AT@ 4943 @LENGTH@ 18
------------------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=(Map)object @AT@ 4943 @LENGTH@ 3
------------------INS CastExpression@@(Map)object @TO@ VariableDeclarationFragment@@map=(Map)object @AT@ 4949 @LENGTH@ 12
---------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)object @AT@ 4950 @LENGTH@ 3
---------------------INS SimpleName@@object @TO@ CastExpression@@(Map)object @AT@ 4955 @LENGTH@ 6
------------INS ExpressionStatement@@MethodInvocation:printer.printRecord(getMapRecordValues(map)) @TO@ Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @AT@ 4983 @LENGTH@ 45
---------------INS MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @TO@ ExpressionStatement@@MethodInvocation:printer.printRecord(getMapRecordValues(map)) @AT@ 4983 @LENGTH@ 44
------------------INS SimpleName@@Name:printer @TO@ MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @AT@ 4983 @LENGTH@ 7
------------------INS SimpleName@@MethodName:printRecord:[getMapRecordValues(map)] @TO@ MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @AT@ 4991 @LENGTH@ 36
---------------------INS MethodInvocation@@getMapRecordValues(map) @TO@ SimpleName@@MethodName:printRecord:[getMapRecordValues(map)] @AT@ 5003 @LENGTH@ 23
------------------------INS SimpleName@@MethodName:getMapRecordValues:[map] @TO@ MethodInvocation@@getMapRecordValues(map) @AT@ 5003 @LENGTH@ 23
---------------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:getMapRecordValues:[map] @AT@ 5022 @LENGTH@ 3
------------------------INS SimpleName@@MethodName:getMapRecordValues:[map] @TO@ MethodInvocation@@getMapRecordValues(map) @AT@ 5003 @LENGTH@ 23
---------------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:getMapRecordValues:[map] @AT@ 5022 @LENGTH@ 3
---------INS Block@@ElseBody:{  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 5052 @LENGTH@ 284
------------MOV VariableDeclarationStatement@@Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object); @TO@ Block@@ElseBody:{  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 4849 @LENGTH@ 103
------------MOV WhileStatement@@while (it.hasNext()) {  printer.printRecord(getMapRecordValues(it.next()));} @TO@ Block@@ElseBody:{  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 5006 @LENGTH@ 112
------------MOV WhileStatement@@while (it.hasNext()) {  printer.printRecord(getMapRecordValues(it.next()));} @TO@ Block@@ElseBody:{  Iterator<Map<String,String>> it=(Iterator<Map<String,String>>)ObjectHelper.createIterator(object);  while (it.hasNext()) {    printer.printRecord(getMapRecordValues(it.next()));  }} @AT@ 5006 @LENGTH@ 112


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isWritable(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isWritable(file)) @AT@ 2958 @LENGTH@ 55
---UPD MethodInvocation@@toFileVisitResult(Files.isWritable(file),file) @TO@ toFileVisitResult(Files.isWritable(file)) @AT@ 2965 @LENGTH@ 47
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isWritable(file), file] @TO@ MethodName:toFileVisitResult:[Files.isWritable(file)] @AT@ 2965 @LENGTH@ 47
---------DEL SimpleName@@file @AT@ 3007 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testAfterPropertesSetException, Exception,  @TO@ public, void, MethodName:testAfterPropertiesSetException, Exception,  @AT@ 4312 @LENGTH@ 437
---UPD SimpleName@@MethodName:testAfterPropertesSetException @TO@ MethodName:testAfterPropertiesSetException @AT@ 4324 @LENGTH@ 30


UPD MethodDeclaration@@public, boolean, MethodName:processException, Exchange exchange, TopicPartition partition, long partitionLastOffset, ExceptionHandler exceptionHandler,  @TO@ private, boolean, MethodName:processException, Exchange exchange, TopicPartition partition, long partitionLastOffset, ExceptionHandler exceptionHandler,  @AT@ 6970 @LENGTH@ 1028
---UPD Modifier@@public @TO@ private @AT@ 6970 @LENGTH@ 6
---UPD IfStatement@@if (configuration.isBreakOnFirstError()) {  LOG.warn("Error during processing {} from topic: {}",exchange,partition.topic(),exchange.getException());  LOG.warn("Will seek consumer to offset {} and start polling again.",partitionLastOffset);  commitOffset(partition,partitionLastOffset,false,true,threadId);  return true;} else {  exceptionHandler.handleException("Error during processing",exchange,exchange.getException());} @TO@ if (configuration.isBreakOnFirstError()) {  LOG.warn("Error during processing {} from topic: {}",exchange,partition.topic(),exchange.getException());  LOG.warn("Will seek consumer to offset {} and start polling again.",partitionLastOffset);  commitOffset(partition,partitionLastOffset,false,true);  return true;} else {  exceptionHandler.handleException("Error during processing",exchange,exchange.getException());} @AT@ 7222 @LENGTH@ 747
------UPD Block@@ThenBody:{  LOG.warn("Error during processing {} from topic: {}",exchange,partition.topic(),exchange.getException());  LOG.warn("Will seek consumer to offset {} and start polling again.",partitionLastOffset);  commitOffset(partition,partitionLastOffset,false,true,threadId);  return true;} @TO@ ThenBody:{  LOG.warn("Error during processing {} from topic: {}",exchange,partition.topic(),exchange.getException());  LOG.warn("Will seek consumer to offset {} and start polling again.",partitionLastOffset);  commitOffset(partition,partitionLastOffset,false,true);  return true;} @AT@ 7263 @LENGTH@ 510
---------UPD ExpressionStatement@@MethodInvocation:commitOffset(partition,partitionLastOffset,false,true,threadId) @TO@ MethodInvocation:commitOffset(partition,partitionLastOffset,false,true) @AT@ 7627 @LENGTH@ 68
------------UPD MethodInvocation@@commitOffset(partition,partitionLastOffset,false,true,threadId) @TO@ commitOffset(partition,partitionLastOffset,false,true) @AT@ 7627 @LENGTH@ 67
---------------UPD SimpleName@@MethodName:commitOffset:[partition, partitionLastOffset, false, true, threadId] @TO@ MethodName:commitOffset:[partition, partitionLastOffset, false, true] @AT@ 7627 @LENGTH@ 67
------------------DEL SimpleName@@threadId @AT@ 7685 @LENGTH@ 8


INS MethodDeclaration@@void, MethodName:parsesNullValue,  @TO@ TypeDeclaration@@ParameterBindingJsonReaderUnitTests,  @AT@ 13944 @LENGTH@ 135
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:parsesNullValue,  @AT@ 13939 @LENGTH@ 4
---INS SimpleName@@MethodName:parsesNullValue @TO@ MethodDeclaration@@void, MethodName:parsesNullValue,  @AT@ 13944 @LENGTH@ 15
---INS VariableDeclarationStatement@@Document target=parse("{ 'parent' : null }"); @TO@ MethodDeclaration@@void, MethodName:parsesNullValue,  @AT@ 13967 @LENGTH@ 47
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document target=parse("{ 'parent' : null }"); @AT@ 13967 @LENGTH@ 8
------INS VariableDeclarationFragment@@target=parse("{ 'parent' : null }") @TO@ VariableDeclarationStatement@@Document target=parse("{ 'parent' : null }"); @AT@ 13976 @LENGTH@ 37
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=parse("{ 'parent' : null }") @AT@ 13976 @LENGTH@ 6
---------INS MethodInvocation@@parse("{ 'parent' : null }") @TO@ VariableDeclarationFragment@@target=parse("{ 'parent' : null }") @AT@ 13985 @LENGTH@ 28
------------INS SimpleName@@MethodName:parse:["{ 'parent' : null }"] @TO@ MethodInvocation@@parse("{ 'parent' : null }") @AT@ 13985 @LENGTH@ 28
---------------INS StringLiteral@@"{ 'parent' : null }" @TO@ SimpleName@@MethodName:parse:["{ 'parent' : null }"] @AT@ 13991 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(new Document("parent",null)) @TO@ MethodDeclaration@@void, MethodName:parsesNullValue,  @AT@ 14017 @LENGTH@ 59
------INS MethodInvocation@@assertThat(target).isEqualTo(new Document("parent",null)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(new Document("parent",null)) @AT@ 14017 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:assertThat:[target] @TO@ MethodInvocation@@assertThat(target).isEqualTo(new Document("parent",null)) @AT@ 14017 @LENGTH@ 18
------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:assertThat:[target] @AT@ 14028 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[new Document("parent",null)] @TO@ MethodInvocation@@assertThat(target).isEqualTo(new Document("parent",null)) @AT@ 14036 @LENGTH@ 39
------------INS ClassInstanceCreation@@Document["parent", null] @TO@ SimpleName@@MethodName:isEqualTo:[new Document("parent",null)] @AT@ 14046 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@Document["parent", null] @AT@ 14046 @LENGTH@ 3
---------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["parent", null] @AT@ 14050 @LENGTH@ 8
---------------INS StringLiteral@@"parent" @TO@ ClassInstanceCreation@@Document["parent", null] @AT@ 14059 @LENGTH@ 8
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@Document["parent", null] @AT@ 14069 @LENGTH@ 4


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(2).format(true).build(); @AT@ 2692 @LENGTH@ 143
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(2).format(true).build() @AT@ 2707 @LENGTH@ 127
------UPD MethodInvocation@@new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(TestMetaStoreEventListenerInRepl.conf).numDataNodes(2).format(true).build() @AT@ 2732 @LENGTH@ 102
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 2732 @LENGTH@ 81
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2811 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Error(OAuth2ErrorCodes.INVALID_REQUEST,reason,"https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ ClassInstanceCreation:new OAuth2Error(OAuth2ErrorCodes.INVALID_TOKEN,reason,"https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 3245 @LENGTH@ 120
---UPD ClassInstanceCreation@@OAuth2Error[OAuth2ErrorCodes.INVALID_REQUEST, reason, "https://tools.ietf.org/html/rfc6750#section-3.1"] @TO@ OAuth2Error[OAuth2ErrorCodes.INVALID_TOKEN, reason, "https://tools.ietf.org/html/rfc6750#section-3.1"] @AT@ 3252 @LENGTH@ 112
------UPD QualifiedName@@OAuth2ErrorCodes.INVALID_REQUEST @TO@ OAuth2ErrorCodes.INVALID_TOKEN @AT@ 3268 @LENGTH@ 32
---------UPD SimpleName@@INVALID_REQUEST @TO@ INVALID_TOKEN @AT@ 3285 @LENGTH@ 15


UPD MethodDeclaration@@protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction,  @TO@ protected, PreparedQuery<T>, T extends Object, MethodName:prepareQuery, Class<T> returnedType, Map<PropertyPath,Boolean> includedProperties, Neo4jParameterAccessor parameterAccessor, @Nullable Neo4jQueryType queryType, @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction,  @AT@ 2612 @LENGTH@ 805
---UPD SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @TO@ @Nullable Supplier<BiFunction<TypeSystem,MapAccessor,?>> mappingFunction @AT@ 2825 @LENGTH@ 64
------DEL ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2835 @LENGTH@ 38
------INS ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @TO@ SingleVariableDeclaration@@@Nullable BiFunction<TypeSystem,MapAccessor,?> mappingFunction @AT@ 2871 @LENGTH@ 48
---------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2871 @LENGTH@ 8
---------INS ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @TO@ ParameterizedType@@Supplier<BiFunction<TypeSystem,MapAccessor,?>> @AT@ 2880 @LENGTH@ 38
------------MOV SimpleType@@BiFunction @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2835 @LENGTH@ 10
------------MOV SimpleType@@TypeSystem @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2846 @LENGTH@ 10
------------MOV SimpleType@@MapAccessor @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2858 @LENGTH@ 11
------------MOV WildcardType@@? @TO@ ParameterizedType@@BiFunction<TypeSystem,MapAccessor,?> @AT@ 2871 @LENGTH@ 1


UPD TryStatement@@try {  stmt=conn.createStatement();  if (parameters != null && !parameters.isEmpty()) {    Map<String,Object> copy=new HashMap<>(parameters);    PropertyBindingSupport.bindProperties(exchange.getContext(),stmt,copy);  }  LOG.debug("Executing JDBC Statement: {}",sql);  Boolean shouldRetrieveGeneratedKeys=exchange.getIn().getHeader(JdbcConstants.JDBC_RETRIEVE_GENERATED_KEYS,false,Boolean.class);  boolean stmtExecutionResult;  if (shouldRetrieveGeneratedKeys) {    Object expectedGeneratedColumns=exchange.getIn().getHeader(JdbcConstants.JDBC_GENERATED_COLUMNS);    if (expectedGeneratedColumns == null) {      stmtExecutionResult=stmt.execute(sql,Statement.RETURN_GENERATED_KEYS);    } else     if (expectedGeneratedColumns instanceof String[]) {      stmtExecutionResult=stmt.execute(sql,(String[])expectedGeneratedColumns);    } else     if (expectedGeneratedColumns instanceof int[]) {      stmtExecutionResult=stmt.execute(sql,(int[])expectedGeneratedColumns);    } else {      throw new IllegalArgumentException("Header specifying expected returning columns isn't an instance of String[] or int[] but " + expectedGeneratedColumns.getClass());    }  } else {    stmtExecutionResult=stmt.execute(sql);  }  if (stmtExecutionResult) {    rs=stmt.getResultSet();    shouldCloseResources=setResultSet(exchange,conn,rs);  } else {    int updateCount=stmt.getUpdateCount();    exchange.getMessage().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);  }  if (shouldRetrieveGeneratedKeys) {    setGeneratedKeys(exchange,conn,stmt.getGeneratedKeys());  }}  finally {  if (shouldCloseResources) {    closeQuietly(rs);    closeQuietly(stmt);  }} @TO@ try (Statement stmt=conn.createStatement()){  if (parameters != null && !parameters.isEmpty()) {    Map<String,Object> copy=new HashMap<>(parameters);    PropertyBindingSupport.bindProperties(exchange.getContext(),stmt,copy);  }  LOG.debug("Executing JDBC Statement: {}",sql);  Boolean shouldRetrieveGeneratedKeys=exchange.getIn().getHeader(JdbcConstants.JDBC_RETRIEVE_GENERATED_KEYS,false,Boolean.class);  boolean stmtExecutionResult;  if (shouldRetrieveGeneratedKeys) {    Object expectedGeneratedColumns=exchange.getIn().getHeader(JdbcConstants.JDBC_GENERATED_COLUMNS);    if (expectedGeneratedColumns == null) {      stmtExecutionResult=stmt.execute(sql,Statement.RETURN_GENERATED_KEYS);    } else     if (expectedGeneratedColumns instanceof String[]) {      stmtExecutionResult=stmt.execute(sql,(String[])expectedGeneratedColumns);    } else     if (expectedGeneratedColumns instanceof int[]) {      stmtExecutionResult=stmt.execute(sql,(int[])expectedGeneratedColumns);    } else {      throw new IllegalArgumentException("Header specifying expected returning columns isn't an instance of String[] or int[] but " + expectedGeneratedColumns.getClass());    }  } else {    stmtExecutionResult=stmt.execute(sql);  }  if (stmtExecutionResult) {    rs=stmt.getResultSet();    shouldCloseResources=setResultSet(exchange,conn,rs);  } else {    int updateCount=stmt.getUpdateCount();    exchange.getMessage().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);  }  if (shouldRetrieveGeneratedKeys) {    setGeneratedKeys(exchange,conn,stmt.getGeneratedKeys());  }}  finally {  if (shouldCloseResources) {    closeQuietly(rs);  }} @AT@ 7819 @LENGTH@ 2292
---INS VariableDeclarationExpression@@Statement stmt=conn.createStatement() @TO@ TryStatement@@try {  stmt=conn.createStatement();  if (parameters != null && !parameters.isEmpty()) {    Map<String,Object> copy=new HashMap<>(parameters);    PropertyBindingSupport.bindProperties(exchange.getContext(),stmt,copy);  }  LOG.debug("Executing JDBC Statement: {}",sql);  Boolean shouldRetrieveGeneratedKeys=exchange.getIn().getHeader(JdbcConstants.JDBC_RETRIEVE_GENERATED_KEYS,false,Boolean.class);  boolean stmtExecutionResult;  if (shouldRetrieveGeneratedKeys) {    Object expectedGeneratedColumns=exchange.getIn().getHeader(JdbcConstants.JDBC_GENERATED_COLUMNS);    if (expectedGeneratedColumns == null) {      stmtExecutionResult=stmt.execute(sql,Statement.RETURN_GENERATED_KEYS);    } else     if (expectedGeneratedColumns instanceof String[]) {      stmtExecutionResult=stmt.execute(sql,(String[])expectedGeneratedColumns);    } else     if (expectedGeneratedColumns instanceof int[]) {      stmtExecutionResult=stmt.execute(sql,(int[])expectedGeneratedColumns);    } else {      throw new IllegalArgumentException("Header specifying expected returning columns isn't an instance of String[] or int[] but " + expectedGeneratedColumns.getClass());    }  } else {    stmtExecutionResult=stmt.execute(sql);  }  if (stmtExecutionResult) {    rs=stmt.getResultSet();    shouldCloseResources=setResultSet(exchange,conn,rs);  } else {    int updateCount=stmt.getUpdateCount();    exchange.getMessage().setHeader(JdbcConstants.JDBC_UPDATE_COUNT,updateCount);  }  if (shouldRetrieveGeneratedKeys) {    setGeneratedKeys(exchange,conn,stmt.getGeneratedKeys());  }}  finally {  if (shouldCloseResources) {    closeQuietly(rs);    closeQuietly(stmt);  }} @AT@ 7794 @LENGTH@ 39
------INS SimpleType@@Statement @TO@ VariableDeclarationExpression@@Statement stmt=conn.createStatement() @AT@ 7794 @LENGTH@ 9
------INS VariableDeclarationFragment@@stmt=conn.createStatement() @TO@ VariableDeclarationExpression@@Statement stmt=conn.createStatement() @AT@ 7804 @LENGTH@ 29
---------INS SimpleName@@stmt @TO@ VariableDeclarationFragment@@stmt=conn.createStatement() @AT@ 7804 @LENGTH@ 4
---------INS MethodInvocation@@conn.createStatement() @TO@ VariableDeclarationFragment@@stmt=conn.createStatement() @AT@ 7811 @LENGTH@ 22
------------MOV SimpleName@@Name:conn @TO@ MethodInvocation@@conn.createStatement() @AT@ 7844 @LENGTH@ 4
------------MOV SimpleName@@MethodName:createStatement:[] @TO@ MethodInvocation@@conn.createStatement() @AT@ 7849 @LENGTH@ 17
---DEL ExpressionStatement@@Assignment:stmt=conn.createStatement() @AT@ 7837 @LENGTH@ 30
------DEL Assignment@@stmt=conn.createStatement() @AT@ 7837 @LENGTH@ 29
---------DEL SimpleName@@stmt @AT@ 7837 @LENGTH@ 4
---------DEL Operator@@= @AT@ 7841 @LENGTH@ 1
---------DEL MethodInvocation@@conn.createStatement() @AT@ 7844 @LENGTH@ 22
---UPD Block@@FinallyBody:{  if (shouldCloseResources) {    closeQuietly(rs);    closeQuietly(stmt);  }} @TO@ FinallyBody:{  if (shouldCloseResources) {    closeQuietly(rs);  }} @AT@ 9976 @LENGTH@ 135
------UPD IfStatement@@if (shouldCloseResources) {  closeQuietly(rs);  closeQuietly(stmt);} @TO@ if (shouldCloseResources) {  closeQuietly(rs);} @AT@ 9990 @LENGTH@ 111
---------UPD Block@@ThenBody:{  closeQuietly(rs);  closeQuietly(stmt);} @TO@ ThenBody:{  closeQuietly(rs);} @AT@ 10016 @LENGTH@ 85
------------DEL ExpressionStatement@@MethodInvocation:closeQuietly(stmt) @AT@ 10068 @LENGTH@ 19
---------------DEL MethodInvocation@@closeQuietly(stmt) @AT@ 10068 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:closeQuietly:[stmt] @AT@ 10068 @LENGTH@ 18
---------------------DEL SimpleName@@stmt @AT@ 10081 @LENGTH@ 4


UPD TypeDeclaration@@[private, final]BridgePropertiesParser, [PropertiesParser] @TO@ [private, static, final]BridgePropertiesParser, [PropertiesParser] @AT@ 7303 @LENGTH@ 1324
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final]BridgePropertiesParser, [PropertiesParser] @AT@ 7311 @LENGTH@ 6


UPD VariableDeclarationStatement@@MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build(); @TO@ MiniDFSCluster miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build(); @AT@ 4228 @LENGTH@ 110
---UPD VariableDeclarationFragment@@miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ miniDFSCluster=new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 4243 @LENGTH@ 94
------UPD MethodInvocation@@new MiniDFSCluster.Builder(conf).numDataNodes(1).format(true).build() @TO@ new MiniDFSCluster.Builder(conf).numDataNodes(2).format(true).build() @AT@ 4268 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:numDataNodes:[1] @TO@ MethodName:numDataNodes:[2] @AT@ 4268 @LENGTH@ 48
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4314 @LENGTH@ 1


UPD VariableDeclarationStatement@@String cid=getJMSCorrelationIDAsBytes(message); @TO@ String cid=getJMSCorrelationID(message); @AT@ 21556 @LENGTH@ 49
---UPD VariableDeclarationFragment@@cid=getJMSCorrelationIDAsBytes(message) @TO@ cid=getJMSCorrelationID(message) @AT@ 21563 @LENGTH@ 41
------UPD MethodInvocation@@getJMSCorrelationIDAsBytes(message) @TO@ getJMSCorrelationID(message) @AT@ 21569 @LENGTH@ 35
---------UPD SimpleName@@MethodName:getJMSCorrelationIDAsBytes:[message] @TO@ MethodName:getJMSCorrelationID:[message] @AT@ 21569 @LENGTH@ 35


UPD TryStatement@@try {  String logoutUrl=(instanceUrl == null ? config.getLoginUrl() : instanceUrl) + OAUTH2_REVOKE_PATH + accessToken;  final Request logoutGet=httpClient.newRequest(logoutUrl).timeout(timeout,TimeUnit.MILLISECONDS);  final ContentResponse logoutResponse=logoutGet.send();  final int statusCode=logoutResponse.getStatus();  final String reason=logoutResponse.getReason();  if (statusCode == HttpStatus.OK_200) {    LOG.info("Logout successful");  } else {    throw new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode);  }} catch (InterruptedException e) {  String msg="Logout error: " + e.getMessage();  throw new SalesforceException(msg,e);}catch (ExecutionException e) {  final Throwable ex=e.getCause();  throw new SalesforceException("Unexpected logout exception: " + ex.getMessage(),ex);}catch (TimeoutException e) {  throw new SalesforceException("Logout request TIMEOUT!",null);} finally {  accessToken=null;  instanceUrl=null;  for (  SalesforceSessionListener listener : listeners) {    try {      listener.onLogout();    } catch (    Exception t) {      LOG.warn("Unexpected error from listener {}: {}",listener,t.getMessage());    }  }} @TO@ try {  String logoutUrl=(instanceUrl == null ? config.getLoginUrl() : instanceUrl) + OAUTH2_REVOKE_PATH + accessToken;  final Request logoutGet=httpClient.newRequest(logoutUrl).timeout(timeout,TimeUnit.MILLISECONDS);  final ContentResponse logoutResponse=logoutGet.send();  final int statusCode=logoutResponse.getStatus();  final String reason=logoutResponse.getReason();  if (statusCode == HttpStatus.OK_200) {    LOG.debug("Logout successful");  } else {    LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired");  }} catch (InterruptedException e) {  String msg="Logout error: " + e.getMessage();  throw new SalesforceException(msg,e);}catch (ExecutionException e) {  final Throwable ex=e.getCause();  throw new SalesforceException("Unexpected logout exception: " + ex.getMessage(),ex);}catch (TimeoutException e) {  throw new SalesforceException("Logout request TIMEOUT!",e);} finally {  accessToken=null;  instanceUrl=null;  for (  SalesforceSessionListener listener : listeners) {    try {      listener.onLogout();    } catch (    Exception t) {      LOG.warn("Unexpected error from listener {}: {}",listener,t.getMessage());    }  }} @AT@ 13145 @LENGTH@ 1667
---UPD IfStatement@@if (statusCode == HttpStatus.OK_200) {  LOG.info("Logout successful");} else {  throw new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode);} @TO@ if (statusCode == HttpStatus.OK_200) {  LOG.debug("Logout successful");} else {  LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired");} @AT@ 13597 @LENGTH@ 280
------UPD Block@@ThenBody:{  LOG.info("Logout successful");} @TO@ ThenBody:{  LOG.debug("Logout successful");} @AT@ 13634 @LENGTH@ 62
---------UPD ExpressionStatement@@MethodInvocation:LOG.info("Logout successful") @TO@ MethodInvocation:LOG.debug("Logout successful") @AT@ 13652 @LENGTH@ 30
------------UPD MethodInvocation@@LOG.info("Logout successful") @TO@ LOG.debug("Logout successful") @AT@ 13652 @LENGTH@ 29
---------------UPD SimpleName@@MethodName:info:["Logout successful"] @TO@ MethodName:debug:["Logout successful"] @AT@ 13656 @LENGTH@ 25
------UPD Block@@ElseBody:{  throw new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode);} @TO@ ElseBody:{  LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired");} @AT@ 13702 @LENGTH@ 175
---------DEL ThrowStatement@@ClassInstanceCreation:new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode) @AT@ 13720 @LENGTH@ 143
------------DEL ClassInstanceCreation@@SalesforceException[String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason), statusCode] @AT@ 13726 @LENGTH@ 136
---------------DEL New@@new @AT@ 13726 @LENGTH@ 3
---------------DEL SimpleType@@SalesforceException @AT@ 13730 @LENGTH@ 19
---------------DEL MethodInvocation@@String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason) @AT@ 13775 @LENGTH@ 74
---------------DEL SimpleName@@statusCode @AT@ 13851 @LENGTH@ 10
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired") @TO@ Block@@ElseBody:{  throw new SalesforceException(String.format("Logout error, code: [%s] reason: [%s]",statusCode,reason),statusCode);} @AT@ 13721 @LENGTH@ 103
------------INS MethodInvocation@@LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired") @AT@ 13721 @LENGTH@ 102
---------------MOV SimpleName@@Name:String @TO@ MethodInvocation@@LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired") @AT@ 13775 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:format:["Logout error, code: [%s] reason: [%s]", statusCode, reason] @TO@ MethodInvocation@@LOG.debug("Failed to revoke OAuth token. This is expected if the token is invalid or already expired") @AT@ 13782 @LENGTH@ 67
---UPD CatchClause@@catch (TimeoutException e) {  throw new SalesforceException("Logout request TIMEOUT!",null);} @TO@ catch (TimeoutException e) {  throw new SalesforceException("Logout request TIMEOUT!",e);} @AT@ 14229 @LENGTH@ 114
------UPD ThrowStatement@@ClassInstanceCreation:new SalesforceException("Logout request TIMEOUT!",null) @TO@ ClassInstanceCreation:new SalesforceException("Logout request TIMEOUT!",e) @AT@ 14270 @LENGTH@ 63
---------UPD ClassInstanceCreation@@SalesforceException["Logout request TIMEOUT!", null] @TO@ SalesforceException["Logout request TIMEOUT!", e] @AT@ 14276 @LENGTH@ 56
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@SalesforceException["Logout request TIMEOUT!", null] @AT@ 14288 @LENGTH@ 1
------------DEL NullLiteral@@null @AT@ 14327 @LENGTH@ 4


UPD FieldDeclaration@@private, MySqlConnectorEmbeddedDebeziumConfiguration, [configuration] @TO@ private, MySqlConnectorEmbeddedDebeziumConfiguration, [configuration=new MySqlConnectorEmbeddedDebeziumConfiguration()] @AT@ 1242 @LENGTH@ 66
---UPD VariableDeclarationFragment@@configuration @TO@ configuration=new MySqlConnectorEmbeddedDebeziumConfiguration() @AT@ 1294 @LENGTH@ 13
------INS ClassInstanceCreation@@MySqlConnectorEmbeddedDebeziumConfiguration[] @TO@ VariableDeclarationFragment@@configuration @AT@ 1310 @LENGTH@ 49
---------INS New@@new @TO@ ClassInstanceCreation@@MySqlConnectorEmbeddedDebeziumConfiguration[] @AT@ 1310 @LENGTH@ 3
---------INS SimpleType@@MySqlConnectorEmbeddedDebeziumConfiguration @TO@ ClassInstanceCreation@@MySqlConnectorEmbeddedDebeziumConfiguration[] @AT@ 1314 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(rp,"relying party identifier cannot be null") @TO@ MethodInvocation:Assert.notNull(key,"relying party identifier cannot be null") @AT@ 1911 @LENGTH@ 62
---UPD MethodInvocation@@Assert.notNull(rp,"relying party identifier cannot be null") @TO@ Assert.notNull(key,"relying party identifier cannot be null") @AT@ 1911 @LENGTH@ 61
------UPD SimpleName@@MethodName:notNull:[rp, "relying party identifier cannot be null"] @TO@ MethodName:notNull:[key, "relying party identifier cannot be null"] @AT@ 1918 @LENGTH@ 54
---------UPD SimpleName@@rp @TO@ key @AT@ 1926 @LENGTH@ 2


UPD IfStatement@@if (!(o instanceof TransactionOnCompletion) || o == null) {  return false;} @TO@ if (!(o instanceof TransactionOnCompletion)) {  return false;} @AT@ 2005 @LENGTH@ 95
---DEL InfixExpression@@!(o instanceof TransactionOnCompletion) || o == null @AT@ 2009 @LENGTH@ 52
------DEL Operator@@|| @AT@ 2048 @LENGTH@ 2
------DEL InfixExpression@@o == null @AT@ 2052 @LENGTH@ 9
---------DEL SimpleName@@o @AT@ 2052 @LENGTH@ 1
---------DEL Operator@@== @AT@ 2053 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2057 @LENGTH@ 4
---MOV PrefixExpression@@!(o instanceof TransactionOnCompletion) @TO@ IfStatement@@if (!(o instanceof TransactionOnCompletion) || o == null) {  return false;} @AT@ 2009 @LENGTH@ 39


UPD TypeDeclaration@@[@DisabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true",disabledReason="Runtime conflicts with the idempotency tests"), public]KafkaConsumerTopicIsPatternIT, BaseEmbeddedKafkaTestSupport @TO@ [public]KafkaConsumerTopicIsPatternIT, BaseEmbeddedKafkaTestSupport @AT@ 1552 @LENGTH@ 2463
---DEL NormalAnnotation@@@DisabledIfSystemProperty(named="enable.kafka.consumer.idempotency.tests",matches="true",disabledReason="Runtime conflicts with the idempotency tests") @AT@ 1552 @LENGTH@ 185


UPD ExpressionStatement@@MethodInvocation:LOG.warn("Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(),ex) @TO@ MethodInvocation:LOG.warn("Exception thrown during {} at {}. Attempt {} of {}",description,endpoint.getEndpointUri(),doneAttempts + 1,sagaService.getMaxRetryAttempts(),ex) @AT@ 7445 @LENGTH@ 214
---UPD MethodInvocation@@LOG.warn("Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(),ex) @TO@ LOG.warn("Exception thrown during {} at {}. Attempt {} of {}",description,endpoint.getEndpointUri(),doneAttempts + 1,sagaService.getMaxRetryAttempts(),ex) @AT@ 7445 @LENGTH@ 213
------UPD SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @TO@ MethodName:warn:["Exception thrown during {} at {}. Attempt {} of {}", description, endpoint.getEndpointUri(), doneAttempts + 1, sagaService.getMaxRetryAttempts(), ex] @AT@ 7449 @LENGTH@ 209
---------INS StringLiteral@@"Exception thrown during {} at {}. Attempt {} of {}" @TO@ SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @AT@ 7447 @LENGTH@ 52
---------DEL InfixExpression@@"Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts() @AT@ 7454 @LENGTH@ 179
------------DEL StringLiteral@@"Exception thrown during " @AT@ 7454 @LENGTH@ 26
------------DEL Operator@@+ @AT@ 7480 @LENGTH@ 1
------------DEL SimpleName@@description @AT@ 7483 @LENGTH@ 11
------------DEL StringLiteral@@" at " @AT@ 7497 @LENGTH@ 6
------------DEL MethodInvocation@@endpoint.getEndpointUri() @AT@ 7506 @LENGTH@ 25
------------DEL StringLiteral@@". Attempt " @AT@ 7555 @LENGTH@ 12
------------DEL ParenthesizedExpression@@(doneAttempts + 1) @AT@ 7570 @LENGTH@ 18
---------------DEL InfixExpression@@doneAttempts + 1 @AT@ 7571 @LENGTH@ 16
------------DEL StringLiteral@@" of " @AT@ 7591 @LENGTH@ 6
------------DEL MethodInvocation@@sagaService.getMaxRetryAttempts() @AT@ 7600 @LENGTH@ 33
---------INS SimpleName@@description @TO@ SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @AT@ 7501 @LENGTH@ 11
---------INS MethodInvocation@@endpoint.getEndpointUri() @TO@ SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @AT@ 7514 @LENGTH@ 25
------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getEndpointUri() @AT@ 7506 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@endpoint.getEndpointUri() @AT@ 7515 @LENGTH@ 16
---------INS InfixExpression@@doneAttempts + 1 @TO@ SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @AT@ 7561 @LENGTH@ 16
------------MOV SimpleName@@doneAttempts @TO@ InfixExpression@@doneAttempts + 1 @AT@ 7571 @LENGTH@ 12
------------MOV Operator@@+ @TO@ InfixExpression@@doneAttempts + 1 @AT@ 7583 @LENGTH@ 1
------------MOV NumberLiteral@@1 @TO@ InfixExpression@@doneAttempts + 1 @AT@ 7586 @LENGTH@ 1
---------INS MethodInvocation@@sagaService.getMaxRetryAttempts() @TO@ SimpleName@@MethodName:warn:["Exception thrown during " + description + " at "+ endpoint.getEndpointUri()+ ". Attempt "+ (doneAttempts + 1)+ " of "+ sagaService.getMaxRetryAttempts(), ex] @AT@ 7579 @LENGTH@ 33
------------MOV SimpleName@@Name:sagaService @TO@ MethodInvocation@@sagaService.getMaxRetryAttempts() @AT@ 7600 @LENGTH@ 11
------------MOV SimpleName@@MethodName:getMaxRetryAttempts:[] @TO@ MethodInvocation@@sagaService.getMaxRetryAttempts() @AT@ 7612 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, Set<String>, [TRUSTED_CLASS_NAMES=Collections.unmodifiableSet(new HashSet(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState")))] @TO@ private, static, final, Set<String>, [TRUSTED_CLASS_NAMES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState")))] @AT@ 11150 @LENGTH@ 2094
---UPD VariableDeclarationFragment@@TRUSTED_CLASS_NAMES=Collections.unmodifiableSet(new HashSet(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))) @TO@ TRUSTED_CLASS_NAMES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))) @AT@ 11183 @LENGTH@ 2060
------UPD MethodInvocation@@Collections.unmodifiableSet(new HashSet(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))) @TO@ Collections.unmodifiableSet(new HashSet<>(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))) @AT@ 11205 @LENGTH@ 2038
---------UPD SimpleName@@MethodName:unmodifiableSet:[new HashSet(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))] @TO@ MethodName:unmodifiableSet:[new HashSet<>(Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState"))] @AT@ 11217 @LENGTH@ 2026
------------UPD ClassInstanceCreation@@HashSet[Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState")] @TO@ HashSet<>[Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState")] @AT@ 11233 @LENGTH@ 2009
---------------DEL SimpleType@@HashSet @AT@ 11237 @LENGTH@ 7
---------------INS ParameterizedType@@HashSet<> @TO@ ClassInstanceCreation@@HashSet[Arrays.asList("java.util.ArrayList","java.util.Arrays$ArrayList","java.util.LinkedList","java.util.Collections$EmptyList","java.util.Collections$EmptyMap","java.util.Collections$EmptySet","java.util.Collections$UnmodifiableRandomAccessList","java.util.Collections$UnmodifiableList","java.util.Collections$UnmodifiableMap","java.util.Collections$UnmodifiableSet","java.util.Collections$SingletonList","java.util.Collections$SingletonMap","java.util.Collections$SingletonSet","java.util.Date","java.time.Instant","java.time.Duration","java.time.LocalDate","java.time.LocalTime","java.time.LocalDateTime","java.sql.Timestamp","java.net.URL","java.util.TreeMap","java.util.HashMap","java.util.LinkedHashMap","java.util.TreeSet","java.util.HashSet","java.util.LinkedHashSet","java.lang.Boolean","java.lang.Byte","java.lang.Short","java.lang.Integer","java.lang.Long","java.lang.Double","java.lang.Float","java.math.BigDecimal","java.math.BigInteger","java.lang.String","java.lang.Character","java.lang.CharSequence","java.util.Properties","[Ljava.util.Properties;","org.springframework.batch.core.JobParameter","org.springframework.batch.core.JobParameters","org.springframework.batch.core.jsr.partition.JsrPartitionHandler$PartitionPlanState")] @AT@ 11306 @LENGTH@ 9
------------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<> @AT@ 11306 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(Files.isHidden(file),file) @TO@ MethodInvocation:toFileVisitResult(Files.isHidden(file)) @AT@ 3535 @LENGTH@ 53
---UPD MethodInvocation@@toFileVisitResult(Files.isHidden(file),file) @TO@ toFileVisitResult(Files.isHidden(file)) @AT@ 3542 @LENGTH@ 45
------UPD SimpleName@@MethodName:toFileVisitResult:[Files.isHidden(file), file] @TO@ MethodName:toFileVisitResult:[Files.isHidden(file)] @AT@ 3542 @LENGTH@ 45
---------DEL SimpleName@@file @AT@ 3582 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @TO@ TypeDeclaration@@[public]ReplConst,  @AT@ 2235 @LENGTH@ 67
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @AT@ 2235 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @AT@ 2242 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @AT@ 2249 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @AT@ 2255 @LENGTH@ 6
---INS VariableDeclarationFragment@@REPL_INCOMPATIBLE="repl.incompatible" @TO@ FieldDeclaration@@public, static, final, String, [REPL_INCOMPATIBLE="repl.incompatible"] @AT@ 2262 @LENGTH@ 39
------INS SimpleName@@REPL_INCOMPATIBLE @TO@ VariableDeclarationFragment@@REPL_INCOMPATIBLE="repl.incompatible" @AT@ 2262 @LENGTH@ 17
------INS StringLiteral@@"repl.incompatible" @TO@ VariableDeclarationFragment@@REPL_INCOMPATIBLE="repl.incompatible" @AT@ 2282 @LENGTH@ 19


UPD FieldDeclaration@@private, int, [maxRetries=5] @TO@ private, int, [maxRetries=1] @AT@ 7927 @LENGTH@ 27
---UPD VariableDeclarationFragment@@maxRetries=5 @TO@ maxRetries=1 @AT@ 7939 @LENGTH@ 14
------UPD NumberLiteral@@5 @TO@ 1 @AT@ 7952 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ MethodInvocation:from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2347 @LENGTH@ 77
---UPD MethodInvocation@@from("file:src/main/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @TO@ from("file:src/test/data?noop=true").log("Got ${file:name}").to(getFtpUrl()) @AT@ 2347 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:from:["file:src/main/data?noop=true"] @TO@ MethodName:from:["file:src/test/data?noop=true"] @AT@ 2347 @LENGTH@ 36
---------UPD StringLiteral@@"file:src/main/data?noop=true" @TO@ "file:src/test/data?noop=true" @AT@ 2352 @LENGTH@ 30


INS IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @TO@ MethodDeclaration@@private, void, MethodName:runTaskWrapper, CountDownLatch latch, BooleanSupplier supplier,  @AT@ 3722 @LENGTH@ 141
---INS PrefixExpression@@!budget.next() @TO@ IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3726 @LENGTH@ 14
------INS Operator@@! @TO@ PrefixExpression@@!budget.next() @AT@ 3726 @LENGTH@ 1
------INS MethodInvocation@@budget.next() @TO@ PrefixExpression@@!budget.next() @AT@ 3727 @LENGTH@ 13
---------INS SimpleName@@Name:budget @TO@ MethodInvocation@@budget.next() @AT@ 3727 @LENGTH@ 6
---------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@budget.next() @AT@ 3734 @LENGTH@ 6
---INS Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @TO@ IfStatement@@if (!budget.next()) {  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3742 @LENGTH@ 121
------INS ExpressionStatement@@MethodInvocation:LOG.warn("The task {} does not have more budget to continue running",name) @TO@ Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3756 @LENGTH@ 76
---------INS MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3756 @LENGTH@ 75
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3756 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @TO@ MethodInvocation@@LOG.warn("The task {} does not have more budget to continue running",name) @AT@ 3760 @LENGTH@ 71
---------------INS StringLiteral@@"The task {} does not have more budget to continue running" @TO@ SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @AT@ 3765 @LENGTH@ 59
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:warn:["The task {} does not have more budget to continue running", name] @AT@ 3826 @LENGTH@ 4
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  LOG.warn("The task {} does not have more budget to continue running",name);  return;} @AT@ 3846 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "].") @TO@ MethodInvocation:LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}].",StringUtils.arrayToCommaDelimitedString(excludedClasses)) @AT@ 8747 @LENGTH@ 240
---UPD MethodInvocation@@LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "].") @TO@ LOG.debug("Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}].",StringUtils.arrayToCommaDelimitedString(excludedClasses)) @AT@ 8747 @LENGTH@ 239
------UPD SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @TO@ MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}].", StringUtils.arrayToCommaDelimitedString(excludedClasses)] @AT@ 8751 @LENGTH@ 235
---------DEL InfixExpression@@"Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]." @AT@ 8757 @LENGTH@ 228
------------DEL InfixExpression@@"Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" @AT@ 8757 @LENGTH@ 132
---------------DEL StringLiteral@@"Setting up package scanning excluded classes as ExcludeRoutes " @AT@ 8757 @LENGTH@ 64
---------------DEL Operator@@+ @AT@ 8821 @LENGTH@ 1
---------------DEL StringLiteral@@"annotation was found. Excluding [" @AT@ 8854 @LENGTH@ 35
------------DEL Operator@@+ @AT@ 8889 @LENGTH@ 1
------------DEL StringLiteral@@"]." @AT@ 8981 @LENGTH@ 4
---------INS StringLiteral@@"Setting up package scanning excluded classes as ExcludeRoutes annotation was found. Excluding [{}]." @TO@ SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @AT@ 8782 @LENGTH@ 101
---------MOV MethodInvocation@@StringUtils.arrayToCommaDelimitedString(excludedClasses) @TO@ SimpleName@@MethodName:debug:["Setting up package scanning excluded classes as ExcludeRoutes " + "annotation was found. Excluding [" + StringUtils.arrayToCommaDelimitedString(excludedClasses) + "]."] @AT@ 8892 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:LOG.info("Cleaning based on min open txn id: " + minOpenTxnId) @TO@ MethodInvocation:LOG.info("Cleaning based on min open txn id: " + cleanerWaterMark) @AT@ 6091 @LENGTH@ 63
---UPD MethodInvocation@@LOG.info("Cleaning based on min open txn id: " + minOpenTxnId) @TO@ LOG.info("Cleaning based on min open txn id: " + cleanerWaterMark) @AT@ 6091 @LENGTH@ 62
------UPD SimpleName@@MethodName:info:["Cleaning based on min open txn id: " + minOpenTxnId] @TO@ MethodName:info:["Cleaning based on min open txn id: " + cleanerWaterMark] @AT@ 6095 @LENGTH@ 58
---------UPD InfixExpression@@"Cleaning based on min open txn id: " + minOpenTxnId @TO@ "Cleaning based on min open txn id: " + cleanerWaterMark @AT@ 6100 @LENGTH@ 52
------------UPD SimpleName@@minOpenTxnId @TO@ cleanerWaterMark @AT@ 6140 @LENGTH@ 12


UPD TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @TO@ try (InputStream fileInputStream=new FileInputStream(input)){  Image image=ImageFactory.getInstance().fromInputStream(fileInputStream);  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3165 @LENGTH@ 347
---INS VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @TO@ TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3170 @LENGTH@ 56
------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3170 @LENGTH@ 11
------INS VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3182 @LENGTH@ 44
---------INS SimpleName@@fileInputStream @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3182 @LENGTH@ 15
---------INS ClassInstanceCreation@@FileInputStream[input] @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3200 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3200 @LENGTH@ 3
------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3204 @LENGTH@ 15
------------INS SimpleName@@input @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3220 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)); @TO@ Image image=ImageFactory.getInstance().fromInputStream(fileInputStream); @AT@ 3183 @LENGTH@ 85
------UPD VariableDeclarationFragment@@image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ image=ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3189 @LENGTH@ 78
---------UPD MethodInvocation@@ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3197 @LENGTH@ 70
------------UPD SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @TO@ MethodName:fromInputStream:[fileInputStream] @AT@ 3224 @LENGTH@ 43
---------------DEL ClassInstanceCreation@@FileInputStream[input] @AT@ 3240 @LENGTH@ 26
------------------DEL New@@new @AT@ 3240 @LENGTH@ 3
------------------DEL SimpleType@@FileInputStream @AT@ 3244 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 3260 @LENGTH@ 5
---------------INS SimpleName@@fileInputStream @TO@ SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @AT@ 3299 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @TO@ TypeDeclaration@@[public]IOUtilsCopyTest,  @AT@ 3243 @LENGTH@ 538
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3243 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3250 @LENGTH@ 4
---INS SimpleName@@MethodName:testCopy_byteArrayOutputStreamToInputStream @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3255 @LENGTH@ 43
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3308 @LENGTH@ 9
---INS VariableDeclarationStatement@@final java.io.ByteArrayOutputStream out=new java.io.ByteArrayOutputStream(); @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3328 @LENGTH@ 78
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final java.io.ByteArrayOutputStream out=new java.io.ByteArrayOutputStream(); @AT@ 3328 @LENGTH@ 5
------INS SimpleType@@java.io.ByteArrayOutputStream @TO@ VariableDeclarationStatement@@final java.io.ByteArrayOutputStream out=new java.io.ByteArrayOutputStream(); @AT@ 3334 @LENGTH@ 29
------INS VariableDeclarationFragment@@out=new java.io.ByteArrayOutputStream() @TO@ VariableDeclarationStatement@@final java.io.ByteArrayOutputStream out=new java.io.ByteArrayOutputStream(); @AT@ 3364 @LENGTH@ 41
---------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=new java.io.ByteArrayOutputStream() @AT@ 3364 @LENGTH@ 3
---------INS ClassInstanceCreation@@java.io.ByteArrayOutputStream[] @TO@ VariableDeclarationFragment@@out=new java.io.ByteArrayOutputStream() @AT@ 3370 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@java.io.ByteArrayOutputStream[] @AT@ 3370 @LENGTH@ 3
------------INS SimpleType@@java.io.ByteArrayOutputStream @TO@ ClassInstanceCreation@@java.io.ByteArrayOutputStream[] @AT@ 3374 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:out.write(inData) @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3415 @LENGTH@ 18
------INS MethodInvocation@@out.write(inData) @TO@ ExpressionStatement@@MethodInvocation:out.write(inData) @AT@ 3415 @LENGTH@ 17
---------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.write(inData) @AT@ 3415 @LENGTH@ 3
---------INS SimpleName@@MethodName:write:[inData] @TO@ MethodInvocation@@out.write(inData) @AT@ 3419 @LENGTH@ 13
------------INS SimpleName@@inData @TO@ SimpleName@@MethodName:write:[inData] @AT@ 3425 @LENGTH@ 6
---INS VariableDeclarationStatement@@final InputStream in=IOUtils.copy(out); @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3443 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final InputStream in=IOUtils.copy(out); @AT@ 3443 @LENGTH@ 5
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@final InputStream in=IOUtils.copy(out); @AT@ 3449 @LENGTH@ 11
------INS VariableDeclarationFragment@@in=IOUtils.copy(out) @TO@ VariableDeclarationStatement@@final InputStream in=IOUtils.copy(out); @AT@ 3461 @LENGTH@ 22
---------INS SimpleName@@in @TO@ VariableDeclarationFragment@@in=IOUtils.copy(out) @AT@ 3461 @LENGTH@ 2
---------INS MethodInvocation@@IOUtils.copy(out) @TO@ VariableDeclarationFragment@@in=IOUtils.copy(out) @AT@ 3466 @LENGTH@ 17
------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.copy(out) @AT@ 3466 @LENGTH@ 7
------------INS SimpleName@@MethodName:copy:[out] @TO@ MethodInvocation@@IOUtils.copy(out) @AT@ 3474 @LENGTH@ 9
---------------INS SimpleName@@out @TO@ SimpleName@@MethodName:copy:[out] @AT@ 3479 @LENGTH@ 3
---INS VariableDeclarationStatement@@final byte[] inData2=new byte[FILE_SIZE]; @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3494 @LENGTH@ 43
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final byte[] inData2=new byte[FILE_SIZE]; @AT@ 3494 @LENGTH@ 5
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@final byte[] inData2=new byte[FILE_SIZE]; @AT@ 3500 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3500 @LENGTH@ 4
------INS VariableDeclarationFragment@@inData2=new byte[FILE_SIZE] @TO@ VariableDeclarationStatement@@final byte[] inData2=new byte[FILE_SIZE]; @AT@ 3507 @LENGTH@ 29
---------INS SimpleName@@inData2 @TO@ VariableDeclarationFragment@@inData2=new byte[FILE_SIZE] @AT@ 3507 @LENGTH@ 7
---------INS ArrayCreation@@new byte[FILE_SIZE] @TO@ VariableDeclarationFragment@@inData2=new byte[FILE_SIZE] @AT@ 3517 @LENGTH@ 19
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[FILE_SIZE] @AT@ 3521 @LENGTH@ 15
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3521 @LENGTH@ 4
------------INS SimpleName@@FILE_SIZE @TO@ ArrayCreation@@new byte[FILE_SIZE] @AT@ 3526 @LENGTH@ 9
---INS VariableDeclarationStatement@@final int insize=in.read(inData2); @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3546 @LENGTH@ 36
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int insize=in.read(inData2); @AT@ 3546 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int insize=in.read(inData2); @AT@ 3552 @LENGTH@ 3
------INS VariableDeclarationFragment@@insize=in.read(inData2) @TO@ VariableDeclarationStatement@@final int insize=in.read(inData2); @AT@ 3556 @LENGTH@ 25
---------INS SimpleName@@insize @TO@ VariableDeclarationFragment@@insize=in.read(inData2) @AT@ 3556 @LENGTH@ 6
---------INS MethodInvocation@@in.read(inData2) @TO@ VariableDeclarationFragment@@insize=in.read(inData2) @AT@ 3565 @LENGTH@ 16
------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.read(inData2) @AT@ 3565 @LENGTH@ 2
------------INS SimpleName@@MethodName:read:[inData2] @TO@ MethodInvocation@@in.read(inData2) @AT@ 3568 @LENGTH@ 13
---------------INS SimpleName@@inData2 @TO@ SimpleName@@MethodName:read:[inData2] @AT@ 3573 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,in.available(),"Not all bytes were read") @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3592 @LENGTH@ 59
------INS MethodInvocation@@assertEquals(0,in.available(),"Not all bytes were read") @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,in.available(),"Not all bytes were read") @AT@ 3592 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertEquals:[0, in.available(), "Not all bytes were read"] @TO@ MethodInvocation@@assertEquals(0,in.available(),"Not all bytes were read") @AT@ 3592 @LENGTH@ 58
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, in.available(), "Not all bytes were read"] @AT@ 3605 @LENGTH@ 1
------------INS MethodInvocation@@in.available() @TO@ SimpleName@@MethodName:assertEquals:[0, in.available(), "Not all bytes were read"] @AT@ 3608 @LENGTH@ 14
---------------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.available() @AT@ 3608 @LENGTH@ 2
---------------INS SimpleName@@MethodName:available:[] @TO@ MethodInvocation@@in.available() @AT@ 3611 @LENGTH@ 11
------------INS StringLiteral@@"Not all bytes were read" @TO@ SimpleName@@MethodName:assertEquals:[0, in.available(), "Not all bytes were read"] @AT@ 3624 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertEquals(inData.length,insize,"Sizes differ") @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3660 @LENGTH@ 52
------INS MethodInvocation@@assertEquals(inData.length,insize,"Sizes differ") @TO@ ExpressionStatement@@MethodInvocation:assertEquals(inData.length,insize,"Sizes differ") @AT@ 3660 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertEquals:[inData.length, insize, "Sizes differ"] @TO@ MethodInvocation@@assertEquals(inData.length,insize,"Sizes differ") @AT@ 3660 @LENGTH@ 51
------------INS QualifiedName@@inData.length @TO@ SimpleName@@MethodName:assertEquals:[inData.length, insize, "Sizes differ"] @AT@ 3673 @LENGTH@ 13
---------------INS SimpleName@@inData @TO@ QualifiedName@@inData.length @AT@ 3673 @LENGTH@ 6
---------------INS SimpleName@@length @TO@ QualifiedName@@inData.length @AT@ 3680 @LENGTH@ 6
------------INS SimpleName@@insize @TO@ SimpleName@@MethodName:assertEquals:[inData.length, insize, "Sizes differ"] @AT@ 3688 @LENGTH@ 6
------------INS StringLiteral@@"Sizes differ" @TO@ SimpleName@@MethodName:assertEquals:[inData.length, insize, "Sizes differ"] @AT@ 3696 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertArrayEquals(inData,inData2,"Content differs") @TO@ MethodDeclaration@@public, void, MethodName:testCopy_byteArrayOutputStreamToInputStream, Exception,  @AT@ 3721 @LENGTH@ 54
------INS MethodInvocation@@assertArrayEquals(inData,inData2,"Content differs") @TO@ ExpressionStatement@@MethodInvocation:assertArrayEquals(inData,inData2,"Content differs") @AT@ 3721 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertArrayEquals:[inData, inData2, "Content differs"] @TO@ MethodInvocation@@assertArrayEquals(inData,inData2,"Content differs") @AT@ 3721 @LENGTH@ 53
------------INS SimpleName@@inData @TO@ SimpleName@@MethodName:assertArrayEquals:[inData, inData2, "Content differs"] @AT@ 3739 @LENGTH@ 6
------------INS SimpleName@@inData2 @TO@ SimpleName@@MethodName:assertArrayEquals:[inData, inData2, "Content differs"] @AT@ 3747 @LENGTH@ 7
------------INS StringLiteral@@"Content differs" @TO@ SimpleName@@MethodName:assertArrayEquals:[inData, inData2, "Content differs"] @AT@ 3756 @LENGTH@ 17


INS MethodDeclaration@@void, MethodName:shouldNotFailWithNullInput,  @TO@ TypeDeclaration@@TemplateSupportTest,  @AT@ 1683 @LENGTH@ 126
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithNullInput,  @AT@ 1678 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldNotFailWithNullInput @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithNullInput,  @AT@ 1683 @LENGTH@ 26
---INS VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(null); @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithNullInput,  @AT@ 1717 @LENGTH@ 60
------INS ParameterizedType@@Class<?> @TO@ VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(null); @AT@ 1717 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1717 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1723 @LENGTH@ 1
------INS VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(null) @TO@ VariableDeclarationStatement@@Class<?> type=TemplateSupport.findCommonElementType(null); @AT@ 1726 @LENGTH@ 50
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(null) @AT@ 1726 @LENGTH@ 4
---------INS MethodInvocation@@TemplateSupport.findCommonElementType(null) @TO@ VariableDeclarationFragment@@type=TemplateSupport.findCommonElementType(null) @AT@ 1733 @LENGTH@ 43
------------INS SimpleName@@Name:TemplateSupport @TO@ MethodInvocation@@TemplateSupport.findCommonElementType(null) @AT@ 1733 @LENGTH@ 15
------------INS SimpleName@@MethodName:findCommonElementType:[null] @TO@ MethodInvocation@@TemplateSupport.findCommonElementType(null) @AT@ 1749 @LENGTH@ 27
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:findCommonElementType:[null] @AT@ 1771 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(type).isNull() @TO@ MethodDeclaration@@void, MethodName:shouldNotFailWithNullInput,  @AT@ 1780 @LENGTH@ 26
------INS MethodInvocation@@assertThat(type).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(type).isNull() @AT@ 1780 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:assertThat:[type] @TO@ MethodInvocation@@assertThat(type).isNull() @AT@ 1780 @LENGTH@ 16
------------INS SimpleName@@type @TO@ MethodInvocation@@MethodName:assertThat:[type] @AT@ 1791 @LENGTH@ 4
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(type).isNull() @AT@ 1797 @LENGTH@ 8


UPD MethodDeclaration@@Value, MethodName:writeValue, @Nullable Object value, TypeInformation<?> sourceType, @Nullable Function<Object,Value> conversionOverride,  @TO@ Value, MethodName:writeValue, @Nullable Object value, TypeInformation<?> sourceType, @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride,  @AT@ 3412 @LENGTH@ 126
---UPD SingleVariableDeclaration@@@Nullable Function<Object,Value> conversionOverride @TO@ @Nullable Neo4jPersistentPropertyConverter<?> conversionOverride @AT@ 3482 @LENGTH@ 52
------UPD ParameterizedType@@Function<Object,Value> @TO@ Neo4jPersistentPropertyConverter<?> @AT@ 3492 @LENGTH@ 23
---------UPD SimpleType@@Function @TO@ Neo4jPersistentPropertyConverter @AT@ 3492 @LENGTH@ 8
---------INS WildcardType@@? @TO@ ParameterizedType@@Function<Object,Value> @AT@ 3500 @LENGTH@ 1
---------DEL SimpleType@@Object @AT@ 3501 @LENGTH@ 6
---------DEL SimpleType@@Value @AT@ 3509 @LENGTH@ 5


INS MethodDeclaration@@Person, MethodName:findByQueryWithNullEqualityCheck,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 13611 @LENGTH@ 35
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findByQueryWithNullEqualityCheck,  @AT@ 13604 @LENGTH@ 6
---INS SimpleName@@MethodName:findByQueryWithNullEqualityCheck @TO@ MethodDeclaration@@Person, MethodName:findByQueryWithNullEqualityCheck,  @AT@ 13611 @LENGTH@ 32


INS ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ MethodDeclaration@@public, void, MethodName:validateWhenJwtIsExpiredThenErrorMessageIndicatesExpirationTime,  @AT@ 2505 @LENGTH@ 110
---INS MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2505 @LENGTH@ 109
------INS MethodInvocation@@MethodName:assertThat:[details] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2505 @LENGTH@ 19
---------INS SimpleName@@details @TO@ MethodInvocation@@MethodName:assertThat:[details] @AT@ 2516 @LENGTH@ 7
------INS SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @TO@ MethodInvocation@@assertThat(details).allMatch((error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)) @AT@ 2525 @LENGTH@ 89
---------INS LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ SimpleName@@MethodName:allMatch:[(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN)] @AT@ 2534 @LENGTH@ 79
------------INS VariableDeclarationFragment@@error @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2535 @LENGTH@ 5
---------------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error @AT@ 2535 @LENGTH@ 5
------------INS MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @TO@ LambdaExpression@@(error) -> Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2545 @LENGTH@ 68
---------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2545 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@Objects.equals(error.getErrorCode(),OAuth2ErrorCodes.INVALID_TOKEN) @AT@ 2553 @LENGTH@ 60
------------------INS MethodInvocation@@error.getErrorCode() @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 2560 @LENGTH@ 20
---------------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2560 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2566 @LENGTH@ 14
------------------INS QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:equals:[error.getErrorCode(), OAuth2ErrorCodes.INVALID_TOKEN] @AT@ 2582 @LENGTH@ 30
---------------------INS SimpleName@@OAuth2ErrorCodes @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 2582 @LENGTH@ 16
---------------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@OAuth2ErrorCodes.INVALID_TOKEN @AT@ 2599 @LENGTH@ 13


INS MethodDeclaration@@public, Object, MethodName:copy,  @TO@ TypeDeclaration@@[@UriParams, public, abstract]EmbeddedDebeziumConfiguration,  @AT@ 6873 @LENGTH@ 497
---INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:copy,  @AT@ 6873 @LENGTH@ 6
---INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:copy,  @AT@ 6880 @LENGTH@ 6
---INS SimpleName@@MethodName:copy @TO@ MethodDeclaration@@public, Object, MethodName:copy,  @AT@ 6887 @LENGTH@ 4
---INS TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @TO@ MethodDeclaration@@public, Object, MethodName:copy,  @AT@ 6904 @LENGTH@ 460
------INS VariableDeclarationStatement@@EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone(); @TO@ TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 6922 @LENGTH@ 79
---------INS SimpleType@@EmbeddedDebeziumConfiguration @TO@ VariableDeclarationStatement@@EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone(); @AT@ 6922 @LENGTH@ 29
---------INS VariableDeclarationFragment@@answer=(EmbeddedDebeziumConfiguration)clone() @TO@ VariableDeclarationStatement@@EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone(); @AT@ 6952 @LENGTH@ 48
------------INS SimpleName@@answer @TO@ VariableDeclarationFragment@@answer=(EmbeddedDebeziumConfiguration)clone() @AT@ 6952 @LENGTH@ 6
------------INS CastExpression@@(EmbeddedDebeziumConfiguration)clone() @TO@ VariableDeclarationFragment@@answer=(EmbeddedDebeziumConfiguration)clone() @AT@ 6961 @LENGTH@ 39
---------------INS SimpleType@@EmbeddedDebeziumConfiguration @TO@ CastExpression@@(EmbeddedDebeziumConfiguration)clone() @AT@ 6962 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:clone:[] @TO@ CastExpression@@(EmbeddedDebeziumConfiguration)clone() @AT@ 6993 @LENGTH@ 7
------INS VariableDeclarationStatement@@Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties); @TO@ TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7077 @LENGTH@ 83
---------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties); @AT@ 7077 @LENGTH@ 19
------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 7077 @LENGTH@ 3
------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 7081 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 7089 @LENGTH@ 6
---------INS VariableDeclarationFragment@@additionalPropertiesCopy=new HashMap<>(additionalProperties) @TO@ VariableDeclarationStatement@@Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties); @AT@ 7097 @LENGTH@ 62
------------INS SimpleName@@additionalPropertiesCopy @TO@ VariableDeclarationFragment@@additionalPropertiesCopy=new HashMap<>(additionalProperties) @AT@ 7097 @LENGTH@ 24
------------INS ClassInstanceCreation@@HashMap<>[additionalProperties] @TO@ VariableDeclarationFragment@@additionalPropertiesCopy=new HashMap<>(additionalProperties) @AT@ 7124 @LENGTH@ 35
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[additionalProperties] @AT@ 7124 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[additionalProperties] @AT@ 7128 @LENGTH@ 9
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 7128 @LENGTH@ 7
---------------INS SimpleName@@additionalProperties @TO@ ClassInstanceCreation@@HashMap<>[additionalProperties] @AT@ 7138 @LENGTH@ 20
------INS ExpressionStatement@@MethodInvocation:answer.setAdditionalProperties(additionalPropertiesCopy) @TO@ TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7173 @LENGTH@ 57
---------INS MethodInvocation@@answer.setAdditionalProperties(additionalPropertiesCopy) @TO@ ExpressionStatement@@MethodInvocation:answer.setAdditionalProperties(additionalPropertiesCopy) @AT@ 7173 @LENGTH@ 56
------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.setAdditionalProperties(additionalPropertiesCopy) @AT@ 7173 @LENGTH@ 6
------------INS SimpleName@@MethodName:setAdditionalProperties:[additionalPropertiesCopy] @TO@ MethodInvocation@@answer.setAdditionalProperties(additionalPropertiesCopy) @AT@ 7180 @LENGTH@ 49
---------------INS SimpleName@@additionalPropertiesCopy @TO@ SimpleName@@MethodName:setAdditionalProperties:[additionalPropertiesCopy] @AT@ 7204 @LENGTH@ 24
------INS ReturnStatement@@SimpleName:answer @TO@ TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7243 @LENGTH@ 14
---------INS SimpleName@@answer @TO@ ReturnStatement@@SimpleName:answer @AT@ 7250 @LENGTH@ 6
------INS CatchClause@@catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @TO@ TryStatement@@try {  EmbeddedDebeziumConfiguration answer=(EmbeddedDebeziumConfiguration)clone();  Map<String,Object> additionalPropertiesCopy=new HashMap<>(additionalProperties);  answer.setAdditionalProperties(additionalPropertiesCopy);  return answer;} catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7268 @LENGTH@ 96
---------INS SingleVariableDeclaration@@CloneNotSupportedException e @TO@ CatchClause@@catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7275 @LENGTH@ 28
------------INS SimpleType@@CloneNotSupportedException @TO@ SingleVariableDeclaration@@CloneNotSupportedException e @AT@ 7275 @LENGTH@ 26
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@CloneNotSupportedException e @AT@ 7302 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(e) @TO@ CatchClause@@catch (CloneNotSupportedException e) {  throw new RuntimeCamelException(e);} @AT@ 7319 @LENGTH@ 35
------------INS ClassInstanceCreation@@RuntimeCamelException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(e) @AT@ 7325 @LENGTH@ 28
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException[e] @AT@ 7325 @LENGTH@ 3
---------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException[e] @AT@ 7329 @LENGTH@ 21
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeCamelException[e] @AT@ 7351 @LENGTH@ 1


DEL MethodDeclaration@@QueryMixin<Q>, MethodName:getQueryMixin,  @AT@ 4770 @LENGTH@ 46
---DEL ParameterizedType@@QueryMixin<Q> @AT@ 4756 @LENGTH@ 13
------DEL SimpleType@@QueryMixin @AT@ 4756 @LENGTH@ 10
------DEL SimpleType@@Q @AT@ 4767 @LENGTH@ 1
---DEL SimpleName@@MethodName:getQueryMixin @AT@ 4770 @LENGTH@ 13
---DEL ReturnStatement@@SimpleName:superQueryMixin @AT@ 4790 @LENGTH@ 23
------DEL SimpleName@@superQueryMixin @AT@ 4797 @LENGTH@ 15


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") List<MongoItemWriter<String>> writers=new ArrayList<>(limit); @TO@ List<MongoItemWriter<String>> writers=new ArrayList<>(limit); @AT@ 9006 @LENGTH@ 96


DEL ExpressionStatement@@MethodInvocation:assertFalse(recentReports.isEmpty(),"getRecentReports empty") @AT@ 3738 @LENGTH@ 63
---DEL MethodInvocation@@assertFalse(recentReports.isEmpty(),"getRecentReports empty") @AT@ 3738 @LENGTH@ 62
------DEL SimpleName@@MethodName:assertFalse:[recentReports.isEmpty(), "getRecentReports empty"] @AT@ 3738 @LENGTH@ 62
---------DEL MethodInvocation@@recentReports.isEmpty() @AT@ 3750 @LENGTH@ 23
------------DEL SimpleName@@Name:recentReports @AT@ 3750 @LENGTH@ 13
------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 3764 @LENGTH@ 9
---------DEL StringLiteral@@"getRecentReports empty" @AT@ 3775 @LENGTH@ 24


DEL ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(2) @AT@ 3186 @LENGTH@ 29
---DEL MethodInvocation@@mock.expectedMessageCount(2) @AT@ 3186 @LENGTH@ 28
------DEL SimpleName@@Name:mock @AT@ 3186 @LENGTH@ 4
------DEL SimpleName@@MethodName:expectedMessageCount:[2] @AT@ 3191 @LENGTH@ 23
---------DEL NumberLiteral@@2 @AT@ 3212 @LENGTH@ 1


INS MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @TO@ TypeDeclaration@@[public]StreamUtilsTests,  @AT@ 1407 @LENGTH@ 267
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @AT@ 1402 @LENGTH@ 4
---INS SimpleName@@MethodName:combinesInfiniteStreamCorrectly @TO@ MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @AT@ 1407 @LENGTH@ 31
---INS VariableDeclarationStatement@@Stream<Long> indices=Stream.iterate(1L,n -> n + 1); @TO@ MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @AT@ 1446 @LENGTH@ 54
------INS ParameterizedType@@Stream<Long> @TO@ VariableDeclarationStatement@@Stream<Long> indices=Stream.iterate(1L,n -> n + 1); @AT@ 1446 @LENGTH@ 12
---------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<Long> @AT@ 1446 @LENGTH@ 6
---------INS SimpleType@@Long @TO@ ParameterizedType@@Stream<Long> @AT@ 1453 @LENGTH@ 4
------INS VariableDeclarationFragment@@indices=Stream.iterate(1L,n -> n + 1) @TO@ VariableDeclarationStatement@@Stream<Long> indices=Stream.iterate(1L,n -> n + 1); @AT@ 1459 @LENGTH@ 40
---------INS SimpleName@@indices @TO@ VariableDeclarationFragment@@indices=Stream.iterate(1L,n -> n + 1) @AT@ 1459 @LENGTH@ 7
---------INS MethodInvocation@@Stream.iterate(1L,n -> n + 1) @TO@ VariableDeclarationFragment@@indices=Stream.iterate(1L,n -> n + 1) @AT@ 1469 @LENGTH@ 30
------------INS SimpleName@@Name:Stream @TO@ MethodInvocation@@Stream.iterate(1L,n -> n + 1) @AT@ 1469 @LENGTH@ 6
------------INS SimpleName@@MethodName:iterate:[1L, n -> n + 1] @TO@ MethodInvocation@@Stream.iterate(1L,n -> n + 1) @AT@ 1476 @LENGTH@ 23
---------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:iterate:[1L, n -> n + 1] @AT@ 1484 @LENGTH@ 2
---------------INS LambdaExpression@@n -> n + 1 @TO@ SimpleName@@MethodName:iterate:[1L, n -> n + 1] @AT@ 1488 @LENGTH@ 10
------------------INS VariableDeclarationFragment@@n @TO@ LambdaExpression@@n -> n + 1 @AT@ 1488 @LENGTH@ 1
---------------------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n @AT@ 1488 @LENGTH@ 1
------------------INS InfixExpression@@n + 1 @TO@ LambdaExpression@@n -> n + 1 @AT@ 1493 @LENGTH@ 5
---------------------INS SimpleName@@n @TO@ InfixExpression@@n + 1 @AT@ 1493 @LENGTH@ 1
---------------------INS Operator@@+ @TO@ InfixExpression@@n + 1 @AT@ 1494 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ InfixExpression@@n + 1 @AT@ 1497 @LENGTH@ 1
---INS VariableDeclarationStatement@@Stream<String> lines=Stream.of("first line","second line"); @TO@ MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @AT@ 1503 @LENGTH@ 62
------INS ParameterizedType@@Stream<String> @TO@ VariableDeclarationStatement@@Stream<String> lines=Stream.of("first line","second line"); @AT@ 1503 @LENGTH@ 14
---------INS SimpleType@@Stream @TO@ ParameterizedType@@Stream<String> @AT@ 1503 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Stream<String> @AT@ 1510 @LENGTH@ 6
------INS VariableDeclarationFragment@@lines=Stream.of("first line","second line") @TO@ VariableDeclarationStatement@@Stream<String> lines=Stream.of("first line","second line"); @AT@ 1518 @LENGTH@ 46
---------INS SimpleName@@lines @TO@ VariableDeclarationFragment@@lines=Stream.of("first line","second line") @AT@ 1518 @LENGTH@ 5
---------INS MethodInvocation@@Stream.of("first line","second line") @TO@ VariableDeclarationFragment@@lines=Stream.of("first line","second line") @AT@ 1526 @LENGTH@ 38
------------INS SimpleName@@Name:Stream @TO@ MethodInvocation@@Stream.of("first line","second line") @AT@ 1526 @LENGTH@ 6
------------INS SimpleName@@MethodName:of:["first line", "second line"] @TO@ MethodInvocation@@Stream.of("first line","second line") @AT@ 1533 @LENGTH@ 31
---------------INS StringLiteral@@"first line" @TO@ SimpleName@@MethodName:of:["first line", "second line"] @AT@ 1536 @LENGTH@ 12
---------------INS StringLiteral@@"second line" @TO@ SimpleName@@MethodName:of:["first line", "second line"] @AT@ 1550 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()).isEqualTo(2) @TO@ MethodDeclaration@@void, MethodName:combinesInfiniteStreamCorrectly,  @AT@ 1569 @LENGTH@ 102
------INS MethodInvocation@@assertThat(StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()).isEqualTo(2) @TO@ ExpressionStatement@@MethodInvocation:assertThat(StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()).isEqualTo(2) @AT@ 1569 @LENGTH@ 101
---------INS MethodInvocation@@MethodName:assertThat:[StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()] @TO@ MethodInvocation@@assertThat(StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()).isEqualTo(2) @AT@ 1569 @LENGTH@ 88
------------INS MethodInvocation@@StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count() @TO@ MethodInvocation@@MethodName:assertThat:[StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()] @AT@ 1580 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:zip:[indices, lines, (index,line) -> index + ":" + line] @TO@ MethodInvocation@@StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count() @AT@ 1580 @LENGTH@ 68
------------------INS SimpleName@@indices @TO@ MethodInvocation@@MethodName:zip:[indices, lines, (index,line) -> index + ":" + line] @AT@ 1596 @LENGTH@ 7
------------------INS SimpleName@@lines @TO@ MethodInvocation@@MethodName:zip:[indices, lines, (index,line) -> index + ":" + line] @AT@ 1605 @LENGTH@ 5
------------------INS LambdaExpression@@(index,line) -> index + ":" + line @TO@ MethodInvocation@@MethodName:zip:[indices, lines, (index,line) -> index + ":" + line] @AT@ 1612 @LENGTH@ 35
---------------------INS VariableDeclarationFragment@@index @TO@ LambdaExpression@@(index,line) -> index + ":" + line @AT@ 1613 @LENGTH@ 5
------------------------INS SimpleName@@index @TO@ VariableDeclarationFragment@@index @AT@ 1613 @LENGTH@ 5
---------------------INS VariableDeclarationFragment@@line @TO@ LambdaExpression@@(index,line) -> index + ":" + line @AT@ 1620 @LENGTH@ 4
------------------------INS SimpleName@@line @TO@ VariableDeclarationFragment@@line @AT@ 1620 @LENGTH@ 4
---------------------INS InfixExpression@@index + ":" + line @TO@ LambdaExpression@@(index,line) -> index + ":" + line @AT@ 1629 @LENGTH@ 18
------------------------INS SimpleName@@index @TO@ InfixExpression@@index + ":" + line @AT@ 1629 @LENGTH@ 5
------------------------INS Operator@@+ @TO@ InfixExpression@@index + ":" + line @AT@ 1634 @LENGTH@ 1
------------------------INS StringLiteral@@":" @TO@ InfixExpression@@index + ":" + line @AT@ 1637 @LENGTH@ 3
------------------------INS SimpleName@@line @TO@ InfixExpression@@index + ":" + line @AT@ 1643 @LENGTH@ 4
---------------INS SimpleName@@Name:StreamUtils @TO@ MethodInvocation@@StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count() @AT@ 1580 @LENGTH@ 11
---------------INS SimpleName@@MethodName:count:[] @TO@ MethodInvocation@@StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count() @AT@ 1649 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEqualTo:[2] @TO@ MethodInvocation@@assertThat(StreamUtils.zip(indices,lines,(index,line) -> index + ":" + line).count()).isEqualTo(2) @AT@ 1658 @LENGTH@ 12
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:isEqualTo:[2] @AT@ 1668 @LENGTH@ 1


UPD IfStatement@@if ((ntlmProviderClass != null) && (ntlmProviderClass != Object.class)) {  try {    ntlmHandler.setNtlmProvider((NtlmProvider)ntlmProviderClass.getDeclaredConstructor().newInstance());  } catch (  Exception e) {    throw new RuntimeException(I18n.err(I18n.ERR_692),e);  }} @TO@ if (ntlmProviderClass != null && ntlmProviderClass != Object.class) {  try {    ntlmHandler.setNtlmProvider((NtlmProvider)ntlmProviderClass.getDeclaredConstructor().newInstance());  } catch (  Exception e) {    throw new RuntimeException(I18n.err(I18n.ERR_692),e);  }} @AT@ 7321 @LENGTH@ 421
---UPD InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @TO@ ntlmProviderClass != null && ntlmProviderClass != Object.class @AT@ 7325 @LENGTH@ 66
------DEL ParenthesizedExpression@@(ntlmProviderClass != null) @AT@ 7325 @LENGTH@ 27
---------DEL InfixExpression@@ntlmProviderClass != null @AT@ 7326 @LENGTH@ 25
------INS InfixExpression@@ntlmProviderClass != null @TO@ InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @AT@ 7325 @LENGTH@ 25
---------MOV SimpleName@@ntlmProviderClass @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7326 @LENGTH@ 17
---------MOV Operator@@!= @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7343 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@ntlmProviderClass != null @AT@ 7347 @LENGTH@ 4
------INS InfixExpression@@ntlmProviderClass != Object.class @TO@ InfixExpression@@(ntlmProviderClass != null) && (ntlmProviderClass != Object.class) @AT@ 7354 @LENGTH@ 33
---------MOV SimpleName@@ntlmProviderClass @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7357 @LENGTH@ 17
---------MOV Operator@@!= @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7374 @LENGTH@ 2
---------MOV TypeLiteral@@Object.class @TO@ InfixExpression@@ntlmProviderClass != Object.class @AT@ 7378 @LENGTH@ 12
------DEL ParenthesizedExpression@@(ntlmProviderClass != Object.class) @AT@ 7356 @LENGTH@ 35
---------DEL InfixExpression@@ntlmProviderClass != Object.class @AT@ 7357 @LENGTH@ 33


UPD TryStatement@@try {  replica.load("","`*`");} catch (SemanticException e) {  assertEquals("REPL LOAD * is not supported",e.getMessage());} @TO@ try {  replica.load("","`*`");  Assert.fail();} catch (HiveException e) {  assertEquals("MetaException(message:Database name cannot be null.)",e.getMessage());} @AT@ 33064 @LENGTH@ 146
---UPD CatchClause@@catch (SemanticException e) {  assertEquals("REPL LOAD * is not supported",e.getMessage());} @TO@ catch (HiveException e) {  assertEquals("MetaException(message:Database name cannot be null.)",e.getMessage());} @AT@ 33107 @LENGTH@ 103
------UPD SingleVariableDeclaration@@SemanticException e @TO@ HiveException e @AT@ 33114 @LENGTH@ 19
---------UPD SimpleType@@SemanticException @TO@ HiveException @AT@ 33114 @LENGTH@ 17
------UPD ExpressionStatement@@MethodInvocation:assertEquals("REPL LOAD * is not supported",e.getMessage()) @TO@ MethodInvocation:assertEquals("MetaException(message:Database name cannot be null.)",e.getMessage()) @AT@ 33143 @LENGTH@ 61
---------UPD MethodInvocation@@assertEquals("REPL LOAD * is not supported",e.getMessage()) @TO@ assertEquals("MetaException(message:Database name cannot be null.)",e.getMessage()) @AT@ 33143 @LENGTH@ 60
------------UPD SimpleName@@MethodName:assertEquals:["REPL LOAD * is not supported", e.getMessage()] @TO@ MethodName:assertEquals:["MetaException(message:Database name cannot be null.)", e.getMessage()] @AT@ 33143 @LENGTH@ 60
---------------UPD StringLiteral@@"REPL LOAD * is not supported" @TO@ "MetaException(message:Database name cannot be null.)" @AT@ 33156 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:Assert.fail() @TO@ TryStatement@@try {  replica.load("","`*`");} catch (SemanticException e) {  assertEquals("REPL LOAD * is not supported",e.getMessage());} @AT@ 33164 @LENGTH@ 14
------INS MethodInvocation@@Assert.fail() @TO@ ExpressionStatement@@MethodInvocation:Assert.fail() @AT@ 33164 @LENGTH@ 13
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail() @AT@ 33164 @LENGTH@ 6
---------INS SimpleName@@MethodName:fail:[] @TO@ MethodInvocation@@Assert.fail() @AT@ 33171 @LENGTH@ 6


UPD TryStatement@@try {  primary.run("CREATE DATABASE " + dbName + " WITH DBPROPERTIES ( '"+ SOURCE_OF_REPLICATION+ "' = '1,2,3')");  primary.hiveConf.set("hive.txn.readonly.enabled","true");  primary.run("CREATE TABLE " + dbName + ".t1 (id int)");  primary.run("CREATE table " + dbName + ".source (q1 int , a1 int) stored as orc tblproperties (\"transactional\"=\"true\")");  primary.run("CREATE table " + dbName + ".target (b int, p int) stored as orc tblproperties (\"transactional\"=\"true\")");  primary.run("INSERT into " + dbName + ".source values(1,5)");  primary.run("INSERT into " + dbName + ".target values(10,1)");  primary.dump(dbName);  replica.run("REPL LOAD " + dbName + " INTO "+ replDbName);  primary.dump(dbName);  replica.run("REPL LOAD " + dbName + " INTO "+ replDbName);  primary.run("INSERT INTO " + dbName + ".t1 VALUES(1)");  long lastEventId=primary.getCurrentNotificationEventId().getEventId();  primary.run("USE " + dbName);  primary.run("DESCRIBE DATABASE " + dbName);  primary.run("DESCRIBE " + dbName + ".t1");  primary.run("SELECT * FROM " + dbName + ".t1");  primary.run("SHOW TABLES " + dbName);  primary.run("SHOW TABLE EXTENDED LIKE 't1'");  primary.run("SHOW TBLPROPERTIES t1");  primary.run("EXPLAIN SELECT * from " + dbName + ".t1");  primary.run("SHOW LOCKS");  primary.run("EXPLAIN SHOW LOCKS");  primary.run("EXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)");  long currentEventId=primary.getCurrentNotificationEventId().getEventId();  Assert.assertEquals(lastEventId,currentEventId);}  finally {  primary.run("DROP DATABASE " + dbName + " CASCADE");  replica.run("DROP DATABASE " + replDbName + " CASCADE");} @TO@ try {  primary.run("CREATE DATABASE " + dbName + " WITH DBPROPERTIES ( '"+ SOURCE_OF_REPLICATION+ "' = '1,2,3')");  primary.hiveConf.set("hive.txn.readonly.enabled","true");  primary.run("CREATE TABLE " + dbName + ".t1 (id int)");  primary.run("CREATE table " + dbName + ".source (q1 int , a1 int) stored as orc tblproperties (\"transactional\"=\"true\")");  primary.run("CREATE table " + dbName + ".target (b int, p int) stored as orc tblproperties (\"transactional\"=\"true\")");  primary.run("INSERT into " + dbName + ".source values(1,5)");  primary.run("INSERT into " + dbName + ".target values(10,1)");  primary.dump(dbName);  replica.run("REPL LOAD " + dbName + " INTO "+ replDbName);  primary.dump(dbName);  replica.run("REPL LOAD " + dbName + " INTO "+ replDbName);  primary.run("INSERT INTO " + dbName + ".t1 VALUES(1)");  long lastEventId=primary.getCurrentNotificationEventId().getEventId();  primary.run("USE " + dbName);  primary.run("DESCRIBE DATABASE " + dbName);  primary.run("DESCRIBE " + dbName + ".t1");  primary.run("SELECT * FROM " + dbName + ".t1");  primary.run("SHOW TABLES " + dbName);  primary.run("SHOW TABLE EXTENDED LIKE 't1'");  primary.run("SHOW TBLPROPERTIES t1");  primary.run("SHOW LOCKS");  long currentEventId=primary.getCurrentNotificationEventId().getEventId();  Assert.assertEquals(lastEventId,currentEventId);}  finally {  primary.run("DROP DATABASE " + dbName + " CASCADE");  replica.run("DROP DATABASE " + replDbName + " CASCADE");} @AT@ 50800 @LENGTH@ 1968
---DEL ExpressionStatement@@MethodInvocation:primary.run("EXPLAIN SELECT * from " + dbName + ".t1") @AT@ 52245 @LENGTH@ 55
------DEL MethodInvocation@@primary.run("EXPLAIN SELECT * from " + dbName + ".t1") @AT@ 52245 @LENGTH@ 54
---------DEL SimpleName@@Name:primary @AT@ 52245 @LENGTH@ 7
---------DEL SimpleName@@MethodName:run:["EXPLAIN SELECT * from " + dbName + ".t1"] @AT@ 52253 @LENGTH@ 46
------------DEL InfixExpression@@"EXPLAIN SELECT * from " + dbName + ".t1" @AT@ 52257 @LENGTH@ 41
---------------DEL StringLiteral@@"EXPLAIN SELECT * from " @AT@ 52257 @LENGTH@ 24
---------------DEL Operator@@+ @AT@ 52281 @LENGTH@ 1
---------------DEL SimpleName@@dbName @AT@ 52284 @LENGTH@ 6
---------------DEL StringLiteral@@".t1" @AT@ 52293 @LENGTH@ 5
---DEL ExpressionStatement@@MethodInvocation:primary.run("EXPLAIN SHOW LOCKS") @AT@ 52340 @LENGTH@ 34
------DEL MethodInvocation@@primary.run("EXPLAIN SHOW LOCKS") @AT@ 52340 @LENGTH@ 33
---------DEL SimpleName@@Name:primary @AT@ 52340 @LENGTH@ 7
---------DEL SimpleName@@MethodName:run:["EXPLAIN SHOW LOCKS"] @AT@ 52348 @LENGTH@ 25
------------DEL StringLiteral@@"EXPLAIN SHOW LOCKS" @AT@ 52352 @LENGTH@ 20
---DEL ExpressionStatement@@MethodInvocation:primary.run("EXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)") @AT@ 52381 @LENGTH@ 105
------DEL MethodInvocation@@primary.run("EXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)") @AT@ 52381 @LENGTH@ 104
---------DEL SimpleName@@Name:primary @AT@ 52381 @LENGTH@ 7
---------DEL SimpleName@@MethodName:run:["EXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)"] @AT@ 52389 @LENGTH@ 96
------------DEL StringLiteral@@"EXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)" @AT@ 52393 @LENGTH@ 91


UPD MethodDeclaration@@public, void, MethodName:setHttpClient, HttpClient httpClient,  @TO@ public, synchronized, void, MethodName:setHttpClient, HttpClient httpClient,  @AT@ 12394 @LENGTH@ 94
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, void, MethodName:setHttpClient, HttpClient httpClient,  @AT@ 12401 @LENGTH@ 12


INS MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @TO@ TypeDeclaration@@[@EnabledOnRedisSentinelAvailable]JedisConnectionFactorySentinelIntegrationTests,  @AT@ 2379 @LENGTH@ 509
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2374 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConnectSentinelNodeCorrectly @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2379 @LENGTH@ 34
---INS SimpleType@@IOException @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2423 @LENGTH@ 11
---INS VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2440 @LENGTH@ 158
------INS SimpleType@@RedisSentinelConfiguration @TO@ VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @AT@ 2440 @LENGTH@ 26
------INS VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @TO@ VariableDeclarationStatement@@RedisSentinelConfiguration configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380); @AT@ 2467 @LENGTH@ 130
---------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2467 @LENGTH@ 13
---------INS MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @TO@ VariableDeclarationFragment@@configuration=new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2483 @LENGTH@ 114
------------INS MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2483 @LENGTH@ 85
---------------INS StringLiteral@@"127.0.0.1" @TO@ MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @AT@ 2549 @LENGTH@ 11
---------------INS NumberLiteral@@26379 @TO@ MethodInvocation@@MethodName:sentinel:["127.0.0.1", 26379] @AT@ 2562 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:master:["mymaster"] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2483 @LENGTH@ 51
---------------INS StringLiteral@@"mymaster" @TO@ MethodInvocation@@MethodName:master:["mymaster"] @AT@ 2523 @LENGTH@ 10
------------INS ClassInstanceCreation@@RedisSentinelConfiguration[] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2483 @LENGTH@ 32
---------------INS New@@new @TO@ ClassInstanceCreation@@RedisSentinelConfiguration[] @AT@ 2483 @LENGTH@ 3
---------------INS SimpleType@@RedisSentinelConfiguration @TO@ ClassInstanceCreation@@RedisSentinelConfiguration[] @AT@ 2487 @LENGTH@ 26
------------INS SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @TO@ MethodInvocation@@new RedisSentinelConfiguration().master("mymaster").sentinel("127.0.0.1",26379).sentinel("127.0.0.1",26380) @AT@ 2569 @LENGTH@ 28
---------------INS StringLiteral@@"127.0.0.1" @TO@ SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @AT@ 2578 @LENGTH@ 11
---------------INS NumberLiteral@@26380 @TO@ SimpleName@@MethodName:sentinel:["127.0.0.1", 26380] @AT@ 2591 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:configuration.setDatabase(5) @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2601 @LENGTH@ 29
------INS MethodInvocation@@configuration.setDatabase(5) @TO@ ExpressionStatement@@MethodInvocation:configuration.setDatabase(5) @AT@ 2601 @LENGTH@ 28
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setDatabase(5) @AT@ 2601 @LENGTH@ 13
---------INS SimpleName@@MethodName:setDatabase:[5] @TO@ MethodInvocation@@configuration.setDatabase(5) @AT@ 2615 @LENGTH@ 14
------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:setDatabase:[5] @AT@ 2627 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:factory=new JedisConnectionFactory(configuration) @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2634 @LENGTH@ 52
------INS Assignment@@factory=new JedisConnectionFactory(configuration) @TO@ ExpressionStatement@@Assignment:factory=new JedisConnectionFactory(configuration) @AT@ 2634 @LENGTH@ 51
---------INS SimpleName@@factory @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2634 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2641 @LENGTH@ 1
---------INS ClassInstanceCreation@@JedisConnectionFactory[configuration] @TO@ Assignment@@factory=new JedisConnectionFactory(configuration) @AT@ 2644 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2644 @LENGTH@ 3
------------INS SimpleType@@JedisConnectionFactory @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2648 @LENGTH@ 22
------------INS SimpleName@@configuration @TO@ ClassInstanceCreation@@JedisConnectionFactory[configuration] @AT@ 2671 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:factory.afterPropertiesSet() @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2689 @LENGTH@ 29
------INS MethodInvocation@@factory.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:factory.afterPropertiesSet() @AT@ 2689 @LENGTH@ 28
---------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.afterPropertiesSet() @AT@ 2689 @LENGTH@ 7
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@factory.afterPropertiesSet() @AT@ 2697 @LENGTH@ 20
---INS VariableDeclarationStatement@@RedisSentinelConnection sentinelConnection=factory.getSentinelConnection(); @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2722 @LENGTH@ 77
------INS SimpleType@@RedisSentinelConnection @TO@ VariableDeclarationStatement@@RedisSentinelConnection sentinelConnection=factory.getSentinelConnection(); @AT@ 2722 @LENGTH@ 23
------INS VariableDeclarationFragment@@sentinelConnection=factory.getSentinelConnection() @TO@ VariableDeclarationStatement@@RedisSentinelConnection sentinelConnection=factory.getSentinelConnection(); @AT@ 2746 @LENGTH@ 52
---------INS SimpleName@@sentinelConnection @TO@ VariableDeclarationFragment@@sentinelConnection=factory.getSentinelConnection() @AT@ 2746 @LENGTH@ 18
---------INS MethodInvocation@@factory.getSentinelConnection() @TO@ VariableDeclarationFragment@@sentinelConnection=factory.getSentinelConnection() @AT@ 2767 @LENGTH@ 31
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getSentinelConnection() @AT@ 2767 @LENGTH@ 7
------------INS SimpleName@@MethodName:getSentinelConnection:[] @TO@ MethodInvocation@@factory.getSentinelConnection() @AT@ 2775 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(sentinelConnection.masters()).isNotNull() @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2802 @LENGTH@ 53
------INS MethodInvocation@@assertThat(sentinelConnection.masters()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(sentinelConnection.masters()).isNotNull() @AT@ 2802 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:assertThat:[sentinelConnection.masters()] @TO@ MethodInvocation@@assertThat(sentinelConnection.masters()).isNotNull() @AT@ 2802 @LENGTH@ 40
------------INS MethodInvocation@@sentinelConnection.masters() @TO@ MethodInvocation@@MethodName:assertThat:[sentinelConnection.masters()] @AT@ 2813 @LENGTH@ 28
---------------INS SimpleName@@Name:sentinelConnection @TO@ MethodInvocation@@sentinelConnection.masters() @AT@ 2813 @LENGTH@ 18
---------------INS SimpleName@@MethodName:masters:[] @TO@ MethodInvocation@@sentinelConnection.masters() @AT@ 2832 @LENGTH@ 9
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(sentinelConnection.masters()).isNotNull() @AT@ 2843 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:sentinelConnection.close() @TO@ MethodDeclaration@@void, MethodName:shouldConnectSentinelNodeCorrectly, IOException,  @AT@ 2858 @LENGTH@ 27
------INS MethodInvocation@@sentinelConnection.close() @TO@ ExpressionStatement@@MethodInvocation:sentinelConnection.close() @AT@ 2858 @LENGTH@ 26
---------INS SimpleName@@Name:sentinelConnection @TO@ MethodInvocation@@sentinelConnection.close() @AT@ 2858 @LENGTH@ 18
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@sentinelConnection.close() @AT@ 2877 @LENGTH@ 7


UPD MethodDeclaration@@public, Saml2LoginConfigurer, MethodName:relyingPartyRegistrationRepository, RelyingPartyRegistrationRepository repo,  @TO@ public, Saml2LoginConfigurer<B>, MethodName:relyingPartyRegistrationRepository, RelyingPartyRegistrationRepository repo,  @AT@ 7978 @LENGTH@ 173
---INS ParameterizedType@@Saml2LoginConfigurer<B> @TO@ MethodDeclaration@@public, Saml2LoginConfigurer, MethodName:relyingPartyRegistrationRepository, RelyingPartyRegistrationRepository repo,  @AT@ 7985 @LENGTH@ 23
------INS SimpleType@@Saml2LoginConfigurer @TO@ ParameterizedType@@Saml2LoginConfigurer<B> @AT@ 7985 @LENGTH@ 20
------INS SimpleType@@B @TO@ ParameterizedType@@Saml2LoginConfigurer<B> @AT@ 8006 @LENGTH@ 1
---DEL SimpleType@@Saml2LoginConfigurer @AT@ 7985 @LENGTH@ 20


UPD TryStatement@@try {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }}  finally {  IOHelper.close(printer);} @TO@ try {  if (object instanceof Map) {    Map map=(Map)object;    printer.printRecord(getMapRecordValues(map));  } else {    Iterator it=ObjectHelper.createIterator(object);    while (it.hasNext()) {      Object child=it.next();      printer.printRecord(getRecordValues(exchange,child));    }  }}  finally {  IOHelper.close(printer);} @AT@ 3191 @LENGTH@ 297
---INS IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @TO@ TryStatement@@try {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }}  finally {  IOHelper.close(printer);} @AT@ 3209 @LENGTH@ 410
------INS InstanceofExpression@@object instanceof Map @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @AT@ 3213 @LENGTH@ 21
---------INS SimpleName@@object @TO@ InstanceofExpression@@object instanceof Map @AT@ 3213 @LENGTH@ 6
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@object instanceof Map @AT@ 3220 @LENGTH@ 10
---------INS SimpleType@@Map @TO@ InstanceofExpression@@object instanceof Map @AT@ 3231 @LENGTH@ 3
------INS Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @AT@ 3236 @LENGTH@ 117
---------INS VariableDeclarationStatement@@Map map=(Map)object; @TO@ Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @AT@ 3254 @LENGTH@ 23
------------INS SimpleType@@Map @TO@ VariableDeclarationStatement@@Map map=(Map)object; @AT@ 3254 @LENGTH@ 3
------------INS VariableDeclarationFragment@@map=(Map)object @TO@ VariableDeclarationStatement@@Map map=(Map)object; @AT@ 3258 @LENGTH@ 18
---------------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=(Map)object @AT@ 3258 @LENGTH@ 3
---------------INS CastExpression@@(Map)object @TO@ VariableDeclarationFragment@@map=(Map)object @AT@ 3264 @LENGTH@ 12
------------------INS SimpleType@@Map @TO@ CastExpression@@(Map)object @AT@ 3265 @LENGTH@ 3
------------------INS SimpleName@@object @TO@ CastExpression@@(Map)object @AT@ 3270 @LENGTH@ 6
---------INS ExpressionStatement@@MethodInvocation:printer.printRecord(getMapRecordValues(map)) @TO@ Block@@ThenBody:{  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} @AT@ 3294 @LENGTH@ 45
------------INS MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @TO@ ExpressionStatement@@MethodInvocation:printer.printRecord(getMapRecordValues(map)) @AT@ 3294 @LENGTH@ 44
---------------INS SimpleName@@Name:printer @TO@ MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @AT@ 3294 @LENGTH@ 7
---------------INS SimpleName@@MethodName:printRecord:[getMapRecordValues(map)] @TO@ MethodInvocation@@printer.printRecord(getMapRecordValues(map)) @AT@ 3302 @LENGTH@ 36
------------------INS MethodInvocation@@getMapRecordValues(map) @TO@ SimpleName@@MethodName:printRecord:[getMapRecordValues(map)] @AT@ 3314 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:getMapRecordValues:[map] @TO@ MethodInvocation@@getMapRecordValues(map) @AT@ 3314 @LENGTH@ 23
------------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:getMapRecordValues:[map] @AT@ 3333 @LENGTH@ 3
------INS Block@@ElseBody:{  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @TO@ IfStatement@@if (object instanceof Map) {  Map map=(Map)object;  printer.printRecord(getMapRecordValues(map));} else {  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @AT@ 3359 @LENGTH@ 260
---------MOV VariableDeclarationStatement@@Iterator it=ObjectHelper.createIterator(object); @TO@ Block@@ElseBody:{  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @AT@ 3209 @LENGTH@ 50
---------MOV WhileStatement@@while (it.hasNext()) {  Object child=it.next();  printer.printRecord(getRecordValues(exchange,child));} @TO@ Block@@ElseBody:{  Iterator it=ObjectHelper.createIterator(object);  while (it.hasNext()) {    Object child=it.next();    printer.printRecord(getRecordValues(exchange,child));  }} @AT@ 3272 @LENGTH@ 149


UPD ExpressionStatement@@MethodInvocation:LOG.warn("This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer.") @TO@ MethodInvocation:LOG.warn("This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer.",context.getName(),managementName) @AT@ 10032 @LENGTH@ 251
---UPD MethodInvocation@@LOG.warn("This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer.") @TO@ LOG.warn("This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer.",context.getName(),managementName) @AT@ 10032 @LENGTH@ 250
------UPD SimpleName@@MethodName:warn:["This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer."] @TO@ MethodName:warn:["This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer.", context.getName(), managementName] @AT@ 10036 @LENGTH@ 246
---------DEL InfixExpression@@"This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer." @AT@ 10041 @LENGTH@ 240
------------DEL MethodInvocation@@context.getName() @AT@ 10064 @LENGTH@ 17
------------DEL StringLiteral@@") will be registered using the name: " @AT@ 10084 @LENGTH@ 39
------------DEL SimpleName@@managementName @AT@ 10159 @LENGTH@ 14
------------DEL StringLiteral@@" due to clash with an existing name already registered in MBeanServer." @AT@ 10209 @LENGTH@ 72
---------INS InfixExpression@@"This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer." @TO@ SimpleName@@MethodName:warn:["This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer."] @AT@ 10041 @LENGTH@ 169
------------MOV StringLiteral@@"This CamelContext(" @TO@ InfixExpression@@"This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer." @AT@ 10041 @LENGTH@ 20
------------MOV Operator@@+ @TO@ InfixExpression@@"This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer." @AT@ 10061 @LENGTH@ 1
------------INS StringLiteral@@"existing name already registered in MBeanServer." @TO@ InfixExpression@@"This CamelContext({}) will be registered using the name: {} due to clash with an " + "existing name already registered in MBeanServer." @AT@ 10160 @LENGTH@ 50
---------INS MethodInvocation@@context.getName() @TO@ SimpleName@@MethodName:warn:["This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer."] @AT@ 10244 @LENGTH@ 17
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getName() @AT@ 10064 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@context.getName() @AT@ 10072 @LENGTH@ 9
---------INS SimpleName@@managementName @TO@ SimpleName@@MethodName:warn:["This CamelContext(" + context.getName() + ") will be registered using the name: "+ managementName+ " due to clash with an existing name already registered in MBeanServer."] @AT@ 10263 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ MethodDeclaration@@void, MethodName:beforeEach,  @AT@ 10264 @LENGTH@ 110
---INS MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 10264 @LENGTH@ 109
------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 10264 @LENGTH@ 14
------INS SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 10279 @LENGTH@ 94
---------INS MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @AT@ 10299 @LENGTH@ 73
------------INS ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 10299 @LENGTH@ 51
---------------INS New@@new @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10299 @LENGTH@ 3
---------------INS SimpleType@@MongoCustomConversions @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10303 @LENGTH@ 22
---------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 10326 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10326 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 10338 @LENGTH@ 11
------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 10351 @LENGTH@ 21


UPD ConstructorInvocation@@this(pathCounter,TrueFileFilter.INSTANCE,TrueFileFilter.INSTANCE); @TO@ this(pathCounter,new SymbolicLinkFileFilter(FileVisitResult.TERMINATE,FileVisitResult.CONTINUE),TrueFileFilter.INSTANCE); @AT@ 2366 @LENGTH@ 68
---DEL QualifiedName@@TrueFileFilter.INSTANCE @AT@ 2384 @LENGTH@ 23
---INS ClassInstanceCreation@@SymbolicLinkFileFilter[FileVisitResult.TERMINATE, FileVisitResult.CONTINUE] @TO@ ConstructorInvocation@@this(pathCounter,TrueFileFilter.INSTANCE,TrueFileFilter.INSTANCE); @AT@ 2448 @LENGTH@ 79
------INS New@@new @TO@ ClassInstanceCreation@@SymbolicLinkFileFilter[FileVisitResult.TERMINATE, FileVisitResult.CONTINUE] @AT@ 2448 @LENGTH@ 3
------INS SimpleType@@SymbolicLinkFileFilter @TO@ ClassInstanceCreation@@SymbolicLinkFileFilter[FileVisitResult.TERMINATE, FileVisitResult.CONTINUE] @AT@ 2452 @LENGTH@ 22
------INS QualifiedName@@FileVisitResult.TERMINATE @TO@ ClassInstanceCreation@@SymbolicLinkFileFilter[FileVisitResult.TERMINATE, FileVisitResult.CONTINUE] @AT@ 2475 @LENGTH@ 25
---------INS SimpleName@@FileVisitResult @TO@ QualifiedName@@FileVisitResult.TERMINATE @AT@ 2475 @LENGTH@ 15
---------INS SimpleName@@TERMINATE @TO@ QualifiedName@@FileVisitResult.TERMINATE @AT@ 2491 @LENGTH@ 9
------INS QualifiedName@@FileVisitResult.CONTINUE @TO@ ClassInstanceCreation@@SymbolicLinkFileFilter[FileVisitResult.TERMINATE, FileVisitResult.CONTINUE] @AT@ 2502 @LENGTH@ 24
---------MOV SimpleName@@TrueFileFilter @TO@ QualifiedName@@FileVisitResult.CONTINUE @AT@ 2384 @LENGTH@ 14
---------MOV SimpleName@@INSTANCE @TO@ QualifiedName@@FileVisitResult.CONTINUE @AT@ 2399 @LENGTH@ 8


DEL FieldDeclaration@@private, OkHttpClient, [client] @AT@ 7179 @LENGTH@ 28
---DEL Modifier@@private @AT@ 7179 @LENGTH@ 7
---DEL SimpleType@@OkHttpClient @AT@ 7187 @LENGTH@ 12
---DEL VariableDeclarationFragment@@client @AT@ 7200 @LENGTH@ 6
------DEL SimpleName@@client @AT@ 7200 @LENGTH@ 6


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="1.1.0",scheme="sftp",extendsScheme="file",title="SFTP",syntax="sftp:host:port/directoryName",label="file"), @Metadata(excludeProperties="appendChars,bufferSize,siteCommand," + "directoryMustExist,extendedAttributes,probeContentType,startingDirectoryMustExist," + "startingDirectoryMustHaveAccess,chmodDirectory,forceWrites,copyAndDeleteOnRenameFail,"+ "renameUsingCopy"), public]SftpEndpoint, RemoteFileEndpoint<SftpRemoteFile> @TO@ [@UriEndpoint(firstVersion="1.1.0",scheme="sftp",extendsScheme="file",title="SFTP",syntax="sftp:host:port/directoryName",label="file"), @Metadata(excludeProperties="appendChars,bufferSize,siteCommand," + "directoryMustExist,extendedAttributes,probeContentType,startingDirectoryMustExist," + "startingDirectoryMustHaveAccess,forceWrites,copyAndDeleteOnRenameFail,"+ "renameUsingCopy"), public]SftpEndpoint, RemoteFileEndpoint<SftpRemoteFile> @AT@ 1443 @LENGTH@ 3121
---UPD NormalAnnotation@@@Metadata(excludeProperties="appendChars,bufferSize,siteCommand," + "directoryMustExist,extendedAttributes,probeContentType,startingDirectoryMustExist," + "startingDirectoryMustHaveAccess,chmodDirectory,forceWrites,copyAndDeleteOnRenameFail,"+ "renameUsingCopy") @TO@ @Metadata(excludeProperties="appendChars,bufferSize,siteCommand," + "directoryMustExist,extendedAttributes,probeContentType,startingDirectoryMustExist," + "startingDirectoryMustHaveAccess,forceWrites,copyAndDeleteOnRenameFail,"+ "renameUsingCopy") @AT@ 1607 @LENGTH@ 355


INS ExpressionStatement@@MethodInvocation:this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ MethodDeclaration@@void, MethodName:setUp,  @AT@ 3188 @LENGTH@ 115
---INS MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 3188 @LENGTH@ 114
------INS FieldAccess@@this.mappingContext @TO@ MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 3188 @LENGTH@ 19
---------INS ThisExpression@@this @TO@ FieldAccess@@this.mappingContext @AT@ 3188 @LENGTH@ 4
---------INS SimpleName@@mappingContext @TO@ FieldAccess@@this.mappingContext @AT@ 3193 @LENGTH@ 14
------INS SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @TO@ MethodInvocation@@this.mappingContext.setSimpleTypeHolder(new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()) @AT@ 3208 @LENGTH@ 94
---------INS MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder()] @AT@ 3228 @LENGTH@ 73
------------INS ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 3228 @LENGTH@ 51
---------------INS New@@new @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 3228 @LENGTH@ 3
---------------INS SimpleType@@MongoCustomConversions @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 3232 @LENGTH@ 22
---------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MongoCustomConversions[Collections.emptyList()] @AT@ 3255 @LENGTH@ 23
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3255 @LENGTH@ 11
------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 3267 @LENGTH@ 11
------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@new MongoCustomConversions(Collections.emptyList()).getSimpleTypeHolder() @AT@ 3280 @LENGTH@ 21


UPD TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @TO@ try (InputStream fileInputStream=new FileInputStream(input)){  Image image=ImageFactory.getInstance().fromInputStream(fileInputStream);  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3431 @LENGTH@ 366
---INS VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @TO@ TryStatement@@try {  Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input));  return classify(model,translator,image);} catch (IOException e) {  LOG.error("Couldn't transform input into a BufferedImage");  throw new RuntimeException("Couldn't transform input into a BufferedImage",e);} @AT@ 3436 @LENGTH@ 56
------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3436 @LENGTH@ 11
------INS VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @TO@ VariableDeclarationExpression@@InputStream fileInputStream=new FileInputStream(input) @AT@ 3448 @LENGTH@ 44
---------INS SimpleName@@fileInputStream @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3448 @LENGTH@ 15
---------INS ClassInstanceCreation@@FileInputStream[input] @TO@ VariableDeclarationFragment@@fileInputStream=new FileInputStream(input) @AT@ 3466 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3466 @LENGTH@ 3
------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3470 @LENGTH@ 15
------------INS SimpleName@@input @TO@ ClassInstanceCreation@@FileInputStream[input] @AT@ 3486 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Image image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)); @TO@ Image image=ImageFactory.getInstance().fromInputStream(fileInputStream); @AT@ 3449 @LENGTH@ 85
------UPD VariableDeclarationFragment@@image=ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ image=ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3455 @LENGTH@ 78
---------UPD MethodInvocation@@ImageFactory.getInstance().fromInputStream(new FileInputStream(input)) @TO@ ImageFactory.getInstance().fromInputStream(fileInputStream) @AT@ 3463 @LENGTH@ 70
------------UPD SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @TO@ MethodName:fromInputStream:[fileInputStream] @AT@ 3490 @LENGTH@ 43
---------------DEL ClassInstanceCreation@@FileInputStream[input] @AT@ 3506 @LENGTH@ 26
------------------DEL New@@new @AT@ 3506 @LENGTH@ 3
------------------DEL SimpleType@@FileInputStream @AT@ 3510 @LENGTH@ 15
------------------DEL SimpleName@@input @AT@ 3526 @LENGTH@ 5
---------------INS SimpleName@@fileInputStream @TO@ SimpleName@@MethodName:fromInputStream:[new FileInputStream(input)] @AT@ 3565 @LENGTH@ 15


UPD IfStatement@@if (ArrayUtils.isEmpty(mappingValues)) return StringUtils.wrap("/**",'"'); @TO@ if (ArrayUtils.isEmpty(mappingValues)) {  return StringUtils.wrap("/**",'"');} @AT@ 2451 @LENGTH@ 87
---UPD Block@@ThenBody:return StringUtils.wrap("/**",'"'); @TO@ ThenBody:{  return StringUtils.wrap("/**",'"');} @AT@ 2502 @LENGTH@ 36


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(acceptOlder != newer,file) @TO@ MethodInvocation:toFileVisitResult(acceptOlder != newer) @AT@ 8020 @LENGTH@ 53
---UPD MethodInvocation@@toFileVisitResult(acceptOlder != newer,file) @TO@ toFileVisitResult(acceptOlder != newer) @AT@ 8027 @LENGTH@ 45
------UPD SimpleName@@MethodName:toFileVisitResult:[acceptOlder != newer, file] @TO@ MethodName:toFileVisitResult:[acceptOlder != newer] @AT@ 8027 @LENGTH@ 45
---------DEL SimpleName@@file @AT@ 8067 @LENGTH@ 4


UPD TypeDeclaration@@[public]SplitAggregateStackOverflowIssueTest, ContextTestSupport @TO@ [@Disabled, public]SplitAggregateStackOverflowIssueTest, ContextTestSupport @AT@ 1392 @LENGTH@ 2332
---INS MarkerAnnotation@@@Disabled @TO@ TypeDeclaration@@[public]SplitAggregateStackOverflowIssueTest, ContextTestSupport @AT@ 1431 @LENGTH@ 9


UPD EnhancedForStatement@@for (ListenableFuture future : futures) {  future.get();} @TO@ for (ListenableFuture<?> future : futures) {  future.get();} @AT@ 13757 @LENGTH@ 62
---UPD SingleVariableDeclaration@@ListenableFuture future @TO@ ListenableFuture<?> future @AT@ 13762 @LENGTH@ 23
------DEL SimpleType@@ListenableFuture @AT@ 13762 @LENGTH@ 16
------INS ParameterizedType@@ListenableFuture<?> @TO@ SingleVariableDeclaration@@ListenableFuture future @AT@ 13790 @LENGTH@ 19
---------INS SimpleType@@ListenableFuture @TO@ ParameterizedType@@ListenableFuture<?> @AT@ 13790 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@ListenableFuture<?> @AT@ 13807 @LENGTH@ 1


DEL FieldDeclaration@@private, static, final, String, [MALFORMED_ISSUER_RESPONSE="{\n" + "     \"active\" : \"true\",\n" + "     \"iss\" : \"badissuer\"\n"+ "    }"] @AT@ 3678 @LENGTH@ 150
---DEL Modifier@@private @AT@ 3678 @LENGTH@ 7
---DEL Modifier@@static @AT@ 3686 @LENGTH@ 6
---DEL Modifier@@final @AT@ 3693 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 3699 @LENGTH@ 6
---DEL VariableDeclarationFragment@@MALFORMED_ISSUER_RESPONSE="{\n" + "     \"active\" : \"true\",\n" + "     \"iss\" : \"badissuer\"\n"+ "    }" @AT@ 3706 @LENGTH@ 121
------DEL SimpleName@@MALFORMED_ISSUER_RESPONSE @AT@ 3706 @LENGTH@ 25
------DEL InfixExpression@@"{\n" + "     \"active\" : \"true\",\n" + "     \"iss\" : \"badissuer\"\n"+ "    }" @AT@ 3734 @LENGTH@ 93
---------DEL StringLiteral@@"{\n" @AT@ 3734 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 3739 @LENGTH@ 1
---------DEL StringLiteral@@"     \"active\" : \"true\",\n" @AT@ 3745 @LENGTH@ 31
---------DEL StringLiteral@@"     \"iss\" : \"badissuer\"\n" @AT@ 3782 @LENGTH@ 32
---------DEL StringLiteral@@"    }" @AT@ 3820 @LENGTH@ 7


UPD VariableDeclarationStatement@@final FileVisitResult expectedFileVisitResult=AbstractFileFilter.toFileVisitResult(expected,path); @TO@ final FileVisitResult expectedFileVisitResult=AbstractFileFilter.toDefaultFileVisitResult(expected); @AT@ 3560 @LENGTH@ 101
---UPD VariableDeclarationFragment@@expectedFileVisitResult=AbstractFileFilter.toFileVisitResult(expected,path) @TO@ expectedFileVisitResult=AbstractFileFilter.toDefaultFileVisitResult(expected) @AT@ 3582 @LENGTH@ 78
------UPD MethodInvocation@@AbstractFileFilter.toFileVisitResult(expected,path) @TO@ AbstractFileFilter.toDefaultFileVisitResult(expected) @AT@ 3608 @LENGTH@ 52
---------UPD SimpleName@@MethodName:toFileVisitResult:[expected, path] @TO@ MethodName:toDefaultFileVisitResult:[expected] @AT@ 3627 @LENGTH@ 33
------------DEL SimpleName@@path @AT@ 3655 @LENGTH@ 4


UPD TryStatement@@try {  consumer=consumers.get(exchange.getRequest().getCode().name());  if (consumer == null) {    cexchange.respond(ResponseCode.METHOD_NOT_ALLOWED);    return;  }  camelExchange=consumer.createExchange(false);  consumer.createUoW(camelExchange);  OptionSet options=exchange.getRequest().getOptions();  for (  String s : options.getUriQuery()) {    int i=s.indexOf('=');    if (i == -1) {      camelExchange.getIn().setHeader(s,"");    } else {      camelExchange.getIn().setHeader(s.substring(0,i),s.substring(i + 1));    }  }  if (options.hasContentFormat()) {    String mt=MediaTypeRegistry.toString(options.getContentFormat());    camelExchange.getIn().setHeader(org.apache.camel.Exchange.CONTENT_TYPE,mt);  }  List<String> path=exchange.getRequest().getOptions().getUriPath();  LinkedList<Resource> resources=new LinkedList<>();  Resource r=this;  while (r != null) {    resources.push(r);    r=r.getParent();  }  if (resources.getFirst().getName().isEmpty()) {    resources.removeFirst();  }  int res=0;  while (!resources.isEmpty() && res < path.size()) {    r=resources.removeFirst();    if (r.getName().charAt(0) == '{' && r.getName().charAt(r.getName().length() - 1) == '}') {      String n=r.getName().substring(1,r.getName().length() - 1);      camelExchange.getIn().setHeader(n,path.get(res));    }    res++;  }  byte bytes[]=exchange.getCurrentRequest().getPayload();  camelExchange.getIn().setBody(bytes);  consumer.getProcessor().process(camelExchange);  Message target=camelExchange.getMessage();  int format=MediaTypeRegistry.parse(target.getHeader(org.apache.camel.Exchange.CONTENT_TYPE,String.class));  cexchange.respond(ResponseCode.CONTENT,target.getBody(byte[].class),format);} catch (Exception e) {  cexchange.respond(ResponseCode.INTERNAL_SERVER_ERROR,e.getMessage());} finally {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} @TO@ try {  consumer=consumers.get(exchange.getRequest().getCode().name());  if (consumer == null) {    cexchange.respond(ResponseCode.METHOD_NOT_ALLOWED);    return;  }  camelExchange=consumer.createExchange(false);  consumer.createUoW(camelExchange);  OptionSet options=exchange.getRequest().getOptions();  for (  String s : options.getUriQuery()) {    int i=s.indexOf('=');    if (i == -1) {      camelExchange.getIn().setHeader(s,"");    } else {      camelExchange.getIn().setHeader(s.substring(0,i),s.substring(i + 1));    }  }  if (options.hasContentFormat()) {    String mt=MediaTypeRegistry.toString(options.getContentFormat());    camelExchange.getIn().setHeader(org.apache.camel.Exchange.CONTENT_TYPE,mt);  }  List<String> path=exchange.getRequest().getOptions().getUriPath();  LinkedList<Resource> resources=new LinkedList<>();  Resource r=this;  while (r != null) {    resources.push(r);    r=r.getParent();  }  if (resources.getFirst().getName().isEmpty()) {    resources.removeFirst();  }  int res=0;  while (!resources.isEmpty() && res < path.size()) {    r=resources.removeFirst();    if (r.getName().charAt(0) == '{' && r.getName().charAt(r.getName().length() - 1) == '}') {      String n=r.getName().substring(1,r.getName().length() - 1);      camelExchange.getIn().setHeader(n,path.get(res));    }    res++;  }  byte bytes[]=exchange.getCurrentRequest().getPayload();  camelExchange.getIn().setBody(bytes);  consumer.getProcessor().process(camelExchange);  Message target=camelExchange.getMessage();  int format=MediaTypeRegistry.parse(target.getHeader(org.apache.camel.Exchange.CONTENT_TYPE,String.class));  cexchange.respond(ResponseCode.CONTENT,target.getBody(byte[].class),format);} catch (Exception e) {  cexchange.respond(ResponseCode.INTERNAL_SERVER_ERROR,e.getMessage());} finally {  if (consumer != null) {    if (camelExchange != null) {      consumer.doneUoW(camelExchange);    }    consumer.releaseExchange(camelExchange,false);  } else {    LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");  }} @AT@ 3331 @LENGTH@ 2595
---UPD Block@@FinallyBody:{  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} @TO@ ThenBody:{  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} @AT@ 5751 @LENGTH@ 175
---INS Block@@FinallyBody:{  if (consumer != null) {    if (camelExchange != null) {      consumer.doneUoW(camelExchange);    }    consumer.releaseExchange(camelExchange,false);  } else {    LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");  }} @TO@ TryStatement@@try {  consumer=consumers.get(exchange.getRequest().getCode().name());  if (consumer == null) {    cexchange.respond(ResponseCode.METHOD_NOT_ALLOWED);    return;  }  camelExchange=consumer.createExchange(false);  consumer.createUoW(camelExchange);  OptionSet options=exchange.getRequest().getOptions();  for (  String s : options.getUriQuery()) {    int i=s.indexOf('=');    if (i == -1) {      camelExchange.getIn().setHeader(s,"");    } else {      camelExchange.getIn().setHeader(s.substring(0,i),s.substring(i + 1));    }  }  if (options.hasContentFormat()) {    String mt=MediaTypeRegistry.toString(options.getContentFormat());    camelExchange.getIn().setHeader(org.apache.camel.Exchange.CONTENT_TYPE,mt);  }  List<String> path=exchange.getRequest().getOptions().getUriPath();  LinkedList<Resource> resources=new LinkedList<>();  Resource r=this;  while (r != null) {    resources.push(r);    r=r.getParent();  }  if (resources.getFirst().getName().isEmpty()) {    resources.removeFirst();  }  int res=0;  while (!resources.isEmpty() && res < path.size()) {    r=resources.removeFirst();    if (r.getName().charAt(0) == '{' && r.getName().charAt(r.getName().length() - 1) == '}') {      String n=r.getName().substring(1,r.getName().length() - 1);      camelExchange.getIn().setHeader(n,path.get(res));    }    res++;  }  byte bytes[]=exchange.getCurrentRequest().getPayload();  camelExchange.getIn().setBody(bytes);  consumer.getProcessor().process(camelExchange);  Message target=camelExchange.getMessage();  int format=MediaTypeRegistry.parse(target.getHeader(org.apache.camel.Exchange.CONTENT_TYPE,String.class));  cexchange.respond(ResponseCode.CONTENT,target.getBody(byte[].class),format);} catch (Exception e) {  cexchange.respond(ResponseCode.INTERNAL_SERVER_ERROR,e.getMessage());} finally {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} @AT@ 5898 @LENGTH@ 455
------INS IfStatement@@if (consumer != null) {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} else {  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @TO@ Block@@FinallyBody:{  if (consumer != null) {    if (camelExchange != null) {      consumer.doneUoW(camelExchange);    }    consumer.releaseExchange(camelExchange,false);  } else {    LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");  }} @AT@ 5912 @LENGTH@ 431
---------MOV Block@@FinallyBody:{  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} @TO@ IfStatement@@if (consumer != null) {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} else {  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @AT@ 5751 @LENGTH@ 175
---------INS InfixExpression@@consumer != null @TO@ IfStatement@@if (consumer != null) {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} else {  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @AT@ 5916 @LENGTH@ 16
------------INS SimpleName@@consumer @TO@ InfixExpression@@consumer != null @AT@ 5916 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@consumer != null @AT@ 5924 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@consumer != null @AT@ 5928 @LENGTH@ 4
---------INS Block@@ElseBody:{  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @TO@ IfStatement@@if (consumer != null) {  if (camelExchange != null) {    consumer.doneUoW(camelExchange);  }  consumer.releaseExchange(camelExchange,false);} else {  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @AT@ 6135 @LENGTH@ 208
------------INS ExpressionStatement@@MethodInvocation:LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown") @TO@ Block@@ElseBody:{  LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown");} @AT@ 6153 @LENGTH@ 176
---------------INS MethodInvocation@@LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown") @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown") @AT@ 6153 @LENGTH@ 175
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown") @AT@ 6153 @LENGTH@ 3
------------------INS SimpleName@@MethodName:warn:["Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown"] @TO@ MethodInvocation@@LOG.warn("Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown") @AT@ 6157 @LENGTH@ 171
---------------------INS StringLiteral@@"Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown" @TO@ SimpleName@@MethodName:warn:["Skipping releasing the consumer exchange because the consumer is null. It may haven't been properly created earlier - exception was thrown"] @AT@ 6187 @LENGTH@ 140


UPD ExpressionStatement@@MethodInvocation:from("quickfix:examples/inprocess.cfg?sessionID=FIX.4.2:MARKET->TRADER&exchangePattern=InOut").filter(header(QuickfixjEndpoint.MESSAGE_TYPE_KEY).isEqualTo(MsgType.ORDER_STATUS_REQUEST)).to("log://OrderStatusRequestLog?showAll=true&showOut=true&multiline=true").bean(new MarketOrderStatusService()).bean(new QuickfixjMessageJsonPrinter()) @TO@ MethodInvocation:from("quickfix:examples/inprocess.cfg?sessionID=FIX.4.2:MARKET->TRADER&exchangePattern=InOut").filter(header(QuickfixjEndpoint.MESSAGE_TYPE_KEY).isEqualTo(MsgType.ORDER_STATUS_REQUEST)).to("log://OrderStatusRequestLog?showAll=true&multiline=true").bean(new MarketOrderStatusService()).bean(new QuickfixjMessageJsonPrinter()) @AT@ 3635 @LENGTH@ 438
---UPD MethodInvocation@@from("quickfix:examples/inprocess.cfg?sessionID=FIX.4.2:MARKET->TRADER&exchangePattern=InOut").filter(header(QuickfixjEndpoint.MESSAGE_TYPE_KEY).isEqualTo(MsgType.ORDER_STATUS_REQUEST)).to("log://OrderStatusRequestLog?showAll=true&showOut=true&multiline=true").bean(new MarketOrderStatusService()).bean(new QuickfixjMessageJsonPrinter()) @TO@ from("quickfix:examples/inprocess.cfg?sessionID=FIX.4.2:MARKET->TRADER&exchangePattern=InOut").filter(header(QuickfixjEndpoint.MESSAGE_TYPE_KEY).isEqualTo(MsgType.ORDER_STATUS_REQUEST)).to("log://OrderStatusRequestLog?showAll=true&multiline=true").bean(new MarketOrderStatusService()).bean(new QuickfixjMessageJsonPrinter()) @AT@ 3635 @LENGTH@ 437
------UPD MethodInvocation@@MethodName:to:["log://OrderStatusRequestLog?showAll=true&showOut=true&multiline=true"] @TO@ MethodName:to:["log://OrderStatusRequestLog?showAll=true&multiline=true"] @AT@ 3635 @LENGTH@ 310
---------UPD StringLiteral@@"log://OrderStatusRequestLog?showAll=true&showOut=true&multiline=true" @TO@ "log://OrderStatusRequestLog?showAll=true&multiline=true" @AT@ 3874 @LENGTH@ 70

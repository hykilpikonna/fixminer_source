UPD ReturnStatement@@MethodInvocation:this.authenticationManager.authenticate(token).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ MethodInvocation:this.authenticationManager.authenticate(token).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 4663 @LENGTH@ 284
---UPD MethodInvocation@@this.authenticationManager.authenticate(token).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ this.authenticationManager.authenticate(token).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 4670 @LENGTH@ 276
------INS MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))] @TO@ MethodInvocation@@this.authenticationManager.authenticate(token).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 4670 @LENGTH@ 166
---------INS MethodInvocation@@Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass()))) @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))] @AT@ 4735 @LENGTH@ 100
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass()))) @AT@ 4735 @LENGTH@ 4
------------INS SimpleName@@MethodName:defer:[() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass()))] @TO@ MethodInvocation@@Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass()))) @AT@ 4740 @LENGTH@ 95
---------------INS LambdaExpression@@() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())) @TO@ SimpleName@@MethodName:defer:[() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass()))] @AT@ 4746 @LENGTH@ 88
------------------INS MethodInvocation@@Mono.error(new IllegalStateException("No provider found for " + token.getClass())) @TO@ LambdaExpression@@() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())) @AT@ 4752 @LENGTH@ 82
---------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(new IllegalStateException("No provider found for " + token.getClass())) @AT@ 4752 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:error:[new IllegalStateException("No provider found for " + token.getClass())] @TO@ MethodInvocation@@Mono.error(new IllegalStateException("No provider found for " + token.getClass())) @AT@ 4757 @LENGTH@ 77
------------------------INS ClassInstanceCreation@@IllegalStateException["No provider found for " + token.getClass()] @TO@ SimpleName@@MethodName:error:[new IllegalStateException("No provider found for " + token.getClass())] @AT@ 4763 @LENGTH@ 70
---------------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["No provider found for " + token.getClass()] @AT@ 4763 @LENGTH@ 3
---------------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["No provider found for " + token.getClass()] @AT@ 4767 @LENGTH@ 21
---------------------------INS InfixExpression@@"No provider found for " + token.getClass() @TO@ ClassInstanceCreation@@IllegalStateException["No provider found for " + token.getClass()] @AT@ 4789 @LENGTH@ 43
------------------------------INS StringLiteral@@"No provider found for " @TO@ InfixExpression@@"No provider found for " + token.getClass() @AT@ 4789 @LENGTH@ 24
------------------------------INS Operator@@+ @TO@ InfixExpression@@"No provider found for " + token.getClass() @AT@ 4813 @LENGTH@ 1
------------------------------INS MethodInvocation@@token.getClass() @TO@ InfixExpression@@"No provider found for " + token.getClass() @AT@ 4816 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getClass() @AT@ 4816 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@token.getClass() @AT@ 4822 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn(StandardClaimNames.SUB) @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 3531 @LENGTH@ 90
---INS MethodInvocation@@when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn(StandardClaimNames.SUB) @TO@ ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn(StandardClaimNames.SUB) @AT@ 3531 @LENGTH@ 89
------INS MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUserNameAttributeName()] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn(StandardClaimNames.SUB) @AT@ 3531 @LENGTH@ 54
---------INS MethodInvocation@@this.userInfoEndpoint.getUserNameAttributeName() @TO@ MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUserNameAttributeName()] @AT@ 3536 @LENGTH@ 48
------------INS FieldAccess@@this.userInfoEndpoint @TO@ MethodInvocation@@this.userInfoEndpoint.getUserNameAttributeName() @AT@ 3536 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3536 @LENGTH@ 4
---------------INS SimpleName@@userInfoEndpoint @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3541 @LENGTH@ 16
------------INS SimpleName@@MethodName:getUserNameAttributeName:[] @TO@ MethodInvocation@@this.userInfoEndpoint.getUserNameAttributeName() @AT@ 3558 @LENGTH@ 26
------INS SimpleName@@MethodName:thenReturn:[StandardClaimNames.SUB] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUserNameAttributeName()).thenReturn(StandardClaimNames.SUB) @AT@ 3586 @LENGTH@ 34
---------INS QualifiedName@@StandardClaimNames.SUB @TO@ SimpleName@@MethodName:thenReturn:[StandardClaimNames.SUB] @AT@ 3597 @LENGTH@ 22
------------INS SimpleName@@StandardClaimNames @TO@ QualifiedName@@StandardClaimNames.SUB @AT@ 3597 @LENGTH@ 18
------------INS SimpleName@@SUB @TO@ QualifiedName@@StandardClaimNames.SUB @AT@ 3616 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertThat(idToken.getAuthenticatedAt().toEpochMilli()).isEqualTo(AUTH_TIME_VALUE) @TO@ MethodInvocation:assertThat(idToken.getAuthenticatedAt().getEpochSecond()).isEqualTo(AUTH_TIME_VALUE) @AT@ 4607 @LENGTH@ 83
---UPD MethodInvocation@@assertThat(idToken.getAuthenticatedAt().toEpochMilli()).isEqualTo(AUTH_TIME_VALUE) @TO@ assertThat(idToken.getAuthenticatedAt().getEpochSecond()).isEqualTo(AUTH_TIME_VALUE) @AT@ 4607 @LENGTH@ 82
------UPD MethodInvocation@@MethodName:assertThat:[idToken.getAuthenticatedAt().toEpochMilli()] @TO@ MethodName:assertThat:[idToken.getAuthenticatedAt().getEpochSecond()] @AT@ 4607 @LENGTH@ 55
---------UPD MethodInvocation@@idToken.getAuthenticatedAt().toEpochMilli() @TO@ idToken.getAuthenticatedAt().getEpochSecond() @AT@ 4618 @LENGTH@ 43
------------UPD SimpleName@@MethodName:toEpochMilli:[] @TO@ MethodName:getEpochSecond:[] @AT@ 4647 @LENGTH@ 14


UPD TryStatement@@try {  base.evaluate();}  finally {  close();} @TO@ try {  base.evaluate();}  finally {  TestSecurityContextHolder.clearContext();  close();} @AT@ 1111 @LENGTH@ 63
---UPD Block@@FinallyBody:{  close();} @TO@ FinallyBody:{  TestSecurityContextHolder.clearContext();  close();} @AT@ 1153 @LENGTH@ 21
------INS ExpressionStatement@@MethodInvocation:TestSecurityContextHolder.clearContext() @TO@ Block@@FinallyBody:{  close();} @AT@ 1308 @LENGTH@ 41
---------INS MethodInvocation@@TestSecurityContextHolder.clearContext() @TO@ ExpressionStatement@@MethodInvocation:TestSecurityContextHolder.clearContext() @AT@ 1308 @LENGTH@ 40
------------INS SimpleName@@Name:TestSecurityContextHolder @TO@ MethodInvocation@@TestSecurityContextHolder.clearContext() @AT@ 1308 @LENGTH@ 25
------------INS SimpleName@@MethodName:clearContext:[] @TO@ MethodInvocation@@TestSecurityContextHolder.clearContext() @AT@ 1334 @LENGTH@ 14


UPD MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object inputObject, OutputStream stream, IOException, SAXException,  @TO@ public, void, MethodName:marshal, Exchange exchange, Object inputObject, OutputStream stream, IOException,  @AT@ 4805 @LENGTH@ 786
---DEL SimpleType@@SAXException @AT@ 4905 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:when(em.getDelegate()).thenReturn(em) @TO@ MethodDeclaration@@public, void, MethodName:setUp, SecurityException, NoSuchMethodException,  @AT@ 3570 @LENGTH@ 38
---INS MethodInvocation@@when(em.getDelegate()).thenReturn(em) @TO@ ExpressionStatement@@MethodInvocation:when(em.getDelegate()).thenReturn(em) @AT@ 3570 @LENGTH@ 37
------INS MethodInvocation@@MethodName:when:[em.getDelegate()] @TO@ MethodInvocation@@when(em.getDelegate()).thenReturn(em) @AT@ 3570 @LENGTH@ 22
---------INS MethodInvocation@@em.getDelegate() @TO@ MethodInvocation@@MethodName:when:[em.getDelegate()] @AT@ 3575 @LENGTH@ 16
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getDelegate() @AT@ 3575 @LENGTH@ 2
------------INS SimpleName@@MethodName:getDelegate:[] @TO@ MethodInvocation@@em.getDelegate() @AT@ 3578 @LENGTH@ 13
------INS SimpleName@@MethodName:thenReturn:[em] @TO@ MethodInvocation@@when(em.getDelegate()).thenReturn(em) @AT@ 3593 @LENGTH@ 14
---------INS SimpleName@@em @TO@ SimpleName@@MethodName:thenReturn:[em] @AT@ 3604 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:loadAuthorizationRequestWhenSavedAndStateParameterNullThenThrowIllegalArgumentException,  @TO@ public, void, MethodName:loadAuthorizationRequestWhenSavedAndStateParameterNullThenReturnNull,  @AT@ 4883 @LENGTH@ 541
---UPD SimpleName@@MethodName:loadAuthorizationRequestWhenSavedAndStateParameterNullThenThrowIllegalArgumentException @TO@ MethodName:loadAuthorizationRequestWhenSavedAndStateParameterNullThenReturnNull @AT@ 4895 @LENGTH@ 87
---UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizationRequestRepository.loadAuthorizationRequest(request)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThat(this.authorizationRequestRepository.loadAuthorizationRequest(request)).isNull() @AT@ 5276 @LENGTH@ 145
------UPD MethodInvocation@@assertThatThrownBy(() -> this.authorizationRequestRepository.loadAuthorizationRequest(request)).isInstanceOf(IllegalArgumentException.class) @TO@ assertThat(this.authorizationRequestRepository.loadAuthorizationRequest(request)).isNull() @AT@ 5276 @LENGTH@ 144
---------UPD MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizationRequestRepository.loadAuthorizationRequest(request)] @TO@ MethodName:assertThat:[this.authorizationRequestRepository.loadAuthorizationRequest(request)] @AT@ 5276 @LENGTH@ 95
------------DEL LambdaExpression@@() -> this.authorizationRequestRepository.loadAuthorizationRequest(request) @AT@ 5295 @LENGTH@ 75
------------MOV MethodInvocation@@this.authorizationRequestRepository.loadAuthorizationRequest(request) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizationRequestRepository.loadAuthorizationRequest(request)] @AT@ 5301 @LENGTH@ 69
---------UPD SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodName:isNull:[] @AT@ 5376 @LENGTH@ 44
------------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 5389 @LENGTH@ 30


UPD ReturnStatement@@ParenthesizedExpression:(super.usePropertyAccess() || !getProperty().isFieldBacked()) @TO@ InfixExpression:super.usePropertyAccess() || !getProperty().isFieldBacked() @AT@ 3476 @LENGTH@ 69
---DEL ParenthesizedExpression@@(super.usePropertyAccess() || !getProperty().isFieldBacked()) @AT@ 3483 @LENGTH@ 61
---MOV InfixExpression@@super.usePropertyAccess() || !getProperty().isFieldBacked() @TO@ ReturnStatement@@ParenthesizedExpression:(super.usePropertyAccess() || !getProperty().isFieldBacked()) @AT@ 3484 @LENGTH@ 59


INS ExpressionStatement@@MethodInvocation:when(mock.getDelegate()).thenReturn(mock) @TO@ MethodDeclaration@@public, void, MethodName:createsNormalQueryForJpaManagedReturnTypes, Exception,  @AT@ 2193 @LENGTH@ 42
---INS MethodInvocation@@when(mock.getDelegate()).thenReturn(mock) @TO@ ExpressionStatement@@MethodInvocation:when(mock.getDelegate()).thenReturn(mock) @AT@ 2193 @LENGTH@ 41
------INS MethodInvocation@@MethodName:when:[mock.getDelegate()] @TO@ MethodInvocation@@when(mock.getDelegate()).thenReturn(mock) @AT@ 2193 @LENGTH@ 24
---------INS MethodInvocation@@mock.getDelegate() @TO@ MethodInvocation@@MethodName:when:[mock.getDelegate()] @AT@ 2198 @LENGTH@ 18
------------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.getDelegate() @AT@ 2198 @LENGTH@ 4
------------INS SimpleName@@MethodName:getDelegate:[] @TO@ MethodInvocation@@mock.getDelegate() @AT@ 2203 @LENGTH@ 13
------INS SimpleName@@MethodName:thenReturn:[mock] @TO@ MethodInvocation@@when(mock.getDelegate()).thenReturn(mock) @AT@ 2218 @LENGTH@ 16
---------INS SimpleName@@mock @TO@ SimpleName@@MethodName:thenReturn:[mock] @AT@ 2229 @LENGTH@ 4


UPD VariableDeclarationStatement@@String[][] expected2={{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}}; @TO@ String[][] expected2={{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}}; @AT@ 38746 @LENGTH@ 681
---UPD VariableDeclarationFragment@@expected2={{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}} @TO@ expected2={{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}} @AT@ 38757 @LENGTH@ 669
------UPD ArrayInitializer@@{{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}} @TO@ {{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":0}\t1\t2","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":0}\t2\t4","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"},{"{\"transactionid\":21,\"bucketid\":536870912,\"rowid\":1}\t6\t8","warehouse/t/delta_0000021_0000021_0000/bucket_00000"},{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"}} @AT@ 38769 @LENGTH@ 657
---------UPD ArrayInitializer@@{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"} @TO@ {"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t5\t6","warehouse/t/delta_0000021_0000021_0000/bucket_00001"} @AT@ 39037 @LENGTH@ 122
------------UPD StringLiteral@@"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t5\t6" @TO@ "{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t5\t6" @AT@ 39038 @LENGTH@ 65
---------UPD ArrayInitializer@@{"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"} @TO@ {"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t9\t10","warehouse/t/delta_0000021_0000021_0000/bucket_00001"} @AT@ 39297 @LENGTH@ 123
------------UPD StringLiteral@@"{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":2}\t9\t10" @TO@ "{\"transactionid\":21,\"bucketid\":536936448,\"rowid\":1}\t9\t10" @AT@ 39298 @LENGTH@ 66


UPD IfStatement@@if (entry.getValue().size() > 0) {  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  method.addRequestHeader(key,s);} @TO@ if (entry.getValue().size() > 0) {  method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";")));} @AT@ 7324 @LENGTH@ 410
---UPD Block@@ThenBody:{  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  method.addRequestHeader(key,s);} @TO@ ThenBody:{  method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";")));} @AT@ 7357 @LENGTH@ 377
------INS ExpressionStatement@@MethodInvocation:method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @TO@ Block@@ThenBody:{  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  method.addRequestHeader(key,s);} @AT@ 7480 @LENGTH@ 89
---------INS MethodInvocation@@method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @TO@ ExpressionStatement@@MethodInvocation:method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7480 @LENGTH@ 88
------------INS SimpleName@@MethodName:addRequestHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @TO@ MethodInvocation@@method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7487 @LENGTH@ 81
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:addRequestHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @AT@ 7504 @LENGTH@ 3
---------------INS MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @TO@ SimpleName@@MethodName:addRequestHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @AT@ 7509 @LENGTH@ 58
------------------INS SimpleName@@MethodName:collect:[Collectors.joining(";")] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7535 @LENGTH@ 32
---------------------INS MethodInvocation@@Collectors.joining(";") @TO@ SimpleName@@MethodName:collect:[Collectors.joining(";")] @AT@ 7543 @LENGTH@ 23
------------------------MOV SimpleName@@Name:method @TO@ MethodInvocation@@Collectors.joining(";") @AT@ 7684 @LENGTH@ 6
------------------------MOV SimpleName@@MethodName:addRequestHeader:[key, s] @TO@ MethodInvocation@@Collectors.joining(";") @AT@ 7691 @LENGTH@ 24
---------------------------INS StringLiteral@@";" @TO@ SimpleName@@MethodName:addRequestHeader:[key, s] @AT@ 7562 @LENGTH@ 3
------------------MOV MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7609 @LENGTH@ 16
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7609 @LENGTH@ 5
------------------MOV MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7639 @LENGTH@ 16
------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@method.addRequestHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7579 @LENGTH@ 5
------DEL VariableDeclarationStatement@@String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0); @AT@ 7568 @LENGTH@ 95
---------DEL SimpleType@@String @AT@ 7568 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0) @AT@ 7575 @LENGTH@ 87
------------DEL SimpleName@@s @AT@ 7575 @LENGTH@ 1
------------DEL ConditionalExpression@@entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0) @AT@ 7579 @LENGTH@ 83
---------------DEL InfixExpression@@entry.getValue().size() > 1 @AT@ 7579 @LENGTH@ 27
------------------DEL MethodInvocation@@entry.getValue().size() @AT@ 7579 @LENGTH@ 23
---------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 7579 @LENGTH@ 16
---------------------DEL SimpleName@@MethodName:size:[] @AT@ 7596 @LENGTH@ 6
------------------DEL Operator@@> @AT@ 7602 @LENGTH@ 1
------------------DEL NumberLiteral@@1 @AT@ 7605 @LENGTH@ 1
---------------DEL MethodInvocation@@entry.getValue().toString() @AT@ 7609 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 7626 @LENGTH@ 10
---------------DEL MethodInvocation@@entry.getValue().get(0) @AT@ 7639 @LENGTH@ 23
------------------DEL SimpleName@@Name:entry @AT@ 7639 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:get:[0] @AT@ 7656 @LENGTH@ 6
---------------------DEL NumberLiteral@@0 @AT@ 7660 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:method.addRequestHeader(key,s) @AT@ 7684 @LENGTH@ 32
---------DEL MethodInvocation@@method.addRequestHeader(key,s) @AT@ 7684 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:executesNamedQueryWithConstructorExpression,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations="classpath:config/namespace-application-context.xml"), @Transactional, public]UserRepositoryFinderTests,  @AT@ 7887 @LENGTH@ 124
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:executesNamedQueryWithConstructorExpression,  @AT@ 7887 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:executesNamedQueryWithConstructorExpression,  @AT@ 7894 @LENGTH@ 4
---INS SimpleName@@MethodName:executesNamedQueryWithConstructorExpression @TO@ MethodDeclaration@@public, void, MethodName:executesNamedQueryWithConstructorExpression,  @AT@ 7899 @LENGTH@ 43
---INS ExpressionStatement@@MethodInvocation:userRepository.findByNamedQueryWithConstructorExpression() @TO@ MethodDeclaration@@public, void, MethodName:executesNamedQueryWithConstructorExpression,  @AT@ 7949 @LENGTH@ 59
------INS MethodInvocation@@userRepository.findByNamedQueryWithConstructorExpression() @TO@ ExpressionStatement@@MethodInvocation:userRepository.findByNamedQueryWithConstructorExpression() @AT@ 7949 @LENGTH@ 58
---------INS SimpleName@@Name:userRepository @TO@ MethodInvocation@@userRepository.findByNamedQueryWithConstructorExpression() @AT@ 7949 @LENGTH@ 14
---------INS SimpleName@@MethodName:findByNamedQueryWithConstructorExpression:[] @TO@ MethodInvocation@@userRepository.findByNamedQueryWithConstructorExpression() @AT@ 7964 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:EasyMock.replay(new Object[]{this.context}) @TO@ MethodInvocation:EasyMock.replay(this.context) @AT@ 1295 @LENGTH@ 47
---UPD MethodInvocation@@EasyMock.replay(new Object[]{this.context}) @TO@ EasyMock.replay(this.context) @AT@ 1295 @LENGTH@ 46
------UPD SimpleName@@MethodName:replay:[new Object[]{this.context}] @TO@ MethodName:replay:[this.context] @AT@ 1304 @LENGTH@ 37
---------DEL ArrayCreation@@new Object[]{this.context} @AT@ 1311 @LENGTH@ 29
------------DEL ArrayType@@Object[] @AT@ 1315 @LENGTH@ 8
---------------DEL SimpleType@@Object @AT@ 1315 @LENGTH@ 6
------------DEL ArrayInitializer@@{this.context} @AT@ 1324 @LENGTH@ 16
---------------DEL FieldAccess@@this.context @AT@ 1326 @LENGTH@ 12
---------INS FieldAccess@@this.context @TO@ SimpleName@@MethodName:replay:[new Object[]{this.context}] @AT@ 1311 @LENGTH@ 12
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 1326 @LENGTH@ 4
------------MOV SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 1331 @LENGTH@ 7


INS MethodDeclaration@@Person, MethodName:findByUniqueId, UUID uniqueId,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 9671 @LENGTH@ 30
---INS SimpleType@@Person @TO@ MethodDeclaration@@Person, MethodName:findByUniqueId, UUID uniqueId,  @AT@ 9664 @LENGTH@ 6
---INS SimpleName@@MethodName:findByUniqueId @TO@ MethodDeclaration@@Person, MethodName:findByUniqueId, UUID uniqueId,  @AT@ 9671 @LENGTH@ 14
---INS SingleVariableDeclaration@@UUID uniqueId @TO@ MethodDeclaration@@Person, MethodName:findByUniqueId, UUID uniqueId,  @AT@ 9686 @LENGTH@ 13
------INS SimpleType@@UUID @TO@ SingleVariableDeclaration@@UUID uniqueId @AT@ 9686 @LENGTH@ 4
------INS SimpleName@@uniqueId @TO@ SingleVariableDeclaration@@UUID uniqueId @AT@ 9691 @LENGTH@ 8


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 4831 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 4831 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 4835 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 4835 @LENGTH@ 4


UPD ReturnStatement@@StringLiteral:"AnnoatedClass" @TO@ StringLiteral:"AnnotatedClass" @AT@ 2361 @LENGTH@ 23
---UPD StringLiteral@@"AnnoatedClass" @TO@ "AnnotatedClass" @AT@ 2368 @LENGTH@ 15


INS IfStatement@@if (exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0) {  this.logger.debug("Nothing to declare");  return;} @TO@ MethodDeclaration@@public, void, MethodName:initialize,  @AT@ 15335 @LENGTH@ 133
---INS InfixExpression@@exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0 @TO@ IfStatement@@if (exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0) {  this.logger.debug("Nothing to declare");  return;} @AT@ 15339 @LENGTH@ 67
------INS InfixExpression@@exchanges.size() == 0 && queues.size() == 0 @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0 @AT@ 15339 @LENGTH@ 43
---------INS InfixExpression@@exchanges.size() == 0 @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 @AT@ 15339 @LENGTH@ 21
------------INS MethodInvocation@@exchanges.size() @TO@ InfixExpression@@exchanges.size() == 0 @AT@ 15339 @LENGTH@ 16
---------------INS SimpleName@@Name:exchanges @TO@ MethodInvocation@@exchanges.size() @AT@ 15339 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@exchanges.size() @AT@ 15349 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@exchanges.size() == 0 @AT@ 15355 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@exchanges.size() == 0 @AT@ 15359 @LENGTH@ 1
---------INS Operator@@&& @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 @AT@ 15360 @LENGTH@ 2
---------INS InfixExpression@@queues.size() == 0 @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 @AT@ 15364 @LENGTH@ 18
------------INS MethodInvocation@@queues.size() @TO@ InfixExpression@@queues.size() == 0 @AT@ 15364 @LENGTH@ 13
---------------INS SimpleName@@Name:queues @TO@ MethodInvocation@@queues.size() @AT@ 15364 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@queues.size() @AT@ 15371 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@queues.size() == 0 @AT@ 15377 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@queues.size() == 0 @AT@ 15381 @LENGTH@ 1
------INS Operator@@&& @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0 @AT@ 15382 @LENGTH@ 2
------INS InfixExpression@@bindings.size() == 0 @TO@ InfixExpression@@exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0 @AT@ 15386 @LENGTH@ 20
---------INS MethodInvocation@@bindings.size() @TO@ InfixExpression@@bindings.size() == 0 @AT@ 15386 @LENGTH@ 15
------------INS SimpleName@@Name:bindings @TO@ MethodInvocation@@bindings.size() @AT@ 15386 @LENGTH@ 8
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@bindings.size() @AT@ 15395 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@bindings.size() == 0 @AT@ 15401 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@bindings.size() == 0 @AT@ 15405 @LENGTH@ 1
---INS Block@@ThenBody:{  this.logger.debug("Nothing to declare");  return;} @TO@ IfStatement@@if (exchanges.size() == 0 && queues.size() == 0 && bindings.size() == 0) {  this.logger.debug("Nothing to declare");  return;} @AT@ 15408 @LENGTH@ 60
------INS ExpressionStatement@@MethodInvocation:this.logger.debug("Nothing to declare") @TO@ Block@@ThenBody:{  this.logger.debug("Nothing to declare");  return;} @AT@ 15413 @LENGTH@ 40
---------INS MethodInvocation@@this.logger.debug("Nothing to declare") @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug("Nothing to declare") @AT@ 15413 @LENGTH@ 39
------------INS FieldAccess@@this.logger @TO@ MethodInvocation@@this.logger.debug("Nothing to declare") @AT@ 15413 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.logger @AT@ 15413 @LENGTH@ 4
---------------INS SimpleName@@logger @TO@ FieldAccess@@this.logger @AT@ 15418 @LENGTH@ 6
------------INS SimpleName@@MethodName:debug:["Nothing to declare"] @TO@ MethodInvocation@@this.logger.debug("Nothing to declare") @AT@ 15425 @LENGTH@ 27
---------------INS StringLiteral@@"Nothing to declare" @TO@ SimpleName@@MethodName:debug:["Nothing to declare"] @AT@ 15431 @LENGTH@ 20
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  this.logger.debug("Nothing to declare");  return;} @AT@ 15457 @LENGTH@ 7


INS MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @TO@ TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @AT@ 2702 @LENGTH@ 537
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2702 @LENGTH@ 9
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2712 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2712 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2717 @LENGTH@ 6
---INS SimpleName@@MethodName:getItems @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2725 @LENGTH@ 8
---INS SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2734 @LENGTH@ 42
------INS SimpleType@@CLICompleterInvocation @TO@ SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2734 @LENGTH@ 22
------INS SimpleName@@completerInvocation @TO@ SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2757 @LENGTH@ 19
---INS VariableDeclarationStatement@@List<String> groups=Collections.emptyList(); @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2792 @LENGTH@ 46
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> groups=Collections.emptyList(); @AT@ 2792 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2792 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2797 @LENGTH@ 6
------INS VariableDeclarationFragment@@groups=Collections.emptyList() @TO@ VariableDeclarationStatement@@List<String> groups=Collections.emptyList(); @AT@ 2805 @LENGTH@ 32
---------INS SimpleName@@groups @TO@ VariableDeclarationFragment@@groups=Collections.emptyList() @AT@ 2805 @LENGTH@ 6
---------INS MethodInvocation@@Collections.emptyList() @TO@ VariableDeclarationFragment@@groups=Collections.emptyList() @AT@ 2814 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2814 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2826 @LENGTH@ 11
---INS IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2851 @LENGTH@ 351
------INS InfixExpression@@completerInvocation.getCommandContext().getModelControllerClient() != null @TO@ IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @AT@ 2855 @LENGTH@ 74
---------INS MethodInvocation@@completerInvocation.getCommandContext().getModelControllerClient() @TO@ InfixExpression@@completerInvocation.getCommandContext().getModelControllerClient() != null @AT@ 2855 @LENGTH@ 66
------------INS MethodInvocation@@MethodName:getCommandContext:[] @TO@ MethodInvocation@@completerInvocation.getCommandContext().getModelControllerClient() @AT@ 2855 @LENGTH@ 39
------------INS SimpleName@@Name:completerInvocation @TO@ MethodInvocation@@completerInvocation.getCommandContext().getModelControllerClient() @AT@ 2855 @LENGTH@ 19
------------INS SimpleName@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@completerInvocation.getCommandContext().getModelControllerClient() @AT@ 2895 @LENGTH@ 26
---------INS Operator@@!= @TO@ InfixExpression@@completerInvocation.getCommandContext().getModelControllerClient() != null @AT@ 2921 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@completerInvocation.getCommandContext().getModelControllerClient() != null @AT@ 2925 @LENGTH@ 4
------INS Block@@ThenBody:{  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @TO@ IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @AT@ 2931 @LENGTH@ 271
---------INS VariableDeclarationStatement@@CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand(); @TO@ Block@@ThenBody:{  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @AT@ 2949 @LENGTH@ 86
------------INS SimpleType@@CommandWithPermissions @TO@ VariableDeclarationStatement@@CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand(); @AT@ 2949 @LENGTH@ 22
------------INS VariableDeclarationFragment@@rc=(CommandWithPermissions)completerInvocation.getCommand() @TO@ VariableDeclarationStatement@@CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand(); @AT@ 2972 @LENGTH@ 62
---------------INS SimpleName@@rc @TO@ VariableDeclarationFragment@@rc=(CommandWithPermissions)completerInvocation.getCommand() @AT@ 2972 @LENGTH@ 2
---------------INS CastExpression@@(CommandWithPermissions)completerInvocation.getCommand() @TO@ VariableDeclarationFragment@@rc=(CommandWithPermissions)completerInvocation.getCommand() @AT@ 2977 @LENGTH@ 57
------------------INS SimpleType@@CommandWithPermissions @TO@ CastExpression@@(CommandWithPermissions)completerInvocation.getCommand() @AT@ 2978 @LENGTH@ 22
------------------INS MethodInvocation@@completerInvocation.getCommand() @TO@ CastExpression@@(CommandWithPermissions)completerInvocation.getCommand() @AT@ 3002 @LENGTH@ 32
---------------------INS SimpleName@@Name:completerInvocation @TO@ MethodInvocation@@completerInvocation.getCommand() @AT@ 3002 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:getCommand:[] @TO@ MethodInvocation@@completerInvocation.getCommand() @AT@ 3022 @LENGTH@ 12
---------INS ReturnStatement@@MethodInvocation:rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @TO@ Block@@ThenBody:{  CommandWithPermissions rc=(CommandWithPermissions)completerInvocation.getCommand();  return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext());} @AT@ 3052 @LENGTH@ 136
------------INS MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @TO@ ReturnStatement@@MethodInvocation:rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 3059 @LENGTH@ 128
---------------INS MethodInvocation@@MethodName:getServerGroupAddPermission:[] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 3059 @LENGTH@ 49
---------------INS MethodInvocation@@MethodName:getPermissions:[] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 3059 @LENGTH@ 19
---------------INS SimpleName@@Name:rc @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 3059 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getAllowedOn:[completerInvocation.getCommandContext()] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 3134 @LENGTH@ 53
------------------INS MethodInvocation@@completerInvocation.getCommandContext() @TO@ SimpleName@@MethodName:getAllowedOn:[completerInvocation.getCommandContext()] @AT@ 3147 @LENGTH@ 39
---------------------INS SimpleName@@Name:completerInvocation @TO@ MethodInvocation@@completerInvocation.getCommandContext() @AT@ 3147 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:getCommandContext:[] @TO@ MethodInvocation@@completerInvocation.getCommandContext() @AT@ 3167 @LENGTH@ 19
---INS ReturnStatement@@SimpleName:groups @TO@ MethodDeclaration@@protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 3215 @LENGTH@ 14
------INS SimpleName@@groups @TO@ ReturnStatement@@SimpleName:groups @AT@ 3222 @LENGTH@ 6


INS IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @TO@ MethodDeclaration@@public, Database, MethodName:get_database_core, String catName, final String name, NoSuchObjectException, MetaException,  @AT@ 50310 @LENGTH@ 93
---INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @AT@ 50314 @LENGTH@ 12
------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 50314 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 50318 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 50322 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MetaException("Database name cannot be null.");} @TO@ IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @AT@ 50328 @LENGTH@ 75
------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Database name cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Database name cannot be null.");} @AT@ 50338 @LENGTH@ 57
---------INS ClassInstanceCreation@@MetaException["Database name cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Database name cannot be null.") @AT@ 50344 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 50344 @LENGTH@ 3
------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 50348 @LENGTH@ 13
------------INS StringLiteral@@"Database name cannot be null." @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 50362 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 35465 @LENGTH@ 228
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35465 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35472 @LENGTH@ 4
---INS SimpleName@@MethodName:findByUUIDShouldReturnCorrectResult @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35477 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:dave.setUniqueId(UUID.randomUUID()) @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35520 @LENGTH@ 36
------INS MethodInvocation@@dave.setUniqueId(UUID.randomUUID()) @TO@ ExpressionStatement@@MethodInvocation:dave.setUniqueId(UUID.randomUUID()) @AT@ 35520 @LENGTH@ 35
---------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.setUniqueId(UUID.randomUUID()) @AT@ 35520 @LENGTH@ 4
---------INS SimpleName@@MethodName:setUniqueId:[UUID.randomUUID()] @TO@ MethodInvocation@@dave.setUniqueId(UUID.randomUUID()) @AT@ 35525 @LENGTH@ 30
------------INS MethodInvocation@@UUID.randomUUID() @TO@ SimpleName@@MethodName:setUniqueId:[UUID.randomUUID()] @AT@ 35537 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 35537 @LENGTH@ 4
---------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 35542 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:repository.save(dave) @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35559 @LENGTH@ 22
------INS MethodInvocation@@repository.save(dave) @TO@ ExpressionStatement@@MethodInvocation:repository.save(dave) @AT@ 35559 @LENGTH@ 21
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(dave) @AT@ 35559 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[dave] @TO@ MethodInvocation@@repository.save(dave) @AT@ 35570 @LENGTH@ 10
------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:save:[dave] @AT@ 35575 @LENGTH@ 4
---INS VariableDeclarationStatement@@Person dave=repository.findByUniqueId(this.dave.getUniqueId()); @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35585 @LENGTH@ 65
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person dave=repository.findByUniqueId(this.dave.getUniqueId()); @AT@ 35585 @LENGTH@ 6
------INS VariableDeclarationFragment@@dave=repository.findByUniqueId(this.dave.getUniqueId()) @TO@ VariableDeclarationStatement@@Person dave=repository.findByUniqueId(this.dave.getUniqueId()); @AT@ 35592 @LENGTH@ 57
---------INS SimpleName@@dave @TO@ VariableDeclarationFragment@@dave=repository.findByUniqueId(this.dave.getUniqueId()) @AT@ 35592 @LENGTH@ 4
---------INS MethodInvocation@@repository.findByUniqueId(this.dave.getUniqueId()) @TO@ VariableDeclarationFragment@@dave=repository.findByUniqueId(this.dave.getUniqueId()) @AT@ 35599 @LENGTH@ 50
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByUniqueId(this.dave.getUniqueId()) @AT@ 35599 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByUniqueId:[this.dave.getUniqueId()] @TO@ MethodInvocation@@repository.findByUniqueId(this.dave.getUniqueId()) @AT@ 35610 @LENGTH@ 39
---------------INS MethodInvocation@@this.dave.getUniqueId() @TO@ SimpleName@@MethodName:findByUniqueId:[this.dave.getUniqueId()] @AT@ 35625 @LENGTH@ 23
------------------INS FieldAccess@@this.dave @TO@ MethodInvocation@@this.dave.getUniqueId() @AT@ 35625 @LENGTH@ 9
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.dave @AT@ 35625 @LENGTH@ 4
---------------------INS SimpleName@@dave @TO@ FieldAccess@@this.dave @AT@ 35630 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getUniqueId:[] @TO@ MethodInvocation@@this.dave.getUniqueId() @AT@ 35635 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(dave,is(equalTo(dave))) @TO@ MethodDeclaration@@public, void, MethodName:findByUUIDShouldReturnCorrectResult,  @AT@ 35654 @LENGTH@ 36
------INS MethodInvocation@@assertThat(dave,is(equalTo(dave))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(dave,is(equalTo(dave))) @AT@ 35654 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertThat:[dave, is(equalTo(dave))] @TO@ MethodInvocation@@assertThat(dave,is(equalTo(dave))) @AT@ 35654 @LENGTH@ 35
------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:assertThat:[dave, is(equalTo(dave))] @AT@ 35665 @LENGTH@ 4
------------INS MethodInvocation@@is(equalTo(dave)) @TO@ SimpleName@@MethodName:assertThat:[dave, is(equalTo(dave))] @AT@ 35671 @LENGTH@ 17
---------------INS SimpleName@@MethodName:is:[equalTo(dave)] @TO@ MethodInvocation@@is(equalTo(dave)) @AT@ 35671 @LENGTH@ 17
------------------INS MethodInvocation@@equalTo(dave) @TO@ SimpleName@@MethodName:is:[equalTo(dave)] @AT@ 35674 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:equalTo:[dave] @TO@ MethodInvocation@@equalTo(dave) @AT@ 35674 @LENGTH@ 13
------------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:equalTo:[dave] @AT@ 35682 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:equalTo:[dave] @TO@ MethodInvocation@@equalTo(dave) @AT@ 35674 @LENGTH@ 13
------------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:equalTo:[dave] @AT@ 35682 @LENGTH@ 4


UPD IfStatement@@if (container == null) {  container=new DirectReplyToMessageListenerContainer(connectionFactory);  container.setMessageListener(this);  container.setBeanName(this.beanName + "#" + this.containerInstance.getAndIncrement());  if (this.taskExecutor != null) {    container.setTaskExecutor(this.taskExecutor);  }  container.start();  this.directReplyToContainers.put(connectionFactory,container);  this.replyAddress=Address.AMQ_RABBITMQ_REPLY_TO;} @TO@ if (container == null) {  container=new DirectReplyToMessageListenerContainer(connectionFactory);  container.setMessageListener(this);  container.setBeanName(this.beanName + "#" + this.containerInstance.getAndIncrement());  if (this.taskExecutor != null) {    container.setTaskExecutor(this.taskExecutor);  }  if (this.afterReceivePostProcessors != null) {    container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));  }  container.start();  this.directReplyToContainers.put(connectionFactory,container);  this.replyAddress=Address.AMQ_RABBITMQ_REPLY_TO;} @AT@ 62234 @LENGTH@ 488
---UPD Block@@ThenBody:{  container=new DirectReplyToMessageListenerContainer(connectionFactory);  container.setMessageListener(this);  container.setBeanName(this.beanName + "#" + this.containerInstance.getAndIncrement());  if (this.taskExecutor != null) {    container.setTaskExecutor(this.taskExecutor);  }  container.start();  this.directReplyToContainers.put(connectionFactory,container);  this.replyAddress=Address.AMQ_RABBITMQ_REPLY_TO;} @TO@ ThenBody:{  container=new DirectReplyToMessageListenerContainer(connectionFactory);  container.setMessageListener(this);  container.setBeanName(this.beanName + "#" + this.containerInstance.getAndIncrement());  if (this.taskExecutor != null) {    container.setTaskExecutor(this.taskExecutor);  }  if (this.afterReceivePostProcessors != null) {    container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));  }  container.start();  this.directReplyToContainers.put(connectionFactory,container);  this.replyAddress=Address.AMQ_RABBITMQ_REPLY_TO;} @AT@ 62257 @LENGTH@ 465
------INS IfStatement@@if (this.afterReceivePostProcessors != null) {  container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));} @TO@ Block@@ThenBody:{  container=new DirectReplyToMessageListenerContainer(connectionFactory);  container.setMessageListener(this);  container.setBeanName(this.beanName + "#" + this.containerInstance.getAndIncrement());  if (this.taskExecutor != null) {    container.setTaskExecutor(this.taskExecutor);  }  container.start();  this.directReplyToContainers.put(connectionFactory,container);  this.replyAddress=Address.AMQ_RABBITMQ_REPLY_TO;} @AT@ 62801 @LENGTH@ 216
---------INS InfixExpression@@this.afterReceivePostProcessors != null @TO@ IfStatement@@if (this.afterReceivePostProcessors != null) {  container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));} @AT@ 62805 @LENGTH@ 39
------------INS FieldAccess@@this.afterReceivePostProcessors @TO@ InfixExpression@@this.afterReceivePostProcessors != null @AT@ 62805 @LENGTH@ 31
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62805 @LENGTH@ 4
---------------INS SimpleName@@afterReceivePostProcessors @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62810 @LENGTH@ 26
------------INS Operator@@!= @TO@ InfixExpression@@this.afterReceivePostProcessors != null @AT@ 62836 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.afterReceivePostProcessors != null @AT@ 62840 @LENGTH@ 4
---------INS Block@@ThenBody:{  container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));} @TO@ IfStatement@@if (this.afterReceivePostProcessors != null) {  container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));} @AT@ 62846 @LENGTH@ 171
------------INS ExpressionStatement@@MethodInvocation:container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])) @TO@ Block@@ThenBody:{  container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]));} @AT@ 62854 @LENGTH@ 156
---------------INS MethodInvocation@@container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])) @TO@ ExpressionStatement@@MethodInvocation:container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])) @AT@ 62854 @LENGTH@ 155
------------------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])) @AT@ 62854 @LENGTH@ 9
------------------INS SimpleName@@MethodName:setAfterReceivePostProcessors:[this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])] @TO@ MethodInvocation@@container.setAfterReceivePostProcessors(this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])) @AT@ 62864 @LENGTH@ 145
---------------------INS MethodInvocation@@this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]) @TO@ SimpleName@@MethodName:setAfterReceivePostProcessors:[this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()])] @AT@ 62894 @LENGTH@ 114
------------------------INS FieldAccess@@this.afterReceivePostProcessors @TO@ MethodInvocation@@this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]) @AT@ 62894 @LENGTH@ 31
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62894 @LENGTH@ 4
---------------------------INS SimpleName@@afterReceivePostProcessors @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62899 @LENGTH@ 26
------------------------INS SimpleName@@MethodName:toArray:[new MessagePostProcessor[this.afterReceivePostProcessors.size()]] @TO@ MethodInvocation@@this.afterReceivePostProcessors.toArray(new MessagePostProcessor[this.afterReceivePostProcessors.size()]) @AT@ 62935 @LENGTH@ 73
---------------------------INS ArrayCreation@@new MessagePostProcessor[this.afterReceivePostProcessors.size()] @TO@ SimpleName@@MethodName:toArray:[new MessagePostProcessor[this.afterReceivePostProcessors.size()]] @AT@ 62943 @LENGTH@ 64
------------------------------INS ArrayType@@MessagePostProcessor[] @TO@ ArrayCreation@@new MessagePostProcessor[this.afterReceivePostProcessors.size()] @AT@ 62947 @LENGTH@ 60
---------------------------------INS SimpleType@@MessagePostProcessor @TO@ ArrayType@@MessagePostProcessor[] @AT@ 62947 @LENGTH@ 20
------------------------------INS MethodInvocation@@this.afterReceivePostProcessors.size() @TO@ ArrayCreation@@new MessagePostProcessor[this.afterReceivePostProcessors.size()] @AT@ 62968 @LENGTH@ 38
---------------------------------INS FieldAccess@@this.afterReceivePostProcessors @TO@ MethodInvocation@@this.afterReceivePostProcessors.size() @AT@ 62968 @LENGTH@ 31
------------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62968 @LENGTH@ 4
------------------------------------INS SimpleName@@afterReceivePostProcessors @TO@ FieldAccess@@this.afterReceivePostProcessors @AT@ 62973 @LENGTH@ 26
---------------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@this.afterReceivePostProcessors.size() @AT@ 63000 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]ConfigurationListener, FlowExecutionListenerAdapter @TO@ [public, static]ConfigurationListener, [FlowExecutionListener] @AT@ 1855 @LENGTH@ 545
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 1905 @LENGTH@ 28


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 2611 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 2611 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2615 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 2615 @LENGTH@ 4


UPD Block@@ElseBody:if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @TO@ ElseBody:if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @AT@ 34388 @LENGTH@ 650
---UPD IfStatement@@if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @TO@ if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @AT@ 34388 @LENGTH@ 650
------UPD Block@@ElseBody:{  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @TO@ ElseBody:{  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @AT@ 34509 @LENGTH@ 529
---------UPD IfStatement@@if (dbObjItem instanceof List) {  items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));} else {  items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));} @TO@ if (dbObjItem instanceof List) {  items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));} else {  items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));} @AT@ 34810 @LENGTH@ 223
------------UPD Block@@ThenBody:{  items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));} @TO@ ThenBody:{  items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));} @AT@ 34841 @LENGTH@ 99
---------------UPD ExpressionStatement@@MethodInvocation:items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)) @TO@ MethodInvocation:items.add(readCollectionOrArray(componentType,(List)dbObjItem,path)) @AT@ 34848 @LENGTH@ 86
------------------UPD MethodInvocation@@items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)) @TO@ items.add(readCollectionOrArray(componentType,(List)dbObjItem,path)) @AT@ 34848 @LENGTH@ 85
---------------------UPD SimpleName@@MethodName:add:[readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)] @TO@ MethodName:add:[readCollectionOrArray(componentType,(List)dbObjItem,path)] @AT@ 34854 @LENGTH@ 79
------------------------UPD MethodInvocation@@readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path) @TO@ readCollectionOrArray(componentType,(List)dbObjItem,path) @AT@ 34858 @LENGTH@ 74
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---UPD IfStatement@@if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @TO@ if (dbObjItem instanceof BasicDBObject) {  items.add(read(componentType,(BasicDBObject)dbObjItem,path));} else {  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @AT@ 34388 @LENGTH@ 650
------UPD Block@@ElseBody:{  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @TO@ ElseBody:{  if (dbObjItem instanceof Collection) {    if (!rawComponentType.isArray() && !ClassUtils.isAssignable(Iterable.class,rawComponentType)) {      throw new MappingException(String.format(INCOMPATIBLE_TYPES,dbObjItem,dbObjItem.getClass(),rawComponentType,path));    }  }  if (dbObjItem instanceof List) {    items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));  } else {    items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));  }} @AT@ 34509 @LENGTH@ 529
---------UPD IfStatement@@if (dbObjItem instanceof List) {  items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));} else {  items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));} @TO@ if (dbObjItem instanceof List) {  items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));} else {  items.add(getPotentiallyConvertedSimpleRead(dbObjItem,rawComponentType));} @AT@ 34810 @LENGTH@ 223
------------UPD Block@@ThenBody:{  items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path));} @TO@ ThenBody:{  items.add(readCollectionOrArray(componentType,(List)dbObjItem,path));} @AT@ 34841 @LENGTH@ 99
---------------UPD ExpressionStatement@@MethodInvocation:items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)) @TO@ MethodInvocation:items.add(readCollectionOrArray(componentType,(List)dbObjItem,path)) @AT@ 34848 @LENGTH@ 86
------------------UPD MethodInvocation@@items.add(readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)) @TO@ items.add(readCollectionOrArray(componentType,(List)dbObjItem,path)) @AT@ 34848 @LENGTH@ 85
---------------------UPD SimpleName@@MethodName:add:[readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path)] @TO@ MethodName:add:[readCollectionOrArray(componentType,(List)dbObjItem,path)] @AT@ 34854 @LENGTH@ 79
------------------------UPD MethodInvocation@@readCollectionOrArray(ClassTypeInformation.OBJECT,(List)dbObjItem,path) @TO@ readCollectionOrArray(componentType,(List)dbObjItem,path) @AT@ 34858 @LENGTH@ 74
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13
---------------------------UPD SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @TO@ MethodName:readCollectionOrArray:[componentType, (List)dbObjItem, path] @AT@ 34858 @LENGTH@ 74
------------------------------DEL QualifiedName@@ClassTypeInformation.OBJECT @AT@ 34880 @LENGTH@ 27
---------------------------------DEL SimpleName@@ClassTypeInformation @AT@ 34880 @LENGTH@ 20
---------------------------------DEL SimpleName@@OBJECT @AT@ 34901 @LENGTH@ 6
------------------------------INS SimpleName@@componentType @TO@ SimpleName@@MethodName:readCollectionOrArray:[ClassTypeInformation.OBJECT, (List)dbObjItem, path] @AT@ 34880 @LENGTH@ 13


UPD VariableDeclarationStatement@@String version="1.9.0"; @TO@ String version="2.3.0"; @AT@ 1866 @LENGTH@ 25
---UPD VariableDeclarationFragment@@version="1.9.0" @TO@ version="2.3.0" @AT@ 1873 @LENGTH@ 17
------UPD StringLiteral@@"1.9.0" @TO@ "2.3.0" @AT@ 1883 @LENGTH@ 7


UPD TypeDeclaration@@[public]HibernateFlowExecutionListener, FlowExecutionListenerAdapter @TO@ [public]HibernateFlowExecutionListener, [FlowExecutionListener] @AT@ 3958 @LENGTH@ 6838
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 4010 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:factory.setPort(6379) @TO@ MethodInvocation:factory.setPort(SettingsUtils.getPort()) @AT@ 1530 @LENGTH@ 22
---UPD MethodInvocation@@factory.setPort(6379) @TO@ factory.setPort(SettingsUtils.getPort()) @AT@ 1530 @LENGTH@ 21
------UPD SimpleName@@MethodName:setPort:[6379] @TO@ MethodName:getPort:[] @AT@ 1538 @LENGTH@ 13
------INS SimpleName@@MethodName:setPort:[SettingsUtils.getPort()] @TO@ MethodInvocation@@factory.setPort(6379) @AT@ 1626 @LENGTH@ 32
---------INS MethodInvocation@@SettingsUtils.getPort() @TO@ SimpleName@@MethodName:setPort:[SettingsUtils.getPort()] @AT@ 1634 @LENGTH@ 23
------------MOV SimpleName@@MethodName:setPort:[6379] @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 1538 @LENGTH@ 13
---------------DEL NumberLiteral@@6379 @AT@ 1546 @LENGTH@ 4
------------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 1634 @LENGTH@ 13


INS IfStatement@@if (consumer instanceof RemoteFileConsumer) {  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @TO@ MethodDeclaration@@public, boolean, MethodName:rollback, Consumer consumer, Endpoint endpoint, int retryCounter, Exception e, Exception,  @AT@ 1343 @LENGTH@ 774
---INS InstanceofExpression@@consumer instanceof RemoteFileConsumer @TO@ IfStatement@@if (consumer instanceof RemoteFileConsumer) {  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @AT@ 1347 @LENGTH@ 38
------INS SimpleName@@consumer @TO@ InstanceofExpression@@consumer instanceof RemoteFileConsumer @AT@ 1347 @LENGTH@ 8
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@consumer instanceof RemoteFileConsumer @AT@ 1356 @LENGTH@ 10
------INS SimpleType@@RemoteFileConsumer @TO@ InstanceofExpression@@consumer instanceof RemoteFileConsumer @AT@ 1367 @LENGTH@ 18
---INS Block@@ThenBody:{  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @TO@ IfStatement@@if (consumer instanceof RemoteFileConsumer) {  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @AT@ 1387 @LENGTH@ 730
------MOV VariableDeclarationStatement@@RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer; @TO@ Block@@ThenBody:{  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @AT@ 1343 @LENGTH@ 61
------MOV IfStatement@@if (((RemoteFileConsumer<?>)consumer).isRunAllowed()) {  log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());  try {    rfc.disconnect();  } catch (  Throwable t) {    log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);  }} @TO@ Block@@ThenBody:{  RemoteFileConsumer<?> rfc=(RemoteFileConsumer<?>)consumer;  if (rfc.isRunAllowed()) {    log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());    try {      rfc.disconnect();    } catch (    Throwable t) {      log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);    }  }} @AT@ 1470 @LENGTH@ 566


UPD TypeDeclaration@@[@PeerCacheApplication(name="EnableCachingDefinedRegionsIntegrationTests",logLevel="warning"), @EnableCachingDefinedRegions, static]TestConfiguration,  @TO@ [@ClientCacheApplication(name="EnableCachingDefinedRegionsIntegrationTests",logLevel="error"), @EnableCachingDefinedRegions(clientRegionShortcut=ClientRegionShortcut.LOCAL), static]TestConfiguration,  @AT@ 3881 @LENGTH@ 561
---UPD NormalAnnotation@@@PeerCacheApplication(name="EnableCachingDefinedRegionsIntegrationTests",logLevel="warning") @TO@ @ClientCacheApplication(name="EnableCachingDefinedRegionsIntegrationTests",logLevel="error") @AT@ 3881 @LENGTH@ 97
---INS NormalAnnotation@@@EnableCachingDefinedRegions(clientRegionShortcut=ClientRegionShortcut.LOCAL) @TO@ TypeDeclaration@@[@PeerCacheApplication(name="EnableCachingDefinedRegionsIntegrationTests",logLevel="warning"), @EnableCachingDefinedRegions, static]TestConfiguration,  @AT@ 3976 @LENGTH@ 79
---DEL MarkerAnnotation@@@EnableCachingDefinedRegions @AT@ 3980 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DelegatingPasswordEncoderTests,  @AT@ 5891 @LENGTH@ 653
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 5891 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 5898 @LENGTH@ 4
---INS SimpleName@@MethodName:matchesWhenIdIsNullThenFalse @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 5903 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.containsKey(this.bcryptId)).thenReturn(true) @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 5938 @LENGTH@ 73
------INS MethodInvocation@@when(this.throwingDelegates.containsKey(this.bcryptId)).thenReturn(true) @TO@ ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.containsKey(this.bcryptId)).thenReturn(true) @AT@ 5938 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:when:[this.throwingDelegates.containsKey(this.bcryptId)] @TO@ MethodInvocation@@when(this.throwingDelegates.containsKey(this.bcryptId)).thenReturn(true) @AT@ 5938 @LENGTH@ 55
------------INS MethodInvocation@@this.throwingDelegates.containsKey(this.bcryptId) @TO@ MethodInvocation@@MethodName:when:[this.throwingDelegates.containsKey(this.bcryptId)] @AT@ 5943 @LENGTH@ 49
---------------INS FieldAccess@@this.throwingDelegates @TO@ MethodInvocation@@this.throwingDelegates.containsKey(this.bcryptId) @AT@ 5943 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.throwingDelegates @AT@ 5943 @LENGTH@ 4
------------------INS SimpleName@@throwingDelegates @TO@ FieldAccess@@this.throwingDelegates @AT@ 5948 @LENGTH@ 17
---------------INS SimpleName@@MethodName:containsKey:[this.bcryptId] @TO@ MethodInvocation@@this.throwingDelegates.containsKey(this.bcryptId) @AT@ 5966 @LENGTH@ 26
------------------INS FieldAccess@@this.bcryptId @TO@ SimpleName@@MethodName:containsKey:[this.bcryptId] @AT@ 5978 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.bcryptId @AT@ 5978 @LENGTH@ 4
---------------------INS SimpleName@@bcryptId @TO@ FieldAccess@@this.bcryptId @AT@ 5983 @LENGTH@ 8
---------INS SimpleName@@MethodName:thenReturn:[true] @TO@ MethodInvocation@@when(this.throwingDelegates.containsKey(this.bcryptId)).thenReturn(true) @AT@ 5994 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:thenReturn:[true] @AT@ 6005 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.get(this.bcryptId)).thenReturn(this.bcrypt) @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 6014 @LENGTH@ 72
------INS MethodInvocation@@when(this.throwingDelegates.get(this.bcryptId)).thenReturn(this.bcrypt) @TO@ ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.get(this.bcryptId)).thenReturn(this.bcrypt) @AT@ 6014 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:when:[this.throwingDelegates.get(this.bcryptId)] @TO@ MethodInvocation@@when(this.throwingDelegates.get(this.bcryptId)).thenReturn(this.bcrypt) @AT@ 6014 @LENGTH@ 47
------------INS MethodInvocation@@this.throwingDelegates.get(this.bcryptId) @TO@ MethodInvocation@@MethodName:when:[this.throwingDelegates.get(this.bcryptId)] @AT@ 6019 @LENGTH@ 41
---------------INS FieldAccess@@this.throwingDelegates @TO@ MethodInvocation@@this.throwingDelegates.get(this.bcryptId) @AT@ 6019 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.throwingDelegates @AT@ 6019 @LENGTH@ 4
------------------INS SimpleName@@throwingDelegates @TO@ FieldAccess@@this.throwingDelegates @AT@ 6024 @LENGTH@ 17
---------------INS SimpleName@@MethodName:get:[this.bcryptId] @TO@ MethodInvocation@@this.throwingDelegates.get(this.bcryptId) @AT@ 6042 @LENGTH@ 18
------------------INS FieldAccess@@this.bcryptId @TO@ SimpleName@@MethodName:get:[this.bcryptId] @AT@ 6046 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.bcryptId @AT@ 6046 @LENGTH@ 4
---------------------INS SimpleName@@bcryptId @TO@ FieldAccess@@this.bcryptId @AT@ 6051 @LENGTH@ 8
---------INS SimpleName@@MethodName:thenReturn:[this.bcrypt] @TO@ MethodInvocation@@when(this.throwingDelegates.get(this.bcryptId)).thenReturn(this.bcrypt) @AT@ 6062 @LENGTH@ 23
------------INS FieldAccess@@this.bcrypt @TO@ SimpleName@@MethodName:thenReturn:[this.bcrypt] @AT@ 6073 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.bcrypt @AT@ 6073 @LENGTH@ 4
---------------INS SimpleName@@bcrypt @TO@ FieldAccess@@this.bcrypt @AT@ 6078 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.get(null)).thenThrow(NullPointerException.class) @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 6089 @LENGTH@ 77
------INS MethodInvocation@@when(this.throwingDelegates.get(null)).thenThrow(NullPointerException.class) @TO@ ExpressionStatement@@MethodInvocation:when(this.throwingDelegates.get(null)).thenThrow(NullPointerException.class) @AT@ 6089 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:when:[this.throwingDelegates.get(null)] @TO@ MethodInvocation@@when(this.throwingDelegates.get(null)).thenThrow(NullPointerException.class) @AT@ 6089 @LENGTH@ 38
------------INS MethodInvocation@@this.throwingDelegates.get(null) @TO@ MethodInvocation@@MethodName:when:[this.throwingDelegates.get(null)] @AT@ 6094 @LENGTH@ 32
---------------INS FieldAccess@@this.throwingDelegates @TO@ MethodInvocation@@this.throwingDelegates.get(null) @AT@ 6094 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.throwingDelegates @AT@ 6094 @LENGTH@ 4
------------------INS SimpleName@@throwingDelegates @TO@ FieldAccess@@this.throwingDelegates @AT@ 6099 @LENGTH@ 17
---------------INS SimpleName@@MethodName:get:[null] @TO@ MethodInvocation@@this.throwingDelegates.get(null) @AT@ 6117 @LENGTH@ 9
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:get:[null] @AT@ 6121 @LENGTH@ 4
---------INS SimpleName@@MethodName:thenThrow:[NullPointerException.class] @TO@ MethodInvocation@@when(this.throwingDelegates.get(null)).thenThrow(NullPointerException.class) @AT@ 6128 @LENGTH@ 37
------------INS TypeLiteral@@NullPointerException.class @TO@ SimpleName@@MethodName:thenThrow:[NullPointerException.class] @AT@ 6138 @LENGTH@ 26
---INS VariableDeclarationStatement@@DelegatingPasswordEncoder passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates); @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 6170 @LENGTH@ 108
------INS SimpleType@@DelegatingPasswordEncoder @TO@ VariableDeclarationStatement@@DelegatingPasswordEncoder passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates); @AT@ 6170 @LENGTH@ 25
------INS VariableDeclarationFragment@@passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates) @TO@ VariableDeclarationStatement@@DelegatingPasswordEncoder passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates); @AT@ 6196 @LENGTH@ 81
---------INS SimpleName@@passwordEncoder @TO@ VariableDeclarationFragment@@passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates) @AT@ 6196 @LENGTH@ 15
---------INS ClassInstanceCreation@@DelegatingPasswordEncoder[this.bcryptId, throwingDelegates] @TO@ VariableDeclarationFragment@@passwordEncoder=new DelegatingPasswordEncoder(this.bcryptId,throwingDelegates) @AT@ 6214 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@DelegatingPasswordEncoder[this.bcryptId, throwingDelegates] @AT@ 6214 @LENGTH@ 3
------------INS SimpleType@@DelegatingPasswordEncoder @TO@ ClassInstanceCreation@@DelegatingPasswordEncoder[this.bcryptId, throwingDelegates] @AT@ 6218 @LENGTH@ 25
------------INS FieldAccess@@this.bcryptId @TO@ ClassInstanceCreation@@DelegatingPasswordEncoder[this.bcryptId, throwingDelegates] @AT@ 6244 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.bcryptId @AT@ 6244 @LENGTH@ 4
---------------INS SimpleName@@bcryptId @TO@ FieldAccess@@this.bcryptId @AT@ 6249 @LENGTH@ 8
------------INS SimpleName@@throwingDelegates @TO@ ClassInstanceCreation@@DelegatingPasswordEncoder[this.bcryptId, throwingDelegates] @AT@ 6259 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 6282 @LENGTH@ 208
------INS MethodInvocation@@assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @AT@ 6282 @LENGTH@ 207
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @AT@ 6282 @LENGTH@ 134
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 6385 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)] @TO@ MethodInvocation@@assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @AT@ 6282 @LENGTH@ 85
------------INS LambdaExpression@@() -> passwordEncoder.matches(this.rawPassword,this.rawPassword) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)] @AT@ 6301 @LENGTH@ 65
---------------INS MethodInvocation@@passwordEncoder.matches(this.rawPassword,this.rawPassword) @TO@ LambdaExpression@@() -> passwordEncoder.matches(this.rawPassword,this.rawPassword) @AT@ 6307 @LENGTH@ 59
------------------INS SimpleName@@Name:passwordEncoder @TO@ MethodInvocation@@passwordEncoder.matches(this.rawPassword,this.rawPassword) @AT@ 6307 @LENGTH@ 15
------------------INS SimpleName@@MethodName:matches:[this.rawPassword, this.rawPassword] @TO@ MethodInvocation@@passwordEncoder.matches(this.rawPassword,this.rawPassword) @AT@ 6323 @LENGTH@ 43
---------------------INS FieldAccess@@this.rawPassword @TO@ SimpleName@@MethodName:matches:[this.rawPassword, this.rawPassword] @AT@ 6331 @LENGTH@ 16
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.rawPassword @AT@ 6331 @LENGTH@ 4
------------------------INS SimpleName@@rawPassword @TO@ FieldAccess@@this.rawPassword @AT@ 6336 @LENGTH@ 11
---------------------INS FieldAccess@@this.rawPassword @TO@ SimpleName@@MethodName:matches:[this.rawPassword, this.rawPassword] @AT@ 6349 @LENGTH@ 16
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.rawPassword @AT@ 6349 @LENGTH@ 4
------------------------INS SimpleName@@rawPassword @TO@ FieldAccess@@this.rawPassword @AT@ 6354 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasMessage:["There is no PasswordEncoder mapped for the id \"null\""] @TO@ MethodInvocation@@assertThatThrownBy(() -> passwordEncoder.matches(this.rawPassword,this.rawPassword)).isInstanceOf(IllegalArgumentException.class).hasMessage("There is no PasswordEncoder mapped for the id \"null\"") @AT@ 6421 @LENGTH@ 68
------------INS StringLiteral@@"There is no PasswordEncoder mapped for the id \"null\"" @TO@ SimpleName@@MethodName:hasMessage:["There is no PasswordEncoder mapped for the id \"null\""] @AT@ 6432 @LENGTH@ 56
---INS ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.bcrypt,this.noop) @TO@ MethodDeclaration@@public, void, MethodName:matchesWhenIdIsNullThenFalse,  @AT@ 6494 @LENGTH@ 47
------INS MethodInvocation@@verifyZeroInteractions(this.bcrypt,this.noop) @TO@ ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.bcrypt,this.noop) @AT@ 6494 @LENGTH@ 46
---------INS SimpleName@@MethodName:verifyZeroInteractions:[this.bcrypt, this.noop] @TO@ MethodInvocation@@verifyZeroInteractions(this.bcrypt,this.noop) @AT@ 6494 @LENGTH@ 46
------------INS FieldAccess@@this.bcrypt @TO@ SimpleName@@MethodName:verifyZeroInteractions:[this.bcrypt, this.noop] @AT@ 6517 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.bcrypt @AT@ 6517 @LENGTH@ 4
---------------INS SimpleName@@bcrypt @TO@ FieldAccess@@this.bcrypt @AT@ 6522 @LENGTH@ 6
------------INS FieldAccess@@this.noop @TO@ SimpleName@@MethodName:verifyZeroInteractions:[this.bcrypt, this.noop] @AT@ 6530 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.noop @AT@ 6530 @LENGTH@ 4
---------------INS SimpleName@@noop @TO@ FieldAccess@@this.noop @AT@ 6535 @LENGTH@ 4


UPD MethodDeclaration@@public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException, SAXException,  @TO@ public, Object, MethodName:unmarshal, Exchange exchange, InputStream stream, IOException,  @AT@ 10104 @LENGTH@ 1161
---DEL SimpleType@@SAXException @AT@ 10187 @LENGTH@ 12


UPD CatchClause@@catch (HiveException e) {  throw new RuntimeException(e);} @TO@ catch (Throwable e) {  if (!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL)) {    throw new RuntimeException(e);  } else {    resourcePlan=null;  }} @AT@ 13658 @LENGTH@ 68
---UPD SingleVariableDeclaration@@HiveException e @TO@ Throwable e @AT@ 13665 @LENGTH@ 15
------UPD SimpleType@@HiveException @TO@ Throwable @AT@ 13665 @LENGTH@ 13
---INS IfStatement@@if (!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL)) {  throw new RuntimeException(e);} else {  resourcePlan=null;} @TO@ CatchClause@@catch (HiveException e) {  throw new RuntimeException(e);} @AT@ 13686 @LENGTH@ 224
------INS PrefixExpression@@!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @TO@ IfStatement@@if (!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL)) {  throw new RuntimeException(e);} else {  resourcePlan=null;} @AT@ 13690 @LENGTH@ 57
---------INS Operator@@! @TO@ PrefixExpression@@!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @AT@ 13690 @LENGTH@ 1
---------INS MethodInvocation@@HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @TO@ PrefixExpression@@!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @AT@ 13691 @LENGTH@ 56
------------INS SimpleName@@Name:HiveConf @TO@ MethodInvocation@@HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @AT@ 13691 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBoolVar:[hiveConf, ConfVars.HIVE_IN_TEST_SSL] @TO@ MethodInvocation@@HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL) @AT@ 13700 @LENGTH@ 47
---------------INS SimpleName@@hiveConf @TO@ SimpleName@@MethodName:getBoolVar:[hiveConf, ConfVars.HIVE_IN_TEST_SSL] @AT@ 13711 @LENGTH@ 8
---------------INS QualifiedName@@ConfVars.HIVE_IN_TEST_SSL @TO@ SimpleName@@MethodName:getBoolVar:[hiveConf, ConfVars.HIVE_IN_TEST_SSL] @AT@ 13721 @LENGTH@ 25
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.HIVE_IN_TEST_SSL @AT@ 13721 @LENGTH@ 8
------------------INS SimpleName@@HIVE_IN_TEST_SSL @TO@ QualifiedName@@ConfVars.HIVE_IN_TEST_SSL @AT@ 13730 @LENGTH@ 16
------INS Block@@ThenBody:{  throw new RuntimeException(e);} @TO@ IfStatement@@if (!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL)) {  throw new RuntimeException(e);} else {  resourcePlan=null;} @AT@ 13749 @LENGTH@ 48
---------MOV ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ Block@@ThenBody:{  throw new RuntimeException(e);} @AT@ 13690 @LENGTH@ 30
------INS Block@@ElseBody:{  resourcePlan=null;} @TO@ IfStatement@@if (!HiveConf.getBoolVar(hiveConf,ConfVars.HIVE_IN_TEST_SSL)) {  throw new RuntimeException(e);} else {  resourcePlan=null;} @AT@ 13803 @LENGTH@ 107
---------INS ExpressionStatement@@Assignment:resourcePlan=null @TO@ Block@@ElseBody:{  resourcePlan=null;} @AT@ 13813 @LENGTH@ 20
------------INS Assignment@@resourcePlan=null @TO@ ExpressionStatement@@Assignment:resourcePlan=null @AT@ 13813 @LENGTH@ 19
---------------INS SimpleName@@resourcePlan @TO@ Assignment@@resourcePlan=null @AT@ 13813 @LENGTH@ 12
---------------INS Operator@@= @TO@ Assignment@@resourcePlan=null @AT@ 13825 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ Assignment@@resourcePlan=null @AT@ 13828 @LENGTH@ 4


UPD IfStatement@@if (endpoint.getComponent().isAllowManualCommit()) {  KafkaManualCommit manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset);  exchange.getIn().setHeader(KafkaConstants.MANUAL_COMMIT,manual);} @TO@ if (endpoint.getConfiguration().isAllowManualCommit()) {  KafkaManualCommit manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset);  exchange.getIn().setHeader(KafkaConstants.MANUAL_COMMIT,manual);} @AT@ 13486 @LENGTH@ 583
---UPD MethodInvocation@@endpoint.getComponent().isAllowManualCommit() @TO@ endpoint.getConfiguration().isAllowManualCommit() @AT@ 13490 @LENGTH@ 45
------UPD MethodInvocation@@MethodName:getComponent:[] @TO@ MethodName:getConfiguration:[] @AT@ 13490 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:builder.addDependency(module.isOptional() ? OPTIONAL : REQUIRED,ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()),ModuleDefinition.class,new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
) @TO@ MethodInvocation:builder.addDependency(ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()),ModuleDefinition.class,new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
) @AT@ 4551 @LENGTH@ 719
---UPD MethodInvocation@@builder.addDependency(module.isOptional() ? OPTIONAL : REQUIRED,ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()),ModuleDefinition.class,new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
) @TO@ builder.addDependency(ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()),ModuleDefinition.class,new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
) @AT@ 4551 @LENGTH@ 718
------UPD SimpleName@@MethodName:addDependency:[module.isOptional() ? OPTIONAL : REQUIRED, ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()), ModuleDefinition.class, new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
] @TO@ MethodName:addDependency:[ServiceModuleLoader.moduleSpecServiceName(module.getIdentifier()), ModuleDefinition.class, new Injector<ModuleDefinition>(){
  ModuleDefinition definition;
  @Override public synchronized void inject(  final ModuleDefinition o) throws InjectionException {
    nextPhaseService.getModuleSpecs().add(o);
    this.definition=o;
  }
  @Override public synchronized void uninject(){
    nextPhaseService.getModuleSpecs().remove(definition);
    this.definition=null;
  }
}
] @AT@ 4559 @LENGTH@ 710
---------DEL ConditionalExpression@@module.isOptional() ? OPTIONAL : REQUIRED @AT@ 4573 @LENGTH@ 41
------------DEL MethodInvocation@@module.isOptional() @AT@ 4573 @LENGTH@ 19
---------------DEL SimpleName@@Name:module @AT@ 4573 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:isOptional:[] @AT@ 4580 @LENGTH@ 12
------------DEL SimpleName@@OPTIONAL @AT@ 4595 @LENGTH@ 8
------------DEL SimpleName@@REQUIRED @AT@ 4606 @LENGTH@ 8


UPD FieldDeclaration@@private, final, Map<String,Class<?>>, [aliasMap=new HashMap<String,Class<?>>()] @TO@ private, final, Map<String,Class<?>>, [aliasMap=new HashMap<>()] @AT@ 2674 @LENGTH@ 79
---UPD VariableDeclarationFragment@@aliasMap=new HashMap<String,Class<?>>() @TO@ aliasMap=new HashMap<>() @AT@ 2710 @LENGTH@ 42
------UPD ClassInstanceCreation@@HashMap<String,Class<?>>[] @TO@ HashMap<>[] @AT@ 2721 @LENGTH@ 31
---------UPD ParameterizedType@@HashMap<String,Class<?>> @TO@ HashMap<> @AT@ 2725 @LENGTH@ 25
------------DEL SimpleType@@String @AT@ 2733 @LENGTH@ 6
------------DEL ParameterizedType@@Class<?> @AT@ 2741 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 2741 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 2747 @LENGTH@ 1


UPD ReturnStatement@@QualifiedName:current.bytesReadFromStream @TO@ QualifiedName:current.bytesRead @AT@ 18724 @LENGTH@ 35
---UPD QualifiedName@@current.bytesReadFromStream @TO@ current.bytesRead @AT@ 18731 @LENGTH@ 27
------UPD SimpleName@@bytesReadFromStream @TO@ bytesRead @AT@ 18739 @LENGTH@ 19


DEL EnhancedForStatement@@for (String cmd : aeshRegistry.getTabCompletionCommands()) {  CommandHandler handler=aeshRegistry.getCommandHandler(cmd);  if (handler.isAvailable(ctx)) {    lst.add(cmd);  }} @AT@ 12922 @LENGTH@ 232
---DEL SingleVariableDeclaration@@String cmd @AT@ 12927 @LENGTH@ 10
------DEL SimpleType@@String @AT@ 12927 @LENGTH@ 6
------DEL SimpleName@@cmd @AT@ 12934 @LENGTH@ 3
---DEL MethodInvocation@@aeshRegistry.getTabCompletionCommands() @AT@ 12940 @LENGTH@ 39
------DEL SimpleName@@Name:aeshRegistry @AT@ 12940 @LENGTH@ 12
------DEL SimpleName@@MethodName:getTabCompletionCommands:[] @AT@ 12953 @LENGTH@ 26
---DEL VariableDeclarationStatement@@CommandHandler handler=aeshRegistry.getCommandHandler(cmd); @AT@ 12995 @LENGTH@ 61
------DEL SimpleType@@CommandHandler @AT@ 12995 @LENGTH@ 14
------DEL VariableDeclarationFragment@@handler=aeshRegistry.getCommandHandler(cmd) @AT@ 13010 @LENGTH@ 45
---------DEL SimpleName@@handler @AT@ 13010 @LENGTH@ 7
---------DEL MethodInvocation@@aeshRegistry.getCommandHandler(cmd) @AT@ 13020 @LENGTH@ 35
------------DEL SimpleName@@Name:aeshRegistry @AT@ 13020 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getCommandHandler:[cmd] @AT@ 13033 @LENGTH@ 22
---------------DEL SimpleName@@cmd @AT@ 13051 @LENGTH@ 3
---DEL IfStatement@@if (handler.isAvailable(ctx)) {  lst.add(cmd);} @AT@ 13069 @LENGTH@ 75
------DEL MethodInvocation@@handler.isAvailable(ctx) @AT@ 13073 @LENGTH@ 24
---------DEL SimpleName@@Name:handler @AT@ 13073 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isAvailable:[ctx] @AT@ 13081 @LENGTH@ 16
------------DEL SimpleName@@ctx @AT@ 13093 @LENGTH@ 3
------DEL Block@@ThenBody:{  lst.add(cmd);} @AT@ 13099 @LENGTH@ 45
---------DEL ExpressionStatement@@MethodInvocation:lst.add(cmd) @AT@ 13117 @LENGTH@ 13
------------DEL MethodInvocation@@lst.add(cmd) @AT@ 13117 @LENGTH@ 12
---------------DEL SimpleName@@Name:lst @AT@ 13117 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:add:[cmd] @AT@ 13121 @LENGTH@ 8
------------------DEL SimpleName@@cmd @AT@ 13125 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:exchange.getIn().getBody(String.class).equals(val2) @TO@ InfixExpression:exchange.getIn().getBody(String.class) == null @AT@ 3549 @LENGTH@ 59
---DEL MethodInvocation@@exchange.getIn().getBody(String.class).equals(val2) @AT@ 3556 @LENGTH@ 51
------DEL MethodInvocation@@MethodName:getBody:[String.class] @AT@ 3556 @LENGTH@ 38
---------DEL TypeLiteral@@String.class @AT@ 3581 @LENGTH@ 12
------DEL SimpleName@@MethodName:equals:[val2] @AT@ 3595 @LENGTH@ 12
---------DEL SimpleName@@val2 @AT@ 3602 @LENGTH@ 4
---INS InfixExpression@@exchange.getIn().getBody(String.class) == null @TO@ ReturnStatement@@MethodInvocation:exchange.getIn().getBody(String.class).equals(val2) @AT@ 3556 @LENGTH@ 46
------INS MethodInvocation@@exchange.getIn().getBody(String.class) @TO@ InfixExpression@@exchange.getIn().getBody(String.class) == null @AT@ 3556 @LENGTH@ 38
---------MOV MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody(String.class) @AT@ 3556 @LENGTH@ 16
---------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody(String.class) @AT@ 3556 @LENGTH@ 8
---------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getIn().getBody(String.class) @AT@ 3573 @LENGTH@ 21
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 3581 @LENGTH@ 12
------INS Operator@@== @TO@ InfixExpression@@exchange.getIn().getBody(String.class) == null @AT@ 3594 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getIn().getBody(String.class) == null @AT@ 3598 @LENGTH@ 4


INS VariableDeclarationStatement@@boolean skip=selectFirst || selectLast; @TO@ MethodDeclaration@@private, static, Iterator<ProcessorDefinition<?>>, MethodName:createMatchByIterator, final RouteDefinition route, final MatchBy matchBy, final boolean selectFirst, final boolean selectLast, final int selectFrom, final int selectTo, int maxDeep,  @AT@ 21005 @LENGTH@ 41
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean skip=selectFirst || selectLast; @AT@ 21005 @LENGTH@ 7
---INS VariableDeclarationFragment@@skip=selectFirst || selectLast @TO@ VariableDeclarationStatement@@boolean skip=selectFirst || selectLast; @AT@ 21013 @LENGTH@ 32
------INS SimpleName@@skip @TO@ VariableDeclarationFragment@@skip=selectFirst || selectLast @AT@ 21013 @LENGTH@ 4
------INS InfixExpression@@selectFirst || selectLast @TO@ VariableDeclarationFragment@@skip=selectFirst || selectLast @AT@ 21020 @LENGTH@ 25
---------INS SimpleName@@selectFirst @TO@ InfixExpression@@selectFirst || selectLast @AT@ 21020 @LENGTH@ 11
---------INS Operator@@|| @TO@ InfixExpression@@selectFirst || selectLast @AT@ 21031 @LENGTH@ 2
---------INS SimpleName@@selectLast @TO@ InfixExpression@@selectFirst || selectLast @AT@ 21035 @LENGTH@ 10


UPD IfStatement@@if (map.containsKey("error")) {  logger.debug("check_token returned error: " + map.get("error"));  throw new InvalidTokenException(accessToken);} @TO@ if (map.containsKey("error")) {  if (logger.isDebugEnabled()) {    logger.debug("check_token returned error: " + map.get("error"));  }  throw new InvalidTokenException(accessToken);} @AT@ 3874 @LENGTH@ 152
---UPD Block@@ThenBody:{  logger.debug("check_token returned error: " + map.get("error"));  throw new InvalidTokenException(accessToken);} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("check_token returned error: " + map.get("error"));  }  throw new InvalidTokenException(accessToken);} @AT@ 3904 @LENGTH@ 122
------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned error: " + map.get("error"));} @TO@ Block@@ThenBody:{  logger.debug("check_token returned error: " + map.get("error"));  throw new InvalidTokenException(accessToken);} @AT@ 3909 @LENGTH@ 104
---------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned error: " + map.get("error"));} @AT@ 3913 @LENGTH@ 23
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 3913 @LENGTH@ 6
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 3920 @LENGTH@ 16
---------INS Block@@ThenBody:{  logger.debug("check_token returned error: " + map.get("error"));} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("check_token returned error: " + map.get("error"));} @AT@ 3938 @LENGTH@ 75
------------MOV ExpressionStatement@@MethodInvocation:logger.debug("check_token returned error: " + map.get("error")) @TO@ Block@@ThenBody:{  logger.debug("check_token returned error: " + map.get("error"));} @AT@ 3909 @LENGTH@ 64


INS MethodDeclaration@@void, MethodName:preAuthorizeBean, @P("result") boolean result,  @TO@ TypeDeclaration@@[public]MethodSecurityService,  @AT@ 1616 @LENGTH@ 46
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:preAuthorizeBean, @P("result") boolean result,  @AT@ 1611 @LENGTH@ 4
---INS SimpleName@@MethodName:preAuthorizeBean @TO@ MethodDeclaration@@void, MethodName:preAuthorizeBean, @P("result") boolean result,  @AT@ 1616 @LENGTH@ 16
---INS SingleVariableDeclaration@@@P("result") boolean result @TO@ MethodDeclaration@@void, MethodName:preAuthorizeBean, @P("result") boolean result,  @AT@ 1633 @LENGTH@ 27
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@@P("result") boolean result @AT@ 1646 @LENGTH@ 7
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@@P("result") boolean result @AT@ 1654 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:shouldRenderTimestampCorrectly,  @TO@ TypeDeclaration@@[public]JsonSchemaPropertyUnitTests,  @AT@ 2084 @LENGTH@ 156
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderTimestampCorrectly,  @AT@ 2084 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderTimestampCorrectly,  @AT@ 2091 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldRenderTimestampCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderTimestampCorrectly,  @AT@ 2096 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThat(JsonSchemaProperty.timestamp("foo").toDocument()).containsEntry("foo.bsonType","timestamp") @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderTimestampCorrectly,  @AT@ 2133 @LENGTH@ 104
------INS MethodInvocation@@assertThat(JsonSchemaProperty.timestamp("foo").toDocument()).containsEntry("foo.bsonType","timestamp") @TO@ ExpressionStatement@@MethodInvocation:assertThat(JsonSchemaProperty.timestamp("foo").toDocument()).containsEntry("foo.bsonType","timestamp") @AT@ 2133 @LENGTH@ 103
---------INS MethodInvocation@@MethodName:assertThat:[JsonSchemaProperty.timestamp("foo").toDocument()] @TO@ MethodInvocation@@assertThat(JsonSchemaProperty.timestamp("foo").toDocument()).containsEntry("foo.bsonType","timestamp") @AT@ 2133 @LENGTH@ 60
------------INS MethodInvocation@@JsonSchemaProperty.timestamp("foo").toDocument() @TO@ MethodInvocation@@MethodName:assertThat:[JsonSchemaProperty.timestamp("foo").toDocument()] @AT@ 2144 @LENGTH@ 48
---------------INS MethodInvocation@@MethodName:timestamp:["foo"] @TO@ MethodInvocation@@JsonSchemaProperty.timestamp("foo").toDocument() @AT@ 2144 @LENGTH@ 35
------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:timestamp:["foo"] @AT@ 2173 @LENGTH@ 5
---------------INS SimpleName@@Name:JsonSchemaProperty @TO@ MethodInvocation@@JsonSchemaProperty.timestamp("foo").toDocument() @AT@ 2144 @LENGTH@ 18
---------------INS SimpleName@@MethodName:toDocument:[] @TO@ MethodInvocation@@JsonSchemaProperty.timestamp("foo").toDocument() @AT@ 2180 @LENGTH@ 12
---------INS SimpleName@@MethodName:containsEntry:["foo.bsonType", "timestamp"] @TO@ MethodInvocation@@assertThat(JsonSchemaProperty.timestamp("foo").toDocument()).containsEntry("foo.bsonType","timestamp") @AT@ 2194 @LENGTH@ 42
------------INS StringLiteral@@"foo.bsonType" @TO@ SimpleName@@MethodName:containsEntry:["foo.bsonType", "timestamp"] @AT@ 2208 @LENGTH@ 14
------------INS StringLiteral@@"timestamp" @TO@ SimpleName@@MethodName:containsEntry:["foo.bsonType", "timestamp"] @AT@ 2224 @LENGTH@ 11


DEL ExpressionStatement@@MethodInvocation:mock.message(0).body().matches().simple("${body[test1].name} == 'Camel'") @AT@ 3929 @LENGTH@ 74
---DEL MethodInvocation@@mock.message(0).body().matches().simple("${body[test1].name} == 'Camel'") @AT@ 3929 @LENGTH@ 73
------DEL MethodInvocation@@MethodName:matches:[] @AT@ 3929 @LENGTH@ 32
------DEL MethodInvocation@@MethodName:body:[] @AT@ 3929 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:message:[0] @AT@ 3929 @LENGTH@ 15
---------DEL NumberLiteral@@0 @AT@ 3942 @LENGTH@ 1
------DEL SimpleName@@Name:mock @AT@ 3929 @LENGTH@ 4
------DEL SimpleName@@MethodName:simple:["${body[test1].name} == 'Camel'"] @AT@ 3962 @LENGTH@ 40
---------DEL StringLiteral@@"${body[test1].name} == 'Camel'" @AT@ 3969 @LENGTH@ 32


UPD TypeDeclaration@@[public]JpaFlowExecutionListener, FlowExecutionListenerAdapter @TO@ [public]JpaFlowExecutionListener, [FlowExecutionListener] @AT@ 4134 @LENGTH@ 4030
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 4180 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:preAuthorizeNotAnonymous,  @TO@ TypeDeclaration@@[public]MethodSecurityServiceImpl, [MethodSecurityService] @AT@ 1359 @LENGTH@ 43
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeNotAnonymous,  @AT@ 1359 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeNotAnonymous,  @AT@ 1366 @LENGTH@ 4
---INS SimpleName@@MethodName:preAuthorizeNotAnonymous @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeNotAnonymous,  @AT@ 1371 @LENGTH@ 24


INS MethodDeclaration@@public, boolean, MethodName:isTransient,  @TO@ TypeDeclaration@@[public]GemfirePersistentProperty, AnnotationBasedPersistentProperty<GemfirePersistentProperty> @AT@ 3446 @LENGTH@ 166
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isTransient,  @AT@ 3446 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isTransient,  @AT@ 3453 @LENGTH@ 7
---INS SimpleName@@MethodName:isTransient @TO@ MethodDeclaration@@public, boolean, MethodName:isTransient,  @AT@ 3461 @LENGTH@ 11
---INS ReturnStatement@@InfixExpression:super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @TO@ MethodDeclaration@@public, boolean, MethodName:isTransient,  @AT@ 3479 @LENGTH@ 130
------INS InfixExpression@@super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @TO@ ReturnStatement@@InfixExpression:super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3486 @LENGTH@ 122
---------INS SuperMethodInvocation@@super.isTransient() @TO@ InfixExpression@@super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3486 @LENGTH@ 19
------------INS SimpleName@@MethodName:isTransient:[] @TO@ SuperMethodInvocation@@super.isTransient() @AT@ 3492 @LENGTH@ 11
---------INS Operator@@|| @TO@ InfixExpression@@super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3505 @LENGTH@ 2
---------INS MethodInvocation@@getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @TO@ InfixExpression@@super.isTransient() || getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3512 @LENGTH@ 96
------------INS MethodInvocation@@MethodName:filter:[field -> Modifier.isTransient(field.getModifiers())] @TO@ MethodInvocation@@getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3512 @LENGTH@ 84
---------------INS LambdaExpression@@field -> Modifier.isTransient(field.getModifiers()) @TO@ MethodInvocation@@MethodName:filter:[field -> Modifier.isTransient(field.getModifiers())] @AT@ 3544 @LENGTH@ 51
------------------INS VariableDeclarationFragment@@field @TO@ LambdaExpression@@field -> Modifier.isTransient(field.getModifiers()) @AT@ 3544 @LENGTH@ 5
---------------------INS SimpleName@@field @TO@ VariableDeclarationFragment@@field @AT@ 3544 @LENGTH@ 5
------------------INS MethodInvocation@@Modifier.isTransient(field.getModifiers()) @TO@ LambdaExpression@@field -> Modifier.isTransient(field.getModifiers()) @AT@ 3553 @LENGTH@ 42
---------------------INS SimpleName@@Name:Modifier @TO@ MethodInvocation@@Modifier.isTransient(field.getModifiers()) @AT@ 3553 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:isTransient:[field.getModifiers()] @TO@ MethodInvocation@@Modifier.isTransient(field.getModifiers()) @AT@ 3562 @LENGTH@ 33
------------------------INS MethodInvocation@@field.getModifiers() @TO@ SimpleName@@MethodName:isTransient:[field.getModifiers()] @AT@ 3574 @LENGTH@ 20
---------------------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getModifiers() @AT@ 3574 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getModifiers:[] @TO@ MethodInvocation@@field.getModifiers() @AT@ 3580 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:getField:[] @TO@ MethodInvocation@@getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3512 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getProperty:[] @TO@ MethodInvocation@@getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3512 @LENGTH@ 13
------------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@getProperty().getField().filter(field -> Modifier.isTransient(field.getModifiers())).isPresent() @AT@ 3597 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:timestampShouldRenderCorrectly,  @TO@ TypeDeclaration@@[public]JsonSchemaObjectUnitTests,  @AT@ 11118 @LENGTH@ 213
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:timestampShouldRenderCorrectly,  @AT@ 11118 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:timestampShouldRenderCorrectly,  @AT@ 11125 @LENGTH@ 4
---INS SimpleName@@MethodName:timestampShouldRenderCorrectly @TO@ MethodDeclaration@@public, void, MethodName:timestampShouldRenderCorrectly,  @AT@ 11130 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThat(timestamp().generatedDescription().toDocument()).isEqualTo(new Document("bsonType","timestamp").append("description","Must be a timestamp.")) @TO@ MethodDeclaration@@public, void, MethodName:timestampShouldRenderCorrectly,  @AT@ 11168 @LENGTH@ 160
------INS MethodInvocation@@assertThat(timestamp().generatedDescription().toDocument()).isEqualTo(new Document("bsonType","timestamp").append("description","Must be a timestamp.")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(timestamp().generatedDescription().toDocument()).isEqualTo(new Document("bsonType","timestamp").append("description","Must be a timestamp.")) @AT@ 11168 @LENGTH@ 159
---------INS MethodInvocation@@MethodName:assertThat:[timestamp().generatedDescription().toDocument()] @TO@ MethodInvocation@@assertThat(timestamp().generatedDescription().toDocument()).isEqualTo(new Document("bsonType","timestamp").append("description","Must be a timestamp.")) @AT@ 11168 @LENGTH@ 59
------------INS MethodInvocation@@timestamp().generatedDescription().toDocument() @TO@ MethodInvocation@@MethodName:assertThat:[timestamp().generatedDescription().toDocument()] @AT@ 11179 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:generatedDescription:[] @TO@ MethodInvocation@@timestamp().generatedDescription().toDocument() @AT@ 11179 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:timestamp:[] @TO@ MethodInvocation@@timestamp().generatedDescription().toDocument() @AT@ 11179 @LENGTH@ 11
---------------INS SimpleName@@MethodName:toDocument:[] @TO@ MethodInvocation@@timestamp().generatedDescription().toDocument() @AT@ 11214 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEqualTo:[new Document("bsonType","timestamp").append("description","Must be a timestamp.")] @TO@ MethodInvocation@@assertThat(timestamp().generatedDescription().toDocument()).isEqualTo(new Document("bsonType","timestamp").append("description","Must be a timestamp.")) @AT@ 11233 @LENGTH@ 94
------------INS MethodInvocation@@new Document("bsonType","timestamp").append("description","Must be a timestamp.") @TO@ SimpleName@@MethodName:isEqualTo:[new Document("bsonType","timestamp").append("description","Must be a timestamp.")] @AT@ 11243 @LENGTH@ 83
---------------INS ClassInstanceCreation@@Document["bsonType", "timestamp"] @TO@ MethodInvocation@@new Document("bsonType","timestamp").append("description","Must be a timestamp.") @AT@ 11243 @LENGTH@ 37
------------------INS New@@new @TO@ ClassInstanceCreation@@Document["bsonType", "timestamp"] @AT@ 11243 @LENGTH@ 3
------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["bsonType", "timestamp"] @AT@ 11247 @LENGTH@ 8
------------------INS StringLiteral@@"bsonType" @TO@ ClassInstanceCreation@@Document["bsonType", "timestamp"] @AT@ 11256 @LENGTH@ 10
------------------INS StringLiteral@@"timestamp" @TO@ ClassInstanceCreation@@Document["bsonType", "timestamp"] @AT@ 11268 @LENGTH@ 11
---------------INS SimpleName@@MethodName:append:["description", "Must be a timestamp."] @TO@ MethodInvocation@@new Document("bsonType","timestamp").append("description","Must be a timestamp.") @AT@ 11281 @LENGTH@ 45
------------------INS StringLiteral@@"description" @TO@ SimpleName@@MethodName:append:["description", "Must be a timestamp."] @AT@ 11288 @LENGTH@ 13
------------------INS StringLiteral@@"Must be a timestamp." @TO@ SimpleName@@MethodName:append:["description", "Must be a timestamp."] @AT@ 11303 @LENGTH@ 22


UPD ReturnStatement@@ParenthesizedExpression:((OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (parameter.hasParameterAnnotation(OAuth2Client.class))) @TO@ ParenthesizedExpression:((OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null)) @AT@ 4111 @LENGTH@ 261
---UPD ParenthesizedExpression@@((OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (parameter.hasParameterAnnotation(OAuth2Client.class))) @TO@ ((OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null)) @AT@ 4118 @LENGTH@ 253
------UPD InfixExpression@@(OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (parameter.hasParameterAnnotation(OAuth2Client.class)) @TO@ (OAuth2AccessToken.class.isAssignableFrom(parameterType) || OAuth2AuthorizedClient.class.isAssignableFrom(parameterType) || ClientRegistration.class.isAssignableFrom(parameterType)) && (AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null) @AT@ 4119 @LENGTH@ 251
---------UPD ParenthesizedExpression@@(parameter.hasParameterAnnotation(OAuth2Client.class)) @TO@ (AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null) @AT@ 4316 @LENGTH@ 54
------------DEL MethodInvocation@@parameter.hasParameterAnnotation(OAuth2Client.class) @AT@ 4317 @LENGTH@ 52
------------INS InfixExpression@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null @TO@ ParenthesizedExpression@@(parameter.hasParameterAnnotation(OAuth2Client.class)) @AT@ 4383 @LENGTH@ 96
---------------INS MethodInvocation@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) @TO@ InfixExpression@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null @AT@ 4383 @LENGTH@ 88
------------------MOV SimpleName@@Name:parameter @TO@ MethodInvocation@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) @AT@ 4317 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:hasParameterAnnotation:[OAuth2Client.class] @TO@ MethodInvocation@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) @AT@ 4327 @LENGTH@ 42
---------------------INS MethodInvocation@@parameter.getParameter() @TO@ SimpleName@@MethodName:hasParameterAnnotation:[OAuth2Client.class] @AT@ 4426 @LENGTH@ 24
------------------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getParameter() @AT@ 4426 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getParameter:[] @TO@ MethodInvocation@@parameter.getParameter() @AT@ 4436 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null @AT@ 4471 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) != null @AT@ 4475 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("AmazonKinesisClient or accessKey and secretKey must be specified") @TO@ ClassInstanceCreation:new IllegalArgumentException("AmazonKinesisFirehoseClient or accessKey and secretKey must be specified") @AT@ 2409 @LENGTH@ 103
---UPD ClassInstanceCreation@@IllegalArgumentException["AmazonKinesisClient or accessKey and secretKey must be specified"] @TO@ IllegalArgumentException["AmazonKinesisFirehoseClient or accessKey and secretKey must be specified"] @AT@ 2415 @LENGTH@ 96
------UPD StringLiteral@@"AmazonKinesisClient or accessKey and secretKey must be specified" @TO@ "AmazonKinesisFirehoseClient or accessKey and secretKey must be specified" @AT@ 2444 @LENGTH@ 66


UPD MethodDeclaration@@public, KeyboardBuilder, MethodName:addOneRowByEachButton, List<InlineKeyboardButton> InlineKeyboardButtons,  @TO@ public, KeyboardBuilder, MethodName:addOneRowByEachButton, List<InlineKeyboardButton> inlineKeyboardButtons,  @AT@ 4036 @LENGTH@ 382
---UPD SingleVariableDeclaration@@List<InlineKeyboardButton> InlineKeyboardButtons @TO@ List<InlineKeyboardButton> inlineKeyboardButtons @AT@ 4081 @LENGTH@ 48
------UPD SimpleName@@InlineKeyboardButtons @TO@ inlineKeyboardButtons @AT@ 4108 @LENGTH@ 21
---UPD ForStatement@@for (Iterator<InlineKeyboardButton> iterator=InlineKeyboardButtons.iterator(); iterator.hasNext(); ) {  keyboard.add(Arrays.asList(iterator.next()));} @TO@ for (Iterator<InlineKeyboardButton> iterator=inlineKeyboardButtons.iterator(); iterator.hasNext(); ) {  keyboard.add(Arrays.asList(iterator.next()));} @AT@ 4166 @LENGTH@ 208
------UPD VariableDeclarationExpression@@Iterator<InlineKeyboardButton> iterator=InlineKeyboardButtons.iterator() @TO@ Iterator<InlineKeyboardButton> iterator=inlineKeyboardButtons.iterator() @AT@ 4171 @LENGTH@ 74
---------UPD VariableDeclarationFragment@@iterator=InlineKeyboardButtons.iterator() @TO@ iterator=inlineKeyboardButtons.iterator() @AT@ 4202 @LENGTH@ 43
------------UPD MethodInvocation@@InlineKeyboardButtons.iterator() @TO@ inlineKeyboardButtons.iterator() @AT@ 4213 @LENGTH@ 32
---------------UPD SimpleName@@Name:InlineKeyboardButtons @TO@ Name:inlineKeyboardButtons @AT@ 4213 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:clients.inMemory().withClient("tonr").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").and().withClient("tonr-with-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris(tonrRedirectUri).and().withClient("my-client-with-registered-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","client_credentials").authorities("ROLE_CLIENT").scopes("read","trust").redirectUris("http://anywhere?key=value").and().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).and().withClient("my-trusted-client-with-secret").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").secret("somesecret").and().withClient("my-less-trusted-client").authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").and().withClient("my-less-trusted-autoapprove-client").authorizedGrantTypes("implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").autoApprove(true) @TO@ MethodInvocation:clients.inMemory().withClient("tonr").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris("http://localhost:8080/tonr2/sparklr/photos").and().withClient("tonr-with-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris(tonrRedirectUri).and().withClient("my-client-with-registered-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","client_credentials").authorities("ROLE_CLIENT").scopes("read","trust").redirectUris("http://anywhere?key=value").and().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).and().withClient("my-trusted-client-with-secret").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").secret("somesecret").and().withClient("my-less-trusted-client").authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").and().withClient("my-less-trusted-autoapprove-client").authorizedGrantTypes("implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").autoApprove(true) @AT@ 5574 @LENGTH@ 2018
---UPD MethodInvocation@@clients.inMemory().withClient("tonr").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").and().withClient("tonr-with-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris(tonrRedirectUri).and().withClient("my-client-with-registered-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","client_credentials").authorities("ROLE_CLIENT").scopes("read","trust").redirectUris("http://anywhere?key=value").and().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).and().withClient("my-trusted-client-with-secret").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").secret("somesecret").and().withClient("my-less-trusted-client").authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").and().withClient("my-less-trusted-autoapprove-client").authorizedGrantTypes("implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").autoApprove(true) @TO@ clients.inMemory().withClient("tonr").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris("http://localhost:8080/tonr2/sparklr/photos").and().withClient("tonr-with-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris(tonrRedirectUri).and().withClient("my-client-with-registered-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","client_credentials").authorities("ROLE_CLIENT").scopes("read","trust").redirectUris("http://anywhere?key=value").and().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).and().withClient("my-trusted-client-with-secret").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").secret("somesecret").and().withClient("my-less-trusted-client").authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").and().withClient("my-less-trusted-autoapprove-client").authorizedGrantTypes("implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").autoApprove(true) @AT@ 5574 @LENGTH@ 2017
------INS MethodInvocation@@MethodName:redirectUris:["http://localhost:8080/tonr2/sparklr/photos"] @TO@ MethodInvocation@@clients.inMemory().withClient("tonr").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").and().withClient("tonr-with-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write").secret("secret").redirectUris(tonrRedirectUri).and().withClient("my-client-with-registered-redirect").resourceIds(SPARKLR_RESOURCE_ID).authorizedGrantTypes("authorization_code","client_credentials").authorities("ROLE_CLIENT").scopes("read","trust").redirectUris("http://anywhere?key=value").and().withClient("my-trusted-client").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").accessTokenValiditySeconds(60).and().withClient("my-trusted-client-with-secret").authorizedGrantTypes("password","authorization_code","refresh_token","implicit").authorities("ROLE_CLIENT","ROLE_TRUSTED_CLIENT").scopes("read","write","trust").secret("somesecret").and().withClient("my-less-trusted-client").authorizedGrantTypes("authorization_code","implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").and().withClient("my-less-trusted-autoapprove-client").authorizedGrantTypes("implicit").authorities("ROLE_CLIENT").scopes("read","write","trust").autoApprove(true) @AT@ 5574 @LENGTH@ 299
---------INS StringLiteral@@"http://localhost:8080/tonr2/sparklr/photos" @TO@ MethodInvocation@@MethodName:redirectUris:["http://localhost:8080/tonr2/sparklr/photos"] @AT@ 5828 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:MetaStoreUtils.updateTableStatsFast(db,newt,wh,false,true,environmentContext,false) @TO@ MethodInvocation:MetaStoreUtils.updateTableStatsSlow(db,newt,wh,false,true,environmentContext) @AT@ 14513 @LENGTH@ 90
---UPD MethodInvocation@@MetaStoreUtils.updateTableStatsFast(db,newt,wh,false,true,environmentContext,false) @TO@ MetaStoreUtils.updateTableStatsSlow(db,newt,wh,false,true,environmentContext) @AT@ 14513 @LENGTH@ 89
------UPD SimpleName@@MethodName:updateTableStatsFast:[db, newt, wh, false, true, environmentContext, false] @TO@ MethodName:updateTableStatsSlow:[db, newt, wh, false, true, environmentContext] @AT@ 14528 @LENGTH@ 74
---------DEL BooleanLiteral@@false @AT@ 14596 @LENGTH@ 5


UPD IfStatement@@if (fileLocalPath.isFile()) {  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");  }  if (entry == null) {    if (dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {      dropboxPath=dropboxPath + fileLocalPath.getName();    }  }  LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);  DropboxFileUploadResult result;  try {    FileMetadata uploadedFile=putSingleFile(fileLocalPath,dropboxPath,mode);    if (uploadedFile == null) {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);    } else {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.OK);    }  } catch (  Exception ex) {    result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);  }  return result;} else if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @TO@ if (fileLocalPath.isFile()) {  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");  }  if (entry == null) {    if (dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {      dropboxPath=dropboxPath + fileLocalPath.getName();    }  }  LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);  DropboxFileUploadResult result;  try {    FileMetadata uploadedFile=putSingleFile(fileLocalPath,dropboxPath,mode);    if (uploadedFile == null) {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);    } else {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.OK);    }  } catch (  Exception ex) {    result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);  }  return result;} else if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @AT@ 4758 @LENGTH@ 3342
---UPD Block@@ThenBody:{  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");  }  if (entry == null) {    if (dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {      dropboxPath=dropboxPath + fileLocalPath.getName();    }  }  LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);  DropboxFileUploadResult result;  try {    FileMetadata uploadedFile=putSingleFile(fileLocalPath,dropboxPath,mode);    if (uploadedFile == null) {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);    } else {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.OK);    }  } catch (  Exception ex) {    result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);  }  return result;} @TO@ ThenBody:{  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");  }  if (entry == null) {    if (dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {      dropboxPath=dropboxPath + fileLocalPath.getName();    }  }  LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);  DropboxFileUploadResult result;  try {    FileMetadata uploadedFile=putSingleFile(fileLocalPath,dropboxPath,mode);    if (uploadedFile == null) {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);    } else {      result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.OK);    }  } catch (  Exception ex) {    result=new DropboxFileUploadResult(dropboxPath,DropboxResultCode.KO);  }  return result;} @AT@ 4786 @LENGTH@ 1202
------UPD IfStatement@@if (entry != null) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");} @TO@ if (entry != null && !DropboxUploadMode.force.equals(mode)) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");} @AT@ 4844 @LENGTH@ 133
---------INS InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @TO@ IfStatement@@if (entry != null) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a file!");} @AT@ 4848 @LENGTH@ 54
------------INS InfixExpression@@entry != null @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 4848 @LENGTH@ 13
---------------MOV SimpleName@@entry @TO@ InfixExpression@@entry != null @AT@ 4848 @LENGTH@ 5
---------------MOV Operator@@!= @TO@ InfixExpression@@entry != null @AT@ 4853 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@entry != null @AT@ 4857 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 4861 @LENGTH@ 2
------------INS PrefixExpression@@!DropboxUploadMode.force.equals(mode) @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 4865 @LENGTH@ 37
---------------INS Operator@@! @TO@ PrefixExpression@@!DropboxUploadMode.force.equals(mode) @AT@ 4865 @LENGTH@ 1
---------------INS MethodInvocation@@DropboxUploadMode.force.equals(mode) @TO@ PrefixExpression@@!DropboxUploadMode.force.equals(mode) @AT@ 4866 @LENGTH@ 36
------------------INS QualifiedName@@Name:DropboxUploadMode.force @TO@ MethodInvocation@@DropboxUploadMode.force.equals(mode) @AT@ 4866 @LENGTH@ 23
------------------INS SimpleName@@MethodName:equals:[mode] @TO@ MethodInvocation@@DropboxUploadMode.force.equals(mode) @AT@ 4890 @LENGTH@ 12
---------------------INS SimpleName@@mode @TO@ SimpleName@@MethodName:equals:[mode] @AT@ 4897 @LENGTH@ 4
---------DEL InfixExpression@@entry != null @AT@ 4848 @LENGTH@ 13
---UPD Block@@ElseBody:if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @TO@ ElseBody:if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @AT@ 5994 @LENGTH@ 2106
------UPD IfStatement@@if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @TO@ if (fileLocalPath.isDirectory()) {  LOG.debug("Uploading a dir...");  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} else {  return null;} @AT@ 5994 @LENGTH@ 2106
---------UPD Block@@ThenBody:{  LOG.debug("Uploading a dir...");  if (entry != null) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} @TO@ ThenBody:{  LOG.debug("Uploading a dir...");  if (entry != null && !DropboxUploadMode.force.equals(mode)) {    throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");  }  if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {    dropboxPath=dropboxPath + DropboxConstants.DROPBOX_FILE_SEPARATOR;  }  String oldDropboxPath=dropboxPath;  Collection<File> listFiles=FileUtils.listFiles(fileLocalPath,null,true);  if (listFiles.isEmpty()) {    throw new DropboxException(localPath + " does not contain any files");  }  HashMap<String,DropboxResultCode> resultMap=new HashMap<>(listFiles.size());  for (  File file : listFiles) {    String absPath=file.getAbsolutePath();    int indexRemainingPath=localPath.length();    if (!localPath.endsWith("/")) {      indexRemainingPath+=1;    }    String remainingPath=absPath.substring(indexRemainingPath);    dropboxPath=dropboxPath + remainingPath;    try {      LOG.debug("Uploading: {},{}",fileLocalPath,dropboxPath);      FileMetadata uploadedFile=putSingleFile(file,dropboxPath,mode);      if (uploadedFile == null) {        resultMap.put(dropboxPath,DropboxResultCode.KO);      } else {        resultMap.put(dropboxPath,DropboxResultCode.OK);      }    } catch (    Exception ex) {      resultMap.put(dropboxPath,DropboxResultCode.KO);    }    dropboxPath=oldDropboxPath;  }  return new DropboxFileUploadResult(resultMap);} @AT@ 6027 @LENGTH@ 2031
------------UPD IfStatement@@if (entry != null) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");} @TO@ if (entry != null && !DropboxUploadMode.force.equals(mode)) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");} @AT@ 6196 @LENGTH@ 135
---------------DEL InfixExpression@@entry != null @AT@ 6200 @LENGTH@ 13
---------------INS InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @TO@ IfStatement@@if (entry != null) {  throw new DropboxException(dropboxPath + " exists on dropbox and is not a folder!");} @AT@ 6241 @LENGTH@ 54
------------------INS InfixExpression@@entry != null @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 6241 @LENGTH@ 13
---------------------MOV SimpleName@@entry @TO@ InfixExpression@@entry != null @AT@ 6200 @LENGTH@ 5
---------------------MOV SimpleName@@entry @TO@ InfixExpression@@entry != null @AT@ 6200 @LENGTH@ 5
---------------------MOV Operator@@!= @TO@ InfixExpression@@entry != null @AT@ 6205 @LENGTH@ 2
---------------------MOV Operator@@!= @TO@ InfixExpression@@entry != null @AT@ 6205 @LENGTH@ 2
---------------------MOV NullLiteral@@null @TO@ InfixExpression@@entry != null @AT@ 6209 @LENGTH@ 4
---------------------MOV NullLiteral@@null @TO@ InfixExpression@@entry != null @AT@ 6209 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 6254 @LENGTH@ 2
------------------INS PrefixExpression@@!DropboxUploadMode.force.equals(mode) @TO@ InfixExpression@@entry != null && !DropboxUploadMode.force.equals(mode) @AT@ 6258 @LENGTH@ 37
---------------------INS Operator@@! @TO@ PrefixExpression@@!DropboxUploadMode.force.equals(mode) @AT@ 6258 @LENGTH@ 1
---------------------INS MethodInvocation@@DropboxUploadMode.force.equals(mode) @TO@ PrefixExpression@@!DropboxUploadMode.force.equals(mode) @AT@ 6259 @LENGTH@ 36
------------------------INS QualifiedName@@Name:DropboxUploadMode.force @TO@ MethodInvocation@@DropboxUploadMode.force.equals(mode) @AT@ 6259 @LENGTH@ 23
------------------------INS SimpleName@@MethodName:equals:[mode] @TO@ MethodInvocation@@DropboxUploadMode.force.equals(mode) @AT@ 6283 @LENGTH@ 12
---------------------------INS SimpleName@@mode @TO@ SimpleName@@MethodName:equals:[mode] @AT@ 6290 @LENGTH@ 4


UPD IfStatement@@if (null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE)) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @TO@ if (ObjectHelper.isEmpty(inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)) && ObjectHelper.isNotEmpty(client.getHeaders().get(Exchange.CONTENT_TYPE))) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @AT@ 7031 @LENGTH@ 266
---DEL InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7035 @LENGTH@ 138
------DEL Operator@@&& @AT@ 7099 @LENGTH@ 2
------DEL InfixExpression@@null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7119 @LENGTH@ 54
---------DEL NullLiteral@@null @AT@ 7119 @LENGTH@ 4
---------DEL Operator@@!= @AT@ 7123 @LENGTH@ 2
---MOV InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @TO@ IfStatement@@if (null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE)) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @AT@ 7035 @LENGTH@ 64
------DEL NullLiteral@@null @AT@ 7035 @LENGTH@ 4
------INS MethodInvocation@@ObjectHelper.isEmpty(inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)) @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7035 @LENGTH@ 78
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isEmpty(inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)) @AT@ 7035 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEmpty:[inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)] @TO@ MethodInvocation@@ObjectHelper.isEmpty(inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)) @AT@ 7048 @LENGTH@ 65
------------MOV MethodInvocation@@inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @TO@ SimpleName@@MethodName:isEmpty:[inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)] @AT@ 7043 @LENGTH@ 56
------------MOV MethodInvocation@@inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @TO@ SimpleName@@MethodName:isEmpty:[inMessage.getHeader(Exchange.CONTENT_TYPE,String.class)] @AT@ 7043 @LENGTH@ 56
------UPD Operator@@== @TO@ && @AT@ 7039 @LENGTH@ 2
------INS MethodInvocation@@ObjectHelper.isNotEmpty(client.getHeaders().get(Exchange.CONTENT_TYPE)) @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7133 @LENGTH@ 71
---------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(client.getHeaders().get(Exchange.CONTENT_TYPE)) @AT@ 7133 @LENGTH@ 12
---------INS SimpleName@@MethodName:isNotEmpty:[client.getHeaders().get(Exchange.CONTENT_TYPE)] @TO@ MethodInvocation@@ObjectHelper.isNotEmpty(client.getHeaders().get(Exchange.CONTENT_TYPE)) @AT@ 7146 @LENGTH@ 58
------------MOV MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE) @TO@ SimpleName@@MethodName:isNotEmpty:[client.getHeaders().get(Exchange.CONTENT_TYPE)] @AT@ 7127 @LENGTH@ 46


INS IfStatement@@if (null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE)) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @TO@ MethodDeclaration@@protected, void, MethodName:invokeAsyncHttpClient, Exchange exchange, final AsyncCallback callback, Exception,  @AT@ 7031 @LENGTH@ 266
---INS InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE) @TO@ IfStatement@@if (null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE)) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @AT@ 7035 @LENGTH@ 138
------INS InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7035 @LENGTH@ 64
---------INS NullLiteral@@null @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7035 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7039 @LENGTH@ 2
---------INS MethodInvocation@@inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7043 @LENGTH@ 56
------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7043 @LENGTH@ 9
------------INS SimpleName@@MethodName:getHeader:[Exchange.CONTENT_TYPE, String.class] @TO@ MethodInvocation@@inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) @AT@ 7053 @LENGTH@ 46
---------------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:getHeader:[Exchange.CONTENT_TYPE, String.class] @AT@ 7063 @LENGTH@ 21
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7063 @LENGTH@ 8
------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7072 @LENGTH@ 12
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getHeader:[Exchange.CONTENT_TYPE, String.class] @AT@ 7086 @LENGTH@ 12
------INS Operator@@&& @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7099 @LENGTH@ 2
------INS InfixExpression@@null != client.getHeaders().get(Exchange.CONTENT_TYPE) @TO@ InfixExpression@@null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7119 @LENGTH@ 54
---------INS NullLiteral@@null @TO@ InfixExpression@@null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7119 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7123 @LENGTH@ 2
---------INS MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE) @TO@ InfixExpression@@null != client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7127 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7127 @LENGTH@ 19
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7127 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[Exchange.CONTENT_TYPE] @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE) @AT@ 7147 @LENGTH@ 26
---------------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:get:[Exchange.CONTENT_TYPE] @AT@ 7151 @LENGTH@ 21
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7151 @LENGTH@ 8
------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7160 @LENGTH@ 12
---INS Block@@ThenBody:{  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @TO@ IfStatement@@if (null == inMessage.getHeader(Exchange.CONTENT_TYPE,String.class) && null != client.getHeaders().get(Exchange.CONTENT_TYPE)) {  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @AT@ 7175 @LENGTH@ 122
------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)) @TO@ Block@@ThenBody:{  inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0));} @AT@ 7189 @LENGTH@ 98
---------INS MethodInvocation@@inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)) @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)) @AT@ 7189 @LENGTH@ 97
------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)) @AT@ 7189 @LENGTH@ 9
------------INS SimpleName@@MethodName:setHeader:[Exchange.CONTENT_TYPE, client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)] @TO@ MethodInvocation@@inMessage.setHeader(Exchange.CONTENT_TYPE,client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)) @AT@ 7199 @LENGTH@ 87
---------------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:setHeader:[Exchange.CONTENT_TYPE, client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)] @AT@ 7209 @LENGTH@ 21
------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7209 @LENGTH@ 8
------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7218 @LENGTH@ 12
---------------INS MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE).get(0) @TO@ SimpleName@@MethodName:setHeader:[Exchange.CONTENT_TYPE, client.getHeaders().get(Exchange.CONTENT_TYPE).get(0)] @AT@ 7232 @LENGTH@ 53
------------------INS MethodInvocation@@MethodName:get:[Exchange.CONTENT_TYPE] @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE).get(0) @AT@ 7232 @LENGTH@ 46
---------------------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ MethodInvocation@@MethodName:get:[Exchange.CONTENT_TYPE] @AT@ 7256 @LENGTH@ 21
------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7256 @LENGTH@ 8
------------------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 7265 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE).get(0) @AT@ 7232 @LENGTH@ 19
------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE).get(0) @AT@ 7232 @LENGTH@ 6
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@client.getHeaders().get(Exchange.CONTENT_TYPE).get(0) @AT@ 7279 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 7283 @LENGTH@ 1


UPD TryStatement@@try (Connection hs2Conn1=DriverManager.getConnection(TestHiveMetaStoreAlterColumnPar.miniHS2.getJdbcURL(),"hive","hive");Statement stmt1=hs2Conn1.createStatement();Connection hs2Conn2=DriverManager.getConnection(TestHiveMetaStoreAlterColumnPar.miniHS2.getJdbcURL(),"hive","hive");Statement stmt2=hs2Conn2.createStatement()){  stmt1.execute("set metaconf:hive.metastore.disallow.incompatible.col.type.changes=false");  stmt1.execute("alter table t1 change column c1 c1 smallint");  stmt1.execute("alter table t1 change column c1 c1 int");  try {    stmt2.execute("alter table t1 change column c1 c1 smallint");    assertTrue("Exception not thrown",true);  } catch (  Exception e1) {    assertTrue("Unexpected exception: " + e1.getMessage(),e1.getMessage().contains("Unable to alter table. The following columns have types incompatible with the existing columns in their respective positions"));  }  stmt1.execute("alter table t1 change column c1 c1 smallint");} catch (Exception e2) {  assertTrue("Unexpected Exception: " + e2.getMessage(),true);} @TO@ try (Connection hs2Conn1=DriverManager.getConnection(TestHiveMetaStoreAlterColumnPar.miniHS2.getJdbcURL(),"hive","hive");Statement stmt1=hs2Conn1.createStatement();Connection hs2Conn2=DriverManager.getConnection(TestHiveMetaStoreAlterColumnPar.miniHS2.getJdbcURL(),"hive","hive");Statement stmt2=hs2Conn2.createStatement()){  stmt1.execute("set metaconf:hive.metastore.disallow.incompatible.col.type.changes=false");  stmt1.execute("alter table t1 change column c1 c1 smallint");  stmt1.execute("alter table t1 change column c1 c1 int");  try {    stmt2.execute("alter table t1 change column c1 c1 smallint");    fail("Exception not thrown");  } catch (  Exception e1) {    assertTrue("Unexpected exception: " + e1.getMessage(),e1.getMessage().contains("Unable to alter table. The following columns have types incompatible with the existing columns in their respective positions"));  }  stmt1.execute("alter table t1 change column c1 c1 smallint");} catch (Exception e2) {  fail("Unexpected Exception: " + e2.getMessage());} @AT@ 3012 @LENGTH@ 1569
---UPD TryStatement@@try {  stmt2.execute("alter table t1 change column c1 c1 smallint");  assertTrue("Exception not thrown",true);} catch (Exception e1) {  assertTrue("Unexpected exception: " + e1.getMessage(),e1.getMessage().contains("Unable to alter table. The following columns have types incompatible with the existing columns in their respective positions"));} @TO@ try {  stmt2.execute("alter table t1 change column c1 c1 smallint");  fail("Exception not thrown");} catch (Exception e1) {  assertTrue("Unexpected exception: " + e1.getMessage(),e1.getMessage().contains("Unable to alter table. The following columns have types incompatible with the existing columns in their respective positions"));} @AT@ 3924 @LENGTH@ 395
------UPD ExpressionStatement@@MethodInvocation:assertTrue("Exception not thrown",true) @TO@ MethodInvocation:fail("Exception not thrown") @AT@ 4008 @LENGTH@ 41
---------UPD MethodInvocation@@assertTrue("Exception not thrown",true) @TO@ fail("Exception not thrown") @AT@ 4008 @LENGTH@ 40
------------UPD SimpleName@@MethodName:assertTrue:["Exception not thrown", true] @TO@ MethodName:fail:["Exception not thrown"] @AT@ 4008 @LENGTH@ 40
---------------DEL BooleanLiteral@@true @AT@ 4043 @LENGTH@ 4
---UPD CatchClause@@catch (Exception e2) {  assertTrue("Unexpected Exception: " + e2.getMessage(),true);} @TO@ catch (Exception e2) {  fail("Unexpected Exception: " + e2.getMessage());} @AT@ 4485 @LENGTH@ 96
------UPD ExpressionStatement@@MethodInvocation:assertTrue("Unexpected Exception: " + e2.getMessage(),true) @TO@ MethodInvocation:fail("Unexpected Exception: " + e2.getMessage()) @AT@ 4514 @LENGTH@ 61
---------UPD MethodInvocation@@assertTrue("Unexpected Exception: " + e2.getMessage(),true) @TO@ fail("Unexpected Exception: " + e2.getMessage()) @AT@ 4514 @LENGTH@ 60
------------UPD SimpleName@@MethodName:assertTrue:["Unexpected Exception: " + e2.getMessage(), true] @TO@ MethodName:fail:["Unexpected Exception: " + e2.getMessage()] @AT@ 4514 @LENGTH@ 60
---------------DEL BooleanLiteral@@true @AT@ 4569 @LENGTH@ 4


UPD TypeDeclaration@@[public]CamelSpringDelegatingTestContextLoader, DelegatingSmartContextLoader @TO@ [@Deprecated, public]CamelSpringDelegatingTestContextLoader, DelegatingSmartContextLoader @AT@ 1796 @LENGTH@ 3844
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CamelSpringDelegatingTestContextLoader, DelegatingSmartContextLoader @AT@ 1886 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:ObjectHelper.between(key,"FOO","BAR") @TO@ MethodInvocation:StringHelper.between(key,"FOO","BAR") @AT@ 2051 @LENGTH@ 47
---UPD MethodInvocation@@ObjectHelper.between(key,"FOO","BAR") @TO@ StringHelper.between(key,"FOO","BAR") @AT@ 2058 @LENGTH@ 39
------UPD SimpleName@@Name:ObjectHelper @TO@ Name:StringHelper @AT@ 2058 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:setContentTranserEncoding(h) @TO@ MethodInvocation:setContentTransferEncoding(h) @AT@ 5833 @LENGTH@ 29
---UPD MethodInvocation@@setContentTranserEncoding(h) @TO@ setContentTransferEncoding(h) @AT@ 5833 @LENGTH@ 28
------UPD SimpleName@@MethodName:setContentTranserEncoding:[h] @TO@ MethodName:setContentTransferEncoding:[h] @AT@ 5833 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @TO@ TypeDeclaration@@[public]XPathMockTest, ContextTestSupport @AT@ 1821 @LENGTH@ 297
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1821 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1828 @LENGTH@ 4
---INS SimpleName@@MethodName:testXPathMock2Fail @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1833 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1861 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1881 @LENGTH@ 51
------INS SimpleType@@MockEndpoint @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @AT@ 1881 @LENGTH@ 12
------INS VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @TO@ VariableDeclarationStatement@@MockEndpoint mock=getMockEndpoint("mock:result"); @AT@ 1894 @LENGTH@ 37
---------INS SimpleName@@mock @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @AT@ 1894 @LENGTH@ 4
---------INS MethodInvocation@@getMockEndpoint("mock:result") @TO@ VariableDeclarationFragment@@mock=getMockEndpoint("mock:result") @AT@ 1901 @LENGTH@ 30
------------INS SimpleName@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result") @AT@ 1901 @LENGTH@ 30
---------------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1917 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 1941 @LENGTH@ 63
------INS MethodInvocation@@mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @TO@ ExpressionStatement@@MethodInvocation:mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @AT@ 1941 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:predicate:[] @TO@ MethodInvocation@@mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @AT@ 1941 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:message:[0] @TO@ MethodInvocation@@mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @AT@ 1941 @LENGTH@ 15
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:message:[0] @AT@ 1954 @LENGTH@ 1
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @AT@ 1941 @LENGTH@ 4
---------INS SimpleName@@MethodName:xpath:["/foo/text() = 'Bye World'"] @TO@ MethodInvocation@@mock.message(0).predicate().xpath("/foo/text() = 'Bye World'") @AT@ 1969 @LENGTH@ 34
------------INS StringLiteral@@"/foo/text() = 'Bye World'" @TO@ SimpleName@@MethodName:xpath:["/foo/text() = 'Bye World'"] @AT@ 1975 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<foo>Hello World</foo>") @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 2014 @LENGTH@ 60
------INS MethodInvocation@@template.sendBody("direct:start","<foo>Hello World</foo>") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","<foo>Hello World</foo>") @AT@ 2014 @LENGTH@ 59
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","<foo>Hello World</foo>") @AT@ 2014 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["direct:start", "<foo>Hello World</foo>"] @TO@ MethodInvocation@@template.sendBody("direct:start","<foo>Hello World</foo>") @AT@ 2023 @LENGTH@ 50
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<foo>Hello World</foo>"] @AT@ 2032 @LENGTH@ 14
------------INS StringLiteral@@"<foo>Hello World</foo>" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "<foo>Hello World</foo>"] @AT@ 2048 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:mock.assertIsNotSatisfied() @TO@ MethodDeclaration@@public, void, MethodName:testXPathMock2Fail, Exception,  @AT@ 2084 @LENGTH@ 28
------INS MethodInvocation@@mock.assertIsNotSatisfied() @TO@ ExpressionStatement@@MethodInvocation:mock.assertIsNotSatisfied() @AT@ 2084 @LENGTH@ 27
---------INS SimpleName@@Name:mock @TO@ MethodInvocation@@mock.assertIsNotSatisfied() @AT@ 2084 @LENGTH@ 4
---------INS SimpleName@@MethodName:assertIsNotSatisfied:[] @TO@ MethodInvocation@@mock.assertIsNotSatisfied() @AT@ 2089 @LENGTH@ 22


UPD VariableDeclarationStatement@@MessageResolver resolver=builder.args(null).build(); @TO@ MessageResolver resolver=builder.args().build(); @AT@ 3590 @LENGTH@ 54
---UPD VariableDeclarationFragment@@resolver=builder.args(null).build() @TO@ resolver=builder.args().build() @AT@ 3606 @LENGTH@ 37
------UPD MethodInvocation@@builder.args(null).build() @TO@ builder.args().build() @AT@ 3617 @LENGTH@ 26
---------UPD MethodInvocation@@MethodName:args:[null] @TO@ MethodName:args:[] @AT@ 3617 @LENGTH@ 18
------------DEL NullLiteral@@null @AT@ 3630 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:doMarshal(exchange,graph,stream,marshaller) @TO@ MethodInvocation:doMarshal(exchange,graph,stream,marshaller,charset) @AT@ 6812 @LENGTH@ 47
---UPD MethodInvocation@@doMarshal(exchange,graph,stream,marshaller) @TO@ doMarshal(exchange,graph,stream,marshaller,charset) @AT@ 6812 @LENGTH@ 46
------UPD SimpleName@@MethodName:doMarshal:[exchange, graph, stream, marshaller] @TO@ MethodName:doMarshal:[exchange, graph, stream, marshaller, charset] @AT@ 6812 @LENGTH@ 46
---------INS SimpleName@@charset @TO@ SimpleName@@MethodName:doMarshal:[exchange, graph, stream, marshaller] @AT@ 6859 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.authorities=Collections.unmodifiableSet(this.sortAuthorities(authorities)) @TO@ Assignment:this.authorities=Collections.unmodifiableSet(new LinkedHashSet<>(this.sortAuthorities(authorities))) @AT@ 2433 @LENGTH@ 82
---UPD Assignment@@this.authorities=Collections.unmodifiableSet(this.sortAuthorities(authorities)) @TO@ this.authorities=Collections.unmodifiableSet(new LinkedHashSet<>(this.sortAuthorities(authorities))) @AT@ 2433 @LENGTH@ 81
------UPD MethodInvocation@@Collections.unmodifiableSet(this.sortAuthorities(authorities)) @TO@ Collections.unmodifiableSet(new LinkedHashSet<>(this.sortAuthorities(authorities))) @AT@ 2452 @LENGTH@ 62
---------UPD SimpleName@@MethodName:unmodifiableSet:[this.sortAuthorities(authorities)] @TO@ MethodName:unmodifiableSet:[new LinkedHashSet<>(this.sortAuthorities(authorities))] @AT@ 2464 @LENGTH@ 50
------------INS ClassInstanceCreation@@LinkedHashSet<>[this.sortAuthorities(authorities)] @TO@ SimpleName@@MethodName:unmodifiableSet:[this.sortAuthorities(authorities)] @AT@ 2512 @LENGTH@ 54
---------------MOV MethodInvocation@@this.sortAuthorities(authorities) @TO@ ClassInstanceCreation@@LinkedHashSet<>[this.sortAuthorities(authorities)] @AT@ 2480 @LENGTH@ 33
---------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<>[this.sortAuthorities(authorities)] @AT@ 2512 @LENGTH@ 3
---------------INS ParameterizedType@@LinkedHashSet<> @TO@ ClassInstanceCreation@@LinkedHashSet<>[this.sortAuthorities(authorities)] @AT@ 2516 @LENGTH@ 15
------------------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<> @AT@ 2516 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.state(processor != null || writer != null,"ItemWriter or ItemProcessor must be provided") @TO@ MethodInvocation:Assert.state(writer != null,"ItemWriter must be provided") @AT@ 5959 @LENGTH@ 98
---UPD MethodInvocation@@Assert.state(processor != null || writer != null,"ItemWriter or ItemProcessor must be provided") @TO@ Assert.state(writer != null,"ItemWriter must be provided") @AT@ 5959 @LENGTH@ 97
------UPD SimpleName@@MethodName:state:[processor != null || writer != null, "ItemWriter or ItemProcessor must be provided"] @TO@ MethodName:state:[writer != null, "ItemWriter must be provided"] @AT@ 5966 @LENGTH@ 90
---------DEL InfixExpression@@processor != null || writer != null @AT@ 5972 @LENGTH@ 35
------------DEL InfixExpression@@processor != null @AT@ 5972 @LENGTH@ 17
---------------DEL SimpleName@@processor @AT@ 5972 @LENGTH@ 9
---------------DEL Operator@@!= @AT@ 5981 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 5985 @LENGTH@ 4
------------DEL Operator@@|| @AT@ 5989 @LENGTH@ 2
------------DEL InfixExpression@@writer != null @AT@ 5993 @LENGTH@ 14
---------INS InfixExpression@@writer != null @TO@ SimpleName@@MethodName:state:[processor != null || writer != null, "ItemWriter or ItemProcessor must be provided"] @AT@ 5972 @LENGTH@ 14
------------MOV SimpleName@@writer @TO@ InfixExpression@@writer != null @AT@ 5993 @LENGTH@ 6
------------MOV Operator@@!= @TO@ InfixExpression@@writer != null @AT@ 5999 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@writer != null @AT@ 6003 @LENGTH@ 4
---------UPD StringLiteral@@"ItemWriter or ItemProcessor must be provided" @TO@ "ItemWriter must be provided" @AT@ 6009 @LENGTH@ 46


UPD FieldDeclaration@@private, static, final, String, [EXPECTED_ENCODED_MESSAGE_DIGEST="PaQyByOuBL7XiYyts4Sdmvl1WME="] @TO@ private, static, final, String, [EXPECTED_ENCODED_MESSAGE_DIGEST="XUt+ug5GEDD0X9+Nv8DGYZZThOQ="] @AT@ 3289 @LENGTH@ 93
---UPD VariableDeclarationFragment@@EXPECTED_ENCODED_MESSAGE_DIGEST="PaQyByOuBL7XiYyts4Sdmvl1WME=" @TO@ EXPECTED_ENCODED_MESSAGE_DIGEST="XUt+ug5GEDD0X9+Nv8DGYZZThOQ=" @AT@ 3317 @LENGTH@ 64
------UPD StringLiteral@@"PaQyByOuBL7XiYyts4Sdmvl1WME=" @TO@ "XUt+ug5GEDD0X9+Nv8DGYZZThOQ=" @AT@ 3351 @LENGTH@ 30


UPD TryStatement@@try (AutoCloseable handle=Performance.accumulate("module: Classpath")){  final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml";  if (LOG.isTraceEnabled()) {    LOG.trace("attempt:" + identifier);  }  try {    ClassLoader cl=ApplicationEnvironment.get().getBootstrapClassLoader();    if (LOG.isTraceEnabled()) {      LOG.trace("classloader: " + cl);      LOG.trace("path: " + path);    }    URL url=cl.getResource(path);    if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {      url=ClasspathModuleFinder.class.getClassLoader().getResource(path);    }    if (url == null) {      if (LOG.isTraceEnabled()) {        LOG.trace("not found: " + identifier);      }      return null;    }    final URL base=new URL(url,"./");    if (LOG.isTraceEnabled()) {      LOG.trace("base of " + identifier + ": "+ base);    }    InputStream in=url.openStream();    Path explodedJar=NestedJarResourceLoader.explodedJar(base);    ModuleSpec moduleSpec=null;    try {      moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),(explodedJar == null ? "/" : explodedJar.toAbsolutePath().toString()),in,path.toString(),delegateLoader,simpleIdentifier);    } catch (    IOException e) {      throw new ModuleLoadException(e);    } finally {      try {        in.close();      } catch (      IOException e) {        throw new ModuleLoadException(e);      }    }    if (LOG.isTraceEnabled()) {      LOG.trace("Loaded ModuleSpec: " + moduleSpec.getName());    }    return moduleSpec;  } catch (  IOException e) {    throw new ModuleLoadException(e);  }} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try (AutoCloseable handle=Performance.accumulate("module: Classpath")){  final String[] nameAndSlot=identifier.split("\\:",2);  final String path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml";  if (LOG.isTraceEnabled()) {    LOG.trace("attempt:" + identifier);  }  try {    ClassLoader cl=ApplicationEnvironment.get().getBootstrapClassLoader();    if (LOG.isTraceEnabled()) {      LOG.trace("classloader: " + cl);      LOG.trace("path: " + path);    }    URL url=cl.getResource(path);    if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {      url=ClasspathModuleFinder.class.getClassLoader().getResource(path);    }    if (url == null) {      if (LOG.isTraceEnabled()) {        LOG.trace("not found: " + identifier);      }      return null;    }    final URL base=new URL(url,"./");    if (LOG.isTraceEnabled()) {      LOG.trace("base of " + identifier + ": "+ base);    }    InputStream in=url.openStream();    Path explodedJar=NestedJarResourceLoader.explodedJar(base);    ModuleSpec moduleSpec=null;    try {      moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),(explodedJar == null ? "/" : explodedJar.toAbsolutePath().toString()),in,path.toString(),delegateLoader,simpleIdentifier);    } catch (    IOException e) {      throw new ModuleLoadException(e);    } finally {      try {        in.close();      } catch (      IOException e) {        throw new ModuleLoadException(e);      }    }    if (LOG.isTraceEnabled()) {      LOG.trace("Loaded ModuleSpec: " + moduleSpec.getName());    }    return moduleSpec;  } catch (  IOException e) {    throw new ModuleLoadException(e);  }} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1677 @LENGTH@ 2657
---UPD VariableDeclarationStatement@@final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml"; @TO@ final String path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml"; @AT@ 1764 @LENGTH@ 122
------UPD VariableDeclarationFragment@@path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @TO@ path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml" @AT@ 1777 @LENGTH@ 108
---------UPD InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @TO@ "modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml" @AT@ 1784 @LENGTH@ 101
------------UPD MethodInvocation@@identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) @TO@ nameAndSlot[0].replace('.',MODULE_SEPARATOR) @AT@ 1797 @LENGTH@ 72
---------------DEL MethodInvocation@@MethodName:replace:['.', MODULE_SEPARATOR] @AT@ 1797 @LENGTH@ 41
------------------DEL CharacterLiteral@@'.' @AT@ 1816 @LENGTH@ 3
------------------DEL SimpleName@@MODULE_SEPARATOR @AT@ 1821 @LENGTH@ 16
---------------DEL SimpleName@@Name:identifier @AT@ 1797 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:replace:[':', MODULE_SEPARATOR] @TO@ MethodName:replace:['.', MODULE_SEPARATOR] @AT@ 1839 @LENGTH@ 30
------------------UPD CharacterLiteral@@':' @TO@ '.' @AT@ 1847 @LENGTH@ 3
---------------INS ArrayAccess@@nameAndSlot[0] @TO@ MethodInvocation@@identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) @AT@ 1866 @LENGTH@ 14
------------------INS SimpleName@@nameAndSlot @TO@ ArrayAccess@@nameAndSlot[0] @AT@ 1866 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@nameAndSlot[0] @AT@ 1878 @LENGTH@ 1
------------INS SimpleName@@MODULE_SEPARATOR @TO@ InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @AT@ 1914 @LENGTH@ 16
------------INS ArrayAccess@@nameAndSlot[1] @TO@ InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @AT@ 1933 @LENGTH@ 14
---------------INS SimpleName@@nameAndSlot @TO@ ArrayAccess@@nameAndSlot[1] @AT@ 1933 @LENGTH@ 11
---------------INS NumberLiteral@@1 @TO@ ArrayAccess@@nameAndSlot[1] @AT@ 1945 @LENGTH@ 1
---INS VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @TO@ TryStatement@@try (AutoCloseable handle=Performance.accumulate("module: Classpath")){  final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml";  if (LOG.isTraceEnabled()) {    LOG.trace("attempt:" + identifier);  }  try {    ClassLoader cl=ApplicationEnvironment.get().getBootstrapClassLoader();    if (LOG.isTraceEnabled()) {      LOG.trace("classloader: " + cl);      LOG.trace("path: " + path);    }    URL url=cl.getResource(path);    if (url == null && cl != ClasspathModuleFinder.class.getClassLoader()) {      url=ClasspathModuleFinder.class.getClassLoader().getResource(path);    }    if (url == null) {      if (LOG.isTraceEnabled()) {        LOG.trace("not found: " + identifier);      }      return null;    }    final URL base=new URL(url,"./");    if (LOG.isTraceEnabled()) {      LOG.trace("base of " + identifier + ": "+ base);    }    InputStream in=url.openStream();    Path explodedJar=NestedJarResourceLoader.explodedJar(base);    ModuleSpec moduleSpec=null;    try {      moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),(explodedJar == null ? "/" : explodedJar.toAbsolutePath().toString()),in,path.toString(),delegateLoader,simpleIdentifier);    } catch (    IOException e) {      throw new ModuleLoadException(e);    } finally {      try {        in.close();      } catch (      IOException e) {        throw new ModuleLoadException(e);      }    }    if (LOG.isTraceEnabled()) {      LOG.trace("Loaded ModuleSpec: " + moduleSpec.getName());    }    return moduleSpec;  } catch (  IOException e) {    throw new ModuleLoadException(e);  }} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1764 @LENGTH@ 56
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1764 @LENGTH@ 5
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1770 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1770 @LENGTH@ 6
------INS VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1779 @LENGTH@ 40
---------INS SimpleName@@nameAndSlot @TO@ VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @AT@ 1779 @LENGTH@ 11
---------INS MethodInvocation@@identifier.split("\\:",2) @TO@ VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @AT@ 1793 @LENGTH@ 26
------------INS SimpleName@@Name:identifier @TO@ MethodInvocation@@identifier.split("\\:",2) @AT@ 1793 @LENGTH@ 10
------------INS SimpleName@@MethodName:split:["\\:", 2] @TO@ MethodInvocation@@identifier.split("\\:",2) @AT@ 1804 @LENGTH@ 15
---------------INS StringLiteral@@"\\:" @TO@ SimpleName@@MethodName:split:["\\:", 2] @AT@ 1810 @LENGTH@ 5
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:split:["\\:", 2] @AT@ 1817 @LENGTH@ 1


DEL MethodDeclaration@@public, voidMethodName:WordpressComponentTestSupport,  @AT@ 1153 @LENGTH@ 47
---DEL Modifier@@public @AT@ 1153 @LENGTH@ 6
---DEL SimpleName@@MethodName:WordpressComponentTestSupport @AT@ 1160 @LENGTH@ 29


INS FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @TO@ TypeDeclaration@@[public]HttpConstants,  @AT@ 1554 @LENGTH@ 93
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @AT@ 1554 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @AT@ 1561 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @AT@ 1568 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @AT@ 1574 @LENGTH@ 6
---INS VariableDeclarationFragment@@CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri" @TO@ FieldDeclaration@@public, static, final, String, [CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri"] @AT@ 1581 @LENGTH@ 65
------INS SimpleName@@CONFIG_VALIDATE_DIGEST_URI @TO@ VariableDeclarationFragment@@CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri" @AT@ 1581 @LENGTH@ 26
------INS InfixExpression@@CONFIG_BASE + ".validate-digest-uri" @TO@ VariableDeclarationFragment@@CONFIG_VALIDATE_DIGEST_URI=CONFIG_BASE + ".validate-digest-uri" @AT@ 1610 @LENGTH@ 36
---------INS SimpleName@@CONFIG_BASE @TO@ InfixExpression@@CONFIG_BASE + ".validate-digest-uri" @AT@ 1610 @LENGTH@ 11
---------INS Operator@@+ @TO@ InfixExpression@@CONFIG_BASE + ".validate-digest-uri" @AT@ 1621 @LENGTH@ 1
---------INS StringLiteral@@".validate-digest-uri" @TO@ InfixExpression@@CONFIG_BASE + ".validate-digest-uri" @AT@ 1624 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:values.add(readHashValue(byteBuffer)) @TO@ MethodInvocation:values.add(byteBuffer == null ? null : readHashValue(byteBuffer)) @AT@ 9393 @LENGTH@ 38
---UPD MethodInvocation@@values.add(readHashValue(byteBuffer)) @TO@ values.add(byteBuffer == null ? null : readHashValue(byteBuffer)) @AT@ 9393 @LENGTH@ 37
------UPD SimpleName@@MethodName:add:[readHashValue(byteBuffer)] @TO@ MethodName:add:[byteBuffer == null ? null : readHashValue(byteBuffer)] @AT@ 9400 @LENGTH@ 30
---------INS ConditionalExpression@@byteBuffer == null ? null : readHashValue(byteBuffer) @TO@ SimpleName@@MethodName:add:[readHashValue(byteBuffer)] @AT@ 9404 @LENGTH@ 53
------------MOV MethodInvocation@@readHashValue(byteBuffer) @TO@ ConditionalExpression@@byteBuffer == null ? null : readHashValue(byteBuffer) @AT@ 9404 @LENGTH@ 25
------------INS InfixExpression@@byteBuffer == null @TO@ ConditionalExpression@@byteBuffer == null ? null : readHashValue(byteBuffer) @AT@ 9404 @LENGTH@ 18
---------------INS SimpleName@@byteBuffer @TO@ InfixExpression@@byteBuffer == null @AT@ 9404 @LENGTH@ 10
---------------INS Operator@@== @TO@ InfixExpression@@byteBuffer == null @AT@ 9414 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@byteBuffer == null @AT@ 9418 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ConditionalExpression@@byteBuffer == null ? null : readHashValue(byteBuffer) @AT@ 9425 @LENGTH@ 4


UPD CatchClause@@catch (ClassNotFoundException cause) {  return null;} @TO@ catch (ClassNotFoundException|NoClassDefFoundError cause) {  return null;} @AT@ 44709 @LENGTH@ 58
---UPD SingleVariableDeclaration@@ClassNotFoundException cause @TO@ ClassNotFoundException|NoClassDefFoundError cause @AT@ 44716 @LENGTH@ 28
------DEL SimpleType@@ClassNotFoundException @AT@ 44716 @LENGTH@ 22
------INS UnionType@@ClassNotFoundException|NoClassDefFoundError @TO@ SingleVariableDeclaration@@ClassNotFoundException cause @AT@ 44716 @LENGTH@ 45
---------INS SimpleType@@ClassNotFoundException @TO@ UnionType@@ClassNotFoundException|NoClassDefFoundError @AT@ 44716 @LENGTH@ 22
---------INS SimpleType@@NoClassDefFoundError @TO@ UnionType@@ClassNotFoundException|NoClassDefFoundError @AT@ 44741 @LENGTH@ 20


UPD VariableDeclarationStatement@@Mono<Map<String,Object>> userAttributes=this.webClient.get().uri(userInfoUri).header(HttpHeaders.AUTHORIZATION,"Bearer " + userRequest.getAccessToken().getTokenValue()).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference); @TO@ Mono<Map<String,Object>> userAttributes=this.webClient.get().uri(userInfoUri).headers(bearerToken(userRequest.getAccessToken().getTokenValue())).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference); @AT@ 4538 @LENGTH@ 679
---UPD VariableDeclarationFragment@@userAttributes=this.webClient.get().uri(userInfoUri).header(HttpHeaders.AUTHORIZATION,"Bearer " + userRequest.getAccessToken().getTokenValue()).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference) @TO@ userAttributes=this.webClient.get().uri(userInfoUri).headers(bearerToken(userRequest.getAccessToken().getTokenValue())).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference) @AT@ 4564 @LENGTH@ 652
------UPD MethodInvocation@@this.webClient.get().uri(userInfoUri).header(HttpHeaders.AUTHORIZATION,"Bearer " + userRequest.getAccessToken().getTokenValue()).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference) @TO@ this.webClient.get().uri(userInfoUri).headers(bearerToken(userRequest.getAccessToken().getTokenValue())).retrieve().onStatus(s -> s != HttpStatus.OK,response -> {
  return parse(response).map(userInfoErrorResponse -> {
    String description=userInfoErrorResponse.getErrorObject().getDescription();
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,description,null);
    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());
  }
);
}
).bodyToMono(typeReference) @AT@ 4581 @LENGTH@ 635
---------UPD MethodInvocation@@MethodName:header:[HttpHeaders.AUTHORIZATION, "Bearer " + userRequest.getAccessToken().getTokenValue()] @TO@ MethodName:headers:[bearerToken(userRequest.getAccessToken().getTokenValue())] @AT@ 4581 @LENGTH@ 148
------------DEL QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 4638 @LENGTH@ 25
---------------DEL SimpleName@@HttpHeaders @AT@ 4638 @LENGTH@ 11
---------------DEL SimpleName@@AUTHORIZATION @AT@ 4650 @LENGTH@ 13
------------DEL InfixExpression@@"Bearer " + userRequest.getAccessToken().getTokenValue() @AT@ 4672 @LENGTH@ 56
---------------DEL StringLiteral@@"Bearer " @AT@ 4672 @LENGTH@ 9
---------------DEL Operator@@+ @AT@ 4681 @LENGTH@ 1
---------------DEL MethodInvocation@@userRequest.getAccessToken().getTokenValue() @AT@ 4684 @LENGTH@ 44
------------INS MethodInvocation@@bearerToken(userRequest.getAccessToken().getTokenValue()) @TO@ MethodInvocation@@MethodName:header:[HttpHeaders.AUTHORIZATION, "Bearer " + userRequest.getAccessToken().getTokenValue()] @AT@ 4721 @LENGTH@ 57
---------------INS SimpleName@@MethodName:bearerToken:[userRequest.getAccessToken().getTokenValue()] @TO@ MethodInvocation@@bearerToken(userRequest.getAccessToken().getTokenValue()) @AT@ 4721 @LENGTH@ 57
------------------INS MethodInvocation@@userRequest.getAccessToken().getTokenValue() @TO@ SimpleName@@MethodName:bearerToken:[userRequest.getAccessToken().getTokenValue()] @AT@ 4733 @LENGTH@ 44
---------------------MOV MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@userRequest.getAccessToken().getTokenValue() @AT@ 4684 @LENGTH@ 28
---------------------MOV SimpleName@@Name:userRequest @TO@ MethodInvocation@@userRequest.getAccessToken().getTokenValue() @AT@ 4684 @LENGTH@ 11
---------------------MOV SimpleName@@MethodName:getTokenValue:[] @TO@ MethodInvocation@@userRequest.getAccessToken().getTokenValue() @AT@ 4713 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @TO@ TypeDeclaration@@[public]MessagePropertiesTests,  @AT@ 1931 @LENGTH@ 174
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 1931 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 1938 @LENGTH@ 4
---INS SimpleName@@MethodName:tesNoNullPointerInEquals @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 1943 @LENGTH@ 24
---INS VariableDeclarationStatement@@MessageProperties mp=new MessageProperties(); @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 1974 @LENGTH@ 47
------INS SimpleType@@MessageProperties @TO@ VariableDeclarationStatement@@MessageProperties mp=new MessageProperties(); @AT@ 1974 @LENGTH@ 17
------INS VariableDeclarationFragment@@mp=new MessageProperties() @TO@ VariableDeclarationStatement@@MessageProperties mp=new MessageProperties(); @AT@ 1992 @LENGTH@ 28
---------INS SimpleName@@mp @TO@ VariableDeclarationFragment@@mp=new MessageProperties() @AT@ 1992 @LENGTH@ 2
---------INS ClassInstanceCreation@@MessageProperties[] @TO@ VariableDeclarationFragment@@mp=new MessageProperties() @AT@ 1997 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 1997 @LENGTH@ 3
------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 2001 @LENGTH@ 17
---INS VariableDeclarationStatement@@MessageProperties mp2=new MessageProperties(); @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 2024 @LENGTH@ 48
------INS SimpleType@@MessageProperties @TO@ VariableDeclarationStatement@@MessageProperties mp2=new MessageProperties(); @AT@ 2024 @LENGTH@ 17
------INS VariableDeclarationFragment@@mp2=new MessageProperties() @TO@ VariableDeclarationStatement@@MessageProperties mp2=new MessageProperties(); @AT@ 2042 @LENGTH@ 29
---------INS SimpleName@@mp2 @TO@ VariableDeclarationFragment@@mp2=new MessageProperties() @AT@ 2042 @LENGTH@ 3
---------INS ClassInstanceCreation@@MessageProperties[] @TO@ VariableDeclarationFragment@@mp2=new MessageProperties() @AT@ 2048 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 2048 @LENGTH@ 3
------------INS SimpleType@@MessageProperties @TO@ ClassInstanceCreation@@MessageProperties[] @AT@ 2052 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertTrue(mp.equals(mp2)) @TO@ MethodDeclaration@@public, void, MethodName:tesNoNullPointerInEquals,  @AT@ 2075 @LENGTH@ 27
------INS MethodInvocation@@assertTrue(mp.equals(mp2)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(mp.equals(mp2)) @AT@ 2075 @LENGTH@ 26
---------INS SimpleName@@MethodName:assertTrue:[mp.equals(mp2)] @TO@ MethodInvocation@@assertTrue(mp.equals(mp2)) @AT@ 2075 @LENGTH@ 26
------------INS MethodInvocation@@mp.equals(mp2) @TO@ SimpleName@@MethodName:assertTrue:[mp.equals(mp2)] @AT@ 2086 @LENGTH@ 14
---------------INS SimpleName@@Name:mp @TO@ MethodInvocation@@mp.equals(mp2) @AT@ 2086 @LENGTH@ 2
---------------INS SimpleName@@MethodName:equals:[mp2] @TO@ MethodInvocation@@mp.equals(mp2) @AT@ 2089 @LENGTH@ 11
------------------INS SimpleName@@mp2 @TO@ SimpleName@@MethodName:equals:[mp2] @AT@ 2096 @LENGTH@ 3


UPD ThrowStatement@@ClassInstanceCreation:new MetaException("The partition values must not be null.") @TO@ ClassInstanceCreation:new MetaException("The partition values must not be null or empty.") @AT@ 125733 @LENGTH@ 66
---UPD ClassInstanceCreation@@MetaException["The partition values must not be null."] @TO@ MetaException["The partition values must not be null or empty."] @AT@ 125739 @LENGTH@ 59
------UPD StringLiteral@@"The partition values must not be null." @TO@ "The partition values must not be null or empty." @AT@ 125757 @LENGTH@ 40


UPD FieldDeclaration@@protected, static, final, MessageType, [schema=parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ")] @TO@ protected, static, final, MessageType, [schema=parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated binary list_binary_field_for_repeat_test;"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ")] @AT@ 3770 @LENGTH@ 2963
---UPD VariableDeclarationFragment@@schema=parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ") @TO@ schema=parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated binary list_binary_field_for_repeat_test;"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ") @AT@ 3805 @LENGTH@ 2927
------UPD MethodInvocation@@parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ") @TO@ parseMessageType("message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated binary list_binary_field_for_repeat_test;"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} ") @AT@ 3814 @LENGTH@ 2918
---------UPD SimpleName@@MethodName:parseMessageType:["message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} "] @TO@ MethodName:parseMessageType:["message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated binary list_binary_field_for_repeat_test;"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} "] @AT@ 3814 @LENGTH@ 2918
------------UPD InfixExpression@@"message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} " @TO@ "message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated binary list_binary_field_for_repeat_test;"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} " @AT@ 3836 @LENGTH@ 2895
---------------INS StringLiteral@@"repeated binary list_binary_field_for_repeat_test;" @TO@ InfixExpression@@"message hive_schema { " + "required int32 int32_field; " + "required int64 int64_field; "+ "required int96 int96_field; "+ "required double double_field; "+ "required float float_field; "+ "required boolean boolean_field; "+ "required fixed_len_byte_array(3) flba_field; "+ "optional fixed_len_byte_array(1) some_null_field; "+ "optional fixed_len_byte_array(1) all_null_field; "+ "required binary binary_field; "+ "optional binary binary_field_some_null; "+ "required binary value (DECIMAL(5,2)); "+ "required group struct_field {"+ "  required int32 a;\n"+ "  required double b;\n"+ "}\n"+ "optional group nested_struct_field {"+ "  optional group nsf {"+ "    optional int32 c;\n"+ "    optional int32 d;\n"+ "  }\n"+ "  optional double e;\n"+ "}\n"+ "optional group struct_field_some_null {"+ "  optional int32 f;\n"+ "  optional double g;\n"+ "}\n"+ "optional group map_field (MAP) {\n"+ "  repeated group map (MAP_KEY_VALUE) {\n"+ "    required binary key;\n"+ "    optional binary value;\n"+ "  }\n"+ "}\n"+ "optional group array_list (LIST) {\n"+ "  repeated group bag {\n"+ "    optional int32 array_element;\n"+ "  }\n"+ "}\n"+ "repeated int32 list_int32_field;"+ "repeated int64 list_int64_field;"+ "repeated double list_double_field;"+ "repeated float list_float_field;"+ "repeated boolean list_boolean_field;"+ "repeated fixed_len_byte_array(3) list_byte_array_field;"+ "repeated binary list_binary_field;"+ "repeated binary list_decimal_field (DECIMAL(5,2));"+ "repeated int32 list_int32_field_for_repeat_test;"+ "repeated group map_int32 (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "repeated group map_int64 (MAP_KEY_VALUE) {\n"+ "  required int64 key;\n"+ "  optional int64 value;\n"+ "}\n"+ "repeated group map_double (MAP_KEY_VALUE) {\n"+ "  required double key;\n"+ "  optional double value;\n"+ "}\n"+ "repeated group map_float (MAP_KEY_VALUE) {\n"+ "  required float key;\n"+ "  optional float value;\n"+ "}\n"+ "repeated group map_binary (MAP_KEY_VALUE) {\n"+ "  required binary key;\n"+ "  optional binary value;\n"+ "}\n"+ "repeated group map_decimal (MAP_KEY_VALUE) {\n"+ "  required binary key (DECIMAL(5,2));\n"+ "  optional binary value (DECIMAL(5,2));\n"+ "}\n"+ "repeated group map_int32_for_repeat_test (MAP_KEY_VALUE) {\n"+ "  required int32 key;\n"+ "  optional int32 value;\n"+ "}\n"+ "} " @AT@ 5639 @LENGTH@ 52


UPD ExpressionStatement@@Assignment:this.attributes=(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ Assignment:this.attributes=(attributes != null ? attributes : Collections.emptySet()) @AT@ 1398 @LENGTH@ 100
---UPD Assignment@@this.attributes=(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ this.attributes=(attributes != null ? attributes : Collections.emptySet()) @AT@ 1398 @LENGTH@ 99
------UPD ParenthesizedExpression@@(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ (attributes != null ? attributes : Collections.emptySet()) @AT@ 1416 @LENGTH@ 81
---------UPD ConditionalExpression@@attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet() @TO@ attributes != null ? attributes : Collections.emptySet() @AT@ 1417 @LENGTH@ 79
------------UPD MethodInvocation@@Collections.<FlowElementAttribute>emptySet() @TO@ Collections.emptySet() @AT@ 1451 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:builder.scope("user") @TO@ MethodInvocation:builder.scope("read:user") @AT@ 2256 @LENGTH@ 22
---UPD MethodInvocation@@builder.scope("user") @TO@ builder.scope("read:user") @AT@ 2256 @LENGTH@ 21
------UPD SimpleName@@MethodName:scope:["user"] @TO@ MethodName:scope:["read:user"] @AT@ 2264 @LENGTH@ 13
---------UPD StringLiteral@@"user" @TO@ "read:user" @AT@ 2270 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.viewResolvers=viewResolvers != null ? viewResolvers : Collections.<ViewResolver>emptyList() @TO@ Assignment:this.viewResolvers=viewResolvers != null ? viewResolvers : Collections.emptyList() @AT@ 1425 @LENGTH@ 100
---UPD Assignment@@this.viewResolvers=viewResolvers != null ? viewResolvers : Collections.<ViewResolver>emptyList() @TO@ this.viewResolvers=viewResolvers != null ? viewResolvers : Collections.emptyList() @AT@ 1425 @LENGTH@ 99
------UPD ConditionalExpression@@viewResolvers != null ? viewResolvers : Collections.<ViewResolver>emptyList() @TO@ viewResolvers != null ? viewResolvers : Collections.emptyList() @AT@ 1446 @LENGTH@ 78
---------UPD MethodInvocation@@Collections.<ViewResolver>emptyList() @TO@ Collections.emptyList() @AT@ 1486 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]AuthenticationWebFilterTests,  @AT@ 7333 @LENGTH@ 698
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7333 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7340 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7345 @LENGTH@ 54
---INS VariableDeclarationStatement@@Mono<Authentication> authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7406 @LENGTH@ 109
------INS ParameterizedType@@Mono<Authentication> @TO@ VariableDeclarationStatement@@Mono<Authentication> authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")); @AT@ 7406 @LENGTH@ 20
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Authentication> @AT@ 7406 @LENGTH@ 4
---------INS SimpleType@@Authentication @TO@ ParameterizedType@@Mono<Authentication> @AT@ 7411 @LENGTH@ 14
------INS VariableDeclarationFragment@@authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @TO@ VariableDeclarationStatement@@Mono<Authentication> authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")); @AT@ 7427 @LENGTH@ 87
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @AT@ 7427 @LENGTH@ 14
---------INS MethodInvocation@@Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @TO@ VariableDeclarationFragment@@authentication=Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @AT@ 7444 @LENGTH@ 70
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @AT@ 7444 @LENGTH@ 4
------------INS SimpleName@@MethodName:just:[new TestingAuthenticationToken("test","this","ROLE_USER")] @TO@ MethodInvocation@@Mono.just(new TestingAuthenticationToken("test","this","ROLE_USER")) @AT@ 7449 @LENGTH@ 65
---------------INS ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @TO@ SimpleName@@MethodName:just:[new TestingAuthenticationToken("test","this","ROLE_USER")] @AT@ 7454 @LENGTH@ 59
------------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @AT@ 7454 @LENGTH@ 3
------------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @AT@ 7458 @LENGTH@ 26
------------------INS StringLiteral@@"test" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @AT@ 7485 @LENGTH@ 6
------------------INS StringLiteral@@"this" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @AT@ 7493 @LENGTH@ 6
------------------INS StringLiteral@@"ROLE_USER" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["test", "this", "ROLE_USER"] @AT@ 7501 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:when(this.authenticationConverter.apply(any())).thenReturn(authentication) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7518 @LENGTH@ 75
------INS MethodInvocation@@when(this.authenticationConverter.apply(any())).thenReturn(authentication) @TO@ ExpressionStatement@@MethodInvocation:when(this.authenticationConverter.apply(any())).thenReturn(authentication) @AT@ 7518 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:when:[this.authenticationConverter.apply(any())] @TO@ MethodInvocation@@when(this.authenticationConverter.apply(any())).thenReturn(authentication) @AT@ 7518 @LENGTH@ 47
------------INS MethodInvocation@@this.authenticationConverter.apply(any()) @TO@ MethodInvocation@@MethodName:when:[this.authenticationConverter.apply(any())] @AT@ 7523 @LENGTH@ 41
---------------INS FieldAccess@@this.authenticationConverter @TO@ MethodInvocation@@this.authenticationConverter.apply(any()) @AT@ 7523 @LENGTH@ 28
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationConverter @AT@ 7523 @LENGTH@ 4
------------------INS SimpleName@@authenticationConverter @TO@ FieldAccess@@this.authenticationConverter @AT@ 7528 @LENGTH@ 23
---------------INS SimpleName@@MethodName:apply:[any()] @TO@ MethodInvocation@@this.authenticationConverter.apply(any()) @AT@ 7552 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:apply:[any()] @AT@ 7558 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[authentication] @TO@ MethodInvocation@@when(this.authenticationConverter.apply(any())).thenReturn(authentication) @AT@ 7566 @LENGTH@ 26
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:thenReturn:[authentication] @AT@ 7577 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:when(this.authenticationManager.authenticate(any())).thenReturn(Mono.empty()) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7596 @LENGTH@ 78
------INS MethodInvocation@@when(this.authenticationManager.authenticate(any())).thenReturn(Mono.empty()) @TO@ ExpressionStatement@@MethodInvocation:when(this.authenticationManager.authenticate(any())).thenReturn(Mono.empty()) @AT@ 7596 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:when:[this.authenticationManager.authenticate(any())] @TO@ MethodInvocation@@when(this.authenticationManager.authenticate(any())).thenReturn(Mono.empty()) @AT@ 7596 @LENGTH@ 52
------------INS MethodInvocation@@this.authenticationManager.authenticate(any()) @TO@ MethodInvocation@@MethodName:when:[this.authenticationManager.authenticate(any())] @AT@ 7601 @LENGTH@ 46
---------------INS FieldAccess@@this.authenticationManager @TO@ MethodInvocation@@this.authenticationManager.authenticate(any()) @AT@ 7601 @LENGTH@ 26
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationManager @AT@ 7601 @LENGTH@ 4
------------------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.authenticationManager @AT@ 7606 @LENGTH@ 21
---------------INS SimpleName@@MethodName:authenticate:[any()] @TO@ MethodInvocation@@this.authenticationManager.authenticate(any()) @AT@ 7628 @LENGTH@ 19
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:authenticate:[any()] @AT@ 7641 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[Mono.empty()] @TO@ MethodInvocation@@when(this.authenticationManager.authenticate(any())).thenReturn(Mono.empty()) @AT@ 7649 @LENGTH@ 24
------------INS MethodInvocation@@Mono.empty() @TO@ SimpleName@@MethodName:thenReturn:[Mono.empty()] @AT@ 7660 @LENGTH@ 12
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 7660 @LENGTH@ 4
---------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 7665 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(this.filter).build(); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7678 @LENGTH@ 92
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(this.filter).build(); @AT@ 7678 @LENGTH@ 13
------INS VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(this.filter).build() @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(this.filter).build(); @AT@ 7692 @LENGTH@ 77
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(this.filter).build() @AT@ 7692 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(this.filter).build() @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(this.filter).build() @AT@ 7701 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:bindToWebFilters:[this.filter] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(this.filter).build() @AT@ 7701 @LENGTH@ 55
---------------INS FieldAccess@@this.filter @TO@ MethodInvocation@@MethodName:bindToWebFilters:[this.filter] @AT@ 7744 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 7744 @LENGTH@ 4
------------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 7749 @LENGTH@ 6
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(this.filter).build() @AT@ 7701 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(this.filter).build() @AT@ 7762 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7774 @LENGTH@ 115
------INS MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @TO@ ExpressionStatement@@MethodInvocation:client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 114
---------INS MethodInvocation@@MethodName:expectBody:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 104
---------INS MethodInvocation@@MethodName:is5xxServerError:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 67
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:uri:["/"] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 31
------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:uri:["/"] @AT@ 7801 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 17
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7774 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@client.get().uri("/").exchange().expectStatus().is5xxServerError().expectBody().isEmpty() @AT@ 7879 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:verify(this.securityContextRepository,never()).save(any(),any()) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7893 @LENGTH@ 67
------INS MethodInvocation@@verify(this.securityContextRepository,never()).save(any(),any()) @TO@ ExpressionStatement@@MethodInvocation:verify(this.securityContextRepository,never()).save(any(),any()) @AT@ 7893 @LENGTH@ 66
---------INS MethodInvocation@@MethodName:verify:[this.securityContextRepository, never()] @TO@ MethodInvocation@@verify(this.securityContextRepository,never()).save(any(),any()) @AT@ 7893 @LENGTH@ 47
------------INS FieldAccess@@this.securityContextRepository @TO@ MethodInvocation@@MethodName:verify:[this.securityContextRepository, never()] @AT@ 7900 @LENGTH@ 30
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.securityContextRepository @AT@ 7900 @LENGTH@ 4
---------------INS SimpleName@@securityContextRepository @TO@ FieldAccess@@this.securityContextRepository @AT@ 7905 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:never:[] @TO@ MethodInvocation@@MethodName:verify:[this.securityContextRepository, never()] @AT@ 7932 @LENGTH@ 7
---------INS SimpleName@@MethodName:save:[any(), any()] @TO@ MethodInvocation@@verify(this.securityContextRepository,never()).save(any(),any()) @AT@ 7941 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:save:[any(), any()] @AT@ 7946 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:save:[any(), any()] @AT@ 7953 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.successHandler,this.failureHandler) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenConvertAndAuthenticationEmptyThenServerError,  @AT@ 7963 @LENGTH@ 65
------INS MethodInvocation@@verifyZeroInteractions(this.successHandler,this.failureHandler) @TO@ ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.successHandler,this.failureHandler) @AT@ 7963 @LENGTH@ 64
---------INS SimpleName@@MethodName:verifyZeroInteractions:[this.successHandler, this.failureHandler] @TO@ MethodInvocation@@verifyZeroInteractions(this.successHandler,this.failureHandler) @AT@ 7963 @LENGTH@ 64
------------INS FieldAccess@@this.successHandler @TO@ SimpleName@@MethodName:verifyZeroInteractions:[this.successHandler, this.failureHandler] @AT@ 7986 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.successHandler @AT@ 7986 @LENGTH@ 4
---------------INS SimpleName@@successHandler @TO@ FieldAccess@@this.successHandler @AT@ 7991 @LENGTH@ 14
------------INS FieldAccess@@this.failureHandler @TO@ SimpleName@@MethodName:verifyZeroInteractions:[this.successHandler, this.failureHandler] @AT@ 8007 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.failureHandler @AT@ 8007 @LENGTH@ 4
---------------INS SimpleName@@failureHandler @TO@ FieldAccess@@this.failureHandler @AT@ 8012 @LENGTH@ 14


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 2344 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 2344 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2348 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 2348 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("NTFS ADS separator (':') in filename is forbidden.",e.getMessage()) @TO@ MethodInvocation:assertEquals("NTFS ADS separator (':') in file name is forbidden.",e.getMessage()) @AT@ 37854 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals("NTFS ADS separator (':') in filename is forbidden.",e.getMessage()) @TO@ assertEquals("NTFS ADS separator (':') in file name is forbidden.",e.getMessage()) @AT@ 37854 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:["NTFS ADS separator (':') in filename is forbidden.", e.getMessage()] @TO@ MethodName:assertEquals:["NTFS ADS separator (':') in file name is forbidden.", e.getMessage()] @AT@ 37854 @LENGTH@ 82
---------UPD StringLiteral@@"NTFS ADS separator (':') in filename is forbidden." @TO@ "NTFS ADS separator (':') in file name is forbidden." @AT@ 37867 @LENGTH@ 52


UPD ExpressionStatement@@MethodInvocation:checkAndPrepare(request,response,false) @TO@ MethodInvocation:prepareResponse(response) @AT@ 8488 @LENGTH@ 42
---UPD MethodInvocation@@checkAndPrepare(request,response,false) @TO@ prepareResponse(response) @AT@ 8488 @LENGTH@ 41
------UPD SimpleName@@MethodName:checkAndPrepare:[request, response, false] @TO@ MethodName:prepareResponse:[response] @AT@ 8488 @LENGTH@ 41
---------DEL SimpleName@@request @AT@ 8504 @LENGTH@ 7
---------DEL BooleanLiteral@@false @AT@ 8523 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ MethodDeclaration@@private, S3Configuration, MethodName:getS3ConfigurationNoEncryption,  @AT@ 2613 @LENGTH@ 58
---INS MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2613 @LENGTH@ 57
------INS MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2613 @LENGTH@ 33
---------INS MethodInvocation@@s3Configuration.getRegion() @TO@ MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @AT@ 2618 @LENGTH@ 27
------------INS SimpleName@@Name:s3Configuration @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2618 @LENGTH@ 15
------------INS SimpleName@@MethodName:getRegion:[] @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2634 @LENGTH@ 11
------INS SimpleName@@MethodName:thenReturn:["US_EAST_1"] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2647 @LENGTH@ 23
---------INS StringLiteral@@"US_EAST_1" @TO@ SimpleName@@MethodName:thenReturn:["US_EAST_1"] @AT@ 2658 @LENGTH@ 11


INS ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @TO@ MethodDeclaration@@public, CommandResult, MethodName:execute, CLICommandInvocation commandInvocation, CommandException, InterruptedException,  @AT@ 7390 @LENGTH@ 189
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @AT@ 7395 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7395 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7399 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 7399 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 7403 @LENGTH@ 1
---INS InfixExpression@@i < command.size() @TO@ ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @AT@ 7406 @LENGTH@ 18
------INS SimpleName@@i @TO@ InfixExpression@@i < command.size() @AT@ 7406 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < command.size() @AT@ 7407 @LENGTH@ 1
------INS MethodInvocation@@command.size() @TO@ InfixExpression@@i < command.size() @AT@ 7410 @LENGTH@ 14
---------INS SimpleName@@Name:command @TO@ MethodInvocation@@command.size() @AT@ 7410 @LENGTH@ 7
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@command.size() @AT@ 7418 @LENGTH@ 6
---INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @AT@ 7426 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 7426 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 7428 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:builder.append(command.get(i)) @TO@ ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @AT@ 7445 @LENGTH@ 31
------INS MethodInvocation@@builder.append(command.get(i)) @TO@ ExpressionStatement@@MethodInvocation:builder.append(command.get(i)) @AT@ 7445 @LENGTH@ 30
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.append(command.get(i)) @AT@ 7445 @LENGTH@ 7
---------INS SimpleName@@MethodName:append:[command.get(i)] @TO@ MethodInvocation@@builder.append(command.get(i)) @AT@ 7453 @LENGTH@ 22
------------INS MethodInvocation@@command.get(i) @TO@ SimpleName@@MethodName:append:[command.get(i)] @AT@ 7460 @LENGTH@ 14
---------------INS SimpleName@@Name:command @TO@ MethodInvocation@@command.get(i) @AT@ 7460 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@command.get(i) @AT@ 7468 @LENGTH@ 6
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:get:[i] @AT@ 7472 @LENGTH@ 1
---INS IfStatement@@if (i < command.size() - 1) {  builder.append(" ");} @TO@ ForStatement@@for (int i=0; i < command.size(); i++) {  builder.append(command.get(i));  if (i < command.size() - 1) {    builder.append(" ");  }} @AT@ 7489 @LENGTH@ 80
------INS InfixExpression@@i < command.size() - 1 @TO@ IfStatement@@if (i < command.size() - 1) {  builder.append(" ");} @AT@ 7493 @LENGTH@ 22
---------INS SimpleName@@i @TO@ InfixExpression@@i < command.size() - 1 @AT@ 7493 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < command.size() - 1 @AT@ 7494 @LENGTH@ 1
---------INS InfixExpression@@command.size() - 1 @TO@ InfixExpression@@i < command.size() - 1 @AT@ 7497 @LENGTH@ 18
------------INS MethodInvocation@@command.size() @TO@ InfixExpression@@command.size() - 1 @AT@ 7497 @LENGTH@ 14
---------------INS SimpleName@@Name:command @TO@ MethodInvocation@@command.size() @AT@ 7497 @LENGTH@ 7
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@command.size() @AT@ 7505 @LENGTH@ 6
------------INS Operator@@- @TO@ InfixExpression@@command.size() - 1 @AT@ 7511 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@command.size() - 1 @AT@ 7514 @LENGTH@ 1
------INS Block@@ThenBody:{  builder.append(" ");} @TO@ IfStatement@@if (i < command.size() - 1) {  builder.append(" ");} @AT@ 7517 @LENGTH@ 52
---------INS ExpressionStatement@@MethodInvocation:builder.append(" ") @TO@ Block@@ThenBody:{  builder.append(" ");} @AT@ 7535 @LENGTH@ 20
------------MOV MethodInvocation@@builder.append(s).append(" ") @TO@ ExpressionStatement@@MethodInvocation:builder.append(" ") @AT@ 7429 @LENGTH@ 29
---------------DEL MethodInvocation@@MethodName:append:[s] @AT@ 7429 @LENGTH@ 17
------------------DEL SimpleName@@s @AT@ 7444 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:mock.message(0).body().matches().xpath("/foo/text() = 'Hello World'") @TO@ MethodInvocation:mock.message(0).predicate().xpath("/foo/text() = 'Hello World'") @AT@ 1633 @LENGTH@ 70
---UPD MethodInvocation@@mock.message(0).body().matches().xpath("/foo/text() = 'Hello World'") @TO@ mock.message(0).predicate().xpath("/foo/text() = 'Hello World'") @AT@ 1633 @LENGTH@ 69
------DEL MethodInvocation@@MethodName:matches:[] @AT@ 1633 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:body:[] @TO@ MethodName:predicate:[] @AT@ 1633 @LENGTH@ 22


UPD VariableDeclarationStatement@@TransitionCriteria actionChain=TransitionCriteriaChain.criteriaChainFor(null); @TO@ TransitionCriteria actionChain=TransitionCriteriaChain.criteriaChainFor((Action[])null); @AT@ 2572 @LENGTH@ 80
---UPD VariableDeclarationFragment@@actionChain=TransitionCriteriaChain.criteriaChainFor(null) @TO@ actionChain=TransitionCriteriaChain.criteriaChainFor((Action[])null) @AT@ 2591 @LENGTH@ 60
------UPD MethodInvocation@@TransitionCriteriaChain.criteriaChainFor(null) @TO@ TransitionCriteriaChain.criteriaChainFor((Action[])null) @AT@ 2605 @LENGTH@ 46
---------UPD SimpleName@@MethodName:criteriaChainFor:[null] @TO@ MethodName:criteriaChainFor:[(Action[])null] @AT@ 2629 @LENGTH@ 22
------------INS CastExpression@@(Action[])null @TO@ SimpleName@@MethodName:criteriaChainFor:[null] @AT@ 2646 @LENGTH@ 15
---------------INS ArrayType@@Action[] @TO@ CastExpression@@(Action[])null @AT@ 2647 @LENGTH@ 8
------------------INS SimpleType@@Action @TO@ ArrayType@@Action[] @AT@ 2647 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ CastExpression@@(Action[])null @AT@ 2657 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 2646 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setContentTranserEncoding, final Header contentTransferEncoding,  @TO@ public, void, MethodName:setContentTransferEncoding, final Header contentTransferEncoding,  @AT@ 4902 @LENGTH@ 333
---UPD SimpleName@@MethodName:setContentTranserEncoding @TO@ MethodName:setContentTransferEncoding @AT@ 4914 @LENGTH@ 25


UPD MethodDeclaration@@public, void, MethodName:testWriteItemsTestRepsositoryMethodIs, Exception,  @TO@ public, void, MethodName:testWriteItemsTestRepositoryMethodIs, Exception,  @AT@ 2833 @LENGTH@ 594
---UPD SimpleName@@MethodName:testWriteItemsTestRepsositoryMethodIs @TO@ MethodName:testWriteItemsTestRepositoryMethodIs @AT@ 2845 @LENGTH@ 37


DEL IfStatement@@if (this.defaultConnectionFactory instanceof DisposableBean) {  ((DisposableBean)this.defaultConnectionFactory).destroy();} @AT@ 13919 @LENGTH@ 129
---DEL InstanceofExpression@@this.defaultConnectionFactory instanceof DisposableBean @AT@ 13923 @LENGTH@ 55
------DEL FieldAccess@@this.defaultConnectionFactory @AT@ 13923 @LENGTH@ 29
---------DEL ThisExpression@@this @AT@ 13923 @LENGTH@ 4
---------DEL SimpleName@@defaultConnectionFactory @AT@ 13928 @LENGTH@ 24
------DEL Instanceof@@instanceof @AT@ 13953 @LENGTH@ 10
------DEL SimpleType@@DisposableBean @AT@ 13964 @LENGTH@ 14
---DEL Block@@ThenBody:{  ((DisposableBean)this.defaultConnectionFactory).destroy();} @AT@ 13980 @LENGTH@ 68
------DEL ExpressionStatement@@MethodInvocation:((DisposableBean)this.defaultConnectionFactory).destroy() @AT@ 13985 @LENGTH@ 59
---------DEL MethodInvocation@@((DisposableBean)this.defaultConnectionFactory).destroy() @AT@ 13985 @LENGTH@ 58
------------DEL ParenthesizedExpression@@((DisposableBean)this.defaultConnectionFactory) @AT@ 13985 @LENGTH@ 48
---------------DEL CastExpression@@(DisposableBean)this.defaultConnectionFactory @AT@ 13986 @LENGTH@ 46
------------------DEL SimpleType@@DisposableBean @AT@ 13987 @LENGTH@ 14
------------------DEL FieldAccess@@this.defaultConnectionFactory @AT@ 14003 @LENGTH@ 29
---------------------DEL ThisExpression@@this @AT@ 14003 @LENGTH@ 4
---------------------DEL SimpleName@@defaultConnectionFactory @AT@ 14008 @LENGTH@ 24
------------DEL SimpleName@@MethodName:destroy:[] @AT@ 14034 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:PartitionSpecWithSharedSDProxy, PartitionSpec partitionSpec,  @TO@ public, voidMethodName:PartitionSpecWithSharedSDProxy, PartitionSpec partitionSpec, MetaException,  @AT@ 1597 @LENGTH@ 167
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@public, voidMethodName:PartitionSpecWithSharedSDProxy, PartitionSpec partitionSpec,  @AT@ 1671 @LENGTH@ 13
---INS IfStatement@@if (partitionSpec.getSharedSDPartitionSpec().getSd() == null) {  throw new MetaException("The shared storage descriptor must be set.");} @TO@ MethodDeclaration@@public, voidMethodName:PartitionSpecWithSharedSDProxy, PartitionSpec partitionSpec,  @AT@ 1746 @LENGTH@ 146
------INS InfixExpression@@partitionSpec.getSharedSDPartitionSpec().getSd() == null @TO@ IfStatement@@if (partitionSpec.getSharedSDPartitionSpec().getSd() == null) {  throw new MetaException("The shared storage descriptor must be set.");} @AT@ 1750 @LENGTH@ 56
---------INS MethodInvocation@@partitionSpec.getSharedSDPartitionSpec().getSd() @TO@ InfixExpression@@partitionSpec.getSharedSDPartitionSpec().getSd() == null @AT@ 1750 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:getSharedSDPartitionSpec:[] @TO@ MethodInvocation@@partitionSpec.getSharedSDPartitionSpec().getSd() @AT@ 1750 @LENGTH@ 40
------------INS SimpleName@@Name:partitionSpec @TO@ MethodInvocation@@partitionSpec.getSharedSDPartitionSpec().getSd() @AT@ 1750 @LENGTH@ 13
------------INS SimpleName@@MethodName:getSd:[] @TO@ MethodInvocation@@partitionSpec.getSharedSDPartitionSpec().getSd() @AT@ 1791 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@partitionSpec.getSharedSDPartitionSpec().getSd() == null @AT@ 1798 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@partitionSpec.getSharedSDPartitionSpec().getSd() == null @AT@ 1802 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new MetaException("The shared storage descriptor must be set.");} @TO@ IfStatement@@if (partitionSpec.getSharedSDPartitionSpec().getSd() == null) {  throw new MetaException("The shared storage descriptor must be set.");} @AT@ 1808 @LENGTH@ 84
---------INS ThrowStatement@@ClassInstanceCreation:new MetaException("The shared storage descriptor must be set.") @TO@ Block@@ThenBody:{  throw new MetaException("The shared storage descriptor must be set.");} @AT@ 1816 @LENGTH@ 70
------------INS ClassInstanceCreation@@MetaException["The shared storage descriptor must be set."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("The shared storage descriptor must be set.") @AT@ 1822 @LENGTH@ 63
---------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["The shared storage descriptor must be set."] @AT@ 1822 @LENGTH@ 3
---------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["The shared storage descriptor must be set."] @AT@ 1826 @LENGTH@ 13
---------------INS StringLiteral@@"The shared storage descriptor must be set." @TO@ ClassInstanceCreation@@MetaException["The shared storage descriptor must be set."] @AT@ 1840 @LENGTH@ 44


UPD MethodDeclaration@@public, HealthCheckRepository, MethodName:routesHealthCheckRepository,  @TO@ public, HealthCheckRepository, MethodName:routesHealthCheckRepository, HealthCheckRoutesConfiguration configuration,  @AT@ 2305 @LENGTH@ 6326
---INS SingleVariableDeclaration@@HealthCheckRoutesConfiguration configuration @TO@ MethodDeclaration@@public, HealthCheckRepository, MethodName:routesHealthCheckRepository,  @AT@ 2226 @LENGTH@ 44
------INS SimpleType@@HealthCheckRoutesConfiguration @TO@ SingleVariableDeclaration@@HealthCheckRoutesConfiguration configuration @AT@ 2226 @LENGTH@ 30
------INS SimpleName@@configuration @TO@ SingleVariableDeclaration@@HealthCheckRoutesConfiguration configuration @AT@ 2257 @LENGTH@ 13


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelSpringBootExecutionListener.class)] @TO@ TypeDeclaration@@[public]CamelSpringBootExecutionListener, AbstractTestExecutionListener @AT@ 1242 @LENGTH@ 98


INS MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @TO@ TypeDeclaration@@[public]JsonSchemaProperty, [JsonSchemaObject] @AT@ 8673 @LENGTH@ 152
---INS Modifier@@static @TO@ MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @AT@ 8673 @LENGTH@ 6
---INS SimpleType@@TimestampJsonSchemaProperty @TO@ MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @AT@ 8680 @LENGTH@ 27
---INS SimpleName@@MethodName:timestamp @TO@ MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @AT@ 8708 @LENGTH@ 9
---INS SingleVariableDeclaration@@String identifier @TO@ MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @AT@ 8718 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String identifier @AT@ 8718 @LENGTH@ 6
------INS SimpleName@@identifier @TO@ SingleVariableDeclaration@@String identifier @AT@ 8725 @LENGTH@ 10
---INS ReturnStatement@@ClassInstanceCreation:new TimestampJsonSchemaProperty(identifier,JsonSchemaObject.timestamp()) @TO@ MethodDeclaration@@static, TimestampJsonSchemaProperty, MethodName:timestamp, String identifier,  @AT@ 8741 @LENGTH@ 81
------INS ClassInstanceCreation@@TimestampJsonSchemaProperty[identifier, JsonSchemaObject.timestamp()] @TO@ ReturnStatement@@ClassInstanceCreation:new TimestampJsonSchemaProperty(identifier,JsonSchemaObject.timestamp()) @AT@ 8748 @LENGTH@ 73
---------INS New@@new @TO@ ClassInstanceCreation@@TimestampJsonSchemaProperty[identifier, JsonSchemaObject.timestamp()] @AT@ 8748 @LENGTH@ 3
---------INS SimpleType@@TimestampJsonSchemaProperty @TO@ ClassInstanceCreation@@TimestampJsonSchemaProperty[identifier, JsonSchemaObject.timestamp()] @AT@ 8752 @LENGTH@ 27
---------INS SimpleName@@identifier @TO@ ClassInstanceCreation@@TimestampJsonSchemaProperty[identifier, JsonSchemaObject.timestamp()] @AT@ 8780 @LENGTH@ 10
---------INS MethodInvocation@@JsonSchemaObject.timestamp() @TO@ ClassInstanceCreation@@TimestampJsonSchemaProperty[identifier, JsonSchemaObject.timestamp()] @AT@ 8792 @LENGTH@ 28
------------INS SimpleName@@Name:JsonSchemaObject @TO@ MethodInvocation@@JsonSchemaObject.timestamp() @AT@ 8792 @LENGTH@ 16
------------INS SimpleName@@MethodName:timestamp:[] @TO@ MethodInvocation@@JsonSchemaObject.timestamp() @AT@ 8809 @LENGTH@ 11


UPD TryStatement@@try {  cause=null;  done=true;  if (isRunAllowed()) {    if (retryCounter == -1) {      LOG.trace("Starting to poll: {}",this.getEndpoint());    } else {      LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());    }    boolean begin=pollStrategy.begin(this,getEndpoint());    if (begin) {      retryCounter++;      polledMessages=getConsumer().poll();      LOG.trace("Polled {} messages",polledMessages);      if (polledMessages == 0 && sendEmptyMessageWhenIdle) {        processEmptyMessage();      } else       if (polledMessages == 0 && timeout > 0) {        done=false;      }      pollStrategy.commit(this,getEndpoint(),polledMessages);    } else {      LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);    }  }  LOG.trace("Finished polling: {}",this.getEndpoint());} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    } else {      cause=e;      done=true;    }  } catch (  Throwable t) {    cause=t;    done=true;  }}catch (Throwable t) {  cause=t;  done=true;} @TO@ try {  cause=null;  done=true;  if (isRunAllowed()) {    if (retryCounter == -1) {      LOG.trace("Starting to poll: {}",this.getEndpoint());    } else {      LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());    }    boolean begin=pollStrategy.begin(getConsumer(),getEndpoint());    if (begin) {      retryCounter++;      polledMessages=getConsumer().poll();      LOG.trace("Polled {} messages",polledMessages);      if (polledMessages == 0 && sendEmptyMessageWhenIdle) {        processEmptyMessage();      } else       if (polledMessages == 0 && timeout > 0) {        done=false;      }      pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages);    } else {      LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);    }  }  LOG.trace("Finished polling: {}",this.getEndpoint());} catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e);    if (retry) {      done=false;    } else {      cause=e;      done=true;    }  } catch (  Throwable t) {    cause=t;    done=true;  }}catch (Throwable t) {  cause=t;  done=true;} @AT@ 4369 @LENGTH@ 2203
---UPD IfStatement@@if (isRunAllowed()) {  if (retryCounter == -1) {    LOG.trace("Starting to poll: {}",this.getEndpoint());  } else {    LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());  }  boolean begin=pollStrategy.begin(this,getEndpoint());  if (begin) {    retryCounter++;    polledMessages=getConsumer().poll();    LOG.trace("Polled {} messages",polledMessages);    if (polledMessages == 0 && sendEmptyMessageWhenIdle) {      processEmptyMessage();    } else     if (polledMessages == 0 && timeout > 0) {      done=false;    }    pollStrategy.commit(this,getEndpoint(),polledMessages);  } else {    LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);  }} @TO@ if (isRunAllowed()) {  if (retryCounter == -1) {    LOG.trace("Starting to poll: {}",this.getEndpoint());  } else {    LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());  }  boolean begin=pollStrategy.begin(getConsumer(),getEndpoint());  if (begin) {    retryCounter++;    polledMessages=getConsumer().poll();    LOG.trace("Polled {} messages",polledMessages);    if (polledMessages == 0 && sendEmptyMessageWhenIdle) {      processEmptyMessage();    } else     if (polledMessages == 0 && timeout > 0) {      done=false;    }    pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages);  } else {    LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);  }} @AT@ 4494 @LENGTH@ 1373
------UPD Block@@ThenBody:{  if (retryCounter == -1) {    LOG.trace("Starting to poll: {}",this.getEndpoint());  } else {    LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());  }  boolean begin=pollStrategy.begin(this,getEndpoint());  if (begin) {    retryCounter++;    polledMessages=getConsumer().poll();    LOG.trace("Polled {} messages",polledMessages);    if (polledMessages == 0 && sendEmptyMessageWhenIdle) {      processEmptyMessage();    } else     if (polledMessages == 0 && timeout > 0) {      done=false;    }    pollStrategy.commit(this,getEndpoint(),polledMessages);  } else {    LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);  }} @TO@ ThenBody:{  if (retryCounter == -1) {    LOG.trace("Starting to poll: {}",this.getEndpoint());  } else {    LOG.debug("Retrying attempt {} to poll: {}",retryCounter,this.getEndpoint());  }  boolean begin=pollStrategy.begin(getConsumer(),getEndpoint());  if (begin) {    retryCounter++;    polledMessages=getConsumer().poll();    LOG.trace("Polled {} messages",polledMessages);    if (polledMessages == 0 && sendEmptyMessageWhenIdle) {      processEmptyMessage();    } else     if (polledMessages == 0 && timeout > 0) {      done=false;    }    pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages);  } else {    LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);  }} @AT@ 4514 @LENGTH@ 1353
---------UPD VariableDeclarationStatement@@boolean begin=pollStrategy.begin(this,getEndpoint()); @TO@ boolean begin=pollStrategy.begin(getConsumer(),getEndpoint()); @AT@ 4909 @LENGTH@ 56
------------UPD VariableDeclarationFragment@@begin=pollStrategy.begin(this,getEndpoint()) @TO@ begin=pollStrategy.begin(getConsumer(),getEndpoint()) @AT@ 4917 @LENGTH@ 47
---------------UPD MethodInvocation@@pollStrategy.begin(this,getEndpoint()) @TO@ pollStrategy.begin(getConsumer(),getEndpoint()) @AT@ 4925 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:begin:[this, getEndpoint()] @TO@ MethodName:begin:[getConsumer(), getEndpoint()] @AT@ 4938 @LENGTH@ 26
---------------------INS MethodInvocation@@MethodName:getConsumer:[] @TO@ SimpleName@@MethodName:begin:[this, getEndpoint()] @AT@ 4944 @LENGTH@ 13
---------------------DEL ThisExpression@@this @AT@ 4944 @LENGTH@ 4
---------UPD IfStatement@@if (begin) {  retryCounter++;  polledMessages=getConsumer().poll();  LOG.trace("Polled {} messages",polledMessages);  if (polledMessages == 0 && sendEmptyMessageWhenIdle) {    processEmptyMessage();  } else   if (polledMessages == 0 && timeout > 0) {    done=false;  }  pollStrategy.commit(this,getEndpoint(),polledMessages);} else {  LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);} @TO@ if (begin) {  retryCounter++;  polledMessages=getConsumer().poll();  LOG.trace("Polled {} messages",polledMessages);  if (polledMessages == 0 && sendEmptyMessageWhenIdle) {    processEmptyMessage();  } else   if (polledMessages == 0 && timeout > 0) {    done=false;  }  pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages);} else {  LOG.debug("Cannot begin polling as pollStrategy returned false: {}",pollStrategy);} @AT@ 4986 @LENGTH@ 863
------------UPD Block@@ThenBody:{  retryCounter++;  polledMessages=getConsumer().poll();  LOG.trace("Polled {} messages",polledMessages);  if (polledMessages == 0 && sendEmptyMessageWhenIdle) {    processEmptyMessage();  } else   if (polledMessages == 0 && timeout > 0) {    done=false;  }  pollStrategy.commit(this,getEndpoint(),polledMessages);} @TO@ ThenBody:{  retryCounter++;  polledMessages=getConsumer().poll();  LOG.trace("Polled {} messages",polledMessages);  if (polledMessages == 0 && sendEmptyMessageWhenIdle) {    processEmptyMessage();  } else   if (polledMessages == 0 && timeout > 0) {    done=false;  }  pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages);} @AT@ 4997 @LENGTH@ 715
---------------UPD ExpressionStatement@@MethodInvocation:pollStrategy.commit(this,getEndpoint(),polledMessages) @TO@ MethodInvocation:pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages) @AT@ 5633 @LENGTH@ 57
------------------UPD MethodInvocation@@pollStrategy.commit(this,getEndpoint(),polledMessages) @TO@ pollStrategy.commit(getConsumer(),getEndpoint(),polledMessages) @AT@ 5633 @LENGTH@ 56
---------------------UPD SimpleName@@MethodName:commit:[this, getEndpoint(), polledMessages] @TO@ MethodName:commit:[getConsumer(), getEndpoint(), polledMessages] @AT@ 5646 @LENGTH@ 43
------------------------DEL ThisExpression@@this @AT@ 5653 @LENGTH@ 4
------------------------INS MethodInvocation@@MethodName:getConsumer:[] @TO@ SimpleName@@MethodName:commit:[this, getEndpoint(), polledMessages] @AT@ 5662 @LENGTH@ 13
---UPD CatchClause@@catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);    if (retry) {      done=false;    } else {      cause=e;      done=true;    }  } catch (  Throwable t) {    cause=t;    done=true;  }} @TO@ catch (Exception e) {  try {    boolean retry=pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e);    if (retry) {      done=false;    } else {      cause=e;      done=true;    }  } catch (  Throwable t) {    cause=t;    done=true;  }} @AT@ 5954 @LENGTH@ 526
------UPD TryStatement@@try {  boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e);  if (retry) {    done=false;  } else {    cause=e;    done=true;  }} catch (Throwable t) {  cause=t;  done=true;} @TO@ try {  boolean retry=pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e);  if (retry) {    done=false;  } else {    cause=e;    done=true;  }} catch (Throwable t) {  cause=t;  done=true;} @AT@ 5992 @LENGTH@ 474
---------UPD VariableDeclarationStatement@@boolean retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e); @TO@ boolean retry=pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e); @AT@ 6018 @LENGTH@ 76
------------UPD VariableDeclarationFragment@@retry=pollStrategy.rollback(this,getEndpoint(),retryCounter,e) @TO@ retry=pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e) @AT@ 6026 @LENGTH@ 67
---------------UPD MethodInvocation@@pollStrategy.rollback(this,getEndpoint(),retryCounter,e) @TO@ pollStrategy.rollback(getConsumer(),getEndpoint(),retryCounter,e) @AT@ 6034 @LENGTH@ 59
------------------UPD SimpleName@@MethodName:rollback:[this, getEndpoint(), retryCounter, e] @TO@ MethodName:rollback:[getConsumer(), getEndpoint(), retryCounter, e] @AT@ 6047 @LENGTH@ 46
---------------------DEL ThisExpression@@this @AT@ 6056 @LENGTH@ 4
---------------------INS MethodInvocation@@MethodName:getConsumer:[] @TO@ SimpleName@@MethodName:rollback:[this, getEndpoint(), retryCounter, e] @AT@ 6074 @LENGTH@ 13


UPD IfStatement@@if (document instanceof DOMSource) {  DOMSource source=(DOMSource)document;  answer=(NodeList)xpathExpression.evaluate(source.getNode(),XPathConstants.NODESET);} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ if (document instanceof DOMSource) {  DOMSource source=(DOMSource)document;  answer=(NodeList)xpathExpression.evaluate(source.getNode(),XPathConstants.NODESET);} else if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31389 @LENGTH@ 328
---INS Block@@ElseBody:if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ IfStatement@@if (document instanceof DOMSource) {  DOMSource source=(DOMSource)document;  answer=(NodeList)xpathExpression.evaluate(source.getNode(),XPathConstants.NODESET);} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31648 @LENGTH@ 577
------INS IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ Block@@ElseBody:if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31648 @LENGTH@ 577
---------MOV Block@@ElseBody:{  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31606 @LENGTH@ 111
---------INS InstanceofExpression@@document instanceof SAXSource @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31652 @LENGTH@ 29
------------INS SimpleName@@document @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31652 @LENGTH@ 8
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31661 @LENGTH@ 10
------------INS SimpleType@@SAXSource @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31672 @LENGTH@ 9
---------INS Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31683 @LENGTH@ 425
------------INS VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31701 @LENGTH@ 40
---------------INS SimpleType@@SAXSource @TO@ VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @AT@ 31701 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@source=(SAXSource)document @TO@ VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @AT@ 31711 @LENGTH@ 29
------------------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=(SAXSource)document @AT@ 31711 @LENGTH@ 6
------------------INS CastExpression@@(SAXSource)document @TO@ VariableDeclarationFragment@@source=(SAXSource)document @AT@ 31720 @LENGTH@ 20
---------------------INS SimpleType@@SAXSource @TO@ CastExpression@@(SAXSource)document @AT@ 31721 @LENGTH@ 9
---------------------INS SimpleName@@document @TO@ CastExpression@@(SAXSource)document @AT@ 31732 @LENGTH@ 8
------------INS VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31828 @LENGTH@ 90
---------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @AT@ 31828 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @TO@ VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @AT@ 31835 @LENGTH@ 82
------------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31835 @LENGTH@ 6
------------------INS MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @TO@ VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31844 @LENGTH@ 73
---------------------INS SimpleName@@Name:xpathExpression @TO@ MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31844 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @TO@ MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31860 @LENGTH@ 57
------------------------INS MethodInvocation@@source.getInputSource() @TO@ SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @AT@ 31869 @LENGTH@ 23
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getInputSource() @AT@ 31869 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getInputSource:[] @TO@ MethodInvocation@@source.getInputSource() @AT@ 31876 @LENGTH@ 16
------------------------INS QualifiedName@@XPathConstants.NODESET @TO@ SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @AT@ 31894 @LENGTH@ 22
---------------------------INS SimpleName@@XPathConstants @TO@ QualifiedName@@XPathConstants.NODESET @AT@ 31894 @LENGTH@ 14
---------------------------INS SimpleName@@NODESET @TO@ QualifiedName@@XPathConstants.NODESET @AT@ 31909 @LENGTH@ 7
------------INS IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31935 @LENGTH@ 159
---------------INS InstanceofExpression@@result instanceof NodeList @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 31939 @LENGTH@ 26
------------------INS SimpleName@@result @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31939 @LENGTH@ 6
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31946 @LENGTH@ 10
------------------INS SimpleType@@NodeList @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31957 @LENGTH@ 8
---------------INS Block@@ThenBody:{  answer=(NodeList)result;} @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 31967 @LENGTH@ 67
------------------INS ExpressionStatement@@Assignment:answer=(NodeList)result @TO@ Block@@ThenBody:{  answer=(NodeList)result;} @AT@ 31989 @LENGTH@ 27
---------------------INS Assignment@@answer=(NodeList)result @TO@ ExpressionStatement@@Assignment:answer=(NodeList)result @AT@ 31989 @LENGTH@ 26
------------------------INS SimpleName@@answer @TO@ Assignment@@answer=(NodeList)result @AT@ 31989 @LENGTH@ 6
------------------------INS Operator@@= @TO@ Assignment@@answer=(NodeList)result @AT@ 31995 @LENGTH@ 1
------------------------INS CastExpression@@(NodeList)result @TO@ Assignment@@answer=(NodeList)result @AT@ 31998 @LENGTH@ 17
---------------------------INS SimpleType@@NodeList @TO@ CastExpression@@(NodeList)result @AT@ 31999 @LENGTH@ 8
---------------------------INS SimpleName@@result @TO@ CastExpression@@(NodeList)result @AT@ 32009 @LENGTH@ 6
---------------INS Block@@ElseBody:{  answer=null;} @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 32040 @LENGTH@ 54
------------------INS ExpressionStatement@@Assignment:answer=null @TO@ Block@@ElseBody:{  answer=null;} @AT@ 32062 @LENGTH@ 14
---------------------INS Assignment@@answer=null @TO@ ExpressionStatement@@Assignment:answer=null @AT@ 32062 @LENGTH@ 13
------------------------INS SimpleName@@answer @TO@ Assignment@@answer=null @AT@ 32062 @LENGTH@ 6
------------------------INS Operator@@= @TO@ Assignment@@answer=null @AT@ 32068 @LENGTH@ 1
------------------------INS NullLiteral@@null @TO@ Assignment@@answer=null @AT@ 32071 @LENGTH@ 4
------INS IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ Block@@ElseBody:if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31648 @LENGTH@ 577
---------MOV Block@@ElseBody:{  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31606 @LENGTH@ 111
---------INS InstanceofExpression@@document instanceof SAXSource @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31652 @LENGTH@ 29
------------INS SimpleName@@document @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31652 @LENGTH@ 8
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31661 @LENGTH@ 10
------------INS SimpleType@@SAXSource @TO@ InstanceofExpression@@document instanceof SAXSource @AT@ 31672 @LENGTH@ 9
---------INS Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @TO@ IfStatement@@if (document instanceof SAXSource) {  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} else {  answer=(NodeList)xpathExpression.evaluate(document,XPathConstants.NODESET);} @AT@ 31683 @LENGTH@ 425
------------INS VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31701 @LENGTH@ 40
---------------INS SimpleType@@SAXSource @TO@ VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @AT@ 31701 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@source=(SAXSource)document @TO@ VariableDeclarationStatement@@SAXSource source=(SAXSource)document; @AT@ 31711 @LENGTH@ 29
------------------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=(SAXSource)document @AT@ 31711 @LENGTH@ 6
------------------INS CastExpression@@(SAXSource)document @TO@ VariableDeclarationFragment@@source=(SAXSource)document @AT@ 31720 @LENGTH@ 20
---------------------INS SimpleType@@SAXSource @TO@ CastExpression@@(SAXSource)document @AT@ 31721 @LENGTH@ 9
---------------------INS SimpleName@@document @TO@ CastExpression@@(SAXSource)document @AT@ 31732 @LENGTH@ 8
------------INS VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31828 @LENGTH@ 90
---------------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @AT@ 31828 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @TO@ VariableDeclarationStatement@@Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET); @AT@ 31835 @LENGTH@ 82
------------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31835 @LENGTH@ 6
------------------INS MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @TO@ VariableDeclarationFragment@@result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31844 @LENGTH@ 73
---------------------INS SimpleName@@Name:xpathExpression @TO@ MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31844 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @TO@ MethodInvocation@@xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET) @AT@ 31860 @LENGTH@ 57
------------------------INS MethodInvocation@@source.getInputSource() @TO@ SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @AT@ 31869 @LENGTH@ 23
---------------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getInputSource() @AT@ 31869 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getInputSource:[] @TO@ MethodInvocation@@source.getInputSource() @AT@ 31876 @LENGTH@ 16
------------------------INS QualifiedName@@XPathConstants.NODESET @TO@ SimpleName@@MethodName:evaluate:[source.getInputSource(), XPathConstants.NODESET] @AT@ 31894 @LENGTH@ 22
---------------------------INS SimpleName@@XPathConstants @TO@ QualifiedName@@XPathConstants.NODESET @AT@ 31894 @LENGTH@ 14
---------------------------INS SimpleName@@NODESET @TO@ QualifiedName@@XPathConstants.NODESET @AT@ 31909 @LENGTH@ 7
------------INS IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @TO@ Block@@ThenBody:{  SAXSource source=(SAXSource)document;  Object result=xpathExpression.evaluate(source.getInputSource(),XPathConstants.NODESET);  if (result instanceof NodeList) {    answer=(NodeList)result;  } else {    answer=null;  }} @AT@ 31935 @LENGTH@ 159
---------------INS InstanceofExpression@@result instanceof NodeList @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 31939 @LENGTH@ 26
------------------INS SimpleName@@result @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31939 @LENGTH@ 6
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31946 @LENGTH@ 10
------------------INS SimpleType@@NodeList @TO@ InstanceofExpression@@result instanceof NodeList @AT@ 31957 @LENGTH@ 8
---------------INS Block@@ThenBody:{  answer=(NodeList)result;} @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 31967 @LENGTH@ 67
------------------INS ExpressionStatement@@Assignment:answer=(NodeList)result @TO@ Block@@ThenBody:{  answer=(NodeList)result;} @AT@ 31989 @LENGTH@ 27
---------------------INS Assignment@@answer=(NodeList)result @TO@ ExpressionStatement@@Assignment:answer=(NodeList)result @AT@ 31989 @LENGTH@ 26
------------------------INS SimpleName@@answer @TO@ Assignment@@answer=(NodeList)result @AT@ 31989 @LENGTH@ 6
------------------------INS Operator@@= @TO@ Assignment@@answer=(NodeList)result @AT@ 31995 @LENGTH@ 1
------------------------INS CastExpression@@(NodeList)result @TO@ Assignment@@answer=(NodeList)result @AT@ 31998 @LENGTH@ 17
---------------------------INS SimpleType@@NodeList @TO@ CastExpression@@(NodeList)result @AT@ 31999 @LENGTH@ 8
---------------------------INS SimpleName@@result @TO@ CastExpression@@(NodeList)result @AT@ 32009 @LENGTH@ 6
---------------INS Block@@ElseBody:{  answer=null;} @TO@ IfStatement@@if (result instanceof NodeList) {  answer=(NodeList)result;} else {  answer=null;} @AT@ 32040 @LENGTH@ 54
------------------INS ExpressionStatement@@Assignment:answer=null @TO@ Block@@ElseBody:{  answer=null;} @AT@ 32062 @LENGTH@ 14
---------------------INS Assignment@@answer=null @TO@ ExpressionStatement@@Assignment:answer=null @AT@ 32062 @LENGTH@ 13
------------------------INS SimpleName@@answer @TO@ Assignment@@answer=null @AT@ 32062 @LENGTH@ 6
------------------------INS Operator@@= @TO@ Assignment@@answer=null @AT@ 32068 @LENGTH@ 1
------------------------INS NullLiteral@@null @TO@ Assignment@@answer=null @AT@ 32071 @LENGTH@ 4


INS VariableDeclarationStatement@@AwaiterModelControllerClient aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient(); @TO@ MethodDeclaration@@private, void, MethodName:reload, CommandContext ctx, CommandException, OperationFormatException,  @AT@ 4203 @LENGTH@ 101
---INS SimpleType@@AwaiterModelControllerClient @TO@ VariableDeclarationStatement@@AwaiterModelControllerClient aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient(); @AT@ 4203 @LENGTH@ 28
---INS VariableDeclarationFragment@@aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient() @TO@ VariableDeclarationStatement@@AwaiterModelControllerClient aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient(); @AT@ 4232 @LENGTH@ 71
------INS SimpleName@@aclient @TO@ VariableDeclarationFragment@@aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient() @AT@ 4232 @LENGTH@ 7
------INS CastExpression@@(AwaiterModelControllerClient)ctx.getModelControllerClient() @TO@ VariableDeclarationFragment@@aclient=(AwaiterModelControllerClient)ctx.getModelControllerClient() @AT@ 4242 @LENGTH@ 61
---------INS SimpleType@@AwaiterModelControllerClient @TO@ CastExpression@@(AwaiterModelControllerClient)ctx.getModelControllerClient() @AT@ 4243 @LENGTH@ 28
---------INS MethodInvocation@@ctx.getModelControllerClient() @TO@ CastExpression@@(AwaiterModelControllerClient)ctx.getModelControllerClient() @AT@ 4273 @LENGTH@ 30
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 4273 @LENGTH@ 3
------------INS SimpleName@@MethodName:getModelControllerClient:[] @TO@ MethodInvocation@@ctx.getModelControllerClient() @AT@ 4277 @LENGTH@ 26


UPD TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  DispositionNotificationMultipartReportEntity dispositionNotificationMultipartReportEntity=new DispositionNotificationMultipartReportEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType textReportContentType=null;  String textReportContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      textReportContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  textReportContentTransferEncoding=header.getValue();break;default :continue;}}if (textReportContentType == null) {throw new HttpException("Failed to find Content-Type header in EDI message body part");}if (!textReportContentType.getMimeType().equalsIgnoreCase(AS2MimeType.TEXT_PLAIN)) {throw new HttpException("Invalid content type '" + textReportContentType.getMimeType() + "' for first body part of disposition notification");}String textReportCharsetName=textReportContentType.getCharset() == null ? AS2Charset.US_ASCII : textReportContentType.getCharset().name();TextPlainEntity textReportEntity=parseTextPlainEntityBody(inbuffer,boundary,textReportCharsetName,textReportContentTransferEncoding);textReportEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(textReportEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType dispositionNotificationContentType=null;String dispositionNotificationContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:dispositionNotificationContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:dispositionNotificationContentTransferEncoding=header.getValue();break;default :continue;}}if (dispositionNotificationContentType == null) {throw new HttpException("Failed to find Content-Type header in body part");}if (!dispositionNotificationContentType.getMimeType().equalsIgnoreCase(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION)) {throw new HttpException("Invalid content type '" + dispositionNotificationContentType.getMimeType() + "' for second body part of disposition notification");}String dispositionNotificationCharsetName=dispositionNotificationContentType.getCharset() == null ? AS2Charset.US_ASCII : dispositionNotificationContentType.getCharset().name();AS2MessageDispositionNotificationEntity messageDispositionNotificationEntity=parseMessageDispositionNotificationEntityBody(inbuffer,boundary,dispositionNotificationCharsetName,dispositionNotificationContentTransferEncoding);messageDispositionNotificationEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(messageDispositionNotificationEntity);return dispositionNotificationMultipartReportEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @TO@ try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  DispositionNotificationMultipartReportEntity dispositionNotificationMultipartReportEntity=new DispositionNotificationMultipartReportEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType textReportContentType=null;  String textReportContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      textReportContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  textReportContentTransferEncoding=header.getValue();break;default :continue;}}if (textReportContentType == null) {throw new HttpException("Failed to find Content-Type header in EDI message body part");}if (!textReportContentType.getMimeType().equalsIgnoreCase(AS2MimeType.TEXT_PLAIN)) {throw new HttpException("Invalid content type '" + textReportContentType.getMimeType() + "' for first body part of disposition notification");}String textReportCharsetName=textReportContentType.getCharset() == null ? AS2Charset.US_ASCII : textReportContentType.getCharset().name();TextPlainEntity textReportEntity=parseTextPlainEntityBody(inbuffer,boundary,textReportCharsetName,textReportContentTransferEncoding);textReportEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(textReportEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType dispositionNotificationContentType=null;String dispositionNotificationContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:dispositionNotificationContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:dispositionNotificationContentTransferEncoding=header.getValue();break;default :continue;}}if (dispositionNotificationContentType == null) {throw new HttpException("Failed to find Content-Type header in body part");}if (!dispositionNotificationContentType.getMimeType().equalsIgnoreCase(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION)) {throw new HttpException("Invalid content type '" + dispositionNotificationContentType.getMimeType() + "' for second body part of disposition notification");}String dispositionNotificationCharsetName=dispositionNotificationContentType.getCharset() == null ? AS2Charset.US_ASCII : dispositionNotificationContentType.getCharset().name();AS2MessageDispositionNotificationEntity messageDispositionNotificationEntity=parseMessageDispositionNotificationEntityBody(inbuffer,boundary,dispositionNotificationCharsetName,dispositionNotificationContentTransferEncoding);messageDispositionNotificationEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(messageDispositionNotificationEntity);ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset);dispositionNotificationMultipartReportEntity.setContentType(contentType);dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding);return dispositionNotificationMultipartReportEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 20015 @LENGTH@ 5284
---INS VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset); @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  DispositionNotificationMultipartReportEntity dispositionNotificationMultipartReportEntity=new DispositionNotificationMultipartReportEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType textReportContentType=null;  String textReportContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      textReportContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  textReportContentTransferEncoding=header.getValue();break;default :continue;}}if (textReportContentType == null) {throw new HttpException("Failed to find Content-Type header in EDI message body part");}if (!textReportContentType.getMimeType().equalsIgnoreCase(AS2MimeType.TEXT_PLAIN)) {throw new HttpException("Invalid content type '" + textReportContentType.getMimeType() + "' for first body part of disposition notification");}String textReportCharsetName=textReportContentType.getCharset() == null ? AS2Charset.US_ASCII : textReportContentType.getCharset().name();TextPlainEntity textReportEntity=parseTextPlainEntityBody(inbuffer,boundary,textReportCharsetName,textReportContentTransferEncoding);textReportEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(textReportEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType dispositionNotificationContentType=null;String dispositionNotificationContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:dispositionNotificationContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:dispositionNotificationContentTransferEncoding=header.getValue();break;default :continue;}}if (dispositionNotificationContentType == null) {throw new HttpException("Failed to find Content-Type header in body part");}if (!dispositionNotificationContentType.getMimeType().equalsIgnoreCase(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION)) {throw new HttpException("Invalid content type '" + dispositionNotificationContentType.getMimeType() + "' for second body part of disposition notification");}String dispositionNotificationCharsetName=dispositionNotificationContentType.getCharset() == null ? AS2Charset.US_ASCII : dispositionNotificationContentType.getCharset().name();AS2MessageDispositionNotificationEntity messageDispositionNotificationEntity=parseMessageDispositionNotificationEntityBody(inbuffer,boundary,dispositionNotificationCharsetName,dispositionNotificationContentTransferEncoding);messageDispositionNotificationEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(messageDispositionNotificationEntity);return dispositionNotificationMultipartReportEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 25200 @LENGTH@ 84
------INS SimpleType@@ContentType @TO@ VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset); @AT@ 25200 @LENGTH@ 11
------INS VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @TO@ VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset); @AT@ 25212 @LENGTH@ 71
---------INS SimpleName@@contentType @TO@ VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @AT@ 25212 @LENGTH@ 11
---------INS MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @TO@ VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @AT@ 25226 @LENGTH@ 57
------------INS SimpleName@@Name:ContentType @TO@ MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @AT@ 25226 @LENGTH@ 11
------------INS SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_REPORT, charset] @TO@ MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_REPORT,charset) @AT@ 25238 @LENGTH@ 45
---------------INS QualifiedName@@AS2MimeType.MULTIPART_REPORT @TO@ SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_REPORT, charset] @AT@ 25245 @LENGTH@ 28
------------------INS SimpleName@@AS2MimeType @TO@ QualifiedName@@AS2MimeType.MULTIPART_REPORT @AT@ 25245 @LENGTH@ 11
------------------INS SimpleName@@MULTIPART_REPORT @TO@ QualifiedName@@AS2MimeType.MULTIPART_REPORT @AT@ 25257 @LENGTH@ 16
---------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_REPORT, charset] @AT@ 25275 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:dispositionNotificationMultipartReportEntity.setContentType(contentType) @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  DispositionNotificationMultipartReportEntity dispositionNotificationMultipartReportEntity=new DispositionNotificationMultipartReportEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType textReportContentType=null;  String textReportContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      textReportContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  textReportContentTransferEncoding=header.getValue();break;default :continue;}}if (textReportContentType == null) {throw new HttpException("Failed to find Content-Type header in EDI message body part");}if (!textReportContentType.getMimeType().equalsIgnoreCase(AS2MimeType.TEXT_PLAIN)) {throw new HttpException("Invalid content type '" + textReportContentType.getMimeType() + "' for first body part of disposition notification");}String textReportCharsetName=textReportContentType.getCharset() == null ? AS2Charset.US_ASCII : textReportContentType.getCharset().name();TextPlainEntity textReportEntity=parseTextPlainEntityBody(inbuffer,boundary,textReportCharsetName,textReportContentTransferEncoding);textReportEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(textReportEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType dispositionNotificationContentType=null;String dispositionNotificationContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:dispositionNotificationContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:dispositionNotificationContentTransferEncoding=header.getValue();break;default :continue;}}if (dispositionNotificationContentType == null) {throw new HttpException("Failed to find Content-Type header in body part");}if (!dispositionNotificationContentType.getMimeType().equalsIgnoreCase(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION)) {throw new HttpException("Invalid content type '" + dispositionNotificationContentType.getMimeType() + "' for second body part of disposition notification");}String dispositionNotificationCharsetName=dispositionNotificationContentType.getCharset() == null ? AS2Charset.US_ASCII : dispositionNotificationContentType.getCharset().name();AS2MessageDispositionNotificationEntity messageDispositionNotificationEntity=parseMessageDispositionNotificationEntityBody(inbuffer,boundary,dispositionNotificationCharsetName,dispositionNotificationContentTransferEncoding);messageDispositionNotificationEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(messageDispositionNotificationEntity);return dispositionNotificationMultipartReportEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 25297 @LENGTH@ 73
------INS MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentType(contentType) @TO@ ExpressionStatement@@MethodInvocation:dispositionNotificationMultipartReportEntity.setContentType(contentType) @AT@ 25297 @LENGTH@ 72
---------INS SimpleName@@Name:dispositionNotificationMultipartReportEntity @TO@ MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentType(contentType) @AT@ 25297 @LENGTH@ 44
---------INS SimpleName@@MethodName:setContentType:[contentType] @TO@ MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentType(contentType) @AT@ 25342 @LENGTH@ 27
------------INS SimpleName@@contentType @TO@ SimpleName@@MethodName:setContentType:[contentType] @AT@ 25357 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding) @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  DispositionNotificationMultipartReportEntity dispositionNotificationMultipartReportEntity=new DispositionNotificationMultipartReportEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType textReportContentType=null;  String textReportContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      textReportContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  textReportContentTransferEncoding=header.getValue();break;default :continue;}}if (textReportContentType == null) {throw new HttpException("Failed to find Content-Type header in EDI message body part");}if (!textReportContentType.getMimeType().equalsIgnoreCase(AS2MimeType.TEXT_PLAIN)) {throw new HttpException("Invalid content type '" + textReportContentType.getMimeType() + "' for first body part of disposition notification");}String textReportCharsetName=textReportContentType.getCharset() == null ? AS2Charset.US_ASCII : textReportContentType.getCharset().name();TextPlainEntity textReportEntity=parseTextPlainEntityBody(inbuffer,boundary,textReportCharsetName,textReportContentTransferEncoding);textReportEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(textReportEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType dispositionNotificationContentType=null;String dispositionNotificationContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:dispositionNotificationContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:dispositionNotificationContentTransferEncoding=header.getValue();break;default :continue;}}if (dispositionNotificationContentType == null) {throw new HttpException("Failed to find Content-Type header in body part");}if (!dispositionNotificationContentType.getMimeType().equalsIgnoreCase(AS2MimeType.MESSAGE_DISPOSITION_NOTIFICATION)) {throw new HttpException("Invalid content type '" + dispositionNotificationContentType.getMimeType() + "' for second body part of disposition notification");}String dispositionNotificationCharsetName=dispositionNotificationContentType.getCharset() == null ? AS2Charset.US_ASCII : dispositionNotificationContentType.getCharset().name();AS2MessageDispositionNotificationEntity messageDispositionNotificationEntity=parseMessageDispositionNotificationEntityBody(inbuffer,boundary,dispositionNotificationCharsetName,dispositionNotificationContentTransferEncoding);messageDispositionNotificationEntity.setHeaders(headers);dispositionNotificationMultipartReportEntity.addPart(messageDispositionNotificationEntity);return dispositionNotificationMultipartReportEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 25383 @LENGTH@ 97
------INS MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding) @TO@ ExpressionStatement@@MethodInvocation:dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 25383 @LENGTH@ 96
---------INS SimpleName@@Name:dispositionNotificationMultipartReportEntity @TO@ MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 25383 @LENGTH@ 44
---------INS SimpleName@@MethodName:setContentTransferEncoding:[contentTransferEncoding] @TO@ MethodInvocation@@dispositionNotificationMultipartReportEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 25428 @LENGTH@ 51
------------INS SimpleName@@contentTransferEncoding @TO@ SimpleName@@MethodName:setContentTransferEncoding:[contentTransferEncoding] @AT@ 25455 @LENGTH@ 23


UPD FieldDeclaration@@protected, Configuration, [configuration] @TO@ private, Configuration, [configuration] @AT@ 1660 @LENGTH@ 38
---UPD Modifier@@protected @TO@ private @AT@ 1660 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new DigestAuthenticationMechanism(callbackHandler,nonceManager,(String)properties.get(CONFIG_REALM),(String)properties.get(CONFIG_CONTEXT_PATH),providers) @TO@ ClassInstanceCreation:new DigestAuthenticationMechanism(callbackHandler,nonceManager,(String)properties.get(CONFIG_REALM),(String)properties.get(CONFIG_CONTEXT_PATH),providers,(String)properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI)) @AT@ 4503 @LENGTH@ 168
---UPD ClassInstanceCreation@@DigestAuthenticationMechanism[callbackHandler, nonceManager, (String)properties.get(CONFIG_REALM), (String)properties.get(CONFIG_CONTEXT_PATH), providers] @TO@ DigestAuthenticationMechanism[callbackHandler, nonceManager, (String)properties.get(CONFIG_REALM), (String)properties.get(CONFIG_CONTEXT_PATH), providers, (String)properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI)] @AT@ 4510 @LENGTH@ 160
------INS CastExpression@@(String)properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @TO@ ClassInstanceCreation@@DigestAuthenticationMechanism[callbackHandler, nonceManager, (String)properties.get(CONFIG_REALM), (String)properties.get(CONFIG_CONTEXT_PATH), providers] @AT@ 4719 @LENGTH@ 65
---------INS SimpleType@@String @TO@ CastExpression@@(String)properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @AT@ 4720 @LENGTH@ 6
---------INS MethodInvocation@@properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @TO@ CastExpression@@(String)properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @AT@ 4728 @LENGTH@ 56
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @AT@ 4728 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[HttpConstants.CONFIG_VALIDATE_DIGEST_URI] @TO@ MethodInvocation@@properties.get(HttpConstants.CONFIG_VALIDATE_DIGEST_URI) @AT@ 4739 @LENGTH@ 45
---------------INS QualifiedName@@HttpConstants.CONFIG_VALIDATE_DIGEST_URI @TO@ SimpleName@@MethodName:get:[HttpConstants.CONFIG_VALIDATE_DIGEST_URI] @AT@ 4743 @LENGTH@ 40
------------------INS SimpleName@@HttpConstants @TO@ QualifiedName@@HttpConstants.CONFIG_VALIDATE_DIGEST_URI @AT@ 4743 @LENGTH@ 13
------------------INS SimpleName@@CONFIG_VALIDATE_DIGEST_URI @TO@ QualifiedName@@HttpConstants.CONFIG_VALIDATE_DIGEST_URI @AT@ 4757 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @TO@ TypeDeclaration@@[@PowerMockIgnore("okhttp3.*"), @PrepareForTest(ClientRegistration.class), @RunWith(PowerMockRunner.class), public]DefaultOAuth2UserServiceTests,  @AT@ 3141 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3141 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3148 @LENGTH@ 4
---INS SimpleName@@MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3153 @LENGTH@ 67
---INS ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3227 @LENGTH@ 59
------INS MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @TO@ ExpressionStatement@@MethodInvocation:this.exception.expect(OAuth2AuthenticationException.class) @AT@ 3227 @LENGTH@ 58
---------INS FieldAccess@@this.exception @TO@ MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 3227 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 3227 @LENGTH@ 4
------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 3232 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@this.exception.expect(OAuth2AuthenticationException.class) @AT@ 3242 @LENGTH@ 43
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ SimpleName@@MethodName:expect:[OAuth2AuthenticationException.class] @AT@ 3249 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("missing_user_info_uri")) @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3289 @LENGTH@ 70
------INS MethodInvocation@@this.exception.expectMessage(containsString("missing_user_info_uri")) @TO@ ExpressionStatement@@MethodInvocation:this.exception.expectMessage(containsString("missing_user_info_uri")) @AT@ 3289 @LENGTH@ 69
---------INS FieldAccess@@this.exception @TO@ MethodInvocation@@this.exception.expectMessage(containsString("missing_user_info_uri")) @AT@ 3289 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 3289 @LENGTH@ 4
------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 3294 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectMessage:[containsString("missing_user_info_uri")] @TO@ MethodInvocation@@this.exception.expectMessage(containsString("missing_user_info_uri")) @AT@ 3304 @LENGTH@ 54
------------INS MethodInvocation@@containsString("missing_user_info_uri") @TO@ SimpleName@@MethodName:expectMessage:[containsString("missing_user_info_uri")] @AT@ 3318 @LENGTH@ 39
---------------INS SimpleName@@MethodName:containsString:["missing_user_info_uri"] @TO@ MethodInvocation@@containsString("missing_user_info_uri") @AT@ 3318 @LENGTH@ 39
------------------INS StringLiteral@@"missing_user_info_uri" @TO@ SimpleName@@MethodName:containsString:["missing_user_info_uri"] @AT@ 3333 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUri()).thenReturn(null) @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3363 @LENGTH@ 54
------INS MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn(null) @TO@ ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUri()).thenReturn(null) @AT@ 3363 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUri()] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn(null) @AT@ 3363 @LENGTH@ 36
------------INS MethodInvocation@@this.userInfoEndpoint.getUri() @TO@ MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUri()] @AT@ 3368 @LENGTH@ 30
---------------INS FieldAccess@@this.userInfoEndpoint @TO@ MethodInvocation@@this.userInfoEndpoint.getUri() @AT@ 3368 @LENGTH@ 21
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3368 @LENGTH@ 4
------------------INS SimpleName@@userInfoEndpoint @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3373 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@this.userInfoEndpoint.getUri() @AT@ 3390 @LENGTH@ 8
---------INS SimpleName@@MethodName:thenReturn:[null] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn(null) @AT@ 3400 @LENGTH@ 16
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:thenReturn:[null] @AT@ 3411 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken)) @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserInfoUriIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3420 @LENGTH@ 92
------INS MethodInvocation@@this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken)) @TO@ ExpressionStatement@@MethodInvocation:this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken)) @AT@ 3420 @LENGTH@ 91
---------INS FieldAccess@@this.userService @TO@ MethodInvocation@@this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken)) @AT@ 3420 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.userService @AT@ 3420 @LENGTH@ 4
------------INS SimpleName@@userService @TO@ FieldAccess@@this.userService @AT@ 3425 @LENGTH@ 11
---------INS SimpleName@@MethodName:loadUser:[new OAuth2UserRequest(this.clientRegistration,this.accessToken)] @TO@ MethodInvocation@@this.userService.loadUser(new OAuth2UserRequest(this.clientRegistration,this.accessToken)) @AT@ 3437 @LENGTH@ 74
------------INS ClassInstanceCreation@@OAuth2UserRequest[this.clientRegistration, this.accessToken] @TO@ SimpleName@@MethodName:loadUser:[new OAuth2UserRequest(this.clientRegistration,this.accessToken)] @AT@ 3446 @LENGTH@ 64
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2UserRequest[this.clientRegistration, this.accessToken] @AT@ 3446 @LENGTH@ 3
---------------INS SimpleType@@OAuth2UserRequest @TO@ ClassInstanceCreation@@OAuth2UserRequest[this.clientRegistration, this.accessToken] @AT@ 3450 @LENGTH@ 17
---------------INS FieldAccess@@this.clientRegistration @TO@ ClassInstanceCreation@@OAuth2UserRequest[this.clientRegistration, this.accessToken] @AT@ 3468 @LENGTH@ 23
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 3468 @LENGTH@ 4
------------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 3473 @LENGTH@ 18
---------------INS FieldAccess@@this.accessToken @TO@ ClassInstanceCreation@@OAuth2UserRequest[this.clientRegistration, this.accessToken] @AT@ 3493 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessToken @AT@ 3493 @LENGTH@ 4
------------------INS SimpleName@@accessToken @TO@ FieldAccess@@this.accessToken @AT@ 3498 @LENGTH@ 11


UPD MethodDeclaration@@private, static, void, MethodName:addInterfaces, Class<?> c, Set<Class<?>> interfaces,  @TO@ private, static, void, MethodName:addInterfaces, Class<?> c, List<Class<?>> interfaces,  @AT@ 3074 @LENGTH@ 272
---UPD SingleVariableDeclaration@@Set<Class<?>> interfaces @TO@ List<Class<?>> interfaces @AT@ 3120 @LENGTH@ 24
------UPD ParameterizedType@@Set<Class<?>> @TO@ List<Class<?>> @AT@ 3120 @LENGTH@ 13
---------UPD SimpleType@@Set @TO@ List @AT@ 3120 @LENGTH@ 3


UPD VariableDeclarationStatement@@FlowExecutionListener mockListener=new FlowExecutionListenerAdapter(){
  public void sessionCreating(  RequestContext context,  FlowDefinition definition){
    assertFalse(context.getFlowExecutionContext().isActive());
    throw new IllegalStateException("Oops");
  }
}
; @TO@ FlowExecutionListener mockListener=new FlowExecutionListener(){
  public void sessionCreating(  RequestContext context,  FlowDefinition definition){
    assertFalse(context.getFlowExecutionContext().isActive());
    throw new IllegalStateException("Oops");
  }
}
; @AT@ 6882 @LENGTH@ 280
---UPD VariableDeclarationFragment@@mockListener=new FlowExecutionListenerAdapter(){
  public void sessionCreating(  RequestContext context,  FlowDefinition definition){
    assertFalse(context.getFlowExecutionContext().isActive());
    throw new IllegalStateException("Oops");
  }
}
 @TO@ mockListener=new FlowExecutionListener(){
  public void sessionCreating(  RequestContext context,  FlowDefinition definition){
    assertFalse(context.getFlowExecutionContext().isActive());
    throw new IllegalStateException("Oops");
  }
}
 @AT@ 6904 @LENGTH@ 257
------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 6919 @LENGTH@ 242
---------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 6923 @LENGTH@ 28


DEL EnhancedForStatement@@for (String s : command) {  builder.append(s).append(" ");} @AT@ 7390 @LENGTH@ 79
---DEL SingleVariableDeclaration@@String s @AT@ 7395 @LENGTH@ 8
------DEL SimpleType@@String @AT@ 7395 @LENGTH@ 6
------DEL SimpleName@@s @AT@ 7402 @LENGTH@ 1
---DEL SimpleName@@command @AT@ 7406 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:builder.append(s).append(" ") @AT@ 7429 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testFailedConnect,  @TO@ TypeDeclaration@@[@RunWith(WildflyTestRunner.class), @ServerControl(manual=true), public]CLIScriptSupportTestCase,  @AT@ 4808 @LENGTH@ 655
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testFailedConnect,  @AT@ 4808 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testFailedConnect,  @AT@ 4815 @LENGTH@ 4
---INS SimpleName@@MethodName:testFailedConnect @TO@ MethodDeclaration@@public, void, MethodName:testFailedConnect,  @AT@ 4820 @LENGTH@ 17
---INS VariableDeclarationStatement@@CLI cli=CLI.newInstance(); @TO@ MethodDeclaration@@public, void, MethodName:testFailedConnect,  @AT@ 4850 @LENGTH@ 28
------INS SimpleType@@CLI @TO@ VariableDeclarationStatement@@CLI cli=CLI.newInstance(); @AT@ 4850 @LENGTH@ 3
------INS VariableDeclarationFragment@@cli=CLI.newInstance() @TO@ VariableDeclarationStatement@@CLI cli=CLI.newInstance(); @AT@ 4854 @LENGTH@ 23
---------INS SimpleName@@cli @TO@ VariableDeclarationFragment@@cli=CLI.newInstance() @AT@ 4854 @LENGTH@ 3
---------INS MethodInvocation@@CLI.newInstance() @TO@ VariableDeclarationFragment@@cli=CLI.newInstance() @AT@ 4860 @LENGTH@ 17
------------INS SimpleName@@Name:CLI @TO@ MethodInvocation@@CLI.newInstance() @AT@ 4860 @LENGTH@ 3
------------INS SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@CLI.newInstance() @AT@ 4864 @LENGTH@ 13
---INS TryStatement@@try {  checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null));  executeCommand(cli,"embed-server --std-out=echo");  try {    executeCommand(cli,":read-resource()");  }  finally {    executeCommand(cli,"stop-embedded-server");  }}  finally {  cli.terminate();} @TO@ MethodDeclaration@@public, void, MethodName:testFailedConnect,  @AT@ 4887 @LENGTH@ 570
------INS ExpressionStatement@@MethodInvocation:checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)) @TO@ TryStatement@@try {  checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null));  executeCommand(cli,"embed-server --std-out=echo");  try {    executeCommand(cli,":read-resource()");  }  finally {    executeCommand(cli,"stop-embedded-server");  }}  finally {  cli.terminate();} @AT@ 4944 @LENGTH@ 147
---------INS MethodInvocation@@checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)) @TO@ ExpressionStatement@@MethodInvocation:checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)) @AT@ 4944 @LENGTH@ 146
------------INS SimpleName@@MethodName:checkFail:[() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)] @TO@ MethodInvocation@@checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)) @AT@ 4944 @LENGTH@ 146
---------------INS LambdaExpression@@() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null) @TO@ SimpleName@@MethodName:checkFail:[() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null)] @AT@ 4954 @LENGTH@ 135
------------------INS MethodInvocation@@cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null) @TO@ LambdaExpression@@() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null) @AT@ 4960 @LENGTH@ 129
---------------------INS SimpleName@@Name:cli @TO@ MethodInvocation@@cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null) @AT@ 4960 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:connect:[TestSuiteEnvironment.getServerAddress(), 123, null, null] @TO@ MethodInvocation@@cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null) @AT@ 4964 @LENGTH@ 125
------------------------INS MethodInvocation@@TestSuiteEnvironment.getServerAddress() @TO@ SimpleName@@MethodName:connect:[TestSuiteEnvironment.getServerAddress(), 123, null, null] @AT@ 4972 @LENGTH@ 39
---------------------------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 4972 @LENGTH@ 20
---------------------------INS SimpleName@@MethodName:getServerAddress:[] @TO@ MethodInvocation@@TestSuiteEnvironment.getServerAddress() @AT@ 4993 @LENGTH@ 18
------------------------INS NumberLiteral@@123 @TO@ SimpleName@@MethodName:connect:[TestSuiteEnvironment.getServerAddress(), 123, null, null] @AT@ 5033 @LENGTH@ 3
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:connect:[TestSuiteEnvironment.getServerAddress(), 123, null, null] @AT@ 5058 @LENGTH@ 4
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:connect:[TestSuiteEnvironment.getServerAddress(), 123, null, null] @AT@ 5084 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:executeCommand(cli,"embed-server --std-out=echo") @TO@ TryStatement@@try {  checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null));  executeCommand(cli,"embed-server --std-out=echo");  try {    executeCommand(cli,":read-resource()");  }  finally {    executeCommand(cli,"stop-embedded-server");  }}  finally {  cli.terminate();} @AT@ 5173 @LENGTH@ 51
---------INS MethodInvocation@@executeCommand(cli,"embed-server --std-out=echo") @TO@ ExpressionStatement@@MethodInvocation:executeCommand(cli,"embed-server --std-out=echo") @AT@ 5173 @LENGTH@ 50
------------INS SimpleName@@MethodName:executeCommand:[cli, "embed-server --std-out=echo"] @TO@ MethodInvocation@@executeCommand(cli,"embed-server --std-out=echo") @AT@ 5173 @LENGTH@ 50
---------------INS SimpleName@@cli @TO@ SimpleName@@MethodName:executeCommand:[cli, "embed-server --std-out=echo"] @AT@ 5188 @LENGTH@ 3
---------------INS StringLiteral@@"embed-server --std-out=echo" @TO@ SimpleName@@MethodName:executeCommand:[cli, "embed-server --std-out=echo"] @AT@ 5193 @LENGTH@ 29
------INS TryStatement@@try {  executeCommand(cli,":read-resource()");}  finally {  executeCommand(cli,"stop-embedded-server");} @TO@ TryStatement@@try {  checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null));  executeCommand(cli,"embed-server --std-out=echo");  try {    executeCommand(cli,":read-resource()");  }  finally {    executeCommand(cli,"stop-embedded-server");  }}  finally {  cli.terminate();} @AT@ 5237 @LENGTH@ 161
---------INS ExpressionStatement@@MethodInvocation:executeCommand(cli,":read-resource()") @TO@ TryStatement@@try {  executeCommand(cli,":read-resource()");}  finally {  executeCommand(cli,"stop-embedded-server");} @AT@ 5259 @LENGTH@ 40
------------INS MethodInvocation@@executeCommand(cli,":read-resource()") @TO@ ExpressionStatement@@MethodInvocation:executeCommand(cli,":read-resource()") @AT@ 5259 @LENGTH@ 39
---------------INS SimpleName@@MethodName:executeCommand:[cli, ":read-resource()"] @TO@ MethodInvocation@@executeCommand(cli,":read-resource()") @AT@ 5259 @LENGTH@ 39
------------------INS SimpleName@@cli @TO@ SimpleName@@MethodName:executeCommand:[cli, ":read-resource()"] @AT@ 5274 @LENGTH@ 3
------------------INS StringLiteral@@":read-resource()" @TO@ SimpleName@@MethodName:executeCommand:[cli, ":read-resource()"] @AT@ 5279 @LENGTH@ 18
---------INS Block@@FinallyBody:{  executeCommand(cli,"stop-embedded-server");} @TO@ TryStatement@@try {  executeCommand(cli,":read-resource()");}  finally {  executeCommand(cli,"stop-embedded-server");} @AT@ 5322 @LENGTH@ 76
------------INS ExpressionStatement@@MethodInvocation:executeCommand(cli,"stop-embedded-server") @TO@ Block@@FinallyBody:{  executeCommand(cli,"stop-embedded-server");} @AT@ 5340 @LENGTH@ 44
---------------INS MethodInvocation@@executeCommand(cli,"stop-embedded-server") @TO@ ExpressionStatement@@MethodInvocation:executeCommand(cli,"stop-embedded-server") @AT@ 5340 @LENGTH@ 43
------------------INS SimpleName@@MethodName:executeCommand:[cli, "stop-embedded-server"] @TO@ MethodInvocation@@executeCommand(cli,"stop-embedded-server") @AT@ 5340 @LENGTH@ 43
---------------------INS SimpleName@@cli @TO@ SimpleName@@MethodName:executeCommand:[cli, "stop-embedded-server"] @AT@ 5355 @LENGTH@ 3
---------------------INS StringLiteral@@"stop-embedded-server" @TO@ SimpleName@@MethodName:executeCommand:[cli, "stop-embedded-server"] @AT@ 5360 @LENGTH@ 22
------INS Block@@FinallyBody:{  cli.terminate();} @TO@ TryStatement@@try {  checkFail(() -> cli.connect(TestSuiteEnvironment.getServerAddress(),123,null,null));  executeCommand(cli,"embed-server --std-out=echo");  try {    executeCommand(cli,":read-resource()");  }  finally {    executeCommand(cli,"stop-embedded-server");  }}  finally {  cli.terminate();} @AT@ 5417 @LENGTH@ 40
---------INS ExpressionStatement@@MethodInvocation:cli.terminate() @TO@ Block@@FinallyBody:{  cli.terminate();} @AT@ 5431 @LENGTH@ 16
------------INS MethodInvocation@@cli.terminate() @TO@ ExpressionStatement@@MethodInvocation:cli.terminate() @AT@ 5431 @LENGTH@ 15
---------------INS SimpleName@@Name:cli @TO@ MethodInvocation@@cli.terminate() @AT@ 5431 @LENGTH@ 3
---------------INS SimpleName@@MethodName:terminate:[] @TO@ MethodInvocation@@cli.terminate() @AT@ 5435 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertEquals("EDI message does not match",EDI_MESSAGE,rcvdMessage) @TO@ MethodDeclaration@@public, void, MethodName:receivePlainEDIMessageTest, Exception,  @AT@ 9387 @LENGTH@ 69
---INS MethodInvocation@@assertEquals("EDI message does not match",EDI_MESSAGE,rcvdMessage) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("EDI message does not match",EDI_MESSAGE,rcvdMessage) @AT@ 9387 @LENGTH@ 68
------INS SimpleName@@MethodName:assertEquals:["EDI message does not match", EDI_MESSAGE, rcvdMessage] @TO@ MethodInvocation@@assertEquals("EDI message does not match",EDI_MESSAGE,rcvdMessage) @AT@ 9387 @LENGTH@ 68
---------INS StringLiteral@@"EDI message does not match" @TO@ SimpleName@@MethodName:assertEquals:["EDI message does not match", EDI_MESSAGE, rcvdMessage] @AT@ 9400 @LENGTH@ 28
---------INS SimpleName@@EDI_MESSAGE @TO@ SimpleName@@MethodName:assertEquals:["EDI message does not match", EDI_MESSAGE, rcvdMessage] @AT@ 9430 @LENGTH@ 11
---------INS SimpleName@@rcvdMessage @TO@ SimpleName@@MethodName:assertEquals:["EDI message does not match", EDI_MESSAGE, rcvdMessage] @AT@ 9443 @LENGTH@ 11


UPD IfStatement@@if (wmContext != null) {  wmContext.shortPrint(console);} @TO@ if (wmContext != null) {  wmContext.printJson(console);  wmContext.shortPrint(console);} @AT@ 2345 @LENGTH@ 71
---UPD Block@@ThenBody:{  wmContext.shortPrint(console);} @TO@ ThenBody:{  wmContext.printJson(console);  wmContext.shortPrint(console);} @AT@ 2368 @LENGTH@ 48
------INS ExpressionStatement@@MethodInvocation:wmContext.printJson(console) @TO@ Block@@ThenBody:{  wmContext.shortPrint(console);} @AT@ 2378 @LENGTH@ 29
---------INS MethodInvocation@@wmContext.printJson(console) @TO@ ExpressionStatement@@MethodInvocation:wmContext.printJson(console) @AT@ 2378 @LENGTH@ 28
------------INS SimpleName@@Name:wmContext @TO@ MethodInvocation@@wmContext.printJson(console) @AT@ 2378 @LENGTH@ 9
------------INS SimpleName@@MethodName:printJson:[console] @TO@ MethodInvocation@@wmContext.printJson(console) @AT@ 2388 @LENGTH@ 18
---------------INS SimpleName@@console @TO@ SimpleName@@MethodName:printJson:[console] @AT@ 2398 @LENGTH@ 7


INS MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @TO@ TypeDeclaration@@[@Configuration, public]StandardCommandsAutoConfiguration,  @AT@ 2700 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @AT@ 2700 @LENGTH@ 6
---INS SimpleType@@History @TO@ MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @AT@ 2707 @LENGTH@ 7
---INS SimpleName@@MethodName:historyCommand @TO@ MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @AT@ 2715 @LENGTH@ 14
---INS SingleVariableDeclaration@@org.jline.reader.History jLineHistory @TO@ MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @AT@ 2730 @LENGTH@ 37
------INS SimpleType@@org.jline.reader.History @TO@ SingleVariableDeclaration@@org.jline.reader.History jLineHistory @AT@ 2730 @LENGTH@ 24
------INS SimpleName@@jLineHistory @TO@ SingleVariableDeclaration@@org.jline.reader.History jLineHistory @AT@ 2755 @LENGTH@ 12
---INS ReturnStatement@@ClassInstanceCreation:new History(jLineHistory) @TO@ MethodDeclaration@@public, History, MethodName:historyCommand, org.jline.reader.History jLineHistory,  @AT@ 2773 @LENGTH@ 33
------INS ClassInstanceCreation@@History[jLineHistory] @TO@ ReturnStatement@@ClassInstanceCreation:new History(jLineHistory) @AT@ 2780 @LENGTH@ 25
---------INS New@@new @TO@ ClassInstanceCreation@@History[jLineHistory] @AT@ 2780 @LENGTH@ 3
---------INS SimpleType@@History @TO@ ClassInstanceCreation@@History[jLineHistory] @AT@ 2784 @LENGTH@ 7
---------INS SimpleName@@jLineHistory @TO@ ClassInstanceCreation@@History[jLineHistory] @AT@ 2792 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:factory.setTargetClass(PersonRepositoryImpl.class) @TO@ MethodInvocation:factory.setTargetClass(CrudRepository.class) @AT@ 1265 @LENGTH@ 51
---UPD MethodInvocation@@factory.setTargetClass(PersonRepositoryImpl.class) @TO@ factory.setTargetClass(CrudRepository.class) @AT@ 1265 @LENGTH@ 50
------UPD SimpleName@@MethodName:setTargetClass:[PersonRepositoryImpl.class] @TO@ MethodName:setTargetClass:[CrudRepository.class] @AT@ 1273 @LENGTH@ 42
---------UPD TypeLiteral@@PersonRepositoryImpl.class @TO@ CrudRepository.class @AT@ 1288 @LENGTH@ 26


UPD TypeDeclaration@@[@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})}),@NamedEntityGraph(name="User.deepGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleaguesOfColleagues")}),@NamedSubgraph(name="User.colleaguesOfColleagues",attributeNodes={@NamedAttributeNode("roles")})})}), @NamedQueries({@NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"),@NamedQuery(name="User.findByNamedQueryWithAliasInInvertedOrder",query="SELECT u.lastname AS lastname, u.firstname AS firstname FROM User u ORDER BY u.lastname ASC")}), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @SqlResultSetMappings({@SqlResultSetMapping(name="SqlResultSetMapping.count",columns=@ColumnResult(name="cnt"))}), @NamedNativeQueries({@NamedNativeQuery(name="User.findByNativeNamedQueryWithPageable",resultClass=User.class,query="SELECT * FROM SD_USER ORDER BY UCASE(firstname)"),@NamedNativeQuery(name="User.findByNativeNamedQueryWithPageable.count",resultSetMapping="SqlResultSetMapping.count",query="SELECT count(*) AS cnt FROM SD_USER")}), @Table(name="SD_User"), public]User,  @TO@ [@Entity, @NamedEntityGraphs({@NamedEntityGraph(name="User.overview",attributeNodes={@NamedAttributeNode("roles")}),@NamedEntityGraph(name="User.detail",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.getOneWithDefinedEntityGraphById",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode("manager"),@NamedAttributeNode("colleagues")}),@NamedEntityGraph(name="User.withSubGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("colleagues"),@NamedAttributeNode("roles")})}),@NamedEntityGraph(name="User.deepGraph",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleagues")},subgraphs={@NamedSubgraph(name="User.colleagues",attributeNodes={@NamedAttributeNode("roles"),@NamedAttributeNode(value="colleagues",subgraph="User.colleaguesOfColleagues")}),@NamedSubgraph(name="User.colleaguesOfColleagues",attributeNodes={@NamedAttributeNode("roles")})})}), @NamedQueries({@NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"),@NamedQuery(name="User.findByNamedQueryWithAliasInInvertedOrder",query="SELECT u.lastname AS lastname, u.firstname AS firstname FROM User u ORDER BY u.lastname ASC"),@NamedQuery(name="User.findByNamedQueryWithConstructorExpression",query="SELECT new org.springframework.data.jpa.repository.sample.NameOnlyDto(u.firstname, u.lastname) from User u")}), @NamedStoredProcedureQueries({@NamedStoredProcedureQuery(name="User.plus1",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)})}), @NamedStoredProcedureQuery(name="User.plus1IO",procedureName="plus1inout",parameters={@StoredProcedureParameter(mode=ParameterMode.IN,name="arg",type=Integer.class),@StoredProcedureParameter(mode=ParameterMode.OUT,name="res",type=Integer.class)}), @SqlResultSetMappings({@SqlResultSetMapping(name="SqlResultSetMapping.count",columns=@ColumnResult(name="cnt"))}), @NamedNativeQueries({@NamedNativeQuery(name="User.findByNativeNamedQueryWithPageable",resultClass=User.class,query="SELECT * FROM SD_USER ORDER BY UCASE(firstname)"),@NamedNativeQuery(name="User.findByNativeNamedQueryWithPageable.count",resultSetMapping="SqlResultSetMapping.count",query="SELECT count(*) AS cnt FROM SD_USER")}), @Table(name="SD_User"), public]User,  @AT@ 2232 @LENGTH@ 8452
---UPD SingleMemberAnnotation@@@NamedQueries({@NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"),@NamedQuery(name="User.findByNamedQueryWithAliasInInvertedOrder",query="SELECT u.lastname AS lastname, u.firstname AS firstname FROM User u ORDER BY u.lastname ASC")}) @TO@ @NamedQueries({@NamedQuery(name="User.findByEmailAddress",query="SELECT u FROM User u WHERE u.emailAddress = ?1"),@NamedQuery(name="User.findByNamedQueryWithAliasInInvertedOrder",query="SELECT u.lastname AS lastname, u.firstname AS firstname FROM User u ORDER BY u.lastname ASC"),@NamedQuery(name="User.findByNamedQueryWithConstructorExpression",query="SELECT new org.springframework.data.jpa.repository.sample.NameOnlyDto(u.firstname, u.lastname) from User u")}) @AT@ 3584 @LENGTH@ 318


UPD ReturnStatement@@MethodInvocation:Arrays.asList(dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"),dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"),dto(localDate,"2007-03-19"),dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"),dto(zonedDateTime,"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"),dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ"))),dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"),dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"),dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")) @TO@ MethodInvocation:Arrays.asList(dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"),dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"),dto(localDate,"2007-03-19"),dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"),dto(zonedDateTime,"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"),dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX"))),dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"),dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"),dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")) @AT@ 5374 @LENGTH@ 1438
---UPD MethodInvocation@@Arrays.asList(dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"),dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"),dto(localDate,"2007-03-19"),dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"),dto(zonedDateTime,"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"),dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ"))),dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"),dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"),dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")) @TO@ Arrays.asList(dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"),dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"),dto(localDate,"2007-03-19"),dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"),dto(zonedDateTime,"2007-03-19T10:54:57.000Z"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"),dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"),dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX"))),dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"),dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"),dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")) @AT@ 5381 @LENGTH@ 1430
------UPD SimpleName@@MethodName:asList:[dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"), dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"), dto(localDate,"2007-03-19"), dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone), dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"), dto(zonedDateTime,"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"), dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"), dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ"))), dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"), dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"), dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")] @TO@ MethodName:asList:[dto(Date.from(instant),"2007-03-19T10:54:57.000+0000"), dto(Date.from(localDate.atStartOfDay().toInstant(ZoneOffset.UTC)),"2007-03-19T00:00:00.000+0000"), dto(localDate,"2007-03-19"), dto(zonedDateTime.toLocalDateTime(),"2007-03-19T10:54:57.000" + zone), dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.toOffsetDateTime(),"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.toOffsetDateTime().withOffsetSameInstant(ZoneOffset.of("-7")),"2007-03-19T03:54:57.000-0700"), dto(zonedDateTime,"2007-03-19T10:54:57.000Z"), dto(zonedDateTime.withZoneSameInstant(ZoneId.of("Asia/Kolkata")),"2007-03-19T16:24:57.000+0530"), dto(zonedDateTime.withZoneSameInstant(ZoneId.of("+3")),"2007-03-19T13:54:57.000+0300"), dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX"))), dto(ZonedDateTime.of(2018,03,22,9,58,8,5000000,ZoneId.of("Z")),"2018-03-22T09:58:08.005Z"), dto(OffsetTime.of(LocalTime.MIDNIGHT,ZoneOffset.UTC),"00:00:00.000Z"), dto(OffsetTime.of(12,13,14,7000000,ZoneOffset.UTC),"12:13:14.007Z")] @AT@ 5388 @LENGTH@ 1423
---------UPD MethodInvocation@@dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ"))) @TO@ dto(instant,instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX"))) @AT@ 6339 @LENGTH@ 155
------------UPD SimpleName@@MethodName:dto:[instant, instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ"))] @TO@ MethodName:dto:[instant, instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX"))] @AT@ 6339 @LENGTH@ 155
---------------UPD MethodInvocation@@instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ")) @TO@ instant.atZone(ZoneId.systemDefault()).format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX")) @AT@ 6368 @LENGTH@ 125
------------------UPD SimpleName@@MethodName:format:[DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ")] @TO@ MethodName:format:[DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX")] @AT@ 6428 @LENGTH@ 65
---------------------UPD MethodInvocation@@DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZ") @TO@ DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXX") @AT@ 6435 @LENGTH@ 57
------------------------UPD SimpleName@@MethodName:ofPattern:["yyyy-MM-dd'T'HH:mm:ss.SSSZ"] @TO@ MethodName:ofPattern:["yyyy-MM-dd'T'HH:mm:ss.SSSXX"] @AT@ 6453 @LENGTH@ 39
---------------------------UPD StringLiteral@@"yyyy-MM-dd'T'HH:mm:ss.SSSZ" @TO@ "yyyy-MM-dd'T'HH:mm:ss.SSSXX" @AT@ 6463 @LENGTH@ 28


UPD VariableDeclarationStatement@@String resetMessage=String.format("Connection idle time {} exceeded idleTimeout {}",idleTime,consumer.getConfiguration().getIdleTimeout()); @TO@ String resetMessage=String.format("Connection idle time %d exceeded idleTimeout %d",idleTime,consumer.getConfiguration().getIdleTimeout()); @AT@ 8949 @LENGTH@ 143
---UPD VariableDeclarationFragment@@resetMessage=String.format("Connection idle time {} exceeded idleTimeout {}",idleTime,consumer.getConfiguration().getIdleTimeout()) @TO@ resetMessage=String.format("Connection idle time %d exceeded idleTimeout %d",idleTime,consumer.getConfiguration().getIdleTimeout()) @AT@ 8956 @LENGTH@ 135
------UPD MethodInvocation@@String.format("Connection idle time {} exceeded idleTimeout {}",idleTime,consumer.getConfiguration().getIdleTimeout()) @TO@ String.format("Connection idle time %d exceeded idleTimeout %d",idleTime,consumer.getConfiguration().getIdleTimeout()) @AT@ 8971 @LENGTH@ 120
---------UPD SimpleName@@MethodName:format:["Connection idle time {} exceeded idleTimeout {}", idleTime, consumer.getConfiguration().getIdleTimeout()] @TO@ MethodName:format:["Connection idle time %d exceeded idleTimeout %d", idleTime, consumer.getConfiguration().getIdleTimeout()] @AT@ 8978 @LENGTH@ 113
------------UPD StringLiteral@@"Connection idle time {} exceeded idleTimeout {}" @TO@ "Connection idle time %d exceeded idleTimeout %d" @AT@ 8985 @LENGTH@ 49


UPD ExpressionStatement@@MethodInvocation:assertThat(userInfo.getUpdatedAt().toEpochMilli()).isEqualTo(UPDATED_AT_VALUE) @TO@ MethodInvocation:assertThat(userInfo.getUpdatedAt().getEpochSecond()).isEqualTo(UPDATED_AT_VALUE) @AT@ 6590 @LENGTH@ 79
---UPD MethodInvocation@@assertThat(userInfo.getUpdatedAt().toEpochMilli()).isEqualTo(UPDATED_AT_VALUE) @TO@ assertThat(userInfo.getUpdatedAt().getEpochSecond()).isEqualTo(UPDATED_AT_VALUE) @AT@ 6590 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:assertThat:[userInfo.getUpdatedAt().toEpochMilli()] @TO@ MethodName:assertThat:[userInfo.getUpdatedAt().getEpochSecond()] @AT@ 6590 @LENGTH@ 50
---------UPD MethodInvocation@@userInfo.getUpdatedAt().toEpochMilli() @TO@ userInfo.getUpdatedAt().getEpochSecond() @AT@ 6601 @LENGTH@ 38
------------UPD SimpleName@@MethodName:toEpochMilli:[] @TO@ MethodName:getEpochSecond:[] @AT@ 6625 @LENGTH@ 14


UPD FieldDeclaration@@Principal, [principal] @TO@ volatile, Principal, [principal] @AT@ 2222 @LENGTH@ 20
---INS Modifier@@volatile @TO@ FieldDeclaration@@Principal, [principal] @AT@ 2222 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",body2) @TO@ MethodInvocation:assertEquals("Bye World",body2) @AT@ 1854 @LENGTH@ 35
---UPD MethodInvocation@@assertEquals("Hello World",body2) @TO@ assertEquals("Bye World",body2) @AT@ 1854 @LENGTH@ 34
------UPD SimpleName@@MethodName:assertEquals:["Hello World", body2] @TO@ MethodName:assertEquals:["Bye World", body2] @AT@ 1854 @LENGTH@ 34
---------UPD StringLiteral@@"Hello World" @TO@ "Bye World" @AT@ 1867 @LENGTH@ 13


INS IfStatement@@if (RabbitTemplate.this.afterReceivePostProcessors != null) {  for (  MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {    reply=processor.postProcessMessage(reply);  }} @TO@ MethodDeclaration@@public, void, MethodName:handleDelivery, String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body, IOException,  @AT@ 60635 @LENGTH@ 222
---INS InfixExpression@@RabbitTemplate.this.afterReceivePostProcessors != null @TO@ IfStatement@@if (RabbitTemplate.this.afterReceivePostProcessors != null) {  for (  MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {    reply=processor.postProcessMessage(reply);  }} @AT@ 60639 @LENGTH@ 54
------INS FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @TO@ InfixExpression@@RabbitTemplate.this.afterReceivePostProcessors != null @AT@ 60639 @LENGTH@ 46
---------INS ThisExpression@@this @TO@ FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @AT@ 60639 @LENGTH@ 19
---------INS SimpleName@@afterReceivePostProcessors @TO@ FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @AT@ 60659 @LENGTH@ 26
------INS Operator@@!= @TO@ InfixExpression@@RabbitTemplate.this.afterReceivePostProcessors != null @AT@ 60685 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@RabbitTemplate.this.afterReceivePostProcessors != null @AT@ 60689 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {    reply=processor.postProcessMessage(reply);  }} @TO@ IfStatement@@if (RabbitTemplate.this.afterReceivePostProcessors != null) {  for (  MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {    reply=processor.postProcessMessage(reply);  }} @AT@ 60695 @LENGTH@ 162
------INS EnhancedForStatement@@for (MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {  reply=processor.postProcessMessage(reply);} @TO@ Block@@ThenBody:{  for (  MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {    reply=processor.postProcessMessage(reply);  }} @AT@ 60703 @LENGTH@ 147
---------INS SingleVariableDeclaration@@MessagePostProcessor processor @TO@ EnhancedForStatement@@for (MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {  reply=processor.postProcessMessage(reply);} @AT@ 60708 @LENGTH@ 30
------------INS SimpleType@@MessagePostProcessor @TO@ SingleVariableDeclaration@@MessagePostProcessor processor @AT@ 60708 @LENGTH@ 20
------------INS SimpleName@@processor @TO@ SingleVariableDeclaration@@MessagePostProcessor processor @AT@ 60729 @LENGTH@ 9
---------INS FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @TO@ EnhancedForStatement@@for (MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {  reply=processor.postProcessMessage(reply);} @AT@ 60741 @LENGTH@ 46
------------INS ThisExpression@@this @TO@ FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @AT@ 60741 @LENGTH@ 19
------------INS SimpleName@@afterReceivePostProcessors @TO@ FieldAccess@@RabbitTemplate.this.afterReceivePostProcessors @AT@ 60761 @LENGTH@ 26
---------INS ExpressionStatement@@Assignment:reply=processor.postProcessMessage(reply) @TO@ EnhancedForStatement@@for (MessagePostProcessor processor : RabbitTemplate.this.afterReceivePostProcessors) {  reply=processor.postProcessMessage(reply);} @AT@ 60798 @LENGTH@ 44
------------INS Assignment@@reply=processor.postProcessMessage(reply) @TO@ ExpressionStatement@@Assignment:reply=processor.postProcessMessage(reply) @AT@ 60798 @LENGTH@ 43
---------------INS SimpleName@@reply @TO@ Assignment@@reply=processor.postProcessMessage(reply) @AT@ 60798 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@reply=processor.postProcessMessage(reply) @AT@ 60803 @LENGTH@ 1
---------------INS MethodInvocation@@processor.postProcessMessage(reply) @TO@ Assignment@@reply=processor.postProcessMessage(reply) @AT@ 60806 @LENGTH@ 35
------------------INS SimpleName@@Name:processor @TO@ MethodInvocation@@processor.postProcessMessage(reply) @AT@ 60806 @LENGTH@ 9
------------------INS SimpleName@@MethodName:postProcessMessage:[reply] @TO@ MethodInvocation@@processor.postProcessMessage(reply) @AT@ 60816 @LENGTH@ 25
---------------------INS SimpleName@@reply @TO@ SimpleName@@MethodName:postProcessMessage:[reply] @AT@ 60835 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ MethodInvocation:SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal")) @AT@ 5828 @LENGTH@ 170
---UPD MethodInvocation@@SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))) @TO@ SecurityContextHolder.getContext().setAuthentication(new TestingAuthenticationToken("un","principal")) @AT@ 5828 @LENGTH@ 169
------UPD SimpleName@@MethodName:setAuthentication:[new TestingAuthenticationToken("un","principal",AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS"))] @TO@ MethodName:setAuthentication:[new TestingAuthenticationToken("un","principal")] @AT@ 5863 @LENGTH@ 134
---------UPD ClassInstanceCreation@@TestingAuthenticationToken["un", "principal", AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS")] @TO@ TestingAuthenticationToken["un", "principal"] @AT@ 5886 @LENGTH@ 110
------------DEL MethodInvocation@@AuthorityUtils.createAuthorityList("ROLE_ANONYMOUS") @AT@ 5936 @LENGTH@ 59
---------------DEL SimpleName@@Name:AuthorityUtils @AT@ 5936 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:createAuthorityList:["ROLE_ANONYMOUS"] @AT@ 5958 @LENGTH@ 37
------------------DEL StringLiteral@@"ROLE_ANONYMOUS" @AT@ 5978 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:conf.setBoolean(FileInputFormat.INPUT_DIR_RECURSIVE,true) @TO@ MethodDeclaration@@private, void, MethodName:useCachedResult, QueryResultsCache.CacheEntry cacheEntry,  @AT@ 582533 @LENGTH@ 59
---INS MethodInvocation@@conf.setBoolean(FileInputFormat.INPUT_DIR_RECURSIVE,true) @TO@ ExpressionStatement@@MethodInvocation:conf.setBoolean(FileInputFormat.INPUT_DIR_RECURSIVE,true) @AT@ 582533 @LENGTH@ 58
------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.setBoolean(FileInputFormat.INPUT_DIR_RECURSIVE,true) @AT@ 582533 @LENGTH@ 4
------INS SimpleName@@MethodName:setBoolean:[FileInputFormat.INPUT_DIR_RECURSIVE, true] @TO@ MethodInvocation@@conf.setBoolean(FileInputFormat.INPUT_DIR_RECURSIVE,true) @AT@ 582538 @LENGTH@ 53
---------INS QualifiedName@@FileInputFormat.INPUT_DIR_RECURSIVE @TO@ SimpleName@@MethodName:setBoolean:[FileInputFormat.INPUT_DIR_RECURSIVE, true] @AT@ 582549 @LENGTH@ 35
------------INS SimpleName@@FileInputFormat @TO@ QualifiedName@@FileInputFormat.INPUT_DIR_RECURSIVE @AT@ 582549 @LENGTH@ 15
------------INS SimpleName@@INPUT_DIR_RECURSIVE @TO@ QualifiedName@@FileInputFormat.INPUT_DIR_RECURSIVE @AT@ 582565 @LENGTH@ 19
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setBoolean:[FileInputFormat.INPUT_DIR_RECURSIVE, true] @AT@ 582586 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:mock.message(0).body().matches().simple("${body[test2].name} == 'Camel'") @AT@ 4013 @LENGTH@ 74
---DEL MethodInvocation@@mock.message(0).body().matches().simple("${body[test2].name} == 'Camel'") @AT@ 4013 @LENGTH@ 73
------DEL MethodInvocation@@MethodName:matches:[] @AT@ 4013 @LENGTH@ 32
------DEL MethodInvocation@@MethodName:body:[] @AT@ 4013 @LENGTH@ 22
------DEL MethodInvocation@@MethodName:message:[0] @AT@ 4013 @LENGTH@ 15
---------DEL NumberLiteral@@0 @AT@ 4026 @LENGTH@ 1
------DEL SimpleName@@Name:mock @AT@ 4013 @LENGTH@ 4
------DEL SimpleName@@MethodName:simple:["${body[test2].name} == 'Camel'"] @AT@ 4046 @LENGTH@ 40
---------DEL StringLiteral@@"${body[test2].name} == 'Camel'" @AT@ 4053 @LENGTH@ 32


UPD ExpressionStatement@@Assignment:remainder=ObjectHelper.before(remainder,"?") @TO@ Assignment:remainder=StringHelper.before(remainder,"?") @AT@ 13289 @LENGTH@ 48
---UPD Assignment@@remainder=ObjectHelper.before(remainder,"?") @TO@ remainder=StringHelper.before(remainder,"?") @AT@ 13289 @LENGTH@ 47
------UPD MethodInvocation@@ObjectHelper.before(remainder,"?") @TO@ StringHelper.before(remainder,"?") @AT@ 13301 @LENGTH@ 35
---------UPD SimpleName@@Name:ObjectHelper @TO@ Name:StringHelper @AT@ 13301 @LENGTH@ 12


UPD IfStatement@@if (output instanceof TransactedDefinition) {  outputs.addAll(output.getOutputs());} else {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} @TO@ if (output instanceof TransactedDefinition) {  outputs.addAll(output.getOutputs());} else if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @AT@ 20972 @LENGTH@ 300
---UPD Block@@ElseBody:{  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} @TO@ ThenBody:{  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} @AT@ 21090 @LENGTH@ 182
---INS Block@@ElseBody:if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @TO@ IfStatement@@if (output instanceof TransactedDefinition) {  outputs.addAll(output.getOutputs());} else {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} @AT@ 21305 @LENGTH@ 250
------INS IfStatement@@if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @TO@ Block@@ElseBody:if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @AT@ 21305 @LENGTH@ 250
---------MOV Block@@ElseBody:{  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} @TO@ IfStatement@@if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @AT@ 21090 @LENGTH@ 182
---------INS SimpleName@@skip @TO@ IfStatement@@if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @AT@ 21309 @LENGTH@ 4
---------INS Block@@ElseBody:{  outputs.add(output);} @TO@ IfStatement@@if (skip) {  boolean invalid=outputs.isEmpty() && output.isAbstract();  if (!invalid) {    outputs.add(output);  }} else {  outputs.add(output);} @AT@ 21503 @LENGTH@ 52
------------INS ExpressionStatement@@MethodInvocation:outputs.add(output) @TO@ Block@@ElseBody:{  outputs.add(output);} @AT@ 21521 @LENGTH@ 20
---------------INS MethodInvocation@@outputs.add(output) @TO@ ExpressionStatement@@MethodInvocation:outputs.add(output) @AT@ 21521 @LENGTH@ 19
------------------INS SimpleName@@Name:outputs @TO@ MethodInvocation@@outputs.add(output) @AT@ 21521 @LENGTH@ 7
------------------INS SimpleName@@MethodName:add:[output] @TO@ MethodInvocation@@outputs.add(output) @AT@ 21529 @LENGTH@ 11
---------------------INS SimpleName@@output @TO@ SimpleName@@MethodName:add:[output] @AT@ 21533 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:SecuredServiceRegistry, final ServiceRegistry delegate,  @TO@ voidMethodName:SecuredServiceRegistry, final ServiceRegistry delegate,  @AT@ 813 @LENGTH@ 94
---DEL Modifier@@public @AT@ 813 @LENGTH@ 6


INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Loading user approval page: " + userApprovalPage);} @TO@ MethodDeclaration@@private, ModelAndView, MethodName:getUserApprovalPageResponse, Map<String,Object> model, AuthorizationRequest authorizationRequest, Authentication principal,  @AT@ 11566 @LENGTH@ 102
---INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Loading user approval page: " + userApprovalPage);} @AT@ 11570 @LENGTH@ 23
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 11570 @LENGTH@ 6
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 11577 @LENGTH@ 16
---INS Block@@ThenBody:{  logger.debug("Loading user approval page: " + userApprovalPage);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Loading user approval page: " + userApprovalPage);} @AT@ 11595 @LENGTH@ 73
------MOV ExpressionStatement@@MethodInvocation:logger.debug("Loading user approval page: " + userApprovalPage) @TO@ Block@@ThenBody:{  logger.debug("Loading user approval page: " + userApprovalPage);} @AT@ 11566 @LENGTH@ 64


UPD MethodDeclaration@@public, void, MethodName:testUpdateNullIdJobExection,  @TO@ public, void, MethodName:testUpdateNullIdJobExecution,  @AT@ 6204 @LENGTH@ 252
---UPD SimpleName@@MethodName:testUpdateNullIdJobExection @TO@ MethodName:testUpdateNullIdJobExecution @AT@ 6216 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:consumer.setEagerLimitMaxMessagesPerPoll(false) @TO@ MethodDeclaration@@protected, Consumer, MethodName:createConsumer, Exception,  @AT@ 2196 @LENGTH@ 48
---INS MethodInvocation@@consumer.setEagerLimitMaxMessagesPerPoll(false) @TO@ ExpressionStatement@@MethodInvocation:consumer.setEagerLimitMaxMessagesPerPoll(false) @AT@ 2196 @LENGTH@ 47
------INS SimpleName@@Name:consumer @TO@ MethodInvocation@@consumer.setEagerLimitMaxMessagesPerPoll(false) @AT@ 2196 @LENGTH@ 8
------INS SimpleName@@MethodName:setEagerLimitMaxMessagesPerPoll:[false] @TO@ MethodInvocation@@consumer.setEagerLimitMaxMessagesPerPoll(false) @AT@ 2205 @LENGTH@ 38
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setEagerLimitMaxMessagesPerPoll:[false] @AT@ 2237 @LENGTH@ 5


UPD ExpressionStatement@@ClassInstanceCreation:new RenderAction(null) @TO@ ClassInstanceCreation:new RenderAction((Expression[])null) @AT@ 963 @LENGTH@ 23
---UPD ClassInstanceCreation@@RenderAction[null] @TO@ RenderAction[(Expression[])null] @AT@ 963 @LENGTH@ 22
------DEL NullLiteral@@null @AT@ 980 @LENGTH@ 4
------INS CastExpression@@(Expression[])null @TO@ ClassInstanceCreation@@RenderAction[null] @AT@ 1038 @LENGTH@ 19
---------INS ArrayType@@Expression[] @TO@ CastExpression@@(Expression[])null @AT@ 1039 @LENGTH@ 12
------------INS SimpleType@@Expression @TO@ ArrayType@@Expression[] @AT@ 1039 @LENGTH@ 10
---------INS NullLiteral@@null @TO@ CastExpression@@(Expression[])null @AT@ 1053 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:msPort=MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ Assignment:msPort=MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 2904 @LENGTH@ 58
---UPD Assignment@@msPort=MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ msPort=MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 2904 @LENGTH@ 57
------UPD MethodInvocation@@MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 2913 @LENGTH@ 48
---------UPD SimpleName@@MethodName:startMetaStore:[metastoreConf] @TO@ MethodName:startMetaStoreWithRetry:[metastoreConf] @AT@ 2932 @LENGTH@ 29


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 2722 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 2722 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2726 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 2726 @LENGTH@ 4


UPD IfStatement@@if (accessToken != null && !accessToken.isExpired()) {  logger.debug("User already approved with token=" + accessToken);  approved=true;} else {  logger.debug("Checking explicit approval");  approved=userAuthentication.isAuthenticated() && approved;} @TO@ if (accessToken != null && !accessToken.isExpired()) {  if (logger.isDebugEnabled()) {    logger.debug("User already approved with token=" + accessToken);  }  approved=true;} else {  logger.debug("Checking explicit approval");  approved=userAuthentication.isAuthenticated() && approved;} @AT@ 5128 @LENGTH@ 352
---UPD Block@@ThenBody:{  logger.debug("User already approved with token=" + accessToken);  approved=true;} @TO@ ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("User already approved with token=" + accessToken);  }  approved=true;} @AT@ 5181 @LENGTH@ 175
------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("User already approved with token=" + accessToken);} @TO@ Block@@ThenBody:{  logger.debug("User already approved with token=" + accessToken);  approved=true;} @AT@ 5224 @LENGTH@ 104
---------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("User already approved with token=" + accessToken);} @AT@ 5228 @LENGTH@ 23
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 5228 @LENGTH@ 6
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 5235 @LENGTH@ 16
---------INS Block@@ThenBody:{  logger.debug("User already approved with token=" + accessToken);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("User already approved with token=" + accessToken);} @AT@ 5253 @LENGTH@ 75
------------MOV ExpressionStatement@@MethodInvocation:logger.debug("User already approved with token=" + accessToken) @TO@ Block@@ThenBody:{  logger.debug("User already approved with token=" + accessToken);} @AT@ 5186 @LENGTH@ 64


UPD TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType signedEntityContentType=null;  String signedEntityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      signedEntityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  signedEntityContentTransferEncoding=header.getValue();break;default :continue;}}if (signedEntityContentType == null) {throw new HttpException("Failed to find Content-Type header in signed entity body part");}MimeEntity signedEntity=parseEntityBody(inbuffer,boundary,signedEntityContentType,signedEntityContentTransferEncoding,headers);signedEntity.removeAllHeaders();signedEntity.setHeaders(headers);multipartSignedEntity.addPart(signedEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType signatureContentType=null;String signatureContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:signatureContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:signatureContentTransferEncoding=header.getValue();break;default :continue;}}if (signatureContentType == null) {throw new HttpException("Failed to find Content-Type header in signature body part");}if (!ContentTypeUtils.isPkcs7SignatureType(signatureContentType)) {throw new HttpException("Invalid content type '" + signatureContentType.getMimeType() + "' for signature body part");}ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity=parseApplicationPkcs7SignatureEntityBody(inbuffer,boundary,signatureContentType,signatureContentTransferEncoding);applicationPkcs7SignatureEntity.removeAllHeaders();applicationPkcs7SignatureEntity.setHeaders(headers);multipartSignedEntity.addPart(applicationPkcs7SignatureEntity);return multipartSignedEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @TO@ try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType signedEntityContentType=null;  String signedEntityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      signedEntityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  signedEntityContentTransferEncoding=header.getValue();break;default :continue;}}if (signedEntityContentType == null) {throw new HttpException("Failed to find Content-Type header in signed entity body part");}MimeEntity signedEntity=parseEntityBody(inbuffer,boundary,signedEntityContentType,signedEntityContentTransferEncoding,headers);signedEntity.removeAllHeaders();signedEntity.setHeaders(headers);multipartSignedEntity.addPart(signedEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType signatureContentType=null;String signatureContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:signatureContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:signatureContentTransferEncoding=header.getValue();break;default :continue;}}if (signatureContentType == null) {throw new HttpException("Failed to find Content-Type header in signature body part");}if (!ContentTypeUtils.isPkcs7SignatureType(signatureContentType)) {throw new HttpException("Invalid content type '" + signatureContentType.getMimeType() + "' for signature body part");}ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity=parseApplicationPkcs7SignatureEntityBody(inbuffer,boundary,signatureContentType,signatureContentTransferEncoding);applicationPkcs7SignatureEntity.removeAllHeaders();applicationPkcs7SignatureEntity.setHeaders(headers);multipartSignedEntity.addPart(applicationPkcs7SignatureEntity);ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset);multipartSignedEntity.setContentType(contentType);multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding);return multipartSignedEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 14975 @LENGTH@ 4301
---INS VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset); @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType signedEntityContentType=null;  String signedEntityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      signedEntityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  signedEntityContentTransferEncoding=header.getValue();break;default :continue;}}if (signedEntityContentType == null) {throw new HttpException("Failed to find Content-Type header in signed entity body part");}MimeEntity signedEntity=parseEntityBody(inbuffer,boundary,signedEntityContentType,signedEntityContentTransferEncoding,headers);signedEntity.removeAllHeaders();signedEntity.setHeaders(headers);multipartSignedEntity.addPart(signedEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType signatureContentType=null;String signatureContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:signatureContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:signatureContentTransferEncoding=header.getValue();break;default :continue;}}if (signatureContentType == null) {throw new HttpException("Failed to find Content-Type header in signature body part");}if (!ContentTypeUtils.isPkcs7SignatureType(signatureContentType)) {throw new HttpException("Invalid content type '" + signatureContentType.getMimeType() + "' for signature body part");}ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity=parseApplicationPkcs7SignatureEntityBody(inbuffer,boundary,signatureContentType,signatureContentTransferEncoding);applicationPkcs7SignatureEntity.removeAllHeaders();applicationPkcs7SignatureEntity.setHeaders(headers);multipartSignedEntity.addPart(applicationPkcs7SignatureEntity);return multipartSignedEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 18938 @LENGTH@ 84
------INS SimpleType@@ContentType @TO@ VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset); @AT@ 18938 @LENGTH@ 11
------INS VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @TO@ VariableDeclarationStatement@@ContentType contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset); @AT@ 18950 @LENGTH@ 71
---------INS SimpleName@@contentType @TO@ VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @AT@ 18950 @LENGTH@ 11
---------INS MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @TO@ VariableDeclarationFragment@@contentType=ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @AT@ 18964 @LENGTH@ 57
------------INS SimpleName@@Name:ContentType @TO@ MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @AT@ 18964 @LENGTH@ 11
------------INS SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_SIGNED, charset] @TO@ MethodInvocation@@ContentType.create(AS2MimeType.MULTIPART_SIGNED,charset) @AT@ 18976 @LENGTH@ 45
---------------INS QualifiedName@@AS2MimeType.MULTIPART_SIGNED @TO@ SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_SIGNED, charset] @AT@ 18983 @LENGTH@ 28
------------------INS SimpleName@@AS2MimeType @TO@ QualifiedName@@AS2MimeType.MULTIPART_SIGNED @AT@ 18983 @LENGTH@ 11
------------------INS SimpleName@@MULTIPART_SIGNED @TO@ QualifiedName@@AS2MimeType.MULTIPART_SIGNED @AT@ 18995 @LENGTH@ 16
---------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:create:[AS2MimeType.MULTIPART_SIGNED, charset] @AT@ 19013 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:multipartSignedEntity.setContentType(contentType) @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType signedEntityContentType=null;  String signedEntityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      signedEntityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  signedEntityContentTransferEncoding=header.getValue();break;default :continue;}}if (signedEntityContentType == null) {throw new HttpException("Failed to find Content-Type header in signed entity body part");}MimeEntity signedEntity=parseEntityBody(inbuffer,boundary,signedEntityContentType,signedEntityContentTransferEncoding,headers);signedEntity.removeAllHeaders();signedEntity.setHeaders(headers);multipartSignedEntity.addPart(signedEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType signatureContentType=null;String signatureContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:signatureContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:signatureContentTransferEncoding=header.getValue();break;default :continue;}}if (signatureContentType == null) {throw new HttpException("Failed to find Content-Type header in signature body part");}if (!ContentTypeUtils.isPkcs7SignatureType(signatureContentType)) {throw new HttpException("Invalid content type '" + signatureContentType.getMimeType() + "' for signature body part");}ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity=parseApplicationPkcs7SignatureEntityBody(inbuffer,boundary,signatureContentType,signatureContentTransferEncoding);applicationPkcs7SignatureEntity.removeAllHeaders();applicationPkcs7SignatureEntity.setHeaders(headers);multipartSignedEntity.addPart(applicationPkcs7SignatureEntity);return multipartSignedEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 19035 @LENGTH@ 50
------INS MethodInvocation@@multipartSignedEntity.setContentType(contentType) @TO@ ExpressionStatement@@MethodInvocation:multipartSignedEntity.setContentType(contentType) @AT@ 19035 @LENGTH@ 49
---------INS SimpleName@@Name:multipartSignedEntity @TO@ MethodInvocation@@multipartSignedEntity.setContentType(contentType) @AT@ 19035 @LENGTH@ 21
---------INS SimpleName@@MethodName:setContentType:[contentType] @TO@ MethodInvocation@@multipartSignedEntity.setContentType(contentType) @AT@ 19057 @LENGTH@ 27
------------INS SimpleName@@contentType @TO@ SimpleName@@MethodName:setContentType:[contentType] @AT@ 19072 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding) @TO@ TryStatement@@try {  if (charsetName == null) {    charsetName=AS2Charset.US_ASCII;  }  Charset charset=Charset.forName(charsetName);  CharsetDecoder charsetDecoder=charset.newDecoder();  inbuffer.setCharsetDecoder(charsetDecoder);  inbuffer.setTransferEncoding(contentTransferEncoding);  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(boundary,false);  skipPreambleAndStartBoundary(inbuffer,boundary);  Header[] headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());  ContentType signedEntityContentType=null;  String signedEntityContentTransferEncoding=null;  for (  Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:      signedEntityContentType=ContentType.parse(header.getValue());    break;case AS2Header.CONTENT_TRANSFER_ENCODING:  signedEntityContentTransferEncoding=header.getValue();break;default :continue;}}if (signedEntityContentType == null) {throw new HttpException("Failed to find Content-Type header in signed entity body part");}MimeEntity signedEntity=parseEntityBody(inbuffer,boundary,signedEntityContentType,signedEntityContentTransferEncoding,headers);signedEntity.removeAllHeaders();signedEntity.setHeaders(headers);multipartSignedEntity.addPart(signedEntity);headers=AbstractMessageParser.parseHeaders(inbuffer,-1,-1,BasicLineParser.INSTANCE,new ArrayList<CharArrayBuffer>());ContentType signatureContentType=null;String signatureContentTransferEncoding=null;for (Header header : headers) {switch (header.getName()) {case AS2Header.CONTENT_TYPE:signatureContentType=ContentType.parse(header.getValue());break;case AS2Header.CONTENT_TRANSFER_ENCODING:signatureContentTransferEncoding=header.getValue();break;default :continue;}}if (signatureContentType == null) {throw new HttpException("Failed to find Content-Type header in signature body part");}if (!ContentTypeUtils.isPkcs7SignatureType(signatureContentType)) {throw new HttpException("Invalid content type '" + signatureContentType.getMimeType() + "' for signature body part");}ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity=parseApplicationPkcs7SignatureEntityBody(inbuffer,boundary,signatureContentType,signatureContentTransferEncoding);applicationPkcs7SignatureEntity.removeAllHeaders();applicationPkcs7SignatureEntity.setHeaders(headers);multipartSignedEntity.addPart(applicationPkcs7SignatureEntity);return multipartSignedEntity;} catch (Exception e) {ParseException parseException=new ParseException("failed to parse text entity");parseException.initCause(e);throw parseException;} finally {inbuffer.setCharsetDecoder(previousDecoder);inbuffer.setTransferEncoding(previousContentTransferEncoding);} @AT@ 19098 @LENGTH@ 74
------INS MethodInvocation@@multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding) @TO@ ExpressionStatement@@MethodInvocation:multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 19098 @LENGTH@ 73
---------INS SimpleName@@Name:multipartSignedEntity @TO@ MethodInvocation@@multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 19098 @LENGTH@ 21
---------INS SimpleName@@MethodName:setContentTransferEncoding:[contentTransferEncoding] @TO@ MethodInvocation@@multipartSignedEntity.setContentTransferEncoding(contentTransferEncoding) @AT@ 19120 @LENGTH@ 51
------------INS SimpleName@@contentTransferEncoding @TO@ SimpleName@@MethodName:setContentTransferEncoding:[contentTransferEncoding] @AT@ 19147 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:testWriteItemsTestRepsository, Exception,  @TO@ public, void, MethodName:testWriteItemsTestRepository, Exception,  @AT@ 2485 @LENGTH@ 338
---UPD SimpleName@@MethodName:testWriteItemsTestRepsository @TO@ MethodName:testWriteItemsTestRepository @AT@ 2497 @LENGTH@ 29


UPD ExpressionStatement@@Assignment:msPort=MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ Assignment:msPort=MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 7137 @LENGTH@ 58
---UPD Assignment@@msPort=MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ msPort=MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 7137 @LENGTH@ 57
------UPD MethodInvocation@@MetaStoreTestUtils.startMetaStore(metastoreConf) @TO@ MetaStoreTestUtils.startMetaStoreWithRetry(metastoreConf) @AT@ 7146 @LENGTH@ 48
---------UPD SimpleName@@MethodName:startMetaStore:[metastoreConf] @TO@ MethodName:startMetaStoreWithRetry:[metastoreConf] @AT@ 7165 @LENGTH@ 29


UPD TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  excludesFrom(testConfigProps,"minillap.query.files");  excludesFrom(testConfigProps,"minillaplocal.query.files");  excludesFrom(testConfigProps,"minimr.query.files");  excludesFrom(testConfigProps,"minitez.query.files");  excludesFrom(testConfigProps,"encrypted.query.files");  excludesFrom(testConfigProps,"spark.only.query.files");  excludesFrom(testConfigProps,"miniSparkOnYarn.only.query.files");  excludesFrom(testConfigProps,"disabled.query.files");  excludesFrom(testConfigProps,"localSpark.only.query.files");  excludesFrom(testConfigProps,"druid.query.files");  setResultsDir("ql/src/test/results/clientpositive");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("");  setClusterType(MiniClusterType.none);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @TO@ try {  setQueryDir("ql/src/test/queries/clientpositive");  excludesFrom(testConfigProps,"minillap.query.files");  excludesFrom(testConfigProps,"minillaplocal.query.files");  excludesFrom(testConfigProps,"minimr.query.files");  excludesFrom(testConfigProps,"minitez.query.files");  excludesFrom(testConfigProps,"encrypted.query.files");  excludesFrom(testConfigProps,"spark.only.query.files");  excludesFrom(testConfigProps,"miniSparkOnYarn.only.query.files");  excludesFrom(testConfigProps,"disabled.query.files");  excludesFrom(testConfigProps,"localSpark.only.query.files");  excludesFrom(testConfigProps,"druid.query.files");  excludesFrom(testConfigProps,"druid.kafka.query.files");  setResultsDir("ql/src/test/results/clientpositive");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("");  setClusterType(MiniClusterType.none);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 1601 @LENGTH@ 1121
---INS ExpressionStatement@@MethodInvocation:excludesFrom(testConfigProps,"druid.kafka.query.files") @TO@ TryStatement@@try {  setQueryDir("ql/src/test/queries/clientpositive");  excludesFrom(testConfigProps,"minillap.query.files");  excludesFrom(testConfigProps,"minillaplocal.query.files");  excludesFrom(testConfigProps,"minimr.query.files");  excludesFrom(testConfigProps,"minitez.query.files");  excludesFrom(testConfigProps,"encrypted.query.files");  excludesFrom(testConfigProps,"spark.only.query.files");  excludesFrom(testConfigProps,"miniSparkOnYarn.only.query.files");  excludesFrom(testConfigProps,"disabled.query.files");  excludesFrom(testConfigProps,"localSpark.only.query.files");  excludesFrom(testConfigProps,"druid.query.files");  setResultsDir("ql/src/test/results/clientpositive");  setLogDir("itests/qtest/target/qfile-results/clientpositive");  setInitScript("q_test_init.sql");  setCleanupScript("q_test_cleanup.sql");  setHiveConfDir("");  setClusterType(MiniClusterType.none);} catch (Exception e) {  throw new RuntimeException("can't construct cliconfig",e);} @AT@ 2326 @LENGTH@ 57
------INS MethodInvocation@@excludesFrom(testConfigProps,"druid.kafka.query.files") @TO@ ExpressionStatement@@MethodInvocation:excludesFrom(testConfigProps,"druid.kafka.query.files") @AT@ 2326 @LENGTH@ 56
---------INS SimpleName@@MethodName:excludesFrom:[testConfigProps, "druid.kafka.query.files"] @TO@ MethodInvocation@@excludesFrom(testConfigProps,"druid.kafka.query.files") @AT@ 2326 @LENGTH@ 56
------------INS SimpleName@@testConfigProps @TO@ SimpleName@@MethodName:excludesFrom:[testConfigProps, "druid.kafka.query.files"] @AT@ 2339 @LENGTH@ 15
------------INS StringLiteral@@"druid.kafka.query.files" @TO@ SimpleName@@MethodName:excludesFrom:[testConfigProps, "druid.kafka.query.files"] @AT@ 2356 @LENGTH@ 25


UPD IfStatement@@if (csrfCookie == null) {  return null;} @TO@ if ((csrfCookie == null) || !StringUtils.hasText(csrfCookie.getValue())) {  return null;} @AT@ 3404 @LENGTH@ 47
---INS InfixExpression@@(csrfCookie == null) || !StringUtils.hasText(csrfCookie.getValue()) @TO@ IfStatement@@if (csrfCookie == null) {  return null;} @AT@ 3408 @LENGTH@ 67
------INS ParenthesizedExpression@@(csrfCookie == null) @TO@ InfixExpression@@(csrfCookie == null) || !StringUtils.hasText(csrfCookie.getValue()) @AT@ 3408 @LENGTH@ 20
---------INS InfixExpression@@csrfCookie == null @TO@ ParenthesizedExpression@@(csrfCookie == null) @AT@ 3409 @LENGTH@ 18
------------MOV SimpleName@@csrfCookie @TO@ InfixExpression@@csrfCookie == null @AT@ 3408 @LENGTH@ 10
------------MOV Operator@@== @TO@ InfixExpression@@csrfCookie == null @AT@ 3418 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@csrfCookie == null @AT@ 3422 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@(csrfCookie == null) || !StringUtils.hasText(csrfCookie.getValue()) @AT@ 3428 @LENGTH@ 2
------INS PrefixExpression@@!StringUtils.hasText(csrfCookie.getValue()) @TO@ InfixExpression@@(csrfCookie == null) || !StringUtils.hasText(csrfCookie.getValue()) @AT@ 3432 @LENGTH@ 43
---------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(csrfCookie.getValue()) @AT@ 3432 @LENGTH@ 1
---------INS MethodInvocation@@StringUtils.hasText(csrfCookie.getValue()) @TO@ PrefixExpression@@!StringUtils.hasText(csrfCookie.getValue()) @AT@ 3433 @LENGTH@ 42
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(csrfCookie.getValue()) @AT@ 3433 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[csrfCookie.getValue()] @TO@ MethodInvocation@@StringUtils.hasText(csrfCookie.getValue()) @AT@ 3445 @LENGTH@ 30
---------------INS MethodInvocation@@csrfCookie.getValue() @TO@ SimpleName@@MethodName:hasText:[csrfCookie.getValue()] @AT@ 3453 @LENGTH@ 21
------------------INS SimpleName@@Name:csrfCookie @TO@ MethodInvocation@@csrfCookie.getValue() @AT@ 3453 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@csrfCookie.getValue() @AT@ 3464 @LENGTH@ 10
---DEL InfixExpression@@csrfCookie == null @AT@ 3408 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:log.info("Augmented war: \n" + war.toString(true)) @TO@ MethodInvocation:log.fine("Augmented war: \n" + war.toString(true)) @AT@ 1973 @LENGTH@ 51
---UPD MethodInvocation@@log.info("Augmented war: \n" + war.toString(true)) @TO@ log.fine("Augmented war: \n" + war.toString(true)) @AT@ 1973 @LENGTH@ 50
------UPD SimpleName@@MethodName:info:["Augmented war: \n" + war.toString(true)] @TO@ MethodName:fine:["Augmented war: \n" + war.toString(true)] @AT@ 1977 @LENGTH@ 46


UPD TypeDeclaration@@[public]MetaStoreFactoryForTests,  @TO@ [public, final]MetaStoreFactoryForTests,  @AT@ 1466 @LENGTH@ 3320
---INS Modifier@@final @TO@ TypeDeclaration@@[public]MetaStoreFactoryForTests,  @AT@ 1473 @LENGTH@ 5


UPD Block@@ThenBody:{  int port=MetaStoreTestUtils.startMetaStoreWithRetry();  hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port);} @TO@ ThenBody:{  MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf);} @AT@ 2727 @LENGTH@ 156
---DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(); @AT@ 2735 @LENGTH@ 56
------DEL PrimitiveType@@int @AT@ 2735 @LENGTH@ 3
------DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry() @AT@ 2739 @LENGTH@ 51
---------DEL SimpleName@@port @AT@ 2739 @LENGTH@ 4
---------DEL MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry() @AT@ 2746 @LENGTH@ 44
------------DEL SimpleName@@Name:MetaStoreTestUtils @AT@ 2746 @LENGTH@ 18
------------DEL SimpleName@@MethodName:startMetaStoreWithRetry:[] @AT@ 2765 @LENGTH@ 25
---UPD ExpressionStatement@@MethodInvocation:hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 2798 @LENGTH@ 79
------UPD MethodInvocation@@hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port) @TO@ MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 2798 @LENGTH@ 78
---------UPD SimpleName@@Name:hiveConf @TO@ Name:MetaStoreTestUtils @AT@ 2798 @LENGTH@ 8
---------UPD SimpleName@@MethodName:setVar:[HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + port] @TO@ MethodName:startMetaStoreWithRetry:[hiveConf] @AT@ 2807 @LENGTH@ 69
------------INS SimpleName@@hiveConf @TO@ SimpleName@@MethodName:setVar:[HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + port] @AT@ 2778 @LENGTH@ 8
------------DEL QualifiedName@@HiveConf.ConfVars.METASTOREURIS @AT@ 2814 @LENGTH@ 31
---------------DEL QualifiedName@@HiveConf.ConfVars @AT@ 2814 @LENGTH@ 17
------------------DEL SimpleName@@HiveConf @AT@ 2814 @LENGTH@ 8
------------------DEL SimpleName@@ConfVars @AT@ 2823 @LENGTH@ 8
---------------DEL SimpleName@@METASTOREURIS @AT@ 2832 @LENGTH@ 13
------------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2847 @LENGTH@ 28
---------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2847 @LENGTH@ 21
---------------DEL Operator@@+ @AT@ 2868 @LENGTH@ 1
---------------DEL SimpleName@@port @AT@ 2871 @LENGTH@ 4


UPD FieldDeclaration@@private, final, HttpStatus, [httpStatus=HttpStatus.FORBIDDEN] @TO@ private, HttpStatus, [httpStatus=HttpStatus.FORBIDDEN] @AT@ 1419 @LENGTH@ 59
---DEL Modifier@@final @AT@ 1427 @LENGTH@ 5


INS MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @TO@ TypeDeclaration@@[public]ReactorContextWebFilter, [WebFilter] @AT@ 1447 @LENGTH@ 219
---INS Modifier@@public @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1447 @LENGTH@ 6
---INS ParameterizedType@@Mono<Void> @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1454 @LENGTH@ 10
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Void> @AT@ 1454 @LENGTH@ 4
------INS SimpleType@@Void @TO@ ParameterizedType@@Mono<Void> @AT@ 1459 @LENGTH@ 4
---INS SimpleName@@MethodName:filter @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1465 @LENGTH@ 6
---INS SingleVariableDeclaration@@ServerWebExchange exchange @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1472 @LENGTH@ 26
------INS SimpleType@@ServerWebExchange @TO@ SingleVariableDeclaration@@ServerWebExchange exchange @AT@ 1472 @LENGTH@ 17
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@ServerWebExchange exchange @AT@ 1490 @LENGTH@ 8
---INS SingleVariableDeclaration@@WebFilterChain chain @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1500 @LENGTH@ 20
------INS SimpleType@@WebFilterChain @TO@ SingleVariableDeclaration@@WebFilterChain chain @AT@ 1500 @LENGTH@ 14
------INS SimpleName@@chain @TO@ SingleVariableDeclaration@@WebFilterChain chain @AT@ 1515 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1526 @LENGTH@ 137
------INS MethodInvocation@@chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @TO@ ReturnStatement@@MethodInvocation:chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @AT@ 1533 @LENGTH@ 129
---------INS MethodInvocation@@MethodName:filter:[exchange] @TO@ MethodInvocation@@chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @AT@ 1533 @LENGTH@ 22
------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:filter:[exchange] @AT@ 1546 @LENGTH@ 8
---------INS SimpleName@@Name:chain @TO@ MethodInvocation@@chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @AT@ 1533 @LENGTH@ 5
---------INS SimpleName@@MethodName:subscriberContext:[c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)] @TO@ MethodInvocation@@chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @AT@ 1560 @LENGTH@ 102
------------INS LambdaExpression@@c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @TO@ SimpleName@@MethodName:subscriberContext:[c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)] @AT@ 1578 @LENGTH@ 79
---------------INS VariableDeclarationFragment@@c @TO@ LambdaExpression@@c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @AT@ 1578 @LENGTH@ 1
------------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c @AT@ 1578 @LENGTH@ 1
---------------INS ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @TO@ LambdaExpression@@c -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @AT@ 1583 @LENGTH@ 74
------------------MOV MethodInvocation@@c.hasKey(SecurityContext.class) @TO@ ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @AT@ 1546 @LENGTH@ 31
------------------INS SimpleName@@c @TO@ ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @AT@ 1617 @LENGTH@ 1
------------------INS MethodInvocation@@withSecurityContext(c,exchange) @TO@ ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @AT@ 1625 @LENGTH@ 32
---------------------INS SimpleName@@MethodName:withSecurityContext:[c, exchange] @TO@ MethodInvocation@@withSecurityContext(c,exchange) @AT@ 1625 @LENGTH@ 32
------------------------INS SimpleName@@c @TO@ SimpleName@@MethodName:withSecurityContext:[c, exchange] @AT@ 1645 @LENGTH@ 1
------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:withSecurityContext:[c, exchange] @AT@ 1648 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUri()).thenReturn("http://provider.com/user") @TO@ MethodDeclaration@@public, void, MethodName:loadUserWhenUserNameAttributeNameIsNullThenThrowOAuth2AuthenticationException,  @AT@ 3763 @LENGTH@ 76
---INS MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn("http://provider.com/user") @TO@ ExpressionStatement@@MethodInvocation:when(this.userInfoEndpoint.getUri()).thenReturn("http://provider.com/user") @AT@ 3763 @LENGTH@ 75
------INS MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUri()] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn("http://provider.com/user") @AT@ 3763 @LENGTH@ 36
---------INS MethodInvocation@@this.userInfoEndpoint.getUri() @TO@ MethodInvocation@@MethodName:when:[this.userInfoEndpoint.getUri()] @AT@ 3768 @LENGTH@ 30
------------INS FieldAccess@@this.userInfoEndpoint @TO@ MethodInvocation@@this.userInfoEndpoint.getUri() @AT@ 3768 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3768 @LENGTH@ 4
---------------INS SimpleName@@userInfoEndpoint @TO@ FieldAccess@@this.userInfoEndpoint @AT@ 3773 @LENGTH@ 16
------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@this.userInfoEndpoint.getUri() @AT@ 3790 @LENGTH@ 8
------INS SimpleName@@MethodName:thenReturn:["http://provider.com/user"] @TO@ MethodInvocation@@when(this.userInfoEndpoint.getUri()).thenReturn("http://provider.com/user") @AT@ 3800 @LENGTH@ 38
---------INS StringLiteral@@"http://provider.com/user" @TO@ SimpleName@@MethodName:thenReturn:["http://provider.com/user"] @AT@ 3811 @LENGTH@ 26


UPD TypeDeclaration@@[public, static]InfoServerGroupsActivator, AbstractRejectOptionActivator[DomainOptionActivator] @TO@ [public, static]InfoServerGroupActivator, AbstractRejectOptionActivator[DomainOptionActivator] @AT@ 7460 @LENGTH@ 599
---UPD SimpleName@@ClassName:InfoServerGroupsActivator @TO@ ClassName:InfoServerGroupActivator @AT@ 7480 @LENGTH@ 25


UPD ReturnStatement@@StringLiteral:"org/wildfly/swarm/microprofile/jwtauth" @TO@ StringLiteral:"microprofile-jwt" @AT@ 1137 @LENGTH@ 48
---UPD StringLiteral@@"org/wildfly/swarm/microprofile/jwtauth" @TO@ "microprofile-jwt" @AT@ 1144 @LENGTH@ 40


UPD Block@@ThenBody:{  int index=contentType.indexOf("charset=");  if (index > 0) {    String charset=contentType.substring(index + 8);    exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));  }} @TO@ ThenBody:{  String charset=getCharsetFromContentType(contentType);  if (charset != null) {    exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));  }} @AT@ 3385 @LENGTH@ 337
---UPD VariableDeclarationStatement@@int index=contentType.indexOf("charset="); @TO@ String charset=getCharsetFromContentType(contentType); @AT@ 3458 @LENGTH@ 44
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@int index=contentType.indexOf("charset="); @AT@ 3399 @LENGTH@ 6
------DEL PrimitiveType@@int @AT@ 3458 @LENGTH@ 3
------UPD VariableDeclarationFragment@@index=contentType.indexOf("charset=") @TO@ charset=getCharsetFromContentType(contentType) @AT@ 3462 @LENGTH@ 39
---------UPD SimpleName@@index @TO@ charset @AT@ 3462 @LENGTH@ 5
---------UPD MethodInvocation@@contentType.indexOf("charset=") @TO@ getCharsetFromContentType(contentType) @AT@ 3470 @LENGTH@ 31
------------INS SimpleName@@MethodName:getCharsetFromContentType:[contentType] @TO@ MethodInvocation@@contentType.indexOf("charset=") @AT@ 3416 @LENGTH@ 38
---------------INS SimpleName@@contentType @TO@ SimpleName@@MethodName:getCharsetFromContentType:[contentType] @AT@ 3442 @LENGTH@ 11
------------DEL SimpleName@@Name:contentType @AT@ 3470 @LENGTH@ 11
------------DEL SimpleName@@MethodName:indexOf:["charset="] @AT@ 3482 @LENGTH@ 19
---------------DEL StringLiteral@@"charset=" @AT@ 3490 @LENGTH@ 10
---UPD IfStatement@@if (index > 0) {  String charset=contentType.substring(index + 8);  exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));} @TO@ if (charset != null) {  exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));} @AT@ 3515 @LENGTH@ 197
------UPD InfixExpression@@index > 0 @TO@ charset != null @AT@ 3519 @LENGTH@ 9
---------INS NullLiteral@@null @TO@ InfixExpression@@index > 0 @AT@ 3483 @LENGTH@ 4
---------UPD SimpleName@@index @TO@ charset @AT@ 3519 @LENGTH@ 5
---------UPD Operator@@> @TO@ != @AT@ 3524 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3527 @LENGTH@ 1
------UPD Block@@ThenBody:{  String charset=contentType.substring(index + 8);  exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));} @TO@ ThenBody:{  exchange.setProperty(Exchange.CHARSET_NAME,IOConverter.normalizeCharset(charset));} @AT@ 3530 @LENGTH@ 182
---------DEL VariableDeclarationStatement@@String charset=contentType.substring(index + 8); @AT@ 3548 @LENGTH@ 50
------------DEL SimpleType@@String @AT@ 3548 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@charset=contentType.substring(index + 8) @AT@ 3555 @LENGTH@ 42
---------------DEL SimpleName@@charset @AT@ 3555 @LENGTH@ 7
---------------DEL MethodInvocation@@contentType.substring(index + 8) @AT@ 3565 @LENGTH@ 32
------------------DEL SimpleName@@Name:contentType @AT@ 3565 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:substring:[index + 8] @AT@ 3577 @LENGTH@ 20
---------------------DEL InfixExpression@@index + 8 @AT@ 3587 @LENGTH@ 9
------------------------DEL SimpleName@@index @AT@ 3587 @LENGTH@ 5
------------------------DEL Operator@@+ @AT@ 3592 @LENGTH@ 1
------------------------DEL NumberLiteral@@8 @AT@ 3595 @LENGTH@ 1


UPD MethodDeclaration@@private, static, void, MethodName:assertPartitionUnchanged, Partition partition, List<String> testValues, List<String> partCols,  @TO@ private, void, MethodName:assertPartitionUnchanged, Partition partition, List<String> testValues, List<String> partCols, MetaException,  @AT@ 5969 @LENGTH@ 809
---DEL Modifier@@static @AT@ 5977 @LENGTH@ 6
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@private, static, void, MethodName:assertPartitionUnchanged, Partition partition, List<String> testValues, List<String> partCols,  @AT@ 6130 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:assertTrue(partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath)) @TO@ MethodInvocation:assertTrue(partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath)) @AT@ 6460 @LENGTH@ 123
------UPD MethodInvocation@@assertTrue(partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath)) @TO@ assertTrue(partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath)) @AT@ 6460 @LENGTH@ 122
---------UPD SimpleName@@MethodName:assertTrue:[partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath)] @TO@ MethodName:assertTrue:[partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath)] @AT@ 6460 @LENGTH@ 122
------------UPD MethodInvocation@@partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath) @TO@ partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath) @AT@ 6471 @LENGTH@ 110
---------------UPD SimpleName@@MethodName:endsWith:["warehouse/testpartdb" + ".db/testparttable/" + partPath] @TO@ MethodName:equals:[metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath] @AT@ 6503 @LENGTH@ 78
------------------UPD InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath @TO@ metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath @AT@ 6512 @LENGTH@ 68
---------------------DEL StringLiteral@@"warehouse/testpartdb" @AT@ 6512 @LENGTH@ 22
---------------------INS MethodInvocation@@metaStore.getWarehouseRoot() @TO@ InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath @AT@ 6524 @LENGTH@ 28
------------------------INS SimpleName@@Name:metaStore @TO@ MethodInvocation@@metaStore.getWarehouseRoot() @AT@ 6524 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getWarehouseRoot:[] @TO@ MethodInvocation@@metaStore.getWarehouseRoot() @AT@ 6534 @LENGTH@ 18
---------------------UPD StringLiteral@@".db/testparttable/" @TO@ "/testpartdb.db/testparttable/" @AT@ 6549 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:m.put(name,Collections.singletonList(value)) @TO@ MethodInvocation:m.computeIfAbsent(name,k -> new ArrayList<>()).add(value) @AT@ 12258 @LENGTH@ 46
---UPD MethodInvocation@@m.put(name,Collections.singletonList(value)) @TO@ m.computeIfAbsent(name,k -> new ArrayList<>()).add(value) @AT@ 12258 @LENGTH@ 45
------INS MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @TO@ MethodInvocation@@m.put(name,Collections.singletonList(value)) @AT@ 12111 @LENGTH@ 47
---------INS SimpleName@@name @TO@ MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @AT@ 12129 @LENGTH@ 4
---------INS LambdaExpression@@k -> new ArrayList<>() @TO@ MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @AT@ 12135 @LENGTH@ 22
------------INS VariableDeclarationFragment@@k @TO@ LambdaExpression@@k -> new ArrayList<>() @AT@ 12135 @LENGTH@ 1
---------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 12135 @LENGTH@ 1
---------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 12135 @LENGTH@ 1
------------INS ClassInstanceCreation@@ArrayList<>[] @TO@ LambdaExpression@@k -> new ArrayList<>() @AT@ 12140 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 12140 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 12144 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 12144 @LENGTH@ 9
------DEL SimpleName@@MethodName:put:[name, Collections.singletonList(value)] @AT@ 12260 @LENGTH@ 43
---------DEL SimpleName@@name @AT@ 12264 @LENGTH@ 4
---------DEL MethodInvocation@@Collections.singletonList(value) @AT@ 12270 @LENGTH@ 32
------------DEL SimpleName@@Name:Collections @AT@ 12270 @LENGTH@ 11
------MOV SimpleName@@MethodName:singletonList:[value] @TO@ MethodInvocation@@m.put(name,Collections.singletonList(value)) @AT@ 12282 @LENGTH@ 20


UPD MethodDeclaration@@private, WebResponseExceptionTranslator, MethodName:exceptionTranslator,  @TO@ private, WebResponseExceptionTranslator<OAuth2Exception>, MethodName:exceptionTranslator,  @AT@ 8605 @LENGTH@ 125
---DEL SimpleType@@WebResponseExceptionTranslator @AT@ 8613 @LENGTH@ 30
---INS ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @TO@ MethodDeclaration@@private, WebResponseExceptionTranslator, MethodName:exceptionTranslator,  @AT@ 8691 @LENGTH@ 47
------INS SimpleType@@WebResponseExceptionTranslator @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 8691 @LENGTH@ 30
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 8722 @LENGTH@ 15


INS MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @TO@ TypeDeclaration@@ExpressionEvaluatingParameterBinder,  @AT@ 7984 @LENGTH@ 277
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 7984 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 7992 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 7999 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 7999 @LENGTH@ 4
---INS SimpleName@@MethodName:asBinary @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 8006 @LENGTH@ 8
---INS SingleVariableDeclaration@@UUID uuid @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 8015 @LENGTH@ 9
------INS SimpleType@@UUID @TO@ SingleVariableDeclaration@@UUID uuid @AT@ 8015 @LENGTH@ 4
------INS SimpleName@@uuid @TO@ SingleVariableDeclaration@@UUID uuid @AT@ 8020 @LENGTH@ 4
---INS VariableDeclarationStatement@@byte[] bytes=new byte[16]; @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 8031 @LENGTH@ 28
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[16]; @AT@ 8031 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 8031 @LENGTH@ 4
------INS VariableDeclarationFragment@@bytes=new byte[16] @TO@ VariableDeclarationStatement@@byte[] bytes=new byte[16]; @AT@ 8038 @LENGTH@ 20
---------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes=new byte[16] @AT@ 8038 @LENGTH@ 5
---------INS ArrayCreation@@new byte[16] @TO@ VariableDeclarationFragment@@bytes=new byte[16] @AT@ 8046 @LENGTH@ 12
------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[16] @AT@ 8050 @LENGTH@ 8
---------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 8050 @LENGTH@ 4
------------INS NumberLiteral@@16 @TO@ ArrayCreation@@new byte[16] @AT@ 8055 @LENGTH@ 2
---INS VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()); @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 8063 @LENGTH@ 173
------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()); @AT@ 8063 @LENGTH@ 10
------INS VariableDeclarationFragment@@bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @TO@ VariableDeclarationStatement@@ByteBuffer bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()); @AT@ 8074 @LENGTH@ 161
---------INS SimpleName@@bb @TO@ VariableDeclarationFragment@@bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8074 @LENGTH@ 2
---------INS MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @TO@ VariableDeclarationFragment@@bb=ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8079 @LENGTH@ 156
------------INS MethodInvocation@@MethodName:putLong:[uuid.getMostSignificantBits()] @TO@ MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8079 @LENGTH@ 108
---------------INS MethodInvocation@@uuid.getMostSignificantBits() @TO@ MethodInvocation@@MethodName:putLong:[uuid.getMostSignificantBits()] @AT@ 8157 @LENGTH@ 29
------------------INS SimpleName@@Name:uuid @TO@ MethodInvocation@@uuid.getMostSignificantBits() @AT@ 8157 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getMostSignificantBits:[] @TO@ MethodInvocation@@uuid.getMostSignificantBits() @AT@ 8162 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:order:[ByteOrder.LITTLE_ENDIAN] @TO@ MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8079 @LENGTH@ 61
---------------INS QualifiedName@@ByteOrder.LITTLE_ENDIAN @TO@ MethodInvocation@@MethodName:order:[ByteOrder.LITTLE_ENDIAN] @AT@ 8116 @LENGTH@ 23
------------------INS SimpleName@@ByteOrder @TO@ QualifiedName@@ByteOrder.LITTLE_ENDIAN @AT@ 8116 @LENGTH@ 9
------------------INS SimpleName@@LITTLE_ENDIAN @TO@ QualifiedName@@ByteOrder.LITTLE_ENDIAN @AT@ 8126 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:wrap:[bytes] @TO@ MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8079 @LENGTH@ 22
---------------INS SimpleName@@bytes @TO@ MethodInvocation@@MethodName:wrap:[bytes] @AT@ 8095 @LENGTH@ 5
------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8079 @LENGTH@ 10
------------INS SimpleName@@MethodName:putLong:[uuid.getLeastSignificantBits()] @TO@ MethodInvocation@@ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN).putLong(uuid.getMostSignificantBits()).putLong(uuid.getLeastSignificantBits()) @AT@ 8196 @LENGTH@ 39
---------------INS MethodInvocation@@uuid.getLeastSignificantBits() @TO@ SimpleName@@MethodName:putLong:[uuid.getLeastSignificantBits()] @AT@ 8204 @LENGTH@ 30
------------------INS SimpleName@@Name:uuid @TO@ MethodInvocation@@uuid.getLeastSignificantBits() @AT@ 8204 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getLeastSignificantBits:[] @TO@ MethodInvocation@@uuid.getLeastSignificantBits() @AT@ 8209 @LENGTH@ 25
---INS ReturnStatement@@MethodInvocation:bb.array() @TO@ MethodDeclaration@@private, static, byte[], MethodName:asBinary, UUID uuid,  @AT@ 8240 @LENGTH@ 18
------INS MethodInvocation@@bb.array() @TO@ ReturnStatement@@MethodInvocation:bb.array() @AT@ 8247 @LENGTH@ 10
---------INS SimpleName@@Name:bb @TO@ MethodInvocation@@bb.array() @AT@ 8247 @LENGTH@ 2
---------INS SimpleName@@MethodName:array:[] @TO@ MethodInvocation@@bb.array() @AT@ 8250 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator exceptionTranslator,  @TO@ public, void, MethodName:setExceptionTranslator, WebResponseExceptionTranslator<OAuth2Exception> exceptionTranslator,  @AT@ 2701 @LENGTH@ 141
---UPD SingleVariableDeclaration@@WebResponseExceptionTranslator exceptionTranslator @TO@ WebResponseExceptionTranslator<OAuth2Exception> exceptionTranslator @AT@ 2736 @LENGTH@ 50
------DEL SimpleType@@WebResponseExceptionTranslator @AT@ 2736 @LENGTH@ 30
------INS ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @TO@ SingleVariableDeclaration@@WebResponseExceptionTranslator exceptionTranslator @AT@ 2753 @LENGTH@ 47
---------INS SimpleType@@WebResponseExceptionTranslator @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 2753 @LENGTH@ 30
---------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 2784 @LENGTH@ 15


UPD ReturnStatement@@InfixExpression:"PersonWithVersionPropertyOfTypeInteger [id=" + id + ", firstName="+ firstName+ ", age="+ age+ ", version="+ version+ "]" @TO@ InfixExpression:"PersonWithVersionPropertyOfTypeLong [id=" + id + ", firstName="+ firstName+ ", age="+ age+ ", version="+ version+ "]" @AT@ 882 @LENGTH@ 139
---UPD InfixExpression@@"PersonWithVersionPropertyOfTypeInteger [id=" + id + ", firstName="+ firstName+ ", age="+ age+ ", version="+ version+ "]" @TO@ "PersonWithVersionPropertyOfTypeLong [id=" + id + ", firstName="+ firstName+ ", age="+ age+ ", version="+ version+ "]" @AT@ 889 @LENGTH@ 131
------UPD StringLiteral@@"PersonWithVersionPropertyOfTypeInteger [id=" @TO@ "PersonWithVersionPropertyOfTypeLong [id=" @AT@ 889 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:ignore.add("io.opentracing.contrib:opentracing-") @TO@ MethodDeclaration@@private, static, void, MethodName:lookForVersionMismatch, ITestConfig config, List<MavenResolvedArtifact> dependencyArtifacts,  @AT@ 14777 @LENGTH@ 50
---INS MethodInvocation@@ignore.add("io.opentracing.contrib:opentracing-") @TO@ ExpressionStatement@@MethodInvocation:ignore.add("io.opentracing.contrib:opentracing-") @AT@ 14777 @LENGTH@ 49
------INS SimpleName@@Name:ignore @TO@ MethodInvocation@@ignore.add("io.opentracing.contrib:opentracing-") @AT@ 14777 @LENGTH@ 6
------INS SimpleName@@MethodName:add:["io.opentracing.contrib:opentracing-"] @TO@ MethodInvocation@@ignore.add("io.opentracing.contrib:opentracing-") @AT@ 14784 @LENGTH@ 42
---------INS StringLiteral@@"io.opentracing.contrib:opentracing-" @TO@ SimpleName@@MethodName:add:["io.opentracing.contrib:opentracing-"] @AT@ 14788 @LENGTH@ 37


UPD EnhancedForStatement@@for (final String headerName : headers.keySet()) {  if (headerName.startsWith("Sforce") || headerName.startsWith("x-sfdc")) {    final Object headerValue=inboundMessage.getHeader(headerName);    if (headerValue instanceof String) {      answer.put(headerName,Collections.singletonList((String)headerValue));    } else     if (headerValue instanceof String[]) {      answer.put(headerName,Arrays.asList((String[])headerValue));    } else     if (headerValue instanceof Collection) {      Collection<?> collection=(Collection<?>)headerValue;      answer.put(headerName,collection.stream().map(String.class::cast).collect(Collectors.toList()));    } else {      answer.put(headerName,Collections.singletonList(String.valueOf(headerValue)));    }  }} @TO@ for (final String headerName : headers.keySet()) {  final String headerNameLowercase=headerName.toLowerCase(Locale.US);  if (headerNameLowercase.startsWith("sforce") || headerNameLowercase.startsWith("x-sfdc")) {    final Object headerValue=inboundMessage.getHeader(headerName);    if (headerValue instanceof String) {      answer.put(headerName,Collections.singletonList((String)headerValue));    } else     if (headerValue instanceof String[]) {      answer.put(headerName,Arrays.asList((String[])headerValue));    } else     if (headerValue instanceof Collection) {      Collection<?> collection=(Collection<?>)headerValue;      answer.put(headerName,collection.stream().map(String.class::cast).collect(Collectors.toList()));    } else {      answer.put(headerName,Collections.singletonList(String.valueOf(headerValue)));    }  }} @AT@ 1612 @LENGTH@ 934
---UPD IfStatement@@if (headerName.startsWith("Sforce") || headerName.startsWith("x-sfdc")) {  final Object headerValue=inboundMessage.getHeader(headerName);  if (headerValue instanceof String) {    answer.put(headerName,Collections.singletonList((String)headerValue));  } else   if (headerValue instanceof String[]) {    answer.put(headerName,Arrays.asList((String[])headerValue));  } else   if (headerValue instanceof Collection) {    Collection<?> collection=(Collection<?>)headerValue;    answer.put(headerName,collection.stream().map(String.class::cast).collect(Collectors.toList()));  } else {    answer.put(headerName,Collections.singletonList(String.valueOf(headerValue)));  }} @TO@ if (headerNameLowercase.startsWith("sforce") || headerNameLowercase.startsWith("x-sfdc")) {  final Object headerValue=inboundMessage.getHeader(headerName);  if (headerValue instanceof String) {    answer.put(headerName,Collections.singletonList((String)headerValue));  } else   if (headerValue instanceof String[]) {    answer.put(headerName,Arrays.asList((String[])headerValue));  } else   if (headerValue instanceof Collection) {    Collection<?> collection=(Collection<?>)headerValue;    answer.put(headerName,collection.stream().map(String.class::cast).collect(Collectors.toList()));  } else {    answer.put(headerName,Collections.singletonList(String.valueOf(headerValue)));  }} @AT@ 1675 @LENGTH@ 861
------UPD InfixExpression@@headerName.startsWith("Sforce") || headerName.startsWith("x-sfdc") @TO@ headerNameLowercase.startsWith("sforce") || headerNameLowercase.startsWith("x-sfdc") @AT@ 1679 @LENGTH@ 66
---------UPD MethodInvocation@@headerName.startsWith("Sforce") @TO@ headerNameLowercase.startsWith("sforce") @AT@ 1679 @LENGTH@ 31
------------UPD SimpleName@@Name:headerName @TO@ Name:headerNameLowercase @AT@ 1679 @LENGTH@ 10
------------UPD SimpleName@@MethodName:startsWith:["Sforce"] @TO@ MethodName:startsWith:["sforce"] @AT@ 1690 @LENGTH@ 20
---------------UPD StringLiteral@@"Sforce" @TO@ "sforce" @AT@ 1701 @LENGTH@ 8
---------UPD MethodInvocation@@headerName.startsWith("x-sfdc") @TO@ headerNameLowercase.startsWith("x-sfdc") @AT@ 1714 @LENGTH@ 31
------------UPD SimpleName@@Name:headerName @TO@ Name:headerNameLowercase @AT@ 1714 @LENGTH@ 10
---INS VariableDeclarationStatement@@final String headerNameLowercase=headerName.toLowerCase(Locale.US); @TO@ EnhancedForStatement@@for (final String headerName : headers.keySet()) {  if (headerName.startsWith("Sforce") || headerName.startsWith("x-sfdc")) {    final Object headerValue=inboundMessage.getHeader(headerName);    if (headerValue instanceof String) {      answer.put(headerName,Collections.singletonList((String)headerValue));    } else     if (headerValue instanceof String[]) {      answer.put(headerName,Arrays.asList((String[])headerValue));    } else     if (headerValue instanceof Collection) {      Collection<?> collection=(Collection<?>)headerValue;      answer.put(headerName,collection.stream().map(String.class::cast).collect(Collectors.toList()));    } else {      answer.put(headerName,Collections.singletonList(String.valueOf(headerValue)));    }  }} @AT@ 1700 @LENGTH@ 69
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String headerNameLowercase=headerName.toLowerCase(Locale.US); @AT@ 1700 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String headerNameLowercase=headerName.toLowerCase(Locale.US); @AT@ 1706 @LENGTH@ 6
------INS VariableDeclarationFragment@@headerNameLowercase=headerName.toLowerCase(Locale.US) @TO@ VariableDeclarationStatement@@final String headerNameLowercase=headerName.toLowerCase(Locale.US); @AT@ 1713 @LENGTH@ 55
---------INS SimpleName@@headerNameLowercase @TO@ VariableDeclarationFragment@@headerNameLowercase=headerName.toLowerCase(Locale.US) @AT@ 1713 @LENGTH@ 19
---------INS MethodInvocation@@headerName.toLowerCase(Locale.US) @TO@ VariableDeclarationFragment@@headerNameLowercase=headerName.toLowerCase(Locale.US) @AT@ 1735 @LENGTH@ 33
------------INS SimpleName@@Name:headerName @TO@ MethodInvocation@@headerName.toLowerCase(Locale.US) @AT@ 1735 @LENGTH@ 10
------------INS SimpleName@@MethodName:toLowerCase:[Locale.US] @TO@ MethodInvocation@@headerName.toLowerCase(Locale.US) @AT@ 1746 @LENGTH@ 22
---------------INS QualifiedName@@Locale.US @TO@ SimpleName@@MethodName:toLowerCase:[Locale.US] @AT@ 1758 @LENGTH@ 9
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.US @AT@ 1758 @LENGTH@ 6
------------------INS SimpleName@@US @TO@ QualifiedName@@Locale.US @AT@ 1765 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:builder.scope("openid","profile","email","address","phone") @TO@ MethodInvocation:builder.scope("openid","profile","email") @AT@ 1574 @LENGTH@ 64
---UPD MethodInvocation@@builder.scope("openid","profile","email","address","phone") @TO@ builder.scope("openid","profile","email") @AT@ 1574 @LENGTH@ 63
------UPD SimpleName@@MethodName:scope:["openid", "profile", "email", "address", "phone"] @TO@ MethodName:scope:["openid", "profile", "email"] @AT@ 1582 @LENGTH@ 55
---------DEL StringLiteral@@"address" @AT@ 1618 @LENGTH@ 9
---------DEL StringLiteral@@"phone" @AT@ 1629 @LENGTH@ 7


UPD TypeDeclaration@@[public, final]OAuth2Error,  @TO@ [public, final]OAuth2Error, [Serializable] @AT@ 1274 @LENGTH@ 748
---INS SimpleType@@Serializable @TO@ TypeDeclaration@@[public, final]OAuth2Error,  @AT@ 1414 @LENGTH@ 12


UPD FieldDeclaration@@private, WebResponseExceptionTranslator, [translator=new DefaultWebResponseExceptionTranslator()] @TO@ private, WebResponseExceptionTranslator<OAuth2Exception>, [translator=new DefaultWebResponseExceptionTranslator()] @AT@ 1012 @LENGTH@ 96
---INS ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @TO@ FieldDeclaration@@private, WebResponseExceptionTranslator, [translator=new DefaultWebResponseExceptionTranslator()] @AT@ 1020 @LENGTH@ 47
------INS SimpleType@@WebResponseExceptionTranslator @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 1020 @LENGTH@ 30
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 1051 @LENGTH@ 15
---DEL SimpleType@@WebResponseExceptionTranslator @AT@ 1020 @LENGTH@ 30


UPD Block@@SyncBody:{  StateTransferManager transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager();  CacheTopology topology=transfer.getCacheTopology();  Set<String> members=getMembers(topology);  while (!expectedMembers.equals(members)) {    logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());    this.wait(endTime - now);    now=System.currentTimeMillis();    if (now >= endTime) {      throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));    }    topology=transfer.getCacheTopology();    members=getMembers(topology);  }  logger.infof("Cache %s/%s successfully established view %s within %d ms. Topology id = %d",containerName,cacheName,expectedMembers,now - start,topology.getTopologyId());} @TO@ SyncBody:{  DistributionManager dist=cache.getAdvancedCache().getDistributionManager();  LocalizedCacheTopology topology=dist.getCacheTopology();  Set<String> members=getMembers(topology);  long start=System.currentTimeMillis();  long now=start;  long endTime=start + timeout;  while (!expectedMembers.equals(members)) {    logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());    this.wait(endTime - now);    now=System.currentTimeMillis();    if (now >= endTime) {      throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));    }    topology=dist.getCacheTopology();    members=getMembers(topology);  }  logger.infof("Cache %s/%s successfully established view %s within %d ms. Topology id = %d",containerName,cacheName,expectedMembers,now - start,topology.getTopologyId());} @AT@ 3024 @LENGTH@ 1183
---MOV VariableDeclarationStatement@@long start=System.currentTimeMillis(); @TO@ Block@@SyncBody:{  StateTransferManager transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager();  CacheTopology topology=transfer.getCacheTopology();  Set<String> members=getMembers(topology);  while (!expectedMembers.equals(members)) {    logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());    this.wait(endTime - now);    now=System.currentTimeMillis();    if (now >= endTime) {      throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));    }    topology=transfer.getCacheTopology();    members=getMembers(topology);  }  logger.infof("Cache %s/%s successfully established view %s within %d ms. Topology id = %d",containerName,cacheName,expectedMembers,now - start,topology.getTopologyId());} @AT@ 2877 @LENGTH@ 40
---MOV VariableDeclarationStatement@@long now=start; @TO@ Block@@SyncBody:{  StateTransferManager transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager();  CacheTopology topology=transfer.getCacheTopology();  Set<String> members=getMembers(topology);  while (!expectedMembers.equals(members)) {    logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());    this.wait(endTime - now);    now=System.currentTimeMillis();    if (now >= endTime) {      throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));    }    topology=transfer.getCacheTopology();    members=getMembers(topology);  }  logger.infof("Cache %s/%s successfully established view %s within %d ms. Topology id = %d",containerName,cacheName,expectedMembers,now - start,topology.getTopologyId());} @AT@ 2930 @LENGTH@ 17
---MOV VariableDeclarationStatement@@long endTime=start + timeout; @TO@ Block@@SyncBody:{  StateTransferManager transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager();  CacheTopology topology=transfer.getCacheTopology();  Set<String> members=getMembers(topology);  while (!expectedMembers.equals(members)) {    logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());    this.wait(endTime - now);    now=System.currentTimeMillis();    if (now >= endTime) {      throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));    }    topology=transfer.getCacheTopology();    members=getMembers(topology);  }  logger.infof("Cache %s/%s successfully established view %s within %d ms. Topology id = %d",containerName,cacheName,expectedMembers,now - start,topology.getTopologyId());} @AT@ 2960 @LENGTH@ 31
---UPD VariableDeclarationStatement@@StateTransferManager transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager(); @TO@ DistributionManager dist=cache.getAdvancedCache().getDistributionManager(); @AT@ 3042 @LENGTH@ 106
------UPD SimpleType@@StateTransferManager @TO@ DistributionManager @AT@ 3042 @LENGTH@ 20
------UPD VariableDeclarationFragment@@transfer=cache.getAdvancedCache().getComponentRegistry().getStateTransferManager() @TO@ dist=cache.getAdvancedCache().getDistributionManager() @AT@ 3063 @LENGTH@ 84
---------UPD SimpleName@@transfer @TO@ dist @AT@ 3063 @LENGTH@ 8
---------UPD MethodInvocation@@cache.getAdvancedCache().getComponentRegistry().getStateTransferManager() @TO@ cache.getAdvancedCache().getDistributionManager() @AT@ 3074 @LENGTH@ 73
------------DEL MethodInvocation@@MethodName:getComponentRegistry:[] @AT@ 3074 @LENGTH@ 47
------------UPD SimpleName@@MethodName:getStateTransferManager:[] @TO@ MethodName:getDistributionManager:[] @AT@ 3122 @LENGTH@ 25
---UPD VariableDeclarationStatement@@CacheTopology topology=transfer.getCacheTopology(); @TO@ LocalizedCacheTopology topology=dist.getCacheTopology(); @AT@ 3165 @LENGTH@ 53
------UPD SimpleType@@CacheTopology @TO@ LocalizedCacheTopology @AT@ 3165 @LENGTH@ 13
------UPD VariableDeclarationFragment@@topology=transfer.getCacheTopology() @TO@ topology=dist.getCacheTopology() @AT@ 3179 @LENGTH@ 38
---------UPD MethodInvocation@@transfer.getCacheTopology() @TO@ dist.getCacheTopology() @AT@ 3190 @LENGTH@ 27
------------UPD SimpleName@@Name:transfer @TO@ Name:dist @AT@ 3190 @LENGTH@ 8
---UPD WhileStatement@@while (!expectedMembers.equals(members)) {  logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());  this.wait(endTime - now);  now=System.currentTimeMillis();  if (now >= endTime) {    throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));  }  topology=transfer.getCacheTopology();  members=getMembers(topology);} @TO@ while (!expectedMembers.equals(members)) {  logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());  this.wait(endTime - now);  now=System.currentTimeMillis();  if (now >= endTime) {    throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));  }  topology=dist.getCacheTopology();  members=getMembers(topology);} @AT@ 3295 @LENGTH@ 707
------UPD Block@@WhileBody:{  logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());  this.wait(endTime - now);  now=System.currentTimeMillis();  if (now >= endTime) {    throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));  }  topology=transfer.getCacheTopology();  members=getMembers(topology);} @TO@ WhileBody:{  logger.infof("%s != %s, waiting for a topology change event. Current topology id = %d",expectedMembers,members,topology.getTopologyId());  this.wait(endTime - now);  now=System.currentTimeMillis();  if (now >= endTime) {    throw new InterruptedException(String.format("Cache %s/%s failed to establish view %s within %d ms.  Current view is: %s",containerName,cacheName,expectedMembers,timeout,members));  }  topology=dist.getCacheTopology();  members=getMembers(topology);} @AT@ 3336 @LENGTH@ 666
---------UPD ExpressionStatement@@Assignment:topology=transfer.getCacheTopology() @TO@ Assignment:topology=dist.getCacheTopology() @AT@ 3893 @LENGTH@ 39
------------UPD Assignment@@topology=transfer.getCacheTopology() @TO@ topology=dist.getCacheTopology() @AT@ 3893 @LENGTH@ 38
---------------UPD MethodInvocation@@transfer.getCacheTopology() @TO@ dist.getCacheTopology() @AT@ 3904 @LENGTH@ 27
------------------UPD SimpleName@@Name:transfer @TO@ Name:dist @AT@ 3904 @LENGTH@ 8


UPD TryStatement@@try {  conn.openPipeline();  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    ExpiringOAuth2RefreshToken expiringRefreshToken=(ExpiringOAuth2RefreshToken)refreshToken;    Date expiration=expiringRefreshToken.getExpiration();    if (expiration != null) {      int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue();      conn.expire(refreshKey,seconds);      conn.expire(refreshAuthKey,seconds);    }  }  conn.closePipeline();}  finally {  conn.close();} @TO@ try {  conn.openPipeline();  if (springDataRedis_2_0) {    try {      this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);      this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));    } catch (    Exception ex) {      throw new RuntimeException(ex);    }  } else {    conn.set(refreshKey,serializedRefreshToken);    conn.set(refreshAuthKey,serialize(authentication));  }  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    ExpiringOAuth2RefreshToken expiringRefreshToken=(ExpiringOAuth2RefreshToken)refreshToken;    Date expiration=expiringRefreshToken.getExpiration();    if (expiration != null) {      int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue();      conn.expire(refreshKey,seconds);      conn.expire(refreshAuthKey,seconds);    }  }  conn.closePipeline();}  finally {  conn.close();} @AT@ 11287 @LENGTH@ 648
---INS IfStatement@@if (springDataRedis_2_0) {  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} else {  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @TO@ TryStatement@@try {  conn.openPipeline();  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));  if (refreshToken instanceof ExpiringOAuth2RefreshToken) {    ExpiringOAuth2RefreshToken expiringRefreshToken=(ExpiringOAuth2RefreshToken)refreshToken;    Date expiration=expiringRefreshToken.getExpiration();    if (expiration != null) {      int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue();      conn.expire(refreshKey,seconds);      conn.expire(refreshAuthKey,seconds);    }  }  conn.closePipeline();}  finally {  conn.close();} @AT@ 11320 @LENGTH@ 405
------INS SimpleName@@springDataRedis_2_0 @TO@ IfStatement@@if (springDataRedis_2_0) {  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} else {  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @AT@ 11324 @LENGTH@ 19
------INS Block@@ThenBody:{  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} @TO@ IfStatement@@if (springDataRedis_2_0) {  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} else {  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @AT@ 11345 @LENGTH@ 261
---------INS TryStatement@@try {  this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);  this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));} catch (Exception ex) {  throw new RuntimeException(ex);} @TO@ Block@@ThenBody:{  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} @AT@ 11351 @LENGTH@ 250
------------INS ExpressionStatement@@MethodInvocation:this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken) @TO@ TryStatement@@try {  this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);  this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));} catch (Exception ex) {  throw new RuntimeException(ex);} @AT@ 11362 @LENGTH@ 77
---------------INS MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken) @TO@ ExpressionStatement@@MethodInvocation:this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken) @AT@ 11362 @LENGTH@ 76
------------------INS FieldAccess@@this.redisConnectionSet_2_0 @TO@ MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken) @AT@ 11362 @LENGTH@ 27
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.redisConnectionSet_2_0 @AT@ 11362 @LENGTH@ 4
---------------------INS SimpleName@@redisConnectionSet_2_0 @TO@ FieldAccess@@this.redisConnectionSet_2_0 @AT@ 11367 @LENGTH@ 22
------------------INS SimpleName@@MethodName:invoke:[conn, refreshKey, serializedRefreshToken] @TO@ MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken) @AT@ 11390 @LENGTH@ 48
---------------------INS SimpleName@@conn @TO@ SimpleName@@MethodName:invoke:[conn, refreshKey, serializedRefreshToken] @AT@ 11397 @LENGTH@ 4
---------------------INS SimpleName@@refreshKey @TO@ SimpleName@@MethodName:invoke:[conn, refreshKey, serializedRefreshToken] @AT@ 11403 @LENGTH@ 10
---------------------INS SimpleName@@serializedRefreshToken @TO@ SimpleName@@MethodName:invoke:[conn, refreshKey, serializedRefreshToken] @AT@ 11415 @LENGTH@ 22
------------INS ExpressionStatement@@MethodInvocation:this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication)) @TO@ TryStatement@@try {  this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);  this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));} catch (Exception ex) {  throw new RuntimeException(ex);} @AT@ 11445 @LENGTH@ 84
---------------INS MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication)) @TO@ ExpressionStatement@@MethodInvocation:this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication)) @AT@ 11445 @LENGTH@ 83
------------------INS FieldAccess@@this.redisConnectionSet_2_0 @TO@ MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication)) @AT@ 11445 @LENGTH@ 27
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.redisConnectionSet_2_0 @AT@ 11445 @LENGTH@ 4
---------------------INS SimpleName@@redisConnectionSet_2_0 @TO@ FieldAccess@@this.redisConnectionSet_2_0 @AT@ 11450 @LENGTH@ 22
------------------INS SimpleName@@MethodName:invoke:[conn, refreshAuthKey, serialize(authentication)] @TO@ MethodInvocation@@this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication)) @AT@ 11473 @LENGTH@ 55
---------------------INS SimpleName@@conn @TO@ SimpleName@@MethodName:invoke:[conn, refreshAuthKey, serialize(authentication)] @AT@ 11480 @LENGTH@ 4
---------------------INS SimpleName@@refreshAuthKey @TO@ SimpleName@@MethodName:invoke:[conn, refreshAuthKey, serialize(authentication)] @AT@ 11486 @LENGTH@ 14
---------------------INS MethodInvocation@@serialize(authentication) @TO@ SimpleName@@MethodName:invoke:[conn, refreshAuthKey, serialize(authentication)] @AT@ 11502 @LENGTH@ 25
------------------------INS SimpleName@@MethodName:serialize:[authentication] @TO@ MethodInvocation@@serialize(authentication) @AT@ 11502 @LENGTH@ 25
---------------------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:serialize:[authentication] @AT@ 11512 @LENGTH@ 14
------------INS CatchClause@@catch (Exception ex) {  throw new RuntimeException(ex);} @TO@ TryStatement@@try {  this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);  this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));} catch (Exception ex) {  throw new RuntimeException(ex);} @AT@ 11536 @LENGTH@ 65
---------------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeException(ex);} @AT@ 11543 @LENGTH@ 12
------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 11543 @LENGTH@ 9
------------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 11553 @LENGTH@ 2
---------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(ex) @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeException(ex);} @AT@ 11564 @LENGTH@ 31
------------------INS ClassInstanceCreation@@RuntimeException[ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(ex) @AT@ 11570 @LENGTH@ 24
---------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[ex] @AT@ 11570 @LENGTH@ 3
---------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[ex] @AT@ 11574 @LENGTH@ 16
---------------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeException[ex] @AT@ 11591 @LENGTH@ 2
------INS Block@@ElseBody:{  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @TO@ IfStatement@@if (springDataRedis_2_0) {  try {    this.redisConnectionSet_2_0.invoke(conn,refreshKey,serializedRefreshToken);    this.redisConnectionSet_2_0.invoke(conn,refreshAuthKey,serialize(authentication));  } catch (  Exception ex) {    throw new RuntimeException(ex);  }} else {  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @AT@ 11612 @LENGTH@ 113
---------MOV ExpressionStatement@@MethodInvocation:conn.set(refreshKey,serializedRefreshToken) @TO@ Block@@ElseBody:{  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @AT@ 11320 @LENGTH@ 45
---------MOV ExpressionStatement@@MethodInvocation:conn.set(refreshAuthKey,serialize(authentication)) @TO@ Block@@ElseBody:{  conn.set(refreshKey,serializedRefreshToken);  conn.set(refreshAuthKey,serialize(authentication));} @AT@ 11369 @LENGTH@ 52


INS ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(1) @TO@ MethodDeclaration@@public, void, MethodName:testAdviceOnCompletion, Exception,  @AT@ 1270 @LENGTH@ 55
---INS MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(1) @TO@ ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:result").expectedMessageCount(1) @AT@ 1270 @LENGTH@ 54
------INS MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(1) @AT@ 1270 @LENGTH@ 30
---------INS StringLiteral@@"mock:result" @TO@ MethodInvocation@@MethodName:getMockEndpoint:["mock:result"] @AT@ 1286 @LENGTH@ 13
------INS SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodInvocation@@getMockEndpoint("mock:result").expectedMessageCount(1) @AT@ 1301 @LENGTH@ 23
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[1] @AT@ 1322 @LENGTH@ 1


MOV MethodDeclaration@@public, voidMethodName:MyIterator, int count,  @TO@ TypeDeclaration@@[public, static]MyIterator, [Iterator<String>] @AT@ 3092 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:testConversion("mapCol","map<string,string>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional binary value;\n"+ "    }\n"+ "  }\n"+ "}\n") @TO@ MethodInvocation:testConversion("mapCol","map<string,string>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional binary value (UTF8);\n"+ "    }\n"+ "  }\n"+ "}\n") @AT@ 4195 @LENGTH@ 365
---UPD MethodInvocation@@testConversion("mapCol","map<string,string>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional binary value;\n"+ "    }\n"+ "  }\n"+ "}\n") @TO@ testConversion("mapCol","map<string,string>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional binary value (UTF8);\n"+ "    }\n"+ "  }\n"+ "}\n") @AT@ 4195 @LENGTH@ 364
------UPD SimpleName@@MethodName:testConversion:["mapCol", "map<string,string>", "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional binary value;\n"+ "    }\n"+ "  }\n"+ "}\n"] @TO@ MethodName:testConversion:["mapCol", "map<string,string>", "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional binary value (UTF8);\n"+ "    }\n"+ "  }\n"+ "}\n"] @AT@ 4195 @LENGTH@ 364
---------UPD InfixExpression@@"message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional binary value;\n"+ "    }\n"+ "  }\n"+ "}\n" @TO@ "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional binary value (UTF8);\n"+ "    }\n"+ "  }\n"+ "}\n" @AT@ 4266 @LENGTH@ 292
------------UPD StringLiteral@@"      required binary key;\n" @TO@ "      required binary key (UTF8);\n" @AT@ 4415 @LENGTH@ 30
------------UPD StringLiteral@@"      optional binary value;\n" @TO@ "      optional binary value (UTF8);\n" @AT@ 4460 @LENGTH@ 32


INS MethodDeclaration@@void, MethodName:preAuthorizeNotAnonymous,  @TO@ TypeDeclaration@@[public]MethodSecurityService,  @AT@ 1541 @LENGTH@ 27
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:preAuthorizeNotAnonymous,  @AT@ 1536 @LENGTH@ 4
---INS SimpleName@@MethodName:preAuthorizeNotAnonymous @TO@ MethodDeclaration@@void, MethodName:preAuthorizeNotAnonymous,  @AT@ 1541 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @TO@ TypeDeclaration@@[public]ClaimAccessorTests,  @AT@ 2299 @LENGTH@ 402
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2299 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2306 @LENGTH@ 4
---INS SimpleName@@MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2311 @LENGTH@ 56
---INS VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2374 @LENGTH@ 43
------INS SimpleType@@Instant @TO@ VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @AT@ 2374 @LENGTH@ 7
------INS VariableDeclarationFragment@@expectedClaimValue=Instant.now() @TO@ VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @AT@ 2382 @LENGTH@ 34
---------INS SimpleName@@expectedClaimValue @TO@ VariableDeclarationFragment@@expectedClaimValue=Instant.now() @AT@ 2382 @LENGTH@ 18
---------INS MethodInvocation@@Instant.now() @TO@ VariableDeclarationFragment@@expectedClaimValue=Instant.now() @AT@ 2403 @LENGTH@ 13
------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.now() @AT@ 2403 @LENGTH@ 7
------------INS SimpleName@@MethodName:now:[] @TO@ MethodInvocation@@Instant.now() @AT@ 2411 @LENGTH@ 5
---INS VariableDeclarationStatement@@String claimName="integerSeconds"; @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2420 @LENGTH@ 36
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String claimName="integerSeconds"; @AT@ 2420 @LENGTH@ 6
------INS VariableDeclarationFragment@@claimName="integerSeconds" @TO@ VariableDeclarationStatement@@String claimName="integerSeconds"; @AT@ 2427 @LENGTH@ 28
---------INS SimpleName@@claimName @TO@ VariableDeclarationFragment@@claimName="integerSeconds" @AT@ 2427 @LENGTH@ 9
---------INS StringLiteral@@"integerSeconds" @TO@ VariableDeclarationFragment@@claimName="integerSeconds" @AT@ 2439 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2459 @LENGTH@ 89
------INS MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()) @TO@ ExpressionStatement@@MethodInvocation:this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()) @AT@ 2459 @LENGTH@ 88
---------INS FieldAccess@@this.claims @TO@ MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()) @AT@ 2459 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.claims @AT@ 2459 @LENGTH@ 4
------------INS SimpleName@@claims @TO@ FieldAccess@@this.claims @AT@ 2464 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()] @TO@ MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()) @AT@ 2471 @LENGTH@ 76
------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()] @AT@ 2475 @LENGTH@ 9
------------INS MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).intValue() @TO@ SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).intValue()] @AT@ 2486 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:valueOf:[expectedClaimValue.getEpochSecond()] @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).intValue() @AT@ 2486 @LENGTH@ 49
------------------INS MethodInvocation@@expectedClaimValue.getEpochSecond() @TO@ MethodInvocation@@MethodName:valueOf:[expectedClaimValue.getEpochSecond()] @AT@ 2499 @LENGTH@ 35
---------------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.getEpochSecond() @AT@ 2499 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getEpochSecond:[] @TO@ MethodInvocation@@expectedClaimValue.getEpochSecond() @AT@ 2518 @LENGTH@ 16
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).intValue() @AT@ 2486 @LENGTH@ 4
---------------INS SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).intValue() @AT@ 2536 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenIntegerTypeSecondsThenReturnInstant,  @AT@ 2552 @LENGTH@ 146
------INS MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 2552 @LENGTH@ 145
---------INS MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsInstant(claimName)] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 2552 @LENGTH@ 59
------------INS MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @TO@ MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsInstant(claimName)] @AT@ 2563 @LENGTH@ 47
---------------INS FieldAccess@@this.claimAccessor @TO@ MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @AT@ 2563 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.claimAccessor @AT@ 2563 @LENGTH@ 4
------------------INS SimpleName@@claimAccessor @TO@ FieldAccess@@this.claimAccessor @AT@ 2568 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getClaimAsInstant:[claimName] @TO@ MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @AT@ 2582 @LENGTH@ 28
------------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:getClaimAsInstant:[claimName] @AT@ 2600 @LENGTH@ 9
---------INS SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 2612 @LENGTH@ 85
------------INS MethodInvocation@@expectedClaimValue.minusSeconds(1) @TO@ SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @AT@ 2627 @LENGTH@ 34
---------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.minusSeconds(1) @AT@ 2627 @LENGTH@ 18
---------------INS SimpleName@@MethodName:minusSeconds:[1] @TO@ MethodInvocation@@expectedClaimValue.minusSeconds(1) @AT@ 2646 @LENGTH@ 15
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:minusSeconds:[1] @AT@ 2659 @LENGTH@ 1
------------INS MethodInvocation@@expectedClaimValue.plusSeconds(1) @TO@ SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @AT@ 2663 @LENGTH@ 33
---------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.plusSeconds(1) @AT@ 2663 @LENGTH@ 18
---------------INS SimpleName@@MethodName:plusSeconds:[1] @TO@ MethodInvocation@@expectedClaimValue.plusSeconds(1) @AT@ 2682 @LENGTH@ 14
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:plusSeconds:[1] @AT@ 2694 @LENGTH@ 1


UPD ReturnStatement@@ClassInstanceCreation:new FlowExecutorBuilder(flowRegistry,this.applicationContext) @TO@ ClassInstanceCreation:new FlowExecutorBuilder(flowRegistry) @AT@ 3001 @LENGTH@ 70
---UPD ClassInstanceCreation@@FlowExecutorBuilder[flowRegistry, this.applicationContext] @TO@ FlowExecutorBuilder[flowRegistry] @AT@ 3008 @LENGTH@ 62
------DEL FieldAccess@@this.applicationContext @AT@ 3046 @LENGTH@ 23
---------DEL ThisExpression@@this @AT@ 3046 @LENGTH@ 4
---------DEL SimpleName@@applicationContext @AT@ 3051 @LENGTH@ 18


UPD TypeDeclaration@@[public]SecurityFlowExecutionListener, FlowExecutionListenerAdapter @TO@ [public]SecurityFlowExecutionListener, [FlowExecutionListener] @AT@ 2018 @LENGTH@ 4357
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 2069 @LENGTH@ 28


UPD MethodDeclaration@@public, static, String, MethodName:concat, final String basePath, final String fullFilenameToAdd,  @TO@ public, static, String, MethodName:concat, final String basePath, final String fullFileNameToAdd,  @AT@ 19457 @LENGTH@ 705
---UPD SingleVariableDeclaration@@final String fullFilenameToAdd @TO@ final String fullFileNameToAdd @AT@ 19508 @LENGTH@ 30
------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 19521 @LENGTH@ 17
---UPD VariableDeclarationStatement@@final int prefix=getPrefixLength(fullFilenameToAdd); @TO@ final int prefix=getPrefixLength(fullFileNameToAdd); @AT@ 19550 @LENGTH@ 54
------UPD VariableDeclarationFragment@@prefix=getPrefixLength(fullFilenameToAdd) @TO@ prefix=getPrefixLength(fullFileNameToAdd) @AT@ 19560 @LENGTH@ 43
---------UPD MethodInvocation@@getPrefixLength(fullFilenameToAdd) @TO@ getPrefixLength(fullFileNameToAdd) @AT@ 19569 @LENGTH@ 34
------------UPD SimpleName@@MethodName:getPrefixLength:[fullFilenameToAdd] @TO@ MethodName:getPrefixLength:[fullFileNameToAdd] @AT@ 19569 @LENGTH@ 34
---------------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 19585 @LENGTH@ 17
---UPD IfStatement@@if (prefix > 0) {  return normalize(fullFilenameToAdd);} @TO@ if (prefix > 0) {  return normalize(fullFileNameToAdd);} @AT@ 19674 @LENGTH@ 76
------UPD Block@@ThenBody:{  return normalize(fullFilenameToAdd);} @TO@ ThenBody:{  return normalize(fullFileNameToAdd);} @AT@ 19690 @LENGTH@ 60
---------UPD ReturnStatement@@MethodInvocation:normalize(fullFilenameToAdd) @TO@ MethodInvocation:normalize(fullFileNameToAdd) @AT@ 19704 @LENGTH@ 36
------------UPD MethodInvocation@@normalize(fullFilenameToAdd) @TO@ normalize(fullFileNameToAdd) @AT@ 19711 @LENGTH@ 28
---------------UPD SimpleName@@MethodName:normalize:[fullFilenameToAdd] @TO@ MethodName:normalize:[fullFileNameToAdd] @AT@ 19711 @LENGTH@ 28
------------------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 19721 @LENGTH@ 17
---UPD IfStatement@@if (len == 0) {  return normalize(fullFilenameToAdd);} @TO@ if (len == 0) {  return normalize(fullFileNameToAdd);} @AT@ 19869 @LENGTH@ 74
------UPD Block@@ThenBody:{  return normalize(fullFilenameToAdd);} @TO@ ThenBody:{  return normalize(fullFileNameToAdd);} @AT@ 19883 @LENGTH@ 60
---------UPD ReturnStatement@@MethodInvocation:normalize(fullFilenameToAdd) @TO@ MethodInvocation:normalize(fullFileNameToAdd) @AT@ 19897 @LENGTH@ 36
------------UPD MethodInvocation@@normalize(fullFilenameToAdd) @TO@ normalize(fullFileNameToAdd) @AT@ 19904 @LENGTH@ 28
---------------UPD SimpleName@@MethodName:normalize:[fullFilenameToAdd] @TO@ MethodName:normalize:[fullFileNameToAdd] @AT@ 19904 @LENGTH@ 28
------------------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 19914 @LENGTH@ 17
---UPD IfStatement@@if (isSeparator(ch)) {  return normalize(basePath + fullFilenameToAdd);} @TO@ if (isSeparator(ch)) {  return normalize(basePath + fullFileNameToAdd);} @AT@ 20002 @LENGTH@ 92
------UPD Block@@ThenBody:{  return normalize(basePath + fullFilenameToAdd);} @TO@ ThenBody:{  return normalize(basePath + fullFileNameToAdd);} @AT@ 20023 @LENGTH@ 71
---------UPD ReturnStatement@@MethodInvocation:normalize(basePath + fullFilenameToAdd) @TO@ MethodInvocation:normalize(basePath + fullFileNameToAdd) @AT@ 20037 @LENGTH@ 47
------------UPD MethodInvocation@@normalize(basePath + fullFilenameToAdd) @TO@ normalize(basePath + fullFileNameToAdd) @AT@ 20044 @LENGTH@ 39
---------------UPD SimpleName@@MethodName:normalize:[basePath + fullFilenameToAdd] @TO@ MethodName:normalize:[basePath + fullFileNameToAdd] @AT@ 20044 @LENGTH@ 39
------------------UPD InfixExpression@@basePath + fullFilenameToAdd @TO@ basePath + fullFileNameToAdd @AT@ 20054 @LENGTH@ 28
---------------------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 20065 @LENGTH@ 17
---UPD ReturnStatement@@MethodInvocation:normalize(basePath + '/' + fullFilenameToAdd) @TO@ MethodInvocation:normalize(basePath + '/' + fullFileNameToAdd) @AT@ 20103 @LENGTH@ 53
------UPD MethodInvocation@@normalize(basePath + '/' + fullFilenameToAdd) @TO@ normalize(basePath + '/' + fullFileNameToAdd) @AT@ 20110 @LENGTH@ 45
---------UPD SimpleName@@MethodName:normalize:[basePath + '/' + fullFilenameToAdd] @TO@ MethodName:normalize:[basePath + '/' + fullFileNameToAdd] @AT@ 20110 @LENGTH@ 45
------------UPD InfixExpression@@basePath + '/' + fullFilenameToAdd @TO@ basePath + '/' + fullFileNameToAdd @AT@ 20120 @LENGTH@ 34
---------------UPD SimpleName@@fullFilenameToAdd @TO@ fullFileNameToAdd @AT@ 20137 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @TO@ TypeDeclaration@@[public]ProjectionOperationUnitTests,  @AT@ 60859 @LENGTH@ 959
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 60859 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 60866 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 60871 @LENGTH@ 52
---INS VariableDeclarationStatement@@Document exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }"); @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 60931 @LENGTH@ 234
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }"); @AT@ 60931 @LENGTH@ 8
------INS VariableDeclarationFragment@@exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @TO@ VariableDeclarationStatement@@Document exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }"); @AT@ 60940 @LENGTH@ 224
---------INS SimpleName@@exprected @TO@ VariableDeclarationFragment@@exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @AT@ 60940 @LENGTH@ 9
---------INS MethodInvocation@@Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @TO@ VariableDeclarationFragment@@exprected=Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @AT@ 60952 @LENGTH@ 212
------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @AT@ 60952 @LENGTH@ 8
------------INS SimpleName@@MethodName:parse:["{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }"] @TO@ MethodInvocation@@Document.parse("{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }") @AT@ 60961 @LENGTH@ 203
---------------INS StringLiteral@@"{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }" @TO@ SimpleName@@MethodName:parse:["{ \"$project\" : { \"results\" : { \"$reduce\" : { \"input\" : { \"$slice\" : [\"$array\", 5] }, \"initialValue\" : \"\", \"in\" : { \"$concat\" : [\"$$value\", \"/\", \"$$this\"] } } } } }"] @AT@ 60972 @LENGTH@ 191
---INS VariableDeclarationStatement@@Reduce reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")); @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 61169 @LENGTH@ 190
------INS SimpleType@@Reduce @TO@ VariableDeclarationStatement@@Reduce reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")); @AT@ 61169 @LENGTH@ 6
------INS VariableDeclarationFragment@@reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @TO@ VariableDeclarationStatement@@Reduce reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")); @AT@ 61176 @LENGTH@ 182
---------INS SimpleName@@reduceEntryPoint @TO@ VariableDeclarationFragment@@reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61176 @LENGTH@ 16
---------INS MethodInvocation@@Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @TO@ VariableDeclarationFragment@@reduceEntryPoint=Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61195 @LENGTH@ 163
------------INS MethodInvocation@@MethodName:withInitialValue:[""] @TO@ MethodInvocation@@Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61195 @LENGTH@ 85
---------------INS StringLiteral@@"" @TO@ MethodInvocation@@MethodName:withInitialValue:[""] @AT@ 61277 @LENGTH@ 2
------------INS MethodInvocation@@MethodName:arrayOf:[Slice.sliceArrayOf("array").itemCount(5)] @TO@ MethodInvocation@@Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61195 @LENGTH@ 56
---------------INS MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @TO@ MethodInvocation@@MethodName:arrayOf:[Slice.sliceArrayOf("array").itemCount(5)] @AT@ 61210 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:sliceArrayOf:["array"] @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61210 @LENGTH@ 27
---------------------INS StringLiteral@@"array" @TO@ MethodInvocation@@MethodName:sliceArrayOf:["array"] @AT@ 61229 @LENGTH@ 7
------------------INS SimpleName@@Name:Slice @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61210 @LENGTH@ 5
------------------INS SimpleName@@MethodName:itemCount:[5] @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61238 @LENGTH@ 12
---------------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:itemCount:[5] @AT@ 61248 @LENGTH@ 1
------------INS SimpleName@@Name:Reduce @TO@ MethodInvocation@@Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61195 @LENGTH@ 6
------------INS SimpleName@@MethodName:reduce:[Concat.valueOf("$$value").concat("/").concatValueOf("$$this")] @TO@ MethodInvocation@@Reduce.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).withInitialValue("").reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")) @AT@ 61289 @LENGTH@ 69
---------------INS MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @TO@ SimpleName@@MethodName:reduce:[Concat.valueOf("$$value").concat("/").concatValueOf("$$this")] @AT@ 61296 @LENGTH@ 61
------------------INS MethodInvocation@@MethodName:concat:["/"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61296 @LENGTH@ 37
---------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:concat:["/"] @AT@ 61329 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:valueOf:["$$value"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61296 @LENGTH@ 25
---------------------INS StringLiteral@@"$$value" @TO@ MethodInvocation@@MethodName:valueOf:["$$value"] @AT@ 61311 @LENGTH@ 9
------------------INS SimpleName@@Name:Concat @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61296 @LENGTH@ 6
------------------INS SimpleName@@MethodName:concatValueOf:["$$this"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61334 @LENGTH@ 23
---------------------INS StringLiteral@@"$$this" @TO@ SimpleName@@MethodName:concatValueOf:["$$this"] @AT@ 61348 @LENGTH@ 8
---INS VariableDeclarationStatement@@Reduce arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith(""); @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 61363 @LENGTH@ 193
------INS SimpleType@@Reduce @TO@ VariableDeclarationStatement@@Reduce arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith(""); @AT@ 61363 @LENGTH@ 6
------INS VariableDeclarationFragment@@arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @TO@ VariableDeclarationStatement@@Reduce arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith(""); @AT@ 61370 @LENGTH@ 185
---------INS SimpleName@@arrayEntryPoint @TO@ VariableDeclarationFragment@@arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61370 @LENGTH@ 15
---------INS MethodInvocation@@ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @TO@ VariableDeclarationFragment@@arrayEntryPoint=ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61388 @LENGTH@ 167
------------INS MethodInvocation@@MethodName:reduce:[Concat.valueOf("$$value").concat("/").concatValueOf("$$this")] @TO@ MethodInvocation@@ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61388 @LENGTH@ 142
---------------INS MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @TO@ MethodInvocation@@MethodName:reduce:[Concat.valueOf("$$value").concat("/").concatValueOf("$$this")] @AT@ 61468 @LENGTH@ 61
------------------INS MethodInvocation@@MethodName:concat:["/"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61468 @LENGTH@ 37
---------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:concat:["/"] @AT@ 61501 @LENGTH@ 3
------------------INS MethodInvocation@@MethodName:valueOf:["$$value"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61468 @LENGTH@ 25
---------------------INS StringLiteral@@"$$value" @TO@ MethodInvocation@@MethodName:valueOf:["$$value"] @AT@ 61483 @LENGTH@ 9
------------------INS SimpleName@@Name:Concat @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61468 @LENGTH@ 6
------------------INS SimpleName@@MethodName:concatValueOf:["$$this"] @TO@ MethodInvocation@@Concat.valueOf("$$value").concat("/").concatValueOf("$$this") @AT@ 61506 @LENGTH@ 23
---------------------INS StringLiteral@@"$$this" @TO@ SimpleName@@MethodName:concatValueOf:["$$this"] @AT@ 61520 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:arrayOf:[Slice.sliceArrayOf("array").itemCount(5)] @TO@ MethodInvocation@@ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61388 @LENGTH@ 64
---------------INS MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @TO@ MethodInvocation@@MethodName:arrayOf:[Slice.sliceArrayOf("array").itemCount(5)] @AT@ 61411 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:sliceArrayOf:["array"] @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61411 @LENGTH@ 27
---------------------INS StringLiteral@@"array" @TO@ MethodInvocation@@MethodName:sliceArrayOf:["array"] @AT@ 61430 @LENGTH@ 7
------------------INS SimpleName@@Name:Slice @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61411 @LENGTH@ 5
------------------INS SimpleName@@MethodName:itemCount:[5] @TO@ MethodInvocation@@Slice.sliceArrayOf("array").itemCount(5) @AT@ 61439 @LENGTH@ 12
---------------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:itemCount:[5] @AT@ 61449 @LENGTH@ 1
------------INS SimpleName@@Name:ArrayOperators @TO@ MethodInvocation@@ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61388 @LENGTH@ 14
------------INS SimpleName@@MethodName:startingWith:[""] @TO@ MethodInvocation@@ArrayOperators.arrayOf(Slice.sliceArrayOf("array").itemCount(5)).reduce(Concat.valueOf("$$value").concat("/").concatValueOf("$$this")).startingWith("") @AT@ 61539 @LENGTH@ 16
---------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:startingWith:[""] @AT@ 61552 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 61560 @LENGTH@ 126
------INS MethodInvocation@@assertThat(project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @AT@ 61560 @LENGTH@ 125
---------INS SimpleName@@MethodName:assertThat:[project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @TO@ MethodInvocation@@assertThat(project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @AT@ 61560 @LENGTH@ 125
------------INS MethodInvocation@@project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ SimpleName@@MethodName:assertThat:[project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @AT@ 61571 @LENGTH@ 85
---------------INS MethodInvocation@@MethodName:as:["results"] @TO@ MethodInvocation@@project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61571 @LENGTH@ 45
------------------INS StringLiteral@@"results" @TO@ MethodInvocation@@MethodName:as:["results"] @AT@ 61606 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:and:[reduceEntryPoint] @TO@ MethodInvocation@@project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61571 @LENGTH@ 31
------------------INS SimpleName@@reduceEntryPoint @TO@ MethodInvocation@@MethodName:and:[reduceEntryPoint] @AT@ 61585 @LENGTH@ 16
---------------INS MethodInvocation@@MethodName:project:[] @TO@ MethodInvocation@@project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61571 @LENGTH@ 9
---------------INS SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @TO@ MethodInvocation@@project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61617 @LENGTH@ 39
------------------INS QualifiedName@@Aggregation.DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @AT@ 61628 @LENGTH@ 27
---------------------INS SimpleName@@Aggregation @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 61628 @LENGTH@ 11
---------------------INS SimpleName@@DEFAULT_CONTEXT @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 61640 @LENGTH@ 15
------------INS MethodInvocation@@Matchers.is(exprected) @TO@ SimpleName@@MethodName:assertThat:[project().and(reduceEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @AT@ 61662 @LENGTH@ 22
---------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.is(exprected) @AT@ 61662 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[exprected] @TO@ MethodInvocation@@Matchers.is(exprected) @AT@ 61671 @LENGTH@ 13
------------------INS SimpleName@@exprected @TO@ SimpleName@@MethodName:is:[exprected] @AT@ 61674 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @TO@ MethodDeclaration@@public, void, MethodName:shouldRenderReduceWithInputAndInExpressionsCorrectly,  @AT@ 61690 @LENGTH@ 125
------INS MethodInvocation@@assertThat(project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @AT@ 61690 @LENGTH@ 124
---------INS SimpleName@@MethodName:assertThat:[project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @TO@ MethodInvocation@@assertThat(project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT),Matchers.is(exprected)) @AT@ 61690 @LENGTH@ 124
------------INS MethodInvocation@@project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @TO@ SimpleName@@MethodName:assertThat:[project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @AT@ 61701 @LENGTH@ 84
---------------INS MethodInvocation@@MethodName:as:["results"] @TO@ MethodInvocation@@project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61701 @LENGTH@ 44
------------------INS StringLiteral@@"results" @TO@ MethodInvocation@@MethodName:as:["results"] @AT@ 61735 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:and:[arrayEntryPoint] @TO@ MethodInvocation@@project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61701 @LENGTH@ 30
------------------INS SimpleName@@arrayEntryPoint @TO@ MethodInvocation@@MethodName:and:[arrayEntryPoint] @AT@ 61715 @LENGTH@ 15
---------------INS MethodInvocation@@MethodName:project:[] @TO@ MethodInvocation@@project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61701 @LENGTH@ 9
---------------INS SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @TO@ MethodInvocation@@project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT) @AT@ 61746 @LENGTH@ 39
------------------INS QualifiedName@@Aggregation.DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDocument:[Aggregation.DEFAULT_CONTEXT] @AT@ 61757 @LENGTH@ 27
---------------------INS SimpleName@@Aggregation @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 61757 @LENGTH@ 11
---------------------INS SimpleName@@DEFAULT_CONTEXT @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 61769 @LENGTH@ 15
------------INS MethodInvocation@@Matchers.is(exprected) @TO@ SimpleName@@MethodName:assertThat:[project().and(arrayEntryPoint).as("results").toDocument(Aggregation.DEFAULT_CONTEXT), Matchers.is(exprected)] @AT@ 61791 @LENGTH@ 22
---------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.is(exprected) @AT@ 61791 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[exprected] @TO@ MethodInvocation@@Matchers.is(exprected) @AT@ 61800 @LENGTH@ 13
------------------INS SimpleName@@exprected @TO@ SimpleName@@MethodName:is:[exprected] @AT@ 61803 @LENGTH@ 9


UPD TypeDeclaration@@[public]Standard14Fonts,  @TO@ [public, final]Standard14Fonts,  @AT@ 1146 @LENGTH@ 1864
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Standard14Fonts,  @AT@ 1153 @LENGTH@ 5


UPD VariableDeclarationStatement@@KafkaComponent kafka=new KafkaComponent(); @TO@ KafkaComponent kafka=new KafkaComponent(context); @AT@ 3481 @LENGTH@ 44
---UPD VariableDeclarationFragment@@kafka=new KafkaComponent() @TO@ kafka=new KafkaComponent(context) @AT@ 3496 @LENGTH@ 28
------UPD ClassInstanceCreation@@KafkaComponent[] @TO@ KafkaComponent[context] @AT@ 3504 @LENGTH@ 20
---------INS SimpleName@@context @TO@ ClassInstanceCreation@@KafkaComponent[] @AT@ 3523 @LENGTH@ 7


INS TryStatement@@try {  delegate=this.idToPasswordEncoder.get(id);} catch (NullPointerException e) {} @TO@ MethodDeclaration@@public, boolean, MethodName:matches, CharSequence rawPassword, String prefixEncodedPassword,  @AT@ 8285 @LENGTH@ 93
---INS ExpressionStatement@@Assignment:delegate=this.idToPasswordEncoder.get(id) @TO@ TryStatement@@try {  delegate=this.idToPasswordEncoder.get(id);} catch (NullPointerException e) {} @AT@ 8294 @LENGTH@ 44
------INS Assignment@@delegate=this.idToPasswordEncoder.get(id) @TO@ ExpressionStatement@@Assignment:delegate=this.idToPasswordEncoder.get(id) @AT@ 8294 @LENGTH@ 43
---------MOV MethodInvocation@@this.idToPasswordEncoder.get(id) @TO@ Assignment@@delegate=this.idToPasswordEncoder.get(id) @AT@ 8251 @LENGTH@ 32
---------INS SimpleName@@delegate @TO@ Assignment@@delegate=this.idToPasswordEncoder.get(id) @AT@ 8294 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@delegate=this.idToPasswordEncoder.get(id) @AT@ 8302 @LENGTH@ 1
---INS CatchClause@@catch (NullPointerException e) {} @TO@ TryStatement@@try {  delegate=this.idToPasswordEncoder.get(id);} catch (NullPointerException e) {} @AT@ 8343 @LENGTH@ 35
------INS SingleVariableDeclaration@@NullPointerException e @TO@ CatchClause@@catch (NullPointerException e) {} @AT@ 8349 @LENGTH@ 22
---------INS SimpleType@@NullPointerException @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 8349 @LENGTH@ 20
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 8370 @LENGTH@ 1


UPD VariableDeclarationStatement@@OAuth2Client oauth2ClientAnnotation=parameter.getParameterAnnotation(OAuth2Client.class); @TO@ OAuth2Client oauth2ClientAnnotation=AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class); @AT@ 4626 @LENGTH@ 91
---UPD VariableDeclarationFragment@@oauth2ClientAnnotation=parameter.getParameterAnnotation(OAuth2Client.class) @TO@ oauth2ClientAnnotation=AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) @AT@ 4639 @LENGTH@ 77
------UPD MethodInvocation@@parameter.getParameterAnnotation(OAuth2Client.class) @TO@ AnnotatedElementUtils.findMergedAnnotation(parameter.getParameter(),OAuth2Client.class) @AT@ 4664 @LENGTH@ 52
---------UPD SimpleName@@Name:parameter @TO@ Name:AnnotatedElementUtils @AT@ 4664 @LENGTH@ 9
---------UPD SimpleName@@MethodName:getParameterAnnotation:[OAuth2Client.class] @TO@ MethodName:findMergedAnnotation:[parameter.getParameter(), OAuth2Client.class] @AT@ 4674 @LENGTH@ 42
------------INS MethodInvocation@@parameter.getParameter() @TO@ SimpleName@@MethodName:getParameterAnnotation:[OAuth2Client.class] @AT@ 4822 @LENGTH@ 24
---------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getParameter() @AT@ 4822 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getParameter:[] @TO@ MethodInvocation@@parameter.getParameter() @AT@ 4832 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]HttpStatusServerAccessDeniedHandlerTests,  @AT@ 2317 @LENGTH@ 418
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2317 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2324 @LENGTH@ 4
---INS SimpleName@@MethodName:commenceWhenCustomStatusSubscribeThenStatusSet @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2329 @LENGTH@ 46
---INS ExpressionStatement@@Assignment:this.httpStatus=HttpStatus.NOT_FOUND @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2382 @LENGTH@ 39
------INS Assignment@@this.httpStatus=HttpStatus.NOT_FOUND @TO@ ExpressionStatement@@Assignment:this.httpStatus=HttpStatus.NOT_FOUND @AT@ 2382 @LENGTH@ 38
---------INS FieldAccess@@this.httpStatus @TO@ Assignment@@this.httpStatus=HttpStatus.NOT_FOUND @AT@ 2382 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpStatus @AT@ 2382 @LENGTH@ 4
------------INS SimpleName@@httpStatus @TO@ FieldAccess@@this.httpStatus @AT@ 2387 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.httpStatus=HttpStatus.NOT_FOUND @AT@ 2397 @LENGTH@ 1
---------INS QualifiedName@@HttpStatus.NOT_FOUND @TO@ Assignment@@this.httpStatus=HttpStatus.NOT_FOUND @AT@ 2400 @LENGTH@ 20
------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.NOT_FOUND @AT@ 2400 @LENGTH@ 10
------------INS SimpleName@@NOT_FOUND @TO@ QualifiedName@@HttpStatus.NOT_FOUND @AT@ 2411 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2424 @LENGTH@ 72
------INS Assignment@@this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @TO@ ExpressionStatement@@Assignment:this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @AT@ 2424 @LENGTH@ 71
---------INS FieldAccess@@this.handler @TO@ Assignment@@this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @AT@ 2424 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.handler @AT@ 2424 @LENGTH@ 4
------------INS SimpleName@@handler @TO@ FieldAccess@@this.handler @AT@ 2429 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @AT@ 2436 @LENGTH@ 1
---------INS ClassInstanceCreation@@HttpStatusServerAccessDeniedHandler[this.httpStatus] @TO@ Assignment@@this.handler=new HttpStatusServerAccessDeniedHandler(this.httpStatus) @AT@ 2439 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@HttpStatusServerAccessDeniedHandler[this.httpStatus] @AT@ 2439 @LENGTH@ 3
------------INS SimpleType@@HttpStatusServerAccessDeniedHandler @TO@ ClassInstanceCreation@@HttpStatusServerAccessDeniedHandler[this.httpStatus] @AT@ 2443 @LENGTH@ 35
------------INS FieldAccess@@this.httpStatus @TO@ ClassInstanceCreation@@HttpStatusServerAccessDeniedHandler[this.httpStatus] @AT@ 2479 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpStatus @AT@ 2479 @LENGTH@ 4
---------------INS SimpleName@@httpStatus @TO@ FieldAccess@@this.httpStatus @AT@ 2484 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2499 @LENGTH@ 83
------INS Assignment@@this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @TO@ ExpressionStatement@@Assignment:this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2499 @LENGTH@ 82
---------INS FieldAccess@@this.exchange @TO@ Assignment@@this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2499 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 2499 @LENGTH@ 4
------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 2504 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2512 @LENGTH@ 1
---------INS MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @TO@ Assignment@@this.exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2515 @LENGTH@ 66
------------INS SimpleName@@Name:MockServerWebExchange @TO@ MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2515 @LENGTH@ 21
------------INS SimpleName@@MethodName:from:[MockServerHttpRequest.get("/").build()] @TO@ MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/").build()) @AT@ 2537 @LENGTH@ 44
---------------INS MethodInvocation@@MockServerHttpRequest.get("/").build() @TO@ SimpleName@@MethodName:from:[MockServerHttpRequest.get("/").build()] @AT@ 2542 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:get:["/"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").build() @AT@ 2542 @LENGTH@ 30
---------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:get:["/"] @AT@ 2568 @LENGTH@ 3
------------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/").build() @AT@ 2542 @LENGTH@ 21
------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").build() @AT@ 2573 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.handler.handle(this.exchange,this.exception).block() @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2586 @LENGTH@ 59
------INS MethodInvocation@@this.handler.handle(this.exchange,this.exception).block() @TO@ ExpressionStatement@@MethodInvocation:this.handler.handle(this.exchange,this.exception).block() @AT@ 2586 @LENGTH@ 58
---------INS MethodInvocation@@MethodName:handle:[this.exchange, this.exception] @TO@ MethodInvocation@@this.handler.handle(this.exchange,this.exception).block() @AT@ 2586 @LENGTH@ 50
------------INS FieldAccess@@this.exchange @TO@ MethodInvocation@@MethodName:handle:[this.exchange, this.exception] @AT@ 2606 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 2606 @LENGTH@ 4
---------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 2611 @LENGTH@ 8
------------INS FieldAccess@@this.exception @TO@ MethodInvocation@@MethodName:handle:[this.exchange, this.exception] @AT@ 2621 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.exception @AT@ 2621 @LENGTH@ 4
---------------INS SimpleName@@exception @TO@ FieldAccess@@this.exception @AT@ 2626 @LENGTH@ 9
---------INS FieldAccess@@this.handler @TO@ MethodInvocation@@this.handler.handle(this.exchange,this.exception).block() @AT@ 2586 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.handler @AT@ 2586 @LENGTH@ 4
------------INS SimpleName@@handler @TO@ FieldAccess@@this.handler @AT@ 2591 @LENGTH@ 7
---------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.handler.handle(this.exchange,this.exception).block() @AT@ 2637 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(this.exchange.getResponse().getStatusCode()).isEqualTo(this.httpStatus) @TO@ MethodDeclaration@@public, void, MethodName:commenceWhenCustomStatusSubscribeThenStatusSet,  @AT@ 2649 @LENGTH@ 83
------INS MethodInvocation@@assertThat(this.exchange.getResponse().getStatusCode()).isEqualTo(this.httpStatus) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.exchange.getResponse().getStatusCode()).isEqualTo(this.httpStatus) @AT@ 2649 @LENGTH@ 82
---------INS MethodInvocation@@MethodName:assertThat:[this.exchange.getResponse().getStatusCode()] @TO@ MethodInvocation@@assertThat(this.exchange.getResponse().getStatusCode()).isEqualTo(this.httpStatus) @AT@ 2649 @LENGTH@ 55
------------INS MethodInvocation@@this.exchange.getResponse().getStatusCode() @TO@ MethodInvocation@@MethodName:assertThat:[this.exchange.getResponse().getStatusCode()] @AT@ 2660 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@this.exchange.getResponse().getStatusCode() @AT@ 2660 @LENGTH@ 27
---------------INS FieldAccess@@this.exchange @TO@ MethodInvocation@@this.exchange.getResponse().getStatusCode() @AT@ 2660 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 2660 @LENGTH@ 4
------------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 2665 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@this.exchange.getResponse().getStatusCode() @AT@ 2688 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:[this.httpStatus] @TO@ MethodInvocation@@assertThat(this.exchange.getResponse().getStatusCode()).isEqualTo(this.httpStatus) @AT@ 2705 @LENGTH@ 26
------------INS FieldAccess@@this.httpStatus @TO@ SimpleName@@MethodName:isEqualTo:[this.httpStatus] @AT@ 2715 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpStatus @AT@ 2715 @LENGTH@ 4
---------------INS SimpleName@@httpStatus @TO@ FieldAccess@@this.httpStatus @AT@ 2720 @LENGTH@ 10


UPD TryStatement@@try {  String mode=Util.getRunningMode(ctx);  builder.setOperationName(Util.RELOAD);  builder.addProperty(Util.START_MODE,Util.ADMIN_ONLY.equals(mode) ? Util.ADMIN_ONLY : Util.NORMAL);  ModelNode response;  response=ctx.getModelControllerClient().execute(builder.buildRequest());  if (!Util.isSuccess(response)) {    throw new CommandException(Util.getFailureDescription(response));  }} catch (IOException ex) {  throw new CommandException(ex);} @TO@ try {  String mode=Util.getRunningMode(ctx);  builder.setOperationName(Util.RELOAD);  builder.addProperty(Util.START_MODE,Util.ADMIN_ONLY.equals(mode) ? Util.ADMIN_ONLY : Util.NORMAL);  ModelNode response;  response=aclient.execute(builder.buildRequest(),true);  if (!Util.isSuccess(response)) {    throw new CommandException(Util.getFailureDescription(response));  }} catch (IOException ex) {  if (aclient.isConnected()) {    throw new CommandException(ex);  }} @AT@ 4149 @LENGTH@ 569
---UPD ExpressionStatement@@Assignment:response=ctx.getModelControllerClient().execute(builder.buildRequest()) @TO@ Assignment:response=aclient.execute(builder.buildRequest(),true) @AT@ 4414 @LENGTH@ 74
------UPD Assignment@@response=ctx.getModelControllerClient().execute(builder.buildRequest()) @TO@ response=aclient.execute(builder.buildRequest(),true) @AT@ 4414 @LENGTH@ 73
---------UPD MethodInvocation@@ctx.getModelControllerClient().execute(builder.buildRequest()) @TO@ aclient.execute(builder.buildRequest(),true) @AT@ 4425 @LENGTH@ 62
------------DEL MethodInvocation@@MethodName:getModelControllerClient:[] @AT@ 4425 @LENGTH@ 30
------------UPD SimpleName@@Name:ctx @TO@ Name:aclient @AT@ 4425 @LENGTH@ 3
------------UPD SimpleName@@MethodName:execute:[builder.buildRequest()] @TO@ MethodName:execute:[builder.buildRequest(), true] @AT@ 4456 @LENGTH@ 31
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:execute:[builder.buildRequest()] @AT@ 4629 @LENGTH@ 4
---UPD CatchClause@@catch (IOException ex) {  throw new CommandException(ex);} @TO@ catch (IOException ex) {  if (aclient.isConnected()) {    throw new CommandException(ex);  }} @AT@ 4640 @LENGTH@ 78
------INS IfStatement@@if (aclient.isConnected()) {  throw new CommandException(ex);} @TO@ CatchClause@@catch (IOException ex) {  throw new CommandException(ex);} @AT@ 4899 @LENGTH@ 90
---------INS MethodInvocation@@aclient.isConnected() @TO@ IfStatement@@if (aclient.isConnected()) {  throw new CommandException(ex);} @AT@ 4903 @LENGTH@ 21
------------INS SimpleName@@Name:aclient @TO@ MethodInvocation@@aclient.isConnected() @AT@ 4903 @LENGTH@ 7
------------INS SimpleName@@MethodName:isConnected:[] @TO@ MethodInvocation@@aclient.isConnected() @AT@ 4911 @LENGTH@ 13
---------INS Block@@ThenBody:{  throw new CommandException(ex);} @TO@ IfStatement@@if (aclient.isConnected()) {  throw new CommandException(ex);} @AT@ 4926 @LENGTH@ 63
------------MOV ThrowStatement@@ClassInstanceCreation:new CommandException(ex) @TO@ Block@@ThenBody:{  throw new CommandException(ex);} @AT@ 4677 @LENGTH@ 31


INS EnumDeclaration@@[public]ConstraintFileType,  @TO@ TypeDeclaration@@[public]ReplDumpTask, Task<ReplDumpWork>[Serializable] @AT@ 4018 @LENGTH@ 386
---INS Modifier@@public @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4018 @LENGTH@ 6
---INS SimpleName@@ConstraintFileType @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4030 @LENGTH@ 18
---INS EnumConstantDeclaration@@COMMON @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4050 @LENGTH@ 22
------INS SimpleName@@COMMON @TO@ EnumConstantDeclaration@@COMMON @AT@ 4050 @LENGTH@ 6
------INS StringLiteral@@"common" @TO@ EnumConstantDeclaration@@COMMON @AT@ 4057 @LENGTH@ 8
------INS StringLiteral@@"c_" @TO@ EnumConstantDeclaration@@COMMON @AT@ 4067 @LENGTH@ 4
---INS EnumConstantDeclaration@@FOREIGNKEY @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4074 @LENGTH@ 22
------INS SimpleName@@FOREIGNKEY @TO@ EnumConstantDeclaration@@FOREIGNKEY @AT@ 4074 @LENGTH@ 10
------INS StringLiteral@@"fk" @TO@ EnumConstantDeclaration@@FOREIGNKEY @AT@ 4085 @LENGTH@ 4
------INS StringLiteral@@"f_" @TO@ EnumConstantDeclaration@@FOREIGNKEY @AT@ 4091 @LENGTH@ 4
---INS FieldDeclaration@@private, final, String, [name] @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4102 @LENGTH@ 26
------INS Modifier@@private @TO@ FieldDeclaration@@private, final, String, [name] @AT@ 4102 @LENGTH@ 7
------INS Modifier@@final @TO@ FieldDeclaration@@private, final, String, [name] @AT@ 4110 @LENGTH@ 5
------INS SimpleType@@String @TO@ FieldDeclaration@@private, final, String, [name] @AT@ 4116 @LENGTH@ 6
------INS VariableDeclarationFragment@@name @TO@ FieldDeclaration@@private, final, String, [name] @AT@ 4123 @LENGTH@ 4
---------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 4123 @LENGTH@ 4
---INS FieldDeclaration@@private, final, String, [prefix] @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4133 @LENGTH@ 28
------INS Modifier@@private @TO@ FieldDeclaration@@private, final, String, [prefix] @AT@ 4133 @LENGTH@ 7
------INS Modifier@@final @TO@ FieldDeclaration@@private, final, String, [prefix] @AT@ 4141 @LENGTH@ 5
------INS SimpleType@@String @TO@ FieldDeclaration@@private, final, String, [prefix] @AT@ 4147 @LENGTH@ 6
------INS VariableDeclarationFragment@@prefix @TO@ FieldDeclaration@@private, final, String, [prefix] @AT@ 4154 @LENGTH@ 6
---------INS SimpleName@@prefix @TO@ VariableDeclarationFragment@@prefix @AT@ 4154 @LENGTH@ 6
---INS MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4166 @LENGTH@ 114
------INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4166 @LENGTH@ 7
------INS SimpleName@@MethodName:ConstraintFileType @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4174 @LENGTH@ 18
------INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4193 @LENGTH@ 11
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 4193 @LENGTH@ 6
---------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 4200 @LENGTH@ 4
------INS SingleVariableDeclaration@@String prefix @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4206 @LENGTH@ 13
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String prefix @AT@ 4206 @LENGTH@ 6
---------INS SimpleName@@prefix @TO@ SingleVariableDeclaration@@String prefix @AT@ 4213 @LENGTH@ 6
------INS ExpressionStatement@@Assignment:this.name=name @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4229 @LENGTH@ 17
---------INS Assignment@@this.name=name @TO@ ExpressionStatement@@Assignment:this.name=name @AT@ 4229 @LENGTH@ 16
------------INS FieldAccess@@this.name @TO@ Assignment@@this.name=name @AT@ 4229 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 4229 @LENGTH@ 4
---------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 4234 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@this.name=name @AT@ 4238 @LENGTH@ 1
------------INS SimpleName@@name @TO@ Assignment@@this.name=name @AT@ 4241 @LENGTH@ 4
------INS ExpressionStatement@@Assignment:this.prefix=prefix @TO@ MethodDeclaration@@private, voidMethodName:ConstraintFileType, String name, String prefix,  @AT@ 4253 @LENGTH@ 21
---------INS Assignment@@this.prefix=prefix @TO@ ExpressionStatement@@Assignment:this.prefix=prefix @AT@ 4253 @LENGTH@ 20
------------INS FieldAccess@@this.prefix @TO@ Assignment@@this.prefix=prefix @AT@ 4253 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.prefix @AT@ 4253 @LENGTH@ 4
---------------INS SimpleName@@prefix @TO@ FieldAccess@@this.prefix @AT@ 4258 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@this.prefix=prefix @AT@ 4264 @LENGTH@ 1
------------INS SimpleName@@prefix @TO@ Assignment@@this.prefix=prefix @AT@ 4267 @LENGTH@ 6
---INS MethodDeclaration@@public, String, MethodName:getName,  @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4285 @LENGTH@ 55
------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getName,  @AT@ 4285 @LENGTH@ 6
------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getName,  @AT@ 4292 @LENGTH@ 6
------INS SimpleName@@MethodName:getName @TO@ MethodDeclaration@@public, String, MethodName:getName,  @AT@ 4299 @LENGTH@ 7
------INS ReturnStatement@@FieldAccess:this.name @TO@ MethodDeclaration@@public, String, MethodName:getName,  @AT@ 4317 @LENGTH@ 17
---------INS FieldAccess@@this.name @TO@ ReturnStatement@@FieldAccess:this.name @AT@ 4324 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 4324 @LENGTH@ 4
------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 4329 @LENGTH@ 4
---INS MethodDeclaration@@public, String, MethodName:getPrefix,  @TO@ EnumDeclaration@@[public]ConstraintFileType,  @AT@ 4346 @LENGTH@ 54
------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getPrefix,  @AT@ 4346 @LENGTH@ 6
------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getPrefix,  @AT@ 4353 @LENGTH@ 6
------INS SimpleName@@MethodName:getPrefix @TO@ MethodDeclaration@@public, String, MethodName:getPrefix,  @AT@ 4360 @LENGTH@ 9
------INS ReturnStatement@@SimpleName:prefix @TO@ MethodDeclaration@@public, String, MethodName:getPrefix,  @AT@ 4380 @LENGTH@ 14
---------INS SimpleName@@prefix @TO@ ReturnStatement@@SimpleName:prefix @AT@ 4387 @LENGTH@ 6


INS IfStatement@@if (vaultReader != null) {  vaultReader.destroyVault();} @TO@ MethodDeclaration@@protected, void, MethodName:rollbackRuntime, OperationContext context, ModelNode operation, Resource resource,  @AT@ 4081 @LENGTH@ 76
---INS InfixExpression@@vaultReader != null @TO@ IfStatement@@if (vaultReader != null) {  vaultReader.destroyVault();} @AT@ 4085 @LENGTH@ 19
------INS SimpleName@@vaultReader @TO@ InfixExpression@@vaultReader != null @AT@ 4085 @LENGTH@ 11
------INS Operator@@!= @TO@ InfixExpression@@vaultReader != null @AT@ 4096 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@vaultReader != null @AT@ 4100 @LENGTH@ 4
---INS Block@@ThenBody:{  vaultReader.destroyVault();} @TO@ IfStatement@@if (vaultReader != null) {  vaultReader.destroyVault();} @AT@ 4106 @LENGTH@ 51
------MOV ExpressionStatement@@MethodInvocation:vaultReader.destroyVault() @TO@ Block@@ThenBody:{  vaultReader.destroyVault();} @AT@ 4083 @LENGTH@ 27


UPD IfStatement@@if (this.connectionFactory == null) {  this.connectionFactory=new ConnectionFactory();  if (StringUtils.hasText(this.hostName)) {    this.connectionFactory.setHost(this.hostName);  } else {    this.connectionFactory.setHost("localhost");  }  this.connectionFactory.setPort(this.port);  this.connectionFactory.setUsername(this.user);  this.connectionFactory.setPassword(this.password);} @TO@ if (this.connectionFactory == null) {  this.connectionFactory=new ConnectionFactory();  if (StringUtils.hasText(this.hostName)) {    this.connectionFactory.setHost(this.hostName);  } else {    this.connectionFactory.setHost("localhost");  }  this.connectionFactory.setPort(this.port);  this.connectionFactory.setUsername(this.user);  this.connectionFactory.setPassword(this.password);  this.connectionFactory.setAutomaticRecoveryEnabled(false);} @AT@ 15044 @LENGTH@ 409
---UPD Block@@ThenBody:{  this.connectionFactory=new ConnectionFactory();  if (StringUtils.hasText(this.hostName)) {    this.connectionFactory.setHost(this.hostName);  } else {    this.connectionFactory.setHost("localhost");  }  this.connectionFactory.setPort(this.port);  this.connectionFactory.setUsername(this.user);  this.connectionFactory.setPassword(this.password);} @TO@ ThenBody:{  this.connectionFactory=new ConnectionFactory();  if (StringUtils.hasText(this.hostName)) {    this.connectionFactory.setHost(this.hostName);  } else {    this.connectionFactory.setHost("localhost");  }  this.connectionFactory.setPort(this.port);  this.connectionFactory.setUsername(this.user);  this.connectionFactory.setPassword(this.password);  this.connectionFactory.setAutomaticRecoveryEnabled(false);} @AT@ 15080 @LENGTH@ 373
------INS ExpressionStatement@@MethodInvocation:this.connectionFactory.setAutomaticRecoveryEnabled(false) @TO@ Block@@ThenBody:{  this.connectionFactory=new ConnectionFactory();  if (StringUtils.hasText(this.hostName)) {    this.connectionFactory.setHost(this.hostName);  } else {    this.connectionFactory.setHost("localhost");  }  this.connectionFactory.setPort(this.port);  this.connectionFactory.setUsername(this.user);  this.connectionFactory.setPassword(this.password);} @AT@ 15453 @LENGTH@ 58
---------INS MethodInvocation@@this.connectionFactory.setAutomaticRecoveryEnabled(false) @TO@ ExpressionStatement@@MethodInvocation:this.connectionFactory.setAutomaticRecoveryEnabled(false) @AT@ 15453 @LENGTH@ 57
------------INS FieldAccess@@this.connectionFactory @TO@ MethodInvocation@@this.connectionFactory.setAutomaticRecoveryEnabled(false) @AT@ 15453 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.connectionFactory @AT@ 15453 @LENGTH@ 4
---------------INS SimpleName@@connectionFactory @TO@ FieldAccess@@this.connectionFactory @AT@ 15458 @LENGTH@ 17
------------INS SimpleName@@MethodName:setAutomaticRecoveryEnabled:[false] @TO@ MethodInvocation@@this.connectionFactory.setAutomaticRecoveryEnabled(false) @AT@ 15476 @LENGTH@ 34
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setAutomaticRecoveryEnabled:[false] @AT@ 15504 @LENGTH@ 5


UPD ConstructorInvocation@@this(null); @TO@ this((FlowExecutionListener[])null); @AT@ 2016 @LENGTH@ 11
---INS CastExpression@@(FlowExecutionListener[])null @TO@ ConstructorInvocation@@this(null); @AT@ 2021 @LENGTH@ 30
------INS ArrayType@@FlowExecutionListener[] @TO@ CastExpression@@(FlowExecutionListener[])null @AT@ 2022 @LENGTH@ 23
---------INS SimpleType@@FlowExecutionListener @TO@ ArrayType@@FlowExecutionListener[] @AT@ 2022 @LENGTH@ 21
------INS NullLiteral@@null @TO@ CastExpression@@(FlowExecutionListener[])null @AT@ 2047 @LENGTH@ 4
---DEL NullLiteral@@null @AT@ 2021 @LENGTH@ 4


UPD VariableDeclarationStatement@@KafkaManualCommit manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset); @TO@ KafkaManualCommit manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,record.offset()); @AT@ 13713 @LENGTH@ 224
---UPD VariableDeclarationFragment@@manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset) @TO@ manual=endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,record.offset()) @AT@ 13731 @LENGTH@ 205
------UPD MethodInvocation@@endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset) @TO@ endpoint.getComponent().getKafkaManualCommitFactory().newInstance(exchange,consumer,topicName,threadId,offsetRepository,partition,record.offset()) @AT@ 13740 @LENGTH@ 196
---------UPD SimpleName@@MethodName:newInstance:[exchange, consumer, topicName, threadId, offsetRepository, partition, partitionLastOffset] @TO@ MethodName:newInstance:[exchange, consumer, topicName, threadId, offsetRepository, partition, record.offset()] @AT@ 13794 @LENGTH@ 142
------------DEL SimpleName@@partitionLastOffset @AT@ 13916 @LENGTH@ 19
------------INS MethodInvocation@@record.offset() @TO@ SimpleName@@MethodName:newInstance:[exchange, consumer, topicName, threadId, offsetRepository, partition, partitionLastOffset] @AT@ 13916 @LENGTH@ 15
---------------INS SimpleName@@Name:record @TO@ MethodInvocation@@record.offset() @AT@ 13916 @LENGTH@ 6
---------------INS SimpleName@@MethodName:offset:[] @TO@ MethodInvocation@@record.offset() @AT@ 13923 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2823 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2733 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2823 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 2823 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 2837 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 2844 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 2850 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 2850 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 2859 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2872 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2872 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 2893 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 2896 @LENGTH@ 4


INS ExpressionStatement@@Assignment:warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @TO@ MethodDeclaration@@public, static, void, MethodName:setup, Exception,  @AT@ 7388 @LENGTH@ 95
---INS Assignment@@warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @TO@ ExpressionStatement@@Assignment:warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @AT@ 7388 @LENGTH@ 94
------INS SimpleName@@warehousedir @TO@ Assignment@@warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @AT@ 7388 @LENGTH@ 12
------INS Operator@@= @TO@ Assignment@@warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @AT@ 7400 @LENGTH@ 1
------INS ClassInstanceCreation@@Path[MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)] @TO@ Assignment@@warehousedir=new Path(MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)) @AT@ 7403 @LENGTH@ 79
---------INS New@@new @TO@ ClassInstanceCreation@@Path[MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)] @AT@ 7403 @LENGTH@ 3
---------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)] @AT@ 7407 @LENGTH@ 4
---------INS MethodInvocation@@MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE) @TO@ ClassInstanceCreation@@Path[MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE)] @AT@ 7412 @LENGTH@ 69
------------INS SimpleName@@Name:MetastoreConf @TO@ MethodInvocation@@MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE) @AT@ 7412 @LENGTH@ 13
------------INS SimpleName@@MethodName:getVar:[metastoreConf, MetastoreConf.ConfVars.WAREHOUSE] @TO@ MethodInvocation@@MetastoreConf.getVar(metastoreConf,MetastoreConf.ConfVars.WAREHOUSE) @AT@ 7426 @LENGTH@ 55
---------------INS SimpleName@@metastoreConf @TO@ SimpleName@@MethodName:getVar:[metastoreConf, MetastoreConf.ConfVars.WAREHOUSE] @AT@ 7433 @LENGTH@ 13
---------------INS QualifiedName@@MetastoreConf.ConfVars.WAREHOUSE @TO@ SimpleName@@MethodName:getVar:[metastoreConf, MetastoreConf.ConfVars.WAREHOUSE] @AT@ 7448 @LENGTH@ 32
------------------INS QualifiedName@@MetastoreConf.ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars.WAREHOUSE @AT@ 7448 @LENGTH@ 22
---------------------INS SimpleName@@MetastoreConf @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 7448 @LENGTH@ 13
---------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@MetastoreConf.ConfVars @AT@ 7462 @LENGTH@ 8
------------------INS SimpleName@@WAREHOUSE @TO@ QualifiedName@@MetastoreConf.ConfVars.WAREHOUSE @AT@ 7471 @LENGTH@ 9


INS MethodDeclaration@@private, RedirectResolver, MethodName:redirectResolver,  @TO@ TypeDeclaration@@[@Configuration, @Import(TokenKeyEndpointRegistrar.class), public]AuthorizationServerEndpointsConfiguration,  @AT@ 8733 @LENGTH@ 105
---INS Modifier@@private @TO@ MethodDeclaration@@private, RedirectResolver, MethodName:redirectResolver,  @AT@ 8733 @LENGTH@ 7
---INS SimpleType@@RedirectResolver @TO@ MethodDeclaration@@private, RedirectResolver, MethodName:redirectResolver,  @AT@ 8741 @LENGTH@ 16
---INS SimpleName@@MethodName:redirectResolver @TO@ MethodDeclaration@@private, RedirectResolver, MethodName:redirectResolver,  @AT@ 8758 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:getEndpointsConfigurer().getRedirectResolver() @TO@ MethodDeclaration@@private, RedirectResolver, MethodName:redirectResolver,  @AT@ 8781 @LENGTH@ 54
------INS MethodInvocation@@getEndpointsConfigurer().getRedirectResolver() @TO@ ReturnStatement@@MethodInvocation:getEndpointsConfigurer().getRedirectResolver() @AT@ 8788 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:getEndpointsConfigurer:[] @TO@ MethodInvocation@@getEndpointsConfigurer().getRedirectResolver() @AT@ 8788 @LENGTH@ 24
---------INS SimpleName@@MethodName:getRedirectResolver:[] @TO@ MethodInvocation@@getEndpointsConfigurer().getRedirectResolver() @AT@ 8813 @LENGTH@ 21


UPD MethodDeclaration@@protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec,  @TO@ protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec, MetaException,  @AT@ 1308 @LENGTH@ 212
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec,  @AT@ 1458 @LENGTH@ 13
---INS VariableDeclarationStatement@@PartitionListComposingSpec partitionList=partitionSpec.getPartitionList(); @TO@ MethodDeclaration@@protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec,  @AT@ 1574 @LENGTH@ 76
------INS SimpleType@@PartitionListComposingSpec @TO@ VariableDeclarationStatement@@PartitionListComposingSpec partitionList=partitionSpec.getPartitionList(); @AT@ 1574 @LENGTH@ 26
------INS VariableDeclarationFragment@@partitionList=partitionSpec.getPartitionList() @TO@ VariableDeclarationStatement@@PartitionListComposingSpec partitionList=partitionSpec.getPartitionList(); @AT@ 1601 @LENGTH@ 48
---------INS SimpleName@@partitionList @TO@ VariableDeclarationFragment@@partitionList=partitionSpec.getPartitionList() @AT@ 1601 @LENGTH@ 13
---------INS MethodInvocation@@partitionSpec.getPartitionList() @TO@ VariableDeclarationFragment@@partitionList=partitionSpec.getPartitionList() @AT@ 1617 @LENGTH@ 32
------------INS SimpleName@@Name:partitionSpec @TO@ MethodInvocation@@partitionSpec.getPartitionList() @AT@ 1617 @LENGTH@ 13
------------INS SimpleName@@MethodName:getPartitionList:[] @TO@ MethodInvocation@@partitionSpec.getPartitionList() @AT@ 1631 @LENGTH@ 18
---INS IfStatement@@if (partitionList == null || partitionList.getPartitions() == null) {  throw new MetaException("The partition list cannot be null.");} @TO@ MethodDeclaration@@protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec,  @AT@ 1655 @LENGTH@ 144
------INS InfixExpression@@partitionList == null || partitionList.getPartitions() == null @TO@ IfStatement@@if (partitionList == null || partitionList.getPartitions() == null) {  throw new MetaException("The partition list cannot be null.");} @AT@ 1659 @LENGTH@ 62
---------INS InfixExpression@@partitionList == null @TO@ InfixExpression@@partitionList == null || partitionList.getPartitions() == null @AT@ 1659 @LENGTH@ 21
------------INS SimpleName@@partitionList @TO@ InfixExpression@@partitionList == null @AT@ 1659 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@partitionList == null @AT@ 1672 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@partitionList == null @AT@ 1676 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@partitionList == null || partitionList.getPartitions() == null @AT@ 1680 @LENGTH@ 2
---------INS InfixExpression@@partitionList.getPartitions() == null @TO@ InfixExpression@@partitionList == null || partitionList.getPartitions() == null @AT@ 1684 @LENGTH@ 37
------------INS MethodInvocation@@partitionList.getPartitions() @TO@ InfixExpression@@partitionList.getPartitions() == null @AT@ 1684 @LENGTH@ 29
---------------INS SimpleName@@Name:partitionList @TO@ MethodInvocation@@partitionList.getPartitions() @AT@ 1684 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getPartitions:[] @TO@ MethodInvocation@@partitionList.getPartitions() @AT@ 1698 @LENGTH@ 15
------------INS Operator@@== @TO@ InfixExpression@@partitionList.getPartitions() == null @AT@ 1713 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@partitionList.getPartitions() == null @AT@ 1717 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new MetaException("The partition list cannot be null.");} @TO@ IfStatement@@if (partitionList == null || partitionList.getPartitions() == null) {  throw new MetaException("The partition list cannot be null.");} @AT@ 1723 @LENGTH@ 76
---------INS ThrowStatement@@ClassInstanceCreation:new MetaException("The partition list cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("The partition list cannot be null.");} @AT@ 1731 @LENGTH@ 62
------------INS ClassInstanceCreation@@MetaException["The partition list cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("The partition list cannot be null.") @AT@ 1737 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["The partition list cannot be null."] @AT@ 1737 @LENGTH@ 3
---------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["The partition list cannot be null."] @AT@ 1741 @LENGTH@ 13
---------------INS StringLiteral@@"The partition list cannot be null." @TO@ ClassInstanceCreation@@MetaException["The partition list cannot be null."] @AT@ 1755 @LENGTH@ 36
---INS EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @TO@ MethodDeclaration@@protected, voidMethodName:PartitionListComposingSpecProxy, PartitionSpec partitionSpec,  @AT@ 1804 @LENGTH@ 464
------INS SingleVariableDeclaration@@Partition partition @TO@ EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @AT@ 1809 @LENGTH@ 19
---------INS SimpleType@@Partition @TO@ SingleVariableDeclaration@@Partition partition @AT@ 1809 @LENGTH@ 9
---------INS SimpleName@@partition @TO@ SingleVariableDeclaration@@Partition partition @AT@ 1819 @LENGTH@ 9
------INS MethodInvocation@@partitionList.getPartitions() @TO@ EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @AT@ 1831 @LENGTH@ 29
---------INS SimpleName@@Name:partitionList @TO@ MethodInvocation@@partitionList.getPartitions() @AT@ 1831 @LENGTH@ 13
---------INS SimpleName@@MethodName:getPartitions:[] @TO@ MethodInvocation@@partitionList.getPartitions() @AT@ 1845 @LENGTH@ 15
------INS IfStatement@@if (partition == null) {  throw new MetaException("Partition cannot be null.");} @TO@ EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @AT@ 1870 @LENGTH@ 94
---------INS InfixExpression@@partition == null @TO@ IfStatement@@if (partition == null) {  throw new MetaException("Partition cannot be null.");} @AT@ 1874 @LENGTH@ 17
------------INS SimpleName@@partition @TO@ InfixExpression@@partition == null @AT@ 1874 @LENGTH@ 9
------------INS Operator@@== @TO@ InfixExpression@@partition == null @AT@ 1883 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@partition == null @AT@ 1887 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new MetaException("Partition cannot be null.");} @TO@ IfStatement@@if (partition == null) {  throw new MetaException("Partition cannot be null.");} @AT@ 1893 @LENGTH@ 71
------------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Partition cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Partition cannot be null.");} @AT@ 1903 @LENGTH@ 53
---------------INS ClassInstanceCreation@@MetaException["Partition cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Partition cannot be null.") @AT@ 1909 @LENGTH@ 46
------------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Partition cannot be null."] @AT@ 1909 @LENGTH@ 3
------------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Partition cannot be null."] @AT@ 1913 @LENGTH@ 13
------------------INS StringLiteral@@"Partition cannot be null." @TO@ ClassInstanceCreation@@MetaException["Partition cannot be null."] @AT@ 1927 @LENGTH@ 27
------INS IfStatement@@if (partition.getValues() == null || partition.getValues().isEmpty()) {  throw new MetaException("The partition value list cannot be null or empty.");} @TO@ EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @AT@ 1971 @LENGTH@ 165
---------INS InfixExpression@@partition.getValues() == null || partition.getValues().isEmpty() @TO@ IfStatement@@if (partition.getValues() == null || partition.getValues().isEmpty()) {  throw new MetaException("The partition value list cannot be null or empty.");} @AT@ 1975 @LENGTH@ 64
------------INS InfixExpression@@partition.getValues() == null @TO@ InfixExpression@@partition.getValues() == null || partition.getValues().isEmpty() @AT@ 1975 @LENGTH@ 29
---------------INS MethodInvocation@@partition.getValues() @TO@ InfixExpression@@partition.getValues() == null @AT@ 1975 @LENGTH@ 21
------------------INS SimpleName@@Name:partition @TO@ MethodInvocation@@partition.getValues() @AT@ 1975 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getValues:[] @TO@ MethodInvocation@@partition.getValues() @AT@ 1985 @LENGTH@ 11
---------------INS Operator@@== @TO@ InfixExpression@@partition.getValues() == null @AT@ 1996 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@partition.getValues() == null @AT@ 2000 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@partition.getValues() == null || partition.getValues().isEmpty() @AT@ 2004 @LENGTH@ 2
------------INS MethodInvocation@@partition.getValues().isEmpty() @TO@ InfixExpression@@partition.getValues() == null || partition.getValues().isEmpty() @AT@ 2008 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getValues:[] @TO@ MethodInvocation@@partition.getValues().isEmpty() @AT@ 2008 @LENGTH@ 21
---------------INS SimpleName@@Name:partition @TO@ MethodInvocation@@partition.getValues().isEmpty() @AT@ 2008 @LENGTH@ 9
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@partition.getValues().isEmpty() @AT@ 2030 @LENGTH@ 9
---------INS Block@@ThenBody:{  throw new MetaException("The partition value list cannot be null or empty.");} @TO@ IfStatement@@if (partition.getValues() == null || partition.getValues().isEmpty()) {  throw new MetaException("The partition value list cannot be null or empty.");} @AT@ 2041 @LENGTH@ 95
------------INS ThrowStatement@@ClassInstanceCreation:new MetaException("The partition value list cannot be null or empty.") @TO@ Block@@ThenBody:{  throw new MetaException("The partition value list cannot be null or empty.");} @AT@ 2051 @LENGTH@ 77
---------------INS ClassInstanceCreation@@MetaException["The partition value list cannot be null or empty."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("The partition value list cannot be null or empty.") @AT@ 2057 @LENGTH@ 70
------------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["The partition value list cannot be null or empty."] @AT@ 2057 @LENGTH@ 3
------------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["The partition value list cannot be null or empty."] @AT@ 2061 @LENGTH@ 13
------------------INS StringLiteral@@"The partition value list cannot be null or empty." @TO@ ClassInstanceCreation@@MetaException["The partition value list cannot be null or empty."] @AT@ 2075 @LENGTH@ 51
------INS IfStatement@@if (partition.getValues().contains(null)) {  throw new MetaException("Partition value cannot be null.");} @TO@ EnhancedForStatement@@for (Partition partition : partitionList.getPartitions()) {  if (partition == null) {    throw new MetaException("Partition cannot be null.");  }  if (partition.getValues() == null || partition.getValues().isEmpty()) {    throw new MetaException("The partition value list cannot be null or empty.");  }  if (partition.getValues().contains(null)) {    throw new MetaException("Partition value cannot be null.");  }} @AT@ 2143 @LENGTH@ 119
---------INS MethodInvocation@@partition.getValues().contains(null) @TO@ IfStatement@@if (partition.getValues().contains(null)) {  throw new MetaException("Partition value cannot be null.");} @AT@ 2147 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getValues:[] @TO@ MethodInvocation@@partition.getValues().contains(null) @AT@ 2147 @LENGTH@ 21
------------INS SimpleName@@Name:partition @TO@ MethodInvocation@@partition.getValues().contains(null) @AT@ 2147 @LENGTH@ 9
------------INS SimpleName@@MethodName:contains:[null] @TO@ MethodInvocation@@partition.getValues().contains(null) @AT@ 2169 @LENGTH@ 14
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:contains:[null] @AT@ 2178 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new MetaException("Partition value cannot be null.");} @TO@ IfStatement@@if (partition.getValues().contains(null)) {  throw new MetaException("Partition value cannot be null.");} @AT@ 2185 @LENGTH@ 77
------------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Partition value cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Partition value cannot be null.");} @AT@ 2195 @LENGTH@ 59
---------------INS ClassInstanceCreation@@MetaException["Partition value cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Partition value cannot be null.") @AT@ 2201 @LENGTH@ 52
------------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Partition value cannot be null."] @AT@ 2201 @LENGTH@ 3
------------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Partition value cannot be null."] @AT@ 2205 @LENGTH@ 13
------------------INS StringLiteral@@"Partition value cannot be null." @TO@ ClassInstanceCreation@@MetaException["Partition value cannot be null."] @AT@ 2219 @LENGTH@ 33


INS ExpressionStatement@@MethodInvocation:Assert.notNull(persistentEntity,"GemfirePersistentEntity is required") @TO@ MethodDeclaration@@protected, voidMethodName:RegionBeanDefinitionMetadata, GemfirePersistentEntity<?> persistentEntity,  @AT@ 27468 @LENGTH@ 72
---INS MethodInvocation@@Assert.notNull(persistentEntity,"GemfirePersistentEntity is required") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(persistentEntity,"GemfirePersistentEntity is required") @AT@ 27468 @LENGTH@ 71
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(persistentEntity,"GemfirePersistentEntity is required") @AT@ 27468 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[persistentEntity, "GemfirePersistentEntity is required"] @TO@ MethodInvocation@@Assert.notNull(persistentEntity,"GemfirePersistentEntity is required") @AT@ 27475 @LENGTH@ 64
---------INS SimpleName@@persistentEntity @TO@ SimpleName@@MethodName:notNull:[persistentEntity, "GemfirePersistentEntity is required"] @AT@ 27483 @LENGTH@ 16
---------INS StringLiteral@@"GemfirePersistentEntity is required" @TO@ SimpleName@@MethodName:notNull:[persistentEntity, "GemfirePersistentEntity is required"] @AT@ 27501 @LENGTH@ 37


INS IfStatement@@if (clientRegistration == null) {  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ MethodDeclaration@@public, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @AT@ 7912 @LENGTH@ 277
---INS InfixExpression@@clientRegistration == null @TO@ IfStatement@@if (clientRegistration == null) {  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7916 @LENGTH@ 26
------INS SimpleName@@clientRegistration @TO@ InfixExpression@@clientRegistration == null @AT@ 7916 @LENGTH@ 18
------INS Operator@@== @TO@ InfixExpression@@clientRegistration == null @AT@ 7934 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@clientRegistration == null @AT@ 7938 @LENGTH@ 4
---INS Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ IfStatement@@if (clientRegistration == null) {  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7944 @LENGTH@ 245
------INS VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null); @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 7949 @LENGTH@ 155
---------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null); @AT@ 7949 @LENGTH@ 11
---------INS VariableDeclarationFragment@@oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null); @AT@ 7961 @LENGTH@ 142
------------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null) @AT@ 7961 @LENGTH@ 11
------------INS ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null) @AT@ 7975 @LENGTH@ 128
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @AT@ 7975 @LENGTH@ 3
---------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @AT@ 7979 @LENGTH@ 11
---------------INS SimpleName@@CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE @TO@ ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @AT@ 7991 @LENGTH@ 40
---------------INS InfixExpression@@"Client Registration not found with Id: " + registrationId @TO@ ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @AT@ 8038 @LENGTH@ 58
------------------INS StringLiteral@@"Client Registration not found with Id: " @TO@ InfixExpression@@"Client Registration not found with Id: " + registrationId @AT@ 8038 @LENGTH@ 41
------------------INS Operator@@+ @TO@ InfixExpression@@"Client Registration not found with Id: " + registrationId @AT@ 8079 @LENGTH@ 1
------------------INS SimpleName@@registrationId @TO@ InfixExpression@@"Client Registration not found with Id: " + registrationId @AT@ 8082 @LENGTH@ 14
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@OAuth2Error[CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE, "Client Registration not found with Id: " + registrationId, null] @AT@ 8098 @LENGTH@ 4
------INS ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE,"Client Registration not found with Id: " + registrationId,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 8108 @LENGTH@ 77
---------INS ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @AT@ 8114 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 8114 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthenticationException @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 8118 @LENGTH@ 29
------------INS SimpleName@@oauth2Error @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 8148 @LENGTH@ 11
------------INS MethodInvocation@@oauth2Error.toString() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 8161 @LENGTH@ 22
---------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 8161 @LENGTH@ 11
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 8173 @LENGTH@ 10


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 3315 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 3315 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 3319 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 3319 @LENGTH@ 4


UPD IfStatement@@if (Methods.POST.equals(httpExchange.getRequestMethod()) || Methods.PUT.equals(httpExchange.getRequestMethod())) {  result.setBody(readFromChannel(httpExchange.getRequestChannel()));} else {  result.setBody(null);} @TO@ if (Methods.POST.equals(httpExchange.getRequestMethod()) || Methods.PUT.equals(httpExchange.getRequestMethod()) || Methods.PATCH.equals(httpExchange.getRequestMethod())) {  result.setBody(readFromChannel(httpExchange.getRequestChannel()));} else {  result.setBody(null);} @AT@ 5220 @LENGTH@ 270
---UPD InfixExpression@@Methods.POST.equals(httpExchange.getRequestMethod()) || Methods.PUT.equals(httpExchange.getRequestMethod()) @TO@ Methods.POST.equals(httpExchange.getRequestMethod()) || Methods.PUT.equals(httpExchange.getRequestMethod()) || Methods.PATCH.equals(httpExchange.getRequestMethod()) @AT@ 5224 @LENGTH@ 107
------INS MethodInvocation@@Methods.PATCH.equals(httpExchange.getRequestMethod()) @TO@ InfixExpression@@Methods.POST.equals(httpExchange.getRequestMethod()) || Methods.PUT.equals(httpExchange.getRequestMethod()) @AT@ 5335 @LENGTH@ 53
---------INS QualifiedName@@Name:Methods.PATCH @TO@ MethodInvocation@@Methods.PATCH.equals(httpExchange.getRequestMethod()) @AT@ 5335 @LENGTH@ 13
---------INS SimpleName@@MethodName:equals:[httpExchange.getRequestMethod()] @TO@ MethodInvocation@@Methods.PATCH.equals(httpExchange.getRequestMethod()) @AT@ 5349 @LENGTH@ 39
------------INS MethodInvocation@@httpExchange.getRequestMethod() @TO@ SimpleName@@MethodName:equals:[httpExchange.getRequestMethod()] @AT@ 5356 @LENGTH@ 31
---------------INS SimpleName@@Name:httpExchange @TO@ MethodInvocation@@httpExchange.getRequestMethod() @AT@ 5356 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getRequestMethod:[] @TO@ MethodInvocation@@httpExchange.getRequestMethod() @AT@ 5369 @LENGTH@ 18


UPD TypeDeclaration@@[public]ReactiveAuthenticationManager,  @TO@ [@FunctionalInterface, public]ReactiveAuthenticationManager,  @AT@ 891 @LENGTH@ 467
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ReactiveAuthenticationManager,  @AT@ 891 @LENGTH@ 20


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @TO@ TypeDeclaration@@[public, final]OAuth2Error,  @AT@ 1430 @LENGTH@ 90
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1430 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1438 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1445 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1451 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID] @AT@ 1456 @LENGTH@ 63
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1456 @LENGTH@ 16
------INS QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @TO@ VariableDeclarationFragment@@serialVersionUID=SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1475 @LENGTH@ 44
---------INS SimpleName@@SpringSecurityCoreVersion @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1475 @LENGTH@ 25
---------INS SimpleName@@SERIAL_VERSION_UID @TO@ QualifiedName@@SpringSecurityCoreVersion.SERIAL_VERSION_UID @AT@ 1501 @LENGTH@ 18


UPD ReturnStatement@@MethodInvocation:this.authorizationRequestMatcher.matches(exchange).filter(matchResult -> matchResult.isMatch()).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).map(ServerWebExchangeMatcher.MatchResult::getVariables).map(variables -> variables.get(REGISTRATION_ID_URI_VARIABLE_NAME)).cast(String.class).flatMap(clientRegistrationId -> this.findByRegistrationId(exchange,clientRegistrationId)).flatMap(clientRegistration -> sendRedirectForAuthorization(exchange,clientRegistration)) @TO@ MethodInvocation:this.authorizationRequestMatcher.matches(exchange).filter(matchResult -> matchResult.isMatch()).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).map(ServerWebExchangeMatcher.MatchResult::getVariables).map(variables -> variables.get(REGISTRATION_ID_URI_VARIABLE_NAME)).cast(String.class).onErrorResume(ClientAuthorizationRequiredException.class,e -> Mono.just(e.getClientRegistrationId())).flatMap(clientRegistrationId -> this.findByRegistrationId(exchange,clientRegistrationId)).flatMap(clientRegistration -> sendRedirectForAuthorization(exchange,clientRegistration)) @AT@ 7295 @LENGTH@ 511
---UPD MethodInvocation@@this.authorizationRequestMatcher.matches(exchange).filter(matchResult -> matchResult.isMatch()).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).map(ServerWebExchangeMatcher.MatchResult::getVariables).map(variables -> variables.get(REGISTRATION_ID_URI_VARIABLE_NAME)).cast(String.class).flatMap(clientRegistrationId -> this.findByRegistrationId(exchange,clientRegistrationId)).flatMap(clientRegistration -> sendRedirectForAuthorization(exchange,clientRegistration)) @TO@ this.authorizationRequestMatcher.matches(exchange).filter(matchResult -> matchResult.isMatch()).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).map(ServerWebExchangeMatcher.MatchResult::getVariables).map(variables -> variables.get(REGISTRATION_ID_URI_VARIABLE_NAME)).cast(String.class).onErrorResume(ClientAuthorizationRequiredException.class,e -> Mono.just(e.getClientRegistrationId())).flatMap(clientRegistrationId -> this.findByRegistrationId(exchange,clientRegistrationId)).flatMap(clientRegistration -> sendRedirectForAuthorization(exchange,clientRegistration)) @AT@ 7302 @LENGTH@ 503
------INS MethodInvocation@@MethodName:onErrorResume:[ClientAuthorizationRequiredException.class, e -> Mono.just(e.getClientRegistrationId())] @TO@ MethodInvocation@@this.authorizationRequestMatcher.matches(exchange).filter(matchResult -> matchResult.isMatch()).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).map(ServerWebExchangeMatcher.MatchResult::getVariables).map(variables -> variables.get(REGISTRATION_ID_URI_VARIABLE_NAME)).cast(String.class).flatMap(clientRegistrationId -> this.findByRegistrationId(exchange,clientRegistrationId)).flatMap(clientRegistration -> sendRedirectForAuthorization(exchange,clientRegistration)) @AT@ 7302 @LENGTH@ 421
---------INS TypeLiteral@@ClientAuthorizationRequiredException.class @TO@ MethodInvocation@@MethodName:onErrorResume:[ClientAuthorizationRequiredException.class, e -> Mono.just(e.getClientRegistrationId())] @AT@ 7635 @LENGTH@ 42
---------INS LambdaExpression@@e -> Mono.just(e.getClientRegistrationId()) @TO@ MethodInvocation@@MethodName:onErrorResume:[ClientAuthorizationRequiredException.class, e -> Mono.just(e.getClientRegistrationId())] @AT@ 7679 @LENGTH@ 43
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> Mono.just(e.getClientRegistrationId()) @AT@ 7679 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 7679 @LENGTH@ 1
------------INS MethodInvocation@@Mono.just(e.getClientRegistrationId()) @TO@ LambdaExpression@@e -> Mono.just(e.getClientRegistrationId()) @AT@ 7684 @LENGTH@ 38
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(e.getClientRegistrationId()) @AT@ 7684 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[e.getClientRegistrationId()] @TO@ MethodInvocation@@Mono.just(e.getClientRegistrationId()) @AT@ 7689 @LENGTH@ 33
------------------INS MethodInvocation@@e.getClientRegistrationId() @TO@ SimpleName@@MethodName:just:[e.getClientRegistrationId()] @AT@ 7694 @LENGTH@ 27
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getClientRegistrationId() @AT@ 7694 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getClientRegistrationId:[] @TO@ MethodInvocation@@e.getClientRegistrationId() @AT@ 7696 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @TO@ MethodDeclaration@@public, static, void, MethodName:setBinaryConfOverlay, Map<String,String> confOverlay,  @AT@ 4016 @LENGTH@ 68
---INS MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @TO@ ExpressionStatement@@MethodInvocation:confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 4016 @LENGTH@ 67
------INS SimpleName@@Name:confOverlay @TO@ MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 4016 @LENGTH@ 11
------INS SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @TO@ MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 4028 @LENGTH@ 55
---------INS QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @TO@ SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @AT@ 4032 @LENGTH@ 42
------------INS QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @AT@ 4032 @LENGTH@ 34
---------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @AT@ 4032 @LENGTH@ 17
------------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 4032 @LENGTH@ 8
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 4041 @LENGTH@ 8
---------------INS SimpleName@@HIVE_IN_TEST_SSL @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @AT@ 4050 @LENGTH@ 16
------------INS SimpleName@@varname @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @AT@ 4067 @LENGTH@ 7
---------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @AT@ 4076 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,newValueVar) @TO@ MethodInvocation:bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,newValueVar,getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()) @AT@ 102666 @LENGTH@ 322
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,newValueVar) @TO@ bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,newValueVar,getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()) @AT@ 102666 @LENGTH@ 321
------UPD SimpleName@@MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, newValueVar] @TO@ MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, newValueVar, getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()] @AT@ 102678 @LENGTH@ 309
---------UPD StringLiteral@@"%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();" @TO@ "%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();" @AT@ 102695 @LENGTH@ 65
---------INS MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @TO@ SimpleName@@MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, newValueVar] @AT@ 102993 @LENGTH@ 83
------------INS MethodInvocation@@MethodName:getAccessorMethod:[this.entityMetadata.getCurrentIndentifierField()] @TO@ MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @AT@ 102993 @LENGTH@ 67
---------------INS MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @TO@ MethodInvocation@@MethodName:getAccessorMethod:[this.entityMetadata.getCurrentIndentifierField()] @AT@ 103011 @LENGTH@ 48
------------------INS FieldAccess@@this.entityMetadata @TO@ MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @AT@ 103011 @LENGTH@ 19
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entityMetadata @AT@ 103011 @LENGTH@ 4
---------------------INS SimpleName@@entityMetadata @TO@ FieldAccess@@this.entityMetadata @AT@ 103016 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getCurrentIndentifierField:[] @TO@ MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @AT@ 103031 @LENGTH@ 28
------------INS SimpleName@@MethodName:getMethodName:[] @TO@ MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @AT@ 103061 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:testConversion("mapCol","map<string,decimal(5,2)>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n") @TO@ MethodInvocation:testConversion("mapCol","map<string,decimal(5,2)>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n") @AT@ 4628 @LENGTH@ 403
---UPD MethodInvocation@@testConversion("mapCol","map<string,decimal(5,2)>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n") @TO@ testConversion("mapCol","map<string,decimal(5,2)>","message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n") @AT@ 4628 @LENGTH@ 402
------UPD SimpleName@@MethodName:testConversion:["mapCol", "map<string,decimal(5,2)>", "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n"] @TO@ MethodName:testConversion:["mapCol", "map<string,decimal(5,2)>", "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n"] @AT@ 4628 @LENGTH@ 402
---------UPD InfixExpression@@"message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key;\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n" @TO@ "message hive_schema {\n" + "  optional group mapCol (MAP) {\n" + "    repeated group map (MAP_KEY_VALUE) {\n"+ "      required binary key (UTF8);\n"+ "      optional fixed_len_byte_array(3) value (DECIMAL(5,2));\n"+ "    }\n"+ "  }\n"+ "}\n" @AT@ 4705 @LENGTH@ 324
------------UPD StringLiteral@@"      required binary key;\n" @TO@ "      required binary key (UTF8);\n" @AT@ 4854 @LENGTH@ 30


UPD IfStatement@@if (mStats.isEmpty()) return null; @TO@ if (mStats.isEmpty()) {  return null;} @AT@ 302730 @LENGTH@ 34
---MOV Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (mStats.isEmpty()) return null; @AT@ 299412 @LENGTH@ 26
---DEL Block@@ThenBody:return null; @AT@ 302752 @LENGTH@ 12
------DEL ReturnStatement@@NullLiteral:null @AT@ 302752 @LENGTH@ 12
---------DEL NullLiteral@@null @AT@ 302759 @LENGTH@ 4


UPD MethodDeclaration@@private, static, Set<String>, MethodName:getMembers, CacheTopology topology,  @TO@ private, static, Set<String>, MethodName:getMembers, LocalizedCacheTopology topology,  @AT@ 4289 @LENGTH@ 190
---UPD SingleVariableDeclaration@@CacheTopology topology @TO@ LocalizedCacheTopology topology @AT@ 4327 @LENGTH@ 22
------UPD SimpleType@@CacheTopology @TO@ LocalizedCacheTopology @AT@ 4327 @LENGTH@ 13
---UPD ReturnStatement@@MethodInvocation:topology.getCurrentCH().getMembers().stream().map(Object::toString).sorted().collect(Collectors.toSet()) @TO@ MethodInvocation:topology.getMembers().stream().map(Object::toString).sorted().collect(Collectors.toSet()) @AT@ 4361 @LENGTH@ 112
------UPD MethodInvocation@@topology.getCurrentCH().getMembers().stream().map(Object::toString).sorted().collect(Collectors.toSet()) @TO@ topology.getMembers().stream().map(Object::toString).sorted().collect(Collectors.toSet()) @AT@ 4368 @LENGTH@ 104
---------DEL MethodInvocation@@MethodName:getCurrentCH:[] @AT@ 4368 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertThat(registration.getScopes()).containsOnly("user") @TO@ MethodInvocation:assertThat(registration.getScopes()).containsOnly("read:user") @AT@ 3763 @LENGTH@ 58
---UPD MethodInvocation@@assertThat(registration.getScopes()).containsOnly("user") @TO@ assertThat(registration.getScopes()).containsOnly("read:user") @AT@ 3763 @LENGTH@ 57
------UPD SimpleName@@MethodName:containsOnly:["user"] @TO@ MethodName:containsOnly:["read:user"] @AT@ 3800 @LENGTH@ 20
---------UPD StringLiteral@@"user" @TO@ "read:user" @AT@ 3813 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:fetchJoins.append(").fetchJoin()") @TO@ MethodInvocation:fetchJoins.append(")") @AT@ 38385 @LENGTH@ 35
---UPD MethodInvocation@@fetchJoins.append(").fetchJoin()") @TO@ fetchJoins.append(")") @AT@ 38385 @LENGTH@ 34
------UPD SimpleName@@MethodName:append:[").fetchJoin()"] @TO@ MethodName:append:[")"] @AT@ 38396 @LENGTH@ 23
---------UPD StringLiteral@@").fetchJoin()" @TO@ ")" @AT@ 38403 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @TO@ MethodDeclaration@@public, static, void, MethodName:setHttpConfOverlay, Map<String,String> confOverlay,  @AT@ 3589 @LENGTH@ 68
---INS MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @TO@ ExpressionStatement@@MethodInvocation:confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 3589 @LENGTH@ 67
------INS SimpleName@@Name:confOverlay @TO@ MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 3589 @LENGTH@ 11
------INS SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @TO@ MethodInvocation@@confOverlay.put(HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname,"true") @AT@ 3601 @LENGTH@ 55
---------INS QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @TO@ SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @AT@ 3605 @LENGTH@ 42
------------INS QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @AT@ 3605 @LENGTH@ 34
---------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @AT@ 3605 @LENGTH@ 17
------------------INS SimpleName@@HiveConf @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3605 @LENGTH@ 8
------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 3614 @LENGTH@ 8
---------------INS SimpleName@@HIVE_IN_TEST_SSL @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL @AT@ 3623 @LENGTH@ 16
------------INS SimpleName@@varname @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname @AT@ 3640 @LENGTH@ 7
---------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:put:[HiveConf.ConfVars.HIVE_IN_TEST_SSL.varname, "true"] @AT@ 3649 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2445 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2355 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2445 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 2445 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 2459 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 2466 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 2472 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 2472 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 2481 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2494 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2494 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 2515 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 2518 @LENGTH@ 4


INS FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @TO@ TypeDeclaration@@[public]AS2Component, AbstractApiComponent<AS2ApiName,AS2Configuration,AS2ApiCollection> @AT@ 1435 @LENGTH@ 78
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @AT@ 1435 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @AT@ 1443 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @AT@ 1450 @LENGTH@ 5
---INS SimpleType@@Logger @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @AT@ 1456 @LENGTH@ 6
---INS VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(AS2Component.class) @TO@ FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AS2Component.class)] @AT@ 1463 @LENGTH@ 49
------INS SimpleName@@LOG @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(AS2Component.class) @AT@ 1463 @LENGTH@ 3
------INS MethodInvocation@@LoggerFactory.getLogger(AS2Component.class) @TO@ VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(AS2Component.class) @AT@ 1469 @LENGTH@ 43
---------INS SimpleName@@Name:LoggerFactory @TO@ MethodInvocation@@LoggerFactory.getLogger(AS2Component.class) @AT@ 1469 @LENGTH@ 13
---------INS SimpleName@@MethodName:getLogger:[AS2Component.class] @TO@ MethodInvocation@@LoggerFactory.getLogger(AS2Component.class) @AT@ 1483 @LENGTH@ 29
------------INS TypeLiteral@@AS2Component.class @TO@ SimpleName@@MethodName:getLogger:[AS2Component.class] @AT@ 1493 @LENGTH@ 18


UPD IfStatement@@if (((RemoteFileConsumer<?>)consumer).isRunAllowed()) {  log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());  try {    rfc.disconnect();  } catch (  Throwable t) {    log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);  }} @TO@ if (rfc.isRunAllowed()) {  log.warn("Trying to recover by disconnecting from remote server forcing a re-connect at next poll: " + rfc.remoteServer());  try {    rfc.disconnect();  } catch (  Throwable t) {    log.debug("Error occurred during disconnect from: " + rfc.remoteServer() + ". This exception will be ignored.",t);  }} @AT@ 1470 @LENGTH@ 566


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(delegateConversionService) @TO@ MethodInvocation:Assert.notNull(delegateConversionService,"Missing delegate ConversionService") @AT@ 3377 @LENGTH@ 42
---UPD MethodInvocation@@Assert.notNull(delegateConversionService) @TO@ Assert.notNull(delegateConversionService,"Missing delegate ConversionService") @AT@ 3377 @LENGTH@ 41
------UPD SimpleName@@MethodName:notNull:[delegateConversionService] @TO@ MethodName:notNull:[delegateConversionService, "Missing delegate ConversionService"] @AT@ 3384 @LENGTH@ 34
---------INS StringLiteral@@"Missing delegate ConversionService" @TO@ SimpleName@@MethodName:notNull:[delegateConversionService] @AT@ 3403 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + MetaStoreTestUtils.startMetaStore()) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 1602 @LENGTH@ 110
---UPD MethodInvocation@@hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + MetaStoreTestUtils.startMetaStore()) @TO@ MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 1602 @LENGTH@ 109
------UPD SimpleName@@Name:hiveConf @TO@ Name:MetaStoreTestUtils @AT@ 1602 @LENGTH@ 8
------UPD SimpleName@@MethodName:setVar:[HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + MetaStoreTestUtils.startMetaStore()] @TO@ MethodName:startMetaStoreWithRetry:[hiveConf] @AT@ 1611 @LENGTH@ 100
---------DEL QualifiedName@@HiveConf.ConfVars.METASTOREURIS @AT@ 1618 @LENGTH@ 31
------------DEL QualifiedName@@HiveConf.ConfVars @AT@ 1618 @LENGTH@ 17
---------------DEL SimpleName@@HiveConf @AT@ 1618 @LENGTH@ 8
---------------DEL SimpleName@@ConfVars @AT@ 1627 @LENGTH@ 8
------------DEL SimpleName@@METASTOREURIS @AT@ 1636 @LENGTH@ 13
---------INS SimpleName@@hiveConf @TO@ SimpleName@@MethodName:setVar:[HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + MetaStoreTestUtils.startMetaStore()] @AT@ 1645 @LENGTH@ 8
---------DEL InfixExpression@@"thrift://localhost:" + MetaStoreTestUtils.startMetaStore() @AT@ 1651 @LENGTH@ 59
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 1651 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 1672 @LENGTH@ 1
------------DEL MethodInvocation@@MetaStoreTestUtils.startMetaStore() @AT@ 1675 @LENGTH@ 35
---------------DEL SimpleName@@Name:MetaStoreTestUtils @AT@ 1675 @LENGTH@ 18
---------------DEL SimpleName@@MethodName:startMetaStore:[] @AT@ 1694 @LENGTH@ 16


UPD FieldDeclaration@@public, static, final, AttributeMap<Object>, [EMPTY_ATTRIBUTE_MAP=new LocalAttributeMap<>(Collections.<String,Object>emptyMap())] @TO@ public, static, final, AttributeMap<Object>, [EMPTY_ATTRIBUTE_MAP=new LocalAttributeMap<>(Collections.emptyMap())] @AT@ 1273 @LENGTH@ 133
---UPD VariableDeclarationFragment@@EMPTY_ATTRIBUTE_MAP=new LocalAttributeMap<>(Collections.<String,Object>emptyMap()) @TO@ EMPTY_ATTRIBUTE_MAP=new LocalAttributeMap<>(Collections.emptyMap()) @AT@ 1314 @LENGTH@ 91
------UPD ClassInstanceCreation@@LocalAttributeMap<>[Collections.<String,Object>emptyMap()] @TO@ LocalAttributeMap<>[Collections.emptyMap()] @AT@ 1336 @LENGTH@ 69
---------UPD MethodInvocation@@Collections.<String,Object>emptyMap() @TO@ Collections.emptyMap() @AT@ 1365 @LENGTH@ 39


INS FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @TO@ TypeDeclaration@@[public]DefaultOAuth2UserService, [OAuth2UserService<OAuth2UserRequest,OAuth2User>] @AT@ 2226 @LENGTH@ 87
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @AT@ 2226 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @AT@ 2234 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @AT@ 2241 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @AT@ 2247 @LENGTH@ 6
---INS VariableDeclarationFragment@@MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri" @TO@ FieldDeclaration@@private, static, final, String, [MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri"] @AT@ 2254 @LENGTH@ 58
------INS SimpleName@@MISSING_USER_INFO_URI_ERROR_CODE @TO@ VariableDeclarationFragment@@MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri" @AT@ 2254 @LENGTH@ 32
------INS StringLiteral@@"missing_user_info_uri" @TO@ VariableDeclarationFragment@@MISSING_USER_INFO_URI_ERROR_CODE="missing_user_info_uri" @AT@ 2289 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:authorizationEndpoint.setRedirectResolver(redirectResolver()) @TO@ MethodDeclaration@@public, AuthorizationEndpoint, MethodName:authorizationEndpoint, Exception,  @AT@ 5153 @LENGTH@ 62
---INS MethodInvocation@@authorizationEndpoint.setRedirectResolver(redirectResolver()) @TO@ ExpressionStatement@@MethodInvocation:authorizationEndpoint.setRedirectResolver(redirectResolver()) @AT@ 5153 @LENGTH@ 61
------INS SimpleName@@Name:authorizationEndpoint @TO@ MethodInvocation@@authorizationEndpoint.setRedirectResolver(redirectResolver()) @AT@ 5153 @LENGTH@ 21
------INS SimpleName@@MethodName:setRedirectResolver:[redirectResolver()] @TO@ MethodInvocation@@authorizationEndpoint.setRedirectResolver(redirectResolver()) @AT@ 5175 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:redirectResolver:[] @TO@ SimpleName@@MethodName:setRedirectResolver:[redirectResolver()] @AT@ 5195 @LENGTH@ 18


INS MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ReactorContextTestExecutionListenerTests,  @AT@ 5656 @LENGTH@ 504
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5656 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5663 @LENGTH@ 4
---INS SimpleName@@MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5668 @LENGTH@ 121
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5799 @LENGTH@ 9
---INS VariableDeclarationStatement@@TestingAuthenticationToken contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER"); @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5813 @LENGTH@ 116
------INS SimpleType@@TestingAuthenticationToken @TO@ VariableDeclarationStatement@@TestingAuthenticationToken contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER"); @AT@ 5813 @LENGTH@ 26
------INS VariableDeclarationFragment@@contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER") @TO@ VariableDeclarationStatement@@TestingAuthenticationToken contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER"); @AT@ 5840 @LENGTH@ 88
---------INS SimpleName@@contextHolder @TO@ VariableDeclarationFragment@@contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER") @AT@ 5840 @LENGTH@ 13
---------INS ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @TO@ VariableDeclarationFragment@@contextHolder=new TestingAuthenticationToken("contextHolder","password","ROLE_USER") @AT@ 5856 @LENGTH@ 72
------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @AT@ 5856 @LENGTH@ 3
------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @AT@ 5860 @LENGTH@ 26
------------INS StringLiteral@@"contextHolder" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @AT@ 5887 @LENGTH@ 15
------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @AT@ 5904 @LENGTH@ 10
------------INS StringLiteral@@"ROLE_USER" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["contextHolder", "password", "ROLE_USER"] @AT@ 5916 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:TestSecurityContextHolder.setContext(new SecurityContextImpl(contextHolder)) @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 5932 @LENGTH@ 77
------INS MethodInvocation@@TestSecurityContextHolder.setContext(new SecurityContextImpl(contextHolder)) @TO@ ExpressionStatement@@MethodInvocation:TestSecurityContextHolder.setContext(new SecurityContextImpl(contextHolder)) @AT@ 5932 @LENGTH@ 76
---------INS SimpleName@@Name:TestSecurityContextHolder @TO@ MethodInvocation@@TestSecurityContextHolder.setContext(new SecurityContextImpl(contextHolder)) @AT@ 5932 @LENGTH@ 25
---------INS SimpleName@@MethodName:setContext:[new SecurityContextImpl(contextHolder)] @TO@ MethodInvocation@@TestSecurityContextHolder.setContext(new SecurityContextImpl(contextHolder)) @AT@ 5958 @LENGTH@ 50
------------INS ClassInstanceCreation@@SecurityContextImpl[contextHolder] @TO@ SimpleName@@MethodName:setContext:[new SecurityContextImpl(contextHolder)] @AT@ 5969 @LENGTH@ 38
---------------INS New@@new @TO@ ClassInstanceCreation@@SecurityContextImpl[contextHolder] @AT@ 5969 @LENGTH@ 3
---------------INS SimpleType@@SecurityContextImpl @TO@ ClassInstanceCreation@@SecurityContextImpl[contextHolder] @AT@ 5973 @LENGTH@ 19
---------------INS SimpleName@@contextHolder @TO@ ClassInstanceCreation@@SecurityContextImpl[contextHolder] @AT@ 5993 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.listener.beforeTestMethod(this.testContext) @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 6013 @LENGTH@ 49
------INS MethodInvocation@@this.listener.beforeTestMethod(this.testContext) @TO@ ExpressionStatement@@MethodInvocation:this.listener.beforeTestMethod(this.testContext) @AT@ 6013 @LENGTH@ 48
---------INS FieldAccess@@this.listener @TO@ MethodInvocation@@this.listener.beforeTestMethod(this.testContext) @AT@ 6013 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.listener @AT@ 6013 @LENGTH@ 4
------------INS SimpleName@@listener @TO@ FieldAccess@@this.listener @AT@ 6018 @LENGTH@ 8
---------INS SimpleName@@MethodName:beforeTestMethod:[this.testContext] @TO@ MethodInvocation@@this.listener.beforeTestMethod(this.testContext) @AT@ 6027 @LENGTH@ 34
------------INS FieldAccess@@this.testContext @TO@ SimpleName@@MethodName:beforeTestMethod:[this.testContext] @AT@ 6044 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.testContext @AT@ 6044 @LENGTH@ 4
---------------INS SimpleName@@testContext @TO@ FieldAccess@@this.testContext @AT@ 6049 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @TO@ MethodDeclaration@@public, void, MethodName:checkSecurityContextResolutionWhenSubscribedContextCalledOnTheDifferentThreadThanWithSecurityContextTestExecutionListener, Exception,  @AT@ 6066 @LENGTH@ 91
------INS MethodInvocation@@ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @TO@ ExpressionStatement@@MethodInvocation:ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @AT@ 6066 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:submit:[() -> assertAuthentication(contextHolder)] @TO@ MethodInvocation@@ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @AT@ 6066 @LENGTH@ 79
------------INS LambdaExpression@@() -> assertAuthentication(contextHolder) @TO@ MethodInvocation@@MethodName:submit:[() -> assertAuthentication(contextHolder)] @AT@ 6103 @LENGTH@ 41
---------------INS MethodInvocation@@assertAuthentication(contextHolder) @TO@ LambdaExpression@@() -> assertAuthentication(contextHolder) @AT@ 6109 @LENGTH@ 35
------------------INS SimpleName@@MethodName:assertAuthentication:[contextHolder] @TO@ MethodInvocation@@assertAuthentication(contextHolder) @AT@ 6109 @LENGTH@ 35
---------------------INS SimpleName@@contextHolder @TO@ SimpleName@@MethodName:assertAuthentication:[contextHolder] @AT@ 6130 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:commonPool:[] @TO@ MethodInvocation@@ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @AT@ 6066 @LENGTH@ 25
---------INS SimpleName@@Name:ForkJoinPool @TO@ MethodInvocation@@ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @AT@ 6066 @LENGTH@ 12
---------INS SimpleName@@MethodName:join:[] @TO@ MethodInvocation@@ForkJoinPool.commonPool().submit(() -> assertAuthentication(contextHolder)).join() @AT@ 6150 @LENGTH@ 6


INS SuperConstructorInvocation@@super(context);
 @TO@ MethodDeclaration@@public, voidMethodName:SlackComponent, CamelContext context,  @AT@ 1193 @LENGTH@ 15
---INS SimpleName@@context @TO@ SuperConstructorInvocation@@super(context);
 @AT@ 1199 @LENGTH@ 7


UPD TypeDeclaration@@[public]QuerydslJpaRepository, SimpleJpaRepository<T,ID>[QuerydslPredicateExecutor<T>] @TO@ [@Deprecated, public]QuerydslJpaRepository, SimpleJpaRepository<T,ID>[QuerydslPredicateExecutor<T>] @AT@ 2063 @LENGTH@ 6420
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]QuerydslJpaRepository, SimpleJpaRepository<T,ID>[QuerydslPredicateExecutor<T>] @AT@ 2169 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body2) @TO@ MethodInvocation:assertEquals("Hello World",body2) @AT@ 1856 @LENGTH@ 33
---UPD MethodInvocation@@assertEquals("Bye World",body2) @TO@ assertEquals("Hello World",body2) @AT@ 1856 @LENGTH@ 32
------UPD SimpleName@@MethodName:assertEquals:["Bye World", body2] @TO@ MethodName:assertEquals:["Hello World", body2] @AT@ 1856 @LENGTH@ 32
---------UPD StringLiteral@@"Bye World" @TO@ "Hello World" @AT@ 1869 @LENGTH@ 11


UPD IfStatement@@if (cascade && isPartitionedTable) {  if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {    parts=msdb.getPartitions(dbname,name,-1);    for (    Partition part : parts) {      List<FieldSchema> oldCols=part.getSd().getCols();      part.getSd().setCols(newt.getSd().getCols());      ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);      assert (colStats == null);      msdb.alterPartition(dbname,name,part.getValues(),part);    }    msdb.alterTable(dbname,name,newt);  } else {    LOG.warn("Alter table does not cascade changes to its partitions.");  }} else {  alterTableUpdateTableColumnStats(msdb,oldt,newt);} @TO@ if (isPartitionedTable) {  if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {    parts=msdb.getPartitions(dbname,name,-1);    for (    Partition part : parts) {      Partition oldPart=new Partition(part);      List<FieldSchema> oldCols=part.getSd().getCols();      part.getSd().setCols(newt.getSd().getCols());      ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);      assert (colStats == null);      if (cascade) {        msdb.alterPartition(dbname,name,part.getValues(),part);      } else {        oldPart.setParameters(part.getParameters());        msdb.alterPartition(dbname,name,part.getValues(),oldPart);      }    }    msdb.alterTable(dbname,name,newt);  } else {    LOG.warn("Alter table not cascaded to partitions.");    alterTableUpdateTableColumnStats(msdb,oldt,newt);  }} else {  alterTableUpdateTableColumnStats(msdb,oldt,newt);} @AT@ 13641 @LENGTH@ 974
---DEL InfixExpression@@cascade && isPartitionedTable @AT@ 13645 @LENGTH@ 29
------DEL SimpleName@@cascade @AT@ 13645 @LENGTH@ 7
------DEL Operator@@&& @AT@ 13652 @LENGTH@ 2
------DEL SimpleName@@isPartitionedTable @AT@ 13656 @LENGTH@ 18
---INS SimpleName@@isPartitionedTable @TO@ IfStatement@@if (cascade && isPartitionedTable) {  if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {    parts=msdb.getPartitions(dbname,name,-1);    for (    Partition part : parts) {      List<FieldSchema> oldCols=part.getSd().getCols();      part.getSd().setCols(newt.getSd().getCols());      ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);      assert (colStats == null);      msdb.alterPartition(dbname,name,part.getValues(),part);    }    msdb.alterTable(dbname,name,newt);  } else {    LOG.warn("Alter table does not cascade changes to its partitions.");  }} else {  alterTableUpdateTableColumnStats(msdb,oldt,newt);} @AT@ 13645 @LENGTH@ 18
---UPD Block@@ThenBody:{  if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {    parts=msdb.getPartitions(dbname,name,-1);    for (    Partition part : parts) {      List<FieldSchema> oldCols=part.getSd().getCols();      part.getSd().setCols(newt.getSd().getCols());      ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);      assert (colStats == null);      msdb.alterPartition(dbname,name,part.getValues(),part);    }    msdb.alterTable(dbname,name,newt);  } else {    LOG.warn("Alter table does not cascade changes to its partitions.");  }} @TO@ ThenBody:{  if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {    parts=msdb.getPartitions(dbname,name,-1);    for (    Partition part : parts) {      Partition oldPart=new Partition(part);      List<FieldSchema> oldCols=part.getSd().getCols();      part.getSd().setCols(newt.getSd().getCols());      ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);      assert (colStats == null);      if (cascade) {        msdb.alterPartition(dbname,name,part.getValues(),part);      } else {        oldPart.setParameters(part.getParameters());        msdb.alterPartition(dbname,name,part.getValues(),oldPart);      }    }    msdb.alterTable(dbname,name,newt);  } else {    LOG.warn("Alter table not cascaded to partitions.");    alterTableUpdateTableColumnStats(msdb,oldt,newt);  }} @AT@ 13676 @LENGTH@ 860
------UPD IfStatement@@if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {  parts=msdb.getPartitions(dbname,name,-1);  for (  Partition part : parts) {    List<FieldSchema> oldCols=part.getSd().getCols();    part.getSd().setCols(newt.getSd().getCols());    ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);    assert (colStats == null);    msdb.alterPartition(dbname,name,part.getValues(),part);  }  msdb.alterTable(dbname,name,newt);} else {  LOG.warn("Alter table does not cascade changes to its partitions.");} @TO@ if (!MetaStoreUtils.areSameColumns(oldt.getSd().getCols(),newt.getSd().getCols())) {  parts=msdb.getPartitions(dbname,name,-1);  for (  Partition part : parts) {    Partition oldPart=new Partition(part);    List<FieldSchema> oldCols=part.getSd().getCols();    part.getSd().setCols(newt.getSd().getCols());    ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);    assert (colStats == null);    if (cascade) {      msdb.alterPartition(dbname,name,part.getValues(),part);    } else {      oldPart.setParameters(part.getParameters());      msdb.alterPartition(dbname,name,part.getValues(),oldPart);    }  }  msdb.alterTable(dbname,name,newt);} else {  LOG.warn("Alter table not cascaded to partitions.");  alterTableUpdateTableColumnStats(msdb,oldt,newt);} @AT@ 13769 @LENGTH@ 757
---------UPD Block@@ThenBody:{  parts=msdb.getPartitions(dbname,name,-1);  for (  Partition part : parts) {    List<FieldSchema> oldCols=part.getSd().getCols();    part.getSd().setCols(newt.getSd().getCols());    ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);    assert (colStats == null);    msdb.alterPartition(dbname,name,part.getValues(),part);  }  msdb.alterTable(dbname,name,newt);} @TO@ ThenBody:{  parts=msdb.getPartitions(dbname,name,-1);  for (  Partition part : parts) {    Partition oldPart=new Partition(part);    List<FieldSchema> oldCols=part.getSd().getCols();    part.getSd().setCols(newt.getSd().getCols());    ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);    assert (colStats == null);    if (cascade) {      msdb.alterPartition(dbname,name,part.getValues(),part);    } else {      oldPart.setParameters(part.getParameters());      msdb.alterPartition(dbname,name,part.getValues(),oldPart);    }  }  msdb.alterTable(dbname,name,newt);} @AT@ 13852 @LENGTH@ 574
------------UPD EnhancedForStatement@@for (Partition part : parts) {  List<FieldSchema> oldCols=part.getSd().getCols();  part.getSd().setCols(newt.getSd().getCols());  ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);  assert (colStats == null);  msdb.alterPartition(dbname,name,part.getValues(),part);} @TO@ for (Partition part : parts) {  Partition oldPart=new Partition(part);  List<FieldSchema> oldCols=part.getSd().getCols();  part.getSd().setCols(newt.getSd().getCols());  ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);  assert (colStats == null);  if (cascade) {    msdb.alterPartition(dbname,name,part.getValues(),part);  } else {    oldPart.setParameters(part.getParameters());    msdb.alterPartition(dbname,name,part.getValues(),oldPart);  }} @AT@ 13924 @LENGTH@ 441
---------------INS VariableDeclarationStatement@@Partition oldPart=new Partition(part); @TO@ EnhancedForStatement@@for (Partition part : parts) {  List<FieldSchema> oldCols=part.getSd().getCols();  part.getSd().setCols(newt.getSd().getCols());  ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);  assert (colStats == null);  msdb.alterPartition(dbname,name,part.getValues(),part);} @AT@ 13958 @LENGTH@ 40
------------------INS SimpleType@@Partition @TO@ VariableDeclarationStatement@@Partition oldPart=new Partition(part); @AT@ 13958 @LENGTH@ 9
------------------INS VariableDeclarationFragment@@oldPart=new Partition(part) @TO@ VariableDeclarationStatement@@Partition oldPart=new Partition(part); @AT@ 13968 @LENGTH@ 29
---------------------INS SimpleName@@oldPart @TO@ VariableDeclarationFragment@@oldPart=new Partition(part) @AT@ 13968 @LENGTH@ 7
---------------------INS ClassInstanceCreation@@Partition[part] @TO@ VariableDeclarationFragment@@oldPart=new Partition(part) @AT@ 13978 @LENGTH@ 19
------------------------INS New@@new @TO@ ClassInstanceCreation@@Partition[part] @AT@ 13978 @LENGTH@ 3
------------------------INS SimpleType@@Partition @TO@ ClassInstanceCreation@@Partition[part] @AT@ 13982 @LENGTH@ 9
------------------------INS SimpleName@@part @TO@ ClassInstanceCreation@@Partition[part] @AT@ 13992 @LENGTH@ 4
---------------INS IfStatement@@if (cascade) {  msdb.alterPartition(dbname,name,part.getValues(),part);} else {  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @TO@ EnhancedForStatement@@for (Partition part : parts) {  List<FieldSchema> oldCols=part.getSd().getCols();  part.getSd().setCols(newt.getSd().getCols());  ColumnStatistics colStats=updateOrGetPartitionColumnStats(msdb,dbname,name,part.getValues(),oldCols,oldt,part,null);  assert (colStats == null);  msdb.alterPartition(dbname,name,part.getValues(),part);} @AT@ 14337 @LENGTH@ 320
------------------INS SimpleName@@cascade @TO@ IfStatement@@if (cascade) {  msdb.alterPartition(dbname,name,part.getValues(),part);} else {  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @AT@ 14341 @LENGTH@ 7
------------------INS Block@@ThenBody:{  msdb.alterPartition(dbname,name,part.getValues(),part);} @TO@ IfStatement@@if (cascade) {  msdb.alterPartition(dbname,name,part.getValues(),part);} else {  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @AT@ 14350 @LENGTH@ 92
---------------------MOV ExpressionStatement@@MethodInvocation:msdb.alterPartition(dbname,name,part.getValues(),part) @TO@ Block@@ThenBody:{  msdb.alterPartition(dbname,name,part.getValues(),part);} @AT@ 14293 @LENGTH@ 58
------------------INS Block@@ElseBody:{  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @TO@ IfStatement@@if (cascade) {  msdb.alterPartition(dbname,name,part.getValues(),part);} else {  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @AT@ 14448 @LENGTH@ 209
---------------------INS ExpressionStatement@@MethodInvocation:oldPart.setParameters(part.getParameters()) @TO@ Block@@ElseBody:{  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @AT@ 14519 @LENGTH@ 44
------------------------INS MethodInvocation@@oldPart.setParameters(part.getParameters()) @TO@ ExpressionStatement@@MethodInvocation:oldPart.setParameters(part.getParameters()) @AT@ 14519 @LENGTH@ 43
---------------------------INS SimpleName@@Name:oldPart @TO@ MethodInvocation@@oldPart.setParameters(part.getParameters()) @AT@ 14519 @LENGTH@ 7
---------------------------INS SimpleName@@MethodName:setParameters:[part.getParameters()] @TO@ MethodInvocation@@oldPart.setParameters(part.getParameters()) @AT@ 14527 @LENGTH@ 35
------------------------------INS MethodInvocation@@part.getParameters() @TO@ SimpleName@@MethodName:setParameters:[part.getParameters()] @AT@ 14541 @LENGTH@ 20
---------------------------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getParameters() @AT@ 14541 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:getParameters:[] @TO@ MethodInvocation@@part.getParameters() @AT@ 14546 @LENGTH@ 15
---------------------INS ExpressionStatement@@MethodInvocation:msdb.alterPartition(dbname,name,part.getValues(),oldPart) @TO@ Block@@ElseBody:{  oldPart.setParameters(part.getParameters());  msdb.alterPartition(dbname,name,part.getValues(),oldPart);} @AT@ 14580 @LENGTH@ 61
------------------------INS MethodInvocation@@msdb.alterPartition(dbname,name,part.getValues(),oldPart) @TO@ ExpressionStatement@@MethodInvocation:msdb.alterPartition(dbname,name,part.getValues(),oldPart) @AT@ 14580 @LENGTH@ 60
---------------------------INS SimpleName@@Name:msdb @TO@ MethodInvocation@@msdb.alterPartition(dbname,name,part.getValues(),oldPart) @AT@ 14580 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:alterPartition:[dbname, name, part.getValues(), oldPart] @TO@ MethodInvocation@@msdb.alterPartition(dbname,name,part.getValues(),oldPart) @AT@ 14585 @LENGTH@ 55
------------------------------INS SimpleName@@dbname @TO@ SimpleName@@MethodName:alterPartition:[dbname, name, part.getValues(), oldPart] @AT@ 14600 @LENGTH@ 6
------------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:alterPartition:[dbname, name, part.getValues(), oldPart] @AT@ 14608 @LENGTH@ 4
------------------------------INS MethodInvocation@@part.getValues() @TO@ SimpleName@@MethodName:alterPartition:[dbname, name, part.getValues(), oldPart] @AT@ 14614 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getValues() @AT@ 14614 @LENGTH@ 4
---------------------------------INS SimpleName@@MethodName:getValues:[] @TO@ MethodInvocation@@part.getValues() @AT@ 14619 @LENGTH@ 11
------------------------------INS SimpleName@@oldPart @TO@ SimpleName@@MethodName:alterPartition:[dbname, name, part.getValues(), oldPart] @AT@ 14632 @LENGTH@ 7
---------UPD Block@@ElseBody:{  LOG.warn("Alter table does not cascade changes to its partitions.");} @TO@ ElseBody:{  LOG.warn("Alter table not cascaded to partitions.");  alterTableUpdateTableColumnStats(msdb,oldt,newt);} @AT@ 14432 @LENGTH@ 94
------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Alter table does not cascade changes to its partitions.") @TO@ MethodInvocation:LOG.warn("Alter table not cascaded to partitions.") @AT@ 14446 @LENGTH@ 68
---------------UPD MethodInvocation@@LOG.warn("Alter table does not cascade changes to its partitions.") @TO@ LOG.warn("Alter table not cascaded to partitions.") @AT@ 14446 @LENGTH@ 67
------------------UPD SimpleName@@MethodName:warn:["Alter table does not cascade changes to its partitions."] @TO@ MethodName:warn:["Alter table not cascaded to partitions."] @AT@ 14450 @LENGTH@ 63
---------------------UPD StringLiteral@@"Alter table does not cascade changes to its partitions." @TO@ "Alter table not cascaded to partitions." @AT@ 14455 @LENGTH@ 57
------------INS ExpressionStatement@@MethodInvocation:alterTableUpdateTableColumnStats(msdb,oldt,newt) @TO@ Block@@ElseBody:{  LOG.warn("Alter table does not cascade changes to its partitions.");} @AT@ 14817 @LENGTH@ 51
---------------INS MethodInvocation@@alterTableUpdateTableColumnStats(msdb,oldt,newt) @TO@ ExpressionStatement@@MethodInvocation:alterTableUpdateTableColumnStats(msdb,oldt,newt) @AT@ 14817 @LENGTH@ 50
------------------INS SimpleName@@MethodName:alterTableUpdateTableColumnStats:[msdb, oldt, newt] @TO@ MethodInvocation@@alterTableUpdateTableColumnStats(msdb,oldt,newt) @AT@ 14817 @LENGTH@ 50
---------------------INS SimpleName@@msdb @TO@ SimpleName@@MethodName:alterTableUpdateTableColumnStats:[msdb, oldt, newt] @AT@ 14850 @LENGTH@ 4
---------------------INS SimpleName@@oldt @TO@ SimpleName@@MethodName:alterTableUpdateTableColumnStats:[msdb, oldt, newt] @AT@ 14856 @LENGTH@ 4
---------------------INS SimpleName@@newt @TO@ SimpleName@@MethodName:alterTableUpdateTableColumnStats:[msdb, oldt, newt] @AT@ 14862 @LENGTH@ 4


INS IfStatement@@if (options == null) {  options=PartitionDropOptions.instance();} @TO@ MethodDeclaration@@public, boolean, MethodName:dropPartition, String db_name, String tbl_name, List<String> part_vals, PartitionDropOptions options, TException,  @AT@ 38874 @LENGTH@ 77
---INS InfixExpression@@options == null @TO@ IfStatement@@if (options == null) {  options=PartitionDropOptions.instance();} @AT@ 38878 @LENGTH@ 15
------INS SimpleName@@options @TO@ InfixExpression@@options == null @AT@ 38878 @LENGTH@ 7
------INS Operator@@== @TO@ InfixExpression@@options == null @AT@ 38885 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@options == null @AT@ 38889 @LENGTH@ 4
---INS Block@@ThenBody:{  options=PartitionDropOptions.instance();} @TO@ IfStatement@@if (options == null) {  options=PartitionDropOptions.instance();} @AT@ 38895 @LENGTH@ 56
------INS ExpressionStatement@@Assignment:options=PartitionDropOptions.instance() @TO@ Block@@ThenBody:{  options=PartitionDropOptions.instance();} @AT@ 38903 @LENGTH@ 42
---------INS Assignment@@options=PartitionDropOptions.instance() @TO@ ExpressionStatement@@Assignment:options=PartitionDropOptions.instance() @AT@ 38903 @LENGTH@ 41
------------INS SimpleName@@options @TO@ Assignment@@options=PartitionDropOptions.instance() @AT@ 38903 @LENGTH@ 7
------------INS Operator@@= @TO@ Assignment@@options=PartitionDropOptions.instance() @AT@ 38910 @LENGTH@ 1
------------INS MethodInvocation@@PartitionDropOptions.instance() @TO@ Assignment@@options=PartitionDropOptions.instance() @AT@ 38913 @LENGTH@ 31
---------------INS SimpleName@@Name:PartitionDropOptions @TO@ MethodInvocation@@PartitionDropOptions.instance() @AT@ 38913 @LENGTH@ 20
---------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@PartitionDropOptions.instance() @AT@ 38934 @LENGTH@ 10


UPD MethodDeclaration@@public, Message, MethodName:postProcessMessageBeforeSend, Message message, Event event,  @TO@ protected, Message, MethodName:postProcessMessageBeforeSend, Message message, Event event,  @AT@ 10458 @LENGTH@ 96
---UPD Modifier@@public @TO@ protected @AT@ 10458 @LENGTH@ 6


UPD MethodDeclaration@@private, BasicDBList, MethodName:writeCollectionInternal, Collection<?> source, TypeInformation<?> type, BasicDBList sink,  @TO@ private, List<Object>, MethodName:writeCollectionInternal, Collection<?> source, TypeInformation<?> type, Collection sink,  @AT@ 23785 @LENGTH@ 788
---DEL SimpleType@@BasicDBList @AT@ 23793 @LENGTH@ 11
---INS ParameterizedType@@List<Object> @TO@ MethodDeclaration@@private, BasicDBList, MethodName:writeCollectionInternal, Collection<?> source, TypeInformation<?> type, BasicDBList sink,  @AT@ 23811 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 23811 @LENGTH@ 4
------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 23816 @LENGTH@ 6
---UPD SingleVariableDeclaration@@BasicDBList sink @TO@ Collection sink @AT@ 23876 @LENGTH@ 16
------UPD SimpleType@@BasicDBList @TO@ Collection @AT@ 23876 @LENGTH@ 11
---INS VariableDeclarationStatement@@List<Object> collection=sink instanceof List ? (List)sink : new ArrayList<>(sink); @TO@ MethodDeclaration@@private, BasicDBList, MethodName:writeCollectionInternal, Collection<?> source, TypeInformation<?> type, BasicDBList sink,  @AT@ 23961 @LENGTH@ 85
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> collection=sink instanceof List ? (List)sink : new ArrayList<>(sink); @AT@ 23961 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 23961 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 23966 @LENGTH@ 6
------INS VariableDeclarationFragment@@collection=sink instanceof List ? (List)sink : new ArrayList<>(sink) @TO@ VariableDeclarationStatement@@List<Object> collection=sink instanceof List ? (List)sink : new ArrayList<>(sink); @AT@ 23974 @LENGTH@ 71
---------INS SimpleName@@collection @TO@ VariableDeclarationFragment@@collection=sink instanceof List ? (List)sink : new ArrayList<>(sink) @AT@ 23974 @LENGTH@ 10
---------INS ConditionalExpression@@sink instanceof List ? (List)sink : new ArrayList<>(sink) @TO@ VariableDeclarationFragment@@collection=sink instanceof List ? (List)sink : new ArrayList<>(sink) @AT@ 23987 @LENGTH@ 58
------------INS InstanceofExpression@@sink instanceof List @TO@ ConditionalExpression@@sink instanceof List ? (List)sink : new ArrayList<>(sink) @AT@ 23987 @LENGTH@ 20
---------------INS SimpleName@@sink @TO@ InstanceofExpression@@sink instanceof List @AT@ 23987 @LENGTH@ 4
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@sink instanceof List @AT@ 23992 @LENGTH@ 10
---------------INS SimpleType@@List @TO@ InstanceofExpression@@sink instanceof List @AT@ 24003 @LENGTH@ 4
------------INS CastExpression@@(List)sink @TO@ ConditionalExpression@@sink instanceof List ? (List)sink : new ArrayList<>(sink) @AT@ 24010 @LENGTH@ 11
---------------INS SimpleType@@List @TO@ CastExpression@@(List)sink @AT@ 24011 @LENGTH@ 4
---------------INS SimpleName@@sink @TO@ CastExpression@@(List)sink @AT@ 24017 @LENGTH@ 4
------------INS ClassInstanceCreation@@ArrayList<>[sink] @TO@ ConditionalExpression@@sink instanceof List ? (List)sink : new ArrayList<>(sink) @AT@ 24024 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[sink] @AT@ 24024 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[sink] @AT@ 24028 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 24028 @LENGTH@ 9
---------------INS SimpleName@@sink @TO@ ClassInstanceCreation@@ArrayList<>[sink] @AT@ 24040 @LENGTH@ 4
---UPD EnhancedForStatement@@for (Object element : source) {  Class<?> elementType=element == null ? null : element.getClass();  if (elementType == null || conversions.isSimpleType(elementType)) {    sink.add(getPotentiallyConvertedSimpleWrite(element));  } else   if (element instanceof Collection || elementType.isArray()) {    sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));  } else {    Document document=new Document();    writeInternal(element,document,componentType);    sink.add(document);  }} @TO@ for (Object element : source) {  Class<?> elementType=element == null ? null : element.getClass();  if (elementType == null || conversions.isSimpleType(elementType)) {    collection.add(getPotentiallyConvertedSimpleWrite(element));  } else   if (element instanceof Collection || elementType.isArray()) {    collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));  } else {    Document document=new Document();    writeInternal(element,document,componentType);    collection.add(document);  }} @AT@ 24014 @LENGTH@ 540
------UPD IfStatement@@if (elementType == null || conversions.isSimpleType(elementType)) {  sink.add(getPotentiallyConvertedSimpleWrite(element));} else if (element instanceof Collection || elementType.isArray()) {  sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  sink.add(document);} @TO@ if (elementType == null || conversions.isSimpleType(elementType)) {  collection.add(getPotentiallyConvertedSimpleWrite(element));} else if (element instanceof Collection || elementType.isArray()) {  collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  collection.add(document);} @AT@ 24122 @LENGTH@ 428
---------UPD Block@@ThenBody:{  sink.add(getPotentiallyConvertedSimpleWrite(element));} @TO@ ThenBody:{  collection.add(getPotentiallyConvertedSimpleWrite(element));} @AT@ 24188 @LENGTH@ 65
------------UPD ExpressionStatement@@MethodInvocation:sink.add(getPotentiallyConvertedSimpleWrite(element)) @TO@ MethodInvocation:collection.add(getPotentiallyConvertedSimpleWrite(element)) @AT@ 24194 @LENGTH@ 54
---------------UPD MethodInvocation@@sink.add(getPotentiallyConvertedSimpleWrite(element)) @TO@ collection.add(getPotentiallyConvertedSimpleWrite(element)) @AT@ 24194 @LENGTH@ 53
------------------UPD SimpleName@@Name:sink @TO@ Name:collection @AT@ 24194 @LENGTH@ 4
---------UPD Block@@ElseBody:if (element instanceof Collection || elementType.isArray()) {  sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  sink.add(document);} @TO@ ElseBody:if (element instanceof Collection || elementType.isArray()) {  collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  collection.add(document);} @AT@ 24259 @LENGTH@ 291
------------UPD IfStatement@@if (element instanceof Collection || elementType.isArray()) {  sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  sink.add(document);} @TO@ if (element instanceof Collection || elementType.isArray()) {  collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} else {  Document document=new Document();  writeInternal(element,document,componentType);  collection.add(document);} @AT@ 24259 @LENGTH@ 291
---------------UPD Block@@ThenBody:{  sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} @TO@ ThenBody:{  collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList()));} @AT@ 24319 @LENGTH@ 102
------------------UPD ExpressionStatement@@MethodInvocation:sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList())) @TO@ MethodInvocation:collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList())) @AT@ 24325 @LENGTH@ 91
---------------------UPD MethodInvocation@@sink.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList())) @TO@ collection.add(writeCollectionInternal(asCollection(element),componentType,new BasicDBList())) @AT@ 24325 @LENGTH@ 90
------------------------UPD SimpleName@@Name:sink @TO@ Name:collection @AT@ 24325 @LENGTH@ 4
---------------UPD Block@@ElseBody:{  Document document=new Document();  writeInternal(element,document,componentType);  sink.add(document);} @TO@ ElseBody:{  Document document=new Document();  writeInternal(element,document,componentType);  collection.add(document);} @AT@ 24427 @LENGTH@ 123
------------------UPD ExpressionStatement@@MethodInvocation:sink.add(document) @TO@ MethodInvocation:collection.add(document) @AT@ 24526 @LENGTH@ 19
---------------------UPD MethodInvocation@@sink.add(document) @TO@ collection.add(document) @AT@ 24526 @LENGTH@ 18
------------------------UPD SimpleName@@Name:sink @TO@ Name:collection @AT@ 24526 @LENGTH@ 4
---UPD ReturnStatement@@SimpleName:sink @TO@ SimpleName:collection @AT@ 24558 @LENGTH@ 12
------UPD SimpleName@@sink @TO@ collection @AT@ 24565 @LENGTH@ 4


UPD IfStatement@@if (path.indexOf("//") > 0) {  return false;} @TO@ if (path.indexOf("//") > -1) {  return false;} @AT@ 11971 @LENGTH@ 50
---UPD InfixExpression@@path.indexOf("//") > 0 @TO@ path.indexOf("//") > -1 @AT@ 11975 @LENGTH@ 22
------INS PrefixExpression@@-1 @TO@ InfixExpression@@path.indexOf("//") > 0 @AT@ 11996 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 11996 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 11997 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 11996 @LENGTH@ 1


UPD TryStatement@@try {  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,gen,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);  EntityUtils.setMessageEntity(request,multipartSignedEntity);} catch (Exception e) {  throw new HttpException("Failed to sign message",e);} @TO@ try {  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,gen,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);  multipartSignedEntity.setMainBody(true);  EntityUtils.setMessageEntity(request,multipartSignedEntity);} catch (Exception e) {  throw new HttpException("Failed to sign message",e);} @AT@ 10192 @LENGTH@ 404
---INS ExpressionStatement@@MethodInvocation:multipartSignedEntity.setMainBody(true) @TO@ TryStatement@@try {  MultipartSignedEntity multipartSignedEntity=new MultipartSignedEntity(applicationEDIEntity,gen,AS2Charset.US_ASCII,AS2TransferEncoding.BASE64,true,null);  EntityUtils.setMessageEntity(request,multipartSignedEntity);} catch (Exception e) {  throw new HttpException("Failed to sign message",e);} @AT@ 10416 @LENGTH@ 40
------INS MethodInvocation@@multipartSignedEntity.setMainBody(true) @TO@ ExpressionStatement@@MethodInvocation:multipartSignedEntity.setMainBody(true) @AT@ 10416 @LENGTH@ 39
---------INS SimpleName@@Name:multipartSignedEntity @TO@ MethodInvocation@@multipartSignedEntity.setMainBody(true) @AT@ 10416 @LENGTH@ 21
---------INS SimpleName@@MethodName:setMainBody:[true] @TO@ MethodInvocation@@multipartSignedEntity.setMainBody(true) @AT@ 10438 @LENGTH@ 17
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setMainBody:[true] @AT@ 10450 @LENGTH@ 4


INS IfStatement@@if (newRootPath == null) {  throw new MetaException("Root path cannot be null.");} @TO@ MethodDeclaration@@public, void, MethodName:setRootLocation, String newRootPath, MetaException,  @AT@ 3832 @LENGTH@ 92
---INS InfixExpression@@newRootPath == null @TO@ IfStatement@@if (newRootPath == null) {  throw new MetaException("Root path cannot be null.");} @AT@ 3836 @LENGTH@ 19
------INS SimpleName@@newRootPath @TO@ InfixExpression@@newRootPath == null @AT@ 3836 @LENGTH@ 11
------INS Operator@@== @TO@ InfixExpression@@newRootPath == null @AT@ 3847 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@newRootPath == null @AT@ 3851 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MetaException("Root path cannot be null.");} @TO@ IfStatement@@if (newRootPath == null) {  throw new MetaException("Root path cannot be null.");} @AT@ 3857 @LENGTH@ 67
------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Root path cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Root path cannot be null.");} @AT@ 3865 @LENGTH@ 53
---------INS ClassInstanceCreation@@MetaException["Root path cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Root path cannot be null.") @AT@ 3871 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Root path cannot be null."] @AT@ 3871 @LENGTH@ 3
------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Root path cannot be null."] @AT@ 3875 @LENGTH@ 13
------------INS StringLiteral@@"Root path cannot be null." @TO@ ClassInstanceCreation@@MetaException["Root path cannot be null."] @AT@ 3889 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:headers.put("emptyList",Collections.EMPTY_LIST) @TO@ MethodInvocation:headers.put("emptyList",Collections.<String>emptyList()) @AT@ 2731 @LENGTH@ 49
---UPD MethodInvocation@@headers.put("emptyList",Collections.EMPTY_LIST) @TO@ headers.put("emptyList",Collections.<String>emptyList()) @AT@ 2731 @LENGTH@ 48
------UPD SimpleName@@MethodName:put:["emptyList", Collections.EMPTY_LIST] @TO@ MethodName:put:["emptyList", Collections.<String>emptyList()] @AT@ 2739 @LENGTH@ 40
---------INS MethodInvocation@@Collections.<String>emptyList() @TO@ SimpleName@@MethodName:put:["emptyList", Collections.EMPTY_LIST] @AT@ 2756 @LENGTH@ 31
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 2756 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<String>emptyList() @AT@ 2776 @LENGTH@ 11
---------DEL QualifiedName@@Collections.EMPTY_LIST @AT@ 2756 @LENGTH@ 22
------------DEL SimpleName@@Collections @AT@ 2756 @LENGTH@ 11
------------DEL SimpleName@@EMPTY_LIST @AT@ 2768 @LENGTH@ 10


UPD MethodDeclaration@@private, static, void, MethodName:assertPartitionChanged, Partition partition, List<String> testValues, List<String> partCols,  @TO@ private, void, MethodName:assertPartitionChanged, Partition partition, List<String> testValues, List<String> partCols, MetaException,  @AT@ 6782 @LENGTH@ 819
---DEL Modifier@@static @AT@ 6790 @LENGTH@ 6
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@private, static, void, MethodName:assertPartitionChanged, Partition partition, List<String> testValues, List<String> partCols,  @AT@ 6957 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:assertTrue(partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01")) @TO@ MethodInvocation:assertTrue(partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01")) @AT@ 7278 @LENGTH@ 134
------UPD MethodInvocation@@assertTrue(partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01")) @TO@ assertTrue(partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01")) @AT@ 7278 @LENGTH@ 133
---------UPD SimpleName@@MethodName:assertTrue:[partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01")] @TO@ MethodName:assertTrue:[partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01")] @AT@ 7278 @LENGTH@ 133
------------UPD MethodInvocation@@partition.getSd().getLocation().endsWith("warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01") @TO@ partition.getSd().getLocation().equals(metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01") @AT@ 7289 @LENGTH@ 121
---------------UPD SimpleName@@MethodName:endsWith:["warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01"] @TO@ MethodName:equals:[metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01"] @AT@ 7321 @LENGTH@ 89
------------------UPD InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01" @TO@ metaStore.getWarehouseRoot() + "/testpartdb.db/testparttable/" + partPath+ "/hh=01" @AT@ 7330 @LENGTH@ 79
---------------------DEL InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" @AT@ 7330 @LENGTH@ 57
------------------------DEL StringLiteral@@"warehouse/testpartdb" @AT@ 7330 @LENGTH@ 22
---------------------MOV Operator@@+ @TO@ InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01" @AT@ 7352 @LENGTH@ 1
---------------------INS MethodInvocation@@metaStore.getWarehouseRoot() @TO@ InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01" @AT@ 7360 @LENGTH@ 28
------------------------INS SimpleName@@Name:metaStore @TO@ MethodInvocation@@metaStore.getWarehouseRoot() @AT@ 7360 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getWarehouseRoot:[] @TO@ MethodInvocation@@metaStore.getWarehouseRoot() @AT@ 7370 @LENGTH@ 18
---------------------MOV StringLiteral@@".db/testparttable/" @TO@ InfixExpression@@"warehouse/testpartdb" + ".db/testparttable/" + partPath + "/hh=01" @AT@ 7367 @LENGTH@ 20
---------------------DEL Operator@@+ @AT@ 7387 @LENGTH@ 1


DEL VariableDeclarationStatement@@Response ok=Response.ok().build(); @AT@ 2274 @LENGTH@ 36
---DEL SimpleType@@Response @AT@ 2274 @LENGTH@ 8
---DEL VariableDeclarationFragment@@ok=Response.ok().build() @AT@ 2283 @LENGTH@ 26
------DEL SimpleName@@ok @AT@ 2283 @LENGTH@ 2
------DEL MethodInvocation@@Response.ok().build() @AT@ 2288 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:ok:[] @AT@ 2288 @LENGTH@ 13
---------DEL SimpleName@@Name:Response @AT@ 2288 @LENGTH@ 8
---------DEL SimpleName@@MethodName:build:[] @AT@ 2302 @LENGTH@ 7


UPD Block@@ThenBody:{  JAXBContext context=createContext(value.getClass());  Marshaller marshaller=context.createMarshaller();  Writer buffer=new StringWriter();  if (isPrettyPrint()) {    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,Boolean.TRUE);  }  if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null) {    marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));  }  Object toMarshall=value;  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        toMarshall=objectFactoryMethod.invoke(instance,value);      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + value.getClass() + " due to "+ e.getMessage(),e);    }  }  if (needFiltering(exchange)) {    XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);    FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);    marshaller.marshal(toMarshall,filteringWriter);  } else {    marshaller.marshal(toMarshall,buffer);  }  answer=parentTypeConverter.convertTo(type,exchange,buffer.toString());} @TO@ ThenBody:{  JAXBContext context=createContext(value.getClass());  Marshaller marshaller=context.createMarshaller();  Writer buffer=new StringWriter();  if (isPrettyPrint()) {    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,Boolean.TRUE);  }  String charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null;  if (charset != null) {    marshaller.setProperty(Marshaller.JAXB_ENCODING,charset);  }  Object toMarshall=value;  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        toMarshall=objectFactoryMethod.invoke(instance,value);      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + value.getClass() + " due to "+ e.getMessage(),e);    }  }  if (needFiltering(exchange)) {    XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);    FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer,charset);    marshaller.marshal(toMarshall,filteringWriter);  } else {    marshaller.marshal(toMarshall,buffer);  }  answer=parentTypeConverter.convertTo(type,exchange,buffer.toString());} @AT@ 10955 @LENGTH@ 1849
---DEL IfStatement@@if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null) {  marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));} @AT@ 11480 @LENGTH@ 231
------DEL InfixExpression@@exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null @AT@ 11484 @LENGTH@ 85
---------DEL InfixExpression@@exchange != null @AT@ 11484 @LENGTH@ 16
---------DEL Operator@@&& @AT@ 11500 @LENGTH@ 2
---------DEL InfixExpression@@exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null @AT@ 11504 @LENGTH@ 65
------------DEL MethodInvocation@@exchange.getProperty(Exchange.CHARSET_NAME,String.class) @AT@ 11504 @LENGTH@ 57
---------------DEL SimpleName@@Name:exchange @AT@ 11504 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getProperty:[Exchange.CHARSET_NAME, String.class] @AT@ 11513 @LENGTH@ 48
------------------DEL QualifiedName@@Exchange.CHARSET_NAME @AT@ 11525 @LENGTH@ 21
---------------------DEL SimpleName@@Exchange @AT@ 11525 @LENGTH@ 8
---------------------DEL SimpleName@@CHARSET_NAME @AT@ 11534 @LENGTH@ 12
------------------DEL TypeLiteral@@String.class @AT@ 11548 @LENGTH@ 12
---INS VariableDeclarationStatement@@String charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null; @TO@ Block@@ThenBody:{  JAXBContext context=createContext(value.getClass());  Marshaller marshaller=context.createMarshaller();  Writer buffer=new StringWriter();  if (isPrettyPrint()) {    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,Boolean.TRUE);  }  if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null) {    marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));  }  Object toMarshall=value;  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        toMarshall=objectFactoryMethod.invoke(instance,value);      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + value.getClass() + " due to "+ e.getMessage(),e);    }  }  if (needFiltering(exchange)) {    XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);    FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);    marshaller.marshal(toMarshall,filteringWriter);  } else {    marshaller.marshal(toMarshall,buffer);  }  answer=parentTypeConverter.convertTo(type,exchange,buffer.toString());} @AT@ 11480 @LENGTH@ 101
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null; @AT@ 11480 @LENGTH@ 6
------INS VariableDeclarationFragment@@charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @TO@ VariableDeclarationStatement@@String charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null; @AT@ 11487 @LENGTH@ 93
---------INS SimpleName@@charset @TO@ VariableDeclarationFragment@@charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @AT@ 11487 @LENGTH@ 7
---------INS ConditionalExpression@@exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @TO@ VariableDeclarationFragment@@charset=exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @AT@ 11497 @LENGTH@ 83
------------INS InfixExpression@@exchange != null @TO@ ConditionalExpression@@exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @AT@ 11497 @LENGTH@ 16
---------------MOV SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 11484 @LENGTH@ 8
---------------MOV Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 11492 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 11496 @LENGTH@ 4
------------INS NullLiteral@@null @TO@ ConditionalExpression@@exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @AT@ 11576 @LENGTH@ 4
------------MOV MethodInvocation@@exchange.getProperty(Exchange.CHARSET_NAME,String.class) @TO@ ConditionalExpression@@exchange != null ? exchange.getProperty(Exchange.CHARSET_NAME,String.class) : null @AT@ 11638 @LENGTH@ 57
---INS IfStatement@@if (charset != null) {  marshaller.setProperty(Marshaller.JAXB_ENCODING,charset);} @TO@ Block@@ThenBody:{  JAXBContext context=createContext(value.getClass());  Marshaller marshaller=context.createMarshaller();  Writer buffer=new StringWriter();  if (isPrettyPrint()) {    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,Boolean.TRUE);  }  if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME,String.class) != null) {    marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));  }  Object toMarshall=value;  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        toMarshall=objectFactoryMethod.invoke(instance,value);      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + value.getClass() + " due to "+ e.getMessage(),e);    }  }  if (needFiltering(exchange)) {    XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);    FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);    marshaller.marshal(toMarshall,filteringWriter);  } else {    marshaller.marshal(toMarshall,buffer);  }  answer=parentTypeConverter.convertTo(type,exchange,buffer.toString());} @AT@ 11594 @LENGTH@ 111
------MOV Block@@ThenBody:{  marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class));} @TO@ IfStatement@@if (charset != null) {  marshaller.setProperty(Marshaller.JAXB_ENCODING,charset);} @AT@ 11571 @LENGTH@ 140
---------UPD ExpressionStatement@@MethodInvocation:marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class)) @TO@ MethodInvocation:marshaller.setProperty(Marshaller.JAXB_ENCODING,charset) @AT@ 11589 @LENGTH@ 108
------------UPD MethodInvocation@@marshaller.setProperty(Marshaller.JAXB_ENCODING,exchange.getProperty(Exchange.CHARSET_NAME,String.class)) @TO@ marshaller.setProperty(Marshaller.JAXB_ENCODING,charset) @AT@ 11589 @LENGTH@ 107
---------------UPD SimpleName@@MethodName:setProperty:[Marshaller.JAXB_ENCODING, exchange.getProperty(Exchange.CHARSET_NAME,String.class)] @TO@ MethodName:setProperty:[Marshaller.JAXB_ENCODING, charset] @AT@ 11600 @LENGTH@ 96
------------------INS SimpleName@@charset @TO@ SimpleName@@MethodName:setProperty:[Marshaller.JAXB_ENCODING, exchange.getProperty(Exchange.CHARSET_NAME,String.class)] @AT@ 11682 @LENGTH@ 7
------INS InfixExpression@@charset != null @TO@ IfStatement@@if (charset != null) {  marshaller.setProperty(Marshaller.JAXB_ENCODING,charset);} @AT@ 11598 @LENGTH@ 15
---------MOV Operator@@!= @TO@ InfixExpression@@charset != null @AT@ 11561 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@charset != null @AT@ 11565 @LENGTH@ 4
---------INS SimpleName@@charset @TO@ InfixExpression@@charset != null @AT@ 11598 @LENGTH@ 7
---UPD IfStatement@@if (needFiltering(exchange)) {  XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);  FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);  marshaller.marshal(toMarshall,filteringWriter);} else {  marshaller.marshal(toMarshall,buffer);} @TO@ if (needFiltering(exchange)) {  XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);  FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer,charset);  marshaller.marshal(toMarshall,filteringWriter);} else {  marshaller.marshal(toMarshall,buffer);} @AT@ 12277 @LENGTH@ 386
------UPD Block@@ThenBody:{  XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);  FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer);  marshaller.marshal(toMarshall,filteringWriter);} @TO@ ThenBody:{  XMLStreamWriter writer=parentTypeConverter.convertTo(XMLStreamWriter.class,buffer);  FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer,charset);  marshaller.marshal(toMarshall,filteringWriter);} @AT@ 12306 @LENGTH@ 280
---------UPD VariableDeclarationStatement@@FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer); @TO@ FilteringXmlStreamWriter filteringWriter=new FilteringXmlStreamWriter(writer,charset); @AT@ 12427 @LENGTH@ 80
------------UPD VariableDeclarationFragment@@filteringWriter=new FilteringXmlStreamWriter(writer) @TO@ filteringWriter=new FilteringXmlStreamWriter(writer,charset) @AT@ 12452 @LENGTH@ 54
---------------UPD ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @TO@ FilteringXmlStreamWriter[writer, charset] @AT@ 12470 @LENGTH@ 36
------------------INS SimpleName@@charset @TO@ ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @AT@ 12501 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThat(jwt.getNotBefore().toEpochMilli()).isEqualTo(NBF_VALUE) @TO@ MethodInvocation:assertThat(jwt.getNotBefore().getEpochSecond()).isEqualTo(NBF_VALUE) @AT@ 4223 @LENGTH@ 67
---UPD MethodInvocation@@assertThat(jwt.getNotBefore().toEpochMilli()).isEqualTo(NBF_VALUE) @TO@ assertThat(jwt.getNotBefore().getEpochSecond()).isEqualTo(NBF_VALUE) @AT@ 4223 @LENGTH@ 66
------UPD MethodInvocation@@MethodName:assertThat:[jwt.getNotBefore().toEpochMilli()] @TO@ MethodName:assertThat:[jwt.getNotBefore().getEpochSecond()] @AT@ 4223 @LENGTH@ 45
---------UPD MethodInvocation@@jwt.getNotBefore().toEpochMilli() @TO@ jwt.getNotBefore().getEpochSecond() @AT@ 4234 @LENGTH@ 33
------------UPD SimpleName@@MethodName:toEpochMilli:[] @TO@ MethodName:getEpochSecond:[] @AT@ 4253 @LENGTH@ 14


UPD TypeDeclaration@@[public]ServerAuthenticationEntryPoint,  @TO@ [@FunctionalInterface, public]ServerAuthenticationEntryPoint,  @AT@ 878 @LENGTH@ 129
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ServerAuthenticationEntryPoint,  @AT@ 912 @LENGTH@ 20


INS MethodDeclaration@@static, TimestampJsonSchemaObject, MethodName:timestamp,  @TO@ TypeDeclaration@@[public]JsonSchemaObject,  @AT@ 4536 @LENGTH@ 91
---INS Modifier@@static @TO@ MethodDeclaration@@static, TimestampJsonSchemaObject, MethodName:timestamp,  @AT@ 4536 @LENGTH@ 6
---INS SimpleType@@TimestampJsonSchemaObject @TO@ MethodDeclaration@@static, TimestampJsonSchemaObject, MethodName:timestamp,  @AT@ 4543 @LENGTH@ 25
---INS SimpleName@@MethodName:timestamp @TO@ MethodDeclaration@@static, TimestampJsonSchemaObject, MethodName:timestamp,  @AT@ 4569 @LENGTH@ 9
---INS ReturnStatement@@ClassInstanceCreation:new TimestampJsonSchemaObject() @TO@ MethodDeclaration@@static, TimestampJsonSchemaObject, MethodName:timestamp,  @AT@ 4585 @LENGTH@ 39
------INS ClassInstanceCreation@@TimestampJsonSchemaObject[] @TO@ ReturnStatement@@ClassInstanceCreation:new TimestampJsonSchemaObject() @AT@ 4592 @LENGTH@ 31
---------INS New@@new @TO@ ClassInstanceCreation@@TimestampJsonSchemaObject[] @AT@ 4592 @LENGTH@ 3
---------INS SimpleType@@TimestampJsonSchemaObject @TO@ ClassInstanceCreation@@TimestampJsonSchemaObject[] @AT@ 4596 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @TO@ MethodDeclaration@@private, ClientHttpResponse, MethodName:getUserInfoResponse, ClientRegistration clientRegistration, OAuth2AccessToken oauth2AccessToken, OAuth2AuthenticationException,  @AT@ 4355 @LENGTH@ 56
---INS MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @TO@ ExpressionStatement@@MethodInvocation:httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4355 @LENGTH@ 55
------INS SimpleName@@Name:httpRequest @TO@ MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4355 @LENGTH@ 11
------INS SimpleName@@MethodName:setAccept:[MediaType.APPLICATION_JSON_VALUE] @TO@ MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4367 @LENGTH@ 43
---------INS QualifiedName@@MediaType.APPLICATION_JSON_VALUE @TO@ SimpleName@@MethodName:setAccept:[MediaType.APPLICATION_JSON_VALUE] @AT@ 4377 @LENGTH@ 32
------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 4377 @LENGTH@ 9
------------INS SimpleName@@APPLICATION_JSON_VALUE @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 4387 @LENGTH@ 22


UPD ReturnStatement@@MethodInvocation:this.userDetailsService.findByUsername(username).publishOn(Schedulers.parallel()).filter(u -> this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())).switchIfEmpty(Mono.error(new BadCredentialsException("Invalid Credentials"))).map(u -> new UsernamePasswordAuthenticationToken(u,u.getPassword(),u.getAuthorities())) @TO@ MethodInvocation:this.userDetailsService.findByUsername(username).publishOn(Schedulers.parallel()).filter(u -> this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())).switchIfEmpty(Mono.defer(() -> Mono.error(new BadCredentialsException("Invalid Credentials")))).map(u -> new UsernamePasswordAuthenticationToken(u,u.getPassword(),u.getAuthorities())) @AT@ 1772 @LENGTH@ 384
---UPD MethodInvocation@@this.userDetailsService.findByUsername(username).publishOn(Schedulers.parallel()).filter(u -> this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())).switchIfEmpty(Mono.error(new BadCredentialsException("Invalid Credentials"))).map(u -> new UsernamePasswordAuthenticationToken(u,u.getPassword(),u.getAuthorities())) @TO@ this.userDetailsService.findByUsername(username).publishOn(Schedulers.parallel()).filter(u -> this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())).switchIfEmpty(Mono.defer(() -> Mono.error(new BadCredentialsException("Invalid Credentials")))).map(u -> new UsernamePasswordAuthenticationToken(u,u.getPassword(),u.getAuthorities())) @AT@ 1779 @LENGTH@ 376
------INS MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new BadCredentialsException("Invalid Credentials")))] @TO@ MethodInvocation@@this.userDetailsService.findByUsername(username).publishOn(Schedulers.parallel()).filter(u -> this.passwordEncoder.matches((String)authentication.getCredentials(),u.getPassword())).switchIfEmpty(Mono.error(new BadCredentialsException("Invalid Credentials"))).map(u -> new UsernamePasswordAuthenticationToken(u,u.getPassword(),u.getAuthorities())) @AT@ 1779 @LENGTH@ 294
---------MOV MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new BadCredentialsException("Invalid Credentials"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new BadCredentialsException("Invalid Credentials")))] @AT@ 1779 @LENGTH@ 279
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new BadCredentialsException("Invalid Credentials"))] @AT@ 1992 @LENGTH@ 4
------------INS SimpleName@@MethodName:defer:[() -> Mono.error(new BadCredentialsException("Invalid Credentials"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new BadCredentialsException("Invalid Credentials"))] @AT@ 1997 @LENGTH@ 75
---------------INS LambdaExpression@@() -> Mono.error(new BadCredentialsException("Invalid Credentials")) @TO@ SimpleName@@MethodName:defer:[() -> Mono.error(new BadCredentialsException("Invalid Credentials"))] @AT@ 2003 @LENGTH@ 68
------------------MOV MethodInvocation@@Mono.error(new BadCredentialsException("Invalid Credentials")) @TO@ LambdaExpression@@() -> Mono.error(new BadCredentialsException("Invalid Credentials")) @AT@ 1994 @LENGTH@ 62
------UPD MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new BadCredentialsException("Invalid Credentials"))] @TO@ Mono.defer(() -> Mono.error(new BadCredentialsException("Invalid Credentials"))) @AT@ 1779 @LENGTH@ 279


UPD MethodDeclaration@@public, Message, MethodName:postProcessMessageBeforeSend, Message message, Event event,  @TO@ protected, Message, MethodName:postProcessMessageBeforeSend, Message message, Event event,  @AT@ 19799 @LENGTH@ 96
---UPD Modifier@@public @TO@ protected @AT@ 19799 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:anyPackageOf("org.eclipse.microprofile.annotation") @TO@ MethodInvocation:anyPackageOf("org.eclipse.microprofile.auth","org.eclipse.microprofile.jwt") @AT@ 879 @LENGTH@ 52
---UPD MethodInvocation@@anyPackageOf("org.eclipse.microprofile.annotation") @TO@ anyPackageOf("org.eclipse.microprofile.auth","org.eclipse.microprofile.jwt") @AT@ 879 @LENGTH@ 51
------UPD SimpleName@@MethodName:anyPackageOf:["org.eclipse.microprofile.annotation"] @TO@ MethodName:anyPackageOf:["org.eclipse.microprofile.auth", "org.eclipse.microprofile.jwt"] @AT@ 879 @LENGTH@ 51
---------UPD StringLiteral@@"org.eclipse.microprofile.annotation" @TO@ "org.eclipse.microprofile.auth" @AT@ 892 @LENGTH@ 37
---------INS StringLiteral@@"org.eclipse.microprofile.jwt" @TO@ SimpleName@@MethodName:anyPackageOf:["org.eclipse.microprofile.annotation"] @AT@ 925 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:Assert.state(getProcessor() != null || getWriter() != null,"ItemWriter or ItemProcessor must be provided") @TO@ MethodInvocation:Assert.state(getWriter() != null,"ItemWriter must be provided") @AT@ 7708 @LENGTH@ 108
---UPD MethodInvocation@@Assert.state(getProcessor() != null || getWriter() != null,"ItemWriter or ItemProcessor must be provided") @TO@ Assert.state(getWriter() != null,"ItemWriter must be provided") @AT@ 7708 @LENGTH@ 107
------UPD SimpleName@@MethodName:state:[getProcessor() != null || getWriter() != null, "ItemWriter or ItemProcessor must be provided"] @TO@ MethodName:state:[getWriter() != null, "ItemWriter must be provided"] @AT@ 7715 @LENGTH@ 100
---------DEL InfixExpression@@getProcessor() != null || getWriter() != null @AT@ 7721 @LENGTH@ 45
------------DEL InfixExpression@@getProcessor() != null @AT@ 7721 @LENGTH@ 22
---------------DEL MethodInvocation@@MethodName:getProcessor:[] @AT@ 7721 @LENGTH@ 14
---------------DEL Operator@@!= @AT@ 7735 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 7739 @LENGTH@ 4
------------DEL Operator@@|| @AT@ 7743 @LENGTH@ 2
------------DEL InfixExpression@@getWriter() != null @AT@ 7747 @LENGTH@ 19
---------INS InfixExpression@@getWriter() != null @TO@ SimpleName@@MethodName:state:[getProcessor() != null || getWriter() != null, "ItemWriter or ItemProcessor must be provided"] @AT@ 7721 @LENGTH@ 19
------------MOV MethodInvocation@@MethodName:getWriter:[] @TO@ InfixExpression@@getWriter() != null @AT@ 7747 @LENGTH@ 11
------------MOV Operator@@!= @TO@ InfixExpression@@getWriter() != null @AT@ 7758 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@getWriter() != null @AT@ 7762 @LENGTH@ 4
---------UPD StringLiteral@@"ItemWriter or ItemProcessor must be provided" @TO@ "ItemWriter must be provided" @AT@ 7768 @LENGTH@ 46


INS MethodDeclaration@@MongoPersistentEntity<?>, MethodName:getCollectionEntity,  @TO@ TypeDeclaration@@[public]MongoEntityMetadata, [EntityMetadata<T>] @AT@ 1344 @LENGTH@ 22
---INS ParameterizedType@@MongoPersistentEntity<?> @TO@ MethodDeclaration@@MongoPersistentEntity<?>, MethodName:getCollectionEntity,  @AT@ 1319 @LENGTH@ 24
------INS SimpleType@@MongoPersistentEntity @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 1319 @LENGTH@ 21
------INS WildcardType@@? @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 1341 @LENGTH@ 1
---INS SimpleName@@MethodName:getCollectionEntity @TO@ MethodDeclaration@@MongoPersistentEntity<?>, MethodName:getCollectionEntity,  @AT@ 1344 @LENGTH@ 19


UPD VariableDeclarationStatement@@Context toMerge=ReactiveSecurityContextHolder.withAuthentication(authentication); @TO@ Context toMerge=ReactiveSecurityContextHolder.withSecurityContext(Mono.just(this.securityContext)); @AT@ 3442 @LENGTH@ 83
---UPD VariableDeclarationFragment@@toMerge=ReactiveSecurityContextHolder.withAuthentication(authentication) @TO@ toMerge=ReactiveSecurityContextHolder.withSecurityContext(Mono.just(this.securityContext)) @AT@ 3450 @LENGTH@ 74
------UPD MethodInvocation@@ReactiveSecurityContextHolder.withAuthentication(authentication) @TO@ ReactiveSecurityContextHolder.withSecurityContext(Mono.just(this.securityContext)) @AT@ 3460 @LENGTH@ 64
---------UPD SimpleName@@MethodName:withAuthentication:[authentication] @TO@ MethodName:withSecurityContext:[Mono.just(this.securityContext)] @AT@ 3490 @LENGTH@ 34
------------DEL SimpleName@@authentication @AT@ 3509 @LENGTH@ 14
------------INS MethodInvocation@@Mono.just(this.securityContext) @TO@ SimpleName@@MethodName:withAuthentication:[authentication] @AT@ 3553 @LENGTH@ 31
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(this.securityContext) @AT@ 3553 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[this.securityContext] @TO@ MethodInvocation@@Mono.just(this.securityContext) @AT@ 3558 @LENGTH@ 26
------------------INS FieldAccess@@this.securityContext @TO@ SimpleName@@MethodName:just:[this.securityContext] @AT@ 3563 @LENGTH@ 20
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.securityContext @AT@ 3563 @LENGTH@ 4
---------------------INS SimpleName@@securityContext @TO@ FieldAccess@@this.securityContext @AT@ 3568 @LENGTH@ 15


UPD VariableDeclarationStatement@@AuthorizationWebFilter filter=new AuthorizationWebFilter((a,e) -> Mono.error(new AccessDeniedException("Denied"))); @TO@ AuthorizationWebFilter filter=new AuthorizationWebFilter((a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied")))); @AT@ 2410 @LENGTH@ 118
---UPD VariableDeclarationFragment@@filter=new AuthorizationWebFilter((a,e) -> Mono.error(new AccessDeniedException("Denied"))) @TO@ filter=new AuthorizationWebFilter((a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied")))) @AT@ 2433 @LENGTH@ 94
------UPD ClassInstanceCreation@@AuthorizationWebFilter[(a,e) -> Mono.error(new AccessDeniedException("Denied"))] @TO@ AuthorizationWebFilter[(a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied")))] @AT@ 2442 @LENGTH@ 85
---------INS LambdaExpression@@(a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @TO@ ClassInstanceCreation@@AuthorizationWebFilter[(a,e) -> Mono.error(new AccessDeniedException("Denied"))] @AT@ 2469 @LENGTH@ 76
------------INS VariableDeclarationFragment@@a @TO@ LambdaExpression@@(a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 2470 @LENGTH@ 1
---------------INS SimpleName@@a @TO@ VariableDeclarationFragment@@a @AT@ 2470 @LENGTH@ 1
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@(a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 2473 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 2473 @LENGTH@ 1
------------INS MethodInvocation@@a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @TO@ LambdaExpression@@(a,e) -> a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 2479 @LENGTH@ 66
---------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 2479 @LENGTH@ 1
---------------INS SimpleName@@MethodName:flatMap:[auth -> Mono.error(new AccessDeniedException("Denied"))] @TO@ MethodInvocation@@a.flatMap(auth -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 2481 @LENGTH@ 64
------------------MOV LambdaExpression@@(a,e) -> Mono.error(new AccessDeniedException("Denied")) @TO@ SimpleName@@MethodName:flatMap:[auth -> Mono.error(new AccessDeniedException("Denied"))] @AT@ 2469 @LENGTH@ 57
---------------------UPD VariableDeclarationFragment@@a @TO@ auth @AT@ 2470 @LENGTH@ 1
------------------------UPD SimpleName@@a @TO@ auth @AT@ 2470 @LENGTH@ 1
---------------------DEL VariableDeclarationFragment@@e @AT@ 2473 @LENGTH@ 1
------------------------DEL SimpleName@@e @AT@ 2473 @LENGTH@ 1
---------UPD LambdaExpression@@(a,e) -> Mono.error(new AccessDeniedException("Denied")) @TO@ auth -> Mono.error(new AccessDeniedException("Denied")) @AT@ 2469 @LENGTH@ 57


UPD MethodDeclaration@@private, Set<GrantedAuthority>, MethodName:sortAuthorities, Set<GrantedAuthority> authorities,  @TO@ private, Set<GrantedAuthority>, MethodName:sortAuthorities, Collection<? extends GrantedAuthority> authorities,  @AT@ 3291 @LENGTH@ 276
---UPD SingleVariableDeclaration@@Set<GrantedAuthority> authorities @TO@ Collection<? extends GrantedAuthority> authorities @AT@ 3337 @LENGTH@ 33
------UPD ParameterizedType@@Set<GrantedAuthority> @TO@ Collection<? extends GrantedAuthority> @AT@ 3337 @LENGTH@ 21
---------UPD SimpleType@@Set @TO@ Collection @AT@ 3337 @LENGTH@ 3
---------DEL SimpleType@@GrantedAuthority @AT@ 3341 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@Set<GrantedAuthority> @AT@ 3365 @LENGTH@ 26


INS IfStatement@@if (!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri())) {  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 2688 @LENGTH@ 446
---INS PrefixExpression@@!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @TO@ IfStatement@@if (!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri())) {  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 2692 @LENGTH@ 109
------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @AT@ 2692 @LENGTH@ 1
------INS MethodInvocation@@StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @TO@ PrefixExpression@@!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @AT@ 2693 @LENGTH@ 108
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @AT@ 2693 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasText:[userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()] @TO@ MethodInvocation@@StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()) @AT@ 2705 @LENGTH@ 96
------------INS MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @TO@ SimpleName@@MethodName:hasText:[userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri()] @AT@ 2713 @LENGTH@ 87
---------------INS MethodInvocation@@MethodName:getUserInfoEndpoint:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 2713 @LENGTH@ 78
---------------INS MethodInvocation@@MethodName:getProviderDetails:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 2713 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 2713 @LENGTH@ 35
---------------INS SimpleName@@Name:userRequest @TO@ MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 2713 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() @AT@ 2792 @LENGTH@ 8
---INS Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ IfStatement@@if (!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri())) {  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 2803 @LENGTH@ 331
------INS VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null); @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 2808 @LENGTH@ 241
---------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null); @AT@ 2808 @LENGTH@ 11
---------INS VariableDeclarationFragment@@oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null); @AT@ 2820 @LENGTH@ 228
------------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null) @AT@ 2820 @LENGTH@ 11
------------INS ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null) @AT@ 2834 @LENGTH@ 214
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @AT@ 2834 @LENGTH@ 3
---------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @AT@ 2838 @LENGTH@ 11
---------------INS SimpleName@@MISSING_USER_INFO_URI_ERROR_CODE @TO@ ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @AT@ 2855 @LENGTH@ 32
---------------INS InfixExpression@@"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId() @TO@ ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @AT@ 2893 @LENGTH@ 140
------------------INS StringLiteral@@"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " @TO@ InfixExpression@@"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId() @AT@ 2893 @LENGTH@ 77
------------------INS Operator@@+ @TO@ InfixExpression@@"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId() @AT@ 2970 @LENGTH@ 1
------------------INS MethodInvocation@@userRequest.getClientRegistration().getRegistrationId() @TO@ InfixExpression@@"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId() @AT@ 2978 @LENGTH@ 55
---------------------INS MethodInvocation@@MethodName:getClientRegistration:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getRegistrationId() @AT@ 2978 @LENGTH@ 35
---------------------INS SimpleName@@Name:userRequest @TO@ MethodInvocation@@userRequest.getClientRegistration().getRegistrationId() @AT@ 2978 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@userRequest.getClientRegistration().getRegistrationId() @AT@ 3014 @LENGTH@ 19
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@OAuth2Error[MISSING_USER_INFO_URI_ERROR_CODE, "Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(), null] @AT@ 3039 @LENGTH@ 4
------INS ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 3053 @LENGTH@ 77
---------INS ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString()) @AT@ 3059 @LENGTH@ 70
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3059 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthenticationException @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3063 @LENGTH@ 29
------------INS SimpleName@@oauth2Error @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3093 @LENGTH@ 11
------------INS MethodInvocation@@oauth2Error.toString() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[oauth2Error, oauth2Error.toString()] @AT@ 3106 @LENGTH@ 22
---------------INS SimpleName@@Name:oauth2Error @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 3106 @LENGTH@ 11
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@oauth2Error.toString() @AT@ 3118 @LENGTH@ 10


UPD TypeDeclaration@@[@SuppressWarnings("deprecation"), public]MyFacesFlowResponseStateManager, ResponseStateManager[FacesWrapper<ResponseStateManager>] @TO@ [public]MyFacesFlowResponseStateManager, ResponseStateManager[FacesWrapper<ResponseStateManager>] @AT@ 2244 @LENGTH@ 1506
---DEL SingleMemberAnnotation@@@SuppressWarnings("deprecation") @AT@ 2244 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @TO@ TypeDeclaration@@[public]DefaultLoginPageGeneratingFilterTests,  @AT@ 7262 @LENGTH@ 741
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7269 @LENGTH@ 4
---INS SimpleName@@MethodName:generatesForOAuth2LoginAndEscapesClientName @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7274 @LENGTH@ 43
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7327 @LENGTH@ 9
---INS VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(); @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7341 @LENGTH@ 81
------INS SimpleType@@DefaultLoginPageGeneratingFilter @TO@ VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(); @AT@ 7341 @LENGTH@ 32
------INS VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter() @TO@ VariableDeclarationStatement@@DefaultLoginPageGeneratingFilter filter=new DefaultLoginPageGeneratingFilter(); @AT@ 7374 @LENGTH@ 47
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter() @AT@ 7374 @LENGTH@ 6
---------INS ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[] @TO@ VariableDeclarationFragment@@filter=new DefaultLoginPageGeneratingFilter() @AT@ 7383 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[] @AT@ 7383 @LENGTH@ 3
------------INS SimpleType@@DefaultLoginPageGeneratingFilter @TO@ ClassInstanceCreation@@DefaultLoginPageGeneratingFilter[] @AT@ 7387 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:filter.setLoginPageUrl(DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL) @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7425 @LENGTH@ 80
------INS MethodInvocation@@filter.setLoginPageUrl(DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL) @TO@ ExpressionStatement@@MethodInvocation:filter.setLoginPageUrl(DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL) @AT@ 7425 @LENGTH@ 79
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setLoginPageUrl(DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL) @AT@ 7425 @LENGTH@ 6
---------INS SimpleName@@MethodName:setLoginPageUrl:[DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL] @TO@ MethodInvocation@@filter.setLoginPageUrl(DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL) @AT@ 7432 @LENGTH@ 72
------------INS QualifiedName@@DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL @TO@ SimpleName@@MethodName:setLoginPageUrl:[DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL] @AT@ 7448 @LENGTH@ 55
---------------INS SimpleName@@DefaultLoginPageGeneratingFilter @TO@ QualifiedName@@DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL @AT@ 7448 @LENGTH@ 32
---------------INS SimpleName@@DEFAULT_LOGIN_PAGE_URL @TO@ QualifiedName@@DefaultLoginPageGeneratingFilter.DEFAULT_LOGIN_PAGE_URL @AT@ 7481 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:filter.setOauth2LoginEnabled(true) @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7508 @LENGTH@ 35
------INS MethodInvocation@@filter.setOauth2LoginEnabled(true) @TO@ ExpressionStatement@@MethodInvocation:filter.setOauth2LoginEnabled(true) @AT@ 7508 @LENGTH@ 34
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setOauth2LoginEnabled(true) @AT@ 7508 @LENGTH@ 6
---------INS SimpleName@@MethodName:setOauth2LoginEnabled:[true] @TO@ MethodInvocation@@filter.setOauth2LoginEnabled(true) @AT@ 7515 @LENGTH@ 27
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setOauth2LoginEnabled:[true] @AT@ 7537 @LENGTH@ 4
---INS VariableDeclarationStatement@@String clientName="Google < > \" \' &"; @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7547 @LENGTH@ 41
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String clientName="Google < > \" \' &"; @AT@ 7547 @LENGTH@ 6
------INS VariableDeclarationFragment@@clientName="Google < > \" \' &" @TO@ VariableDeclarationStatement@@String clientName="Google < > \" \' &"; @AT@ 7554 @LENGTH@ 33
---------INS SimpleName@@clientName @TO@ VariableDeclarationFragment@@clientName="Google < > \" \' &" @AT@ 7554 @LENGTH@ 10
---------INS StringLiteral@@"Google < > \" \' &" @TO@ VariableDeclarationFragment@@clientName="Google < > \" \' &" @AT@ 7567 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:filter.setOauth2AuthenticationUrlToClientName(Collections.singletonMap("/oauth2/authorization/google",clientName)) @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7591 @LENGTH@ 120
------INS MethodInvocation@@filter.setOauth2AuthenticationUrlToClientName(Collections.singletonMap("/oauth2/authorization/google",clientName)) @TO@ ExpressionStatement@@MethodInvocation:filter.setOauth2AuthenticationUrlToClientName(Collections.singletonMap("/oauth2/authorization/google",clientName)) @AT@ 7591 @LENGTH@ 119
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.setOauth2AuthenticationUrlToClientName(Collections.singletonMap("/oauth2/authorization/google",clientName)) @AT@ 7591 @LENGTH@ 6
---------INS SimpleName@@MethodName:setOauth2AuthenticationUrlToClientName:[Collections.singletonMap("/oauth2/authorization/google",clientName)] @TO@ MethodInvocation@@filter.setOauth2AuthenticationUrlToClientName(Collections.singletonMap("/oauth2/authorization/google",clientName)) @AT@ 7598 @LENGTH@ 112
------------INS MethodInvocation@@Collections.singletonMap("/oauth2/authorization/google",clientName) @TO@ SimpleName@@MethodName:setOauth2AuthenticationUrlToClientName:[Collections.singletonMap("/oauth2/authorization/google",clientName)] @AT@ 7641 @LENGTH@ 68
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("/oauth2/authorization/google",clientName) @AT@ 7641 @LENGTH@ 11
---------------INS SimpleName@@MethodName:singletonMap:["/oauth2/authorization/google", clientName] @TO@ MethodInvocation@@Collections.singletonMap("/oauth2/authorization/google",clientName) @AT@ 7653 @LENGTH@ 56
------------------INS StringLiteral@@"/oauth2/authorization/google" @TO@ SimpleName@@MethodName:singletonMap:["/oauth2/authorization/google", clientName] @AT@ 7666 @LENGTH@ 30
------------------INS SimpleName@@clientName @TO@ SimpleName@@MethodName:singletonMap:["/oauth2/authorization/google", clientName] @AT@ 7698 @LENGTH@ 10
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7715 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 7715 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 7739 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 7739 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 7750 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 7750 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 7754 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(new MockHttpServletRequest("GET","/login"),response,chain) @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7783 @LENGTH@ 78
------INS MethodInvocation@@filter.doFilter(new MockHttpServletRequest("GET","/login"),response,chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(new MockHttpServletRequest("GET","/login"),response,chain) @AT@ 7783 @LENGTH@ 77
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(new MockHttpServletRequest("GET","/login"),response,chain) @AT@ 7783 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[new MockHttpServletRequest("GET","/login"), response, chain] @TO@ MethodInvocation@@filter.doFilter(new MockHttpServletRequest("GET","/login"),response,chain) @AT@ 7790 @LENGTH@ 70
------------INS ClassInstanceCreation@@MockHttpServletRequest["GET", "/login"] @TO@ SimpleName@@MethodName:doFilter:[new MockHttpServletRequest("GET","/login"), response, chain] @AT@ 7799 @LENGTH@ 43
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/login"] @AT@ 7799 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/login"] @AT@ 7803 @LENGTH@ 22
---------------INS StringLiteral@@"GET" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/login"] @AT@ 7826 @LENGTH@ 5
---------------INS StringLiteral@@"/login" @TO@ ClassInstanceCreation@@MockHttpServletRequest["GET", "/login"] @AT@ 7833 @LENGTH@ 8
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:doFilter:[new MockHttpServletRequest("GET","/login"), response, chain] @AT@ 7844 @LENGTH@ 8
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[new MockHttpServletRequest("GET","/login"), response, chain] @AT@ 7854 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(response.getContentAsString()).contains("<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>") @TO@ MethodDeclaration@@public, void, MethodName:generatesForOAuth2LoginAndEscapesClientName, Exception,  @AT@ 7865 @LENGTH@ 135
------INS MethodInvocation@@assertThat(response.getContentAsString()).contains("<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>") @TO@ ExpressionStatement@@MethodInvocation:assertThat(response.getContentAsString()).contains("<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>") @AT@ 7865 @LENGTH@ 134
---------INS MethodInvocation@@MethodName:assertThat:[response.getContentAsString()] @TO@ MethodInvocation@@assertThat(response.getContentAsString()).contains("<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>") @AT@ 7865 @LENGTH@ 41
------------INS MethodInvocation@@response.getContentAsString() @TO@ MethodInvocation@@MethodName:assertThat:[response.getContentAsString()] @AT@ 7876 @LENGTH@ 29
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 7876 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 7885 @LENGTH@ 20
---------INS SimpleName@@MethodName:contains:["<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>"] @TO@ MethodInvocation@@assertThat(response.getContentAsString()).contains("<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>") @AT@ 7907 @LENGTH@ 92
------------INS StringLiteral@@"<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>" @TO@ SimpleName@@MethodName:contains:["<a href=\"/oauth2/authorization/google\">Google &lt; &gt; &quot; &#39; &amp;</a>"] @AT@ 7916 @LENGTH@ 82


UPD IfStatement@@if (c < '\u0021' || '\u007e' < c) {  return false;} @TO@ if (c < '\u0020' || c > '\u007e') {  return false;} @AT@ 11392 @LENGTH@ 58
---UPD InfixExpression@@c < '\u0021' || '\u007e' < c @TO@ c < '\u0020' || c > '\u007e' @AT@ 11396 @LENGTH@ 28
------UPD InfixExpression@@c < '\u0021' @TO@ c < '\u0020' @AT@ 11396 @LENGTH@ 12
---------UPD CharacterLiteral@@'\u0021' @TO@ '\u0020' @AT@ 11400 @LENGTH@ 8
------UPD InfixExpression@@'\u007e' < c @TO@ c > '\u007e' @AT@ 11412 @LENGTH@ 12
---------INS SimpleName@@c @TO@ InfixExpression@@'\u007e' < c @AT@ 11412 @LENGTH@ 1
---------INS Operator@@> @TO@ InfixExpression@@'\u007e' < c @AT@ 11413 @LENGTH@ 1
---------DEL Operator@@< @AT@ 11420 @LENGTH@ 1
---------DEL SimpleName@@c @AT@ 11423 @LENGTH@ 1


DEL VariableDeclarationStatement@@Response ok=Response.ok().build(); @AT@ 2190 @LENGTH@ 36
---DEL SimpleType@@Response @AT@ 2190 @LENGTH@ 8
---DEL VariableDeclarationFragment@@ok=Response.ok().build() @AT@ 2199 @LENGTH@ 26
------DEL SimpleName@@ok @AT@ 2199 @LENGTH@ 2
------DEL MethodInvocation@@Response.ok().build() @AT@ 2204 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:ok:[] @AT@ 2204 @LENGTH@ 13
---------DEL SimpleName@@Name:Response @AT@ 2204 @LENGTH@ 8
---------DEL SimpleName@@MethodName:build:[] @AT@ 2218 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:writeCollectionInternal((Collection<?>)obj,ClassTypeInformation.LIST,(BasicDBList)bson) @TO@ MethodInvocation:writeCollectionInternal((Collection<?>)obj,ClassTypeInformation.LIST,(Collection)bson) @AT@ 16806 @LENGTH@ 92
---UPD MethodInvocation@@writeCollectionInternal((Collection<?>)obj,ClassTypeInformation.LIST,(BasicDBList)bson) @TO@ writeCollectionInternal((Collection<?>)obj,ClassTypeInformation.LIST,(Collection)bson) @AT@ 16806 @LENGTH@ 91
------UPD SimpleName@@MethodName:writeCollectionInternal:[(Collection<?>)obj, ClassTypeInformation.LIST, (BasicDBList)bson] @TO@ MethodName:writeCollectionInternal:[(Collection<?>)obj, ClassTypeInformation.LIST, (Collection)bson] @AT@ 16806 @LENGTH@ 91
---------UPD CastExpression@@(BasicDBList)bson @TO@ (Collection)bson @AT@ 16878 @LENGTH@ 18
------------UPD SimpleType@@BasicDBList @TO@ Collection @AT@ 16879 @LENGTH@ 11


MOV ExpressionStatement@@MethodInvocation:setAuthenticated(true) @TO@ MethodDeclaration@@public, voidMethodName:TestingAuthenticationToken, Object principal, Object credentials, List<GrantedAuthority> authorities,  @AT@ 1870 @LENGTH@ 23


DEL MethodDeclaration@@public, ExpressionNode, MethodName:getDefinition,  @AT@ 1608 @LENGTH@ 100
---DEL Modifier@@public @AT@ 1608 @LENGTH@ 6
---DEL SimpleType@@ExpressionNode @AT@ 1615 @LENGTH@ 14
---DEL SimpleName@@MethodName:getDefinition @AT@ 1630 @LENGTH@ 13
---DEL ReturnStatement@@CastExpression:(ExpressionNode)super.getDefinition() @AT@ 1656 @LENGTH@ 46
------DEL CastExpression@@(ExpressionNode)super.getDefinition() @AT@ 1663 @LENGTH@ 38
---------DEL SimpleType@@ExpressionNode @AT@ 1664 @LENGTH@ 14
---------DEL SuperMethodInvocation@@super.getDefinition() @AT@ 1680 @LENGTH@ 21
------------DEL SimpleName@@MethodName:getDefinition:[] @AT@ 1686 @LENGTH@ 13


INS IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @TO@ MethodDeclaration@@private, void, MethodName:drop_database_core, RawStore ms, String catName, final String name, final boolean deleteData, final boolean cascade, NoSuchObjectException, InvalidOperationException, MetaException, IOException, InvalidObjectException, InvalidInputException,  @AT@ 53198 @LENGTH@ 93
---INS InfixExpression@@name == null @TO@ IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @AT@ 53202 @LENGTH@ 12
------INS SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 53202 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@name == null @AT@ 53206 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 53210 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MetaException("Database name cannot be null.");} @TO@ IfStatement@@if (name == null) {  throw new MetaException("Database name cannot be null.");} @AT@ 53216 @LENGTH@ 75
------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Database name cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Database name cannot be null.");} @AT@ 53226 @LENGTH@ 57
---------INS ClassInstanceCreation@@MetaException["Database name cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Database name cannot be null.") @AT@ 53232 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 53232 @LENGTH@ 3
------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 53236 @LENGTH@ 13
------------INS StringLiteral@@"Database name cannot be null." @TO@ ClassInstanceCreation@@MetaException["Database name cannot be null."] @AT@ 53250 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @TO@ TypeDeclaration@@[public]AggregationUnitTests,  @AT@ 20525 @LENGTH@ 661
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 20525 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 20532 @LENGTH@ 4
---INS SimpleName@@MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 20537 @LENGTH@ 59
---INS VariableDeclarationStatement@@Document condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))); @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 20604 @LENGTH@ 204
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))); @AT@ 20604 @LENGTH@ 8
------INS VariableDeclarationFragment@@condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))) @TO@ VariableDeclarationStatement@@Document condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))); @AT@ 20613 @LENGTH@ 194
---------INS SimpleName@@condition @TO@ VariableDeclarationFragment@@condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))) @AT@ 20613 @LENGTH@ 9
---------INS ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))] @TO@ VariableDeclarationFragment@@condition=new Document("$and",Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))) @AT@ 20625 @LENGTH@ 182
------------INS New@@new @TO@ ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))] @AT@ 20625 @LENGTH@ 3
------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))] @AT@ 20629 @LENGTH@ 8
------------INS StringLiteral@@"$and" @TO@ ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))] @AT@ 20638 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))) @TO@ ClassInstanceCreation@@Document["$and", Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29")))] @AT@ 20650 @LENGTH@ 156
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))) @AT@ 20650 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")), new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))] @TO@ MethodInvocation@@Arrays.asList(new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")),new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))) @AT@ 20657 @LENGTH@ 149
------------------INS ClassInstanceCreation@@Document["$gte", Arrays.asList("$$est.dt","2015-12-29")] @TO@ SimpleName@@MethodName:asList:[new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")), new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))] @AT@ 20664 @LENGTH@ 61
---------------------INS New@@new @TO@ ClassInstanceCreation@@Document["$gte", Arrays.asList("$$est.dt","2015-12-29")] @AT@ 20664 @LENGTH@ 3
---------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["$gte", Arrays.asList("$$est.dt","2015-12-29")] @AT@ 20668 @LENGTH@ 8
---------------------INS StringLiteral@@"$gte" @TO@ ClassInstanceCreation@@Document["$gte", Arrays.asList("$$est.dt","2015-12-29")] @AT@ 20677 @LENGTH@ 6
---------------------INS MethodInvocation@@Arrays.asList("$$est.dt","2015-12-29") @TO@ ClassInstanceCreation@@Document["$gte", Arrays.asList("$$est.dt","2015-12-29")] @AT@ 20685 @LENGTH@ 39
------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("$$est.dt","2015-12-29") @AT@ 20685 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:asList:["$$est.dt", "2015-12-29"] @TO@ MethodInvocation@@Arrays.asList("$$est.dt","2015-12-29") @AT@ 20692 @LENGTH@ 32
---------------------------INS StringLiteral@@"$$est.dt" @TO@ SimpleName@@MethodName:asList:["$$est.dt", "2015-12-29"] @AT@ 20699 @LENGTH@ 10
---------------------------INS StringLiteral@@"2015-12-29" @TO@ SimpleName@@MethodName:asList:["$$est.dt", "2015-12-29"] @AT@ 20711 @LENGTH@ 12
------------------INS ClassInstanceCreation@@Document["$lte", Arrays.asList("$$est.dt","2017-12-29")] @TO@ SimpleName@@MethodName:asList:[new Document("$gte",Arrays.asList("$$est.dt","2015-12-29")), new Document("$lte",Arrays.asList("$$est.dt","2017-12-29"))] @AT@ 20736 @LENGTH@ 61
---------------------INS New@@new @TO@ ClassInstanceCreation@@Document["$lte", Arrays.asList("$$est.dt","2017-12-29")] @AT@ 20736 @LENGTH@ 3
---------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["$lte", Arrays.asList("$$est.dt","2017-12-29")] @AT@ 20740 @LENGTH@ 8
---------------------INS StringLiteral@@"$lte" @TO@ ClassInstanceCreation@@Document["$lte", Arrays.asList("$$est.dt","2017-12-29")] @AT@ 20749 @LENGTH@ 6
---------------------INS MethodInvocation@@Arrays.asList("$$est.dt","2017-12-29") @TO@ ClassInstanceCreation@@Document["$lte", Arrays.asList("$$est.dt","2017-12-29")] @AT@ 20757 @LENGTH@ 39
------------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("$$est.dt","2017-12-29") @AT@ 20757 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:asList:["$$est.dt", "2017-12-29"] @TO@ MethodInvocation@@Arrays.asList("$$est.dt","2017-12-29") @AT@ 20764 @LENGTH@ 32
---------------------------INS StringLiteral@@"$$est.dt" @TO@ SimpleName@@MethodName:asList:["$$est.dt", "2017-12-29"] @AT@ 20771 @LENGTH@ 10
---------------------------INS StringLiteral@@"2017-12-29" @TO@ SimpleName@@MethodName:asList:["$$est.dt", "2017-12-29"] @AT@ 20783 @LENGTH@ 12
---INS VariableDeclarationStatement@@Aggregation agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")); @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 20812 @LENGTH@ 184
------INS SimpleType@@Aggregation @TO@ VariableDeclarationStatement@@Aggregation agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")); @AT@ 20812 @LENGTH@ 11
------INS VariableDeclarationFragment@@agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")) @TO@ VariableDeclarationStatement@@Aggregation agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")); @AT@ 20824 @LENGTH@ 171
---------INS SimpleName@@agg @TO@ VariableDeclarationFragment@@agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")) @AT@ 20824 @LENGTH@ 3
---------INS MethodInvocation@@newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")) @TO@ VariableDeclarationFragment@@agg=newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")) @AT@ 20830 @LENGTH@ 165
------------INS SimpleName@@MethodName:newAggregation:[project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")] @TO@ MethodInvocation@@newAggregation(project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")) @AT@ 20830 @LENGTH@ 165
---------------INS MethodInvocation@@project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests") @TO@ SimpleName@@MethodName:newAggregation:[project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests")] @AT@ 20845 @LENGTH@ 149
------------------INS MethodInvocation@@MethodName:and:[ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)] @TO@ MethodInvocation@@project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests") @AT@ 20845 @LENGTH@ 133
---------------------INS MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @TO@ MethodInvocation@@MethodName:and:[ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)] @AT@ 20909 @LENGTH@ 68
------------------------INS MethodInvocation@@MethodName:as:["est"] @TO@ MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @AT@ 20909 @LENGTH@ 54
---------------------------INS StringLiteral@@"est" @TO@ MethodInvocation@@MethodName:as:["est"] @AT@ 20957 @LENGTH@ 5
------------------------INS MethodInvocation@@MethodName:filter:[] @TO@ MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @AT@ 20909 @LENGTH@ 44
------------------------INS MethodInvocation@@MethodName:arrayOf:["plts.ests"] @TO@ MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @AT@ 20909 @LENGTH@ 35
---------------------------INS StringLiteral@@"plts.ests" @TO@ MethodInvocation@@MethodName:arrayOf:["plts.ests"] @AT@ 20932 @LENGTH@ 11
------------------------INS SimpleName@@Name:ArrayOperators @TO@ MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @AT@ 20909 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:by:[condition] @TO@ MethodInvocation@@ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition) @AT@ 20964 @LENGTH@ 13
---------------------------INS SimpleName@@condition @TO@ SimpleName@@MethodName:by:[condition] @AT@ 20967 @LENGTH@ 9
------------------INS MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @TO@ MethodInvocation@@project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests") @AT@ 20845 @LENGTH@ 54
---------------------INS StringLiteral@@"_id" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20853 @LENGTH@ 5
---------------------INS StringLiteral@@"dId" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20860 @LENGTH@ 5
---------------------INS StringLiteral@@"aId" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20867 @LENGTH@ 5
---------------------INS StringLiteral@@"cty" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20874 @LENGTH@ 5
---------------------INS StringLiteral@@"cat" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20881 @LENGTH@ 5
---------------------INS StringLiteral@@"plts.plt" @TO@ MethodInvocation@@MethodName:project:["_id", "dId", "aId", "cty", "cat", "plts.plt"] @AT@ 20888 @LENGTH@ 10
------------------INS SimpleName@@MethodName:as:["plts.ests"] @TO@ MethodInvocation@@project("_id","dId","aId","cty","cat","plts.plt").and(ArrayOperators.arrayOf("plts.ests").filter().as("est").by(condition)).as("plts.ests") @AT@ 20979 @LENGTH@ 15
---------------------INS StringLiteral@@"plts.ests" @TO@ SimpleName@@MethodName:as:["plts.ests"] @AT@ 20982 @LENGTH@ 11
---INS VariableDeclarationStatement@@Document $project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project"); @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 21000 @LENGTH@ 123
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document $project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project"); @AT@ 21000 @LENGTH@ 8
------INS VariableDeclarationFragment@@$project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project") @TO@ VariableDeclarationStatement@@Document $project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project"); @AT@ 21009 @LENGTH@ 113
---------INS SimpleName@@$project @TO@ VariableDeclarationFragment@@$project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project") @AT@ 21009 @LENGTH@ 8
---------INS MethodInvocation@@extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project") @TO@ VariableDeclarationFragment@@$project=extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project") @AT@ 21020 @LENGTH@ 102
------------INS SimpleName@@MethodName:extractPipelineElement:[agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT), 0, "$project"] @TO@ MethodInvocation@@extractPipelineElement(agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT),0,"$project") @AT@ 21020 @LENGTH@ 102
---------------INS MethodInvocation@@agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT) @TO@ SimpleName@@MethodName:extractPipelineElement:[agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT), 0, "$project"] @AT@ 21043 @LENGTH@ 59
------------------INS SimpleName@@Name:agg @TO@ MethodInvocation@@agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT) @AT@ 21043 @LENGTH@ 3
------------------INS SimpleName@@MethodName:toDocument:["collection-1", Aggregation.DEFAULT_CONTEXT] @TO@ MethodInvocation@@agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT) @AT@ 21047 @LENGTH@ 55
---------------------INS StringLiteral@@"collection-1" @TO@ SimpleName@@MethodName:toDocument:["collection-1", Aggregation.DEFAULT_CONTEXT] @AT@ 21058 @LENGTH@ 14
---------------------INS QualifiedName@@Aggregation.DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDocument:["collection-1", Aggregation.DEFAULT_CONTEXT] @AT@ 21074 @LENGTH@ 27
------------------------INS SimpleName@@Aggregation @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 21074 @LENGTH@ 11
------------------------INS SimpleName@@DEFAULT_CONTEXT @TO@ QualifiedName@@Aggregation.DEFAULT_CONTEXT @AT@ 21086 @LENGTH@ 15
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:extractPipelineElement:[agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT), 0, "$project"] @AT@ 21104 @LENGTH@ 1
---------------INS StringLiteral@@"$project" @TO@ SimpleName@@MethodName:extractPipelineElement:[agg.toDocument("collection-1",Aggregation.DEFAULT_CONTEXT), 0, "$project"] @AT@ 21111 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat($project.containsKey("plts.ests"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:providedAliasShouldAllowNestingExpressionWithAliasCorrectly,  @AT@ 21127 @LENGTH@ 56
------INS MethodInvocation@@assertThat($project.containsKey("plts.ests"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat($project.containsKey("plts.ests"),is(true)) @AT@ 21127 @LENGTH@ 55
---------INS SimpleName@@MethodName:assertThat:[$project.containsKey("plts.ests"), is(true)] @TO@ MethodInvocation@@assertThat($project.containsKey("plts.ests"),is(true)) @AT@ 21127 @LENGTH@ 55
------------INS MethodInvocation@@$project.containsKey("plts.ests") @TO@ SimpleName@@MethodName:assertThat:[$project.containsKey("plts.ests"), is(true)] @AT@ 21138 @LENGTH@ 33
---------------INS SimpleName@@Name:$project @TO@ MethodInvocation@@$project.containsKey("plts.ests") @AT@ 21138 @LENGTH@ 8
---------------INS SimpleName@@MethodName:containsKey:["plts.ests"] @TO@ MethodInvocation@@$project.containsKey("plts.ests") @AT@ 21147 @LENGTH@ 24
------------------INS StringLiteral@@"plts.ests" @TO@ SimpleName@@MethodName:containsKey:["plts.ests"] @AT@ 21159 @LENGTH@ 11
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[$project.containsKey("plts.ests"), is(true)] @AT@ 21173 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21173 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21176 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:streamCachingStrategy.setSpoolThreshold(1l) @TO@ MethodInvocation:streamCachingStrategy.setSpoolThreshold(1L) @AT@ 2223 @LENGTH@ 44
---UPD MethodInvocation@@streamCachingStrategy.setSpoolThreshold(1l) @TO@ streamCachingStrategy.setSpoolThreshold(1L) @AT@ 2223 @LENGTH@ 43
------UPD SimpleName@@MethodName:setSpoolThreshold:[1l] @TO@ MethodName:setSpoolThreshold:[1L] @AT@ 2245 @LENGTH@ 21
---------UPD NumberLiteral@@1l @TO@ 1L @AT@ 2263 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:sort.stream().map(this::toOrder).forEach(it -> query.orderBy(it)) @TO@ MethodInvocation:sort.stream().map(this::toOrder).forEach(query::orderBy) @AT@ 8438 @LENGTH@ 66
---UPD MethodInvocation@@sort.stream().map(this::toOrder).forEach(it -> query.orderBy(it)) @TO@ sort.stream().map(this::toOrder).forEach(query::orderBy) @AT@ 8438 @LENGTH@ 65
------UPD SimpleName@@MethodName:forEach:[it -> query.orderBy(it)] @TO@ MethodName:forEach:[query::orderBy] @AT@ 8471 @LENGTH@ 32
---------DEL LambdaExpression@@it -> query.orderBy(it) @AT@ 8479 @LENGTH@ 23
------------DEL VariableDeclarationFragment@@it @AT@ 8479 @LENGTH@ 2
---------------DEL SimpleName@@it @AT@ 8479 @LENGTH@ 2
------------DEL MethodInvocation@@query.orderBy(it) @AT@ 8485 @LENGTH@ 17
---------------DEL SimpleName@@Name:query @AT@ 8485 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:orderBy:[it] @AT@ 8491 @LENGTH@ 11
------------------DEL SimpleName@@it @AT@ 8499 @LENGTH@ 2


UPD IfStatement@@if (answer == null) {  answer=camelExchange.getFromEndpoint().getEndpointUri();} @TO@ if (answer == null) {  answer=camelExchange.getFromEndpoint().getEndpointUri();  answer=answer.replaceFirst("^\\w+:http","http");  answer=answer.replaceFirst("^\\w+:https","https");} @AT@ 6648 @LENGTH@ 102
---UPD Block@@ThenBody:{  answer=camelExchange.getFromEndpoint().getEndpointUri();} @TO@ ThenBody:{  answer=camelExchange.getFromEndpoint().getEndpointUri();  answer=answer.replaceFirst("^\\w+:http","http");  answer=answer.replaceFirst("^\\w+:https","https");} @AT@ 6668 @LENGTH@ 82
------INS ExpressionStatement@@Assignment:answer=answer.replaceFirst("^\\w+:http","http") @TO@ Block@@ThenBody:{  answer=camelExchange.getFromEndpoint().getEndpointUri();} @AT@ 6851 @LENGTH@ 51
---------INS Assignment@@answer=answer.replaceFirst("^\\w+:http","http") @TO@ ExpressionStatement@@Assignment:answer=answer.replaceFirst("^\\w+:http","http") @AT@ 6851 @LENGTH@ 50
------------INS SimpleName@@answer @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:http","http") @AT@ 6851 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:http","http") @AT@ 6857 @LENGTH@ 1
------------INS MethodInvocation@@answer.replaceFirst("^\\w+:http","http") @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:http","http") @AT@ 6860 @LENGTH@ 41
---------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.replaceFirst("^\\w+:http","http") @AT@ 6860 @LENGTH@ 6
---------------INS SimpleName@@MethodName:replaceFirst:["^\\w+:http", "http"] @TO@ MethodInvocation@@answer.replaceFirst("^\\w+:http","http") @AT@ 6867 @LENGTH@ 34
------------------INS StringLiteral@@"^\\w+:http" @TO@ SimpleName@@MethodName:replaceFirst:["^\\w+:http", "http"] @AT@ 6880 @LENGTH@ 12
------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:replaceFirst:["^\\w+:http", "http"] @AT@ 6894 @LENGTH@ 6
------INS ExpressionStatement@@Assignment:answer=answer.replaceFirst("^\\w+:https","https") @TO@ Block@@ThenBody:{  answer=camelExchange.getFromEndpoint().getEndpointUri();} @AT@ 6915 @LENGTH@ 53
---------INS Assignment@@answer=answer.replaceFirst("^\\w+:https","https") @TO@ ExpressionStatement@@Assignment:answer=answer.replaceFirst("^\\w+:https","https") @AT@ 6915 @LENGTH@ 52
------------INS SimpleName@@answer @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:https","https") @AT@ 6915 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:https","https") @AT@ 6921 @LENGTH@ 1
------------INS MethodInvocation@@answer.replaceFirst("^\\w+:https","https") @TO@ Assignment@@answer=answer.replaceFirst("^\\w+:https","https") @AT@ 6924 @LENGTH@ 43
---------------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.replaceFirst("^\\w+:https","https") @AT@ 6924 @LENGTH@ 6
---------------INS SimpleName@@MethodName:replaceFirst:["^\\w+:https", "https"] @TO@ MethodInvocation@@answer.replaceFirst("^\\w+:https","https") @AT@ 6931 @LENGTH@ 36
------------------INS StringLiteral@@"^\\w+:https" @TO@ SimpleName@@MethodName:replaceFirst:["^\\w+:https", "https"] @AT@ 6944 @LENGTH@ 13
------------------INS StringLiteral@@"https" @TO@ SimpleName@@MethodName:replaceFirst:["^\\w+:https", "https"] @AT@ 6959 @LENGTH@ 7


UPD MethodDeclaration@@KafkaManualCommit, MethodName:newInstance, Exchange exchange, KafkaConsumer consumer, String topicName, String threadId, StateRepository<String,String> offsetRepository, TopicPartition partition, long partitionLastOffset,  @TO@ KafkaManualCommit, MethodName:newInstance, Exchange exchange, KafkaConsumer consumer, String topicName, String threadId, StateRepository<String,String> offsetRepository, TopicPartition partition, long recordOffset,  @AT@ 1238 @LENGTH@ 226
---UPD SingleVariableDeclaration@@long partitionLastOffset @TO@ long recordOffset @AT@ 1438 @LENGTH@ 24
------UPD SimpleName@@partitionLastOffset @TO@ recordOffset @AT@ 1443 @LENGTH@ 19


UPD ForStatement@@for (int i=0; i < valueList.size(); i++) {  ((BytesColumnVector)lcv.child).setVal(i,((List<byte[]>)valueList).get(i));} @TO@ for (int i=0; i < valueList.size(); i++) {  byte[] src=((List<byte[]>)valueList).get(i);  ((BytesColumnVector)lcv.child).setRef(i,src,0,src.length);} @AT@ 9289 @LENGTH@ 140
---UPD ExpressionStatement@@MethodInvocation:((BytesColumnVector)lcv.child).setVal(i,((List<byte[]>)valueList).get(i)) @TO@ MethodInvocation:((BytesColumnVector)lcv.child).setRef(i,src,0,src.length) @AT@ 9344 @LENGTH@ 75
------UPD MethodInvocation@@((BytesColumnVector)lcv.child).setVal(i,((List<byte[]>)valueList).get(i)) @TO@ ((BytesColumnVector)lcv.child).setRef(i,src,0,src.length) @AT@ 9344 @LENGTH@ 74
---------UPD SimpleName@@MethodName:setVal:[i, ((List<byte[]>)valueList).get(i)] @TO@ MethodName:setRef:[i, src, 0, src.length] @AT@ 9375 @LENGTH@ 43
------------INS SimpleName@@src @TO@ SimpleName@@MethodName:setVal:[i, ((List<byte[]>)valueList).get(i)] @AT@ 9442 @LENGTH@ 3
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setVal:[i, ((List<byte[]>)valueList).get(i)] @AT@ 9447 @LENGTH@ 1
------------INS QualifiedName@@src.length @TO@ SimpleName@@MethodName:setVal:[i, ((List<byte[]>)valueList).get(i)] @AT@ 9450 @LENGTH@ 10
---------------INS SimpleName@@src @TO@ QualifiedName@@src.length @AT@ 9450 @LENGTH@ 3
---------------INS SimpleName@@length @TO@ QualifiedName@@src.length @AT@ 9454 @LENGTH@ 6
---INS VariableDeclarationStatement@@byte[] src=((List<byte[]>)valueList).get(i); @TO@ ForStatement@@for (int i=0; i < valueList.size(); i++) {  ((BytesColumnVector)lcv.child).setVal(i,((List<byte[]>)valueList).get(i));} @AT@ 9344 @LENGTH@ 46
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] src=((List<byte[]>)valueList).get(i); @AT@ 9344 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 9344 @LENGTH@ 4
------INS VariableDeclarationFragment@@src=((List<byte[]>)valueList).get(i) @TO@ VariableDeclarationStatement@@byte[] src=((List<byte[]>)valueList).get(i); @AT@ 9351 @LENGTH@ 38
---------INS SimpleName@@src @TO@ VariableDeclarationFragment@@src=((List<byte[]>)valueList).get(i) @AT@ 9351 @LENGTH@ 3
---------MOV MethodInvocation@@((List<byte[]>)valueList).get(i) @TO@ VariableDeclarationFragment@@src=((List<byte[]>)valueList).get(i) @AT@ 9385 @LENGTH@ 32


INS IfStatement@@if (this.correlationId == null) {  if (other.correlationId != null) {    return false;  }} else if (!this.correlationId.equals(other.correlationId)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object obj,  @AT@ 15000 @LENGTH@ 181
---INS InfixExpression@@this.correlationId == null @TO@ IfStatement@@if (this.correlationId == null) {  if (other.correlationId != null) {    return false;  }} else if (!this.correlationId.equals(other.correlationId)) {  return false;} @AT@ 15004 @LENGTH@ 26
------INS FieldAccess@@this.correlationId @TO@ InfixExpression@@this.correlationId == null @AT@ 15004 @LENGTH@ 18
---------INS ThisExpression@@this @TO@ FieldAccess@@this.correlationId @AT@ 15004 @LENGTH@ 4
---------INS SimpleName@@correlationId @TO@ FieldAccess@@this.correlationId @AT@ 15009 @LENGTH@ 13
------INS Operator@@== @TO@ InfixExpression@@this.correlationId == null @AT@ 15022 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.correlationId == null @AT@ 15026 @LENGTH@ 4
---INS Block@@ThenBody:{  if (other.correlationId != null) {    return false;  }} @TO@ IfStatement@@if (this.correlationId == null) {  if (other.correlationId != null) {    return false;  }} else if (!this.correlationId.equals(other.correlationId)) {  return false;} @AT@ 15032 @LENGTH@ 66
------INS IfStatement@@if (other.correlationId != null) {  return false;} @TO@ Block@@ThenBody:{  if (other.correlationId != null) {    return false;  }} @AT@ 15037 @LENGTH@ 57
---------INS InfixExpression@@other.correlationId != null @TO@ IfStatement@@if (other.correlationId != null) {  return false;} @AT@ 15041 @LENGTH@ 27
------------INS QualifiedName@@other.correlationId @TO@ InfixExpression@@other.correlationId != null @AT@ 15041 @LENGTH@ 19
---------------INS SimpleName@@other @TO@ QualifiedName@@other.correlationId @AT@ 15041 @LENGTH@ 5
---------------INS SimpleName@@correlationId @TO@ QualifiedName@@other.correlationId @AT@ 15047 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@other.correlationId != null @AT@ 15060 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@other.correlationId != null @AT@ 15064 @LENGTH@ 4
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (other.correlationId != null) {  return false;} @AT@ 15070 @LENGTH@ 24
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 15076 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 15083 @LENGTH@ 5
---INS Block@@ElseBody:if (!this.correlationId.equals(other.correlationId)) {  return false;} @TO@ IfStatement@@if (this.correlationId == null) {  if (other.correlationId != null) {    return false;  }} else if (!this.correlationId.equals(other.correlationId)) {  return false;} @AT@ 15106 @LENGTH@ 75
------MOV IfStatement@@if (!this.correlationId.equals(other.correlationId)) {  return false;} @TO@ Block@@ElseBody:if (!this.correlationId.equals(other.correlationId)) {  return false;} @AT@ 14999 @LENGTH@ 75


INS IfStatement@@if (conn == null) {  return null;} @TO@ MethodDeclaration@@protected, Session, MethodName:createSession, JMSException,  @AT@ 17790 @LENGTH@ 44
---INS InfixExpression@@conn == null @TO@ IfStatement@@if (conn == null) {  return null;} @AT@ 17794 @LENGTH@ 12
------INS SimpleName@@conn @TO@ InfixExpression@@conn == null @AT@ 17794 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@conn == null @AT@ 17798 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@conn == null @AT@ 17802 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (conn == null) {  return null;} @AT@ 17808 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 17816 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 17823 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",body) @TO@ MethodInvocation:assertEquals("Bye World",body) @AT@ 1813 @LENGTH@ 34
---UPD MethodInvocation@@assertEquals("Hello World",body) @TO@ assertEquals("Bye World",body) @AT@ 1813 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertEquals:["Hello World", body] @TO@ MethodName:assertEquals:["Bye World", body] @AT@ 1813 @LENGTH@ 33
---------UPD StringLiteral@@"Hello World" @TO@ "Bye World" @AT@ 1826 @LENGTH@ 13


DEL VariableDeclarationStatement@@Response ok=Response.ok().build(); @AT@ 2576 @LENGTH@ 36
---DEL SimpleType@@Response @AT@ 2576 @LENGTH@ 8
---DEL VariableDeclarationFragment@@ok=Response.ok().build() @AT@ 2585 @LENGTH@ 26
------DEL SimpleName@@ok @AT@ 2585 @LENGTH@ 2
------DEL MethodInvocation@@Response.ok().build() @AT@ 2590 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:ok:[] @AT@ 2590 @LENGTH@ 13
---------DEL SimpleName@@Name:Response @AT@ 2590 @LENGTH@ 8
---------DEL SimpleName@@MethodName:build:[] @AT@ 2604 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:this.persistentEntity=Optional.ofNullable(persistentEntity).orElseThrow(() -> newIllegalArgumentException("GemfirePeristentEntity is required")) @TO@ Assignment:this.persistentEntity=persistentEntity @AT@ 27468 @LENGTH@ 152
---UPD Assignment@@this.persistentEntity=Optional.ofNullable(persistentEntity).orElseThrow(() -> newIllegalArgumentException("GemfirePeristentEntity is required")) @TO@ this.persistentEntity=persistentEntity @AT@ 27468 @LENGTH@ 151
------DEL MethodInvocation@@Optional.ofNullable(persistentEntity).orElseThrow(() -> newIllegalArgumentException("GemfirePeristentEntity is required")) @AT@ 27492 @LENGTH@ 127
---------DEL MethodInvocation@@MethodName:ofNullable:[persistentEntity] @AT@ 27492 @LENGTH@ 37
------------DEL SimpleName@@persistentEntity @AT@ 27512 @LENGTH@ 16
---------DEL SimpleName@@Name:Optional @AT@ 27492 @LENGTH@ 8
---------DEL SimpleName@@MethodName:orElseThrow:[() -> newIllegalArgumentException("GemfirePeristentEntity is required")] @AT@ 27535 @LENGTH@ 84
------------DEL LambdaExpression@@() -> newIllegalArgumentException("GemfirePeristentEntity is required") @AT@ 27547 @LENGTH@ 71
---------------DEL MethodInvocation@@newIllegalArgumentException("GemfirePeristentEntity is required") @AT@ 27553 @LENGTH@ 65
------------------DEL SimpleName@@MethodName:newIllegalArgumentException:["GemfirePeristentEntity is required"] @AT@ 27553 @LENGTH@ 65
---------------------DEL StringLiteral@@"GemfirePeristentEntity is required" @AT@ 27581 @LENGTH@ 36
------INS SimpleName@@persistentEntity @TO@ Assignment@@this.persistentEntity=Optional.ofNullable(persistentEntity).orElseThrow(() -> newIllegalArgumentException("GemfirePeristentEntity is required")) @AT@ 27568 @LENGTH@ 16


UPD TypeDeclaration@@[public]FlowFacesContextLifecycleListener, FlowExecutionListenerAdapter @TO@ [public]FlowFacesContextLifecycleListener, [FlowExecutionListener] @AT@ 1128 @LENGTH@ 1229
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 1183 @LENGTH@ 28


UPD ReturnStatement@@SimpleName:authenticationManager @TO@ FieldAccess:this.authenticationManager @AT@ 7918 @LENGTH@ 29
---INS FieldAccess@@this.authenticationManager @TO@ ReturnStatement@@SimpleName:authenticationManager @AT@ 7891 @LENGTH@ 26
------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationManager @AT@ 7891 @LENGTH@ 4
------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.authenticationManager @AT@ 7896 @LENGTH@ 21
---DEL SimpleName@@authenticationManager @AT@ 7925 @LENGTH@ 21


UPD TryStatement@@try {  Configuration cfg=new Configuration(new Version(2,3,23));  cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);  if (checkTemplates(getTemplatesLocation(),templateName)) {    cfg.setDirectoryForTemplateLoading(new File(getTemplatesLocation()));  } else {    cfg.setClassForTemplateLoading(getResourceLoaderClass(),"templates");  }  Map<String,Object> input=new HashMap<String,Object>();  input.put("projectName",ctx.getProjectName());  input.put("description",ctx.getDescription());  input.put("version",ctx.getVersion());  input.put("controllerPath",ctx.getControllerPath());  input.put("entityName",ctx.getEntityName());  if (ctx.getEntityName() != null) {    input.put("entityLabel",FieldItem.buildLabel(ctx.getEntityName(),""));    input.put("entityLabelPlural",FieldItem.buildLabel(ctx.getEntityName(),"plural"));    input.put("z",new FieldItem("",ctx.getEntityName()).getZ());  }  input.put("identifierField",ctx.getIdentifierField());  input.put("modelAttribute",String.format("${%s}",ctx.getModelAttribute()));  input.put("modelAttributeName",ctx.getModelAttributeName());  input.put("isSecurityEnabled",ctx.isSecurityEnabled());  for (  Entry<String,Object> extraInformation : ctx.getExtraInformation().entrySet()) {    input.put(extraInformation.getKey(),extraInformation.getValue());  }  Template template=cfg.getTemplate(templateName.concat(".ftl"));  StringBuilderWriter writer=new StringBuilderWriter();  template.process(input,writer);  writer.close();  content=writer.toString();  if (StringUtils.isBlank(content)) {    throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'",templateName));  }  return parse(content);} catch (Exception e) {  throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName),e);} @TO@ try {  Configuration cfg=new Configuration(new Version(2,3,23));  cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);  if (checkTemplates(getTemplatesLocation(),templateName)) {    cfg.setDirectoryForTemplateLoading(new File(getTemplatesLocation()));  } else {    cfg.setClassForTemplateLoading(getResourceLoaderClass(),"templates");  }  input=new HashMap<String,Object>();  input.put("projectName",ctx.getProjectName());  input.put("description",ctx.getDescription());  input.put("version",ctx.getVersion());  input.put("controllerPath",ctx.getControllerPath());  input.put("entityName",ctx.getEntityName());  if (ctx.getEntityName() != null) {    input.put("entityLabel",FieldItem.buildLabel(ctx.getEntityName(),""));    input.put("entityLabelPlural",FieldItem.buildLabel(ctx.getEntityName(),"plural"));    input.put("z",new FieldItem("",ctx.getEntityName()).getZ());  }  input.put("identifierField",ctx.getIdentifierField());  input.put("modelAttribute",String.format("${%s}",ctx.getModelAttribute()));  input.put("modelAttributeName",ctx.getModelAttributeName());  input.put("isSecurityEnabled",ctx.isSecurityEnabled());  for (  Entry<String,Object> extraInformation : ctx.getExtraInformation().entrySet()) {    input.put(extraInformation.getKey(),extraInformation.getValue());  }  Template template=cfg.getTemplate(templateName.concat(".ftl"));  StringBuilderWriter writer=new StringBuilderWriter();  template.process(input,writer);  writer.close();  content=writer.toString();  if (StringUtils.isBlank(content)) {    throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'",templateName));  }  return parse(content);} catch (Exception e) {  throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s",templateName,input),e);} @AT@ 1780 @LENGTH@ 2842
---DEL VariableDeclarationStatement@@Map<String,Object> input=new HashMap<String,Object>(); @AT@ 2450 @LENGTH@ 58
------DEL ParameterizedType@@Map<String,Object> @AT@ 2450 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 2450 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 2454 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 2462 @LENGTH@ 6
------DEL VariableDeclarationFragment@@input=new HashMap<String,Object>() @AT@ 2470 @LENGTH@ 37
---------DEL SimpleName@@input @AT@ 2470 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:input=new HashMap<String,Object>() @TO@ TryStatement@@try {  Configuration cfg=new Configuration(new Version(2,3,23));  cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);  if (checkTemplates(getTemplatesLocation(),templateName)) {    cfg.setDirectoryForTemplateLoading(new File(getTemplatesLocation()));  } else {    cfg.setClassForTemplateLoading(getResourceLoaderClass(),"templates");  }  Map<String,Object> input=new HashMap<String,Object>();  input.put("projectName",ctx.getProjectName());  input.put("description",ctx.getDescription());  input.put("version",ctx.getVersion());  input.put("controllerPath",ctx.getControllerPath());  input.put("entityName",ctx.getEntityName());  if (ctx.getEntityName() != null) {    input.put("entityLabel",FieldItem.buildLabel(ctx.getEntityName(),""));    input.put("entityLabelPlural",FieldItem.buildLabel(ctx.getEntityName(),"plural"));    input.put("z",new FieldItem("",ctx.getEntityName()).getZ());  }  input.put("identifierField",ctx.getIdentifierField());  input.put("modelAttribute",String.format("${%s}",ctx.getModelAttribute()));  input.put("modelAttributeName",ctx.getModelAttributeName());  input.put("isSecurityEnabled",ctx.isSecurityEnabled());  for (  Entry<String,Object> extraInformation : ctx.getExtraInformation().entrySet()) {    input.put(extraInformation.getKey(),extraInformation.getValue());  }  Template template=cfg.getTemplate(templateName.concat(".ftl"));  StringBuilderWriter writer=new StringBuilderWriter();  template.process(input,writer);  writer.close();  content=writer.toString();  if (StringUtils.isBlank(content)) {    throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'",templateName));  }  return parse(content);} catch (Exception e) {  throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName),e);} @AT@ 2488 @LENGTH@ 38
------INS Assignment@@input=new HashMap<String,Object>() @TO@ ExpressionStatement@@Assignment:input=new HashMap<String,Object>() @AT@ 2488 @LENGTH@ 37
---------MOV ClassInstanceCreation@@HashMap<String,Object>[] @TO@ Assignment@@input=new HashMap<String,Object>() @AT@ 2478 @LENGTH@ 29
---------INS SimpleName@@input @TO@ Assignment@@input=new HashMap<String,Object>() @AT@ 2488 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@input=new HashMap<String,Object>() @AT@ 2493 @LENGTH@ 1
---UPD CatchClause@@catch (Exception e) {  throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName),e);} @TO@ catch (Exception e) {  throw new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s",templateName,input),e);} @AT@ 4370 @LENGTH@ 252
------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName),e) @TO@ ClassInstanceCreation:new RuntimeException(String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s",templateName,input),e) @AT@ 4398 @LENGTH@ 218
---------UPD ClassInstanceCreation@@RuntimeException[String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName), e] @TO@ RuntimeException[String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s",templateName,input), e] @AT@ 4404 @LENGTH@ 211
------------UPD MethodInvocation@@String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file",templateName) @TO@ String.format("ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s",templateName,input) @AT@ 4436 @LENGTH@ 175
---------------UPD SimpleName@@MethodName:format:["ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file", templateName] @TO@ MethodName:format:["ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s", templateName, input] @AT@ 4443 @LENGTH@ 168
------------------UPD StringLiteral@@"ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file" @TO@ "ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file.\nContext:\n%s" @AT@ 4465 @LENGTH@ 117
------------------INS SimpleName@@input @TO@ SimpleName@@MethodName:format:["ERROR: Error trying to generate final content from provided template '%s.ftl'. You should provide a valid .ftl file", templateName] @AT@ 4645 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,savedVarName) @TO@ MethodInvocation:bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,savedVarName,getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()) @AT@ 111697 @LENGTH@ 323
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,savedVarName) @TO@ bodyBuilder.appendFormalLine("%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();",getNameOfJavaType(SpringJavaType.URI_COMPONENTS),getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(),getNameOfJavaType(relatedItemLinkFactory),this.entityItemName,savedVarName,getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()) @AT@ 111697 @LENGTH@ 322
------UPD SimpleName@@MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, savedVarName] @TO@ MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, savedVarName, getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName()] @AT@ 111709 @LENGTH@ 310
---------UPD StringLiteral@@"%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();" @TO@ "%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.%s()).toUri();" @AT@ 111726 @LENGTH@ 65
---------INS MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @TO@ SimpleName@@MethodName:appendFormalLine:["%s showURI = %s().to(%s.SHOW).with(\"%s\", %s.getId()).toUri();", getNameOfJavaType(SpringJavaType.URI_COMPONENTS), getAccessorMethod(this.itemMethodLinkBuilderFactoryField).getMethodName(), getNameOfJavaType(relatedItemLinkFactory), this.entityItemName, savedVarName] @AT@ 112115 @LENGTH@ 83
------------INS MethodInvocation@@MethodName:getAccessorMethod:[this.entityMetadata.getCurrentIndentifierField()] @TO@ MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @AT@ 112115 @LENGTH@ 67
---------------INS MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @TO@ MethodInvocation@@MethodName:getAccessorMethod:[this.entityMetadata.getCurrentIndentifierField()] @AT@ 112133 @LENGTH@ 48
------------------INS FieldAccess@@this.entityMetadata @TO@ MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @AT@ 112133 @LENGTH@ 19
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entityMetadata @AT@ 112133 @LENGTH@ 4
---------------------INS SimpleName@@entityMetadata @TO@ FieldAccess@@this.entityMetadata @AT@ 112138 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getCurrentIndentifierField:[] @TO@ MethodInvocation@@this.entityMetadata.getCurrentIndentifierField() @AT@ 112153 @LENGTH@ 28
------------INS SimpleName@@MethodName:getMethodName:[] @TO@ MethodInvocation@@getAccessorMethod(this.entityMetadata.getCurrentIndentifierField()).getMethodName() @AT@ 112183 @LENGTH@ 15


UPD TryStatement@@try {  thread.join(stopInterval);} catch (final InterruptedException e) {  Thread.currentThread().interrupt();} @TO@ try {  thread.interrupt();  thread.join(stopInterval);} catch (final InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 5080 @LENGTH@ 151
---INS ExpressionStatement@@MethodInvocation:thread.interrupt() @TO@ TryStatement@@try {  thread.join(stopInterval);} catch (final InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 5098 @LENGTH@ 19
------INS MethodInvocation@@thread.interrupt() @TO@ ExpressionStatement@@MethodInvocation:thread.interrupt() @AT@ 5098 @LENGTH@ 18
---------INS SimpleName@@Name:thread @TO@ MethodInvocation@@thread.interrupt() @AT@ 5098 @LENGTH@ 6
---------INS SimpleName@@MethodName:interrupt:[] @TO@ MethodInvocation@@thread.interrupt() @AT@ 5105 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("NTFS ADS separator (':') in filename is forbidden.",e.getMessage()) @TO@ MethodInvocation:assertEquals("NTFS ADS separator (':') in file name is forbidden.",e.getMessage()) @AT@ 52975 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals("NTFS ADS separator (':') in filename is forbidden.",e.getMessage()) @TO@ assertEquals("NTFS ADS separator (':') in file name is forbidden.",e.getMessage()) @AT@ 52975 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:["NTFS ADS separator (':') in filename is forbidden.", e.getMessage()] @TO@ MethodName:assertEquals:["NTFS ADS separator (':') in file name is forbidden.", e.getMessage()] @AT@ 52975 @LENGTH@ 82
---------UPD StringLiteral@@"NTFS ADS separator (':') in filename is forbidden." @TO@ "NTFS ADS separator (':') in file name is forbidden." @AT@ 52988 @LENGTH@ 52


INS IfStatement@@if (func == null) {  throw new MetaException("Function cannot be null.");} @TO@ MethodDeclaration@@public, void, MethodName:createFunction, Function func, TException,  @AT@ 104804 @LENGTH@ 84
---INS InfixExpression@@func == null @TO@ IfStatement@@if (func == null) {  throw new MetaException("Function cannot be null.");} @AT@ 104808 @LENGTH@ 12
------INS SimpleName@@func @TO@ InfixExpression@@func == null @AT@ 104808 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@func == null @AT@ 104812 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@func == null @AT@ 104816 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new MetaException("Function cannot be null.");} @TO@ IfStatement@@if (func == null) {  throw new MetaException("Function cannot be null.");} @AT@ 104822 @LENGTH@ 66
------INS ThrowStatement@@ClassInstanceCreation:new MetaException("Function cannot be null.") @TO@ Block@@ThenBody:{  throw new MetaException("Function cannot be null.");} @AT@ 104830 @LENGTH@ 52
---------INS ClassInstanceCreation@@MetaException["Function cannot be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("Function cannot be null.") @AT@ 104836 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["Function cannot be null."] @AT@ 104836 @LENGTH@ 3
------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["Function cannot be null."] @AT@ 104840 @LENGTH@ 13
------------INS StringLiteral@@"Function cannot be null." @TO@ ClassInstanceCreation@@MetaException["Function cannot be null."] @AT@ 104854 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:m.put(name,Collections.singletonList(value)) @TO@ MethodInvocation:m.computeIfAbsent(name,k -> new ArrayList<>()).add(value) @AT@ 10097 @LENGTH@ 46
---UPD MethodInvocation@@m.put(name,Collections.singletonList(value)) @TO@ m.computeIfAbsent(name,k -> new ArrayList<>()).add(value) @AT@ 10097 @LENGTH@ 45
------INS MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @TO@ MethodInvocation@@m.put(name,Collections.singletonList(value)) @AT@ 9950 @LENGTH@ 47
---------INS SimpleName@@name @TO@ MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @AT@ 9968 @LENGTH@ 4
---------INS LambdaExpression@@k -> new ArrayList<>() @TO@ MethodInvocation@@MethodName:computeIfAbsent:[name, k -> new ArrayList<>()] @AT@ 9974 @LENGTH@ 22
------------INS VariableDeclarationFragment@@k @TO@ LambdaExpression@@k -> new ArrayList<>() @AT@ 9974 @LENGTH@ 1
---------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 9974 @LENGTH@ 1
---------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 9974 @LENGTH@ 1
------------INS ClassInstanceCreation@@ArrayList<>[] @TO@ LambdaExpression@@k -> new ArrayList<>() @AT@ 9979 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 9979 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 9983 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 9983 @LENGTH@ 9
------DEL SimpleName@@MethodName:put:[name, Collections.singletonList(value)] @AT@ 10099 @LENGTH@ 43
---------DEL SimpleName@@name @AT@ 10103 @LENGTH@ 4
---------DEL MethodInvocation@@Collections.singletonList(value) @AT@ 10109 @LENGTH@ 32
------------DEL SimpleName@@Name:Collections @AT@ 10109 @LENGTH@ 11
------MOV SimpleName@@MethodName:singletonList:[value] @TO@ MethodInvocation@@m.put(name,Collections.singletonList(value)) @AT@ 10121 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertThat(errorElement.asText()).contains("invalid_state_parameter") @TO@ MethodInvocation:assertThat(errorElement.asText()).contains("authorization_request_not_found") @AT@ 11408 @LENGTH@ 70
---UPD MethodInvocation@@assertThat(errorElement.asText()).contains("invalid_state_parameter") @TO@ assertThat(errorElement.asText()).contains("authorization_request_not_found") @AT@ 11408 @LENGTH@ 69
------UPD SimpleName@@MethodName:contains:["invalid_state_parameter"] @TO@ MethodName:contains:["authorization_request_not_found"] @AT@ 11442 @LENGTH@ 35
---------UPD StringLiteral@@"invalid_state_parameter" @TO@ "authorization_request_not_found" @AT@ 11451 @LENGTH@ 25


UPD EnhancedForStatement@@for (String cookieName : cookiesToClear) {  Cookie cookie=new Cookie(cookieName,null);  String cookiePath=request.getContextPath();  if (!StringUtils.hasLength(cookiePath)) {    cookiePath="/";  }  cookie.setPath(cookiePath);  cookie.setMaxAge(0);  response.addCookie(cookie);} @TO@ for (String cookieName : cookiesToClear) {  Cookie cookie=new Cookie(cookieName,null);  String cookiePath=request.getContextPath() + "/";  cookie.setPath(cookiePath);  cookie.setMaxAge(0);  response.addCookie(cookie);} @AT@ 1557 @LENGTH@ 302
---UPD VariableDeclarationStatement@@String cookiePath=request.getContextPath(); @TO@ String cookiePath=request.getContextPath() + "/"; @AT@ 1652 @LENGTH@ 45
------UPD VariableDeclarationFragment@@cookiePath=request.getContextPath() @TO@ cookiePath=request.getContextPath() + "/" @AT@ 1659 @LENGTH@ 37
---------INS InfixExpression@@request.getContextPath() + "/" @TO@ VariableDeclarationFragment@@cookiePath=request.getContextPath() @AT@ 1627 @LENGTH@ 30
------------INS MethodInvocation@@request.getContextPath() @TO@ InfixExpression@@request.getContextPath() + "/" @AT@ 1627 @LENGTH@ 24
---------------MOV SimpleName@@Name:request @TO@ MethodInvocation@@request.getContextPath() @AT@ 1672 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:getContextPath:[] @TO@ MethodInvocation@@request.getContextPath() @AT@ 1680 @LENGTH@ 16
------------INS Operator@@+ @TO@ InfixExpression@@request.getContextPath() + "/" @AT@ 1651 @LENGTH@ 1
------------INS StringLiteral@@"/" @TO@ InfixExpression@@request.getContextPath() + "/" @AT@ 1654 @LENGTH@ 3
---------DEL MethodInvocation@@request.getContextPath() @AT@ 1672 @LENGTH@ 24
---DEL IfStatement@@if (!StringUtils.hasLength(cookiePath)) {  cookiePath="/";} @AT@ 1701 @LENGTH@ 68
------DEL PrefixExpression@@!StringUtils.hasLength(cookiePath) @AT@ 1705 @LENGTH@ 34
---------DEL Operator@@! @AT@ 1705 @LENGTH@ 1
---------DEL MethodInvocation@@StringUtils.hasLength(cookiePath) @AT@ 1706 @LENGTH@ 33
------------DEL SimpleName@@Name:StringUtils @AT@ 1706 @LENGTH@ 11
------------DEL SimpleName@@MethodName:hasLength:[cookiePath] @AT@ 1718 @LENGTH@ 21
---------------DEL SimpleName@@cookiePath @AT@ 1728 @LENGTH@ 10
------DEL Block@@ThenBody:{  cookiePath="/";} @AT@ 1741 @LENGTH@ 28
---------DEL ExpressionStatement@@Assignment:cookiePath="/" @AT@ 1747 @LENGTH@ 17
------------DEL Assignment@@cookiePath="/" @AT@ 1747 @LENGTH@ 16
---------------DEL SimpleName@@cookiePath @AT@ 1747 @LENGTH@ 10
---------------DEL Operator@@= @AT@ 1757 @LENGTH@ 1
---------------DEL StringLiteral@@"/" @AT@ 1760 @LENGTH@ 3


UPD VariableDeclarationStatement@@FlowExecutionListener listener=new FlowExecutionListenerAdapter(){
}
; @TO@ FlowExecutionListener listener=new FlowExecutionListener(){
}
; @AT@ 2322 @LENGTH@ 75
---UPD VariableDeclarationFragment@@listener=new FlowExecutionListenerAdapter(){
}
 @TO@ listener=new FlowExecutionListener(){
}
 @AT@ 2344 @LENGTH@ 52
------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 2355 @LENGTH@ 41
---------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 2359 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:verify(this.entry).setLastAccessedTime(Matchers.<Date>any()) @TO@ MethodInvocation:verify(this.entry).setLastAccessedTime(ArgumentMatchers.<Date>any()) @AT@ 4836 @LENGTH@ 61
---UPD MethodInvocation@@verify(this.entry).setLastAccessedTime(Matchers.<Date>any()) @TO@ verify(this.entry).setLastAccessedTime(ArgumentMatchers.<Date>any()) @AT@ 4836 @LENGTH@ 60
------UPD SimpleName@@MethodName:setLastAccessedTime:[Matchers.<Date>any()] @TO@ MethodName:setLastAccessedTime:[ArgumentMatchers.<Date>any()] @AT@ 4855 @LENGTH@ 41
---------UPD MethodInvocation@@Matchers.<Date>any() @TO@ ArgumentMatchers.<Date>any() @AT@ 4875 @LENGTH@ 20
------------UPD SimpleName@@Name:Matchers @TO@ Name:ArgumentMatchers @AT@ 4875 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),exchange.getOut(),true) @TO@ MethodDeclaration@@private, void, MethodName:doQuery, Exchange exchange, String dataBaseName, String retentionPolicy,  @AT@ 4141 @LENGTH@ 69
---INS MethodInvocation@@MessageHelper.copyHeaders(exchange.getIn(),exchange.getOut(),true) @TO@ ExpressionStatement@@MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),exchange.getOut(),true) @AT@ 4141 @LENGTH@ 68
------INS SimpleName@@Name:MessageHelper @TO@ MethodInvocation@@MessageHelper.copyHeaders(exchange.getIn(),exchange.getOut(),true) @AT@ 4141 @LENGTH@ 13
------INS SimpleName@@MethodName:copyHeaders:[exchange.getIn(), exchange.getOut(), true] @TO@ MethodInvocation@@MessageHelper.copyHeaders(exchange.getIn(),exchange.getOut(),true) @AT@ 4155 @LENGTH@ 54
---------INS MethodInvocation@@exchange.getIn() @TO@ SimpleName@@MethodName:copyHeaders:[exchange.getIn(), exchange.getOut(), true] @AT@ 4167 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 4167 @LENGTH@ 8
------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 4176 @LENGTH@ 7
---------INS MethodInvocation@@exchange.getOut() @TO@ SimpleName@@MethodName:copyHeaders:[exchange.getIn(), exchange.getOut(), true] @AT@ 4185 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 4185 @LENGTH@ 8
------------INS SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 4194 @LENGTH@ 8
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:copyHeaders:[exchange.getIn(), exchange.getOut(), true] @AT@ 4204 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:OAuth2AuthenticationException, OAuth2Error error,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationException, AuthenticationException @AT@ 1837 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:OAuth2AuthenticationException, OAuth2Error error,  @AT@ 1837 @LENGTH@ 6
---INS SimpleName@@MethodName:OAuth2AuthenticationException @TO@ MethodDeclaration@@public, voidMethodName:OAuth2AuthenticationException, OAuth2Error error,  @AT@ 1844 @LENGTH@ 29
---INS SingleVariableDeclaration@@OAuth2Error error @TO@ MethodDeclaration@@public, voidMethodName:OAuth2AuthenticationException, OAuth2Error error,  @AT@ 1874 @LENGTH@ 17
------INS SimpleType@@OAuth2Error @TO@ SingleVariableDeclaration@@OAuth2Error error @AT@ 1874 @LENGTH@ 11
------INS SimpleName@@error @TO@ SingleVariableDeclaration@@OAuth2Error error @AT@ 1886 @LENGTH@ 5
---INS ConstructorInvocation@@this(error,error.getDescription()); @TO@ MethodDeclaration@@public, voidMethodName:OAuth2AuthenticationException, OAuth2Error error,  @AT@ 1897 @LENGTH@ 36
------INS SimpleName@@error @TO@ ConstructorInvocation@@this(error,error.getDescription()); @AT@ 1902 @LENGTH@ 5
------INS MethodInvocation@@error.getDescription() @TO@ ConstructorInvocation@@this(error,error.getDescription()); @AT@ 1909 @LENGTH@ 22
---------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getDescription() @AT@ 1909 @LENGTH@ 5
---------INS SimpleName@@MethodName:getDescription:[] @TO@ MethodInvocation@@error.getDescription() @AT@ 1915 @LENGTH@ 16


INS MethodDeclaration@@protected, Configuration, MethodName:getConfiguration,  @TO@ TypeDeclaration@@[public, abstract]AbstractMetaStoreService,  @AT@ 2029 @LENGTH@ 74
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Configuration, MethodName:getConfiguration,  @AT@ 2029 @LENGTH@ 9
---INS SimpleType@@Configuration @TO@ MethodDeclaration@@protected, Configuration, MethodName:getConfiguration,  @AT@ 2039 @LENGTH@ 13
---INS SimpleName@@MethodName:getConfiguration @TO@ MethodDeclaration@@protected, Configuration, MethodName:getConfiguration,  @AT@ 2053 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:configuration @TO@ MethodDeclaration@@protected, Configuration, MethodName:getConfiguration,  @AT@ 2078 @LENGTH@ 21
------INS SimpleName@@configuration @TO@ ReturnStatement@@SimpleName:configuration @AT@ 2085 @LENGTH@ 13


INS MethodDeclaration@@public, voidMethodName:KafkaComponent,  @TO@ TypeDeclaration@@[public]KafkaComponent, DefaultComponent[SSLContextParametersAware] @AT@ 1835 @LENGTH@ 31
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:KafkaComponent,  @AT@ 1835 @LENGTH@ 6
---INS SimpleName@@MethodName:KafkaComponent @TO@ MethodDeclaration@@public, voidMethodName:KafkaComponent,  @AT@ 1842 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 4932 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 4842 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 4932 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 4932 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 4946 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 4953 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 4959 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 4959 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 4968 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 4981 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 4981 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 5002 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 5005 @LENGTH@ 4


UPD EnhancedForStatement@@for (ModuleDependency dep : spec.getDependencies()) {  if (ServiceModuleLoader.isDynamicModule(dep.getIdentifier())) {    if (!alreadyResolvedModules.contains(dep.getIdentifier())) {      nextAlreadySeen.add(dep.getIdentifier());      nextPhaseIdentifiers.add(dep);    }  }} @TO@ for (ModuleDependency dep : spec.getDependencies()) {  if (dep.isOptional())   continue;  if (ServiceModuleLoader.isDynamicModule(dep.getIdentifier())) {    if (!alreadyResolvedModules.contains(dep.getIdentifier())) {      nextAlreadySeen.add(dep.getIdentifier());      nextPhaseIdentifiers.add(dep);    }  }} @AT@ 2604 @LENGTH@ 417
---INS IfStatement@@if (dep.isOptional()) continue; @TO@ EnhancedForStatement@@for (ModuleDependency dep : spec.getDependencies()) {  if (ServiceModuleLoader.isDynamicModule(dep.getIdentifier())) {    if (!alreadyResolvedModules.contains(dep.getIdentifier())) {      nextAlreadySeen.add(dep.getIdentifier());      nextPhaseIdentifiers.add(dep);    }  }} @AT@ 3615 @LENGTH@ 31
------INS MethodInvocation@@dep.isOptional() @TO@ IfStatement@@if (dep.isOptional()) continue; @AT@ 3619 @LENGTH@ 16
---------INS SimpleName@@Name:dep @TO@ MethodInvocation@@dep.isOptional() @AT@ 3619 @LENGTH@ 3
---------INS SimpleName@@MethodName:isOptional:[] @TO@ MethodInvocation@@dep.isOptional() @AT@ 3623 @LENGTH@ 12
------INS Block@@ThenBody:continue; @TO@ IfStatement@@if (dep.isOptional()) continue; @AT@ 3637 @LENGTH@ 9
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:continue; @AT@ 3637 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @TO@ protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2248 @LENGTH@ 855
---DEL Modifier@@public @AT@ 2248 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2255 @LENGTH@ 4
---DEL SimpleName@@MethodName:complete @AT@ 2260 @LENGTH@ 8
---DEL SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2269 @LENGTH@ 42
------DEL SimpleType@@CLICompleterInvocation @AT@ 2269 @LENGTH@ 22
------DEL SimpleName@@completerInvocation @AT@ 2292 @LENGTH@ 19
---INS ReturnStatement@@MethodInvocation:rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2305 @LENGTH@ 132
------INS MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @TO@ ReturnStatement@@MethodInvocation:rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 2312 @LENGTH@ 124
---------MOV MethodInvocation@@MethodName:getServerGroupAddPermission:[] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 2627 @LENGTH@ 49
---------MOV MethodInvocation@@MethodName:getPermissions:[] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 2627 @LENGTH@ 19
---------MOV SimpleName@@Name:rc @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 2627 @LENGTH@ 2
---------MOV SimpleName@@MethodName:complete:[completerInvocation.getCommandContext(), completerInvocation.getGivenCompleteValue(), 0, candidates] @TO@ MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(completerInvocation.getCommandContext()) @AT@ 2845 @LENGTH@ 129
---DEL VariableDeclarationStatement@@CommaSeparatedCompleter comp=new CommaSeparatedCompleter(){
  @Override protected Collection<String> getAllCandidates(  CommandContext ctx){
    return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(ctx);
  }
}
; @AT@ 2427 @LENGTH@ 330
------DEL SimpleType@@CommaSeparatedCompleter @AT@ 2427 @LENGTH@ 23
------DEL VariableDeclarationFragment@@comp=new CommaSeparatedCompleter(){
  @Override protected Collection<String> getAllCandidates(  CommandContext ctx){
    return rc.getPermissions().getServerGroupAddPermission().getAllowedOn(ctx);
  }
}
 @AT@ 2451 @LENGTH@ 305
---------DEL SimpleName@@comp @AT@ 2451 @LENGTH@ 4
---------DEL ClassInstanceCreation@@CommaSeparatedCompleter[] @AT@ 2458 @LENGTH@ 298
------------DEL New@@new @AT@ 2458 @LENGTH@ 3
------------DEL SimpleType@@CommaSeparatedCompleter @AT@ 2462 @LENGTH@ 23
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2488 @LENGTH@ 268
---------------DEL MethodDeclaration@@protected, Collection<String>, MethodName:getAllCandidates, CommandContext ctx,  @AT@ 2532 @LENGTH@ 210
------------------DEL ReturnStatement@@MethodInvocation:rc.getPermissions().getServerGroupAddPermission().getAllowedOn(ctx) @AT@ 2620 @LENGTH@ 104
---------------------DEL MethodInvocation@@rc.getPermissions().getServerGroupAddPermission().getAllowedOn(ctx) @AT@ 2627 @LENGTH@ 96
------------------------DEL SimpleName@@MethodName:getAllowedOn:[ctx] @AT@ 2706 @LENGTH@ 17
---------------------------DEL SimpleName@@ctx @AT@ 2719 @LENGTH@ 3
---MOV Modifier@@protected @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2532 @LENGTH@ 9
---MOV ParameterizedType@@Collection<String> @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2542 @LENGTH@ 18
------UPD SimpleType@@Collection @TO@ List @AT@ 2542 @LENGTH@ 10
---MOV SimpleName@@MethodName:getAllCandidates @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2561 @LENGTH@ 16
---MOV SingleVariableDeclaration@@CommandContext ctx @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2578 @LENGTH@ 18
------UPD SimpleType@@CommandContext @TO@ CLICompleterInvocation @AT@ 2578 @LENGTH@ 14
------UPD SimpleName@@ctx @TO@ completerInvocation @AT@ 2593 @LENGTH@ 3
---DEL VariableDeclarationStatement@@List<String> candidates=new ArrayList<>(); @AT@ 2770 @LENGTH@ 44
------DEL ParameterizedType@@List<String> @AT@ 2770 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 2770 @LENGTH@ 4
---------DEL SimpleType@@String @AT@ 2775 @LENGTH@ 6
------DEL VariableDeclarationFragment@@candidates=new ArrayList<>() @AT@ 2783 @LENGTH@ 30
---------DEL SimpleName@@candidates @AT@ 2783 @LENGTH@ 10
---------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 2796 @LENGTH@ 17
------------DEL New@@new @AT@ 2796 @LENGTH@ 3
------------DEL ParameterizedType@@ArrayList<> @AT@ 2800 @LENGTH@ 11
---------------DEL SimpleType@@ArrayList @AT@ 2800 @LENGTH@ 9
---DEL VariableDeclarationStatement@@int offset=comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates); @AT@ 2827 @LENGTH@ 148
------DEL PrimitiveType@@int @AT@ 2827 @LENGTH@ 3
------DEL VariableDeclarationFragment@@offset=comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates) @AT@ 2831 @LENGTH@ 143
---------DEL SimpleName@@offset @AT@ 2831 @LENGTH@ 6
---------DEL MethodInvocation@@comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates) @AT@ 2840 @LENGTH@ 134
------------DEL SimpleName@@Name:comp @AT@ 2840 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:completerInvocation.addAllCompleterValues(candidates) @AT@ 2988 @LENGTH@ 54
------DEL MethodInvocation@@completerInvocation.addAllCompleterValues(candidates) @AT@ 2988 @LENGTH@ 53
---------DEL SimpleName@@Name:completerInvocation @AT@ 2988 @LENGTH@ 19
---------DEL SimpleName@@MethodName:addAllCompleterValues:[candidates] @AT@ 3008 @LENGTH@ 33
------------DEL SimpleName@@candidates @AT@ 3030 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:completerInvocation.setOffset(offset) @AT@ 3055 @LENGTH@ 38
------DEL MethodInvocation@@completerInvocation.setOffset(offset) @AT@ 3055 @LENGTH@ 37
---------DEL SimpleName@@Name:completerInvocation @AT@ 3055 @LENGTH@ 19
---------DEL SimpleName@@MethodName:setOffset:[offset] @AT@ 3075 @LENGTH@ 17
------------DEL SimpleName@@offset @AT@ 3085 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:MetaStoreFactoryForTests,  @TO@ TypeDeclaration@@[public]MetaStoreFactoryForTests,  @AT@ 1581 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:MetaStoreFactoryForTests,  @AT@ 1581 @LENGTH@ 7
---INS SimpleName@@MethodName:MetaStoreFactoryForTests @TO@ MethodDeclaration@@private, voidMethodName:MetaStoreFactoryForTests,  @AT@ 1589 @LENGTH@ 24


DEL MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2957 @LENGTH@ 991
---DEL Modifier@@public @AT@ 2957 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2964 @LENGTH@ 4
---DEL SimpleName@@MethodName:complete @AT@ 2969 @LENGTH@ 8
---DEL SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2978 @LENGTH@ 42
------DEL SimpleType@@CLICompleterInvocation @AT@ 2978 @LENGTH@ 22
------DEL SimpleName@@completerInvocation @AT@ 3001 @LENGTH@ 19
---DEL VariableDeclarationStatement@@UndeployCommand rc=(UndeployCommand)completerInvocation.getCommand(); @AT@ 3036 @LENGTH@ 72
------DEL SimpleType@@UndeployCommand @AT@ 3036 @LENGTH@ 15
------DEL VariableDeclarationFragment@@rc=(UndeployCommand)completerInvocation.getCommand() @AT@ 3052 @LENGTH@ 55
---------DEL SimpleName@@rc @AT@ 3052 @LENGTH@ 2
---------DEL CastExpression@@(UndeployCommand)completerInvocation.getCommand() @AT@ 3057 @LENGTH@ 50
------------DEL SimpleType@@UndeployCommand @AT@ 3058 @LENGTH@ 15
------------DEL MethodInvocation@@completerInvocation.getCommand() @AT@ 3075 @LENGTH@ 32
---------------DEL SimpleName@@Name:completerInvocation @AT@ 3075 @LENGTH@ 19
---------------DEL SimpleName@@MethodName:getCommand:[] @AT@ 3095 @LENGTH@ 12
---DEL VariableDeclarationStatement@@CommaSeparatedCompleter comp=new CommaSeparatedCompleter(){
  @Override protected Collection<String> getAllCandidates(  CommandContext ctx){
    try {
      return Util.getServerGroupsReferencingDeployment(rc.name,ctx.getModelControllerClient());
    }
 catch (    CommandLineException ex) {
      return Collections.emptyList();
    }
  }
}
; @AT@ 3122 @LENGTH@ 480
------DEL SimpleType@@CommaSeparatedCompleter @AT@ 3122 @LENGTH@ 23
------DEL VariableDeclarationFragment@@comp=new CommaSeparatedCompleter(){
  @Override protected Collection<String> getAllCandidates(  CommandContext ctx){
    try {
      return Util.getServerGroupsReferencingDeployment(rc.name,ctx.getModelControllerClient());
    }
 catch (    CommandLineException ex) {
      return Collections.emptyList();
    }
  }
}
 @AT@ 3146 @LENGTH@ 455
---------DEL SimpleName@@comp @AT@ 3146 @LENGTH@ 4
---------DEL ClassInstanceCreation@@CommaSeparatedCompleter[] @AT@ 3153 @LENGTH@ 448
------------DEL New@@new @AT@ 3153 @LENGTH@ 3
------------DEL SimpleType@@CommaSeparatedCompleter @AT@ 3157 @LENGTH@ 23
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 3183 @LENGTH@ 418
---------------DEL MethodDeclaration@@protected, Collection<String>, MethodName:getAllCandidates, CommandContext ctx,  @AT@ 3227 @LENGTH@ 360
------------------DEL Modifier@@protected @AT@ 3227 @LENGTH@ 9
------------------DEL ParameterizedType@@Collection<String> @AT@ 3237 @LENGTH@ 18
---------------------DEL SimpleType@@Collection @AT@ 3237 @LENGTH@ 10
---------------------DEL SimpleType@@String @AT@ 3248 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:getAllCandidates @AT@ 3256 @LENGTH@ 16
------------------DEL SingleVariableDeclaration@@CommandContext ctx @AT@ 3273 @LENGTH@ 18
---------------------DEL SimpleType@@CommandContext @AT@ 3273 @LENGTH@ 14
---------------------DEL SimpleName@@ctx @AT@ 3288 @LENGTH@ 3
------------------DEL TryStatement@@try {  return Util.getServerGroupsReferencingDeployment(rc.name,ctx.getModelControllerClient());} catch (CommandLineException ex) {  return Collections.emptyList();} @AT@ 3315 @LENGTH@ 254
---------------------DEL ReturnStatement@@MethodInvocation:Util.getServerGroupsReferencingDeployment(rc.name,ctx.getModelControllerClient()) @AT@ 3345 @LENGTH@ 90
------------------------DEL MethodInvocation@@Util.getServerGroupsReferencingDeployment(rc.name,ctx.getModelControllerClient()) @AT@ 3352 @LENGTH@ 82
---------------------------DEL SimpleName@@Name:Util @AT@ 3352 @LENGTH@ 4
---------------------------DEL SimpleName@@MethodName:getServerGroupsReferencingDeployment:[rc.name, ctx.getModelControllerClient()] @AT@ 3357 @LENGTH@ 77
------------------------------DEL QualifiedName@@rc.name @AT@ 3394 @LENGTH@ 7
---------------------------------DEL SimpleName@@rc @AT@ 3394 @LENGTH@ 2
---------------------------------DEL SimpleName@@name @AT@ 3397 @LENGTH@ 4
------------------------------DEL MethodInvocation@@ctx.getModelControllerClient() @AT@ 3403 @LENGTH@ 30
---------------------------------DEL SimpleName@@Name:ctx @AT@ 3403 @LENGTH@ 3
---------------------------------DEL SimpleName@@MethodName:getModelControllerClient:[] @AT@ 3407 @LENGTH@ 26
---------------------DEL CatchClause@@catch (CommandLineException ex) {  return Collections.emptyList();} @AT@ 3458 @LENGTH@ 111
------------------------DEL SingleVariableDeclaration@@CommandLineException ex @AT@ 3465 @LENGTH@ 23
---------------------------DEL SimpleType@@CommandLineException @AT@ 3465 @LENGTH@ 20
---------------------------DEL SimpleName@@ex @AT@ 3486 @LENGTH@ 2
------------------------DEL ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 3516 @LENGTH@ 31
---------------------------DEL MethodInvocation@@Collections.emptyList() @AT@ 3523 @LENGTH@ 23
------------------------------DEL SimpleName@@Name:Collections @AT@ 3523 @LENGTH@ 11
------------------------------DEL SimpleName@@MethodName:emptyList:[] @AT@ 3535 @LENGTH@ 11
---DEL VariableDeclarationStatement@@List<String> candidates=new ArrayList<>(); @AT@ 3615 @LENGTH@ 44
------DEL ParameterizedType@@List<String> @AT@ 3615 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 3615 @LENGTH@ 4
---------DEL SimpleType@@String @AT@ 3620 @LENGTH@ 6
------DEL VariableDeclarationFragment@@candidates=new ArrayList<>() @AT@ 3628 @LENGTH@ 30
---------DEL SimpleName@@candidates @AT@ 3628 @LENGTH@ 10
---------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 3641 @LENGTH@ 17
------------DEL New@@new @AT@ 3641 @LENGTH@ 3
------------DEL ParameterizedType@@ArrayList<> @AT@ 3645 @LENGTH@ 11
---------------DEL SimpleType@@ArrayList @AT@ 3645 @LENGTH@ 9
---DEL VariableDeclarationStatement@@int offset=comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates); @AT@ 3672 @LENGTH@ 148
------DEL PrimitiveType@@int @AT@ 3672 @LENGTH@ 3
------DEL VariableDeclarationFragment@@offset=comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates) @AT@ 3676 @LENGTH@ 143
---------DEL SimpleName@@offset @AT@ 3676 @LENGTH@ 6
---------DEL MethodInvocation@@comp.complete(completerInvocation.getCommandContext(),completerInvocation.getGivenCompleteValue(),0,candidates) @AT@ 3685 @LENGTH@ 134
------------DEL SimpleName@@Name:comp @AT@ 3685 @LENGTH@ 4
------------DEL SimpleName@@MethodName:complete:[completerInvocation.getCommandContext(), completerInvocation.getGivenCompleteValue(), 0, candidates] @AT@ 3690 @LENGTH@ 129
---------------DEL MethodInvocation@@completerInvocation.getCommandContext() @AT@ 3699 @LENGTH@ 39
------------------DEL SimpleName@@Name:completerInvocation @AT@ 3699 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getCommandContext:[] @AT@ 3719 @LENGTH@ 19
---------------DEL MethodInvocation@@completerInvocation.getGivenCompleteValue() @AT@ 3760 @LENGTH@ 43
------------------DEL SimpleName@@Name:completerInvocation @AT@ 3760 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getGivenCompleteValue:[] @AT@ 3780 @LENGTH@ 23
---------------DEL NumberLiteral@@0 @AT@ 3805 @LENGTH@ 1
---------------DEL SimpleName@@candidates @AT@ 3808 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:completerInvocation.addAllCompleterValues(candidates) @AT@ 3833 @LENGTH@ 54
------DEL MethodInvocation@@completerInvocation.addAllCompleterValues(candidates) @AT@ 3833 @LENGTH@ 53
---------DEL SimpleName@@Name:completerInvocation @AT@ 3833 @LENGTH@ 19
---------DEL SimpleName@@MethodName:addAllCompleterValues:[candidates] @AT@ 3853 @LENGTH@ 33
------------DEL SimpleName@@candidates @AT@ 3875 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:completerInvocation.setOffset(offset) @AT@ 3900 @LENGTH@ 38
------DEL MethodInvocation@@completerInvocation.setOffset(offset) @AT@ 3900 @LENGTH@ 37
---------DEL SimpleName@@Name:completerInvocation @AT@ 3900 @LENGTH@ 19
---------DEL SimpleName@@MethodName:setOffset:[offset] @AT@ 3920 @LENGTH@ 17
------------DEL SimpleName@@offset @AT@ 3930 @LENGTH@ 6


UPD VariableDeclarationStatement@@Mono<Authentication> toInvoke=ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.error(new AccessDeniedException("Denied"))); @TO@ Mono<Authentication> toInvoke=ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Denied")))); @AT@ 3299 @LENGTH@ 301
---UPD VariableDeclarationFragment@@toInvoke=ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.error(new AccessDeniedException("Denied"))) @TO@ toInvoke=ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Denied")))) @AT@ 3320 @LENGTH@ 279
------UPD MethodInvocation@@ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.error(new AccessDeniedException("Denied"))) @TO@ ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Denied")))) @AT@ 3331 @LENGTH@ 268
---------INS SimpleName@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new AccessDeniedException("Denied")))] @TO@ MethodInvocation@@ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).defaultIfEmpty(this.anonymous).filter(auth -> this.preInvocationAdvice.before(auth,invocation,preAttr)).switchIfEmpty(Mono.error(new AccessDeniedException("Denied"))) @AT@ 3537 @LENGTH@ 80
------------INS MethodInvocation@@Mono.defer(() -> Mono.error(new AccessDeniedException("Denied"))) @TO@ SimpleName@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new AccessDeniedException("Denied")))] @AT@ 3551 @LENGTH@ 65
---------------MOV SimpleName@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Denied"))] @TO@ MethodInvocation@@Mono.defer(() -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 3537 @LENGTH@ 62
------------------INS LambdaExpression@@() -> Mono.error(new AccessDeniedException("Denied")) @TO@ SimpleName@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Denied"))] @AT@ 3562 @LENGTH@ 53
---------------------MOV MethodInvocation@@Mono.error(new AccessDeniedException("Denied")) @TO@ LambdaExpression@@() -> Mono.error(new AccessDeniedException("Denied")) @AT@ 3551 @LENGTH@ 47
---------------------MOV MethodInvocation@@Mono.error(new AccessDeniedException("Denied")) @TO@ LambdaExpression@@() -> Mono.error(new AccessDeniedException("Denied")) @AT@ 3551 @LENGTH@ 47
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.defer(() -> Mono.error(new AccessDeniedException("Denied"))) @AT@ 3551 @LENGTH@ 4
---------UPD SimpleName@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Denied"))] @TO@ MethodName:defer:[() -> Mono.error(new AccessDeniedException("Denied"))] @AT@ 3537 @LENGTH@ 62


UPD IfStatement@@if (channel == null && connection == null) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @TO@ if (channel == null && connection == null) {  connection=resourceFactory.createConnection();  if (resourceHolder == null) {    resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);    if (resourceHolder != null) {      channel=resourceHolder.getChannel();      resourceHolderToUse=resourceHolder;    }  }  resourceHolderToUse.addConnection(connection);} @AT@ 6686 @LENGTH@ 153
---INS Block@@ThenBody:{  connection=resourceFactory.createConnection();  if (resourceHolder == null) {    resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);    if (resourceHolder != null) {      channel=resourceHolder.getChannel();      resourceHolderToUse=resourceHolder;    }  }  resourceHolderToUse.addConnection(connection);} @TO@ IfStatement@@if (channel == null && connection == null) {  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @AT@ 6729 @LENGTH@ 560
------MOV ExpressionStatement@@Assignment:connection=resourceFactory.createConnection() @TO@ Block@@ThenBody:{  connection=resourceFactory.createConnection();  if (resourceHolder == null) {    resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);    if (resourceHolder != null) {      channel=resourceHolder.getChannel();      resourceHolderToUse=resourceHolder;    }  }  resourceHolderToUse.addConnection(connection);} @AT@ 6735 @LENGTH@ 48
------INS IfStatement@@if (resourceHolder == null) {  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @TO@ Block@@ThenBody:{  connection=resourceFactory.createConnection();  if (resourceHolder == null) {    resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);    if (resourceHolder != null) {      channel=resourceHolder.getChannel();      resourceHolderToUse=resourceHolder;    }  }  resourceHolderToUse.addConnection(connection);} @AT@ 6788 @LENGTH@ 445
---------INS InfixExpression@@resourceHolder == null @TO@ IfStatement@@if (resourceHolder == null) {  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @AT@ 6792 @LENGTH@ 22
------------INS SimpleName@@resourceHolder @TO@ InfixExpression@@resourceHolder == null @AT@ 6792 @LENGTH@ 14
------------INS Operator@@== @TO@ InfixExpression@@resourceHolder == null @AT@ 6806 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@resourceHolder == null @AT@ 6810 @LENGTH@ 4
---------INS Block@@ThenBody:{  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @TO@ IfStatement@@if (resourceHolder == null) {  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @AT@ 6816 @LENGTH@ 417
------------INS ExpressionStatement@@Assignment:resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @TO@ Block@@ThenBody:{  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @AT@ 6983 @LENGTH@ 113
---------------INS Assignment@@resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @TO@ ExpressionStatement@@Assignment:resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 6983 @LENGTH@ 112
------------------INS SimpleName@@resourceHolder @TO@ Assignment@@resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 6983 @LENGTH@ 14
------------------INS Operator@@= @TO@ Assignment@@resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 6997 @LENGTH@ 1
------------------INS CastExpression@@(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @TO@ Assignment@@resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 7000 @LENGTH@ 95
---------------------INS SimpleType@@RabbitResourceHolder @TO@ CastExpression@@(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 7001 @LENGTH@ 20
---------------------INS MethodInvocation@@TransactionSynchronizationManager.getResource(connectionFactory) @TO@ CastExpression@@(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 7023 @LENGTH@ 72
------------------------INS SimpleName@@Name:TransactionSynchronizationManager @TO@ MethodInvocation@@TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 7023 @LENGTH@ 33
------------------------INS SimpleName@@MethodName:getResource:[connectionFactory] @TO@ MethodInvocation@@TransactionSynchronizationManager.getResource(connectionFactory) @AT@ 7065 @LENGTH@ 30
---------------------------INS SimpleName@@connectionFactory @TO@ SimpleName@@MethodName:getResource:[connectionFactory] @AT@ 7077 @LENGTH@ 17
------------INS IfStatement@@if (resourceHolder != null) {  channel=resourceHolder.getChannel();  resourceHolderToUse=resourceHolder;} @TO@ Block@@ThenBody:{  resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);  if (resourceHolder != null) {    channel=resourceHolder.getChannel();    resourceHolderToUse=resourceHolder;  }} @AT@ 7102 @LENGTH@ 125
---------------MOV Block@@ThenBody:{  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @TO@ IfStatement@@if (resourceHolder != null) {  channel=resourceHolder.getChannel();  resourceHolderToUse=resourceHolder;} @AT@ 6729 @LENGTH@ 110
------------------INS ExpressionStatement@@Assignment:channel=resourceHolder.getChannel() @TO@ Block@@ThenBody:{  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @AT@ 7138 @LENGTH@ 38
---------------------INS Assignment@@channel=resourceHolder.getChannel() @TO@ ExpressionStatement@@Assignment:channel=resourceHolder.getChannel() @AT@ 7138 @LENGTH@ 37
------------------------INS SimpleName@@channel @TO@ Assignment@@channel=resourceHolder.getChannel() @AT@ 7138 @LENGTH@ 7
------------------------INS Operator@@= @TO@ Assignment@@channel=resourceHolder.getChannel() @AT@ 7145 @LENGTH@ 1
------------------------INS MethodInvocation@@resourceHolder.getChannel() @TO@ Assignment@@channel=resourceHolder.getChannel() @AT@ 7148 @LENGTH@ 27
---------------------------INS SimpleName@@Name:resourceHolder @TO@ MethodInvocation@@resourceHolder.getChannel() @AT@ 7148 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:getChannel:[] @TO@ MethodInvocation@@resourceHolder.getChannel() @AT@ 7163 @LENGTH@ 12
------------------INS ExpressionStatement@@Assignment:resourceHolderToUse=resourceHolder @TO@ Block@@ThenBody:{  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @AT@ 7183 @LENGTH@ 37
---------------------INS Assignment@@resourceHolderToUse=resourceHolder @TO@ ExpressionStatement@@Assignment:resourceHolderToUse=resourceHolder @AT@ 7183 @LENGTH@ 36
------------------------INS SimpleName@@resourceHolderToUse @TO@ Assignment@@resourceHolderToUse=resourceHolder @AT@ 7183 @LENGTH@ 19
------------------------INS Operator@@= @TO@ Assignment@@resourceHolderToUse=resourceHolder @AT@ 7202 @LENGTH@ 1
------------------------INS SimpleName@@resourceHolder @TO@ Assignment@@resourceHolderToUse=resourceHolder @AT@ 7205 @LENGTH@ 14
---------------INS InfixExpression@@resourceHolder != null @TO@ IfStatement@@if (resourceHolder != null) {  channel=resourceHolder.getChannel();  resourceHolderToUse=resourceHolder;} @AT@ 7106 @LENGTH@ 22
------------------INS SimpleName@@resourceHolder @TO@ InfixExpression@@resourceHolder != null @AT@ 7106 @LENGTH@ 14
------------------INS Operator@@!= @TO@ InfixExpression@@resourceHolder != null @AT@ 7120 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@resourceHolder != null @AT@ 7124 @LENGTH@ 4
------MOV ExpressionStatement@@MethodInvocation:resourceHolderToUse.addConnection(connection) @TO@ Block@@ThenBody:{  connection=resourceFactory.createConnection();  if (resourceHolder == null) {    resourceHolder=(RabbitResourceHolder)TransactionSynchronizationManager.getResource(connectionFactory);    if (resourceHolder != null) {      channel=resourceHolder.getChannel();      resourceHolderToUse=resourceHolder;    }  }  resourceHolderToUse.addConnection(connection);} @AT@ 6788 @LENGTH@ 46
---UPD Block@@ThenBody:{  connection=resourceFactory.createConnection();  resourceHolderToUse.addConnection(connection);} @TO@ ThenBody:{  channel=resourceHolder.getChannel();  resourceHolderToUse=resourceHolder;} @AT@ 6729 @LENGTH@ 110


UPD TypeDeclaration@@[public]AmqpResourceNotAvailableException, AmqpException @TO@ [@SuppressWarnings("serial"), public]AmqpResourceNotAvailableException, AmqpException @AT@ 892 @LENGTH@ 342
---INS SingleMemberAnnotation@@@SuppressWarnings("serial") @TO@ TypeDeclaration@@[public]AmqpResourceNotAvailableException, AmqpException @AT@ 916 @LENGTH@ 27


DEL MethodDeclaration@@public, void, MethodName:attemptAuthenticationWhenAuthorizationRequestIsNullThenAuthorizationResponseNotCreated, Exception,  @AT@ 13474 @LENGTH@ 751
---DEL Modifier@@public @AT@ 13474 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 13481 @LENGTH@ 4
---DEL SimpleName@@MethodName:attemptAuthenticationWhenAuthorizationRequestIsNullThenAuthorizationResponseNotCreated @AT@ 13486 @LENGTH@ 86
---DEL SimpleType@@Exception @AT@ 13582 @LENGTH@ 9
---DEL VariableDeclarationStatement@@OAuth2LoginAuthenticationFilter filter=PowerMockito.spy(new OAuth2LoginAuthenticationFilter(this.clientRegistrationRepository,this.authorizedClientService)); @AT@ 13596 @LENGTH@ 164
------DEL SimpleType@@OAuth2LoginAuthenticationFilter @AT@ 13596 @LENGTH@ 31
------DEL VariableDeclarationFragment@@filter=PowerMockito.spy(new OAuth2LoginAuthenticationFilter(this.clientRegistrationRepository,this.authorizedClientService)) @AT@ 13628 @LENGTH@ 131
---------DEL SimpleName@@filter @AT@ 13628 @LENGTH@ 6
---------DEL MethodInvocation@@PowerMockito.spy(new OAuth2LoginAuthenticationFilter(this.clientRegistrationRepository,this.authorizedClientService)) @AT@ 13637 @LENGTH@ 122
------------DEL SimpleName@@Name:PowerMockito @AT@ 13637 @LENGTH@ 12
------------DEL SimpleName@@MethodName:spy:[new OAuth2LoginAuthenticationFilter(this.clientRegistrationRepository,this.authorizedClientService)] @AT@ 13650 @LENGTH@ 109
---------------DEL ClassInstanceCreation@@OAuth2LoginAuthenticationFilter[this.clientRegistrationRepository, this.authorizedClientService] @AT@ 13654 @LENGTH@ 104
------------------DEL New@@new @AT@ 13654 @LENGTH@ 3
------------------DEL SimpleType@@OAuth2LoginAuthenticationFilter @AT@ 13658 @LENGTH@ 31
------------------DEL FieldAccess@@this.clientRegistrationRepository @AT@ 13694 @LENGTH@ 33
---------------------DEL ThisExpression@@this @AT@ 13694 @LENGTH@ 4
---------------------DEL SimpleName@@clientRegistrationRepository @AT@ 13699 @LENGTH@ 28
------------------DEL FieldAccess@@this.authorizedClientService @AT@ 13729 @LENGTH@ 28
---------------------DEL ThisExpression@@this @AT@ 13729 @LENGTH@ 4
---------------------DEL SimpleName@@authorizedClientService @AT@ 13734 @LENGTH@ 23
---DEL VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 13764 @LENGTH@ 62
------DEL SimpleType@@MockHttpServletRequest @AT@ 13764 @LENGTH@ 22
------DEL VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 13787 @LENGTH@ 38
---------DEL SimpleName@@request @AT@ 13787 @LENGTH@ 7
---------DEL ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 13797 @LENGTH@ 28
------------DEL New@@new @AT@ 13797 @LENGTH@ 3
------------DEL SimpleType@@MockHttpServletRequest @AT@ 13801 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:request.addParameter(OAuth2ParameterNames.CODE,"code") @AT@ 13829 @LENGTH@ 56
------DEL MethodInvocation@@request.addParameter(OAuth2ParameterNames.CODE,"code") @AT@ 13829 @LENGTH@ 55
---------DEL SimpleName@@Name:request @AT@ 13829 @LENGTH@ 7
---------DEL SimpleName@@MethodName:addParameter:[OAuth2ParameterNames.CODE, "code"] @AT@ 13837 @LENGTH@ 47
------------DEL QualifiedName@@OAuth2ParameterNames.CODE @AT@ 13850 @LENGTH@ 25
---------------DEL SimpleName@@OAuth2ParameterNames @AT@ 13850 @LENGTH@ 20
---------------DEL SimpleName@@CODE @AT@ 13871 @LENGTH@ 4
------------DEL StringLiteral@@"code" @AT@ 13877 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:request.addParameter(OAuth2ParameterNames.STATE,"state") @AT@ 13888 @LENGTH@ 58
------DEL MethodInvocation@@request.addParameter(OAuth2ParameterNames.STATE,"state") @AT@ 13888 @LENGTH@ 57
---------DEL SimpleName@@Name:request @AT@ 13888 @LENGTH@ 7
---------DEL SimpleName@@MethodName:addParameter:[OAuth2ParameterNames.STATE, "state"] @AT@ 13896 @LENGTH@ 49
------------DEL QualifiedName@@OAuth2ParameterNames.STATE @AT@ 13909 @LENGTH@ 26
---------------DEL SimpleName@@OAuth2ParameterNames @AT@ 13909 @LENGTH@ 20
---------------DEL SimpleName@@STATE @AT@ 13930 @LENGTH@ 5
------------DEL StringLiteral@@"state" @AT@ 13937 @LENGTH@ 7
---DEL VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 13950 @LENGTH@ 65
------DEL SimpleType@@MockHttpServletResponse @AT@ 13950 @LENGTH@ 23
------DEL VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 13974 @LENGTH@ 40
---------DEL SimpleName@@response @AT@ 13974 @LENGTH@ 8
---------DEL ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 13985 @LENGTH@ 29
------------DEL New@@new @AT@ 13985 @LENGTH@ 3
------------DEL SimpleType@@MockHttpServletResponse @AT@ 13989 @LENGTH@ 23
---DEL TryStatement@@try {  filter.attemptAuthentication(request,response);  fail();} catch (OAuth2AuthenticationException ex) {  verifyPrivate(filter,never()).invoke("convert",any(HttpServletRequest.class));} @AT@ 14019 @LENGTH@ 203
------DEL ExpressionStatement@@MethodInvocation:filter.attemptAuthentication(request,response) @AT@ 14028 @LENGTH@ 48
---------DEL MethodInvocation@@filter.attemptAuthentication(request,response) @AT@ 14028 @LENGTH@ 47
------------DEL SimpleName@@Name:filter @AT@ 14028 @LENGTH@ 6
------------DEL SimpleName@@MethodName:attemptAuthentication:[request, response] @AT@ 14035 @LENGTH@ 40
---------------DEL SimpleName@@request @AT@ 14057 @LENGTH@ 7
---------------DEL SimpleName@@response @AT@ 14066 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:fail() @AT@ 14080 @LENGTH@ 7
---------DEL MethodInvocation@@MethodName:fail:[] @AT@ 14080 @LENGTH@ 6
------DEL CatchClause@@catch (OAuth2AuthenticationException ex) {  verifyPrivate(filter,never()).invoke("convert",any(HttpServletRequest.class));} @AT@ 14092 @LENGTH@ 130
---------DEL SingleVariableDeclaration@@OAuth2AuthenticationException ex @AT@ 14099 @LENGTH@ 32
------------DEL SimpleType@@OAuth2AuthenticationException @AT@ 14099 @LENGTH@ 29
------------DEL SimpleName@@ex @AT@ 14129 @LENGTH@ 2
---------DEL ExpressionStatement@@MethodInvocation:verifyPrivate(filter,never()).invoke("convert",any(HttpServletRequest.class)) @AT@ 14138 @LENGTH@ 80
------------DEL MethodInvocation@@verifyPrivate(filter,never()).invoke("convert",any(HttpServletRequest.class)) @AT@ 14138 @LENGTH@ 79
---------------DEL MethodInvocation@@MethodName:verifyPrivate:[filter, never()] @AT@ 14138 @LENGTH@ 30
------------------DEL SimpleName@@filter @AT@ 14152 @LENGTH@ 6
------------------DEL MethodInvocation@@MethodName:never:[] @AT@ 14160 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:invoke:["convert", any(HttpServletRequest.class)] @AT@ 14169 @LENGTH@ 48
------------------DEL StringLiteral@@"convert" @AT@ 14176 @LENGTH@ 9
------------------DEL MethodInvocation@@any(HttpServletRequest.class) @AT@ 14187 @LENGTH@ 29
---------------------DEL SimpleName@@MethodName:any:[HttpServletRequest.class] @AT@ 14187 @LENGTH@ 29
------------------------DEL TypeLiteral@@HttpServletRequest.class @AT@ 14191 @LENGTH@ 24


UPD MethodDeclaration@@private, Class<?>, MethodName:loadRepositoryInterface, RepositoryConfiguration<?> configuration, ClassLoader classLoader,  @TO@ private, Class<?>, MethodName:loadRepositoryInterface, RepositoryConfiguration<?> configuration, @Nullable ClassLoader classLoader,  @AT@ 12483 @LENGTH@ 462
---UPD SingleVariableDeclaration@@ClassLoader classLoader @TO@ @Nullable ClassLoader classLoader @AT@ 12566 @LENGTH@ 23


UPD FieldDeclaration@@private, static, final, String, [MILO_CLIENT_ITEM_C1_1="milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1&discoveryEndpointSuffix=/discovery&overrideHost=true"] @TO@ private, static, final, String, [MILO_CLIENT_ITEM_C1_1="milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1"+ "&discoveryEndpointSuffix=/discovery&overrideHost=true"] @AT@ 1741 @LENGTH@ 444
---UPD VariableDeclarationFragment@@MILO_CLIENT_ITEM_C1_1="milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1&discoveryEndpointSuffix=/discovery&overrideHost=true" @TO@ MILO_CLIENT_ITEM_C1_1="milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1"+ "&discoveryEndpointSuffix=/discovery&overrideHost=true" @AT@ 1769 @LENGTH@ 415
------UPD InfixExpression@@"milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1&discoveryEndpointSuffix=/discovery&overrideHost=true" @TO@ "milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1"+ "&discoveryEndpointSuffix=/discovery&overrideHost=true" @AT@ 1793 @LENGTH@ 391
---------UPD StringLiteral@@"&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1&discoveryEndpointSuffix=/discovery&overrideHost=true" @TO@ "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1" @AT@ 2040 @LENGTH@ 144
---------INS StringLiteral@@"&discoveryEndpointSuffix=/discovery&overrideHost=true" @TO@ InfixExpression@@"milo-client:tcp://foo:bar@localhost:@@port@@?node=" + NodeIds.nodeValue(MiloServerComponent.DEFAULT_NAMESPACE_URI,"items-myitem1") + "&keyStoreUrl=file:src/test/resources/cert/cert.p12&keyStorePassword=pwd1&keyPassword=pwd1&discoveryEndpointSuffix=/discovery&overrideHost=true" @AT@ 2190 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(listener,"message listener is required") @TO@ MethodInvocation:Assert.notNull(listener,"MessageListener must not be null!") @AT@ 1186 @LENGTH@ 57
---UPD MethodInvocation@@Assert.notNull(listener,"message listener is required") @TO@ Assert.notNull(listener,"MessageListener must not be null!") @AT@ 1186 @LENGTH@ 56
------UPD SimpleName@@MethodName:notNull:[listener, "message listener is required"] @TO@ MethodName:notNull:[listener, "MessageListener must not be null!"] @AT@ 1193 @LENGTH@ 49
---------UPD StringLiteral@@"message listener is required" @TO@ "MessageListener must not be null!" @AT@ 1211 @LENGTH@ 30


INS TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @TO@ TypeDeclaration@@[@CommandDefinition(name="info",description="",activator=ControlledCommandActivator.class), public]InfoCommand, CommandWithPermissions[DMRCommand] @AT@ 2594 @LENGTH@ 651
---INS Modifier@@public @TO@ TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @AT@ 2594 @LENGTH@ 6
---INS Modifier@@static @TO@ TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @AT@ 2601 @LENGTH@ 6
---INS SimpleName@@ClassName:ServerGroupCompleter @TO@ TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @AT@ 2614 @LENGTH@ 20
---INS SimpleType@@AbstractCompleter @TO@ TypeDeclaration@@[public, static]ServerGroupCompleter, AbstractCompleter @AT@ 2655 @LENGTH@ 17


UPD EnhancedForStatement@@for (Element curElement : beanElements) {  AbstractBeanDefinition beanDefintion=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition();  beanDefintion.setScope("step");  String beanName=curElement.getAttribute("id");  if (!registry.containsBeanDefinition(beanName)) {    registry.registerBeanDefinition(beanName,beanDefintion);  } else {    logger.info("Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered");  }} @TO@ for (Element curElement : beanElements) {  AbstractBeanDefinition beanDefinition=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition();  beanDefinition.setScope("step");  String beanName=curElement.getAttribute("id");  if (!registry.containsBeanDefinition(beanName)) {    registry.registerBeanDefinition(beanName,beanDefinition);  } else {    logger.info("Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered");  }} @AT@ 2200 @LENGTH@ 556
---UPD VariableDeclarationStatement@@AbstractBeanDefinition beanDefintion=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition(); @TO@ AbstractBeanDefinition beanDefinition=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition(); @AT@ 2246 @LENGTH@ 144
------UPD VariableDeclarationFragment@@beanDefintion=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition() @TO@ beanDefinition=BeanDefinitionBuilder.genericBeanDefinition(curElement.getAttribute("class")).getBeanDefinition() @AT@ 2269 @LENGTH@ 120
---------UPD SimpleName@@beanDefintion @TO@ beanDefinition @AT@ 2269 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:beanDefintion.setScope("step") @TO@ MethodInvocation:beanDefinition.setScope("step") @AT@ 2396 @LENGTH@ 31
------UPD MethodInvocation@@beanDefintion.setScope("step") @TO@ beanDefinition.setScope("step") @AT@ 2396 @LENGTH@ 30
---------UPD SimpleName@@Name:beanDefintion @TO@ Name:beanDefinition @AT@ 2396 @LENGTH@ 13
---UPD IfStatement@@if (!registry.containsBeanDefinition(beanName)) {  registry.registerBeanDefinition(beanName,beanDefintion);} else {  logger.info("Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered");} @TO@ if (!registry.containsBeanDefinition(beanName)) {  registry.registerBeanDefinition(beanName,beanDefinition);} else {  logger.info("Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered");} @AT@ 2487 @LENGTH@ 264
------UPD Block@@ThenBody:{  registry.registerBeanDefinition(beanName,beanDefintion);} @TO@ ThenBody:{  registry.registerBeanDefinition(beanName,beanDefinition);} @AT@ 2534 @LENGTH@ 70
---------UPD ExpressionStatement@@MethodInvocation:registry.registerBeanDefinition(beanName,beanDefintion) @TO@ MethodInvocation:registry.registerBeanDefinition(beanName,beanDefinition) @AT@ 2541 @LENGTH@ 57
------------UPD MethodInvocation@@registry.registerBeanDefinition(beanName,beanDefintion) @TO@ registry.registerBeanDefinition(beanName,beanDefinition) @AT@ 2541 @LENGTH@ 56
---------------UPD SimpleName@@MethodName:registerBeanDefinition:[beanName, beanDefintion] @TO@ MethodName:registerBeanDefinition:[beanName, beanDefinition] @AT@ 2550 @LENGTH@ 47
------------------UPD SimpleName@@beanDefintion @TO@ beanDefinition @AT@ 2583 @LENGTH@ 13
------UPD Block@@ElseBody:{  logger.info("Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered");} @TO@ ElseBody:{  logger.info("Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered");} @AT@ 2610 @LENGTH@ 141
---------UPD ExpressionStatement@@MethodInvocation:logger.info("Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered") @TO@ MethodInvocation:logger.info("Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered") @AT@ 2617 @LENGTH@ 128
------------UPD MethodInvocation@@logger.info("Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered") @TO@ logger.info("Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered") @AT@ 2617 @LENGTH@ 127
---------------UPD SimpleName@@MethodName:info:["Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered"] @TO@ MethodName:info:["Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered"] @AT@ 2624 @LENGTH@ 120
------------------UPD InfixExpression@@"Ignoring batch.xml bean defintion for " + beanName + " because another bean of the same name has been registered" @TO@ "Ignoring batch.xml bean definition for " + beanName + " because another bean of the same name has been registered" @AT@ 2629 @LENGTH@ 114
---------------------UPD StringLiteral@@"Ignoring batch.xml bean defintion for " @TO@ "Ignoring batch.xml bean definition for " @AT@ 2629 @LENGTH@ 40


UPD Block@@ThenBody:{  List<String> wordsForArgs=wordsForArguments(command,words);  Method method=methodTarget.getMethod();  try {    Object[] args=resolveArgs(method,wordsForArgs);    validateArgs(args,methodTarget);    return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);  } catch (  Exception e) {    return e;  }} @TO@ ThenBody:{  List<String> wordsForArgs=wordsForArguments(command,words);  Method method=methodTarget.getMethod();  Thread commandThread=Thread.currentThread();  Object sh=Signals.register("INT",() -> commandThread.interrupt());  try {    Object[] args=resolveArgs(method,wordsForArgs);    validateArgs(args,methodTarget);    return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);  } catch (  UndeclaredThrowableException e) {    if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {      Thread.interrupted();    }    return e.getCause();  }catch (  Exception e) {    return e;  } finally {    Signals.unregister("INT",sh);  }} @AT@ 5029 @LENGTH@ 358
---UPD TryStatement@@try {  Object[] args=resolveArgs(method,wordsForArgs);  validateArgs(args,methodTarget);  return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);} catch (Exception e) {  return e;} @TO@ try {  Object[] args=resolveArgs(method,wordsForArgs);  validateArgs(args,methodTarget);  return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);} catch (UndeclaredThrowableException e) {  if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {    Thread.interrupted();  }  return e.getCause();}catch (Exception e) {  return e;} finally {  Signals.unregister("INT",sh);} @AT@ 5149 @LENGTH@ 233
------INS CatchClause@@catch (UndeclaredThrowableException e) {  if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {    Thread.interrupted();  }  return e.getCause();} @TO@ TryStatement@@try {  Object[] args=resolveArgs(method,wordsForArgs);  validateArgs(args,methodTarget);  return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);} catch (Exception e) {  return e;} @AT@ 5608 @LENGTH@ 247
---------INS SingleVariableDeclaration@@UndeclaredThrowableException e @TO@ CatchClause@@catch (UndeclaredThrowableException e) {  if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {    Thread.interrupted();  }  return e.getCause();} @AT@ 5615 @LENGTH@ 30
------------INS SimpleType@@UndeclaredThrowableException @TO@ SingleVariableDeclaration@@UndeclaredThrowableException e @AT@ 5615 @LENGTH@ 28
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@UndeclaredThrowableException e @AT@ 5644 @LENGTH@ 1
---------INS IfStatement@@if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {  Thread.interrupted();} @TO@ CatchClause@@catch (UndeclaredThrowableException e) {  if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {    Thread.interrupted();  }  return e.getCause();} @AT@ 5654 @LENGTH@ 169
------------INS InfixExpression@@e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException @TO@ IfStatement@@if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {  Thread.interrupted();} @AT@ 5658 @LENGTH@ 98
---------------INS InstanceofExpression@@e.getCause() instanceof InterruptedException @TO@ InfixExpression@@e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException @AT@ 5658 @LENGTH@ 44
------------------INS MethodInvocation@@e.getCause() @TO@ InstanceofExpression@@e.getCause() instanceof InterruptedException @AT@ 5658 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 5658 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 5660 @LENGTH@ 10
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e.getCause() instanceof InterruptedException @AT@ 5671 @LENGTH@ 10
------------------INS SimpleType@@InterruptedException @TO@ InstanceofExpression@@e.getCause() instanceof InterruptedException @AT@ 5682 @LENGTH@ 20
---------------INS Operator@@|| @TO@ InfixExpression@@e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException @AT@ 5702 @LENGTH@ 2
---------------INS InstanceofExpression@@e.getCause() instanceof ClosedByInterruptException @TO@ InfixExpression@@e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException @AT@ 5706 @LENGTH@ 50
------------------INS MethodInvocation@@e.getCause() @TO@ InstanceofExpression@@e.getCause() instanceof ClosedByInterruptException @AT@ 5706 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 5706 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 5708 @LENGTH@ 10
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e.getCause() instanceof ClosedByInterruptException @AT@ 5719 @LENGTH@ 10
------------------INS SimpleType@@ClosedByInterruptException @TO@ InstanceofExpression@@e.getCause() instanceof ClosedByInterruptException @AT@ 5730 @LENGTH@ 26
------------INS Block@@ThenBody:{  Thread.interrupted();} @TO@ IfStatement@@if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {  Thread.interrupted();} @AT@ 5758 @LENGTH@ 65
---------------INS ExpressionStatement@@MethodInvocation:Thread.interrupted() @TO@ Block@@ThenBody:{  Thread.interrupted();} @AT@ 5766 @LENGTH@ 21
------------------INS MethodInvocation@@Thread.interrupted() @TO@ ExpressionStatement@@MethodInvocation:Thread.interrupted() @AT@ 5766 @LENGTH@ 20
---------------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.interrupted() @AT@ 5766 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:interrupted:[] @TO@ MethodInvocation@@Thread.interrupted() @AT@ 5773 @LENGTH@ 13
---------INS ReturnStatement@@MethodInvocation:e.getCause() @TO@ CatchClause@@catch (UndeclaredThrowableException e) {  if (e.getCause() instanceof InterruptedException || e.getCause() instanceof ClosedByInterruptException) {    Thread.interrupted();  }  return e.getCause();} @AT@ 5829 @LENGTH@ 20
------------INS MethodInvocation@@e.getCause() @TO@ ReturnStatement@@MethodInvocation:e.getCause() @AT@ 5836 @LENGTH@ 12
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 5836 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 5838 @LENGTH@ 10
------INS Block@@FinallyBody:{  Signals.unregister("INT",sh);} @TO@ TryStatement@@try {  Object[] args=resolveArgs(method,wordsForArgs);  validateArgs(args,methodTarget);  return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);} catch (Exception e) {  return e;} @AT@ 5915 @LENGTH@ 43
---------INS ExpressionStatement@@MethodInvocation:Signals.unregister("INT",sh) @TO@ Block@@FinallyBody:{  Signals.unregister("INT",sh);} @AT@ 5922 @LENGTH@ 30
------------INS MethodInvocation@@Signals.unregister("INT",sh) @TO@ ExpressionStatement@@MethodInvocation:Signals.unregister("INT",sh) @AT@ 5922 @LENGTH@ 29
---------------INS SimpleName@@Name:Signals @TO@ MethodInvocation@@Signals.unregister("INT",sh) @AT@ 5922 @LENGTH@ 7
---------------INS SimpleName@@MethodName:unregister:["INT", sh] @TO@ MethodInvocation@@Signals.unregister("INT",sh) @AT@ 5930 @LENGTH@ 21
------------------INS StringLiteral@@"INT" @TO@ SimpleName@@MethodName:unregister:["INT", sh] @AT@ 5941 @LENGTH@ 5
------------------INS SimpleName@@sh @TO@ SimpleName@@MethodName:unregister:["INT", sh] @AT@ 5948 @LENGTH@ 2
---INS VariableDeclarationStatement@@Thread commandThread=Thread.currentThread(); @TO@ Block@@ThenBody:{  List<String> wordsForArgs=wordsForArguments(command,words);  Method method=methodTarget.getMethod();  try {    Object[] args=resolveArgs(method,wordsForArgs);    validateArgs(args,methodTarget);    return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);  } catch (  Exception e) {    return e;  }} @AT@ 5291 @LENGTH@ 46
------INS SimpleType@@Thread @TO@ VariableDeclarationStatement@@Thread commandThread=Thread.currentThread(); @AT@ 5291 @LENGTH@ 6
------INS VariableDeclarationFragment@@commandThread=Thread.currentThread() @TO@ VariableDeclarationStatement@@Thread commandThread=Thread.currentThread(); @AT@ 5298 @LENGTH@ 38
---------INS SimpleName@@commandThread @TO@ VariableDeclarationFragment@@commandThread=Thread.currentThread() @AT@ 5298 @LENGTH@ 13
---------INS MethodInvocation@@Thread.currentThread() @TO@ VariableDeclarationFragment@@commandThread=Thread.currentThread() @AT@ 5314 @LENGTH@ 22
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread() @AT@ 5314 @LENGTH@ 6
------------INS SimpleName@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread() @AT@ 5321 @LENGTH@ 15
---INS VariableDeclarationStatement@@Object sh=Signals.register("INT",() -> commandThread.interrupt()); @TO@ Block@@ThenBody:{  List<String> wordsForArgs=wordsForArguments(command,words);  Method method=methodTarget.getMethod();  try {    Object[] args=resolveArgs(method,wordsForArgs);    validateArgs(args,methodTarget);    return ReflectionUtils.invokeMethod(method,methodTarget.getBean(),args);  } catch (  Exception e) {    return e;  }} @AT@ 5342 @LENGTH@ 69
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object sh=Signals.register("INT",() -> commandThread.interrupt()); @AT@ 5342 @LENGTH@ 6
------INS VariableDeclarationFragment@@sh=Signals.register("INT",() -> commandThread.interrupt()) @TO@ VariableDeclarationStatement@@Object sh=Signals.register("INT",() -> commandThread.interrupt()); @AT@ 5349 @LENGTH@ 61
---------INS SimpleName@@sh @TO@ VariableDeclarationFragment@@sh=Signals.register("INT",() -> commandThread.interrupt()) @AT@ 5349 @LENGTH@ 2
---------INS MethodInvocation@@Signals.register("INT",() -> commandThread.interrupt()) @TO@ VariableDeclarationFragment@@sh=Signals.register("INT",() -> commandThread.interrupt()) @AT@ 5354 @LENGTH@ 56
------------INS SimpleName@@Name:Signals @TO@ MethodInvocation@@Signals.register("INT",() -> commandThread.interrupt()) @AT@ 5354 @LENGTH@ 7
------------INS SimpleName@@MethodName:register:["INT", () -> commandThread.interrupt()] @TO@ MethodInvocation@@Signals.register("INT",() -> commandThread.interrupt()) @AT@ 5362 @LENGTH@ 48
---------------INS StringLiteral@@"INT" @TO@ SimpleName@@MethodName:register:["INT", () -> commandThread.interrupt()] @AT@ 5371 @LENGTH@ 5
---------------INS LambdaExpression@@() -> commandThread.interrupt() @TO@ SimpleName@@MethodName:register:["INT", () -> commandThread.interrupt()] @AT@ 5378 @LENGTH@ 31
------------------INS MethodInvocation@@commandThread.interrupt() @TO@ LambdaExpression@@() -> commandThread.interrupt() @AT@ 5384 @LENGTH@ 25
---------------------INS SimpleName@@Name:commandThread @TO@ MethodInvocation@@commandThread.interrupt() @AT@ 5384 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:interrupt:[] @TO@ MethodInvocation@@commandThread.interrupt() @AT@ 5398 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 5610 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 5520 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 5610 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 5610 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 5624 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 5631 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 5637 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 5637 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 5646 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 5659 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 5659 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 5680 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 5683 @LENGTH@ 4


UPD FieldDeclaration@@int, [port=6379] @TO@ int, [port=SettingsUtils.getPort()] @AT@ 1002 @LENGTH@ 16
---UPD VariableDeclarationFragment@@port=6379 @TO@ port=SettingsUtils.getPort() @AT@ 1006 @LENGTH@ 11
------DEL NumberLiteral@@6379 @AT@ 1013 @LENGTH@ 4
------INS MethodInvocation@@SettingsUtils.getPort() @TO@ VariableDeclarationFragment@@port=6379 @AT@ 1101 @LENGTH@ 23
---------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 1101 @LENGTH@ 13
---------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@SettingsUtils.getPort() @AT@ 1115 @LENGTH@ 9


UPD VariableDeclarationStatement@@FlowExecutionListener listener=new FlowExecutionListenerAdapter(){
}
; @TO@ FlowExecutionListener listener=new FlowExecutionListener(){
}
; @AT@ 5218 @LENGTH@ 75
---UPD VariableDeclarationFragment@@listener=new FlowExecutionListenerAdapter(){
}
 @TO@ listener=new FlowExecutionListener(){
}
 @AT@ 5240 @LENGTH@ 52
------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 5251 @LENGTH@ 41
---------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 5255 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @TO@ TypeDeclaration@@[public]ClaimAccessorTests,  @AT@ 2723 @LENGTH@ 403
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2723 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2730 @LENGTH@ 4
---INS SimpleName@@MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2735 @LENGTH@ 55
---INS VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2797 @LENGTH@ 43
------INS SimpleType@@Instant @TO@ VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @AT@ 2797 @LENGTH@ 7
------INS VariableDeclarationFragment@@expectedClaimValue=Instant.now() @TO@ VariableDeclarationStatement@@Instant expectedClaimValue=Instant.now(); @AT@ 2805 @LENGTH@ 34
---------INS SimpleName@@expectedClaimValue @TO@ VariableDeclarationFragment@@expectedClaimValue=Instant.now() @AT@ 2805 @LENGTH@ 18
---------INS MethodInvocation@@Instant.now() @TO@ VariableDeclarationFragment@@expectedClaimValue=Instant.now() @AT@ 2826 @LENGTH@ 13
------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.now() @AT@ 2826 @LENGTH@ 7
------------INS SimpleName@@MethodName:now:[] @TO@ MethodInvocation@@Instant.now() @AT@ 2834 @LENGTH@ 5
---INS VariableDeclarationStatement@@String claimName="doubleSeconds"; @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2843 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String claimName="doubleSeconds"; @AT@ 2843 @LENGTH@ 6
------INS VariableDeclarationFragment@@claimName="doubleSeconds" @TO@ VariableDeclarationStatement@@String claimName="doubleSeconds"; @AT@ 2850 @LENGTH@ 27
---------INS SimpleName@@claimName @TO@ VariableDeclarationFragment@@claimName="doubleSeconds" @AT@ 2850 @LENGTH@ 9
---------INS StringLiteral@@"doubleSeconds" @TO@ VariableDeclarationFragment@@claimName="doubleSeconds" @AT@ 2862 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2881 @LENGTH@ 92
------INS MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()) @TO@ ExpressionStatement@@MethodInvocation:this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()) @AT@ 2881 @LENGTH@ 91
---------INS FieldAccess@@this.claims @TO@ MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()) @AT@ 2881 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.claims @AT@ 2881 @LENGTH@ 4
------------INS SimpleName@@claims @TO@ FieldAccess@@this.claims @AT@ 2886 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()] @TO@ MethodInvocation@@this.claims.put(claimName,Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()) @AT@ 2893 @LENGTH@ 79
------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()] @AT@ 2897 @LENGTH@ 9
------------INS MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue() @TO@ SimpleName@@MethodName:put:[claimName, Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue()] @AT@ 2908 @LENGTH@ 63
---------------INS MethodInvocation@@MethodName:valueOf:[expectedClaimValue.getEpochSecond()] @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue() @AT@ 2908 @LENGTH@ 49
------------------INS MethodInvocation@@expectedClaimValue.getEpochSecond() @TO@ MethodInvocation@@MethodName:valueOf:[expectedClaimValue.getEpochSecond()] @AT@ 2921 @LENGTH@ 35
---------------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.getEpochSecond() @AT@ 2921 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getEpochSecond:[] @TO@ MethodInvocation@@expectedClaimValue.getEpochSecond() @AT@ 2940 @LENGTH@ 16
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue() @AT@ 2908 @LENGTH@ 4
---------------INS SimpleName@@MethodName:doubleValue:[] @TO@ MethodInvocation@@Long.valueOf(expectedClaimValue.getEpochSecond()).doubleValue() @AT@ 2958 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @TO@ MethodDeclaration@@public, void, MethodName:getClaimAsInstantWhenDoubleTypeSecondsThenReturnInstant,  @AT@ 2977 @LENGTH@ 146
------INS MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 2977 @LENGTH@ 145
---------INS MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsInstant(claimName)] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 2977 @LENGTH@ 59
------------INS MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @TO@ MethodInvocation@@MethodName:assertThat:[this.claimAccessor.getClaimAsInstant(claimName)] @AT@ 2988 @LENGTH@ 47
---------------INS FieldAccess@@this.claimAccessor @TO@ MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @AT@ 2988 @LENGTH@ 18
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.claimAccessor @AT@ 2988 @LENGTH@ 4
------------------INS SimpleName@@claimAccessor @TO@ FieldAccess@@this.claimAccessor @AT@ 2993 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getClaimAsInstant:[claimName] @TO@ MethodInvocation@@this.claimAccessor.getClaimAsInstant(claimName) @AT@ 3007 @LENGTH@ 28
------------------INS SimpleName@@claimName @TO@ SimpleName@@MethodName:getClaimAsInstant:[claimName] @AT@ 3025 @LENGTH@ 9
---------INS SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @TO@ MethodInvocation@@assertThat(this.claimAccessor.getClaimAsInstant(claimName)).isBetween(expectedClaimValue.minusSeconds(1),expectedClaimValue.plusSeconds(1)) @AT@ 3037 @LENGTH@ 85
------------INS MethodInvocation@@expectedClaimValue.minusSeconds(1) @TO@ SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @AT@ 3052 @LENGTH@ 34
---------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.minusSeconds(1) @AT@ 3052 @LENGTH@ 18
---------------INS SimpleName@@MethodName:minusSeconds:[1] @TO@ MethodInvocation@@expectedClaimValue.minusSeconds(1) @AT@ 3071 @LENGTH@ 15
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:minusSeconds:[1] @AT@ 3084 @LENGTH@ 1
------------INS MethodInvocation@@expectedClaimValue.plusSeconds(1) @TO@ SimpleName@@MethodName:isBetween:[expectedClaimValue.minusSeconds(1), expectedClaimValue.plusSeconds(1)] @AT@ 3088 @LENGTH@ 33
---------------INS SimpleName@@Name:expectedClaimValue @TO@ MethodInvocation@@expectedClaimValue.plusSeconds(1) @AT@ 3088 @LENGTH@ 18
---------------INS SimpleName@@MethodName:plusSeconds:[1] @TO@ MethodInvocation@@expectedClaimValue.plusSeconds(1) @AT@ 3107 @LENGTH@ 14
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:plusSeconds:[1] @AT@ 3119 @LENGTH@ 1


UPD FieldDeclaration@@private, NimbusUserInfoResponseClient, [userInfoResponseClient=new NimbusUserInfoResponseClient()] @TO@ private, final, OAuth2UserService<OAuth2UserRequest,OAuth2User>, [defaultUserService=new DefaultOAuth2UserService()] @AT@ 2229 @LENGTH@ 97
---DEL SimpleType@@NimbusUserInfoResponseClient @AT@ 2237 @LENGTH@ 28
---UPD VariableDeclarationFragment@@userInfoResponseClient=new NimbusUserInfoResponseClient() @TO@ defaultUserService=new DefaultOAuth2UserService() @AT@ 2266 @LENGTH@ 59
------UPD SimpleName@@userInfoResponseClient @TO@ defaultUserService @AT@ 2266 @LENGTH@ 22
------UPD ClassInstanceCreation@@NimbusUserInfoResponseClient[] @TO@ DefaultOAuth2UserService[] @AT@ 2291 @LENGTH@ 34
---------UPD SimpleType@@NimbusUserInfoResponseClient @TO@ DefaultOAuth2UserService @AT@ 2295 @LENGTH@ 28
---INS Modifier@@final @TO@ FieldDeclaration@@private, NimbusUserInfoResponseClient, [userInfoResponseClient=new NimbusUserInfoResponseClient()] @AT@ 2383 @LENGTH@ 5
---INS ParameterizedType@@OAuth2UserService<OAuth2UserRequest,OAuth2User> @TO@ FieldDeclaration@@private, NimbusUserInfoResponseClient, [userInfoResponseClient=new NimbusUserInfoResponseClient()] @AT@ 2389 @LENGTH@ 48
------INS SimpleType@@OAuth2UserService @TO@ ParameterizedType@@OAuth2UserService<OAuth2UserRequest,OAuth2User> @AT@ 2389 @LENGTH@ 17
------INS SimpleType@@OAuth2UserRequest @TO@ ParameterizedType@@OAuth2UserService<OAuth2UserRequest,OAuth2User> @AT@ 2407 @LENGTH@ 17
------INS SimpleType@@OAuth2User @TO@ ParameterizedType@@OAuth2UserService<OAuth2UserRequest,OAuth2User> @AT@ 2426 @LENGTH@ 10


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf); @AT@ 2011 @LENGTH@ 64
---DEL PrimitiveType@@int @AT@ 2011 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 2015 @LENGTH@ 59
------DEL SimpleName@@port @AT@ 2015 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:sb.append(clientAuthenticationUrlToClientName.getValue()) @TO@ MethodInvocation:sb.append(HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8")) @AT@ 10358 @LENGTH@ 58
---UPD MethodInvocation@@sb.append(clientAuthenticationUrlToClientName.getValue()) @TO@ sb.append(HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8")) @AT@ 10358 @LENGTH@ 57
------UPD SimpleName@@MethodName:append:[clientAuthenticationUrlToClientName.getValue()] @TO@ MethodName:append:[HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8")] @AT@ 10361 @LENGTH@ 54
---------INS MethodInvocation@@HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8") @TO@ SimpleName@@MethodName:append:[clientAuthenticationUrlToClientName.getValue()] @AT@ 10415 @LENGTH@ 77
------------INS SimpleName@@Name:HtmlUtils @TO@ MethodInvocation@@HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8") @AT@ 10415 @LENGTH@ 9
------------INS SimpleName@@MethodName:htmlEscape:[clientAuthenticationUrlToClientName.getValue(), "UTF-8"] @TO@ MethodInvocation@@HtmlUtils.htmlEscape(clientAuthenticationUrlToClientName.getValue(),"UTF-8") @AT@ 10425 @LENGTH@ 67
---------------MOV MethodInvocation@@clientAuthenticationUrlToClientName.getValue() @TO@ SimpleName@@MethodName:htmlEscape:[clientAuthenticationUrlToClientName.getValue(), "UTF-8"] @AT@ 10368 @LENGTH@ 46
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:htmlEscape:[clientAuthenticationUrlToClientName.getValue(), "UTF-8"] @AT@ 10484 @LENGTH@ 7


INS IfStatement@@if (!authorizationRequests.isEmpty()) {  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} else {  request.getSession().removeAttribute(this.sessionAttributeName);} @TO@ MethodDeclaration@@public, OAuth2AuthorizationRequest, MethodName:removeAuthorizationRequest, HttpServletRequest request,  @AT@ 3391 @LENGTH@ 210
---INS PrefixExpression@@!authorizationRequests.isEmpty() @TO@ IfStatement@@if (!authorizationRequests.isEmpty()) {  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} else {  request.getSession().removeAttribute(this.sessionAttributeName);} @AT@ 3395 @LENGTH@ 32
------INS Operator@@! @TO@ PrefixExpression@@!authorizationRequests.isEmpty() @AT@ 3395 @LENGTH@ 1
------INS MethodInvocation@@authorizationRequests.isEmpty() @TO@ PrefixExpression@@!authorizationRequests.isEmpty() @AT@ 3396 @LENGTH@ 31
---------INS SimpleName@@Name:authorizationRequests @TO@ MethodInvocation@@authorizationRequests.isEmpty() @AT@ 3396 @LENGTH@ 21
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@authorizationRequests.isEmpty() @AT@ 3418 @LENGTH@ 9
---INS Block@@ThenBody:{  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} @TO@ IfStatement@@if (!authorizationRequests.isEmpty()) {  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} else {  request.getSession().removeAttribute(this.sessionAttributeName);} @AT@ 3429 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests) @TO@ Block@@ThenBody:{  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} @AT@ 3391 @LENGTH@ 84
---INS Block@@ElseBody:{  request.getSession().removeAttribute(this.sessionAttributeName);} @TO@ IfStatement@@if (!authorizationRequests.isEmpty()) {  request.getSession().setAttribute(this.sessionAttributeName,authorizationRequests);} else {  request.getSession().removeAttribute(this.sessionAttributeName);} @AT@ 3528 @LENGTH@ 73
------INS ExpressionStatement@@MethodInvocation:request.getSession().removeAttribute(this.sessionAttributeName) @TO@ Block@@ElseBody:{  request.getSession().removeAttribute(this.sessionAttributeName);} @AT@ 3533 @LENGTH@ 64
---------INS MethodInvocation@@request.getSession().removeAttribute(this.sessionAttributeName) @TO@ ExpressionStatement@@MethodInvocation:request.getSession().removeAttribute(this.sessionAttributeName) @AT@ 3533 @LENGTH@ 63
------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().removeAttribute(this.sessionAttributeName) @AT@ 3533 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().removeAttribute(this.sessionAttributeName) @AT@ 3533 @LENGTH@ 7
------------INS SimpleName@@MethodName:removeAttribute:[this.sessionAttributeName] @TO@ MethodInvocation@@request.getSession().removeAttribute(this.sessionAttributeName) @AT@ 3554 @LENGTH@ 42
---------------INS FieldAccess@@this.sessionAttributeName @TO@ SimpleName@@MethodName:removeAttribute:[this.sessionAttributeName] @AT@ 3570 @LENGTH@ 25
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.sessionAttributeName @AT@ 3570 @LENGTH@ 4
------------------INS SimpleName@@sessionAttributeName @TO@ FieldAccess@@this.sessionAttributeName @AT@ 3575 @LENGTH@ 20


UPD Block@@ThenBody:{  int metaStorePort=MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf());  getHiveConf().setVar(ConfVars.METASTOREURIS,"thrift://localhost:" + metaStorePort);} @TO@ ThenBody:{  MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf());} @AT@ 13129 @LENGTH@ 183
---DEL VariableDeclarationStatement@@int metaStorePort=MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf()); @AT@ 13137 @LENGTH@ 78
------DEL PrimitiveType@@int @AT@ 13137 @LENGTH@ 3
------DEL VariableDeclarationFragment@@metaStorePort=MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf()) @AT@ 13141 @LENGTH@ 73
---------DEL SimpleName@@metaStorePort @AT@ 13141 @LENGTH@ 13
---UPD ExpressionStatement@@MethodInvocation:getHiveConf().setVar(ConfVars.METASTOREURIS,"thrift://localhost:" + metaStorePort) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf()) @AT@ 13222 @LENGTH@ 84
------MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(getHiveConf()) @TO@ ExpressionStatement@@MethodInvocation:getHiveConf().setVar(ConfVars.METASTOREURIS,"thrift://localhost:" + metaStorePort) @AT@ 13157 @LENGTH@ 57
------DEL MethodInvocation@@getHiveConf().setVar(ConfVars.METASTOREURIS,"thrift://localhost:" + metaStorePort) @AT@ 13222 @LENGTH@ 83
---------DEL MethodInvocation@@MethodName:getHiveConf:[] @AT@ 13222 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setVar:[ConfVars.METASTOREURIS, "thrift://localhost:" + metaStorePort] @AT@ 13236 @LENGTH@ 69
------------DEL QualifiedName@@ConfVars.METASTOREURIS @AT@ 13243 @LENGTH@ 22
---------------DEL SimpleName@@ConfVars @AT@ 13243 @LENGTH@ 8
---------------DEL SimpleName@@METASTOREURIS @AT@ 13252 @LENGTH@ 13
------------DEL InfixExpression@@"thrift://localhost:" + metaStorePort @AT@ 13267 @LENGTH@ 37
---------------DEL StringLiteral@@"thrift://localhost:" @AT@ 13267 @LENGTH@ 21
---------------DEL Operator@@+ @AT@ 13288 @LENGTH@ 1
---------------DEL SimpleName@@metaStorePort @AT@ 13291 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:mainContext.putAll(Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @TO@ MethodInvocation:mainContext.putAll(this.repository.load(exchange).as(ReactiveSecurityContextHolder::withSecurityContext)) @AT@ 1758 @LENGTH@ 135
---UPD MethodInvocation@@mainContext.putAll(Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @TO@ mainContext.putAll(this.repository.load(exchange).as(ReactiveSecurityContextHolder::withSecurityContext)) @AT@ 1765 @LENGTH@ 127
------UPD SimpleName@@MethodName:putAll:[Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)] @TO@ MethodName:putAll:[this.repository.load(exchange).as(ReactiveSecurityContextHolder::withSecurityContext)] @AT@ 1777 @LENGTH@ 115
---------UPD MethodInvocation@@Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @TO@ this.repository.load(exchange).as(ReactiveSecurityContextHolder::withSecurityContext) @AT@ 1784 @LENGTH@ 107
------------DEL MethodInvocation@@MethodName:defer:[() -> this.repository.load(exchange)] @AT@ 1784 @LENGTH@ 48
---------------DEL LambdaExpression@@() -> this.repository.load(exchange) @AT@ 1795 @LENGTH@ 36
------------------DEL MethodInvocation@@this.repository.load(exchange) @AT@ 1801 @LENGTH@ 30
---------------------DEL SimpleName@@MethodName:load:[exchange] @AT@ 1817 @LENGTH@ 14
------------------------DEL SimpleName@@exchange @AT@ 1822 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:load:[exchange] @TO@ MethodInvocation@@Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @AT@ 1784 @LENGTH@ 30
---------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:load:[exchange] @AT@ 1805 @LENGTH@ 8
------------DEL SimpleName@@Name:Mono @AT@ 1784 @LENGTH@ 4
------------MOV FieldAccess@@this.repository @TO@ MethodInvocation@@Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @AT@ 1801 @LENGTH@ 15


UPD IfStatement@@if (reset) {  Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset",indentLevel);} else {  Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)",indentLevel);} @TO@ if (reset) {  Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset:\n%s",indentLevel,stringBuilder);} else {  Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s",indentLevel,stringBuilder);} @AT@ 2409 @LENGTH@ 316
---UPD Block@@ThenBody:{  Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset",indentLevel);} @TO@ ThenBody:{  Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset:\n%s",indentLevel,stringBuilder);} @AT@ 2420 @LENGTH@ 137
------UPD ExpressionStatement@@MethodInvocation:Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset",indentLevel) @TO@ MethodInvocation:Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset:\n%s",indentLevel,stringBuilder) @AT@ 2428 @LENGTH@ 123
---------UPD MethodInvocation@@Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset",indentLevel) @TO@ Validate.isTrue(indentLevel == 0,"Indent level must be 0 (not %d) to terminate following a reset:\n%s",indentLevel,stringBuilder) @AT@ 2428 @LENGTH@ 122
------------UPD SimpleName@@MethodName:isTrue:[indentLevel == 0, "Indent level must be 0 (not %d) to terminate following a reset", indentLevel] @TO@ MethodName:isTrue:[indentLevel == 0, "Indent level must be 0 (not %d) to terminate following a reset:\n%s", indentLevel, stringBuilder] @AT@ 2437 @LENGTH@ 113
---------------UPD StringLiteral@@"Indent level must be 0 (not %d) to terminate following a reset" @TO@ "Indent level must be 0 (not %d) to terminate following a reset:\n%s" @AT@ 2472 @LENGTH@ 64
---------------INS SimpleName@@stringBuilder @TO@ SimpleName@@MethodName:isTrue:[indentLevel == 0, "Indent level must be 0 (not %d) to terminate following a reset", indentLevel] @AT@ 2566 @LENGTH@ 13
---UPD Block@@ElseBody:{  Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)",indentLevel);} @TO@ ElseBody:{  Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s",indentLevel,stringBuilder);} @AT@ 2563 @LENGTH@ 162
------UPD ExpressionStatement@@MethodInvocation:Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)",indentLevel) @TO@ MethodInvocation:Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s",indentLevel,stringBuilder) @AT@ 2571 @LENGTH@ 148
---------UPD MethodInvocation@@Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)",indentLevel) @TO@ Validate.isTrue(indentLevel == 2,"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s",indentLevel,stringBuilder) @AT@ 2571 @LENGTH@ 147
------------UPD SimpleName@@MethodName:isTrue:[indentLevel == 2, "Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)", indentLevel] @TO@ MethodName:isTrue:[indentLevel == 2, "Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s", indentLevel, stringBuilder] @AT@ 2580 @LENGTH@ 138
---------------UPD StringLiteral@@"Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)" @TO@ "Indent level must be 2 (not %d) to terminate (use reset to indent to level 0):\n%s" @AT@ 2615 @LENGTH@ 79
---------------INS SimpleName@@stringBuilder @TO@ SimpleName@@MethodName:isTrue:[indentLevel == 2, "Indent level must be 2 (not %d) to terminate (use reset to indent to level 0)", indentLevel] @AT@ 2754 @LENGTH@ 13


UPD IfStatement@@if (!isChannelOpen() && this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  throw new IOException("Waiting for channel to re-open.");} else if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @TO@ if (channel != null && !channel.isOpen() && isAutomaticRecoveryEnabled()) {  throw new IOException("Waiting for channel to re-open.");} else if (channel == null || !isAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11273 @LENGTH@ 534
---UPD InfixExpression@@!isChannelOpen() && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11277 @LENGTH@ 77
---INS InfixExpression@@channel != null && !channel.isOpen() && isAutomaticRecoveryEnabled() @TO@ IfStatement@@if (!isChannelOpen() && this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  throw new IOException("Waiting for channel to re-open.");} else if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11277 @LENGTH@ 68
------INS InfixExpression@@channel != null && !channel.isOpen() @TO@ InfixExpression@@channel != null && !channel.isOpen() && isAutomaticRecoveryEnabled() @AT@ 11277 @LENGTH@ 36
---------INS InfixExpression@@channel != null @TO@ InfixExpression@@channel != null && !channel.isOpen() @AT@ 11277 @LENGTH@ 15
------------INS SimpleName@@channel @TO@ InfixExpression@@channel != null @AT@ 11277 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@channel != null @AT@ 11284 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@channel != null @AT@ 11288 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@channel != null && !channel.isOpen() @AT@ 11292 @LENGTH@ 2
---------INS PrefixExpression@@!channel.isOpen() @TO@ InfixExpression@@channel != null && !channel.isOpen() @AT@ 11296 @LENGTH@ 17
------------INS Operator@@! @TO@ PrefixExpression@@!channel.isOpen() @AT@ 11296 @LENGTH@ 1
------------INS MethodInvocation@@channel.isOpen() @TO@ PrefixExpression@@!channel.isOpen() @AT@ 11297 @LENGTH@ 16
---------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.isOpen() @AT@ 11297 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isOpen:[] @TO@ MethodInvocation@@channel.isOpen() @AT@ 11305 @LENGTH@ 8
------INS Operator@@&& @TO@ InfixExpression@@channel != null && !channel.isOpen() && isAutomaticRecoveryEnabled() @AT@ 11313 @LENGTH@ 2
------INS MethodInvocation@@MethodName:isAutomaticRecoveryEnabled:[] @TO@ InfixExpression@@channel != null && !channel.isOpen() && isAutomaticRecoveryEnabled() @AT@ 11317 @LENGTH@ 28
---UPD Block@@ElseBody:if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @TO@ ElseBody:if (channel == null || !isAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11500 @LENGTH@ 307
------UPD IfStatement@@if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @TO@ if (channel == null || !isAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11500 @LENGTH@ 307
---------INS InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @TO@ IfStatement@@if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11495 @LENGTH@ 48
------------INS InfixExpression@@channel == null @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11495 @LENGTH@ 15
---------------INS SimpleName@@channel @TO@ InfixExpression@@channel == null @AT@ 11495 @LENGTH@ 7
---------------INS Operator@@== @TO@ InfixExpression@@channel == null @AT@ 11502 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@channel == null @AT@ 11506 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11510 @LENGTH@ 2
------------INS PrefixExpression@@!isAutomaticRecoveryEnabled() @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11514 @LENGTH@ 29
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------DEL PrefixExpression@@!this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 58
------UPD IfStatement@@if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @TO@ if (channel == null || !isAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11500 @LENGTH@ 307
---------INS InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @TO@ IfStatement@@if (!this.consumer.getEndpoint().getAutomaticRecoveryEnabled()) {  log.info("Attempting to open a new rabbitMQ channel");  Connection conn=consumer.getConnection();  channel=openChannel(conn);  start();} @AT@ 11495 @LENGTH@ 48
------------INS InfixExpression@@channel == null @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11495 @LENGTH@ 15
---------------INS SimpleName@@channel @TO@ InfixExpression@@channel == null @AT@ 11495 @LENGTH@ 7
---------------INS Operator@@== @TO@ InfixExpression@@channel == null @AT@ 11502 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@channel == null @AT@ 11506 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11510 @LENGTH@ 2
------------INS PrefixExpression@@!isAutomaticRecoveryEnabled() @TO@ InfixExpression@@channel == null || !isAutomaticRecoveryEnabled() @AT@ 11514 @LENGTH@ 29
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV Operator@@! @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 1
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------------MOV MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ PrefixExpression@@!isAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 57
---------DEL PrefixExpression@@!this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11504 @LENGTH@ 58


UPD VariableDeclarationStatement@@long time=watch.stop(); @TO@ long time=watch.taken(); @AT@ 16158 @LENGTH@ 25
---UPD VariableDeclarationFragment@@time=watch.stop() @TO@ time=watch.taken() @AT@ 16163 @LENGTH@ 19
------UPD MethodInvocation@@watch.stop() @TO@ watch.taken() @AT@ 16170 @LENGTH@ 12
---------UPD SimpleName@@MethodName:stop:[] @TO@ MethodName:taken:[] @AT@ 16176 @LENGTH@ 6


UPD CatchClause@@catch (Throwable e) {  if (e instanceof Exception) {    executionException.set((Exception)e);  } else {    executionException.set(ObjectHelper.wrapRuntimeCamelException(e));  }} @TO@ catch (Throwable e) {  if (e instanceof Exception) {    executionException.set((Exception)e);  } else {    executionException.set(ObjectHelper.wrapRuntimeCamelException(e));  }  LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId());  LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId());  aggregationOnTheFlyDone.countDown();} @AT@ 15912 @LENGTH@ 494
---INS ExpressionStatement@@MethodInvocation:LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId()) @TO@ CatchClause@@catch (Throwable e) {  if (e instanceof Exception) {    executionException.set((Exception)e);  } else {    executionException.set(ObjectHelper.wrapRuntimeCamelException(e));  }} @AT@ 16551 @LENGTH@ 103
------INS MethodInvocation@@LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId()) @AT@ 16551 @LENGTH@ 102
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId()) @AT@ 16551 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Signaling we are done aggregating on the fly for exchangeId: {}", original.getExchangeId()] @TO@ MethodInvocation@@LOG.debug("Signaling we are done aggregating on the fly for exchangeId: {}",original.getExchangeId()) @AT@ 16555 @LENGTH@ 98
------------INS StringLiteral@@"Signaling we are done aggregating on the fly for exchangeId: {}" @TO@ SimpleName@@MethodName:debug:["Signaling we are done aggregating on the fly for exchangeId: {}", original.getExchangeId()] @AT@ 16561 @LENGTH@ 65
------------INS MethodInvocation@@original.getExchangeId() @TO@ SimpleName@@MethodName:debug:["Signaling we are done aggregating on the fly for exchangeId: {}", original.getExchangeId()] @AT@ 16628 @LENGTH@ 24
---------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getExchangeId() @AT@ 16628 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@original.getExchangeId() @AT@ 16637 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId()) @TO@ CatchClause@@catch (Throwable e) {  if (e instanceof Exception) {    executionException.set((Exception)e);  } else {    executionException.set(ObjectHelper.wrapRuntimeCamelException(e));  }} @AT@ 16671 @LENGTH@ 89
------INS MethodInvocation@@LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId()) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId()) @AT@ 16671 @LENGTH@ 88
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId()) @AT@ 16671 @LENGTH@ 3
---------INS SimpleName@@MethodName:trace:["Aggregate on the fly task done for exchangeId: {}", original.getExchangeId()] @TO@ MethodInvocation@@LOG.trace("Aggregate on the fly task done for exchangeId: {}",original.getExchangeId()) @AT@ 16675 @LENGTH@ 84
------------INS StringLiteral@@"Aggregate on the fly task done for exchangeId: {}" @TO@ SimpleName@@MethodName:trace:["Aggregate on the fly task done for exchangeId: {}", original.getExchangeId()] @AT@ 16681 @LENGTH@ 51
------------INS MethodInvocation@@original.getExchangeId() @TO@ SimpleName@@MethodName:trace:["Aggregate on the fly task done for exchangeId: {}", original.getExchangeId()] @AT@ 16734 @LENGTH@ 24
---------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getExchangeId() @AT@ 16734 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getExchangeId:[] @TO@ MethodInvocation@@original.getExchangeId() @AT@ 16743 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:aggregationOnTheFlyDone.countDown() @TO@ CatchClause@@catch (Throwable e) {  if (e instanceof Exception) {    executionException.set((Exception)e);  } else {    executionException.set(ObjectHelper.wrapRuntimeCamelException(e));  }} @AT@ 16777 @LENGTH@ 36
------INS MethodInvocation@@aggregationOnTheFlyDone.countDown() @TO@ ExpressionStatement@@MethodInvocation:aggregationOnTheFlyDone.countDown() @AT@ 16777 @LENGTH@ 35
---------INS SimpleName@@Name:aggregationOnTheFlyDone @TO@ MethodInvocation@@aggregationOnTheFlyDone.countDown() @AT@ 16777 @LENGTH@ 23
---------INS SimpleName@@MethodName:countDown:[] @TO@ MethodInvocation@@aggregationOnTheFlyDone.countDown() @AT@ 16801 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:System.setProperty("https.protocols","TLSv1,TLSv1.1,TLSv1.2") @TO@ MethodDeclaration@@public, static, void, MethodName:main, String[] args, Exception,  @AT@ 12034 @LENGTH@ 63
---INS MethodInvocation@@System.setProperty("https.protocols","TLSv1,TLSv1.1,TLSv1.2") @TO@ ExpressionStatement@@MethodInvocation:System.setProperty("https.protocols","TLSv1,TLSv1.1,TLSv1.2") @AT@ 12034 @LENGTH@ 62
------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty("https.protocols","TLSv1,TLSv1.1,TLSv1.2") @AT@ 12034 @LENGTH@ 6
------INS SimpleName@@MethodName:setProperty:["https.protocols", "TLSv1,TLSv1.1,TLSv1.2"] @TO@ MethodInvocation@@System.setProperty("https.protocols","TLSv1,TLSv1.1,TLSv1.2") @AT@ 12041 @LENGTH@ 55
---------INS StringLiteral@@"https.protocols" @TO@ SimpleName@@MethodName:setProperty:["https.protocols", "TLSv1,TLSv1.1,TLSv1.2"] @AT@ 12053 @LENGTH@ 17
---------INS StringLiteral@@"TLSv1,TLSv1.1,TLSv1.2" @TO@ SimpleName@@MethodName:setProperty:["https.protocols", "TLSv1,TLSv1.1,TLSv1.2"] @AT@ 12072 @LENGTH@ 23


UPD MethodDeclaration@@public, KeyboardBuilder, MethodName:addRow, List<InlineKeyboardButton> InlineKeyboardButtons,  @TO@ public, KeyboardBuilder, MethodName:addRow, List<InlineKeyboardButton> inlineKeyboardButtons,  @AT@ 3832 @LENGTH@ 178
---UPD SingleVariableDeclaration@@List<InlineKeyboardButton> InlineKeyboardButtons @TO@ List<InlineKeyboardButton> inlineKeyboardButtons @AT@ 3862 @LENGTH@ 48
------UPD SimpleName@@InlineKeyboardButtons @TO@ inlineKeyboardButtons @AT@ 3889 @LENGTH@ 21
---UPD ExpressionStatement@@MethodInvocation:keyboard.add(InlineKeyboardButtons) @TO@ MethodInvocation:keyboard.add(inlineKeyboardButtons) @AT@ 3931 @LENGTH@ 36
------UPD MethodInvocation@@keyboard.add(InlineKeyboardButtons) @TO@ keyboard.add(inlineKeyboardButtons) @AT@ 3931 @LENGTH@ 35
---------UPD SimpleName@@MethodName:add:[InlineKeyboardButtons] @TO@ MethodName:add:[inlineKeyboardButtons] @AT@ 3940 @LENGTH@ 26
------------UPD SimpleName@@InlineKeyboardButtons @TO@ inlineKeyboardButtons @AT@ 3944 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:setRepeatOperations, RepeatOperations batchTempate,  @TO@ public, void, MethodName:setRepeatOperations, RepeatOperations batchTemplate,  @AT@ 2219 @LENGTH@ 177
---UPD SingleVariableDeclaration@@RepeatOperations batchTempate @TO@ RepeatOperations batchTemplate @AT@ 2251 @LENGTH@ 29
------UPD SimpleName@@batchTempate @TO@ batchTemplate @AT@ 2268 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(batchTempate,"'repeatOperations' cannot be null.") @TO@ MethodInvocation:Assert.notNull(batchTemplate,"'repeatOperations' cannot be null.") @AT@ 2286 @LENGTH@ 67
------UPD MethodInvocation@@Assert.notNull(batchTempate,"'repeatOperations' cannot be null.") @TO@ Assert.notNull(batchTemplate,"'repeatOperations' cannot be null.") @AT@ 2286 @LENGTH@ 66
---------UPD SimpleName@@MethodName:notNull:[batchTempate, "'repeatOperations' cannot be null."] @TO@ MethodName:notNull:[batchTemplate, "'repeatOperations' cannot be null."] @AT@ 2293 @LENGTH@ 59
------------UPD SimpleName@@batchTempate @TO@ batchTemplate @AT@ 2301 @LENGTH@ 12
---UPD ExpressionStatement@@Assignment:this.repeatOperations=batchTempate @TO@ Assignment:this.repeatOperations=batchTemplate @AT@ 2356 @LENGTH@ 37
------UPD Assignment@@this.repeatOperations=batchTempate @TO@ this.repeatOperations=batchTemplate @AT@ 2356 @LENGTH@ 36
---------UPD SimpleName@@batchTempate @TO@ batchTemplate @AT@ 2380 @LENGTH@ 12


UPD FieldDeclaration@@String, [defaultDatasource] @TO@ String, [defaultDatasourceJndiName] @AT@ 1096 @LENGTH@ 25
---UPD VariableDeclarationFragment@@defaultDatasource @TO@ defaultDatasourceJndiName @AT@ 1103 @LENGTH@ 17
------UPD SimpleName@@defaultDatasource @TO@ defaultDatasourceJndiName @AT@ 1103 @LENGTH@ 17


UPD ExpressionStatement@@Assignment:this.attributes=(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ Assignment:this.attributes=(attributes != null ? attributes : Collections.emptySet()) @AT@ 1564 @LENGTH@ 100
---UPD Assignment@@this.attributes=(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ this.attributes=(attributes != null ? attributes : Collections.emptySet()) @AT@ 1564 @LENGTH@ 99
------UPD ParenthesizedExpression@@(attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet()) @TO@ (attributes != null ? attributes : Collections.emptySet()) @AT@ 1582 @LENGTH@ 81
---------UPD ConditionalExpression@@attributes != null ? attributes : Collections.<FlowElementAttribute>emptySet() @TO@ attributes != null ? attributes : Collections.emptySet() @AT@ 1583 @LENGTH@ 79
------------UPD MethodInvocation@@Collections.<FlowElementAttribute>emptySet() @TO@ Collections.emptySet() @AT@ 1617 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ MethodDeclaration@@private, S3Configuration, MethodName:getS3ConfigurationUseEncryption,  @AT@ 2921 @LENGTH@ 58
---INS MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2921 @LENGTH@ 57
------INS MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2921 @LENGTH@ 33
---------INS MethodInvocation@@s3Configuration.getRegion() @TO@ MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @AT@ 2926 @LENGTH@ 27
------------INS SimpleName@@Name:s3Configuration @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2926 @LENGTH@ 15
------------INS SimpleName@@MethodName:getRegion:[] @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2942 @LENGTH@ 11
------INS SimpleName@@MethodName:thenReturn:["US_EAST_1"] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2955 @LENGTH@ 23
---------INS StringLiteral@@"US_EAST_1" @TO@ SimpleName@@MethodName:thenReturn:["US_EAST_1"] @AT@ 2966 @LENGTH@ 11


UPD IfStatement@@if (Long.class.isAssignableFrom(claimValue.getClass())) {  return Instant.ofEpochSecond((Long)claimValue);} @TO@ if (Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass())) {  return Instant.ofEpochSecond(((Number)claimValue).longValue());} @AT@ 2656 @LENGTH@ 113
---INS InfixExpression@@Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass()) @TO@ IfStatement@@if (Long.class.isAssignableFrom(claimValue.getClass())) {  return Instant.ofEpochSecond((Long)claimValue);} @AT@ 2660 @LENGTH@ 171
------MOV MethodInvocation@@Long.class.isAssignableFrom(claimValue.getClass()) @TO@ InfixExpression@@Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2660 @LENGTH@ 50
------INS Operator@@|| @TO@ InfixExpression@@Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2710 @LENGTH@ 2
------INS MethodInvocation@@Integer.class.isAssignableFrom(claimValue.getClass()) @TO@ InfixExpression@@Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2718 @LENGTH@ 53
---------INS TypeLiteral@@Integer.class @TO@ MethodInvocation@@Integer.class.isAssignableFrom(claimValue.getClass()) @AT@ 2718 @LENGTH@ 13
---------INS SimpleName@@MethodName:isAssignableFrom:[claimValue.getClass()] @TO@ MethodInvocation@@Integer.class.isAssignableFrom(claimValue.getClass()) @AT@ 2732 @LENGTH@ 39
------------INS MethodInvocation@@claimValue.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[claimValue.getClass()] @AT@ 2749 @LENGTH@ 21
---------------INS SimpleName@@Name:claimValue @TO@ MethodInvocation@@claimValue.getClass() @AT@ 2749 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@claimValue.getClass() @AT@ 2760 @LENGTH@ 10
------INS MethodInvocation@@Double.class.isAssignableFrom(claimValue.getClass()) @TO@ InfixExpression@@Long.class.isAssignableFrom(claimValue.getClass()) || Integer.class.isAssignableFrom(claimValue.getClass()) || Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2779 @LENGTH@ 52
---------INS TypeLiteral@@Double.class @TO@ MethodInvocation@@Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2779 @LENGTH@ 12
---------INS SimpleName@@MethodName:isAssignableFrom:[claimValue.getClass()] @TO@ MethodInvocation@@Double.class.isAssignableFrom(claimValue.getClass()) @AT@ 2792 @LENGTH@ 39
------------INS MethodInvocation@@claimValue.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[claimValue.getClass()] @AT@ 2809 @LENGTH@ 21
---------------INS SimpleName@@Name:claimValue @TO@ MethodInvocation@@claimValue.getClass() @AT@ 2809 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@claimValue.getClass() @AT@ 2820 @LENGTH@ 10
---UPD Block@@ThenBody:{  return Instant.ofEpochSecond((Long)claimValue);} @TO@ ThenBody:{  return Instant.ofEpochSecond(((Number)claimValue).longValue());} @AT@ 2712 @LENGTH@ 57
------UPD ReturnStatement@@MethodInvocation:Instant.ofEpochSecond((Long)claimValue) @TO@ MethodInvocation:Instant.ofEpochSecond(((Number)claimValue).longValue()) @AT@ 2717 @LENGTH@ 48
---------UPD MethodInvocation@@Instant.ofEpochSecond((Long)claimValue) @TO@ Instant.ofEpochSecond(((Number)claimValue).longValue()) @AT@ 2724 @LENGTH@ 40
------------UPD SimpleName@@MethodName:ofEpochSecond:[(Long)claimValue] @TO@ MethodName:ofEpochSecond:[((Number)claimValue).longValue()] @AT@ 2732 @LENGTH@ 32
---------------DEL CastExpression@@(Long)claimValue @AT@ 2746 @LENGTH@ 17
---------------INS MethodInvocation@@((Number)claimValue).longValue() @TO@ SimpleName@@MethodName:ofEpochSecond:[(Long)claimValue] @AT@ 2867 @LENGTH@ 33
------------------INS ParenthesizedExpression@@((Number)claimValue) @TO@ MethodInvocation@@((Number)claimValue).longValue() @AT@ 2867 @LENGTH@ 21
---------------------INS CastExpression@@(Number)claimValue @TO@ ParenthesizedExpression@@((Number)claimValue) @AT@ 2868 @LENGTH@ 19
------------------------MOV SimpleType@@Long @TO@ CastExpression@@(Number)claimValue @AT@ 2747 @LENGTH@ 4
------------------------MOV SimpleName@@claimValue @TO@ CastExpression@@(Number)claimValue @AT@ 2753 @LENGTH@ 10
------------------INS SimpleName@@MethodName:longValue:[] @TO@ MethodInvocation@@((Number)claimValue).longValue() @AT@ 2889 @LENGTH@ 11


UPD FieldDeclaration@@public, String[], [unnormalizedPaths={"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"}] @TO@ public, String[], [unnormalizedPaths={"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","//path","//path/path","//path//path","/path//path"}] @AT@ 880 @LENGTH@ 152
---UPD VariableDeclarationFragment@@unnormalizedPaths={"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"} @TO@ unnormalizedPaths={"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","//path","//path/path","//path//path","/path//path"} @AT@ 896 @LENGTH@ 135
------UPD ArrayInitializer@@{"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"} @TO@ {"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","//path","//path/path","//path//path","/path//path"} @AT@ 916 @LENGTH@ 115
---------INS StringLiteral@@"//path" @TO@ ArrayInitializer@@{"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"} @AT@ 1019 @LENGTH@ 8
---------UPD StringLiteral@@"/path//" @TO@ "/path//path" @AT@ 1020 @LENGTH@ 9
---------INS StringLiteral@@"//path/path" @TO@ ArrayInitializer@@{"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"} @AT@ 1029 @LENGTH@ 13
---------INS StringLiteral@@"//path//path" @TO@ ArrayInitializer@@{"/..","/./path/","/path/path/.","/path/path//.","./path/../path//.","./path",".//path",".","/path//"} @AT@ 1044 @LENGTH@ 14


UPD VariableDeclarationStatement@@String remainder=ObjectHelper.after(getEndpointKey(),"//"); @TO@ String remainder=StringHelper.after(getEndpointKey(),"//"); @AT@ 13121 @LENGTH@ 62
---UPD VariableDeclarationFragment@@remainder=ObjectHelper.after(getEndpointKey(),"//") @TO@ remainder=StringHelper.after(getEndpointKey(),"//") @AT@ 13128 @LENGTH@ 54
------UPD MethodInvocation@@ObjectHelper.after(getEndpointKey(),"//") @TO@ StringHelper.after(getEndpointKey(),"//") @AT@ 13140 @LENGTH@ 42
---------UPD SimpleName@@Name:ObjectHelper @TO@ Name:StringHelper @AT@ 13140 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:metamodel.getEntities().stream().filter(it -> it.getJavaType().equals(entity)).findFirst().flatMap(it -> getSingularIdAttribute(it)).filter(it -> it.getJavaType().equals(attributeType)).map(it -> it.getName().equals(name)).orElse(false) @TO@ MethodInvocation:metamodel.getEntities().stream().filter(it -> entity.equals(it.getJavaType())).findFirst().flatMap(it -> getSingularIdAttribute(it)).filter(it -> it.getJavaType().equals(attributeType)).map(it -> it.getName().equals(name)).orElse(false) @AT@ 2314 @LENGTH@ 292
---UPD MethodInvocation@@metamodel.getEntities().stream().filter(it -> it.getJavaType().equals(entity)).findFirst().flatMap(it -> getSingularIdAttribute(it)).filter(it -> it.getJavaType().equals(attributeType)).map(it -> it.getName().equals(name)).orElse(false) @TO@ metamodel.getEntities().stream().filter(it -> entity.equals(it.getJavaType())).findFirst().flatMap(it -> getSingularIdAttribute(it)).filter(it -> it.getJavaType().equals(attributeType)).map(it -> it.getName().equals(name)).orElse(false) @AT@ 2321 @LENGTH@ 284
------UPD MethodInvocation@@MethodName:filter:[it -> it.getJavaType().equals(entity)] @TO@ MethodName:filter:[it -> entity.equals(it.getJavaType())] @AT@ 2321 @LENGTH@ 86
---------UPD LambdaExpression@@it -> it.getJavaType().equals(entity) @TO@ it -> entity.equals(it.getJavaType()) @AT@ 2369 @LENGTH@ 37
------------UPD MethodInvocation@@it.getJavaType().equals(entity) @TO@ entity.equals(it.getJavaType()) @AT@ 2375 @LENGTH@ 31
---------------DEL MethodInvocation@@MethodName:getJavaType:[] @AT@ 2375 @LENGTH@ 16
---------------UPD SimpleName@@Name:it @TO@ Name:entity @AT@ 2375 @LENGTH@ 2
---------------UPD SimpleName@@MethodName:equals:[entity] @TO@ MethodName:equals:[it.getJavaType()] @AT@ 2392 @LENGTH@ 14
------------------INS MethodInvocation@@it.getJavaType() @TO@ SimpleName@@MethodName:equals:[entity] @AT@ 2389 @LENGTH@ 16
---------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.getJavaType() @AT@ 2389 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getJavaType:[] @TO@ MethodInvocation@@it.getJavaType() @AT@ 2392 @LENGTH@ 13
------------------DEL SimpleName@@entity @AT@ 2399 @LENGTH@ 6


INS MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @TO@ TypeDeclaration@@[public]KeycloakAdapterConfigResolver, [KeycloakConfigResolver] @AT@ 1629 @LENGTH@ 180
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1629 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1637 @LENGTH@ 6
---INS ParameterizedType@@Supplier<IllegalStateException> @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1644 @LENGTH@ 31
------INS SimpleType@@Supplier @TO@ ParameterizedType@@Supplier<IllegalStateException> @AT@ 1644 @LENGTH@ 8
------INS SimpleType@@IllegalStateException @TO@ ParameterizedType@@Supplier<IllegalStateException> @AT@ 1653 @LENGTH@ 21
---INS SimpleName@@MethodName:throwException @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1676 @LENGTH@ 14
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1691 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 1691 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 1698 @LENGTH@ 4
---INS ReturnStatement@@LambdaExpression:() -> new IllegalStateException("No Keycloak configuration for the path " + path) @TO@ MethodDeclaration@@private, static, Supplier<IllegalStateException>, MethodName:throwException, String path,  @AT@ 1714 @LENGTH@ 89
------INS LambdaExpression@@() -> new IllegalStateException("No Keycloak configuration for the path " + path) @TO@ ReturnStatement@@LambdaExpression:() -> new IllegalStateException("No Keycloak configuration for the path " + path) @AT@ 1721 @LENGTH@ 81
---------INS ClassInstanceCreation@@IllegalStateException["No Keycloak configuration for the path " + path] @TO@ LambdaExpression@@() -> new IllegalStateException("No Keycloak configuration for the path " + path) @AT@ 1727 @LENGTH@ 75
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["No Keycloak configuration for the path " + path] @AT@ 1727 @LENGTH@ 3
------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["No Keycloak configuration for the path " + path] @AT@ 1731 @LENGTH@ 21
------------INS InfixExpression@@"No Keycloak configuration for the path " + path @TO@ ClassInstanceCreation@@IllegalStateException["No Keycloak configuration for the path " + path] @AT@ 1753 @LENGTH@ 48
---------------INS StringLiteral@@"No Keycloak configuration for the path " @TO@ InfixExpression@@"No Keycloak configuration for the path " + path @AT@ 1753 @LENGTH@ 41
---------------INS Operator@@+ @TO@ InfixExpression@@"No Keycloak configuration for the path " + path @AT@ 1794 @LENGTH@ 1
---------------INS SimpleName@@path @TO@ InfixExpression@@"No Keycloak configuration for the path " + path @AT@ 1797 @LENGTH@ 4


UPD TryStatement@@try {  DatabaseType databaseType=DatabaseType.fromMetaData(this.dataSource);  AbstractSqlPagingQueryProvider provider;switch (databaseType) {case DERBY:    provider=new DerbyPagingQueryProvider();  break;case DB2:case DB2VSE:case DB2ZOS:case DB2AS400:provider=new Db2PagingQueryProvider();break;case H2:provider=new H2PagingQueryProvider();break;case HSQL:provider=new HsqlPagingQueryProvider();break;case SQLSERVER:provider=new SqlServerPagingQueryProvider();break;case MYSQL:provider=new MySqlPagingQueryProvider();break;case ORACLE:provider=new OraclePagingQueryProvider();break;case POSTGRES:provider=new PostgresPagingQueryProvider();break;case SYBASE:provider=new SybasePagingQueryProvider();break;case SQLITE:provider=new SqlitePagingQueryProvider();break;default :throw new IllegalArgumentException("Unalbe to determine PaaginQueryProvider type");}provider.setSelectClause(this.selectClause);provider.setFromClause(this.fromClause);provider.setWhereClause(this.whereClause);provider.setGroupClause(this.groupClause);provider.setSortKeys(this.sortKeys);return provider;} catch (MetaDataAccessException e) {throw new IllegalArgumentException("Unable to determine PagingQueryProvider type",e);} @TO@ try {  DatabaseType databaseType=DatabaseType.fromMetaData(dataSource);  AbstractSqlPagingQueryProvider provider;switch (databaseType) {case DERBY:    provider=new DerbyPagingQueryProvider();  break;case DB2:case DB2VSE:case DB2ZOS:case DB2AS400:provider=new Db2PagingQueryProvider();break;case H2:provider=new H2PagingQueryProvider();break;case HSQL:provider=new HsqlPagingQueryProvider();break;case SQLSERVER:provider=new SqlServerPagingQueryProvider();break;case MYSQL:provider=new MySqlPagingQueryProvider();break;case ORACLE:provider=new OraclePagingQueryProvider();break;case POSTGRES:provider=new PostgresPagingQueryProvider();break;case SYBASE:provider=new SybasePagingQueryProvider();break;case SQLITE:provider=new SqlitePagingQueryProvider();break;default :throw new IllegalArgumentException("Unable to determine PagingQueryProvider type " + "from database type: " + databaseType);}provider.setSelectClause(this.selectClause);provider.setFromClause(this.fromClause);provider.setWhereClause(this.whereClause);provider.setGroupClause(this.groupClause);provider.setSortKeys(this.sortKeys);return provider;} catch (MetaDataAccessException e) {throw new IllegalArgumentException("Unable to determine PagingQueryProvider type",e);} @AT@ 10804 @LENGTH@ 1364
---UPD VariableDeclarationStatement@@DatabaseType databaseType=DatabaseType.fromMetaData(this.dataSource); @TO@ DatabaseType databaseType=DatabaseType.fromMetaData(dataSource); @AT@ 10813 @LENGTH@ 71
------UPD VariableDeclarationFragment@@databaseType=DatabaseType.fromMetaData(this.dataSource) @TO@ databaseType=DatabaseType.fromMetaData(dataSource) @AT@ 10826 @LENGTH@ 57
---------UPD MethodInvocation@@DatabaseType.fromMetaData(this.dataSource) @TO@ DatabaseType.fromMetaData(dataSource) @AT@ 10841 @LENGTH@ 42
------------UPD SimpleName@@MethodName:fromMetaData:[this.dataSource] @TO@ MethodName:fromMetaData:[dataSource] @AT@ 10854 @LENGTH@ 29
---------------INS SimpleName@@dataSource @TO@ SimpleName@@MethodName:fromMetaData:[this.dataSource] @AT@ 10865 @LENGTH@ 10
---------------DEL FieldAccess@@this.dataSource @AT@ 10867 @LENGTH@ 15
------------------DEL ThisExpression@@this @AT@ 10867 @LENGTH@ 4
------------------DEL SimpleName@@dataSource @AT@ 10872 @LENGTH@ 10
---UPD SwitchStatement@@switch (databaseType) {case DERBY:  provider=new DerbyPagingQueryProvider();break;case DB2:case DB2VSE:case DB2ZOS:case DB2AS400:provider=new Db2PagingQueryProvider();break;case H2:provider=new H2PagingQueryProvider();break;case HSQL:provider=new HsqlPagingQueryProvider();break;case SQLSERVER:provider=new SqlServerPagingQueryProvider();break;case MYSQL:provider=new MySqlPagingQueryProvider();break;case ORACLE:provider=new OraclePagingQueryProvider();break;case POSTGRES:provider=new PostgresPagingQueryProvider();break;case SYBASE:provider=new SybasePagingQueryProvider();break;case SQLITE:provider=new SqlitePagingQueryProvider();break;default :throw new IllegalArgumentException("Unalbe to determine PaaginQueryProvider type");} @TO@ switch (databaseType) {case DERBY:  provider=new DerbyPagingQueryProvider();break;case DB2:case DB2VSE:case DB2ZOS:case DB2AS400:provider=new Db2PagingQueryProvider();break;case H2:provider=new H2PagingQueryProvider();break;case HSQL:provider=new HsqlPagingQueryProvider();break;case SQLSERVER:provider=new SqlServerPagingQueryProvider();break;case MYSQL:provider=new MySqlPagingQueryProvider();break;case ORACLE:provider=new OraclePagingQueryProvider();break;case POSTGRES:provider=new PostgresPagingQueryProvider();break;case SYBASE:provider=new SybasePagingQueryProvider();break;case SQLITE:provider=new SqlitePagingQueryProvider();break;default :throw new IllegalArgumentException("Unable to determine PagingQueryProvider type " + "from database type: " + databaseType);} @AT@ 10934 @LENGTH@ 852
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unalbe to determine PaaginQueryProvider type") @TO@ ClassInstanceCreation:new IllegalArgumentException("Unable to determine PagingQueryProvider type " + "from database type: " + databaseType) @AT@ 11698 @LENGTH@ 83
---------UPD ClassInstanceCreation@@IllegalArgumentException["Unalbe to determine PaaginQueryProvider type"] @TO@ IllegalArgumentException["Unable to determine PagingQueryProvider type " + "from database type: " + databaseType] @AT@ 11704 @LENGTH@ 76
------------INS InfixExpression@@"Unable to determine PagingQueryProvider type " + "from database type: " + databaseType @TO@ ClassInstanceCreation@@IllegalArgumentException["Unalbe to determine PaaginQueryProvider type"] @AT@ 11726 @LENGTH@ 94
---------------INS StringLiteral@@"Unable to determine PagingQueryProvider type " @TO@ InfixExpression@@"Unable to determine PagingQueryProvider type " + "from database type: " + databaseType @AT@ 11726 @LENGTH@ 47
---------------INS Operator@@+ @TO@ InfixExpression@@"Unable to determine PagingQueryProvider type " + "from database type: " + databaseType @AT@ 11773 @LENGTH@ 1
---------------INS StringLiteral@@"from database type: " @TO@ InfixExpression@@"Unable to determine PagingQueryProvider type " + "from database type: " + databaseType @AT@ 11783 @LENGTH@ 22
---------------INS SimpleName@@databaseType @TO@ InfixExpression@@"Unable to determine PagingQueryProvider type " + "from database type: " + databaseType @AT@ 11808 @LENGTH@ 12
------------DEL StringLiteral@@"Unalbe to determine PaaginQueryProvider type" @AT@ 11733 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:verify(this.entry).setLastAccessedTime(Matchers.<Date>any()) @TO@ MethodInvocation:verify(this.entry).setLastAccessedTime(ArgumentMatchers.<Date>any()) @AT@ 4461 @LENGTH@ 61
---UPD MethodInvocation@@verify(this.entry).setLastAccessedTime(Matchers.<Date>any()) @TO@ verify(this.entry).setLastAccessedTime(ArgumentMatchers.<Date>any()) @AT@ 4461 @LENGTH@ 60
------UPD SimpleName@@MethodName:setLastAccessedTime:[Matchers.<Date>any()] @TO@ MethodName:setLastAccessedTime:[ArgumentMatchers.<Date>any()] @AT@ 4480 @LENGTH@ 41
---------UPD MethodInvocation@@Matchers.<Date>any() @TO@ ArgumentMatchers.<Date>any() @AT@ 4500 @LENGTH@ 20
------------UPD SimpleName@@Name:Matchers @TO@ Name:ArgumentMatchers @AT@ 4500 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2028 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 1938 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2028 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 2028 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 2042 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 2049 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 2055 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 2055 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 2064 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2077 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2077 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 2098 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 2101 @LENGTH@ 4


INS ExpressionStatement@@Assignment:this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @TO@ MethodDeclaration@@public, voidMethodName:OAuthClientHttpRequestFactory, ClientHttpRequestFactory delegate, ProtectedResourceDetails resource, OAuthConsumerSupport support,  @AT@ 1816 @LENGTH@ 225
---INS Assignment@@this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @TO@ ExpressionStatement@@Assignment:this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1816 @LENGTH@ 224
------INS FieldAccess@@this.additionalOAuthParameters @TO@ Assignment@@this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1816 @LENGTH@ 30
---------INS ThisExpression@@this @TO@ FieldAccess@@this.additionalOAuthParameters @AT@ 1816 @LENGTH@ 4
---------INS SimpleName@@additionalOAuthParameters @TO@ FieldAccess@@this.additionalOAuthParameters @AT@ 1821 @LENGTH@ 25
------INS Operator@@= @TO@ Assignment@@this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1846 @LENGTH@ 1
------INS ConditionalExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @TO@ Assignment@@this.additionalOAuthParameters=!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1849 @LENGTH@ 191
---------INS PrefixExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) @TO@ ConditionalExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1849 @LENGTH@ 60
------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) @AT@ 1849 @LENGTH@ 1
------------INS MethodInvocation@@CollectionUtils.isEmpty(resource.getAdditionalParameters()) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) @AT@ 1850 @LENGTH@ 59
---------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(resource.getAdditionalParameters()) @AT@ 1850 @LENGTH@ 15
---------------INS SimpleName@@MethodName:isEmpty:[resource.getAdditionalParameters()] @TO@ MethodInvocation@@CollectionUtils.isEmpty(resource.getAdditionalParameters()) @AT@ 1866 @LENGTH@ 43
------------------INS MethodInvocation@@resource.getAdditionalParameters() @TO@ SimpleName@@MethodName:isEmpty:[resource.getAdditionalParameters()] @AT@ 1874 @LENGTH@ 34
---------------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getAdditionalParameters() @AT@ 1874 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@resource.getAdditionalParameters() @AT@ 1883 @LENGTH@ 25
---------INS ClassInstanceCreation@@HashMap<String,String>[resource.getAdditionalParameters()] @TO@ ConditionalExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 1924 @LENGTH@ 63
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[resource.getAdditionalParameters()] @AT@ 1924 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[resource.getAdditionalParameters()] @AT@ 1928 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1928 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1936 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 1944 @LENGTH@ 6
------------INS MethodInvocation@@resource.getAdditionalParameters() @TO@ ClassInstanceCreation@@HashMap<String,String>[resource.getAdditionalParameters()] @AT@ 1952 @LENGTH@ 34
---------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getAdditionalParameters() @AT@ 1952 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getAdditionalParameters:[] @TO@ MethodInvocation@@resource.getAdditionalParameters() @AT@ 1961 @LENGTH@ 25
---------INS MethodInvocation@@Collections.<String,String>emptyMap() @TO@ ConditionalExpression@@!CollectionUtils.isEmpty(resource.getAdditionalParameters()) ? new HashMap<String,String>(resource.getAdditionalParameters()) : Collections.<String,String>emptyMap() @AT@ 2002 @LENGTH@ 38
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String,String>emptyMap() @AT@ 2002 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.<String,String>emptyMap() @AT@ 2030 @LENGTH@ 10


INS FieldDeclaration@@private, Map<String,PasswordEncoder>, [throwingDelegates] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DelegatingPasswordEncoderTests,  @AT@ 1425 @LENGTH@ 55
---INS Modifier@@private @TO@ FieldDeclaration@@private, Map<String,PasswordEncoder>, [throwingDelegates] @AT@ 1425 @LENGTH@ 7
---INS ParameterizedType@@Map<String,PasswordEncoder> @TO@ FieldDeclaration@@private, Map<String,PasswordEncoder>, [throwingDelegates] @AT@ 1433 @LENGTH@ 28
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,PasswordEncoder> @AT@ 1433 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,PasswordEncoder> @AT@ 1437 @LENGTH@ 6
------INS SimpleType@@PasswordEncoder @TO@ ParameterizedType@@Map<String,PasswordEncoder> @AT@ 1445 @LENGTH@ 15
---INS VariableDeclarationFragment@@throwingDelegates @TO@ FieldDeclaration@@private, Map<String,PasswordEncoder>, [throwingDelegates] @AT@ 1462 @LENGTH@ 17
------INS SimpleName@@throwingDelegates @TO@ VariableDeclarationFragment@@throwingDelegates @AT@ 1462 @LENGTH@ 17


UPD FieldDeclaration@@private, WebResponseExceptionTranslator, [exceptionTranslator=new DefaultWebResponseExceptionTranslator()] @TO@ private, WebResponseExceptionTranslator<OAuth2Exception>, [exceptionTranslator=new DefaultWebResponseExceptionTranslator()] @AT@ 2363 @LENGTH@ 105
---INS ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @TO@ FieldDeclaration@@private, WebResponseExceptionTranslator, [exceptionTranslator=new DefaultWebResponseExceptionTranslator()] @AT@ 2371 @LENGTH@ 47
------INS SimpleType@@WebResponseExceptionTranslator @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 2371 @LENGTH@ 30
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 2402 @LENGTH@ 15
---DEL SimpleType@@WebResponseExceptionTranslator @AT@ 2371 @LENGTH@ 30


INS IfStatement@@if (part_vals != null) {  for (  String partVal : part_vals) {    if (partVal == null) {      throw new MetaException("The partition value must not be null.");    }  }} @TO@ MethodDeclaration@@public, boolean, MethodName:dropPartition, String db_name, String tbl_name, List<String> part_vals, boolean deleteData, EnvironmentContext envContext, NoSuchObjectException, MetaException, TException,  @AT@ 39336 @LENGTH@ 196
---INS InfixExpression@@part_vals != null @TO@ IfStatement@@if (part_vals != null) {  for (  String partVal : part_vals) {    if (partVal == null) {      throw new MetaException("The partition value must not be null.");    }  }} @AT@ 39340 @LENGTH@ 17
------INS SimpleName@@part_vals @TO@ InfixExpression@@part_vals != null @AT@ 39340 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@part_vals != null @AT@ 39349 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@part_vals != null @AT@ 39353 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  String partVal : part_vals) {    if (partVal == null) {      throw new MetaException("The partition value must not be null.");    }  }} @TO@ IfStatement@@if (part_vals != null) {  for (  String partVal : part_vals) {    if (partVal == null) {      throw new MetaException("The partition value must not be null.");    }  }} @AT@ 39359 @LENGTH@ 173
------INS EnhancedForStatement@@for (String partVal : part_vals) {  if (partVal == null) {    throw new MetaException("The partition value must not be null.");  }} @TO@ Block@@ThenBody:{  for (  String partVal : part_vals) {    if (partVal == null) {      throw new MetaException("The partition value must not be null.");    }  }} @AT@ 39367 @LENGTH@ 159
---------INS SingleVariableDeclaration@@String partVal @TO@ EnhancedForStatement@@for (String partVal : part_vals) {  if (partVal == null) {    throw new MetaException("The partition value must not be null.");  }} @AT@ 39372 @LENGTH@ 14
------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String partVal @AT@ 39372 @LENGTH@ 6
------------INS SimpleName@@partVal @TO@ SingleVariableDeclaration@@String partVal @AT@ 39379 @LENGTH@ 7
---------INS SimpleName@@part_vals @TO@ EnhancedForStatement@@for (String partVal : part_vals) {  if (partVal == null) {    throw new MetaException("The partition value must not be null.");  }} @AT@ 39389 @LENGTH@ 9
---------INS IfStatement@@if (partVal == null) {  throw new MetaException("The partition value must not be null.");} @TO@ EnhancedForStatement@@for (String partVal : part_vals) {  if (partVal == null) {    throw new MetaException("The partition value must not be null.");  }} @AT@ 39410 @LENGTH@ 108
------------INS InfixExpression@@partVal == null @TO@ IfStatement@@if (partVal == null) {  throw new MetaException("The partition value must not be null.");} @AT@ 39414 @LENGTH@ 15
---------------INS SimpleName@@partVal @TO@ InfixExpression@@partVal == null @AT@ 39414 @LENGTH@ 7
---------------INS Operator@@== @TO@ InfixExpression@@partVal == null @AT@ 39421 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@partVal == null @AT@ 39425 @LENGTH@ 4
------------INS Block@@ThenBody:{  throw new MetaException("The partition value must not be null.");} @TO@ IfStatement@@if (partVal == null) {  throw new MetaException("The partition value must not be null.");} @AT@ 39431 @LENGTH@ 87
---------------INS ThrowStatement@@ClassInstanceCreation:new MetaException("The partition value must not be null.") @TO@ Block@@ThenBody:{  throw new MetaException("The partition value must not be null.");} @AT@ 39443 @LENGTH@ 65
------------------INS ClassInstanceCreation@@MetaException["The partition value must not be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new MetaException("The partition value must not be null.") @AT@ 39449 @LENGTH@ 58
---------------------INS New@@new @TO@ ClassInstanceCreation@@MetaException["The partition value must not be null."] @AT@ 39449 @LENGTH@ 3
---------------------INS SimpleType@@MetaException @TO@ ClassInstanceCreation@@MetaException["The partition value must not be null."] @AT@ 39453 @LENGTH@ 13
---------------------INS StringLiteral@@"The partition value must not be null." @TO@ ClassInstanceCreation@@MetaException["The partition value must not be null."] @AT@ 39467 @LENGTH@ 39


UPD MethodDeclaration@@private, String, MethodName:dependenciesSnippet,  @TO@ private, String, MethodName:dependenciesSnippet, String swarmVersion,  @AT@ 6787 @LENGTH@ 1003
---INS SingleVariableDeclaration@@String swarmVersion @TO@ MethodDeclaration@@private, String, MethodName:dependenciesSnippet,  @AT@ 6834 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String swarmVersion @AT@ 6834 @LENGTH@ 6
------INS SimpleName@@swarmVersion @TO@ SingleVariableDeclaration@@String swarmVersion @AT@ 6841 @LENGTH@ 12
---UPD IfStatement@@if (packaging.hasCustomMain()) {  result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n");} @TO@ if (packaging.hasCustomMain()) {  result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n");} @AT@ 6887 @LENGTH@ 273
------UPD Block@@ThenBody:{  result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n");} @TO@ ThenBody:{  result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n");} @AT@ 6918 @LENGTH@ 242
---------UPD ExpressionStatement@@MethodInvocation:result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n") @TO@ MethodInvocation:result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n") @AT@ 6932 @LENGTH@ 218
------------UPD MethodInvocation@@result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n") @TO@ result.append("<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n") @AT@ 6932 @LENGTH@ 217
---------------UPD SimpleName@@MethodName:append:["<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n"] @TO@ MethodName:append:["<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n"] @AT@ 6939 @LENGTH@ 210
------------------UPD InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n" @TO@ "<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" + swarmVersion + "</version>\n"+ "</dependency>\n" @AT@ 6946 @LENGTH@ 202
---------------------INS InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n" @AT@ 6977 @LENGTH@ 198
------------------------MOV StringLiteral@@"<dependency>\n" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @AT@ 6946 @LENGTH@ 16
------------------------MOV Operator@@+ @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @AT@ 6962 @LENGTH@ 1
------------------------MOV StringLiteral@@"  <groupId>org.wildfly.swarm</groupId>\n" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @AT@ 6991 @LENGTH@ 42
------------------------MOV StringLiteral@@"  <artifactId>container</artifactId>\n" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @AT@ 7062 @LENGTH@ 40
------------------------INS StringLiteral@@"  <version>" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "  <version>" @AT@ 7162 @LENGTH@ 13
---------------------INS Operator@@+ @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n" @AT@ 7175 @LENGTH@ 1
---------------------INS SimpleName@@swarmVersion @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n" @AT@ 7178 @LENGTH@ 12
---------------------INS StringLiteral@@"</version>\n" @TO@ InfixExpression@@"<dependency>\n" + "  <groupId>org.wildfly.swarm</groupId>\n" + "  <artifactId>container</artifactId>\n"+ "</dependency>\n" @AT@ 7193 @LENGTH@ 14


UPD MethodDeclaration@@public, static, PartitionSpecProxy, MethodName:get, List<PartitionSpec> partitionSpecs,  @TO@ public, static, PartitionSpecProxy, MethodName:get, List<PartitionSpec> partitionSpecs, MetaException,  @AT@ 3842 @LENGTH@ 142
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@public, static, PartitionSpecProxy, MethodName:get, List<PartitionSpec> partitionSpecs,  @AT@ 4001 @LENGTH@ 13


UPD FieldDeclaration@@public, static, final, String, [ENABLED="spring.shell.script"] @TO@ public, static, final, String, [ENABLED="enabled"] @AT@ 1742 @LENGTH@ 59
---UPD VariableDeclarationFragment@@ENABLED="spring.shell.script" @TO@ ENABLED="enabled" @AT@ 1769 @LENGTH@ 31
------UPD StringLiteral@@"spring.shell.script" @TO@ "enabled" @AT@ 1779 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:System.err.println("Registered WFSwarmWarArchiveProcessor") @AT@ 362 @LENGTH@ 60
---DEL MethodInvocation@@System.err.println("Registered WFSwarmWarArchiveProcessor") @AT@ 362 @LENGTH@ 59
------DEL QualifiedName@@Name:System.err @AT@ 362 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["Registered WFSwarmWarArchiveProcessor"] @AT@ 373 @LENGTH@ 48
---------DEL StringLiteral@@"Registered WFSwarmWarArchiveProcessor" @AT@ 381 @LENGTH@ 39


INS MethodDeclaration@@List<NameOnlyDto>, MethodName:findByNamedQueryWithConstructorExpression,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 18970 @LENGTH@ 44
---INS ParameterizedType@@List<NameOnlyDto> @TO@ MethodDeclaration@@List<NameOnlyDto>, MethodName:findByNamedQueryWithConstructorExpression,  @AT@ 18952 @LENGTH@ 17
------INS SimpleType@@List @TO@ ParameterizedType@@List<NameOnlyDto> @AT@ 18952 @LENGTH@ 4
------INS SimpleType@@NameOnlyDto @TO@ ParameterizedType@@List<NameOnlyDto> @AT@ 18957 @LENGTH@ 11
---INS SimpleName@@MethodName:findByNamedQueryWithConstructorExpression @TO@ MethodDeclaration@@List<NameOnlyDto>, MethodName:findByNamedQueryWithConstructorExpression,  @AT@ 18970 @LENGTH@ 41


UPD ReturnStatement@@MethodInvocation:ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).as(authentication -> this.accessDecisionManager.verify(authentication,exchange)).switchIfEmpty(chain.filter(exchange)) @TO@ MethodInvocation:ReactiveSecurityContextHolder.getContext().filter(c -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as(authentication -> this.accessDecisionManager.verify(authentication,exchange)).switchIfEmpty(chain.filter(exchange)) @AT@ 1565 @LENGTH@ 222
---UPD MethodInvocation@@ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).as(authentication -> this.accessDecisionManager.verify(authentication,exchange)).switchIfEmpty(chain.filter(exchange)) @TO@ ReactiveSecurityContextHolder.getContext().filter(c -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as(authentication -> this.accessDecisionManager.verify(authentication,exchange)).switchIfEmpty(chain.filter(exchange)) @AT@ 1572 @LENGTH@ 214
------INS MethodInvocation@@MethodName:filter:[c -> c.getAuthentication() != null] @TO@ MethodInvocation@@ReactiveSecurityContextHolder.getContext().map(SecurityContext::getAuthentication).as(authentication -> this.accessDecisionManager.verify(authentication,exchange)).switchIfEmpty(chain.filter(exchange)) @AT@ 1572 @LENGTH@ 89
---------INS LambdaExpression@@c -> c.getAuthentication() != null @TO@ MethodInvocation@@MethodName:filter:[c -> c.getAuthentication() != null] @AT@ 1626 @LENGTH@ 34
------------INS VariableDeclarationFragment@@c @TO@ LambdaExpression@@c -> c.getAuthentication() != null @AT@ 1626 @LENGTH@ 1
---------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c @AT@ 1626 @LENGTH@ 1
------------INS InfixExpression@@c.getAuthentication() != null @TO@ LambdaExpression@@c -> c.getAuthentication() != null @AT@ 1631 @LENGTH@ 29
---------------INS MethodInvocation@@c.getAuthentication() @TO@ InfixExpression@@c.getAuthentication() != null @AT@ 1631 @LENGTH@ 21
------------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.getAuthentication() @AT@ 1631 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@c.getAuthentication() @AT@ 1633 @LENGTH@ 19
---------------INS Operator@@!= @TO@ InfixExpression@@c.getAuthentication() != null @AT@ 1652 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@c.getAuthentication() != null @AT@ 1656 @LENGTH@ 4


UPD MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @TO@ private, Context, MethodName:withSecurityContext, Context mainContext, ServerWebExchange exchange,  @AT@ 1410 @LENGTH@ 296
---UPD Modifier@@public @TO@ private @AT@ 1410 @LENGTH@ 6
---DEL ParameterizedType@@Mono<Void> @AT@ 1417 @LENGTH@ 10
------DEL SimpleType@@Mono @AT@ 1417 @LENGTH@ 4
------DEL SimpleType@@Void @AT@ 1422 @LENGTH@ 4
---DEL SimpleName@@MethodName:filter @AT@ 1428 @LENGTH@ 6
---DEL SingleVariableDeclaration@@WebFilterChain chain @AT@ 1463 @LENGTH@ 20
------DEL SimpleType@@WebFilterChain @AT@ 1463 @LENGTH@ 14
------DEL SimpleName@@chain @AT@ 1478 @LENGTH@ 5
---UPD ReturnStatement@@MethodInvocation:chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @TO@ MethodInvocation:mainContext.putAll(Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @AT@ 1489 @LENGTH@ 214
------UPD MethodInvocation@@chain.filter(exchange).subscriberContext(c -> c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @TO@ mainContext.putAll(Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)) @AT@ 1496 @LENGTH@ 206
---------DEL MethodInvocation@@MethodName:filter:[exchange] @AT@ 1496 @LENGTH@ 22
------------DEL SimpleName@@exchange @AT@ 1509 @LENGTH@ 8
---------UPD SimpleName@@Name:chain @TO@ Name:mainContext @AT@ 1496 @LENGTH@ 5
---------UPD SimpleName@@MethodName:subscriberContext:[c -> c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)] @TO@ MethodName:putAll:[Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)] @AT@ 1523 @LENGTH@ 179
------------DEL LambdaExpression@@c -> c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @AT@ 1541 @LENGTH@ 156
---------------DEL VariableDeclarationFragment@@c @AT@ 1541 @LENGTH@ 1
------------------DEL SimpleName@@c @AT@ 1541 @LENGTH@ 1
---------------DEL ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @AT@ 1546 @LENGTH@ 151
------------------DEL SimpleName@@c @AT@ 1580 @LENGTH@ 1
------------MOV MethodInvocation@@Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext) @TO@ SimpleName@@MethodName:subscriberContext:[c -> c.hasKey(SecurityContext.class) ? c : Mono.defer(() -> this.repository.load(exchange)).as(ReactiveSecurityContextHolder::withSecurityContext)] @AT@ 1588 @LENGTH@ 109
---INS SimpleType@@Context @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1677 @LENGTH@ 7
---INS SimpleName@@MethodName:withSecurityContext @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1685 @LENGTH@ 19
---INS SingleVariableDeclaration@@Context mainContext @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:filter, ServerWebExchange exchange, WebFilterChain chain,  @AT@ 1705 @LENGTH@ 19
------INS SimpleType@@Context @TO@ SingleVariableDeclaration@@Context mainContext @AT@ 1705 @LENGTH@ 7
------INS SimpleName@@mainContext @TO@ SingleVariableDeclaration@@Context mainContext @AT@ 1713 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:factory.setHostName("localhost") @TO@ MethodInvocation:factory.setHostName(SettingsUtils.getHost()) @AT@ 1493 @LENGTH@ 33
---UPD MethodInvocation@@factory.setHostName("localhost") @TO@ factory.setHostName(SettingsUtils.getHost()) @AT@ 1493 @LENGTH@ 32
------UPD SimpleName@@MethodName:setHostName:["localhost"] @TO@ MethodName:setHostName:[SettingsUtils.getHost()] @AT@ 1501 @LENGTH@ 24
---------DEL StringLiteral@@"localhost" @AT@ 1513 @LENGTH@ 11
---------INS MethodInvocation@@SettingsUtils.getHost() @TO@ SimpleName@@MethodName:setHostName:["localhost"] @AT@ 1589 @LENGTH@ 23
------------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 1589 @LENGTH@ 13
------------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 1603 @LENGTH@ 9


INS IfStatement@@if (value instanceof UUID) {  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @TO@ MethodDeclaration@@private, String, MethodName:getParameterValueForBinding, MongoParameterAccessor accessor, MongoParameters parameters, ParameterBinding binding,  @AT@ 7641 @LENGTH@ 304
---INS InstanceofExpression@@value instanceof UUID @TO@ IfStatement@@if (value instanceof UUID) {  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7645 @LENGTH@ 21
------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof UUID @AT@ 7645 @LENGTH@ 5
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof UUID @AT@ 7651 @LENGTH@ 10
------INS SimpleType@@UUID @TO@ InstanceofExpression@@value instanceof UUID @AT@ 7662 @LENGTH@ 4
---INS Block@@ThenBody:{  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @TO@ IfStatement@@if (value instanceof UUID) {  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7668 @LENGTH@ 277
------INS VariableDeclarationStatement@@UUID uuid=(UUID)value; @TO@ Block@@ThenBody:{  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7674 @LENGTH@ 25
---------INS SimpleType@@UUID @TO@ VariableDeclarationStatement@@UUID uuid=(UUID)value; @AT@ 7674 @LENGTH@ 4
---------INS VariableDeclarationFragment@@uuid=(UUID)value @TO@ VariableDeclarationStatement@@UUID uuid=(UUID)value; @AT@ 7679 @LENGTH@ 19
------------INS SimpleName@@uuid @TO@ VariableDeclarationFragment@@uuid=(UUID)value @AT@ 7679 @LENGTH@ 4
------------INS CastExpression@@(UUID)value @TO@ VariableDeclarationFragment@@uuid=(UUID)value @AT@ 7686 @LENGTH@ 12
---------------INS SimpleType@@UUID @TO@ CastExpression@@(UUID)value @AT@ 7687 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ CastExpression@@(UUID)value @AT@ 7693 @LENGTH@ 5
------INS IfStatement@@if (binding.isQuoted()) {  return uuid.toString();} @TO@ Block@@ThenBody:{  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7704 @LENGTH@ 58
---------INS MethodInvocation@@binding.isQuoted() @TO@ IfStatement@@if (binding.isQuoted()) {  return uuid.toString();} @AT@ 7708 @LENGTH@ 18
------------INS SimpleName@@Name:binding @TO@ MethodInvocation@@binding.isQuoted() @AT@ 7708 @LENGTH@ 7
------------INS SimpleName@@MethodName:isQuoted:[] @TO@ MethodInvocation@@binding.isQuoted() @AT@ 7716 @LENGTH@ 10
---------INS Block@@ThenBody:{  return uuid.toString();} @TO@ IfStatement@@if (binding.isQuoted()) {  return uuid.toString();} @AT@ 7728 @LENGTH@ 34
------------INS ReturnStatement@@MethodInvocation:uuid.toString() @TO@ Block@@ThenBody:{  return uuid.toString();} @AT@ 7734 @LENGTH@ 23
---------------INS MethodInvocation@@uuid.toString() @TO@ ReturnStatement@@MethodInvocation:uuid.toString() @AT@ 7741 @LENGTH@ 15
------------------INS SimpleName@@Name:uuid @TO@ MethodInvocation@@uuid.toString() @AT@ 7741 @LENGTH@ 4
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@uuid.toString() @AT@ 7746 @LENGTH@ 10
------INS VariableDeclarationStatement@@String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)); @TO@ Block@@ThenBody:{  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7767 @LENGTH@ 82
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)); @AT@ 7767 @LENGTH@ 6
---------INS VariableDeclarationFragment@@base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)) @TO@ VariableDeclarationStatement@@String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)); @AT@ 7774 @LENGTH@ 74
------------INS SimpleName@@base64representation @TO@ VariableDeclarationFragment@@base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)) @AT@ 7774 @LENGTH@ 20
------------INS MethodInvocation@@DatatypeConverter.printBase64Binary(asBinary(uuid)) @TO@ VariableDeclarationFragment@@base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid)) @AT@ 7797 @LENGTH@ 51
---------------INS SimpleName@@Name:DatatypeConverter @TO@ MethodInvocation@@DatatypeConverter.printBase64Binary(asBinary(uuid)) @AT@ 7797 @LENGTH@ 17
---------------INS SimpleName@@MethodName:printBase64Binary:[asBinary(uuid)] @TO@ MethodInvocation@@DatatypeConverter.printBase64Binary(asBinary(uuid)) @AT@ 7815 @LENGTH@ 33
------------------INS MethodInvocation@@asBinary(uuid) @TO@ SimpleName@@MethodName:printBase64Binary:[asBinary(uuid)] @AT@ 7833 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:asBinary:[uuid] @TO@ MethodInvocation@@asBinary(uuid) @AT@ 7833 @LENGTH@ 14
------------------------INS SimpleName@@uuid @TO@ SimpleName@@MethodName:asBinary:[uuid] @AT@ 7842 @LENGTH@ 4
------INS ReturnStatement@@InfixExpression:"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @TO@ Block@@ThenBody:{  UUID uuid=(UUID)value;  if (binding.isQuoted()) {    return uuid.toString();  }  String base64representation=DatatypeConverter.printBase64Binary(asBinary(uuid));  return "{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}";} @AT@ 7853 @LENGTH@ 88
---------INS InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @TO@ ReturnStatement@@InfixExpression:"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7860 @LENGTH@ 80
------------INS StringLiteral@@"{ '$binary' : '" @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7860 @LENGTH@ 17
------------INS Operator@@+ @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7877 @LENGTH@ 1
------------INS SimpleName@@base64representation @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7880 @LENGTH@ 20
------------INS StringLiteral@@"', '$type' : '" @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7903 @LENGTH@ 16
------------INS QualifiedName@@BSON.B_UUID @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7922 @LENGTH@ 11
---------------INS SimpleName@@BSON @TO@ QualifiedName@@BSON.B_UUID @AT@ 7922 @LENGTH@ 4
---------------INS SimpleName@@B_UUID @TO@ QualifiedName@@BSON.B_UUID @AT@ 7927 @LENGTH@ 6
------------INS StringLiteral@@"'}" @TO@ InfixExpression@@"{ '$binary' : '" + base64representation + "', '$type' : '"+ BSON.B_UUID+ "'}" @AT@ 7936 @LENGTH@ 4


INS MethodDeclaration@@default, boolean, MethodName:implementsPaging,  @TO@ TypeDeclaration@@DeclaredQuery,  @AT@ 2729 @LENGTH@ 55
---INS Modifier@@default @TO@ MethodDeclaration@@default, boolean, MethodName:implementsPaging,  @AT@ 2729 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@default, boolean, MethodName:implementsPaging,  @AT@ 2737 @LENGTH@ 7
---INS SimpleName@@MethodName:implementsPaging @TO@ MethodDeclaration@@default, boolean, MethodName:implementsPaging,  @AT@ 2745 @LENGTH@ 16
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@default, boolean, MethodName:implementsPaging,  @AT@ 2768 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2775 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("deprecation"), public, abstract]ResponseStateManagerWrapper, ResponseStateManager[FacesWrapper<ResponseStateManager>] @TO@ [public, abstract]ResponseStateManagerWrapper, ResponseStateManager[FacesWrapper<ResponseStateManager>] @AT@ 1246 @LENGTH@ 1211
---DEL SingleMemberAnnotation@@@SuppressWarnings("deprecation") @AT@ 1246 @LENGTH@ 32


INS MethodDeclaration@@private, voidMethodName:Standard14Fonts,  @TO@ TypeDeclaration@@[public]Standard14Fonts,  @AT@ 2626 @LENGTH@ 33
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Standard14Fonts,  @AT@ 2626 @LENGTH@ 7
---INS SimpleName@@MethodName:Standard14Fonts @TO@ MethodDeclaration@@private, voidMethodName:Standard14Fonts,  @AT@ 2634 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:preAuthorizeBean, boolean b,  @TO@ TypeDeclaration@@[public]MethodSecurityServiceImpl, [MethodSecurityService] @AT@ 1416 @LENGTH@ 44
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeBean, boolean b,  @AT@ 1416 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeBean, boolean b,  @AT@ 1423 @LENGTH@ 4
---INS SimpleName@@MethodName:preAuthorizeBean @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeBean, boolean b,  @AT@ 1428 @LENGTH@ 16
---INS SingleVariableDeclaration@@boolean b @TO@ MethodDeclaration@@public, void, MethodName:preAuthorizeBean, boolean b,  @AT@ 1445 @LENGTH@ 9
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean b @AT@ 1445 @LENGTH@ 7
------INS SimpleName@@b @TO@ SingleVariableDeclaration@@boolean b @AT@ 1453 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @TO@ MethodDeclaration@@protected, void, MethodName:invokeAsyncProxyClient, Exchange exchange, final AsyncCallback callback, Exception,  @AT@ 8755 @LENGTH@ 92
---INS MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @TO@ ExpressionStatement@@MethodInvocation:((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 8755 @LENGTH@ 91
------INS MethodInvocation@@MethodName:getChainedCxfRsEndpointConfigurer:[] @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 8755 @LENGTH@ 67
------INS ParenthesizedExpression@@((CxfRsEndpoint)getEndpoint()) @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 8755 @LENGTH@ 31
---------INS CastExpression@@(CxfRsEndpoint)getEndpoint() @TO@ ParenthesizedExpression@@((CxfRsEndpoint)getEndpoint()) @AT@ 8756 @LENGTH@ 29
------------INS SimpleType@@CxfRsEndpoint @TO@ CastExpression@@(CxfRsEndpoint)getEndpoint() @AT@ 8757 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ CastExpression@@(CxfRsEndpoint)getEndpoint() @AT@ 8772 @LENGTH@ 13
------INS SimpleName@@MethodName:configureClient:[target] @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 8823 @LENGTH@ 23
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:configureClient:[target] @AT@ 8839 @LENGTH@ 6


UPD MethodDeclaration@@public, Object, MethodName:invoke, FacesContext context, Object... args, EvaluationException,  @TO@ public, Object, MethodName:invoke, FacesContext context, Object[] args, EvaluationException,  @AT@ 2753 @LENGTH@ 114
---UPD SingleVariableDeclaration@@Object... args @TO@ Object[] args @AT@ 2796 @LENGTH@ 14
------INS ArrayType@@Object[] @TO@ SingleVariableDeclaration@@Object... args @AT@ 2796 @LENGTH@ 8
---------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 2796 @LENGTH@ 6
------DEL SimpleType@@Object @AT@ 2796 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:InfoServerGroupsActivator,  @TO@ public, voidMethodName:InfoServerGroupActivator,  @AT@ 7600 @LENGTH@ 102
---UPD SimpleName@@MethodName:InfoServerGroupsActivator @TO@ MethodName:InfoServerGroupActivator @AT@ 7607 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]SpringDataMongodbSerializerUnitTests,  @AT@ 6734 @LENGTH@ 438
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @AT@ 6734 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @AT@ 6741 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldRemarshallListsAndDocuments @TO@ MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @AT@ 6746 @LENGTH@ 33
---INS VariableDeclarationStatement@@BooleanExpression criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not(); @TO@ MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @AT@ 6787 @LENGTH@ 134
------INS SimpleType@@BooleanExpression @TO@ VariableDeclarationStatement@@BooleanExpression criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not(); @AT@ 6787 @LENGTH@ 17
------INS VariableDeclarationFragment@@criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @TO@ VariableDeclarationStatement@@BooleanExpression criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not(); @AT@ 6805 @LENGTH@ 115
---------INS SimpleName@@criteria @TO@ VariableDeclarationFragment@@criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6805 @LENGTH@ 8
---------INS MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @TO@ VariableDeclarationFragment@@criteria=QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6816 @LENGTH@ 104
------------INS MethodInvocation@@MethodName:and:[QPerson.person.firstname.containsIgnoreCase("foo")] @TO@ MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6816 @LENGTH@ 98
---------------INS MethodInvocation@@QPerson.person.firstname.containsIgnoreCase("foo") @TO@ MethodInvocation@@MethodName:and:[QPerson.person.firstname.containsIgnoreCase("foo")] @AT@ 6863 @LENGTH@ 50
------------------INS QualifiedName@@Name:QPerson.person.firstname @TO@ MethodInvocation@@QPerson.person.firstname.containsIgnoreCase("foo") @AT@ 6863 @LENGTH@ 24
------------------INS SimpleName@@MethodName:containsIgnoreCase:["foo"] @TO@ MethodInvocation@@QPerson.person.firstname.containsIgnoreCase("foo") @AT@ 6888 @LENGTH@ 25
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:containsIgnoreCase:["foo"] @AT@ 6907 @LENGTH@ 5
------------INS MethodInvocation@@MethodName:isNotEmpty:[] @TO@ MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6816 @LENGTH@ 37
------------INS QualifiedName@@Name:QPerson.person.firstname @TO@ MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6816 @LENGTH@ 24
------------INS SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@QPerson.person.firstname.isNotEmpty().and(QPerson.person.firstname.containsIgnoreCase("foo")).not() @AT@ 6915 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(this.serializer.handle(criteria),is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @TO@ MethodDeclaration@@public, void, MethodName:shouldRemarshallListsAndDocuments,  @AT@ 6925 @LENGTH@ 244
------INS MethodInvocation@@assertThat(this.serializer.handle(criteria),is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.serializer.handle(criteria),is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @AT@ 6925 @LENGTH@ 243
---------INS SimpleName@@MethodName:assertThat:[this.serializer.handle(criteria), is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))] @TO@ MethodInvocation@@assertThat(this.serializer.handle(criteria),is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))) @AT@ 6925 @LENGTH@ 243
------------INS MethodInvocation@@this.serializer.handle(criteria) @TO@ SimpleName@@MethodName:assertThat:[this.serializer.handle(criteria), is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))] @AT@ 6936 @LENGTH@ 32
---------------INS FieldAccess@@this.serializer @TO@ MethodInvocation@@this.serializer.handle(criteria) @AT@ 6936 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.serializer @AT@ 6936 @LENGTH@ 4
------------------INS SimpleName@@serializer @TO@ FieldAccess@@this.serializer @AT@ 6941 @LENGTH@ 10
---------------INS SimpleName@@MethodName:handle:[criteria] @TO@ MethodInvocation@@this.serializer.handle(criteria) @AT@ 6952 @LENGTH@ 16
------------------INS SimpleName@@criteria @TO@ SimpleName@@MethodName:handle:[criteria] @AT@ 6959 @LENGTH@ 8
------------INS MethodInvocation@@is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))) @TO@ SimpleName@@MethodName:assertThat:[this.serializer.handle(criteria), is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")))] @AT@ 6970 @LENGTH@ 197
---------------INS SimpleName@@MethodName:is:[equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @TO@ MethodInvocation@@is(equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))) @AT@ 6970 @LENGTH@ 197
------------------INS MethodInvocation@@equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @TO@ SimpleName@@MethodName:is:[equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"))] @AT@ 6973 @LENGTH@ 193
---------------------INS SimpleName@@MethodName:equalTo:[JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodInvocation@@equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @AT@ 6973 @LENGTH@ 193
------------------------INS MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ SimpleName@@MethodName:equalTo:[JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6981 @LENGTH@ 184
---------------------------INS SimpleName@@Name:JSON @TO@ MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6981 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6986 @LENGTH@ 179
------------------------------INS InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6992 @LENGTH@ 172
---------------------------------INS StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6992 @LENGTH@ 48
---------------------------------INS Operator@@+ @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 7040 @LENGTH@ 1
---------------------------------INS StringLiteral@@"\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 7047 @LENGTH@ 117
---------------------INS SimpleName@@MethodName:equalTo:[JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @TO@ MethodInvocation@@equalTo(JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")) @AT@ 6973 @LENGTH@ 193
------------------------INS MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @TO@ SimpleName@@MethodName:equalTo:[JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}")] @AT@ 6981 @LENGTH@ 184
---------------------------INS SimpleName@@Name:JSON @TO@ MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6981 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @TO@ MethodInvocation@@JSON.parse("{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}") @AT@ 6986 @LENGTH@ 179
------------------------------INS InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ SimpleName@@MethodName:parse:["{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}"] @AT@ 6992 @LENGTH@ 172
---------------------------------INS StringLiteral@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 6992 @LENGTH@ 48
---------------------------------INS Operator@@+ @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 7040 @LENGTH@ 1
---------------------------------INS StringLiteral@@"\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @TO@ InfixExpression@@"{ \"$or\" : [ { \"firstname\" : { \"$ne\" : { " + "\"$ne\" : \"\"}}} , { \"firstname\" : { \"$not\" : { \"$regex\" : \".*\\\\Qfoo\\\\E.*\" , \"$options\" : \"i\"}}}]}" @AT@ 7047 @LENGTH@ 117


DEL MethodDeclaration@@public, void, MethodName:testNullWriter, Exception,  @AT@ 13435 @LENGTH@ 800
---DEL Modifier@@public @AT@ 13435 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 13442 @LENGTH@ 4
---DEL SimpleName@@MethodName:testNullWriter @AT@ 13447 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 13471 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:factory.setItemWriter(null) @AT@ 13488 @LENGTH@ 28
------DEL MethodInvocation@@factory.setItemWriter(null) @AT@ 13488 @LENGTH@ 27
---------DEL SimpleName@@Name:factory @AT@ 13488 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setItemWriter:[null] @AT@ 13496 @LENGTH@ 19
------------DEL NullLiteral@@null @AT@ 13510 @LENGTH@ 4
---DEL VariableDeclarationStatement@@Step step=factory.getObject(); @AT@ 13520 @LENGTH@ 32
------DEL SimpleType@@Step @AT@ 13520 @LENGTH@ 4
------DEL VariableDeclarationFragment@@step=factory.getObject() @AT@ 13525 @LENGTH@ 26
---------DEL SimpleName@@step @AT@ 13525 @LENGTH@ 4
---------DEL MethodInvocation@@factory.getObject() @AT@ 13532 @LENGTH@ 19
------------DEL SimpleName@@Name:factory @AT@ 13532 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getObject:[] @AT@ 13540 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:step.execute(stepExecution) @AT@ 13558 @LENGTH@ 28
------DEL MethodInvocation@@step.execute(stepExecution) @AT@ 13558 @LENGTH@ 27
---------DEL SimpleName@@Name:step @AT@ 13558 @LENGTH@ 4
---------DEL SimpleName@@MethodName:execute:[stepExecution] @AT@ 13563 @LENGTH@ 22
------------DEL SimpleName@@stepExecution @AT@ 13571 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:assertEquals(0,stepExecution.getSkipCount()) @AT@ 13592 @LENGTH@ 46
------DEL MethodInvocation@@assertEquals(0,stepExecution.getSkipCount()) @AT@ 13592 @LENGTH@ 45
---------DEL SimpleName@@MethodName:assertEquals:[0, stepExecution.getSkipCount()] @AT@ 13592 @LENGTH@ 45
------------DEL NumberLiteral@@0 @AT@ 13605 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getSkipCount() @AT@ 13608 @LENGTH@ 28
---------------DEL SimpleName@@Name:stepExecution @AT@ 13608 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getSkipCount:[] @AT@ 13622 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:assertEquals(0,stepExecution.getReadSkipCount()) @AT@ 13642 @LENGTH@ 50
------DEL MethodInvocation@@assertEquals(0,stepExecution.getReadSkipCount()) @AT@ 13642 @LENGTH@ 49
---------DEL SimpleName@@MethodName:assertEquals:[0, stepExecution.getReadSkipCount()] @AT@ 13642 @LENGTH@ 49
------------DEL NumberLiteral@@0 @AT@ 13655 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getReadSkipCount() @AT@ 13658 @LENGTH@ 32
---------------DEL SimpleName@@Name:stepExecution @AT@ 13658 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getReadSkipCount:[] @AT@ 13672 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:assertEquals(5,stepExecution.getReadCount()) @AT@ 13696 @LENGTH@ 46
------DEL MethodInvocation@@assertEquals(5,stepExecution.getReadCount()) @AT@ 13696 @LENGTH@ 45
---------DEL SimpleName@@MethodName:assertEquals:[5, stepExecution.getReadCount()] @AT@ 13696 @LENGTH@ 45
------------DEL NumberLiteral@@5 @AT@ 13709 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getReadCount() @AT@ 13712 @LENGTH@ 28
---------------DEL SimpleName@@Name:stepExecution @AT@ 13712 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getReadCount:[] @AT@ 13726 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:assertEquals(5,stepExecution.getWriteCount()) @AT@ 13803 @LENGTH@ 47
------DEL MethodInvocation@@assertEquals(5,stepExecution.getWriteCount()) @AT@ 13803 @LENGTH@ 46
---------DEL SimpleName@@MethodName:assertEquals:[5, stepExecution.getWriteCount()] @AT@ 13803 @LENGTH@ 46
------------DEL NumberLiteral@@5 @AT@ 13816 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getWriteCount() @AT@ 13819 @LENGTH@ 29
---------------DEL SimpleName@@Name:stepExecution @AT@ 13819 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getWriteCount:[] @AT@ 13833 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:assertEquals(0,stepExecution.getFilterCount()) @AT@ 13854 @LENGTH@ 48
------DEL MethodInvocation@@assertEquals(0,stepExecution.getFilterCount()) @AT@ 13854 @LENGTH@ 47
---------DEL SimpleName@@MethodName:assertEquals:[0, stepExecution.getFilterCount()] @AT@ 13854 @LENGTH@ 47
------------DEL NumberLiteral@@0 @AT@ 13867 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getFilterCount() @AT@ 13870 @LENGTH@ 30
---------------DEL SimpleName@@Name:stepExecution @AT@ 13870 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getFilterCount:[] @AT@ 13884 @LENGTH@ 16
---DEL ExpressionStatement@@MethodInvocation:assertEquals(0,stepExecution.getRollbackCount()) @AT@ 13906 @LENGTH@ 50
------DEL MethodInvocation@@assertEquals(0,stepExecution.getRollbackCount()) @AT@ 13906 @LENGTH@ 49
---------DEL SimpleName@@MethodName:assertEquals:[0, stepExecution.getRollbackCount()] @AT@ 13906 @LENGTH@ 49
------------DEL NumberLiteral@@0 @AT@ 13919 @LENGTH@ 1
------------DEL MethodInvocation@@stepExecution.getRollbackCount() @AT@ 13922 @LENGTH@ 32
---------------DEL SimpleName@@Name:stepExecution @AT@ 13922 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getRollbackCount:[] @AT@ 13936 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:assertTrue(reader.getRead().contains("4")) @AT@ 13985 @LENGTH@ 43
------DEL MethodInvocation@@assertTrue(reader.getRead().contains("4")) @AT@ 13985 @LENGTH@ 42
---------DEL SimpleName@@MethodName:assertTrue:[reader.getRead().contains("4")] @AT@ 13985 @LENGTH@ 42
------------DEL MethodInvocation@@reader.getRead().contains("4") @AT@ 13996 @LENGTH@ 30
---------------DEL MethodInvocation@@MethodName:getRead:[] @AT@ 13996 @LENGTH@ 16
---------------DEL SimpleName@@Name:reader @AT@ 13996 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:contains:["4"] @AT@ 14013 @LENGTH@ 13
------------------DEL StringLiteral@@"4" @AT@ 14022 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.COMPLETED,stepExecution.getStatus()) @AT@ 14034 @LENGTH@ 63
------DEL MethodInvocation@@assertEquals(BatchStatus.COMPLETED,stepExecution.getStatus()) @AT@ 14034 @LENGTH@ 62
---------DEL SimpleName@@MethodName:assertEquals:[BatchStatus.COMPLETED, stepExecution.getStatus()] @AT@ 14034 @LENGTH@ 62
------------DEL QualifiedName@@BatchStatus.COMPLETED @AT@ 14047 @LENGTH@ 21
---------------DEL SimpleName@@BatchStatus @AT@ 14047 @LENGTH@ 11
---------------DEL SimpleName@@COMPLETED @AT@ 14059 @LENGTH@ 9
------------DEL MethodInvocation@@stepExecution.getStatus() @AT@ 14070 @LENGTH@ 25
---------------DEL SimpleName@@Name:stepExecution @AT@ 14070 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getStatus:[] @AT@ 14084 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:assertStepExecutionsAreEqual(stepExecution,repository.getLastStepExecution(jobExecution.getJobInstance(),step.getName())) @AT@ 14101 @LENGTH@ 130
------DEL MethodInvocation@@assertStepExecutionsAreEqual(stepExecution,repository.getLastStepExecution(jobExecution.getJobInstance(),step.getName())) @AT@ 14101 @LENGTH@ 129
---------DEL SimpleName@@MethodName:assertStepExecutionsAreEqual:[stepExecution, repository.getLastStepExecution(jobExecution.getJobInstance(),step.getName())] @AT@ 14101 @LENGTH@ 129
------------DEL SimpleName@@stepExecution @AT@ 14130 @LENGTH@ 13
------------DEL MethodInvocation@@repository.getLastStepExecution(jobExecution.getJobInstance(),step.getName()) @AT@ 14145 @LENGTH@ 84
---------------DEL SimpleName@@Name:repository @AT@ 14145 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getLastStepExecution:[jobExecution.getJobInstance(), step.getName()] @AT@ 14156 @LENGTH@ 73
------------------DEL MethodInvocation@@jobExecution.getJobInstance() @AT@ 14177 @LENGTH@ 29
---------------------DEL SimpleName@@Name:jobExecution @AT@ 14177 @LENGTH@ 12
---------------------DEL SimpleName@@MethodName:getJobInstance:[] @AT@ 14190 @LENGTH@ 16
------------------DEL MethodInvocation@@step.getName() @AT@ 14208 @LENGTH@ 20
---------------------DEL SimpleName@@Name:step @AT@ 14208 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 14219 @LENGTH@ 9


UPD VariableDeclarationStatement@@Set<Class<?>> interfaces=new HashSet<>(); @TO@ List<Class<?>> interfaces=new ArrayList<>(); @AT@ 2358 @LENGTH@ 43
---UPD ParameterizedType@@Set<Class<?>> @TO@ List<Class<?>> @AT@ 2358 @LENGTH@ 13
------UPD SimpleType@@Set @TO@ List @AT@ 2358 @LENGTH@ 3
---UPD VariableDeclarationFragment@@interfaces=new HashSet<>() @TO@ interfaces=new ArrayList<>() @AT@ 2372 @LENGTH@ 28
------UPD ClassInstanceCreation@@HashSet<>[] @TO@ ArrayList<>[] @AT@ 2385 @LENGTH@ 15
---------UPD ParameterizedType@@HashSet<> @TO@ ArrayList<> @AT@ 2389 @LENGTH@ 9
------------UPD SimpleType@@HashSet @TO@ ArrayList @AT@ 2389 @LENGTH@ 7


UPD FieldDeclaration@@String, [host="127.0.0.1"] @TO@ String, [host=SettingsUtils.getHost()] @AT@ 974 @LENGTH@ 26
---UPD VariableDeclarationFragment@@host="127.0.0.1" @TO@ host=SettingsUtils.getHost() @AT@ 981 @LENGTH@ 18
------DEL StringLiteral@@"127.0.0.1" @AT@ 988 @LENGTH@ 11
------INS MethodInvocation@@SettingsUtils.getHost() @TO@ VariableDeclarationFragment@@host="127.0.0.1" @AT@ 1064 @LENGTH@ 23
---------INS SimpleName@@Name:SettingsUtils @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 1064 @LENGTH@ 13
---------INS SimpleName@@MethodName:getHost:[] @TO@ MethodInvocation@@SettingsUtils.getHost() @AT@ 1078 @LENGTH@ 9


UPD ReturnStatement@@ConditionalExpression:getCredentialAcquireSupport(credentialType,algorithmName,parameterSpec) != null ? SupportLevel.SUPPORTED : SupportLevel.UNSUPPORTED @TO@ ConditionalExpression:getCredential(credentialType,algorithmName,parameterSpec) != null ? SupportLevel.SUPPORTED : SupportLevel.UNSUPPORTED @AT@ 1286 @LENGTH@ 141
---UPD ConditionalExpression@@getCredentialAcquireSupport(credentialType,algorithmName,parameterSpec) != null ? SupportLevel.SUPPORTED : SupportLevel.UNSUPPORTED @TO@ getCredential(credentialType,algorithmName,parameterSpec) != null ? SupportLevel.SUPPORTED : SupportLevel.UNSUPPORTED @AT@ 1293 @LENGTH@ 133
------UPD InfixExpression@@getCredentialAcquireSupport(credentialType,algorithmName,parameterSpec) != null @TO@ getCredential(credentialType,algorithmName,parameterSpec) != null @AT@ 1293 @LENGTH@ 81
---------UPD MethodInvocation@@getCredentialAcquireSupport(credentialType,algorithmName,parameterSpec) @TO@ getCredential(credentialType,algorithmName,parameterSpec) @AT@ 1293 @LENGTH@ 73
------------UPD SimpleName@@MethodName:getCredentialAcquireSupport:[credentialType, algorithmName, parameterSpec] @TO@ MethodName:getCredential:[credentialType, algorithmName, parameterSpec] @AT@ 1293 @LENGTH@ 73


UPD IfStatement@@if (GenericFile.class.isAssignableFrom(sourceType)) {  GenericFile<?> genericFile=(GenericFile<?>)value;  if (genericFile.getFile() != null) {    Class<?> genericFileType=genericFile.getFile().getClass();    TypeConverter converter=registry.lookup(Payload.class,genericFileType);    if (converter != null) {      return (T)converter.convertTo(Payload.class,genericFile.getFile());    }  }} @TO@ if (type == Payload.class && WrappedFile.class.isAssignableFrom(sourceType)) {  WrappedFile wf=(WrappedFile)value;  if (wf.getFile() != null) {    TypeConverter converter=registry.lookup(Payload.class,wf.getFile().getClass());    if (converter != null) {      return (T)converter.tryConvertTo(Payload.class,wf.getFile());    }  }} @AT@ 5333 @LENGTH@ 508
---INS InfixExpression@@type == Payload.class && WrappedFile.class.isAssignableFrom(sourceType) @TO@ IfStatement@@if (GenericFile.class.isAssignableFrom(sourceType)) {  GenericFile<?> genericFile=(GenericFile<?>)value;  if (genericFile.getFile() != null) {    Class<?> genericFileType=genericFile.getFile().getClass();    TypeConverter converter=registry.lookup(Payload.class,genericFileType);    if (converter != null) {      return (T)converter.convertTo(Payload.class,genericFile.getFile());    }  }} @AT@ 5320 @LENGTH@ 71
------INS InfixExpression@@type == Payload.class @TO@ InfixExpression@@type == Payload.class && WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5320 @LENGTH@ 21
---------INS SimpleName@@type @TO@ InfixExpression@@type == Payload.class @AT@ 5320 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@type == Payload.class @AT@ 5324 @LENGTH@ 2
---------INS TypeLiteral@@Payload.class @TO@ InfixExpression@@type == Payload.class @AT@ 5328 @LENGTH@ 13
------INS Operator@@&& @TO@ InfixExpression@@type == Payload.class && WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5341 @LENGTH@ 2
------INS MethodInvocation@@WrappedFile.class.isAssignableFrom(sourceType) @TO@ InfixExpression@@type == Payload.class && WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5345 @LENGTH@ 46
---------MOV TypeLiteral@@GenericFile.class @TO@ MethodInvocation@@WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5337 @LENGTH@ 17
---------MOV TypeLiteral@@GenericFile.class @TO@ MethodInvocation@@WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5337 @LENGTH@ 17
---------MOV SimpleName@@MethodName:isAssignableFrom:[sourceType] @TO@ MethodInvocation@@WrappedFile.class.isAssignableFrom(sourceType) @AT@ 5355 @LENGTH@ 28
---DEL MethodInvocation@@GenericFile.class.isAssignableFrom(sourceType) @AT@ 5337 @LENGTH@ 46
---UPD Block@@ThenBody:{  GenericFile<?> genericFile=(GenericFile<?>)value;  if (genericFile.getFile() != null) {    Class<?> genericFileType=genericFile.getFile().getClass();    TypeConverter converter=registry.lookup(Payload.class,genericFileType);    if (converter != null) {      return (T)converter.convertTo(Payload.class,genericFile.getFile());    }  }} @TO@ ThenBody:{  WrappedFile wf=(WrappedFile)value;  if (wf.getFile() != null) {    TypeConverter converter=registry.lookup(Payload.class,wf.getFile().getClass());    if (converter != null) {      return (T)converter.tryConvertTo(Payload.class,wf.getFile());    }  }} @AT@ 5385 @LENGTH@ 456
------UPD VariableDeclarationStatement@@GenericFile<?> genericFile=(GenericFile<?>)value; @TO@ WrappedFile wf=(WrappedFile)value; @AT@ 5399 @LENGTH@ 52
---------DEL ParameterizedType@@GenericFile<?> @AT@ 5399 @LENGTH@ 14
------------DEL SimpleType@@GenericFile @AT@ 5399 @LENGTH@ 11
------------DEL WildcardType@@? @AT@ 5411 @LENGTH@ 1
---------UPD VariableDeclarationFragment@@genericFile=(GenericFile<?>)value @TO@ wf=(WrappedFile)value @AT@ 5414 @LENGTH@ 36
------------UPD SimpleName@@genericFile @TO@ wf @AT@ 5414 @LENGTH@ 11
------------UPD CastExpression@@(GenericFile<?>)value @TO@ (WrappedFile)value @AT@ 5428 @LENGTH@ 22
---------------DEL ParameterizedType@@GenericFile<?> @AT@ 5429 @LENGTH@ 14
------------------DEL SimpleType@@GenericFile @AT@ 5429 @LENGTH@ 11
------------------DEL WildcardType@@? @AT@ 5441 @LENGTH@ 1
---------------INS SimpleType@@WrappedFile @TO@ CastExpression@@(GenericFile<?>)value @AT@ 5490 @LENGTH@ 11
---------INS SimpleType@@WrappedFile @TO@ VariableDeclarationStatement@@GenericFile<?> genericFile=(GenericFile<?>)value; @AT@ 5472 @LENGTH@ 11
------UPD IfStatement@@if (genericFile.getFile() != null) {  Class<?> genericFileType=genericFile.getFile().getClass();  TypeConverter converter=registry.lookup(Payload.class,genericFileType);  if (converter != null) {    return (T)converter.convertTo(Payload.class,genericFile.getFile());  }} @TO@ if (wf.getFile() != null) {  TypeConverter converter=registry.lookup(Payload.class,wf.getFile().getClass());  if (converter != null) {    return (T)converter.tryConvertTo(Payload.class,wf.getFile());  }} @AT@ 5464 @LENGTH@ 367
---------UPD InfixExpression@@genericFile.getFile() != null @TO@ wf.getFile() != null @AT@ 5468 @LENGTH@ 29
------------UPD MethodInvocation@@genericFile.getFile() @TO@ wf.getFile() @AT@ 5468 @LENGTH@ 21
---------------UPD SimpleName@@Name:genericFile @TO@ Name:wf @AT@ 5468 @LENGTH@ 11
---------UPD Block@@ThenBody:{  Class<?> genericFileType=genericFile.getFile().getClass();  TypeConverter converter=registry.lookup(Payload.class,genericFileType);  if (converter != null) {    return (T)converter.convertTo(Payload.class,genericFile.getFile());  }} @TO@ ThenBody:{  TypeConverter converter=registry.lookup(Payload.class,wf.getFile().getClass());  if (converter != null) {    return (T)converter.tryConvertTo(Payload.class,wf.getFile());  }} @AT@ 5499 @LENGTH@ 332
------------DEL VariableDeclarationStatement@@Class<?> genericFileType=genericFile.getFile().getClass(); @AT@ 5517 @LENGTH@ 60
---------------DEL ParameterizedType@@Class<?> @AT@ 5517 @LENGTH@ 8
------------------DEL SimpleType@@Class @AT@ 5517 @LENGTH@ 5
------------------DEL WildcardType@@? @AT@ 5523 @LENGTH@ 1
---------------DEL VariableDeclarationFragment@@genericFileType=genericFile.getFile().getClass() @AT@ 5526 @LENGTH@ 50
------------------DEL SimpleName@@genericFileType @AT@ 5526 @LENGTH@ 15
------------------DEL MethodInvocation@@genericFile.getFile().getClass() @AT@ 5544 @LENGTH@ 32
---------------------DEL MethodInvocation@@MethodName:getFile:[] @AT@ 5544 @LENGTH@ 21
---------------------DEL SimpleName@@Name:genericFile @AT@ 5544 @LENGTH@ 11
---------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 5566 @LENGTH@ 10
------------UPD VariableDeclarationStatement@@TypeConverter converter=registry.lookup(Payload.class,genericFileType); @TO@ TypeConverter converter=registry.lookup(Payload.class,wf.getFile().getClass()); @AT@ 5594 @LENGTH@ 74
---------------UPD VariableDeclarationFragment@@converter=registry.lookup(Payload.class,genericFileType) @TO@ converter=registry.lookup(Payload.class,wf.getFile().getClass()) @AT@ 5608 @LENGTH@ 59
------------------UPD MethodInvocation@@registry.lookup(Payload.class,genericFileType) @TO@ registry.lookup(Payload.class,wf.getFile().getClass()) @AT@ 5620 @LENGTH@ 47
---------------------UPD SimpleName@@MethodName:lookup:[Payload.class, genericFileType] @TO@ MethodName:lookup:[Payload.class, wf.getFile().getClass()] @AT@ 5629 @LENGTH@ 38
------------------------INS MethodInvocation@@wf.getFile().getClass() @TO@ SimpleName@@MethodName:lookup:[Payload.class, genericFileType] @AT@ 5623 @LENGTH@ 23
---------------------------INS MethodInvocation@@MethodName:getFile:[] @TO@ MethodInvocation@@wf.getFile().getClass() @AT@ 5623 @LENGTH@ 12
---------------------------INS SimpleName@@Name:wf @TO@ MethodInvocation@@wf.getFile().getClass() @AT@ 5623 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@wf.getFile().getClass() @AT@ 5636 @LENGTH@ 10
------------------------DEL SimpleName@@genericFileType @AT@ 5651 @LENGTH@ 15
------------UPD IfStatement@@if (converter != null) {  return (T)converter.convertTo(Payload.class,genericFile.getFile());} @TO@ if (converter != null) {  return (T)converter.tryConvertTo(Payload.class,wf.getFile());} @AT@ 5685 @LENGTH@ 132
---------------UPD Block@@ThenBody:{  return (T)converter.convertTo(Payload.class,genericFile.getFile());} @TO@ ThenBody:{  return (T)converter.tryConvertTo(Payload.class,wf.getFile());} @AT@ 5708 @LENGTH@ 109
------------------UPD ReturnStatement@@CastExpression:(T)converter.convertTo(Payload.class,genericFile.getFile()) @TO@ CastExpression:(T)converter.tryConvertTo(Payload.class,wf.getFile()) @AT@ 5730 @LENGTH@ 69
---------------------UPD CastExpression@@(T)converter.convertTo(Payload.class,genericFile.getFile()) @TO@ (T)converter.tryConvertTo(Payload.class,wf.getFile()) @AT@ 5737 @LENGTH@ 61
------------------------UPD MethodInvocation@@converter.convertTo(Payload.class,genericFile.getFile()) @TO@ converter.tryConvertTo(Payload.class,wf.getFile()) @AT@ 5741 @LENGTH@ 57
---------------------------UPD SimpleName@@MethodName:convertTo:[Payload.class, genericFile.getFile()] @TO@ MethodName:tryConvertTo:[Payload.class, wf.getFile()] @AT@ 5751 @LENGTH@ 47
------------------------------UPD MethodInvocation@@genericFile.getFile() @TO@ wf.getFile() @AT@ 5776 @LENGTH@ 21
---------------------------------UPD SimpleName@@Name:genericFile @TO@ Name:wf @AT@ 5776 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @TO@ MethodInvocation:assertEquals("Hello World",body) @AT@ 1813 @LENGTH@ 32
---UPD MethodInvocation@@assertEquals("Bye World",body) @TO@ assertEquals("Hello World",body) @AT@ 1813 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertEquals:["Bye World", body] @TO@ MethodName:assertEquals:["Hello World", body] @AT@ 1813 @LENGTH@ 31
---------UPD StringLiteral@@"Bye World" @TO@ "Hello World" @AT@ 1826 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThat(registration.getScopes()).containsOnly("openid","profile","email","address","phone") @TO@ MethodInvocation:assertThat(registration.getScopes()).containsOnly("openid","profile","email") @AT@ 2504 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(registration.getScopes()).containsOnly("openid","profile","email","address","phone") @TO@ assertThat(registration.getScopes()).containsOnly("openid","profile","email") @AT@ 2504 @LENGTH@ 102
------UPD SimpleName@@MethodName:containsOnly:["openid", "profile", "email", "address", "phone"] @TO@ MethodName:containsOnly:["openid", "profile", "email"] @AT@ 2541 @LENGTH@ 65
---------DEL StringLiteral@@"address" @AT@ 2587 @LENGTH@ 9
---------DEL StringLiteral@@"phone" @AT@ 2598 @LENGTH@ 7


MOV MethodDeclaration@@protected, ClassLoader, MethodName:getConfigurationInspectionClassLoader, ResourceLoader loader,  @TO@ TypeDeclaration@@[public, abstract]RepositoryConfigurationExtensionSupport, [RepositoryConfigurationExtension] @AT@ 5003 @LENGTH@ 121


UPD TypeDeclaration@@[public]MockFlowExecutionListener, FlowExecutionListenerAdapter @TO@ [public]MockFlowExecutionListener, [FlowExecutionListener] @AT@ 1222 @LENGTH@ 6890
---UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 1269 @LENGTH@ 28


UPD TryStatement@@try (AutoCloseable handle=Performance.accumulate("module: BootstrapClassPath")){  final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml";  ClassLoader cl=BootstrapClasspathModuleFinder.class.getClassLoader();  URL url=cl.getResource(path);  if (url == null) {    return null;  }  ModuleSpec moduleSpec=null;  InputStream in=null;  try {    final URL base=new URL(url,"./");    in=url.openStream();    moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),"/",in,path.toString(),delegateLoader,simpleIdentifier);  } catch (  IOException e) {    throw new ModuleLoadException(e);  }catch (  Throwable t) {    throw t;  } finally {    try {      if (in != null) {        in.close();      }    } catch (    IOException e) {      throw new ModuleLoadException(e);    }  }  return moduleSpec;} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try (AutoCloseable handle=Performance.accumulate("module: BootstrapClassPath")){  final String[] nameAndSlot=identifier.split("\\:",2);  final String path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml";  ClassLoader cl=BootstrapClasspathModuleFinder.class.getClassLoader();  URL url=cl.getResource(path);  if (url == null) {    return null;  }  ModuleSpec moduleSpec=null;  InputStream in=null;  try {    final URL base=new URL(url,"./");    in=url.openStream();    moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),"/",in,path.toString(),delegateLoader,simpleIdentifier);  } catch (  IOException e) {    throw new ModuleLoadException(e);  }catch (  Throwable t) {    throw t;  } finally {    try {      if (in != null) {        in.close();      }    } catch (    IOException e) {      throw new ModuleLoadException(e);    }  }  return moduleSpec;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1626 @LENGTH@ 1571
---UPD VariableDeclarationStatement@@final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml"; @TO@ final String path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml"; @AT@ 1722 @LENGTH@ 122
------UPD VariableDeclarationFragment@@path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @TO@ path="modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml" @AT@ 1735 @LENGTH@ 108
---------UPD InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @TO@ "modules/" + nameAndSlot[0].replace('.',MODULE_SEPARATOR) + MODULE_SEPARATOR+ nameAndSlot[1]+ "/module.xml" @AT@ 1742 @LENGTH@ 101
------------UPD MethodInvocation@@identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) @TO@ nameAndSlot[0].replace('.',MODULE_SEPARATOR) @AT@ 1755 @LENGTH@ 72
---------------DEL MethodInvocation@@MethodName:replace:['.', MODULE_SEPARATOR] @AT@ 1755 @LENGTH@ 41
------------------DEL CharacterLiteral@@'.' @AT@ 1774 @LENGTH@ 3
------------------DEL SimpleName@@MODULE_SEPARATOR @AT@ 1779 @LENGTH@ 16
---------------DEL SimpleName@@Name:identifier @AT@ 1755 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:replace:[':', MODULE_SEPARATOR] @TO@ MethodName:replace:['.', MODULE_SEPARATOR] @AT@ 1797 @LENGTH@ 30
------------------UPD CharacterLiteral@@':' @TO@ '.' @AT@ 1805 @LENGTH@ 3
---------------INS ArrayAccess@@nameAndSlot[0] @TO@ MethodInvocation@@identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) @AT@ 1824 @LENGTH@ 14
------------------INS SimpleName@@nameAndSlot @TO@ ArrayAccess@@nameAndSlot[0] @AT@ 1824 @LENGTH@ 11
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@nameAndSlot[0] @AT@ 1836 @LENGTH@ 1
------------INS SimpleName@@MODULE_SEPARATOR @TO@ InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @AT@ 1872 @LENGTH@ 16
------------INS ArrayAccess@@nameAndSlot[1] @TO@ InfixExpression@@"modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml" @AT@ 1891 @LENGTH@ 14
---------------INS SimpleName@@nameAndSlot @TO@ ArrayAccess@@nameAndSlot[1] @AT@ 1891 @LENGTH@ 11
---------------INS NumberLiteral@@1 @TO@ ArrayAccess@@nameAndSlot[1] @AT@ 1903 @LENGTH@ 1
---INS VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @TO@ TryStatement@@try (AutoCloseable handle=Performance.accumulate("module: BootstrapClassPath")){  final String path="modules/" + identifier.replace('.',MODULE_SEPARATOR).replace(':',MODULE_SEPARATOR) + "/module.xml";  ClassLoader cl=BootstrapClasspathModuleFinder.class.getClassLoader();  URL url=cl.getResource(path);  if (url == null) {    return null;  }  ModuleSpec moduleSpec=null;  InputStream in=null;  try {    final URL base=new URL(url,"./");    in=url.openStream();    moduleSpec=ModuleXmlParser.parseModuleXml((rootPath,loaderPath,loaderName) -> NestedJarResourceLoader.loaderFor(base,rootPath,loaderPath,loaderName),MavenResolvers.get(),"/",in,path.toString(),delegateLoader,simpleIdentifier);  } catch (  IOException e) {    throw new ModuleLoadException(e);  }catch (  Throwable t) {    throw t;  } finally {    try {      if (in != null) {        in.close();      }    } catch (    IOException e) {      throw new ModuleLoadException(e);    }  }  return moduleSpec;} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 1722 @LENGTH@ 56
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1722 @LENGTH@ 5
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1728 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 1728 @LENGTH@ 6
------INS VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @TO@ VariableDeclarationStatement@@final String[] nameAndSlot=identifier.split("\\:",2); @AT@ 1737 @LENGTH@ 40
---------INS SimpleName@@nameAndSlot @TO@ VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @AT@ 1737 @LENGTH@ 11
---------INS MethodInvocation@@identifier.split("\\:",2) @TO@ VariableDeclarationFragment@@nameAndSlot=identifier.split("\\:",2) @AT@ 1751 @LENGTH@ 26
------------INS SimpleName@@Name:identifier @TO@ MethodInvocation@@identifier.split("\\:",2) @AT@ 1751 @LENGTH@ 10
------------INS SimpleName@@MethodName:split:["\\:", 2] @TO@ MethodInvocation@@identifier.split("\\:",2) @AT@ 1762 @LENGTH@ 15
---------------INS StringLiteral@@"\\:" @TO@ SimpleName@@MethodName:split:["\\:", 2] @AT@ 1768 @LENGTH@ 5
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:split:["\\:", 2] @AT@ 1775 @LENGTH@ 1


UPD Block@@WhileBody:{  if (timeout > 0) {    long delta=watch.taken();    if (delta > timeout) {      CamelLogger.log(LOG,readLockLoggingLevel,"Cannot acquire read lock within " + timeout + " millis. Will skip the file: "+ file);      return false;    }  }  long newLastModified=0;  long newLength=0;  List<ChannelSftp.LsEntry> files;  if (fastExistsCheck) {    String path=file.getAbsoluteFilePath();    if (path.equals("/") || path.equals("\\")) {      LOG.trace("Using fast exists to update file information in home directory");      files=operations.listFiles();    } else {      LOG.trace("Using fast exists to update file information for {}",path);      files=operations.listFiles(path);    }  } else {    String path=file.getParent();    if (path.equals("/") || path.equals("\\")) {      LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");      files=operations.listFiles();    } else {      LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);      files=operations.listFiles(path);    }  }  LOG.trace("List files {} found {} files",file.getAbsoluteFilePath(),files.size());  for (  ChannelSftp.LsEntry f : files) {    boolean match;    if (fastExistsCheck) {      match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly());    } else {      match=f.getFilename().equals(file.getFileNameOnly());    }    if (match) {      newLastModified=f.getAttrs().getMTime() * 1000L;      newLength=f.getAttrs().getSize();    }  }  LOG.trace("Previous last modified: " + lastModified + ", new last modified: "+ newLastModified);  LOG.trace("Previous length: " + length + ", new length: "+ newLength);  long newOlderThan=startTime + watch.taken() - minAge;  LOG.trace("New older than threshold: {}",newOlderThan);  if (newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan))) {    LOG.trace("Read lock acquired.");    exclusive=true;  } else {    lastModified=newLastModified;    length=newLength;    boolean interrupted=sleep();    if (interrupted) {      return false;    }  }} @TO@ WhileBody:{  if (timeout > 0) {    long delta=watch.taken();    if (delta > timeout) {      CamelLogger.log(LOG,readLockLoggingLevel,"Cannot acquire read lock within " + timeout + " millis. Will skip the file: "+ file);      return false;    }  }  long newLastModified=0;  long newLength=0;  List files;  if (fastExistsCheck) {    String path=file.getAbsoluteFilePath();    if (path.equals("/") || path.equals("\\")) {      LOG.trace("Using fast exists to update file information in home directory");      files=operations.listFiles();    } else {      LOG.trace("Using fast exists to update file information for {}",path);      files=operations.listFiles(path);    }  } else {    String path=file.getParent();    if (path.equals("/") || path.equals("\\")) {      LOG.trace("Using full directory listing in home directory to update file information. Consider enabling fastExistsCheck option.");      files=operations.listFiles();    } else {      LOG.trace("Using full directory listing to update file information for {}. Consider enabling fastExistsCheck option.",path);      files=operations.listFiles(path);    }  }  LOG.trace("List files {} found {} files",file.getAbsoluteFilePath(),files.size());  for (  Object f : files) {    SftpRemoteFile rf=(SftpRemoteFile)f;    boolean match;    if (fastExistsCheck) {      match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly());    } else {      match=rf.getFilename().equals(file.getFileNameOnly());    }    if (match) {      newLastModified=rf.getLastModified();      newLength=rf.getFileLength();    }  }  LOG.trace("Previous last modified: " + lastModified + ", new last modified: "+ newLastModified);  LOG.trace("Previous length: " + length + ", new length: "+ newLength);  long newOlderThan=startTime + watch.taken() - minAge;  LOG.trace("New older than threshold: {}",newOlderThan);  if (newLength >= minLength && ((minAge == 0 && newLastModified == lastModified && newLength == length) || (minAge != 0 && newLastModified < newOlderThan))) {    LOG.trace("Read lock acquired.");    exclusive=true;  } else {    lastModified=newLastModified;    length=newLength;    boolean interrupted=sleep();    if (interrupted) {      return false;    }  }} @AT@ 2566 @LENGTH@ 3713
---UPD VariableDeclarationStatement@@List<ChannelSftp.LsEntry> files; @TO@ List files; @AT@ 3131 @LENGTH@ 32
------DEL ParameterizedType@@List<ChannelSftp.LsEntry> @AT@ 3131 @LENGTH@ 25
---------DEL SimpleType@@List @AT@ 3131 @LENGTH@ 4
---------DEL SimpleType@@ChannelSftp.LsEntry @AT@ 3136 @LENGTH@ 19
------INS SimpleType@@List @TO@ VariableDeclarationStatement@@List<ChannelSftp.LsEntry> files; @AT@ 3193 @LENGTH@ 4
---UPD EnhancedForStatement@@for (ChannelSftp.LsEntry f : files) {  boolean match;  if (fastExistsCheck) {    match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly());  } else {    match=f.getFilename().equals(file.getFileNameOnly());  }  if (match) {    newLastModified=f.getAttrs().getMTime() * 1000L;    newLength=f.getAttrs().getSize();  }} @TO@ for (Object f : files) {  SftpRemoteFile rf=(SftpRemoteFile)f;  boolean match;  if (fastExistsCheck) {    match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly());  } else {    match=rf.getFilename().equals(file.getFileNameOnly());  }  if (match) {    newLastModified=rf.getLastModified();    newLength=rf.getFileLength();  }} @AT@ 4665 @LENGTH@ 603
------UPD SingleVariableDeclaration@@ChannelSftp.LsEntry f @TO@ Object f @AT@ 4670 @LENGTH@ 21
---------UPD SimpleType@@ChannelSftp.LsEntry @TO@ Object @AT@ 4670 @LENGTH@ 19
------UPD IfStatement@@if (fastExistsCheck) {  match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly());} else {  match=f.getFilename().equals(file.getFileNameOnly());} @TO@ if (fastExistsCheck) {  match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly());} else {  match=rf.getFilename().equals(file.getFileNameOnly());} @AT@ 4750 @LENGTH@ 330
---------UPD Block@@ThenBody:{  match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly());} @TO@ ThenBody:{  match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly());} @AT@ 4771 @LENGTH@ 208
------------UPD ExpressionStatement@@Assignment:match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly()) @TO@ Assignment:match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly()) @AT@ 4852 @LENGTH@ 109
---------------UPD Assignment@@match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly()) @TO@ match=rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly()) @AT@ 4852 @LENGTH@ 108
------------------UPD InfixExpression@@f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly()) @TO@ rf.getFilename().equals(file.getAbsoluteFilePath()) || rf.getFilename().equals(file.getFileNameOnly()) @AT@ 4860 @LENGTH@ 100
---------------------UPD MethodInvocation@@f.getFilename().equals(file.getAbsoluteFilePath()) @TO@ rf.getFilename().equals(file.getAbsoluteFilePath()) @AT@ 4860 @LENGTH@ 50
------------------------UPD SimpleName@@Name:f @TO@ Name:rf @AT@ 4860 @LENGTH@ 1
---------------------UPD MethodInvocation@@f.getFilename().equals(file.getFileNameOnly()) @TO@ rf.getFilename().equals(file.getFileNameOnly()) @AT@ 4914 @LENGTH@ 46
------------------------UPD SimpleName@@Name:f @TO@ Name:rf @AT@ 4914 @LENGTH@ 1
---------UPD Block@@ElseBody:{  match=f.getFilename().equals(file.getFileNameOnly());} @TO@ ElseBody:{  match=rf.getFilename().equals(file.getFileNameOnly());} @AT@ 4985 @LENGTH@ 95
------------UPD ExpressionStatement@@Assignment:match=f.getFilename().equals(file.getFileNameOnly()) @TO@ Assignment:match=rf.getFilename().equals(file.getFileNameOnly()) @AT@ 5007 @LENGTH@ 55
---------------UPD Assignment@@match=f.getFilename().equals(file.getFileNameOnly()) @TO@ match=rf.getFilename().equals(file.getFileNameOnly()) @AT@ 5007 @LENGTH@ 54
------------------UPD MethodInvocation@@f.getFilename().equals(file.getFileNameOnly()) @TO@ rf.getFilename().equals(file.getFileNameOnly()) @AT@ 5015 @LENGTH@ 46
---------------------UPD SimpleName@@Name:f @TO@ Name:rf @AT@ 5015 @LENGTH@ 1
------INS VariableDeclarationStatement@@SftpRemoteFile rf=(SftpRemoteFile)f; @TO@ EnhancedForStatement@@for (ChannelSftp.LsEntry f : files) {  boolean match;  if (fastExistsCheck) {    match=f.getFilename().equals(file.getAbsoluteFilePath()) || f.getFilename().equals(file.getFileNameOnly());  } else {    match=f.getFilename().equals(file.getFileNameOnly());  }  if (match) {    newLastModified=f.getAttrs().getMTime() * 1000L;    newLength=f.getAttrs().getSize();  }} @AT@ 4840 @LENGTH@ 39
---------INS SimpleType@@SftpRemoteFile @TO@ VariableDeclarationStatement@@SftpRemoteFile rf=(SftpRemoteFile)f; @AT@ 4840 @LENGTH@ 14
---------INS VariableDeclarationFragment@@rf=(SftpRemoteFile)f @TO@ VariableDeclarationStatement@@SftpRemoteFile rf=(SftpRemoteFile)f; @AT@ 4855 @LENGTH@ 23
------------INS SimpleName@@rf @TO@ VariableDeclarationFragment@@rf=(SftpRemoteFile)f @AT@ 4855 @LENGTH@ 2
------------INS CastExpression@@(SftpRemoteFile)f @TO@ VariableDeclarationFragment@@rf=(SftpRemoteFile)f @AT@ 4860 @LENGTH@ 18
---------------INS SimpleType@@SftpRemoteFile @TO@ CastExpression@@(SftpRemoteFile)f @AT@ 4861 @LENGTH@ 14
---------------INS SimpleName@@f @TO@ CastExpression@@(SftpRemoteFile)f @AT@ 4877 @LENGTH@ 1
------UPD IfStatement@@if (match) {  newLastModified=f.getAttrs().getMTime() * 1000L;  newLength=f.getAttrs().getSize();} @TO@ if (match) {  newLastModified=rf.getLastModified();  newLength=rf.getFileLength();} @AT@ 5097 @LENGTH@ 157
---------UPD Block@@ThenBody:{  newLastModified=f.getAttrs().getMTime() * 1000L;  newLength=f.getAttrs().getSize();} @TO@ ThenBody:{  newLastModified=rf.getLastModified();  newLength=rf.getFileLength();} @AT@ 5108 @LENGTH@ 146
------------UPD ExpressionStatement@@Assignment:newLastModified=f.getAttrs().getMTime() * 1000L @TO@ Assignment:newLastModified=rf.getLastModified() @AT@ 5130 @LENGTH@ 50
---------------UPD Assignment@@newLastModified=f.getAttrs().getMTime() * 1000L @TO@ newLastModified=rf.getLastModified() @AT@ 5130 @LENGTH@ 49
------------------DEL InfixExpression@@f.getAttrs().getMTime() * 1000L @AT@ 5148 @LENGTH@ 31
---------------------DEL MethodInvocation@@f.getAttrs().getMTime() @AT@ 5148 @LENGTH@ 23
------------------------DEL MethodInvocation@@MethodName:getAttrs:[] @AT@ 5148 @LENGTH@ 12
---------------------DEL Operator@@* @AT@ 5171 @LENGTH@ 1
---------------------DEL NumberLiteral@@1000L @AT@ 5174 @LENGTH@ 5
------------------INS MethodInvocation@@rf.getLastModified() @TO@ Assignment@@newLastModified=f.getAttrs().getMTime() * 1000L @AT@ 5328 @LENGTH@ 20
---------------------MOV SimpleName@@Name:f @TO@ MethodInvocation@@rf.getLastModified() @AT@ 5148 @LENGTH@ 1
---------------------MOV SimpleName@@MethodName:getMTime:[] @TO@ MethodInvocation@@rf.getLastModified() @AT@ 5161 @LENGTH@ 10
------------UPD ExpressionStatement@@Assignment:newLength=f.getAttrs().getSize() @TO@ Assignment:newLength=rf.getFileLength() @AT@ 5201 @LENGTH@ 35
---------------UPD Assignment@@newLength=f.getAttrs().getSize() @TO@ newLength=rf.getFileLength() @AT@ 5201 @LENGTH@ 34
------------------UPD MethodInvocation@@f.getAttrs().getSize() @TO@ rf.getFileLength() @AT@ 5213 @LENGTH@ 22
---------------------DEL MethodInvocation@@MethodName:getAttrs:[] @AT@ 5213 @LENGTH@ 12
---------------------UPD SimpleName@@Name:f @TO@ Name:rf @AT@ 5213 @LENGTH@ 1
---------------------UPD SimpleName@@MethodName:getSize:[] @TO@ MethodName:getFileLength:[] @AT@ 5226 @LENGTH@ 9


UPD IfStatement@@if (identifier.getName().startsWith(MODULE_PREFIX)) {  return super.preloadModule(identifier);} else {  return preloadModule(identifier,mainModuleLoader);} @TO@ if (identifier.getName().startsWith(MODULE_PREFIX)) {synchronized (ServiceModuleLoader.class) {    return super.preloadModule(identifier);  }} else {  return preloadModule(identifier,mainModuleLoader);} @AT@ 5788 @LENGTH@ 196
---INS Block@@ThenBody:{synchronized (ServiceModuleLoader.class) {    return super.preloadModule(identifier);  }} @TO@ IfStatement@@if (identifier.getName().startsWith(MODULE_PREFIX)) {  return super.preloadModule(identifier);} else {  return preloadModule(identifier,mainModuleLoader);} @AT@ 5840 @LENGTH@ 151
------INS SynchronizedStatement@@synchronized (ServiceModuleLoader.class) {  return super.preloadModule(identifier);} @TO@ Block@@ThenBody:{synchronized (ServiceModuleLoader.class) {    return super.preloadModule(identifier);  }} @AT@ 5854 @LENGTH@ 127
---------MOV Block@@ThenBody:{  return super.preloadModule(identifier);} @TO@ SynchronizedStatement@@synchronized (ServiceModuleLoader.class) {  return super.preloadModule(identifier);} @AT@ 5840 @LENGTH@ 63
---------INS TypeLiteral@@ServiceModuleLoader.class @TO@ SynchronizedStatement@@synchronized (ServiceModuleLoader.class) {  return super.preloadModule(identifier);} @AT@ 5868 @LENGTH@ 25
---UPD Block@@ThenBody:{  return super.preloadModule(identifier);} @TO@ SyncBody:{  return super.preloadModule(identifier);} @AT@ 5840 @LENGTH@ 63


UPD IfStatement@@if (colNames == null || colNames.isEmpty()) {  return null;} @TO@ if (colNames == null || colNames.isEmpty()) {  return Collections.emptyList();} @AT@ 299368 @LENGTH@ 70
---INS Block@@ThenBody:{  return Collections.emptyList();} @TO@ IfStatement@@if (colNames == null || colNames.isEmpty()) {  return null;} @AT@ 299411 @LENGTH@ 45
------INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  return Collections.emptyList();} @AT@ 299419 @LENGTH@ 31
---------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 299426 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 299426 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 299438 @LENGTH@ 11


UPD MethodDeclaration@@public, MethodBinding, MethodName:createMethodBinding, String ref, Class<?>... params, ReferenceSyntaxException,  @TO@ public, MethodBinding, MethodName:createMethodBinding, String ref, Class<?>[] params, ReferenceSyntaxException,  @AT@ 3430 @LENGTH@ 124
---UPD SingleVariableDeclaration@@Class<?>... params @TO@ Class<?>[] params @AT@ 3483 @LENGTH@ 18
------INS ArrayType@@Class<?>[] @TO@ SingleVariableDeclaration@@Class<?>... params @AT@ 3483 @LENGTH@ 10
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class<?>[] @AT@ 3483 @LENGTH@ 8
------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 3483 @LENGTH@ 5
------------MOV WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 3489 @LENGTH@ 1
------DEL ParameterizedType@@Class<?> @AT@ 3483 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:headers.set("Content-Type","application/json;charset=UTF-8") @TO@ MethodDeclaration@@private, ResponseEntity<OAuth2AccessToken>, MethodName:getResponse, OAuth2AccessToken accessToken,  @AT@ 8608 @LENGTH@ 62
---INS MethodInvocation@@headers.set("Content-Type","application/json;charset=UTF-8") @TO@ ExpressionStatement@@MethodInvocation:headers.set("Content-Type","application/json;charset=UTF-8") @AT@ 8608 @LENGTH@ 61
------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.set("Content-Type","application/json;charset=UTF-8") @AT@ 8608 @LENGTH@ 7
------INS SimpleName@@MethodName:set:["Content-Type", "application/json;charset=UTF-8"] @TO@ MethodInvocation@@headers.set("Content-Type","application/json;charset=UTF-8") @AT@ 8616 @LENGTH@ 53
---------INS StringLiteral@@"Content-Type" @TO@ SimpleName@@MethodName:set:["Content-Type", "application/json;charset=UTF-8"] @AT@ 8620 @LENGTH@ 14
---------INS StringLiteral@@"application/json;charset=UTF-8" @TO@ SimpleName@@MethodName:set:["Content-Type", "application/json;charset=UTF-8"] @AT@ 8636 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:LOG.trace("invokeFunction command returned the error code {}",ase.getErrorCode()) @TO@ MethodInvocation:LOG.trace("createFunction command returned the error code {}",ase.getErrorCode()) @AT@ 13193 @LENGTH@ 83
---UPD MethodInvocation@@LOG.trace("invokeFunction command returned the error code {}",ase.getErrorCode()) @TO@ LOG.trace("createFunction command returned the error code {}",ase.getErrorCode()) @AT@ 13193 @LENGTH@ 82
------UPD SimpleName@@MethodName:trace:["invokeFunction command returned the error code {}", ase.getErrorCode()] @TO@ MethodName:trace:["createFunction command returned the error code {}", ase.getErrorCode()] @AT@ 13197 @LENGTH@ 78
---------UPD StringLiteral@@"invokeFunction command returned the error code {}" @TO@ "createFunction command returned the error code {}" @AT@ 13203 @LENGTH@ 51


DEL FieldDeclaration@@private, HealthCheckRoutesConfiguration, [configuration] @AT@ 2119 @LENGTH@ 53
---DEL Modifier@@private @AT@ 2119 @LENGTH@ 7
---DEL SimpleType@@HealthCheckRoutesConfiguration @AT@ 2127 @LENGTH@ 30
---DEL VariableDeclarationFragment@@configuration @AT@ 2158 @LENGTH@ 13
------DEL SimpleName@@configuration @AT@ 2158 @LENGTH@ 13


UPD FieldDeclaration@@private, int, [index=0] @TO@ private, int, [index] @AT@ 3631 @LENGTH@ 22
---UPD VariableDeclarationFragment@@index=0 @TO@ index @AT@ 3643 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 3651 @LENGTH@ 1


DEL MethodDeclaration@@public, void, MethodName:usesQueryDslRepositoryIfInterfaceImplementsExecutor,  @AT@ 5060 @LENGTH@ 634
---DEL Modifier@@public @AT@ 5060 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 5067 @LENGTH@ 4
---DEL SimpleName@@MethodName:usesQueryDslRepositoryIfInterfaceImplementsExecutor @AT@ 5072 @LENGTH@ 51
---DEL ExpressionStatement@@MethodInvocation:when(entityInformation.getJavaType()).thenReturn(User.class) @AT@ 5131 @LENGTH@ 61
------DEL MethodInvocation@@when(entityInformation.getJavaType()).thenReturn(User.class) @AT@ 5131 @LENGTH@ 60
---------DEL MethodInvocation@@MethodName:when:[entityInformation.getJavaType()] @AT@ 5131 @LENGTH@ 37
------------DEL MethodInvocation@@entityInformation.getJavaType() @AT@ 5136 @LENGTH@ 31
---------------DEL SimpleName@@Name:entityInformation @AT@ 5136 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:getJavaType:[] @AT@ 5154 @LENGTH@ 13
---------DEL SimpleName@@MethodName:thenReturn:[User.class] @AT@ 5169 @LENGTH@ 22
------------DEL TypeLiteral@@User.class @AT@ 5180 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:assertEquals(QuerydslJpaRepository.class,factory.getRepositoryBaseClass(new DefaultRepositoryMetadata(QueryDslSampleRepository.class))) @AT@ 5195 @LENGTH@ 141
------DEL MethodInvocation@@assertEquals(QuerydslJpaRepository.class,factory.getRepositoryBaseClass(new DefaultRepositoryMetadata(QueryDslSampleRepository.class))) @AT@ 5195 @LENGTH@ 140
---------DEL SimpleName@@MethodName:assertEquals:[QuerydslJpaRepository.class, factory.getRepositoryBaseClass(new DefaultRepositoryMetadata(QueryDslSampleRepository.class))] @AT@ 5195 @LENGTH@ 140
------------DEL TypeLiteral@@QuerydslJpaRepository.class @AT@ 5208 @LENGTH@ 27
------------DEL MethodInvocation@@factory.getRepositoryBaseClass(new DefaultRepositoryMetadata(QueryDslSampleRepository.class)) @AT@ 5241 @LENGTH@ 93
---------------DEL SimpleName@@Name:factory @AT@ 5241 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getRepositoryBaseClass:[new DefaultRepositoryMetadata(QueryDslSampleRepository.class)] @AT@ 5249 @LENGTH@ 85
------------------DEL ClassInstanceCreation@@DefaultRepositoryMetadata[QueryDslSampleRepository.class] @AT@ 5272 @LENGTH@ 61
---------------------DEL New@@new @AT@ 5272 @LENGTH@ 3
---------------------DEL SimpleType@@DefaultRepositoryMetadata @AT@ 5276 @LENGTH@ 25
---------------------DEL TypeLiteral@@QueryDslSampleRepository.class @AT@ 5302 @LENGTH@ 30
---DEL TryStatement@@try {  QueryDslSampleRepository repository=factory.getRepository(QueryDslSampleRepository.class);  assertEquals(QuerydslJpaRepository.class,((Advised)repository).getTargetClass());} catch (IllegalArgumentException e) {  assertThat(e.getStackTrace()[0].getClassName(),is("org.springframework.data.querydsl.SimpleEntityPathResolver"));} @AT@ 5340 @LENGTH@ 351
------DEL VariableDeclarationStatement@@QueryDslSampleRepository repository=factory.getRepository(QueryDslSampleRepository.class); @AT@ 5349 @LENGTH@ 92
---------DEL SimpleType@@QueryDslSampleRepository @AT@ 5349 @LENGTH@ 24
---------DEL VariableDeclarationFragment@@repository=factory.getRepository(QueryDslSampleRepository.class) @AT@ 5374 @LENGTH@ 66
------------DEL SimpleName@@repository @AT@ 5374 @LENGTH@ 10
------------DEL MethodInvocation@@factory.getRepository(QueryDslSampleRepository.class) @AT@ 5387 @LENGTH@ 53
---------------DEL SimpleName@@Name:factory @AT@ 5387 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getRepository:[QueryDslSampleRepository.class] @AT@ 5395 @LENGTH@ 45
------------------DEL TypeLiteral@@QueryDslSampleRepository.class @AT@ 5409 @LENGTH@ 30
------DEL ExpressionStatement@@MethodInvocation:assertEquals(QuerydslJpaRepository.class,((Advised)repository).getTargetClass()) @AT@ 5445 @LENGTH@ 83
---------DEL MethodInvocation@@assertEquals(QuerydslJpaRepository.class,((Advised)repository).getTargetClass()) @AT@ 5445 @LENGTH@ 82
------------DEL SimpleName@@MethodName:assertEquals:[QuerydslJpaRepository.class, ((Advised)repository).getTargetClass()] @AT@ 5445 @LENGTH@ 82
---------------DEL TypeLiteral@@QuerydslJpaRepository.class @AT@ 5458 @LENGTH@ 27
---------------DEL MethodInvocation@@((Advised)repository).getTargetClass() @AT@ 5487 @LENGTH@ 39
------------------DEL ParenthesizedExpression@@((Advised)repository) @AT@ 5487 @LENGTH@ 22
---------------------DEL CastExpression@@(Advised)repository @AT@ 5488 @LENGTH@ 20
------------------------DEL SimpleType@@Advised @AT@ 5489 @LENGTH@ 7
------------------------DEL SimpleName@@repository @AT@ 5498 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:getTargetClass:[] @AT@ 5510 @LENGTH@ 16
------DEL CatchClause@@catch (IllegalArgumentException e) {  assertThat(e.getStackTrace()[0].getClassName(),is("org.springframework.data.querydsl.SimpleEntityPathResolver"));} @AT@ 5533 @LENGTH@ 158
---------DEL SingleVariableDeclaration@@IllegalArgumentException e @AT@ 5540 @LENGTH@ 26
------------DEL SimpleType@@IllegalArgumentException @AT@ 5540 @LENGTH@ 24
------------DEL SimpleName@@e @AT@ 5565 @LENGTH@ 1
---------DEL ExpressionStatement@@MethodInvocation:assertThat(e.getStackTrace()[0].getClassName(),is("org.springframework.data.querydsl.SimpleEntityPathResolver")) @AT@ 5573 @LENGTH@ 114
------------DEL MethodInvocation@@assertThat(e.getStackTrace()[0].getClassName(),is("org.springframework.data.querydsl.SimpleEntityPathResolver")) @AT@ 5573 @LENGTH@ 113
---------------DEL SimpleName@@MethodName:assertThat:[e.getStackTrace()[0].getClassName(), is("org.springframework.data.querydsl.SimpleEntityPathResolver")] @AT@ 5573 @LENGTH@ 113
------------------DEL MethodInvocation@@e.getStackTrace()[0].getClassName() @AT@ 5584 @LENGTH@ 35
---------------------DEL ArrayAccess@@e.getStackTrace()[0] @AT@ 5584 @LENGTH@ 20
------------------------DEL MethodInvocation@@e.getStackTrace() @AT@ 5584 @LENGTH@ 17
---------------------------DEL SimpleName@@Name:e @AT@ 5584 @LENGTH@ 1
---------------------------DEL SimpleName@@MethodName:getStackTrace:[] @AT@ 5586 @LENGTH@ 15
------------------------DEL NumberLiteral@@0 @AT@ 5602 @LENGTH@ 1
---------------------DEL SimpleName@@MethodName:getClassName:[] @AT@ 5605 @LENGTH@ 14
------------------DEL MethodInvocation@@is("org.springframework.data.querydsl.SimpleEntityPathResolver") @AT@ 5621 @LENGTH@ 64
---------------------DEL SimpleName@@MethodName:is:["org.springframework.data.querydsl.SimpleEntityPathResolver"] @AT@ 5621 @LENGTH@ 64
------------------------DEL StringLiteral@@"org.springframework.data.querydsl.SimpleEntityPathResolver" @AT@ 5624 @LENGTH@ 60


INS ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ MethodDeclaration@@private, S3Configuration, MethodName:getS3ConfigurationUseEncryption,  @AT@ 2858 @LENGTH@ 58
---INS MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2858 @LENGTH@ 57
------INS MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2858 @LENGTH@ 33
---------INS MethodInvocation@@s3Configuration.getRegion() @TO@ MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @AT@ 2863 @LENGTH@ 27
------------INS SimpleName@@Name:s3Configuration @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2863 @LENGTH@ 15
------------INS SimpleName@@MethodName:getRegion:[] @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2879 @LENGTH@ 11
------INS SimpleName@@MethodName:thenReturn:["US_EAST_1"] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2892 @LENGTH@ 23
---------INS StringLiteral@@"US_EAST_1" @TO@ SimpleName@@MethodName:thenReturn:["US_EAST_1"] @AT@ 2903 @LENGTH@ 11


UPD MethodDeclaration@@public, KafkaManualCommit, MethodName:newInstance, Exchange exchange, KafkaConsumer consumer, String topicName, String threadId, StateRepository<String,String> offsetRepository, TopicPartition partition, long partitionLastOffset,  @TO@ public, KafkaManualCommit, MethodName:newInstance, Exchange exchange, KafkaConsumer consumer, String topicName, String threadId, StateRepository<String,String> offsetRepository, TopicPartition partition, long recordOffset,  @AT@ 1132 @LENGTH@ 391
---UPD SingleVariableDeclaration@@long partitionLastOffset @TO@ long recordOffset @AT@ 1364 @LENGTH@ 24
------UPD SimpleName@@partitionLastOffset @TO@ recordOffset @AT@ 1369 @LENGTH@ 19
---UPD ReturnStatement@@ClassInstanceCreation:new DefaultKafkaManualCommit(consumer,topicName,threadId,offsetRepository,partition,partitionLastOffset) @TO@ ClassInstanceCreation:new DefaultKafkaManualCommit(consumer,topicName,threadId,offsetRepository,partition,recordOffset) @AT@ 1400 @LENGTH@ 117
------UPD ClassInstanceCreation@@DefaultKafkaManualCommit[consumer, topicName, threadId, offsetRepository, partition, partitionLastOffset] @TO@ DefaultKafkaManualCommit[consumer, topicName, threadId, offsetRepository, partition, recordOffset] @AT@ 1407 @LENGTH@ 109
---------UPD SimpleName@@partitionLastOffset @TO@ recordOffset @AT@ 1496 @LENGTH@ 19


UPD TryStatement@@try {  Path constraintsRoot=new Path(dbRoot,CONSTRAINTS_ROOT_DIR_NAME);  Path constraintsFile=new Path(constraintsRoot,tblName);  Hive db=getHive();  List<SQLPrimaryKey> pks=db.getPrimaryKeyList(dbName,tblName);  List<SQLForeignKey> fks=db.getForeignKeyList(dbName,tblName);  List<SQLUniqueConstraint> uks=db.getUniqueConstraintList(dbName,tblName);  List<SQLNotNullConstraint> nns=db.getNotNullConstraintList(dbName,tblName);  if ((pks != null && !pks.isEmpty()) || (fks != null && !fks.isEmpty()) || (uks != null && !uks.isEmpty())|| (nns != null && !nns.isEmpty())) {    try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){      ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);      serializer.writeTo(jsonWriter,null);    }   }} catch (NoSuchObjectException e) {  LOG.debug(e.getMessage());} @TO@ try {  Path constraintsRoot=new Path(dbRoot,CONSTRAINTS_ROOT_DIR_NAME);  Path commonConstraintsFile=new Path(constraintsRoot,ConstraintFileType.COMMON.getPrefix() + tblName);  Path fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName);  Hive db=getHive();  List<SQLPrimaryKey> pks=db.getPrimaryKeyList(dbName,tblName);  List<SQLForeignKey> fks=db.getForeignKeyList(dbName,tblName);  List<SQLUniqueConstraint> uks=db.getUniqueConstraintList(dbName,tblName);  List<SQLNotNullConstraint> nns=db.getNotNullConstraintList(dbName,tblName);  if ((pks != null && !pks.isEmpty()) || (uks != null && !uks.isEmpty()) || (nns != null && !nns.isEmpty())) {    try (JsonWriter jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile)){      ConstraintsSerializer serializer=new ConstraintsSerializer(pks,null,uks,nns,conf);      serializer.writeTo(jsonWriter,null);    }   }  if (fks != null && !fks.isEmpty()) {    try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){      ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);      serializer.writeTo(jsonWriter,null);    }   }} catch (NoSuchObjectException e) {  LOG.debug(e.getMessage());} @AT@ 14738 @LENGTH@ 1152
---UPD VariableDeclarationStatement@@Path constraintsFile=new Path(constraintsRoot,tblName); @TO@ Path commonConstraintsFile=new Path(constraintsRoot,ConstraintFileType.COMMON.getPrefix() + tblName); @AT@ 14824 @LENGTH@ 58
------UPD VariableDeclarationFragment@@constraintsFile=new Path(constraintsRoot,tblName) @TO@ commonConstraintsFile=new Path(constraintsRoot,ConstraintFileType.COMMON.getPrefix() + tblName) @AT@ 14829 @LENGTH@ 52
---------UPD SimpleName@@constraintsFile @TO@ commonConstraintsFile @AT@ 14829 @LENGTH@ 15
---------UPD ClassInstanceCreation@@Path[constraintsRoot, tblName] @TO@ Path[constraintsRoot, ConstraintFileType.COMMON.getPrefix() + tblName] @AT@ 14847 @LENGTH@ 34
------------DEL SimpleName@@tblName @AT@ 14873 @LENGTH@ 7
------------INS InfixExpression@@ConstraintFileType.COMMON.getPrefix() + tblName @TO@ ClassInstanceCreation@@Path[constraintsRoot, tblName] @AT@ 15268 @LENGTH@ 47
---------------INS MethodInvocation@@ConstraintFileType.COMMON.getPrefix() @TO@ InfixExpression@@ConstraintFileType.COMMON.getPrefix() + tblName @AT@ 15268 @LENGTH@ 37
------------------INS QualifiedName@@Name:ConstraintFileType.COMMON @TO@ MethodInvocation@@ConstraintFileType.COMMON.getPrefix() @AT@ 15268 @LENGTH@ 25
------------------INS SimpleName@@MethodName:getPrefix:[] @TO@ MethodInvocation@@ConstraintFileType.COMMON.getPrefix() @AT@ 15294 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@ConstraintFileType.COMMON.getPrefix() + tblName @AT@ 15305 @LENGTH@ 1
---------------INS SimpleName@@tblName @TO@ InfixExpression@@ConstraintFileType.COMMON.getPrefix() + tblName @AT@ 15308 @LENGTH@ 7
---UPD IfStatement@@if ((pks != null && !pks.isEmpty()) || (fks != null && !fks.isEmpty()) || (uks != null && !uks.isEmpty())|| (nns != null && !nns.isEmpty())) {  try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);    serializer.writeTo(jsonWriter,null);  } } @TO@ if ((pks != null && !pks.isEmpty()) || (uks != null && !uks.isEmpty()) || (nns != null && !nns.isEmpty())) {  try (JsonWriter jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(pks,null,uks,nns,conf);    serializer.writeTo(jsonWriter,null);  } } @AT@ 15226 @LENGTH@ 438
------UPD InfixExpression@@(pks != null && !pks.isEmpty()) || (fks != null && !fks.isEmpty()) || (uks != null && !uks.isEmpty())|| (nns != null && !nns.isEmpty()) @TO@ (pks != null && !pks.isEmpty()) || (uks != null && !uks.isEmpty()) || (nns != null && !nns.isEmpty()) @AT@ 15230 @LENGTH@ 146
---------DEL ParenthesizedExpression@@(fks != null && !fks.isEmpty()) @AT@ 15265 @LENGTH@ 31
------UPD Block@@ThenBody:{  try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);    serializer.writeTo(jsonWriter,null);  } } @TO@ ThenBody:{  try (JsonWriter jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(pks,null,uks,nns,conf);    serializer.writeTo(jsonWriter,null);  } } @AT@ 15378 @LENGTH@ 286
---------UPD TryStatement@@try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);  serializer.writeTo(jsonWriter,null);}  @TO@ try (JsonWriter jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(pks,null,uks,nns,conf);  serializer.writeTo(jsonWriter,null);}  @AT@ 15388 @LENGTH@ 268
------------UPD VariableDeclarationExpression@@JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile) @TO@ JsonWriter jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile) @AT@ 15393 @LENGTH@ 104
---------------UPD VariableDeclarationFragment@@jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile) @TO@ jsonWriter=new JsonWriter(commonConstraintsFile.getFileSystem(conf),commonConstraintsFile) @AT@ 15404 @LENGTH@ 93
------------------UPD ClassInstanceCreation@@JsonWriter[constraintsFile.getFileSystem(conf), constraintsFile] @TO@ JsonWriter[commonConstraintsFile.getFileSystem(conf), commonConstraintsFile] @AT@ 15429 @LENGTH@ 68
---------------------UPD MethodInvocation@@constraintsFile.getFileSystem(conf) @TO@ commonConstraintsFile.getFileSystem(conf) @AT@ 15444 @LENGTH@ 35
------------------------UPD SimpleName@@Name:constraintsFile @TO@ Name:commonConstraintsFile @AT@ 15444 @LENGTH@ 15
---------------------UPD SimpleName@@constraintsFile @TO@ commonConstraintsFile @AT@ 15481 @LENGTH@ 15
------------UPD VariableDeclarationStatement@@ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf); @TO@ ConstraintsSerializer serializer=new ConstraintsSerializer(pks,null,uks,nns,conf); @AT@ 15511 @LENGTH@ 87
---------------UPD VariableDeclarationFragment@@serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf) @TO@ serializer=new ConstraintsSerializer(pks,null,uks,nns,conf) @AT@ 15533 @LENGTH@ 64
------------------UPD ClassInstanceCreation@@ConstraintsSerializer[pks, fks, uks, nns, conf] @TO@ ConstraintsSerializer[pks, null, uks, nns, conf] @AT@ 15546 @LENGTH@ 51
---------------------DEL SimpleName@@fks @AT@ 15577 @LENGTH@ 3
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConstraintsSerializer[pks, fks, uks, nns, conf] @AT@ 16100 @LENGTH@ 4
---INS VariableDeclarationStatement@@Path fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName); @TO@ TryStatement@@try {  Path constraintsRoot=new Path(dbRoot,CONSTRAINTS_ROOT_DIR_NAME);  Path constraintsFile=new Path(constraintsRoot,tblName);  Hive db=getHive();  List<SQLPrimaryKey> pks=db.getPrimaryKeyList(dbName,tblName);  List<SQLForeignKey> fks=db.getForeignKeyList(dbName,tblName);  List<SQLUniqueConstraint> uks=db.getUniqueConstraintList(dbName,tblName);  List<SQLNotNullConstraint> nns=db.getNotNullConstraintList(dbName,tblName);  if ((pks != null && !pks.isEmpty()) || (fks != null && !fks.isEmpty()) || (uks != null && !uks.isEmpty())|| (nns != null && !nns.isEmpty())) {    try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){      ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);      serializer.writeTo(jsonWriter,null);    }   }} catch (NoSuchObjectException e) {  LOG.debug(e.getMessage());} @AT@ 15324 @LENGTH@ 104
------INS SimpleType@@Path @TO@ VariableDeclarationStatement@@Path fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName); @AT@ 15324 @LENGTH@ 4
------INS VariableDeclarationFragment@@fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName) @TO@ VariableDeclarationStatement@@Path fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName); @AT@ 15329 @LENGTH@ 98
---------INS SimpleName@@fkConstraintsFile @TO@ VariableDeclarationFragment@@fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName) @AT@ 15329 @LENGTH@ 17
---------INS ClassInstanceCreation@@Path[constraintsRoot, ConstraintFileType.FOREIGNKEY.getPrefix() + tblName] @TO@ VariableDeclarationFragment@@fkConstraintsFile=new Path(constraintsRoot,ConstraintFileType.FOREIGNKEY.getPrefix() + tblName) @AT@ 15349 @LENGTH@ 78
------------INS New@@new @TO@ ClassInstanceCreation@@Path[constraintsRoot, ConstraintFileType.FOREIGNKEY.getPrefix() + tblName] @AT@ 15349 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[constraintsRoot, ConstraintFileType.FOREIGNKEY.getPrefix() + tblName] @AT@ 15353 @LENGTH@ 4
------------INS SimpleName@@constraintsRoot @TO@ ClassInstanceCreation@@Path[constraintsRoot, ConstraintFileType.FOREIGNKEY.getPrefix() + tblName] @AT@ 15358 @LENGTH@ 15
------------INS InfixExpression@@ConstraintFileType.FOREIGNKEY.getPrefix() + tblName @TO@ ClassInstanceCreation@@Path[constraintsRoot, ConstraintFileType.FOREIGNKEY.getPrefix() + tblName] @AT@ 15375 @LENGTH@ 51
---------------INS MethodInvocation@@ConstraintFileType.FOREIGNKEY.getPrefix() @TO@ InfixExpression@@ConstraintFileType.FOREIGNKEY.getPrefix() + tblName @AT@ 15375 @LENGTH@ 41
------------------INS QualifiedName@@Name:ConstraintFileType.FOREIGNKEY @TO@ MethodInvocation@@ConstraintFileType.FOREIGNKEY.getPrefix() @AT@ 15375 @LENGTH@ 29
------------------INS SimpleName@@MethodName:getPrefix:[] @TO@ MethodInvocation@@ConstraintFileType.FOREIGNKEY.getPrefix() @AT@ 15405 @LENGTH@ 11
---------------INS Operator@@+ @TO@ InfixExpression@@ConstraintFileType.FOREIGNKEY.getPrefix() + tblName @AT@ 15416 @LENGTH@ 1
---------------INS SimpleName@@tblName @TO@ InfixExpression@@ConstraintFileType.FOREIGNKEY.getPrefix() + tblName @AT@ 15419 @LENGTH@ 7
---INS IfStatement@@if (fks != null && !fks.isEmpty()) {  try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);    serializer.writeTo(jsonWriter,null);  } } @TO@ TryStatement@@try {  Path constraintsRoot=new Path(dbRoot,CONSTRAINTS_ROOT_DIR_NAME);  Path constraintsFile=new Path(constraintsRoot,tblName);  Hive db=getHive();  List<SQLPrimaryKey> pks=db.getPrimaryKeyList(dbName,tblName);  List<SQLForeignKey> fks=db.getForeignKeyList(dbName,tblName);  List<SQLUniqueConstraint> uks=db.getUniqueConstraintList(dbName,tblName);  List<SQLNotNullConstraint> nns=db.getNotNullConstraintList(dbName,tblName);  if ((pks != null && !pks.isEmpty()) || (fks != null && !fks.isEmpty()) || (uks != null && !uks.isEmpty())|| (nns != null && !nns.isEmpty())) {    try (JsonWriter jsonWriter=new JsonWriter(constraintsFile.getFileSystem(conf),constraintsFile)){      ConstraintsSerializer serializer=new ConstraintsSerializer(pks,fks,uks,nns,conf);      serializer.writeTo(jsonWriter,null);    }   }} catch (NoSuchObjectException e) {  LOG.debug(e.getMessage());} @AT@ 16195 @LENGTH@ 328
------MOV InfixExpression@@fks != null && !fks.isEmpty() @TO@ IfStatement@@if (fks != null && !fks.isEmpty()) {  try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);    serializer.writeTo(jsonWriter,null);  } } @AT@ 15266 @LENGTH@ 29
------INS Block@@ThenBody:{  try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);    serializer.writeTo(jsonWriter,null);  } } @TO@ IfStatement@@if (fks != null && !fks.isEmpty()) {  try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);    serializer.writeTo(jsonWriter,null);  } } @AT@ 16230 @LENGTH@ 293
---------INS TryStatement@@try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);  serializer.writeTo(jsonWriter,null);}  @TO@ Block@@ThenBody:{  try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){    ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);    serializer.writeTo(jsonWriter,null);  } } @AT@ 16240 @LENGTH@ 275
------------INS VariableDeclarationExpression@@JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @TO@ TryStatement@@try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);  serializer.writeTo(jsonWriter,null);}  @AT@ 16245 @LENGTH@ 108
---------------INS SimpleType@@JsonWriter @TO@ VariableDeclarationExpression@@JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @AT@ 16245 @LENGTH@ 10
---------------INS VariableDeclarationFragment@@jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @TO@ VariableDeclarationExpression@@JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @AT@ 16256 @LENGTH@ 97
------------------INS SimpleName@@jsonWriter @TO@ VariableDeclarationFragment@@jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @AT@ 16256 @LENGTH@ 10
------------------INS ClassInstanceCreation@@JsonWriter[fkConstraintsFile.getFileSystem(conf), fkConstraintsFile] @TO@ VariableDeclarationFragment@@jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile) @AT@ 16281 @LENGTH@ 72
---------------------INS New@@new @TO@ ClassInstanceCreation@@JsonWriter[fkConstraintsFile.getFileSystem(conf), fkConstraintsFile] @AT@ 16281 @LENGTH@ 3
---------------------INS SimpleType@@JsonWriter @TO@ ClassInstanceCreation@@JsonWriter[fkConstraintsFile.getFileSystem(conf), fkConstraintsFile] @AT@ 16285 @LENGTH@ 10
---------------------INS MethodInvocation@@fkConstraintsFile.getFileSystem(conf) @TO@ ClassInstanceCreation@@JsonWriter[fkConstraintsFile.getFileSystem(conf), fkConstraintsFile] @AT@ 16296 @LENGTH@ 37
------------------------INS SimpleName@@Name:fkConstraintsFile @TO@ MethodInvocation@@fkConstraintsFile.getFileSystem(conf) @AT@ 16296 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:getFileSystem:[conf] @TO@ MethodInvocation@@fkConstraintsFile.getFileSystem(conf) @AT@ 16314 @LENGTH@ 19
---------------------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:getFileSystem:[conf] @AT@ 16328 @LENGTH@ 4
---------------------INS SimpleName@@fkConstraintsFile @TO@ ClassInstanceCreation@@JsonWriter[fkConstraintsFile.getFileSystem(conf), fkConstraintsFile] @AT@ 16335 @LENGTH@ 17
------------INS VariableDeclarationStatement@@ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf); @TO@ TryStatement@@try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);  serializer.writeTo(jsonWriter,null);}  @AT@ 16367 @LENGTH@ 90
---------------INS SimpleType@@ConstraintsSerializer @TO@ VariableDeclarationStatement@@ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf); @AT@ 16367 @LENGTH@ 21
---------------INS VariableDeclarationFragment@@serializer=new ConstraintsSerializer(null,fks,null,null,conf) @TO@ VariableDeclarationStatement@@ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf); @AT@ 16389 @LENGTH@ 67
------------------INS SimpleName@@serializer @TO@ VariableDeclarationFragment@@serializer=new ConstraintsSerializer(null,fks,null,null,conf) @AT@ 16389 @LENGTH@ 10
------------------INS ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @TO@ VariableDeclarationFragment@@serializer=new ConstraintsSerializer(null,fks,null,null,conf) @AT@ 16402 @LENGTH@ 54
---------------------INS New@@new @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16402 @LENGTH@ 3
---------------------INS SimpleType@@ConstraintsSerializer @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16406 @LENGTH@ 21
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16428 @LENGTH@ 4
---------------------INS SimpleName@@fks @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16434 @LENGTH@ 3
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16439 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16445 @LENGTH@ 4
---------------------INS SimpleName@@conf @TO@ ClassInstanceCreation@@ConstraintsSerializer[null, fks, null, null, conf] @AT@ 16451 @LENGTH@ 4
------------INS ExpressionStatement@@MethodInvocation:serializer.writeTo(jsonWriter,null) @TO@ TryStatement@@try (JsonWriter jsonWriter=new JsonWriter(fkConstraintsFile.getFileSystem(conf),fkConstraintsFile)){  ConstraintsSerializer serializer=new ConstraintsSerializer(null,fks,null,null,conf);  serializer.writeTo(jsonWriter,null);}  @AT@ 16468 @LENGTH@ 37
---------------INS MethodInvocation@@serializer.writeTo(jsonWriter,null) @TO@ ExpressionStatement@@MethodInvocation:serializer.writeTo(jsonWriter,null) @AT@ 16468 @LENGTH@ 36
------------------INS SimpleName@@Name:serializer @TO@ MethodInvocation@@serializer.writeTo(jsonWriter,null) @AT@ 16468 @LENGTH@ 10
------------------INS SimpleName@@MethodName:writeTo:[jsonWriter, null] @TO@ MethodInvocation@@serializer.writeTo(jsonWriter,null) @AT@ 16479 @LENGTH@ 25
---------------------INS SimpleName@@jsonWriter @TO@ SimpleName@@MethodName:writeTo:[jsonWriter, null] @AT@ 16487 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:writeTo:[jsonWriter, null] @AT@ 16499 @LENGTH@ 4


UPD TypeDeclaration@@[public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator] @TO@ [public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator<OAuth2Exception>] @AT@ 1461 @LENGTH@ 3468
---DEL SimpleType@@WebResponseExceptionTranslator @AT@ 1523 @LENGTH@ 30
---INS ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @TO@ TypeDeclaration@@[public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator] @AT@ 1711 @LENGTH@ 47
------INS SimpleType@@WebResponseExceptionTranslator @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 1711 @LENGTH@ 30
------INS SimpleType@@OAuth2Exception @TO@ ParameterizedType@@WebResponseExceptionTranslator<OAuth2Exception> @AT@ 1742 @LENGTH@ 15


UPD IfStatement@@if (consumerList != null && consumerList.size() > newCount) {  int currentCount=consumerList.size();  for (int i=newCount; i < currentCount; i++) {    SimpleConsumer consumer=consumerList.remove(i);    cancelConsumer(consumer);  }} @TO@ if (consumerList != null && consumerList.size() > newCount) {  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @AT@ 9766 @LENGTH@ 260
---UPD Block@@ThenBody:{  int currentCount=consumerList.size();  for (int i=newCount; i < currentCount; i++) {    SimpleConsumer consumer=consumerList.remove(i);    cancelConsumer(consumer);  }} @TO@ ThenBody:{  IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer);} @AT@ 9826 @LENGTH@ 200
------DEL VariableDeclarationStatement@@int currentCount=consumerList.size(); @AT@ 9833 @LENGTH@ 39
---------DEL PrimitiveType@@int @AT@ 9833 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@currentCount=consumerList.size() @AT@ 9837 @LENGTH@ 34
------------DEL SimpleName@@currentCount @AT@ 9837 @LENGTH@ 12
------------DEL MethodInvocation@@consumerList.size() @AT@ 9852 @LENGTH@ 19
------INS ExpressionStatement@@MethodInvocation:IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @TO@ Block@@ThenBody:{  int currentCount=consumerList.size();  for (int i=newCount; i < currentCount; i++) {    SimpleConsumer consumer=consumerList.remove(i);    cancelConsumer(consumer);  }} @AT@ 9868 @LENGTH@ 131
---------INS MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @TO@ ExpressionStatement@@MethodInvocation:IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 9868 @LENGTH@ 130
------------INS MethodInvocation@@MethodName:mapToObj:[i -> consumerList.remove(0)] @TO@ MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 9868 @LENGTH@ 92
---------------INS LambdaExpression@@i -> consumerList.remove(0) @TO@ MethodInvocation@@MethodName:mapToObj:[i -> consumerList.remove(0)] @AT@ 9932 @LENGTH@ 27
------------------INS VariableDeclarationFragment@@i @TO@ LambdaExpression@@i -> consumerList.remove(0) @AT@ 9932 @LENGTH@ 1
---------------------MOV SimpleName@@i @TO@ VariableDeclarationFragment@@i @AT@ 9887 @LENGTH@ 1
------------------INS MethodInvocation@@consumerList.remove(0) @TO@ LambdaExpression@@i -> consumerList.remove(0) @AT@ 9937 @LENGTH@ 22
---------------------MOV SimpleName@@Name:consumerList @TO@ MethodInvocation@@consumerList.remove(0) @AT@ 9958 @LENGTH@ 12
---------------------MOV SimpleName@@MethodName:remove:[i] @TO@ MethodInvocation@@consumerList.remove(0) @AT@ 9971 @LENGTH@ 9
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:remove:[i] @AT@ 9957 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:range:[newCount, consumerList.size()] @TO@ MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 9868 @LENGTH@ 46
---------------INS SimpleName@@newCount @TO@ MethodInvocation@@MethodName:range:[newCount, consumerList.size()] @AT@ 9884 @LENGTH@ 8
---------------INS MethodInvocation@@consumerList.size() @TO@ MethodInvocation@@MethodName:range:[newCount, consumerList.size()] @AT@ 9894 @LENGTH@ 19
------------------MOV SimpleName@@Name:consumerList @TO@ MethodInvocation@@consumerList.size() @AT@ 9852 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@consumerList.size() @AT@ 9865 @LENGTH@ 6
------------INS SimpleName@@Name:IntStream @TO@ MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 9868 @LENGTH@ 9
------------MOV SimpleName@@MethodName:cancelConsumer:[consumer] @TO@ MethodInvocation@@IntStream.range(newCount,consumerList.size()).mapToObj(i -> consumerList.remove(0)).forEach(this::cancelConsumer) @AT@ 9988 @LENGTH@ 24
------DEL ForStatement@@for (int i=newCount; i < currentCount; i++) {  SimpleConsumer consumer=consumerList.remove(i);  cancelConsumer(consumer);} @AT@ 9878 @LENGTH@ 142
---------DEL VariableDeclarationExpression@@int i=newCount @AT@ 9883 @LENGTH@ 16
------------DEL PrimitiveType@@int @AT@ 9883 @LENGTH@ 3
------------DEL VariableDeclarationFragment@@i=newCount @AT@ 9887 @LENGTH@ 12
---------------DEL SimpleName@@newCount @AT@ 9891 @LENGTH@ 8
---------DEL InfixExpression@@i < currentCount @AT@ 9901 @LENGTH@ 16
------------DEL SimpleName@@i @AT@ 9901 @LENGTH@ 1
------------DEL Operator@@< @AT@ 9902 @LENGTH@ 1
------------DEL SimpleName@@currentCount @AT@ 9905 @LENGTH@ 12
---------DEL PostfixExpression@@i++ @AT@ 9919 @LENGTH@ 3
------------DEL SimpleName@@i @AT@ 9919 @LENGTH@ 1
------------DEL Operator@@++ @AT@ 9921 @LENGTH@ 2
---------DEL VariableDeclarationStatement@@SimpleConsumer consumer=consumerList.remove(i); @AT@ 9932 @LENGTH@ 49
------------DEL SimpleType@@SimpleConsumer @AT@ 9932 @LENGTH@ 14
------------DEL VariableDeclarationFragment@@consumer=consumerList.remove(i) @AT@ 9947 @LENGTH@ 33
---------------DEL SimpleName@@consumer @AT@ 9947 @LENGTH@ 8
---------------DEL MethodInvocation@@consumerList.remove(i) @AT@ 9958 @LENGTH@ 22
---------DEL ExpressionStatement@@MethodInvocation:cancelConsumer(consumer) @AT@ 9988 @LENGTH@ 25
------------DEL MethodInvocation@@cancelConsumer(consumer) @AT@ 9988 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:response.setStatusCode(HttpStatus.FORBIDDEN) @TO@ MethodInvocation:response.setStatusCode(this.httpStatus) @AT@ 1744 @LENGTH@ 45
---UPD MethodInvocation@@response.setStatusCode(HttpStatus.FORBIDDEN) @TO@ response.setStatusCode(this.httpStatus) @AT@ 1744 @LENGTH@ 44
------UPD SimpleName@@MethodName:setStatusCode:[HttpStatus.FORBIDDEN] @TO@ MethodName:setStatusCode:[this.httpStatus] @AT@ 1753 @LENGTH@ 35
---------DEL QualifiedName@@HttpStatus.FORBIDDEN @AT@ 1767 @LENGTH@ 20
------------DEL SimpleName@@HttpStatus @AT@ 1767 @LENGTH@ 10
------------DEL SimpleName@@FORBIDDEN @AT@ 1778 @LENGTH@ 9
---------INS FieldAccess@@this.httpStatus @TO@ SimpleName@@MethodName:setStatusCode:[HttpStatus.FORBIDDEN] @AT@ 1767 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpStatus @AT@ 1767 @LENGTH@ 4
------------INS SimpleName@@httpStatus @TO@ FieldAccess@@this.httpStatus @AT@ 1772 @LENGTH@ 10


UPD IfStatement@@if (!eeInstance.isUnsatisfied() && defaultDatasource != null) {  eeInstance.get().subresources().defaultBindingsService().datasource("java:jboss/datasources/" + defaultDatasource);} @TO@ if (!eeInstance.isUnsatisfied() && defaultDatasourceJndiName != null) {  eeInstance.get().subresources().defaultBindingsService().datasource(defaultDatasourceJndiName);} @AT@ 1217 @LENGTH@ 222
---UPD InfixExpression@@!eeInstance.isUnsatisfied() && defaultDatasource != null @TO@ !eeInstance.isUnsatisfied() && defaultDatasourceJndiName != null @AT@ 1221 @LENGTH@ 56
------UPD InfixExpression@@defaultDatasource != null @TO@ defaultDatasourceJndiName != null @AT@ 1252 @LENGTH@ 25
---------UPD SimpleName@@defaultDatasource @TO@ defaultDatasourceJndiName @AT@ 1252 @LENGTH@ 17
---UPD Block@@ThenBody:{  eeInstance.get().subresources().defaultBindingsService().datasource("java:jboss/datasources/" + defaultDatasource);} @TO@ ThenBody:{  eeInstance.get().subresources().defaultBindingsService().datasource(defaultDatasourceJndiName);} @AT@ 1279 @LENGTH@ 160
------UPD ExpressionStatement@@MethodInvocation:eeInstance.get().subresources().defaultBindingsService().datasource("java:jboss/datasources/" + defaultDatasource) @TO@ MethodInvocation:eeInstance.get().subresources().defaultBindingsService().datasource(defaultDatasourceJndiName) @AT@ 1293 @LENGTH@ 136
---------UPD MethodInvocation@@eeInstance.get().subresources().defaultBindingsService().datasource("java:jboss/datasources/" + defaultDatasource) @TO@ eeInstance.get().subresources().defaultBindingsService().datasource(defaultDatasourceJndiName) @AT@ 1293 @LENGTH@ 135
------------UPD SimpleName@@MethodName:datasource:["java:jboss/datasources/" + defaultDatasource] @TO@ MethodName:datasource:[defaultDatasourceJndiName] @AT@ 1371 @LENGTH@ 57
---------------DEL InfixExpression@@"java:jboss/datasources/" + defaultDatasource @AT@ 1382 @LENGTH@ 45
------------------DEL StringLiteral@@"java:jboss/datasources/" @AT@ 1382 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 1407 @LENGTH@ 1
------------------DEL SimpleName@@defaultDatasource @AT@ 1410 @LENGTH@ 17
---------------INS SimpleName@@defaultDatasourceJndiName @TO@ SimpleName@@MethodName:datasource:["java:jboss/datasources/" + defaultDatasource] @AT@ 1398 @LENGTH@ 25


INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Getting access token for: " + clientId);} @TO@ MethodDeclaration@@public, OAuth2AccessToken, MethodName:grant, String grantType, TokenRequest tokenRequest,  @AT@ 2469 @LENGTH@ 92
---INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Getting access token for: " + clientId);} @AT@ 2473 @LENGTH@ 23
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 2473 @LENGTH@ 6
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 2480 @LENGTH@ 16
---INS Block@@ThenBody:{  logger.debug("Getting access token for: " + clientId);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Getting access token for: " + clientId);} @AT@ 2498 @LENGTH@ 63
------MOV ExpressionStatement@@MethodInvocation:logger.debug("Getting access token for: " + clientId) @TO@ Block@@ThenBody:{  logger.debug("Getting access token for: " + clientId);} @AT@ 2471 @LENGTH@ 54


UPD ReturnStatement@@MethodInvocation:check(authentication,object).filter(d -> d.isGranted()).switchIfEmpty(Mono.error(new AccessDeniedException("Access Denied"))).flatMap(d -> Mono.empty()) @TO@ MethodInvocation:check(authentication,object).filter(d -> d.isGranted()).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap(d -> Mono.empty()) @AT@ 1833 @LENGTH@ 178
---UPD MethodInvocation@@check(authentication,object).filter(d -> d.isGranted()).switchIfEmpty(Mono.error(new AccessDeniedException("Access Denied"))).flatMap(d -> Mono.empty()) @TO@ check(authentication,object).filter(d -> d.isGranted()).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap(d -> Mono.empty()) @AT@ 1840 @LENGTH@ 170
------INS MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))] @TO@ MethodInvocation@@check(authentication,object).filter(d -> d.isGranted()).switchIfEmpty(Mono.error(new AccessDeniedException("Access Denied"))).flatMap(d -> Mono.empty()) @AT@ 1840 @LENGTH@ 153
---------MOV MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Access Denied"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))] @AT@ 1840 @LENGTH@ 137
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Access Denied"))] @AT@ 1920 @LENGTH@ 4
------------INS SimpleName@@MethodName:defer:[() -> Mono.error(new AccessDeniedException("Access Denied"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Access Denied"))] @AT@ 1925 @LENGTH@ 67
---------------INS LambdaExpression@@() -> Mono.error(new AccessDeniedException("Access Denied")) @TO@ SimpleName@@MethodName:defer:[() -> Mono.error(new AccessDeniedException("Access Denied"))] @AT@ 1931 @LENGTH@ 60
------------------MOV MethodInvocation@@Mono.error(new AccessDeniedException("Access Denied")) @TO@ LambdaExpression@@() -> Mono.error(new AccessDeniedException("Access Denied")) @AT@ 1921 @LENGTH@ 54
------UPD MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new AccessDeniedException("Access Denied"))] @TO@ Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied"))) @AT@ 1840 @LENGTH@ 137


UPD MethodDeclaration@@public, void, MethodName:testUnkownStatus, Exception,  @TO@ public, void, MethodName:testUnknownStatus, Exception,  @AT@ 5306 @LENGTH@ 568
---UPD SimpleName@@MethodName:testUnkownStatus @TO@ MethodName:testUnknownStatus @AT@ 5318 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:methodParams.get(i).asClassType() @TO@ MethodInvocation:methodParams.get(i) @AT@ 14267 @LENGTH@ 41
---UPD MethodInvocation@@methodParams.get(i).asClassType() @TO@ methodParams.get(i) @AT@ 14274 @LENGTH@ 33
------DEL MethodInvocation@@MethodName:get:[i] @AT@ 14274 @LENGTH@ 19
---------DEL SimpleName@@i @AT@ 14291 @LENGTH@ 1
------INS SimpleName@@MethodName:get:[i] @TO@ MethodInvocation@@methodParams.get(i).asClassType() @AT@ 14287 @LENGTH@ 6
---------INS SimpleName@@i @TO@ SimpleName@@MethodName:get:[i] @AT@ 14291 @LENGTH@ 1
------DEL SimpleName@@MethodName:asClassType:[] @AT@ 14294 @LENGTH@ 13


INS MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @TO@ TypeDeclaration@@[public]SpringTestContext, [Closeable] @AT@ 2953 @LENGTH@ 275
---INS Modifier@@public @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 2953 @LENGTH@ 6
---INS SimpleType@@SpringTestContext @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 2960 @LENGTH@ 17
---INS SimpleName@@MethodName:testConfigLocations @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 2978 @LENGTH@ 19
---INS SingleVariableDeclaration@@String... configLocations @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 2998 @LENGTH@ 25
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... configLocations @AT@ 2998 @LENGTH@ 6
------INS SimpleName@@configLocations @TO@ SingleVariableDeclaration@@String... configLocations @AT@ 3008 @LENGTH@ 15
---INS VariableDeclarationStatement@@GenericXmlWebContextLoader loader=new GenericXmlWebContextLoader(); @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 3029 @LENGTH@ 69
------INS SimpleType@@GenericXmlWebContextLoader @TO@ VariableDeclarationStatement@@GenericXmlWebContextLoader loader=new GenericXmlWebContextLoader(); @AT@ 3029 @LENGTH@ 26
------INS VariableDeclarationFragment@@loader=new GenericXmlWebContextLoader() @TO@ VariableDeclarationStatement@@GenericXmlWebContextLoader loader=new GenericXmlWebContextLoader(); @AT@ 3056 @LENGTH@ 41
---------INS SimpleName@@loader @TO@ VariableDeclarationFragment@@loader=new GenericXmlWebContextLoader() @AT@ 3056 @LENGTH@ 6
---------INS ClassInstanceCreation@@GenericXmlWebContextLoader[] @TO@ VariableDeclarationFragment@@loader=new GenericXmlWebContextLoader() @AT@ 3065 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@GenericXmlWebContextLoader[] @AT@ 3065 @LENGTH@ 3
------------INS SimpleType@@GenericXmlWebContextLoader @TO@ ClassInstanceCreation@@GenericXmlWebContextLoader[] @AT@ 3069 @LENGTH@ 26
---INS VariableDeclarationStatement@@String[] locations=loader.processLocations(this.test.getClass(),configLocations); @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 3101 @LENGTH@ 87
------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] locations=loader.processLocations(this.test.getClass(),configLocations); @AT@ 3101 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3101 @LENGTH@ 6
------INS VariableDeclarationFragment@@locations=loader.processLocations(this.test.getClass(),configLocations) @TO@ VariableDeclarationStatement@@String[] locations=loader.processLocations(this.test.getClass(),configLocations); @AT@ 3110 @LENGTH@ 77
---------INS SimpleName@@locations @TO@ VariableDeclarationFragment@@locations=loader.processLocations(this.test.getClass(),configLocations) @AT@ 3110 @LENGTH@ 9
---------INS MethodInvocation@@loader.processLocations(this.test.getClass(),configLocations) @TO@ VariableDeclarationFragment@@locations=loader.processLocations(this.test.getClass(),configLocations) @AT@ 3122 @LENGTH@ 65
------------INS SimpleName@@Name:loader @TO@ MethodInvocation@@loader.processLocations(this.test.getClass(),configLocations) @AT@ 3122 @LENGTH@ 6
------------INS SimpleName@@MethodName:processLocations:[this.test.getClass(), configLocations] @TO@ MethodInvocation@@loader.processLocations(this.test.getClass(),configLocations) @AT@ 3129 @LENGTH@ 58
---------------INS MethodInvocation@@this.test.getClass() @TO@ SimpleName@@MethodName:processLocations:[this.test.getClass(), configLocations] @AT@ 3146 @LENGTH@ 20
------------------INS FieldAccess@@this.test @TO@ MethodInvocation@@this.test.getClass() @AT@ 3146 @LENGTH@ 9
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.test @AT@ 3146 @LENGTH@ 4
---------------------INS SimpleName@@test @TO@ FieldAccess@@this.test @AT@ 3151 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@this.test.getClass() @AT@ 3156 @LENGTH@ 10
---------------INS SimpleName@@configLocations @TO@ SimpleName@@MethodName:processLocations:[this.test.getClass(), configLocations] @AT@ 3171 @LENGTH@ 15
---INS ReturnStatement@@MethodInvocation:configLocations(locations) @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:testConfigLocations, String... configLocations,  @AT@ 3191 @LENGTH@ 34
------INS MethodInvocation@@configLocations(locations) @TO@ ReturnStatement@@MethodInvocation:configLocations(locations) @AT@ 3198 @LENGTH@ 26
---------INS SimpleName@@MethodName:configLocations:[locations] @TO@ MethodInvocation@@configLocations(locations) @AT@ 3198 @LENGTH@ 26
------------INS SimpleName@@locations @TO@ SimpleName@@MethodName:configLocations:[locations] @AT@ 3214 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:given(session.beginTransaction(any(Transaction.Type.class),anyCollection())).willThrow(Exception.class) @TO@ MethodInvocation:given(session.beginTransaction(any(Transaction.Type.class),anyCollection())).willThrow(RuntimeException.class) @AT@ 1902 @LENGTH@ 105
---UPD MethodInvocation@@given(session.beginTransaction(any(Transaction.Type.class),anyCollection())).willThrow(Exception.class) @TO@ given(session.beginTransaction(any(Transaction.Type.class),anyCollection())).willThrow(RuntimeException.class) @AT@ 1902 @LENGTH@ 104
------UPD SimpleName@@MethodName:willThrow:[Exception.class] @TO@ MethodName:willThrow:[RuntimeException.class] @AT@ 1980 @LENGTH@ 26
---------UPD TypeLiteral@@Exception.class @TO@ RuntimeException.class @AT@ 1990 @LENGTH@ 15


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Undyerlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName())) @TO@ ClassInstanceCreation:new IllegalStateException(String.format("Underlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName())) @AT@ 3871 @LENGTH@ 177
---UPD ClassInstanceCreation@@IllegalStateException[String.format("Undyerlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName())] @TO@ IllegalStateException[String.format("Underlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName())] @AT@ 3877 @LENGTH@ 170
------UPD MethodInvocation@@String.format("Undyerlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName()) @TO@ String.format("Underlying connection provider %s does not implement RedisClientProvider!",connectionProvider.getClass().getName()) @AT@ 3908 @LENGTH@ 138
---------UPD SimpleName@@MethodName:format:["Undyerlying connection provider %s does not implement RedisClientProvider!", connectionProvider.getClass().getName()] @TO@ MethodName:format:["Underlying connection provider %s does not implement RedisClientProvider!", connectionProvider.getClass().getName()] @AT@ 3915 @LENGTH@ 131
------------UPD StringLiteral@@"Undyerlying connection provider %s does not implement RedisClientProvider!" @TO@ "Underlying connection provider %s does not implement RedisClientProvider!" @AT@ 3922 @LENGTH@ 76


UPD ExpressionStatement@@MethodInvocation:mockMvc.perform(get("/resources/file.js")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.CACHE_CONTROL,"max-age=12345")).andExpect(header().string(HttpHeaders.PRAGMA,"")).andExpect(header().string(HttpHeaders.EXPIRES,"")) @TO@ MethodInvocation:mockMvc.perform(get("/resources/file.js")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.CACHE_CONTROL,"max-age=12345")).andExpect(header().doesNotExist(HttpHeaders.PRAGMA)).andExpect(header().doesNotExist(HttpHeaders.EXPIRES)) @AT@ 2665 @LENGTH@ 260
---UPD MethodInvocation@@mockMvc.perform(get("/resources/file.js")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.CACHE_CONTROL,"max-age=12345")).andExpect(header().string(HttpHeaders.PRAGMA,"")).andExpect(header().string(HttpHeaders.EXPIRES,"")) @TO@ mockMvc.perform(get("/resources/file.js")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.CACHE_CONTROL,"max-age=12345")).andExpect(header().doesNotExist(HttpHeaders.PRAGMA)).andExpect(header().doesNotExist(HttpHeaders.EXPIRES)) @AT@ 2665 @LENGTH@ 259
------UPD MethodInvocation@@MethodName:andExpect:[header().string(HttpHeaders.PRAGMA,"")] @TO@ MethodName:andExpect:[header().doesNotExist(HttpHeaders.PRAGMA)] @AT@ 2665 @LENGTH@ 203
---------UPD MethodInvocation@@header().string(HttpHeaders.PRAGMA,"") @TO@ header().doesNotExist(HttpHeaders.PRAGMA) @AT@ 2828 @LENGTH@ 39
------------UPD SimpleName@@MethodName:string:[HttpHeaders.PRAGMA, ""] @TO@ MethodName:doesNotExist:[HttpHeaders.PRAGMA] @AT@ 2837 @LENGTH@ 30
---------------DEL StringLiteral@@"" @AT@ 2864 @LENGTH@ 2
------UPD SimpleName@@MethodName:andExpect:[header().string(HttpHeaders.EXPIRES,"")] @TO@ MethodName:andExpect:[header().doesNotExist(HttpHeaders.EXPIRES)] @AT@ 2873 @LENGTH@ 51
---------UPD MethodInvocation@@header().string(HttpHeaders.EXPIRES,"") @TO@ header().doesNotExist(HttpHeaders.EXPIRES) @AT@ 2883 @LENGTH@ 40
------------UPD SimpleName@@MethodName:string:[HttpHeaders.EXPIRES, ""] @TO@ MethodName:doesNotExist:[HttpHeaders.EXPIRES] @AT@ 2892 @LENGTH@ 31
---------------DEL StringLiteral@@"" @AT@ 2920 @LENGTH@ 2


UPD FieldDeclaration@@public, static, RedisClusterRule, [clusterAvaialbale=new RedisClusterRule()] @TO@ public, static, RedisClusterRule, [clusterAvailable=new RedisClusterRule()] @AT@ 2449 @LENGTH@ 85
---UPD VariableDeclarationFragment@@clusterAvaialbale=new RedisClusterRule() @TO@ clusterAvailable=new RedisClusterRule() @AT@ 2491 @LENGTH@ 42
------UPD SimpleName@@clusterAvaialbale @TO@ clusterAvailable @AT@ 2491 @LENGTH@ 17


UPD IfStatement@@if ("routeId".equals(name)) {  parent.setRouteId(node.getRouteId());} else if ("end".equals(name) || "endChoice".equals(name) || "endParent".equals(name)|| "endRest".equals(name)|| "endDoTry".equals(name)|| "endHystrix".equals(name)) {  parent=parent.getParent();} else if ("choice".equals(name)) {  CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);  parent.addOutput(output);  parent=output;} else if ("when".equals(name) || "otherwise".equals(name)) {  while (!parent.getName().equals("from") && !"choice".equals(parent.getName())) {    parent=parent.getParent();  }} else {  boolean hasOutput=hasOutput(name);  if (hasOutput) {    CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);    parent.addOutput(output);    parent=output;  } else {    CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);    parent.addOutput(output);  }} @TO@ if ("from".equals(name)) {  CamelNodeDetails from=nodeFactory.copyNode(null,"from",node);  from.setFileName(fullyQualifiedFileName);  answer.add(from);  parent=from;} else if ("routeId".equals(name)) {  parent.setRouteId(node.getRouteId());} else if ("end".equals(name) || "endParent".equals(name) || "endRest".equals(name)|| "endDoTry".equals(name)|| "endHystrix".equals(name)) {  if (parent.getParent() != null) {    parent=parent.getParent();  }} else if ("endChoice".equals(name)) {  while (!"from".equals(parent.getName()) && !"choice".equals(parent.getName())) {    if (parent.getParent() != null) {      parent=parent.getParent();    } else {      break;    }  }} else if ("choice".equals(name)) {  CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);  parent.addOutput(output);  parent=output;} else if ("when".equals(name) || "otherwise".equals(name)) {  while (!"from".equals(parent.getName()) && !"choice".equals(parent.getName())) {    if (parent.getParent() != null) {      parent=parent.getParent();    } else {      break;    }  }} else {  boolean hasOutput=hasOutput(name);  if (hasOutput) {    CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);    parent.addOutput(output);    parent=output;  } else {    CamelNodeDetails output=nodeFactory.copyNode(parent,name,node);    parent.addOutput(output);  }} @AT@ 5844 @LENGTH@ 1587


INS IfStatement@@if (!inputs.getSkips().isEmpty()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @TO@ MethodDeclaration@@private, void, MethodName:scan, final StepContribution contribution, final Chunk<I> inputs, final Chunk<O> outputs, ChunkMonitor chunkMonitor, boolean recovery, Exception,  @AT@ 18086 @LENGTH@ 120
---INS PrefixExpression@@!inputs.getSkips().isEmpty() @TO@ IfStatement@@if (!inputs.getSkips().isEmpty()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @AT@ 18090 @LENGTH@ 28
------INS Operator@@! @TO@ PrefixExpression@@!inputs.getSkips().isEmpty() @AT@ 18090 @LENGTH@ 1
------INS MethodInvocation@@inputs.getSkips().isEmpty() @TO@ PrefixExpression@@!inputs.getSkips().isEmpty() @AT@ 18091 @LENGTH@ 27
---------INS MethodInvocation@@MethodName:getSkips:[] @TO@ MethodInvocation@@inputs.getSkips().isEmpty() @AT@ 18091 @LENGTH@ 17
---------INS SimpleName@@Name:inputs @TO@ MethodInvocation@@inputs.getSkips().isEmpty() @AT@ 18091 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@inputs.getSkips().isEmpty() @AT@ 18109 @LENGTH@ 9
---INS Block@@ThenBody:{  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @TO@ IfStatement@@if (!inputs.getSkips().isEmpty()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @AT@ 18120 @LENGTH@ 86
------INS IfStatement@@if (outputIterator.hasNext()) {  outputIterator.remove();  return;} @TO@ Block@@ThenBody:{  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @AT@ 18125 @LENGTH@ 77
---------INS MethodInvocation@@outputIterator.hasNext() @TO@ IfStatement@@if (outputIterator.hasNext()) {  outputIterator.remove();  return;} @AT@ 18129 @LENGTH@ 24
------------INS SimpleName@@Name:outputIterator @TO@ MethodInvocation@@outputIterator.hasNext() @AT@ 18129 @LENGTH@ 14
------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@outputIterator.hasNext() @AT@ 18144 @LENGTH@ 9
---------INS Block@@ThenBody:{  outputIterator.remove();  return;} @TO@ IfStatement@@if (outputIterator.hasNext()) {  outputIterator.remove();  return;} @AT@ 18155 @LENGTH@ 47
------------INS ExpressionStatement@@MethodInvocation:outputIterator.remove() @TO@ Block@@ThenBody:{  outputIterator.remove();  return;} @AT@ 18161 @LENGTH@ 24
---------------INS MethodInvocation@@outputIterator.remove() @TO@ ExpressionStatement@@MethodInvocation:outputIterator.remove() @AT@ 18161 @LENGTH@ 23
------------------INS SimpleName@@Name:outputIterator @TO@ MethodInvocation@@outputIterator.remove() @AT@ 18161 @LENGTH@ 14
------------------INS SimpleName@@MethodName:remove:[] @TO@ MethodInvocation@@outputIterator.remove() @AT@ 18176 @LENGTH@ 8
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  outputIterator.remove();  return;} @AT@ 18190 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:confForTez.setBoolean("hive.stats.column.autogather",false) @AT@ 36902 @LENGTH@ 61
---DEL MethodInvocation@@confForTez.setBoolean("hive.stats.column.autogather",false) @AT@ 36902 @LENGTH@ 60
------DEL SimpleName@@Name:confForTez @AT@ 36902 @LENGTH@ 10
------DEL SimpleName@@MethodName:setBoolean:["hive.stats.column.autogather", false] @AT@ 36913 @LENGTH@ 49
---------DEL StringLiteral@@"hive.stats.column.autogather" @AT@ 36924 @LENGTH@ 30
---------DEL BooleanLiteral@@false @AT@ 36956 @LENGTH@ 5


UPD TypeDeclaration@@[@WildFlyExtension(module="org.jboss.as.connector",classname="org.jboss.as.connector.subsystems.resourceadapters.ResourceAdaptersExtension"), @MarshalDMR, public]ResourceAdapterFraction, ResourceAdapters<ResourceAdapterFraction>[Fraction<ResourceAdapterFraction>] @TO@ [@WildFlyExtension(module="org.jboss.as.connector",classname="org.jboss.as.connector.subsystems.resourceadapters.ResourceAdaptersExtension"), @MarshalDMR, @Configurable("swarm.resource-adapters"), public]ResourceAdapterFraction, ResourceAdapters<ResourceAdapterFraction>[Fraction<ResourceAdapterFraction>] @AT@ 990 @LENGTH@ 435
---INS SingleMemberAnnotation@@@Configurable("swarm.resource-adapters") @TO@ TypeDeclaration@@[@WildFlyExtension(module="org.jboss.as.connector",classname="org.jboss.as.connector.subsystems.resourceadapters.ResourceAdaptersExtension"), @MarshalDMR, public]ResourceAdapterFraction, ResourceAdapters<ResourceAdapterFraction>[Fraction<ResourceAdapterFraction>] @AT@ 1206 @LENGTH@ 40


UPD IfStatement@@if (camelContext.getComponent(component) == null) {  getComponentResolverReference(context,component);} else {  LOG.debug("Not creating a service reference for component {} because a component already exists in the Camel Context",component);} @TO@ if (camelContext.getComponent(component,false) == null) {  getComponentResolverReference(context,component);} else {  LOG.debug("Not creating a service reference for component {} because a component already exists in the Camel Context",component);} @AT@ 51216 @LENGTH@ 332
---UPD InfixExpression@@camelContext.getComponent(component) == null @TO@ camelContext.getComponent(component,false) == null @AT@ 51220 @LENGTH@ 44
------UPD MethodInvocation@@camelContext.getComponent(component) @TO@ camelContext.getComponent(component,false) @AT@ 51220 @LENGTH@ 36
---------UPD SimpleName@@MethodName:getComponent:[component] @TO@ MethodName:getComponent:[component, false] @AT@ 51233 @LENGTH@ 23
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getComponent:[component] @AT@ 51257 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:MetaStoreUtils.updateTableStatsFast(db,tbl,wh,madeDir,false,envContext,true) @TO@ MethodInvocation:MetaStoreUtils.updateTableStatsSlow(db,tbl,wh,madeDir,false,envContext) @AT@ 70370 @LENGTH@ 83
---UPD MethodInvocation@@MetaStoreUtils.updateTableStatsFast(db,tbl,wh,madeDir,false,envContext,true) @TO@ MetaStoreUtils.updateTableStatsSlow(db,tbl,wh,madeDir,false,envContext) @AT@ 70370 @LENGTH@ 82
------UPD SimpleName@@MethodName:updateTableStatsFast:[db, tbl, wh, madeDir, false, envContext, true] @TO@ MethodName:updateTableStatsSlow:[db, tbl, wh, madeDir, false, envContext] @AT@ 70385 @LENGTH@ 67
---------DEL BooleanLiteral@@true @AT@ 70447 @LENGTH@ 4


UPD TryStatement@@try {  metadata=conn.getMetaData();  String[] types={"TABLE"};  rs=metadata.getTables(null,hmsConn.getSchema(),"%",types);  String table=null;  while (rs.next()) {    table=rs.getString("TABLE_NAME");    dbTables.add(table.toLowerCase());    LOG.debug("Found table " + table + " in HMS dbstore");  }} catch (SQLException e) {  throw new HiveMetaException("Failed to retrieve schema tables from Hive Metastore DB",e);} finally {  if (rs != null) {    try {      rs.close();    } catch (    SQLException e) {      throw new HiveMetaException("Failed to close resultset",e);    }  }} @TO@ try {  String schema=null;  try {    schema=hmsConn.getSchema();  } catch (  SQLFeatureNotSupportedException e) {    LOG.debug("schema is not supported");  }  metadata=conn.getMetaData();  String[] types={"TABLE"};  rs=metadata.getTables(null,schema,"%",types);  String table=null;  while (rs.next()) {    table=rs.getString("TABLE_NAME");    dbTables.add(table.toLowerCase());    LOG.debug("Found table " + table + " in HMS dbstore");  }} catch (SQLException e) {  throw new HiveMetaException("Failed to retrieve schema tables from Hive Metastore DB",e);} finally {  if (rs != null) {    try {      rs.close();    } catch (    SQLException e) {      throw new HiveMetaException("Failed to close resultset",e);    }  }} @AT@ 28640 @LENGTH@ 712
---INS VariableDeclarationStatement@@String schema=null; @TO@ TryStatement@@try {  metadata=conn.getMetaData();  String[] types={"TABLE"};  rs=metadata.getTables(null,hmsConn.getSchema(),"%",types);  String table=null;  while (rs.next()) {    table=rs.getString("TABLE_NAME");    dbTables.add(table.toLowerCase());    LOG.debug("Found table " + table + " in HMS dbstore");  }} catch (SQLException e) {  throw new HiveMetaException("Failed to retrieve schema tables from Hive Metastore DB",e);} finally {  if (rs != null) {    try {      rs.close();    } catch (    SQLException e) {      throw new HiveMetaException("Failed to close resultset",e);    }  }} @AT@ 28701 @LENGTH@ 21
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String schema=null; @AT@ 28701 @LENGTH@ 6
------INS VariableDeclarationFragment@@schema=null @TO@ VariableDeclarationStatement@@String schema=null; @AT@ 28708 @LENGTH@ 13
---------INS SimpleName@@schema @TO@ VariableDeclarationFragment@@schema=null @AT@ 28708 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@schema=null @AT@ 28717 @LENGTH@ 4
---INS TryStatement@@try {  schema=hmsConn.getSchema();} catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @TO@ TryStatement@@try {  metadata=conn.getMetaData();  String[] types={"TABLE"};  rs=metadata.getTables(null,hmsConn.getSchema(),"%",types);  String table=null;  while (rs.next()) {    table=rs.getString("TABLE_NAME");    dbTables.add(table.toLowerCase());    LOG.debug("Found table " + table + " in HMS dbstore");  }} catch (SQLException e) {  throw new HiveMetaException("Failed to retrieve schema tables from Hive Metastore DB",e);} finally {  if (rs != null) {    try {      rs.close();    } catch (    SQLException e) {      throw new HiveMetaException("Failed to close resultset",e);    }  }} @AT@ 28729 @LENGTH@ 149
------INS ExpressionStatement@@Assignment:schema=hmsConn.getSchema() @TO@ TryStatement@@try {  schema=hmsConn.getSchema();} catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @AT@ 28743 @LENGTH@ 29
---------INS Assignment@@schema=hmsConn.getSchema() @TO@ ExpressionStatement@@Assignment:schema=hmsConn.getSchema() @AT@ 28743 @LENGTH@ 28
------------INS SimpleName@@schema @TO@ Assignment@@schema=hmsConn.getSchema() @AT@ 28743 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@schema=hmsConn.getSchema() @AT@ 28749 @LENGTH@ 1
------------INS MethodInvocation@@hmsConn.getSchema() @TO@ Assignment@@schema=hmsConn.getSchema() @AT@ 28752 @LENGTH@ 19
---------------INS SimpleName@@Name:hmsConn @TO@ MethodInvocation@@hmsConn.getSchema() @AT@ 28752 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getSchema:[] @TO@ MethodInvocation@@hmsConn.getSchema() @AT@ 28760 @LENGTH@ 11
------INS CatchClause@@catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @TO@ TryStatement@@try {  schema=hmsConn.getSchema();} catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @AT@ 28781 @LENGTH@ 97
---------INS SingleVariableDeclaration@@SQLFeatureNotSupportedException e @TO@ CatchClause@@catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @AT@ 28788 @LENGTH@ 33
------------INS SimpleType@@SQLFeatureNotSupportedException @TO@ SingleVariableDeclaration@@SQLFeatureNotSupportedException e @AT@ 28788 @LENGTH@ 31
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@SQLFeatureNotSupportedException e @AT@ 28820 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("schema is not supported") @TO@ CatchClause@@catch (SQLFeatureNotSupportedException e) {  LOG.debug("schema is not supported");} @AT@ 28833 @LENGTH@ 37
------------INS MethodInvocation@@LOG.debug("schema is not supported") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("schema is not supported") @AT@ 28833 @LENGTH@ 36
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("schema is not supported") @AT@ 28833 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["schema is not supported"] @TO@ MethodInvocation@@LOG.debug("schema is not supported") @AT@ 28837 @LENGTH@ 32
------------------INS StringLiteral@@"schema is not supported" @TO@ SimpleName@@MethodName:debug:["schema is not supported"] @AT@ 28843 @LENGTH@ 25
---UPD ExpressionStatement@@Assignment:rs=metadata.getTables(null,hmsConn.getSchema(),"%",types) @TO@ Assignment:rs=metadata.getTables(null,schema,"%",types) @AT@ 28729 @LENGTH@ 75
------UPD Assignment@@rs=metadata.getTables(null,hmsConn.getSchema(),"%",types) @TO@ rs=metadata.getTables(null,schema,"%",types) @AT@ 28729 @LENGTH@ 74
---------UPD MethodInvocation@@metadata.getTables(null,hmsConn.getSchema(),"%",types) @TO@ metadata.getTables(null,schema,"%",types) @AT@ 28746 @LENGTH@ 57
------------UPD SimpleName@@MethodName:getTables:[null, hmsConn.getSchema(), "%", types] @TO@ MethodName:getTables:[null, schema, "%", types] @AT@ 28755 @LENGTH@ 48
---------------DEL MethodInvocation@@hmsConn.getSchema() @AT@ 28771 @LENGTH@ 19
------------------DEL SimpleName@@Name:hmsConn @AT@ 28771 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getSchema:[] @AT@ 28779 @LENGTH@ 11
---------------INS SimpleName@@schema @TO@ SimpleName@@MethodName:getTables:[null, hmsConn.getSchema(), "%", types] @AT@ 29011 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ReactorContextWebFilterTests,  @AT@ 3631 @LENGTH@ 513
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3631 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3638 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenMainContextThenDoesNotOverride @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3643 @LENGTH@ 40
---INS VariableDeclarationStatement@@String contextKey="main"; @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3690 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String contextKey="main"; @AT@ 3690 @LENGTH@ 6
------INS VariableDeclarationFragment@@contextKey="main" @TO@ VariableDeclarationStatement@@String contextKey="main"; @AT@ 3697 @LENGTH@ 19
---------INS SimpleName@@contextKey @TO@ VariableDeclarationFragment@@contextKey="main" @AT@ 3697 @LENGTH@ 10
---------INS StringLiteral@@"main" @TO@ VariableDeclarationFragment@@contextKey="main" @AT@ 3710 @LENGTH@ 6
---INS VariableDeclarationStatement@@WebFilter mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3720 @LENGTH@ 111
------INS SimpleType@@WebFilter @TO@ VariableDeclarationStatement@@WebFilter mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)); @AT@ 3720 @LENGTH@ 9
------INS VariableDeclarationFragment@@mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @TO@ VariableDeclarationStatement@@WebFilter mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)); @AT@ 3730 @LENGTH@ 100
---------INS SimpleName@@mainContextWebFilter @TO@ VariableDeclarationFragment@@mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3730 @LENGTH@ 20
---------INS LambdaExpression@@(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @TO@ VariableDeclarationFragment@@mainContextWebFilter=(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3753 @LENGTH@ 77
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3754 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 3754 @LENGTH@ 1
------------INS VariableDeclarationFragment@@c @TO@ LambdaExpression@@(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3757 @LENGTH@ 1
---------------INS SimpleName@@c @TO@ VariableDeclarationFragment@@c @AT@ 3757 @LENGTH@ 1
------------INS MethodInvocation@@c.filter(e).subscriberContext(Context.of(contextKey,true)) @TO@ LambdaExpression@@(e,c) -> c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3763 @LENGTH@ 67
---------------INS MethodInvocation@@MethodName:filter:[e] @TO@ MethodInvocation@@c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3763 @LENGTH@ 15
------------------INS SimpleName@@e @TO@ MethodInvocation@@MethodName:filter:[e] @AT@ 3776 @LENGTH@ 1
---------------INS SimpleName@@Name:c @TO@ MethodInvocation@@c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3763 @LENGTH@ 1
---------------INS SimpleName@@MethodName:subscriberContext:[Context.of(contextKey,true)] @TO@ MethodInvocation@@c.filter(e).subscriberContext(Context.of(contextKey,true)) @AT@ 3783 @LENGTH@ 47
------------------INS MethodInvocation@@Context.of(contextKey,true) @TO@ SimpleName@@MethodName:subscriberContext:[Context.of(contextKey,true)] @AT@ 3801 @LENGTH@ 28
---------------------INS SimpleName@@Name:Context @TO@ MethodInvocation@@Context.of(contextKey,true) @AT@ 3801 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:of:[contextKey, true] @TO@ MethodInvocation@@Context.of(contextKey,true) @AT@ 3809 @LENGTH@ 20
------------------------INS SimpleName@@contextKey @TO@ SimpleName@@MethodName:of:[contextKey, true] @AT@ 3812 @LENGTH@ 10
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:of:[contextKey, true] @AT@ 3824 @LENGTH@ 4
---INS VariableDeclarationStatement@@WebFilterChain chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3835 @LENGTH@ 103
------INS SimpleType@@WebFilterChain @TO@ VariableDeclarationStatement@@WebFilterChain chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter); @AT@ 3835 @LENGTH@ 14
------INS VariableDeclarationFragment@@chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter) @TO@ VariableDeclarationStatement@@WebFilterChain chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter); @AT@ 3850 @LENGTH@ 87
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter) @AT@ 3850 @LENGTH@ 5
---------INS ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @TO@ VariableDeclarationFragment@@chain=new DefaultWebFilterChain(e -> Mono.empty(),mainContextWebFilter,this.filter) @AT@ 3858 @LENGTH@ 79
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 3858 @LENGTH@ 3
------------INS SimpleType@@DefaultWebFilterChain @TO@ ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 3862 @LENGTH@ 21
------------INS LambdaExpression@@e -> Mono.empty() @TO@ ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 3884 @LENGTH@ 17
---------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> Mono.empty() @AT@ 3884 @LENGTH@ 1
------------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 3884 @LENGTH@ 1
---------------INS MethodInvocation@@Mono.empty() @TO@ LambdaExpression@@e -> Mono.empty() @AT@ 3889 @LENGTH@ 12
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 3889 @LENGTH@ 4
------------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 3894 @LENGTH@ 7
------------INS SimpleName@@mainContextWebFilter @TO@ ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 3903 @LENGTH@ 20
------------INS FieldAccess@@this.filter @TO@ ClassInstanceCreation@@DefaultWebFilterChain[e -> Mono.empty(), mainContextWebFilter, this.filter] @AT@ 3925 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 3925 @LENGTH@ 4
---------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 3930 @LENGTH@ 6
---INS VariableDeclarationStatement@@Mono<Void> filter=chain.filter(MockServerWebExchange.from(this.exchange.build())); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 3941 @LENGTH@ 84
------INS ParameterizedType@@Mono<Void> @TO@ VariableDeclarationStatement@@Mono<Void> filter=chain.filter(MockServerWebExchange.from(this.exchange.build())); @AT@ 3941 @LENGTH@ 10
---------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Void> @AT@ 3941 @LENGTH@ 4
---------INS SimpleType@@Void @TO@ ParameterizedType@@Mono<Void> @AT@ 3946 @LENGTH@ 4
------INS VariableDeclarationFragment@@filter=chain.filter(MockServerWebExchange.from(this.exchange.build())) @TO@ VariableDeclarationStatement@@Mono<Void> filter=chain.filter(MockServerWebExchange.from(this.exchange.build())); @AT@ 3952 @LENGTH@ 72
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=chain.filter(MockServerWebExchange.from(this.exchange.build())) @AT@ 3952 @LENGTH@ 6
---------INS MethodInvocation@@chain.filter(MockServerWebExchange.from(this.exchange.build())) @TO@ VariableDeclarationFragment@@filter=chain.filter(MockServerWebExchange.from(this.exchange.build())) @AT@ 3961 @LENGTH@ 63
------------INS SimpleName@@Name:chain @TO@ MethodInvocation@@chain.filter(MockServerWebExchange.from(this.exchange.build())) @AT@ 3961 @LENGTH@ 5
------------INS SimpleName@@MethodName:filter:[MockServerWebExchange.from(this.exchange.build())] @TO@ MethodInvocation@@chain.filter(MockServerWebExchange.from(this.exchange.build())) @AT@ 3967 @LENGTH@ 57
---------------INS MethodInvocation@@MockServerWebExchange.from(this.exchange.build()) @TO@ SimpleName@@MethodName:filter:[MockServerWebExchange.from(this.exchange.build())] @AT@ 3974 @LENGTH@ 49
------------------INS SimpleName@@Name:MockServerWebExchange @TO@ MethodInvocation@@MockServerWebExchange.from(this.exchange.build()) @AT@ 3974 @LENGTH@ 21
------------------INS SimpleName@@MethodName:from:[this.exchange.build()] @TO@ MethodInvocation@@MockServerWebExchange.from(this.exchange.build()) @AT@ 3996 @LENGTH@ 27
---------------------INS MethodInvocation@@this.exchange.build() @TO@ SimpleName@@MethodName:from:[this.exchange.build()] @AT@ 4001 @LENGTH@ 21
------------------------INS FieldAccess@@this.exchange @TO@ MethodInvocation@@this.exchange.build() @AT@ 4001 @LENGTH@ 13
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.exchange @AT@ 4001 @LENGTH@ 4
---------------------------INS SimpleName@@exchange @TO@ FieldAccess@@this.exchange @AT@ 4006 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.exchange.build() @AT@ 4015 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:filterWhenMainContextThenDoesNotOverride,  @AT@ 4028 @LENGTH@ 113
------INS MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 112
---------INS MethodInvocation@@MethodName:then:[] @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 91
---------INS MethodInvocation@@MethodName:hasKey:[contextKey] @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 80
------------INS SimpleName@@contextKey @TO@ MethodInvocation@@MethodName:hasKey:[contextKey] @AT@ 4097 @LENGTH@ 10
---------INS MethodInvocation@@MethodName:expectAccessibleContext:[] @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:create:[filter] @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 27
------------INS SimpleName@@filter @TO@ MethodInvocation@@MethodName:create:[filter] @AT@ 4048 @LENGTH@ 6
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4028 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(filter).expectAccessibleContext().hasKey(contextKey).then().verifyComplete() @AT@ 4124 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @TO@ protected, List<String>, MethodName:getItems, CLICompleterInvocation completerInvocation,  @AT@ 2190 @LENGTH@ 1096
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2153 @LENGTH@ 12
------MOV SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 2367 @LENGTH@ 4
------MOV SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 2372 @LENGTH@ 6
---INS SimpleName@@MethodName:getItems @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2166 @LENGTH@ 8
---INS SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2175 @LENGTH@ 42
------INS SimpleType@@CLICompleterInvocation @TO@ SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2175 @LENGTH@ 22
------INS SimpleName@@completerInvocation @TO@ SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2198 @LENGTH@ 19
---UPD Modifier@@public @TO@ protected @AT@ 2190 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2197 @LENGTH@ 4
---DEL SimpleName@@MethodName:complete @AT@ 2202 @LENGTH@ 8
---DEL SingleVariableDeclaration@@CLICompleterInvocation completerInvocation @AT@ 2211 @LENGTH@ 42
------DEL SimpleType@@CLICompleterInvocation @AT@ 2211 @LENGTH@ 22
------DEL SimpleName@@completerInvocation @AT@ 2234 @LENGTH@ 19
---INS VariableDeclarationStatement@@List<String> deployments=Collections.emptyList(); @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2233 @LENGTH@ 51
------MOV ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> deployments=Collections.emptyList(); @AT@ 2606 @LENGTH@ 12
------MOV VariableDeclarationFragment@@opBuffer=completerInvocation.getGivenCompleteValue() @TO@ VariableDeclarationStatement@@List<String> deployments=Collections.emptyList(); @AT@ 2678 @LENGTH@ 54
---DEL IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  List<String> deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient());  if (!deployments.isEmpty()) {    List<String> candidates=new ArrayList<>();    String opBuffer=completerInvocation.getGivenCompleteValue();    if (opBuffer.isEmpty()) {      candidates.addAll(deployments);    } else {      for (      String name : deployments) {        if (name.startsWith(opBuffer)) {          candidates.add(name);        }      }      Collections.sort(candidates);    }    completerInvocation.addAllCompleterValues(candidates);  }} @AT@ 2269 @LENGTH@ 1007
------DEL Block@@ThenBody:{  List<String> deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient());  if (!deployments.isEmpty()) {    List<String> candidates=new ArrayList<>();    String opBuffer=completerInvocation.getGivenCompleteValue();    if (opBuffer.isEmpty()) {      candidates.addAll(deployments);    } else {      for (      String name : deployments) {        if (name.startsWith(opBuffer)) {          candidates.add(name);        }      }      Collections.sort(candidates);    }    completerInvocation.addAllCompleterValues(candidates);  }} @AT@ 2349 @LENGTH@ 927
---------DEL VariableDeclarationStatement@@List<String> deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient()); @AT@ 2367 @LENGTH@ 172
------------DEL ParameterizedType@@List<String> @AT@ 2367 @LENGTH@ 12
------------DEL VariableDeclarationFragment@@deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient()) @AT@ 2380 @LENGTH@ 158
---------------DEL SimpleName@@deployments @AT@ 2380 @LENGTH@ 11
---------DEL IfStatement@@if (!deployments.isEmpty()) {  List<String> candidates=new ArrayList<>();  String opBuffer=completerInvocation.getGivenCompleteValue();  if (opBuffer.isEmpty()) {    candidates.addAll(deployments);  } else {    for (    String name : deployments) {      if (name.startsWith(opBuffer)) {        candidates.add(name);      }    }    Collections.sort(candidates);  }  completerInvocation.addAllCompleterValues(candidates);} @AT@ 2556 @LENGTH@ 706
------------DEL PrefixExpression@@!deployments.isEmpty() @AT@ 2560 @LENGTH@ 22
---------------DEL Operator@@! @AT@ 2560 @LENGTH@ 1
---------------DEL MethodInvocation@@deployments.isEmpty() @AT@ 2561 @LENGTH@ 21
------------------DEL SimpleName@@Name:deployments @AT@ 2561 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 2573 @LENGTH@ 9
------------DEL Block@@ThenBody:{  List<String> candidates=new ArrayList<>();  String opBuffer=completerInvocation.getGivenCompleteValue();  if (opBuffer.isEmpty()) {    candidates.addAll(deployments);  } else {    for (    String name : deployments) {      if (name.startsWith(opBuffer)) {        candidates.add(name);      }    }    Collections.sort(candidates);  }  completerInvocation.addAllCompleterValues(candidates);} @AT@ 2584 @LENGTH@ 678
---------------DEL VariableDeclarationStatement@@List<String> candidates=new ArrayList<>(); @AT@ 2606 @LENGTH@ 44
------------------DEL VariableDeclarationFragment@@candidates=new ArrayList<>() @AT@ 2619 @LENGTH@ 30
---------------------DEL SimpleName@@candidates @AT@ 2619 @LENGTH@ 10
---------------------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 2632 @LENGTH@ 17
------------------------DEL New@@new @AT@ 2632 @LENGTH@ 3
------------------------DEL ParameterizedType@@ArrayList<> @AT@ 2636 @LENGTH@ 11
---------------------------DEL SimpleType@@ArrayList @AT@ 2636 @LENGTH@ 9
---------------DEL VariableDeclarationStatement@@String opBuffer=completerInvocation.getGivenCompleteValue(); @AT@ 2671 @LENGTH@ 62
------------------DEL SimpleType@@String @AT@ 2671 @LENGTH@ 6
---------------DEL IfStatement@@if (opBuffer.isEmpty()) {  candidates.addAll(deployments);} else {  for (  String name : deployments) {    if (name.startsWith(opBuffer)) {      candidates.add(name);    }  }  Collections.sort(candidates);} @AT@ 2754 @LENGTH@ 415
------------------DEL MethodInvocation@@opBuffer.isEmpty() @AT@ 2758 @LENGTH@ 18
---------------------DEL SimpleName@@Name:opBuffer @AT@ 2758 @LENGTH@ 8
---------------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 2767 @LENGTH@ 9
------------------DEL Block@@ElseBody:{  for (  String name : deployments) {    if (name.startsWith(opBuffer)) {      candidates.add(name);    }  }  Collections.sort(candidates);} @AT@ 2863 @LENGTH@ 306
---------------------DEL EnhancedForStatement@@for (String name : deployments) {  if (name.startsWith(opBuffer)) {    candidates.add(name);  }} @AT@ 2889 @LENGTH@ 204
------------------------DEL SingleVariableDeclaration@@String name @AT@ 2894 @LENGTH@ 11
---------------------------DEL SimpleType@@String @AT@ 2894 @LENGTH@ 6
---------------------------DEL SimpleName@@name @AT@ 2901 @LENGTH@ 4
------------------------DEL SimpleName@@deployments @AT@ 2908 @LENGTH@ 11
------------------------DEL IfStatement@@if (name.startsWith(opBuffer)) {  candidates.add(name);} @AT@ 2951 @LENGTH@ 116
---------------------------DEL MethodInvocation@@name.startsWith(opBuffer) @AT@ 2955 @LENGTH@ 25
------------------------------DEL SimpleName@@Name:name @AT@ 2955 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:startsWith:[opBuffer] @AT@ 2960 @LENGTH@ 20
---------------------------------DEL SimpleName@@opBuffer @AT@ 2971 @LENGTH@ 8
---------------------------DEL Block@@ThenBody:{  candidates.add(name);} @AT@ 2982 @LENGTH@ 85
------------------------------DEL ExpressionStatement@@MethodInvocation:candidates.add(name) @AT@ 3016 @LENGTH@ 21
---------------------------------DEL MethodInvocation@@candidates.add(name) @AT@ 3016 @LENGTH@ 20
------------------------------------DEL SimpleName@@Name:candidates @AT@ 3016 @LENGTH@ 10
------------------------------------DEL SimpleName@@MethodName:add:[name] @AT@ 3027 @LENGTH@ 9
---------------------------------------DEL SimpleName@@name @AT@ 3031 @LENGTH@ 4
---------------------DEL ExpressionStatement@@MethodInvocation:Collections.sort(candidates) @AT@ 3118 @LENGTH@ 29
------------------------DEL MethodInvocation@@Collections.sort(candidates) @AT@ 3118 @LENGTH@ 28
---------------------------DEL SimpleName@@Name:Collections @AT@ 3118 @LENGTH@ 11
---------------------------DEL SimpleName@@MethodName:sort:[candidates] @AT@ 3130 @LENGTH@ 16
------------------------------DEL SimpleName@@candidates @AT@ 3135 @LENGTH@ 10
---------------DEL ExpressionStatement@@MethodInvocation:completerInvocation.addAllCompleterValues(candidates) @AT@ 3190 @LENGTH@ 54
------------------DEL MethodInvocation@@completerInvocation.addAllCompleterValues(candidates) @AT@ 3190 @LENGTH@ 53
---------------------DEL SimpleName@@Name:completerInvocation @AT@ 3190 @LENGTH@ 19
---------------------DEL SimpleName@@MethodName:addAllCompleterValues:[candidates] @AT@ 3210 @LENGTH@ 33
------------------------DEL SimpleName@@candidates @AT@ 3232 @LENGTH@ 10
---INS IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient());} @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2297 @LENGTH@ 271
------MOV InfixExpression@@completerInvocation.getCommandContext().getModelControllerClient() != null @TO@ IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient());} @AT@ 2273 @LENGTH@ 74
------MOV Block@@ThenBody:{  candidates.addAll(deployments);} @TO@ IfStatement@@if (completerInvocation.getCommandContext().getModelControllerClient() != null) {  deployments=Util.getDeployments(completerInvocation.getCommandContext().getModelControllerClient());} @AT@ 2778 @LENGTH@ 79
---INS ReturnStatement@@SimpleName:deployments @TO@ MethodDeclaration@@public, void, MethodName:complete, CLICompleterInvocation completerInvocation,  @AT@ 2581 @LENGTH@ 19
------INS SimpleName@@deployments @TO@ ReturnStatement@@SimpleName:deployments @AT@ 2588 @LENGTH@ 11


UPD IfStatement@@if (entry.getValue().size() > 0) {  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  httpRequest.addHeader(key,s);} @TO@ if (entry.getValue().size() > 0) {  httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";")));} @AT@ 7569 @LENGTH@ 408
---UPD Block@@ThenBody:{  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  httpRequest.addHeader(key,s);} @TO@ ThenBody:{  httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";")));} @AT@ 7602 @LENGTH@ 375
------INS ExpressionStatement@@MethodInvocation:httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @TO@ Block@@ThenBody:{  String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0);  httpRequest.addHeader(key,s);} @AT@ 7725 @LENGTH@ 87
---------INS MethodInvocation@@httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @TO@ ExpressionStatement@@MethodInvocation:httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7725 @LENGTH@ 86
------------INS SimpleName@@MethodName:addHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @TO@ MethodInvocation@@httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7737 @LENGTH@ 74
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:addHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @AT@ 7747 @LENGTH@ 3
---------------INS MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @TO@ SimpleName@@MethodName:addHeader:[key, entry.getValue().stream().collect(Collectors.joining(";"))] @AT@ 7752 @LENGTH@ 58
------------------INS SimpleName@@MethodName:collect:[Collectors.joining(";")] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7778 @LENGTH@ 32
---------------------INS MethodInvocation@@Collectors.joining(";") @TO@ SimpleName@@MethodName:collect:[Collectors.joining(";")] @AT@ 7786 @LENGTH@ 23
------------------------MOV SimpleName@@Name:httpRequest @TO@ MethodInvocation@@Collectors.joining(";") @AT@ 7929 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:addHeader:[key, s] @TO@ MethodInvocation@@Collectors.joining(";") @AT@ 7941 @LENGTH@ 17
---------------------------INS StringLiteral@@";" @TO@ SimpleName@@MethodName:addHeader:[key, s] @AT@ 7805 @LENGTH@ 3
------------------MOV MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7854 @LENGTH@ 16
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7854 @LENGTH@ 5
------------------MOV MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().stream().collect(Collectors.joining(";")) @AT@ 7884 @LENGTH@ 16
------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@httpRequest.addHeader(key,entry.getValue().stream().collect(Collectors.joining(";"))) @AT@ 7824 @LENGTH@ 5
------DEL VariableDeclarationStatement@@String s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0); @AT@ 7813 @LENGTH@ 95
---------DEL SimpleType@@String @AT@ 7813 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@s=entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0) @AT@ 7820 @LENGTH@ 87
------------DEL SimpleName@@s @AT@ 7820 @LENGTH@ 1
------------DEL ConditionalExpression@@entry.getValue().size() > 1 ? entry.getValue().toString() : entry.getValue().get(0) @AT@ 7824 @LENGTH@ 83
---------------DEL InfixExpression@@entry.getValue().size() > 1 @AT@ 7824 @LENGTH@ 27
------------------DEL MethodInvocation@@entry.getValue().size() @AT@ 7824 @LENGTH@ 23
---------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 7824 @LENGTH@ 16
---------------------DEL SimpleName@@MethodName:size:[] @AT@ 7841 @LENGTH@ 6
------------------DEL Operator@@> @AT@ 7847 @LENGTH@ 1
------------------DEL NumberLiteral@@1 @AT@ 7850 @LENGTH@ 1
---------------DEL MethodInvocation@@entry.getValue().toString() @AT@ 7854 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:toString:[] @AT@ 7871 @LENGTH@ 10
---------------DEL MethodInvocation@@entry.getValue().get(0) @AT@ 7884 @LENGTH@ 23
------------------DEL SimpleName@@Name:entry @AT@ 7884 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:get:[0] @AT@ 7901 @LENGTH@ 6
---------------------DEL NumberLiteral@@0 @AT@ 7905 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:httpRequest.addHeader(key,s) @AT@ 7929 @LENGTH@ 30
---------DEL MethodInvocation@@httpRequest.addHeader(key,s) @AT@ 7929 @LENGTH@ 29


UPD MethodDeclaration@@protected, ResponseEntity<OAuth2Exception>, MethodName:enhanceResponse, ResponseEntity<OAuth2Exception> response, Exception exception,  @TO@ protected, ResponseEntity<?>, MethodName:enhanceResponse, ResponseEntity<?> response, Exception exception,  @AT@ 2155 @LENGTH@ 748
---UPD ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ ResponseEntity<?> @AT@ 2165 @LENGTH@ 31
------INS WildcardType@@? @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 2102 @LENGTH@ 1
------DEL SimpleType@@OAuth2Exception @AT@ 2180 @LENGTH@ 15
---UPD SingleVariableDeclaration@@ResponseEntity<OAuth2Exception> response @TO@ ResponseEntity<?> response @AT@ 2213 @LENGTH@ 40
------UPD ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ ResponseEntity<?> @AT@ 2213 @LENGTH@ 31
---------INS WildcardType@@? @TO@ ParameterizedType@@ResponseEntity<OAuth2Exception> @AT@ 2136 @LENGTH@ 1
---------DEL SimpleType@@OAuth2Exception @AT@ 2228 @LENGTH@ 15
---UPD ReturnStatement@@ClassInstanceCreation:new ResponseEntity<OAuth2Exception>(response.getBody(),update,response.getStatusCode()) @TO@ ClassInstanceCreation:new ResponseEntity<Object>(response.getBody(),update,response.getStatusCode()) @AT@ 2803 @LENGTH@ 97
------UPD ClassInstanceCreation@@ResponseEntity<OAuth2Exception>[response.getBody(), update, response.getStatusCode()] @TO@ ResponseEntity<Object>[response.getBody(), update, response.getStatusCode()] @AT@ 2810 @LENGTH@ 89
---------UPD ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ ResponseEntity<Object> @AT@ 2814 @LENGTH@ 31
------------UPD SimpleType@@OAuth2Exception @TO@ Object @AT@ 2829 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @AT@ 2081 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(hiveConf) @TO@ ExpressionStatement@@MethodInvocation:hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port) @AT@ 2022 @LENGTH@ 52
---DEL MethodInvocation@@hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + port) @AT@ 2081 @LENGTH@ 78
------DEL SimpleName@@Name:hiveConf @AT@ 2081 @LENGTH@ 8
------DEL SimpleName@@MethodName:setVar:[HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + port] @AT@ 2090 @LENGTH@ 69
---------DEL QualifiedName@@HiveConf.ConfVars.METASTOREURIS @AT@ 2097 @LENGTH@ 31
------------DEL QualifiedName@@HiveConf.ConfVars @AT@ 2097 @LENGTH@ 17
---------------DEL SimpleName@@HiveConf @AT@ 2097 @LENGTH@ 8
---------------DEL SimpleName@@ConfVars @AT@ 2106 @LENGTH@ 8
------------DEL SimpleName@@METASTOREURIS @AT@ 2115 @LENGTH@ 13
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2130 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2130 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 2151 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 2154 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:factory.setTargetClass(CrudRepository.class) @TO@ MethodInvocation:factory.setTargetClass(PersonRepositoryImpl.class) @AT@ 1265 @LENGTH@ 45
---UPD MethodInvocation@@factory.setTargetClass(CrudRepository.class) @TO@ factory.setTargetClass(PersonRepositoryImpl.class) @AT@ 1265 @LENGTH@ 44
------UPD SimpleName@@MethodName:setTargetClass:[CrudRepository.class] @TO@ MethodName:setTargetClass:[PersonRepositoryImpl.class] @AT@ 1273 @LENGTH@ 36
---------UPD TypeLiteral@@CrudRepository.class @TO@ PersonRepositoryImpl.class @AT@ 1288 @LENGTH@ 20


DEL TypeDeclaration@@[public, static]ServerGroupsCompleter, [OptionCompleter<CLICompleterInvocation>] @AT@ 2823 @LENGTH@ 1131
---DEL Modifier@@public @AT@ 2823 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2830 @LENGTH@ 6
---DEL SimpleName@@ClassName:ServerGroupsCompleter @AT@ 2843 @LENGTH@ 21
---DEL ParameterizedType@@OptionCompleter<CLICompleterInvocation> @AT@ 2888 @LENGTH@ 39
------DEL SimpleType@@OptionCompleter @AT@ 2888 @LENGTH@ 15
------DEL SimpleType@@CLICompleterInvocation @AT@ 2904 @LENGTH@ 22


INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Encoding and sending form: " + form);} @TO@ MethodDeclaration@@public, void, MethodName:doWithRequest, ClientHttpRequest request, IOException,  @AT@ 8410 @LENGTH@ 91
---INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Encoding and sending form: " + form);} @AT@ 8414 @LENGTH@ 23
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 8414 @LENGTH@ 6
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 8421 @LENGTH@ 16
---INS Block@@ThenBody:{  logger.debug("Encoding and sending form: " + form);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Encoding and sending form: " + form);} @AT@ 8439 @LENGTH@ 62
------INS ExpressionStatement@@MethodInvocation:logger.debug("Encoding and sending form: " + form) @TO@ Block@@ThenBody:{  logger.debug("Encoding and sending form: " + form);} @AT@ 8445 @LENGTH@ 51
---------INS MethodInvocation@@logger.debug("Encoding and sending form: " + form) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Encoding and sending form: " + form) @AT@ 8445 @LENGTH@ 50
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Encoding and sending form: " + form) @AT@ 8445 @LENGTH@ 6
------------INS SimpleName@@MethodName:debug:["Encoding and sending form: " + form] @TO@ MethodInvocation@@logger.debug("Encoding and sending form: " + form) @AT@ 8452 @LENGTH@ 43
---------------INS InfixExpression@@"Encoding and sending form: " + form @TO@ SimpleName@@MethodName:debug:["Encoding and sending form: " + form] @AT@ 8458 @LENGTH@ 36
------------------INS StringLiteral@@"Encoding and sending form: " @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 8458 @LENGTH@ 29
------------------INS Operator@@+ @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 8487 @LENGTH@ 1
------------------INS SimpleName@@form @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 8490 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:when(em.getDelegate()).thenReturn(em) @TO@ MethodDeclaration@@public, void, MethodName:setUp, SecurityException, NoSuchMethodException,  @AT@ 2428 @LENGTH@ 38
---INS MethodInvocation@@when(em.getDelegate()).thenReturn(em) @TO@ ExpressionStatement@@MethodInvocation:when(em.getDelegate()).thenReturn(em) @AT@ 2428 @LENGTH@ 37
------INS MethodInvocation@@MethodName:when:[em.getDelegate()] @TO@ MethodInvocation@@when(em.getDelegate()).thenReturn(em) @AT@ 2428 @LENGTH@ 22
---------INS MethodInvocation@@em.getDelegate() @TO@ MethodInvocation@@MethodName:when:[em.getDelegate()] @AT@ 2433 @LENGTH@ 16
------------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.getDelegate() @AT@ 2433 @LENGTH@ 2
------------INS SimpleName@@MethodName:getDelegate:[] @TO@ MethodInvocation@@em.getDelegate() @AT@ 2436 @LENGTH@ 13
------INS SimpleName@@MethodName:thenReturn:[em] @TO@ MethodInvocation@@when(em.getDelegate()).thenReturn(em) @AT@ 2451 @LENGTH@ 14
---------INS SimpleName@@em @TO@ SimpleName@@MethodName:thenReturn:[em] @AT@ 2462 @LENGTH@ 2


UPD FieldDeclaration@@public, static, final, String, [CAMEL_AS2_CLIENT_PREFIX="camel-as2.client"] @TO@ public, static, final, String, [CAMEL_AS2_CLIENT_PREFIX="camel-as2.client."] @AT@ 1815 @LENGTH@ 72
---UPD VariableDeclarationFragment@@CAMEL_AS2_CLIENT_PREFIX="camel-as2.client" @TO@ CAMEL_AS2_CLIENT_PREFIX="camel-as2.client." @AT@ 1842 @LENGTH@ 44
------UPD StringLiteral@@"camel-as2.client" @TO@ "camel-as2.client." @AT@ 1868 @LENGTH@ 18


UPD VariableDeclarationStatement@@FlowExecutionListener listener=new FlowExecutionListenerAdapter(){
  @SuppressWarnings("unused") public void sessionEnding(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> output){
    assertTrue(context.getFlashScope().contains("flowExecutionException"));
    assertTrue(context.getFlashScope().contains("rootCauseException"));
    assertTrue(context.getFlashScope().get("rootCauseException") instanceof TestException);
  }
}
; @TO@ FlowExecutionListener listener=new FlowExecutionListener(){
  @SuppressWarnings("unused") public void sessionEnding(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> output){
    assertTrue(context.getFlashScope().contains("flowExecutionException"));
    assertTrue(context.getFlashScope().contains("rootCauseException"));
    assertTrue(context.getFlashScope().get("rootCauseException") instanceof TestException);
  }
}
; @AT@ 4267 @LENGTH@ 457
---UPD VariableDeclarationFragment@@listener=new FlowExecutionListenerAdapter(){
  @SuppressWarnings("unused") public void sessionEnding(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> output){
    assertTrue(context.getFlashScope().contains("flowExecutionException"));
    assertTrue(context.getFlashScope().contains("rootCauseException"));
    assertTrue(context.getFlashScope().get("rootCauseException") instanceof TestException);
  }
}
 @TO@ listener=new FlowExecutionListener(){
  @SuppressWarnings("unused") public void sessionEnding(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> output){
    assertTrue(context.getFlashScope().contains("flowExecutionException"));
    assertTrue(context.getFlashScope().contains("rootCauseException"));
    assertTrue(context.getFlashScope().get("rootCauseException") instanceof TestException);
  }
}
 @AT@ 4289 @LENGTH@ 434
------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 4300 @LENGTH@ 423
---------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 4304 @LENGTH@ 28


UPD MethodDeclaration@@public, voidMethodName:DefaultOAuth2User, Set<GrantedAuthority> authorities, Map<String,Object> attributes, String nameAttributeKey,  @TO@ public, voidMethodName:DefaultOAuth2User, Collection<? extends GrantedAuthority> authorities, Map<String,Object> attributes, String nameAttributeKey,  @AT@ 2277 @LENGTH@ 705
---UPD SingleVariableDeclaration@@Set<GrantedAuthority> authorities @TO@ Collection<? extends GrantedAuthority> authorities @AT@ 2302 @LENGTH@ 33
------UPD ParameterizedType@@Set<GrantedAuthority> @TO@ Collection<? extends GrantedAuthority> @AT@ 2302 @LENGTH@ 21
---------UPD SimpleType@@Set @TO@ Collection @AT@ 2302 @LENGTH@ 3
---------DEL SimpleType@@GrantedAuthority @AT@ 2306 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@Set<GrantedAuthority> @AT@ 2313 @LENGTH@ 26


UPD MethodDeclaration@@public, voidMethodName:SkipListenerAdapter, SkipReadListener skipReadDelgate, SkipProcessListener skipProcessDelegate, SkipWriteListener skipWriteDelegate,  @TO@ public, voidMethodName:SkipListenerAdapter, SkipReadListener skipReadDelegate, SkipProcessListener skipProcessDelegate, SkipWriteListener skipWriteDelegate,  @AT@ 1200 @LENGTH@ 282
---UPD SingleVariableDeclaration@@SkipReadListener skipReadDelgate @TO@ SkipReadListener skipReadDelegate @AT@ 1227 @LENGTH@ 32
------UPD SimpleName@@skipReadDelgate @TO@ skipReadDelegate @AT@ 1244 @LENGTH@ 15
---UPD ExpressionStatement@@Assignment:this.skipReadDelegate=skipReadDelgate @TO@ Assignment:this.skipReadDelegate=skipReadDelegate @AT@ 1343 @LENGTH@ 40
------UPD Assignment@@this.skipReadDelegate=skipReadDelgate @TO@ this.skipReadDelegate=skipReadDelegate @AT@ 1343 @LENGTH@ 39
---------UPD SimpleName@@skipReadDelgate @TO@ skipReadDelegate @AT@ 1367 @LENGTH@ 15


UPD MethodDeclaration@@public, static, AggregationStrategy, MethodName:batch,  @TO@ public, static, AggregationStrategy, MethodName:groupedBody,  @AT@ 3093 @LENGTH@ 96
---UPD SimpleName@@MethodName:batch @TO@ MethodName:groupedBody @AT@ 3127 @LENGTH@ 5
---UPD ReturnStatement@@ClassInstanceCreation:new BatchAggregationStrategy() @TO@ ClassInstanceCreation:new GroupedBodyAggregationStrategy() @AT@ 3145 @LENGTH@ 38
------UPD ClassInstanceCreation@@BatchAggregationStrategy[] @TO@ GroupedBodyAggregationStrategy[] @AT@ 3152 @LENGTH@ 30
---------UPD SimpleType@@BatchAggregationStrategy @TO@ GroupedBodyAggregationStrategy @AT@ 3156 @LENGTH@ 24


UPD ReturnStatement@@MethodInvocation:this.operation.and(new ExpressionProjection(Fields.field(alias),(AggregationExpression)value)) @TO@ MethodInvocation:this.operation.and(new ExpressionProjection(Fields.field(alias,alias),(AggregationExpression)value)) @AT@ 15523 @LENGTH@ 104
---UPD MethodInvocation@@this.operation.and(new ExpressionProjection(Fields.field(alias),(AggregationExpression)value)) @TO@ this.operation.and(new ExpressionProjection(Fields.field(alias,alias),(AggregationExpression)value)) @AT@ 15530 @LENGTH@ 96
------UPD SimpleName@@MethodName:and:[new ExpressionProjection(Fields.field(alias),(AggregationExpression)value)] @TO@ MethodName:and:[new ExpressionProjection(Fields.field(alias,alias),(AggregationExpression)value)] @AT@ 15545 @LENGTH@ 81
---------UPD ClassInstanceCreation@@ExpressionProjection[Fields.field(alias), (AggregationExpression)value] @TO@ ExpressionProjection[Fields.field(alias,alias), (AggregationExpression)value] @AT@ 15549 @LENGTH@ 76
------------UPD MethodInvocation@@Fields.field(alias) @TO@ Fields.field(alias,alias) @AT@ 15574 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:field:[alias] @TO@ MethodName:field:[alias, alias] @AT@ 15581 @LENGTH@ 12
------------------INS SimpleName@@alias @TO@ SimpleName@@MethodName:field:[alias] @AT@ 15594 @LENGTH@ 5


INS MethodDeclaration@@private, boolean, MethodName:isAutomaticRecoveryEnabled,  @TO@ TypeDeclaration@@RabbitConsumer, [com.rabbitmq.client.Consumer] @AT@ 11800 @LENGTH@ 207
---INS Modifier@@private @TO@ MethodDeclaration@@private, boolean, MethodName:isAutomaticRecoveryEnabled,  @AT@ 11800 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@private, boolean, MethodName:isAutomaticRecoveryEnabled,  @AT@ 11808 @LENGTH@ 7
---INS SimpleName@@MethodName:isAutomaticRecoveryEnabled @TO@ MethodDeclaration@@private, boolean, MethodName:isAutomaticRecoveryEnabled,  @AT@ 11816 @LENGTH@ 26
---INS ReturnStatement@@InfixExpression:this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ MethodDeclaration@@private, boolean, MethodName:isAutomaticRecoveryEnabled,  @AT@ 11855 @LENGTH@ 146
------MOV InfixExpression@@!isChannelOpen() && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ ReturnStatement@@InfixExpression:this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11277 @LENGTH@ 77
---------DEL PrefixExpression@@!isChannelOpen() @AT@ 11277 @LENGTH@ 16
------------DEL Operator@@! @AT@ 11277 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:isChannelOpen:[] @AT@ 11278 @LENGTH@ 15
---------INS InfixExpression@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null @TO@ InfixExpression@@!isChannelOpen() && this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11862 @LENGTH@ 65
------------INS MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @TO@ InfixExpression@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null @AT@ 11862 @LENGTH@ 57
---------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 27
---------------MOV MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 27
---------------MOV FieldAccess@@this.consumer @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 13
---------------MOV FieldAccess@@this.consumer @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11505 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:getAutomaticRecoveryEnabled:[] @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11533 @LENGTH@ 29
---------------MOV SimpleName@@MethodName:getAutomaticRecoveryEnabled:[] @TO@ MethodInvocation@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() @AT@ 11533 @LENGTH@ 29
------------INS Operator@@!= @TO@ InfixExpression@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null @AT@ 11919 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.consumer.getEndpoint().getAutomaticRecoveryEnabled() != null @AT@ 11923 @LENGTH@ 4


UPD VariableDeclarationStatement@@ManagedCamelContextMBean managedCamelContext=context.getManagedCamelContext(); @TO@ ManagedCamelContextMBean managedCamelContext=context != null ? context.getManagedCamelContext() : null; @AT@ 16783 @LENGTH@ 80
---UPD VariableDeclarationFragment@@managedCamelContext=context.getManagedCamelContext() @TO@ managedCamelContext=context != null ? context.getManagedCamelContext() : null @AT@ 16808 @LENGTH@ 54
------DEL MethodInvocation@@context.getManagedCamelContext() @AT@ 16830 @LENGTH@ 32
------INS ConditionalExpression@@context != null ? context.getManagedCamelContext() : null @TO@ VariableDeclarationFragment@@managedCamelContext=context.getManagedCamelContext() @AT@ 16831 @LENGTH@ 57
---------INS InfixExpression@@context != null @TO@ ConditionalExpression@@context != null ? context.getManagedCamelContext() : null @AT@ 16831 @LENGTH@ 15
------------INS SimpleName@@context @TO@ InfixExpression@@context != null @AT@ 16831 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@context != null @AT@ 16838 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context != null @AT@ 16842 @LENGTH@ 4
---------INS MethodInvocation@@context.getManagedCamelContext() @TO@ ConditionalExpression@@context != null ? context.getManagedCamelContext() : null @AT@ 16849 @LENGTH@ 32
------------MOV SimpleName@@Name:context @TO@ MethodInvocation@@context.getManagedCamelContext() @AT@ 16830 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getManagedCamelContext:[] @TO@ MethodInvocation@@context.getManagedCamelContext() @AT@ 16838 @LENGTH@ 24
---------INS NullLiteral@@null @TO@ ConditionalExpression@@context != null ? context.getManagedCamelContext() : null @AT@ 16884 @LENGTH@ 4


UPD MethodDeclaration@@ResponseEntity<OAuth2Exception>, MethodName:translate, Exception e, Exception,  @TO@ ResponseEntity<T>, MethodName:translate, Exception e, Exception,  @AT@ 894 @LENGTH@ 40
---UPD ParameterizedType@@ResponseEntity<OAuth2Exception> @TO@ ResponseEntity<T> @AT@ 862 @LENGTH@ 31
------UPD SimpleType@@OAuth2Exception @TO@ T @AT@ 877 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ MethodDeclaration@@private, S3Configuration, MethodName:getS3ConfigurationNoEncryption,  @AT@ 2550 @LENGTH@ 58
---INS MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @TO@ ExpressionStatement@@MethodInvocation:when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2550 @LENGTH@ 57
------INS MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2550 @LENGTH@ 33
---------INS MethodInvocation@@s3Configuration.getRegion() @TO@ MethodInvocation@@MethodName:when:[s3Configuration.getRegion()] @AT@ 2555 @LENGTH@ 27
------------INS SimpleName@@Name:s3Configuration @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2555 @LENGTH@ 15
------------INS SimpleName@@MethodName:getRegion:[] @TO@ MethodInvocation@@s3Configuration.getRegion() @AT@ 2571 @LENGTH@ 11
------INS SimpleName@@MethodName:thenReturn:["US_EAST_1"] @TO@ MethodInvocation@@when(s3Configuration.getRegion()).thenReturn("US_EAST_1") @AT@ 2584 @LENGTH@ 23
---------INS StringLiteral@@"US_EAST_1" @TO@ SimpleName@@MethodName:thenReturn:["US_EAST_1"] @AT@ 2595 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new SpringDataMongodbQuery<T>(mongoOperations,entityInformation.getJavaType()) @TO@ ClassInstanceCreation:new SpringDataMongodbQuery<>(mongoOperations,entityInformation.getJavaType()) @AT@ 7358 @LENGTH@ 87
---UPD ClassInstanceCreation@@SpringDataMongodbQuery<T>[mongoOperations, entityInformation.getJavaType()] @TO@ SpringDataMongodbQuery<>[mongoOperations, entityInformation.getJavaType()] @AT@ 7365 @LENGTH@ 79
------UPD ParameterizedType@@SpringDataMongodbQuery<T> @TO@ SpringDataMongodbQuery<> @AT@ 7369 @LENGTH@ 25
---------DEL SimpleType@@T @AT@ 7392 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertThat(c.getPath()).isEqualTo("/app") @TO@ MethodInvocation:assertThat(c.getPath()).isEqualTo("/app/") @AT@ 2139 @LENGTH@ 42
---UPD MethodInvocation@@assertThat(c.getPath()).isEqualTo("/app") @TO@ assertThat(c.getPath()).isEqualTo("/app/") @AT@ 2139 @LENGTH@ 41
------UPD SimpleName@@MethodName:isEqualTo:["/app"] @TO@ MethodName:isEqualTo:["/app/"] @AT@ 2163 @LENGTH@ 17
---------UPD StringLiteral@@"/app" @TO@ "/app/" @AT@ 2173 @LENGTH@ 6


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 5509 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 5509 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 5513 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 5513 @LENGTH@ 4


INS MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @TO@ TypeDeclaration@@[public]SpringTestContext, [Closeable] @AT@ 2748 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2748 @LENGTH@ 6
---INS SimpleType@@SpringTestContext @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2755 @LENGTH@ 17
---INS SimpleName@@MethodName:context @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2773 @LENGTH@ 7
---INS SingleVariableDeclaration@@ConfigurableWebApplicationContext context @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2781 @LENGTH@ 41
------INS SimpleType@@ConfigurableWebApplicationContext @TO@ SingleVariableDeclaration@@ConfigurableWebApplicationContext context @AT@ 2781 @LENGTH@ 33
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@ConfigurableWebApplicationContext context @AT@ 2815 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:this.context=context @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2828 @LENGTH@ 23
------INS Assignment@@this.context=context @TO@ ExpressionStatement@@Assignment:this.context=context @AT@ 2828 @LENGTH@ 22
---------INS FieldAccess@@this.context @TO@ Assignment@@this.context=context @AT@ 2828 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.context @AT@ 2828 @LENGTH@ 4
------------INS SimpleName@@context @TO@ FieldAccess@@this.context @AT@ 2833 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.context=context @AT@ 2840 @LENGTH@ 1
---------INS SimpleName@@context @TO@ Assignment@@this.context=context @AT@ 2843 @LENGTH@ 7
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, SpringTestContext, MethodName:context, ConfigurableWebApplicationContext context,  @AT@ 2854 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 2861 @LENGTH@ 4


UPD TypeDeclaration@@[public]SecuredServiceRegistry, DelegatingServiceRegistry @TO@ [public, final]SecuredServiceRegistry, DelegatingServiceRegistry @AT@ 384 @LENGTH@ 811
---INS Modifier@@final @TO@ TypeDeclaration@@[public]SecuredServiceRegistry, DelegatingServiceRegistry @AT@ 1612 @LENGTH@ 5


UPD VariableDeclarationStatement@@final String zone=DateTimeFormatter.ofPattern("xx").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())); @TO@ final String zone=DateTimeFormatter.ofPattern("XX").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())); @AT@ 5233 @LENGTH@ 131
---UPD VariableDeclarationFragment@@zone=DateTimeFormatter.ofPattern("xx").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())) @TO@ zone=DateTimeFormatter.ofPattern("XX").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())) @AT@ 5246 @LENGTH@ 117
------UPD MethodInvocation@@DateTimeFormatter.ofPattern("xx").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())) @TO@ DateTimeFormatter.ofPattern("XX").format(zonedDateTime.withZoneSameLocal(ZoneId.systemDefault())) @AT@ 5253 @LENGTH@ 110
---------UPD MethodInvocation@@MethodName:ofPattern:["xx"] @TO@ MethodName:ofPattern:["XX"] @AT@ 5253 @LENGTH@ 33
------------UPD StringLiteral@@"xx" @TO@ "XX" @AT@ 5281 @LENGTH@ 4


UPD TypeDeclaration@@[public]ServerRedirectStrategy,  @TO@ [@FunctionalInterface, public]ServerRedirectStrategy,  @AT@ 832 @LENGTH@ 112
---INS MarkerAnnotation@@@FunctionalInterface @TO@ TypeDeclaration@@[public]ServerRedirectStrategy,  @AT@ 875 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:checkRequest(request) @TO@ MethodDeclaration@@public, ModelAndView, MethodName:handle, HttpServletRequest request, HttpServletResponse response, Object handler, Exception,  @AT@ 8488 @LENGTH@ 22
---INS MethodInvocation@@checkRequest(request) @TO@ ExpressionStatement@@MethodInvocation:checkRequest(request) @AT@ 8488 @LENGTH@ 21
------INS SimpleName@@MethodName:checkRequest:[request] @TO@ MethodInvocation@@checkRequest(request) @AT@ 8488 @LENGTH@ 21
---------INS SimpleName@@request @TO@ SimpleName@@MethodName:checkRequest:[request] @AT@ 8501 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @TO@ TypeDeclaration@@[public]DefaultOAuth2UserTests,  @AT@ 3262 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @AT@ 3262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @AT@ 3269 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenCreatedThenIsSerializable @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @AT@ 3274 @LENGTH@ 40
---INS VariableDeclarationStatement@@DefaultOAuth2User user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @AT@ 3321 @LENGTH@ 92
------INS SimpleType@@DefaultOAuth2User @TO@ VariableDeclarationStatement@@DefaultOAuth2User user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY); @AT@ 3321 @LENGTH@ 17
------INS VariableDeclarationFragment@@user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY) @TO@ VariableDeclarationStatement@@DefaultOAuth2User user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY); @AT@ 3339 @LENGTH@ 73
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY) @AT@ 3339 @LENGTH@ 4
---------INS ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @TO@ VariableDeclarationFragment@@user=new DefaultOAuth2User(AUTHORITIES,ATTRIBUTES,ATTRIBUTE_NAME_KEY) @AT@ 3346 @LENGTH@ 66
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @AT@ 3346 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2User @TO@ ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @AT@ 3350 @LENGTH@ 17
------------INS SimpleName@@AUTHORITIES @TO@ ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @AT@ 3368 @LENGTH@ 11
------------INS SimpleName@@ATTRIBUTES @TO@ ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @AT@ 3381 @LENGTH@ 10
------------INS SimpleName@@ATTRIBUTE_NAME_KEY @TO@ ClassInstanceCreation@@DefaultOAuth2User[AUTHORITIES, ATTRIBUTES, ATTRIBUTE_NAME_KEY] @AT@ 3393 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:SerializationUtils.serialize(user) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenCreatedThenIsSerializable,  @AT@ 3416 @LENGTH@ 35
------INS MethodInvocation@@SerializationUtils.serialize(user) @TO@ ExpressionStatement@@MethodInvocation:SerializationUtils.serialize(user) @AT@ 3416 @LENGTH@ 34
---------INS SimpleName@@Name:SerializationUtils @TO@ MethodInvocation@@SerializationUtils.serialize(user) @AT@ 3416 @LENGTH@ 18
---------INS SimpleName@@MethodName:serialize:[user] @TO@ MethodInvocation@@SerializationUtils.serialize(user) @AT@ 3435 @LENGTH@ 15
------------INS SimpleName@@user @TO@ SimpleName@@MethodName:serialize:[user] @AT@ 3445 @LENGTH@ 4


INS VariableDeclarationStatement@@Map<String,Object> input=null; @TO@ MethodDeclaration@@protected, DOC, MethodName:process, String templateName, ViewContext<T> ctx,  @AT@ 1780 @LENGTH@ 33
---INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> input=null; @AT@ 1780 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 1780 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 1784 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 1792 @LENGTH@ 6
---INS VariableDeclarationFragment@@input=null @TO@ VariableDeclarationStatement@@Map<String,Object> input=null; @AT@ 1800 @LENGTH@ 12
------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input=null @AT@ 1800 @LENGTH@ 5
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@input=null @AT@ 1808 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 3416 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 3326 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 3416 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 3416 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 3430 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 3437 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 3443 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 3443 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 3452 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 3465 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 3465 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 3486 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 3489 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.error(new CsrfException("CSRF Token has been associated to this client"))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.error(new CsrfException("Invalid CSRF Token"))).then() @TO@ MethodInvocation:this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.defer(() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.defer(() -> Mono.error(new CsrfException("Invalid CSRF Token")))).then() @AT@ 4128 @LENGTH@ 303
---UPD MethodInvocation@@this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.error(new CsrfException("CSRF Token has been associated to this client"))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.error(new CsrfException("Invalid CSRF Token"))).then() @TO@ this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.defer(() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.defer(() -> Mono.error(new CsrfException("Invalid CSRF Token")))).then() @AT@ 4135 @LENGTH@ 295
------UPD MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("Invalid CSRF Token"))] @TO@ Mono.defer(() -> Mono.error(new CsrfException("Invalid CSRF Token"))) @AT@ 4135 @LENGTH@ 284
------INS MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")))] @TO@ MethodInvocation@@this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.error(new CsrfException("CSRF Token has been associated to this client"))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.error(new CsrfException("Invalid CSRF Token"))).then() @AT@ 4135 @LENGTH@ 160
---------MOV MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")))] @AT@ 4135 @LENGTH@ 142
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @AT@ 4198 @LENGTH@ 4
------------INS SimpleName@@MethodName:defer:[() -> Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @AT@ 4203 @LENGTH@ 91
---------------INS LambdaExpression@@() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")) @TO@ SimpleName@@MethodName:defer:[() -> Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @AT@ 4209 @LENGTH@ 84
------------------MOV MethodInvocation@@Mono.error(new CsrfException("CSRF Token has been associated to this client")) @TO@ LambdaExpression@@() -> Mono.error(new CsrfException("CSRF Token has been associated to this client")) @AT@ 4198 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("CSRF Token has been associated to this client"))] @TO@ Mono.defer(() -> Mono.error(new CsrfException("CSRF Token has been associated to this client"))) @AT@ 4135 @LENGTH@ 142
------INS MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new CsrfException("Invalid CSRF Token")))] @TO@ MethodInvocation@@this.csrfTokenRepository.loadToken(exchange).switchIfEmpty(Mono.error(new CsrfException("CSRF Token has been associated to this client"))).filterWhen(expected -> containsValidCsrfToken(exchange,expected)).switchIfEmpty(Mono.error(new CsrfException("Invalid CSRF Token"))).then() @AT@ 4135 @LENGTH@ 320
---------MOV MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("Invalid CSRF Token"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.defer(() -> Mono.error(new CsrfException("Invalid CSRF Token")))] @AT@ 4135 @LENGTH@ 284
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("Invalid CSRF Token"))] @AT@ 4385 @LENGTH@ 4
------------INS SimpleName@@MethodName:defer:[() -> Mono.error(new CsrfException("Invalid CSRF Token"))] @TO@ MethodInvocation@@MethodName:switchIfEmpty:[Mono.error(new CsrfException("Invalid CSRF Token"))] @AT@ 4390 @LENGTH@ 64
---------------INS LambdaExpression@@() -> Mono.error(new CsrfException("Invalid CSRF Token")) @TO@ SimpleName@@MethodName:defer:[() -> Mono.error(new CsrfException("Invalid CSRF Token"))] @AT@ 4396 @LENGTH@ 57
------------------MOV MethodInvocation@@Mono.error(new CsrfException("Invalid CSRF Token")) @TO@ LambdaExpression@@() -> Mono.error(new CsrfException("Invalid CSRF Token")) @AT@ 4367 @LENGTH@ 51
------------------MOV MethodInvocation@@Mono.error(new CsrfException("Invalid CSRF Token")) @TO@ LambdaExpression@@() -> Mono.error(new CsrfException("Invalid CSRF Token")) @AT@ 4367 @LENGTH@ 51


UPD ExpressionStatement@@MethodInvocation:registry.counter(counted.metricName()) @TO@ MethodInvocation:registry.counter(metadata) @AT@ 4334 @LENGTH@ 39
---UPD MethodInvocation@@registry.counter(counted.metricName()) @TO@ registry.counter(metadata) @AT@ 4334 @LENGTH@ 38
------UPD SimpleName@@MethodName:counter:[counted.metricName()] @TO@ MethodName:counter:[metadata] @AT@ 4343 @LENGTH@ 29
---------DEL MethodInvocation@@counted.metricName() @AT@ 4351 @LENGTH@ 20
------------DEL SimpleName@@Name:counted @AT@ 4351 @LENGTH@ 7
------------DEL SimpleName@@MethodName:metricName:[] @AT@ 4359 @LENGTH@ 12
---------INS SimpleName@@metadata @TO@ SimpleName@@MethodName:counter:[counted.metricName()] @AT@ 4351 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:pathDeployments.entrySet().stream().filter(e -> path.startsWith(e.getKey())).findFirst().map(e -> e.getValue()).orElseThrow(() -> new IllegalStateException("KeycloakDeployment is null")) @TO@ MethodInvocation:pathDeployments.entrySet().stream().filter(e -> path.startsWith(e.getKey())).findFirst().map(e -> e.getValue()).orElseThrow(throwException(path)) @AT@ 1415 @LENGTH@ 207
---UPD MethodInvocation@@pathDeployments.entrySet().stream().filter(e -> path.startsWith(e.getKey())).findFirst().map(e -> e.getValue()).orElseThrow(() -> new IllegalStateException("KeycloakDeployment is null")) @TO@ pathDeployments.entrySet().stream().filter(e -> path.startsWith(e.getKey())).findFirst().map(e -> e.getValue()).orElseThrow(throwException(path)) @AT@ 1422 @LENGTH@ 199
------UPD SimpleName@@MethodName:orElseThrow:[() -> new IllegalStateException("KeycloakDeployment is null")] @TO@ MethodName:orElseThrow:[throwException(path)] @AT@ 1547 @LENGTH@ 74
---------DEL LambdaExpression@@() -> new IllegalStateException("KeycloakDeployment is null") @AT@ 1559 @LENGTH@ 61
------------DEL ClassInstanceCreation@@IllegalStateException["KeycloakDeployment is null"] @AT@ 1565 @LENGTH@ 55
---------------DEL New@@new @AT@ 1565 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 1569 @LENGTH@ 21
---------------DEL StringLiteral@@"KeycloakDeployment is null" @AT@ 1591 @LENGTH@ 28
---------INS MethodInvocation@@throwException(path) @TO@ SimpleName@@MethodName:orElseThrow:[() -> new IllegalStateException("KeycloakDeployment is null")] @AT@ 1595 @LENGTH@ 20
------------INS SimpleName@@MethodName:throwException:[path] @TO@ MethodInvocation@@throwException(path) @AT@ 1595 @LENGTH@ 20
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:throwException:[path] @AT@ 1610 @LENGTH@ 4


INS VariableDeclarationStatement@@String rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r",""); @TO@ MethodDeclaration@@public, void, MethodName:receivePlainEDIMessageTest, Exception,  @AT@ 9310 @LENGTH@ 68
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r",""); @AT@ 9310 @LENGTH@ 6
---INS VariableDeclarationFragment@@rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r","") @TO@ VariableDeclarationStatement@@String rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r",""); @AT@ 9317 @LENGTH@ 60
------INS SimpleName@@rcvdMessage @TO@ VariableDeclarationFragment@@rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r","") @AT@ 9317 @LENGTH@ 11
------INS MethodInvocation@@ediEntity.getEdiMessage().replaceAll("\r","") @TO@ VariableDeclarationFragment@@rcvdMessage=ediEntity.getEdiMessage().replaceAll("\r","") @AT@ 9331 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:getEdiMessage:[] @TO@ MethodInvocation@@ediEntity.getEdiMessage().replaceAll("\r","") @AT@ 9331 @LENGTH@ 25
---------INS SimpleName@@Name:ediEntity @TO@ MethodInvocation@@ediEntity.getEdiMessage().replaceAll("\r","") @AT@ 9331 @LENGTH@ 9
---------INS SimpleName@@MethodName:replaceAll:["\r", ""] @TO@ MethodInvocation@@ediEntity.getEdiMessage().replaceAll("\r","") @AT@ 9357 @LENGTH@ 20
------------INS StringLiteral@@"\r" @TO@ SimpleName@@MethodName:replaceAll:["\r", ""] @AT@ 9368 @LENGTH@ 4
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replaceAll:["\r", ""] @AT@ 9374 @LENGTH@ 2


UPD VariableDeclarationStatement@@MessageResolver resolver=builder.codes(null).build(); @TO@ MessageResolver resolver=builder.codes().build(); @AT@ 3359 @LENGTH@ 55
---UPD VariableDeclarationFragment@@resolver=builder.codes(null).build() @TO@ resolver=builder.codes().build() @AT@ 3375 @LENGTH@ 38
------UPD MethodInvocation@@builder.codes(null).build() @TO@ builder.codes().build() @AT@ 3386 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:codes:[null] @TO@ MethodName:codes:[] @AT@ 3386 @LENGTH@ 19
------------DEL NullLiteral@@null @AT@ 3400 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.metadataCache=new HashMap<>() @TO@ Assignment:this.metadataCache=new ConcurrentReferenceHashMap<>() @AT@ 2345 @LENGTH@ 37
---UPD Assignment@@this.metadataCache=new HashMap<>() @TO@ this.metadataCache=new ConcurrentReferenceHashMap<>() @AT@ 2345 @LENGTH@ 36
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ ConcurrentReferenceHashMap<>[] @AT@ 2366 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ ConcurrentReferenceHashMap<> @AT@ 2370 @LENGTH@ 9
------------UPD SimpleType@@HashMap @TO@ ConcurrentReferenceHashMap @AT@ 2370 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]HttpSessionOAuth2AuthorizationRequestRepositoryTests,  @AT@ 10889 @LENGTH@ 898
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 10889 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 10896 @LENGTH@ 4
---INS SimpleName@@MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 10901 @LENGTH@ 57
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 10965 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 10965 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 10988 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 10988 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 10998 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 10998 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 11002 @LENGTH@ 22
---INS VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11030 @LENGTH@ 65
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 11030 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=new MockHttpServletResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=new MockHttpServletResponse(); @AT@ 11054 @LENGTH@ 40
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 11054 @LENGTH@ 8
---------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ VariableDeclarationFragment@@response=new MockHttpServletResponse() @AT@ 11065 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 11065 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 11069 @LENGTH@ 23
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=createAuthorizationRequest().build(); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11099 @LENGTH@ 87
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=createAuthorizationRequest().build(); @AT@ 11099 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=createAuthorizationRequest().build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=createAuthorizationRequest().build(); @AT@ 11126 @LENGTH@ 59
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=createAuthorizationRequest().build() @AT@ 11126 @LENGTH@ 20
---------INS MethodInvocation@@createAuthorizationRequest().build() @TO@ VariableDeclarationFragment@@authorizationRequest=createAuthorizationRequest().build() @AT@ 11149 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:createAuthorizationRequest:[] @TO@ MethodInvocation@@createAuthorizationRequest().build() @AT@ 11149 @LENGTH@ 28
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@createAuthorizationRequest().build() @AT@ 11178 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest,request,response) @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11190 @LENGTH@ 107
------INS MethodInvocation@@this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest,request,response) @TO@ ExpressionStatement@@MethodInvocation:this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest,request,response) @AT@ 11190 @LENGTH@ 106
---------INS FieldAccess@@this.authorizationRequestRepository @TO@ MethodInvocation@@this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest,request,response) @AT@ 11190 @LENGTH@ 35
------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationRequestRepository @AT@ 11190 @LENGTH@ 4
------------INS SimpleName@@authorizationRequestRepository @TO@ FieldAccess@@this.authorizationRequestRepository @AT@ 11195 @LENGTH@ 30
---------INS SimpleName@@MethodName:saveAuthorizationRequest:[authorizationRequest, request, response] @TO@ MethodInvocation@@this.authorizationRequestRepository.saveAuthorizationRequest(authorizationRequest,request,response) @AT@ 11226 @LENGTH@ 70
------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:saveAuthorizationRequest:[authorizationRequest, request, response] @AT@ 11256 @LENGTH@ 20
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:saveAuthorizationRequest:[authorizationRequest, request, response] @AT@ 11278 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:saveAuthorizationRequest:[authorizationRequest, request, response] @AT@ 11287 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:request.addParameter(OAuth2ParameterNames.STATE,authorizationRequest.getState()) @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11301 @LENGTH@ 82
------INS MethodInvocation@@request.addParameter(OAuth2ParameterNames.STATE,authorizationRequest.getState()) @TO@ ExpressionStatement@@MethodInvocation:request.addParameter(OAuth2ParameterNames.STATE,authorizationRequest.getState()) @AT@ 11301 @LENGTH@ 81
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter(OAuth2ParameterNames.STATE,authorizationRequest.getState()) @AT@ 11301 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:[OAuth2ParameterNames.STATE, authorizationRequest.getState()] @TO@ MethodInvocation@@request.addParameter(OAuth2ParameterNames.STATE,authorizationRequest.getState()) @AT@ 11309 @LENGTH@ 73
------------INS QualifiedName@@OAuth2ParameterNames.STATE @TO@ SimpleName@@MethodName:addParameter:[OAuth2ParameterNames.STATE, authorizationRequest.getState()] @AT@ 11322 @LENGTH@ 26
---------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.STATE @AT@ 11322 @LENGTH@ 20
---------------INS SimpleName@@STATE @TO@ QualifiedName@@OAuth2ParameterNames.STATE @AT@ 11343 @LENGTH@ 5
------------INS MethodInvocation@@authorizationRequest.getState() @TO@ SimpleName@@MethodName:addParameter:[OAuth2ParameterNames.STATE, authorizationRequest.getState()] @AT@ 11350 @LENGTH@ 31
---------------INS SimpleName@@Name:authorizationRequest @TO@ MethodInvocation@@authorizationRequest.getState() @AT@ 11350 @LENGTH@ 20
---------------INS SimpleName@@MethodName:getState:[] @TO@ MethodInvocation@@authorizationRequest.getState() @AT@ 11371 @LENGTH@ 10
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request); @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11386 @LENGTH@ 133
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request); @AT@ 11386 @LENGTH@ 26
------INS VariableDeclarationFragment@@removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request); @AT@ 11413 @LENGTH@ 105
---------INS SimpleName@@removedAuthorizationRequest @TO@ VariableDeclarationFragment@@removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request) @AT@ 11413 @LENGTH@ 27
---------INS MethodInvocation@@this.authorizationRequestRepository.removeAuthorizationRequest(request) @TO@ VariableDeclarationFragment@@removedAuthorizationRequest=this.authorizationRequestRepository.removeAuthorizationRequest(request) @AT@ 11447 @LENGTH@ 71
------------INS FieldAccess@@this.authorizationRequestRepository @TO@ MethodInvocation@@this.authorizationRequestRepository.removeAuthorizationRequest(request) @AT@ 11447 @LENGTH@ 35
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationRequestRepository @AT@ 11447 @LENGTH@ 4
---------------INS SimpleName@@authorizationRequestRepository @TO@ FieldAccess@@this.authorizationRequestRepository @AT@ 11452 @LENGTH@ 30
------------INS SimpleName@@MethodName:removeAuthorizationRequest:[request] @TO@ MethodInvocation@@this.authorizationRequestRepository.removeAuthorizationRequest(request) @AT@ 11483 @LENGTH@ 35
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[request] @AT@ 11510 @LENGTH@ 7
---INS VariableDeclarationStatement@@String sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST"; @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11523 @LENGTH@ 125
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST"; @AT@ 11523 @LENGTH@ 6
------INS VariableDeclarationFragment@@sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @TO@ VariableDeclarationStatement@@String sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST"; @AT@ 11530 @LENGTH@ 117
---------INS SimpleName@@sessionAttributeName @TO@ VariableDeclarationFragment@@sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @AT@ 11530 @LENGTH@ 20
---------INS InfixExpression@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @TO@ VariableDeclarationFragment@@sessionAttributeName=HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @AT@ 11553 @LENGTH@ 94
------------INS MethodInvocation@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() @TO@ InfixExpression@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @AT@ 11553 @LENGTH@ 63
---------------INS TypeLiteral@@HttpSessionOAuth2AuthorizationRequestRepository.class @TO@ MethodInvocation@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() @AT@ 11553 @LENGTH@ 53
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() @AT@ 11607 @LENGTH@ 9
------------INS Operator@@+ @TO@ InfixExpression@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @AT@ 11616 @LENGTH@ 1
------------INS StringLiteral@@".AUTHORIZATION_REQUEST" @TO@ InfixExpression@@HttpSessionOAuth2AuthorizationRequestRepository.class.getName() + ".AUTHORIZATION_REQUEST" @AT@ 11623 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThat(removedAuthorizationRequest).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11652 @LENGTH@ 52
------INS MethodInvocation@@assertThat(removedAuthorizationRequest).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(removedAuthorizationRequest).isNotNull() @AT@ 11652 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:assertThat:[removedAuthorizationRequest] @TO@ MethodInvocation@@assertThat(removedAuthorizationRequest).isNotNull() @AT@ 11652 @LENGTH@ 39
------------INS SimpleName@@removedAuthorizationRequest @TO@ MethodInvocation@@MethodName:assertThat:[removedAuthorizationRequest] @AT@ 11663 @LENGTH@ 27
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(removedAuthorizationRequest).isNotNull() @AT@ 11692 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute(sessionAttributeName)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:removeAuthorizationRequestWhenSavedThenRemovedFromSession,  @AT@ 11707 @LENGTH@ 77
------INS MethodInvocation@@assertThat(request.getSession().getAttribute(sessionAttributeName)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().getAttribute(sessionAttributeName)).isNull() @AT@ 11707 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute(sessionAttributeName)] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(sessionAttributeName)).isNull() @AT@ 11707 @LENGTH@ 67
------------INS MethodInvocation@@request.getSession().getAttribute(sessionAttributeName) @TO@ MethodInvocation@@MethodName:assertThat:[request.getSession().getAttribute(sessionAttributeName)] @AT@ 11718 @LENGTH@ 55
---------------INS MethodInvocation@@MethodName:getSession:[] @TO@ MethodInvocation@@request.getSession().getAttribute(sessionAttributeName) @AT@ 11718 @LENGTH@ 20
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession().getAttribute(sessionAttributeName) @AT@ 11718 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAttribute:[sessionAttributeName] @TO@ MethodInvocation@@request.getSession().getAttribute(sessionAttributeName) @AT@ 11739 @LENGTH@ 34
------------------INS SimpleName@@sessionAttributeName @TO@ SimpleName@@MethodName:getAttribute:[sessionAttributeName] @AT@ 11752 @LENGTH@ 20
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(sessionAttributeName)).isNull() @AT@ 11775 @LENGTH@ 8


INS FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @TO@ TypeDeclaration@@[public]OAuth2LoginAuthenticationFilter, AbstractAuthenticationProcessingFilter @AT@ 5098 @LENGTH@ 103
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @AT@ 5098 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @AT@ 5106 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @AT@ 5113 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @AT@ 5119 @LENGTH@ 6
---INS VariableDeclarationFragment@@CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found" @TO@ FieldDeclaration@@private, static, final, String, [CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found"] @AT@ 5126 @LENGTH@ 74
------INS SimpleName@@CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE @TO@ VariableDeclarationFragment@@CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found" @AT@ 5126 @LENGTH@ 40
------INS StringLiteral@@"client_registration_not_found" @TO@ VariableDeclarationFragment@@CLIENT_REGISTRATION_NOT_FOUND_ERROR_CODE="client_registration_not_found" @AT@ 5169 @LENGTH@ 31


DEL MethodDeclaration@@private, Consumer<HttpHeaders>, MethodName:bearerToken, String token,  @AT@ 3091 @LENGTH@ 139
---DEL Modifier@@private @AT@ 3091 @LENGTH@ 7
---DEL ParameterizedType@@Consumer<HttpHeaders> @AT@ 3099 @LENGTH@ 21
------DEL SimpleType@@Consumer @AT@ 3099 @LENGTH@ 8
------DEL SimpleType@@HttpHeaders @AT@ 3108 @LENGTH@ 11
---DEL SimpleName@@MethodName:bearerToken @AT@ 3121 @LENGTH@ 11
---DEL SingleVariableDeclaration@@String token @AT@ 3133 @LENGTH@ 12
------DEL SimpleType@@String @AT@ 3133 @LENGTH@ 6
------DEL SimpleName@@token @AT@ 3140 @LENGTH@ 5
---DEL ReturnStatement@@LambdaExpression:headers -> headers.set(HttpHeaders.AUTHORIZATION,"Bearer " + token) @AT@ 3151 @LENGTH@ 76
------DEL LambdaExpression@@headers -> headers.set(HttpHeaders.AUTHORIZATION,"Bearer " + token) @AT@ 3158 @LENGTH@ 68
---------DEL VariableDeclarationFragment@@headers @AT@ 3158 @LENGTH@ 7
------------DEL SimpleName@@headers @AT@ 3158 @LENGTH@ 7
---------DEL MethodInvocation@@headers.set(HttpHeaders.AUTHORIZATION,"Bearer " + token) @AT@ 3169 @LENGTH@ 57
------------DEL SimpleName@@Name:headers @AT@ 3169 @LENGTH@ 7
------------DEL SimpleName@@MethodName:set:[HttpHeaders.AUTHORIZATION, "Bearer " + token] @AT@ 3177 @LENGTH@ 49
---------------DEL QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 3181 @LENGTH@ 25
------------------DEL SimpleName@@HttpHeaders @AT@ 3181 @LENGTH@ 11
------------------DEL SimpleName@@AUTHORIZATION @AT@ 3193 @LENGTH@ 13
---------------DEL InfixExpression@@"Bearer " + token @AT@ 3208 @LENGTH@ 17
------------------DEL StringLiteral@@"Bearer " @AT@ 3208 @LENGTH@ 9
------------------DEL Operator@@+ @AT@ 3217 @LENGTH@ 1
------------------DEL SimpleName@@token @AT@ 3220 @LENGTH@ 5


INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Existing access token=" + accessToken);} @TO@ MethodDeclaration@@public, AuthorizationRequest, MethodName:checkForPreApproval, AuthorizationRequest authorizationRequest, Authentication userAuthentication,  @AT@ 5072 @LENGTH@ 91
---INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Existing access token=" + accessToken);} @AT@ 5076 @LENGTH@ 23
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 5076 @LENGTH@ 6
------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 5083 @LENGTH@ 16
---INS Block@@ThenBody:{  logger.debug("Existing access token=" + accessToken);} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Existing access token=" + accessToken);} @AT@ 5101 @LENGTH@ 62
------MOV ExpressionStatement@@MethodInvocation:logger.debug("Existing access token=" + accessToken) @TO@ Block@@ThenBody:{  logger.debug("Existing access token=" + accessToken);} @AT@ 5072 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @TO@ MethodInvocation:MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 2712 @LENGTH@ 79
---MOV MethodInvocation@@MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @TO@ ExpressionStatement@@MethodInvocation:MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2622 @LENGTH@ 84
---DEL MethodInvocation@@MetastoreConf.setVar(conf,ConfVars.THRIFT_URIS,"thrift://localhost:" + port) @AT@ 2712 @LENGTH@ 78
------DEL SimpleName@@Name:MetastoreConf @AT@ 2712 @LENGTH@ 13
------DEL SimpleName@@MethodName:setVar:[conf, ConfVars.THRIFT_URIS, "thrift://localhost:" + port] @AT@ 2726 @LENGTH@ 64
---------DEL SimpleName@@conf @AT@ 2733 @LENGTH@ 4
---------DEL QualifiedName@@ConfVars.THRIFT_URIS @AT@ 2739 @LENGTH@ 20
------------DEL SimpleName@@ConfVars @AT@ 2739 @LENGTH@ 8
------------DEL SimpleName@@THRIFT_URIS @AT@ 2748 @LENGTH@ 11
---------DEL InfixExpression@@"thrift://localhost:" + port @AT@ 2761 @LENGTH@ 28
------------DEL StringLiteral@@"thrift://localhost:" @AT@ 2761 @LENGTH@ 21
------------DEL Operator@@+ @AT@ 2782 @LENGTH@ 1
------------DEL SimpleName@@port @AT@ 2785 @LENGTH@ 4


MOV ExpressionStatement@@MethodInvocation:terminate() @TO@ MethodDeclaration@@private, void, MethodName:doConnect, Callable<CommandContext> callable,  @AT@ 10892 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:multiGet,  @AT@ 6214 @LENGTH@ 218
---INS MethodInvocation@@StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @AT@ 6214 @LENGTH@ 217
------INS MethodInvocation@@MethodName:consumeNextWith:[actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
] @TO@ MethodInvocation@@StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @AT@ 6214 @LENGTH@ 192
---------INS LambdaExpression@@actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
 @TO@ MethodInvocation@@MethodName:consumeNextWith:[actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
] @AT@ 6323 @LENGTH@ 82
------------INS VariableDeclarationFragment@@actual @TO@ LambdaExpression@@actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
 @AT@ 6323 @LENGTH@ 6
---------------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual @AT@ 6323 @LENGTH@ 6
------------INS ExpressionStatement@@MethodInvocation:assertThat(actual).hasSize(2).containsSequence(null,null) @TO@ LambdaExpression@@actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
 @AT@ 6340 @LENGTH@ 59
---------------INS MethodInvocation@@assertThat(actual).hasSize(2).containsSequence(null,null) @TO@ ExpressionStatement@@MethodInvocation:assertThat(actual).hasSize(2).containsSequence(null,null) @AT@ 6340 @LENGTH@ 58
------------------INS MethodInvocation@@MethodName:hasSize:[2] @TO@ MethodInvocation@@assertThat(actual).hasSize(2).containsSequence(null,null) @AT@ 6340 @LENGTH@ 29
---------------------INS NumberLiteral@@2 @TO@ MethodInvocation@@MethodName:hasSize:[2] @AT@ 6367 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:assertThat:[actual] @TO@ MethodInvocation@@assertThat(actual).hasSize(2).containsSequence(null,null) @AT@ 6340 @LENGTH@ 18
---------------------INS SimpleName@@actual @TO@ MethodInvocation@@MethodName:assertThat:[actual] @AT@ 6351 @LENGTH@ 6
------------------INS SimpleName@@MethodName:containsSequence:[null, null] @TO@ MethodInvocation@@assertThat(actual).hasSize(2).containsSequence(null,null) @AT@ 6370 @LENGTH@ 28
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:containsSequence:[null, null] @AT@ 6387 @LENGTH@ 4
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:containsSequence:[null, null] @AT@ 6393 @LENGTH@ 4
------INS MethodInvocation@@MethodName:create:[hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))] @TO@ MethodInvocation@@StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @AT@ 6214 @LENGTH@ 84
---------INS MethodInvocation@@hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2)) @TO@ MethodInvocation@@MethodName:create:[hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))] @AT@ 6234 @LENGTH@ 63
------------INS SimpleName@@Name:hashOperations @TO@ MethodInvocation@@hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2)) @AT@ 6234 @LENGTH@ 14
------------INS SimpleName@@MethodName:multiGet:[key, Arrays.asList(hashkey1,hashkey2)] @TO@ MethodInvocation@@hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2)) @AT@ 6249 @LENGTH@ 48
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:multiGet:[key, Arrays.asList(hashkey1,hashkey2)] @AT@ 6258 @LENGTH@ 3
---------------INS MethodInvocation@@Arrays.asList(hashkey1,hashkey2) @TO@ SimpleName@@MethodName:multiGet:[key, Arrays.asList(hashkey1,hashkey2)] @AT@ 6263 @LENGTH@ 33
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(hashkey1,hashkey2) @AT@ 6263 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[hashkey1, hashkey2] @TO@ MethodInvocation@@Arrays.asList(hashkey1,hashkey2) @AT@ 6270 @LENGTH@ 26
---------------------INS SimpleName@@hashkey1 @TO@ SimpleName@@MethodName:asList:[hashkey1, hashkey2] @AT@ 6277 @LENGTH@ 8
---------------------INS SimpleName@@hashkey2 @TO@ SimpleName@@MethodName:asList:[hashkey1, hashkey2] @AT@ 6287 @LENGTH@ 8
------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @AT@ 6214 @LENGTH@ 12
------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(hashOperations.multiGet(key,Arrays.asList(hashkey1,hashkey2))).consumeNextWith(actual -> {
  assertThat(actual).hasSize(2).containsSequence(null,null);
}
).verifyComplete() @AT@ 6415 @LENGTH@ 16


UPD MethodDeclaration@@public, static, PartitionSpecProxy, MethodName:get, PartitionSpec partSpec,  @TO@ public, static, PartitionSpecProxy, MethodName:get, PartitionSpec partSpec, MetaException,  @AT@ 3182 @LENGTH@ 462
---INS SimpleType@@MetaException @TO@ MethodDeclaration@@public, static, PartitionSpecProxy, MethodName:get, PartitionSpec partSpec,  @AT@ 3279 @LENGTH@ 13


DEL VariableDeclarationStatement@@int port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf); @AT@ 1927 @LENGTH@ 96
---DEL PrimitiveType@@int @AT@ 1927 @LENGTH@ 3
---DEL VariableDeclarationFragment@@port=MetaStoreTestUtils.startMetaStoreWithRetry(HadoopThriftAuthBridge.getBridge(),conf) @AT@ 1931 @LENGTH@ 91
------DEL SimpleName@@port @AT@ 1931 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]ServerGroupsCompleter, [OptionCompleter<CLICompleterInvocation>] @TO@ [public, static]ServerGroupsCompleter, AbstractCommaCompleter @AT@ 2114 @LENGTH@ 995
---INS SimpleType@@AbstractCommaCompleter @TO@ TypeDeclaration@@[public, static]ServerGroupsCompleter, [OptionCompleter<CLICompleterInvocation>] @AT@ 2064 @LENGTH@ 22
---DEL ParameterizedType@@OptionCompleter<CLICompleterInvocation> @AT@ 2179 @LENGTH@ 39
------DEL SimpleType@@OptionCompleter @AT@ 2179 @LENGTH@ 15
------DEL SimpleType@@CLICompleterInvocation @AT@ 2195 @LENGTH@ 22


INS MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @TO@ TypeDeclaration@@[public]AS2Component, AbstractApiComponent<AS2ApiName,AS2Configuration,AS2ApiCollection> @AT@ 2513 @LENGTH@ 271
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2513 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2523 @LENGTH@ 4
---INS SimpleName@@MethodName:doStart @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2528 @LENGTH@ 7
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2545 @LENGTH@ 9
---INS ExpressionStatement@@SuperMethodInvocation:super.doStart() @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2565 @LENGTH@ 16
------INS SuperMethodInvocation@@super.doStart() @TO@ ExpressionStatement@@SuperMethodInvocation:super.doStart() @AT@ 2565 @LENGTH@ 15
---------INS SimpleName@@MethodName:doStart:[] @TO@ SuperMethodInvocation@@super.doStart() @AT@ 2571 @LENGTH@ 7
---INS IfStatement@@if (Security.getProvider("BC") == null) {  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @TO@ MethodDeclaration@@protected, void, MethodName:doStart, Exception,  @AT@ 2590 @LENGTH@ 188
------INS InfixExpression@@Security.getProvider("BC") == null @TO@ IfStatement@@if (Security.getProvider("BC") == null) {  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @AT@ 2594 @LENGTH@ 34
---------INS MethodInvocation@@Security.getProvider("BC") @TO@ InfixExpression@@Security.getProvider("BC") == null @AT@ 2594 @LENGTH@ 26
------------INS SimpleName@@Name:Security @TO@ MethodInvocation@@Security.getProvider("BC") @AT@ 2594 @LENGTH@ 8
------------INS SimpleName@@MethodName:getProvider:["BC"] @TO@ MethodInvocation@@Security.getProvider("BC") @AT@ 2603 @LENGTH@ 17
---------------INS StringLiteral@@"BC" @TO@ SimpleName@@MethodName:getProvider:["BC"] @AT@ 2615 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@Security.getProvider("BC") == null @AT@ 2620 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@Security.getProvider("BC") == null @AT@ 2624 @LENGTH@ 4
------INS Block@@ThenBody:{  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @TO@ IfStatement@@if (Security.getProvider("BC") == null) {  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @AT@ 2630 @LENGTH@ 148
---------INS ExpressionStatement@@MethodInvocation:LOG.debug("Adding BouncyCastleProvider as security provider") @TO@ Block@@ThenBody:{  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @AT@ 2644 @LENGTH@ 62
------------INS MethodInvocation@@LOG.debug("Adding BouncyCastleProvider as security provider") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Adding BouncyCastleProvider as security provider") @AT@ 2644 @LENGTH@ 61
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Adding BouncyCastleProvider as security provider") @AT@ 2644 @LENGTH@ 3
---------------INS SimpleName@@MethodName:debug:["Adding BouncyCastleProvider as security provider"] @TO@ MethodInvocation@@LOG.debug("Adding BouncyCastleProvider as security provider") @AT@ 2648 @LENGTH@ 57
------------------INS StringLiteral@@"Adding BouncyCastleProvider as security provider" @TO@ SimpleName@@MethodName:debug:["Adding BouncyCastleProvider as security provider"] @AT@ 2654 @LENGTH@ 50
---------INS ExpressionStatement@@MethodInvocation:Security.addProvider(new BouncyCastleProvider()) @TO@ Block@@ThenBody:{  LOG.debug("Adding BouncyCastleProvider as security provider");  Security.addProvider(new BouncyCastleProvider());} @AT@ 2719 @LENGTH@ 49
------------INS MethodInvocation@@Security.addProvider(new BouncyCastleProvider()) @TO@ ExpressionStatement@@MethodInvocation:Security.addProvider(new BouncyCastleProvider()) @AT@ 2719 @LENGTH@ 48
---------------INS SimpleName@@Name:Security @TO@ MethodInvocation@@Security.addProvider(new BouncyCastleProvider()) @AT@ 2719 @LENGTH@ 8
---------------INS SimpleName@@MethodName:addProvider:[new BouncyCastleProvider()] @TO@ MethodInvocation@@Security.addProvider(new BouncyCastleProvider()) @AT@ 2728 @LENGTH@ 39
------------------INS ClassInstanceCreation@@BouncyCastleProvider[] @TO@ SimpleName@@MethodName:addProvider:[new BouncyCastleProvider()] @AT@ 2740 @LENGTH@ 26
---------------------INS New@@new @TO@ ClassInstanceCreation@@BouncyCastleProvider[] @AT@ 2740 @LENGTH@ 3
---------------------INS SimpleType@@BouncyCastleProvider @TO@ ClassInstanceCreation@@BouncyCastleProvider[] @AT@ 2744 @LENGTH@ 20


UPD VariableDeclarationStatement@@FlowExecutionListener listener1=new FlowExecutionListenerAdapter(){
  public void sessionStarting(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> input){
    starting=true;
  }
}
; @TO@ FlowExecutionListener listener1=new FlowExecutionListener(){
  public void sessionStarting(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> input){
    starting=true;
  }
}
; @AT@ 3617 @LENGTH@ 213
---UPD VariableDeclarationFragment@@listener1=new FlowExecutionListenerAdapter(){
  public void sessionStarting(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> input){
    starting=true;
  }
}
 @TO@ listener1=new FlowExecutionListener(){
  public void sessionStarting(  RequestContext context,  FlowSession session,  MutableAttributeMap<?> input){
    starting=true;
  }
}
 @AT@ 3639 @LENGTH@ 190
------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 3651 @LENGTH@ 178
---------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 3655 @LENGTH@ 28


UPD VariableDeclarationStatement@@String pomXmlContent=new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet()).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()); @TO@ String pomXmlContent=new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet(swarmVersion)).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()); @AT@ 3499 @LENGTH@ 424
---UPD VariableDeclarationFragment@@pomXmlContent=new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet()).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()) @TO@ pomXmlContent=new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet(swarmVersion)).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()) @AT@ 3506 @LENGTH@ 416
------UPD MethodInvocation@@new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet()).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()) @TO@ new String(Files.readAllBytes(pomXml),StandardCharsets.UTF_8).replace("<!--PLACEHOLDER:swarm-version-->",swarmVersion).replace("<!--PLACEHOLDER:packaging-->",packaging.packagingType()).replace("<!--PLACEHOLDER:dependencies-->",dependenciesSnippet(swarmVersion)).replace("<!--PLACEHOLDER:configuration-->",swarmPluginConfigurationSnippet()) @AT@ 3522 @LENGTH@ 400
---------UPD MethodInvocation@@MethodName:replace:["<!--PLACEHOLDER:dependencies-->", dependenciesSnippet()] @TO@ MethodName:replace:["<!--PLACEHOLDER:dependencies-->", dependenciesSnippet(swarmVersion)] @AT@ 3522 @LENGTH@ 304
------------UPD MethodInvocation@@MethodName:dependenciesSnippet:[] @TO@ dependenciesSnippet(swarmVersion) @AT@ 3804 @LENGTH@ 21
---------------INS SimpleName@@MethodName:dependenciesSnippet:[swarmVersion] @TO@ MethodInvocation@@MethodName:dependenciesSnippet:[] @AT@ 3804 @LENGTH@ 33
------------------INS SimpleName@@swarmVersion @TO@ SimpleName@@MethodName:dependenciesSnippet:[swarmVersion] @AT@ 3824 @LENGTH@ 12


UPD Block@@ThenBody:{  ParameterizedTypeReference<Map<String,Object>> typeReference=new ParameterizedTypeReference<Map<String,Object>>(){  };  Map<String,Object> userAttributes=this.userInfoResponseClient.getUserInfoResponse(userRequest,typeReference);  userInfo=new OidcUserInfo(userAttributes);  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @TO@ ThenBody:{  OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest);  userInfo=new OidcUserInfo(oauth2User.getAttributes());  if (!userInfo.getSubject().equals(userRequest.getIdToken().getSubject())) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @AT@ 2574 @LENGTH@ 1033
---DEL VariableDeclarationStatement@@ParameterizedTypeReference<Map<String,Object>> typeReference=new ParameterizedTypeReference<Map<String,Object>>(){
}
; @AT@ 2579 @LENGTH@ 125
------DEL ParameterizedType@@ParameterizedTypeReference<Map<String,Object>> @AT@ 2579 @LENGTH@ 47
---------DEL SimpleType@@ParameterizedTypeReference @AT@ 2579 @LENGTH@ 26
---------DEL ParameterizedType@@Map<String,Object> @AT@ 2606 @LENGTH@ 19
------------DEL SimpleType@@Map @AT@ 2606 @LENGTH@ 3
------------DEL SimpleType@@String @AT@ 2610 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 2618 @LENGTH@ 6
------DEL VariableDeclarationFragment@@typeReference=new ParameterizedTypeReference<Map<String,Object>>(){
}
 @AT@ 2627 @LENGTH@ 76
---------DEL SimpleName@@typeReference @AT@ 2627 @LENGTH@ 13
---------DEL ClassInstanceCreation@@ParameterizedTypeReference<Map<String,Object>>[] @AT@ 2647 @LENGTH@ 56
------------DEL New@@new @AT@ 2647 @LENGTH@ 3
------------DEL ParameterizedType@@ParameterizedTypeReference<Map<String,Object>> @AT@ 2651 @LENGTH@ 47
---------------DEL SimpleType@@ParameterizedTypeReference @AT@ 2651 @LENGTH@ 26
---------------DEL ParameterizedType@@Map<String,Object> @AT@ 2678 @LENGTH@ 19
------------------DEL SimpleType@@Map @AT@ 2678 @LENGTH@ 3
------------------DEL SimpleType@@String @AT@ 2682 @LENGTH@ 6
------------------DEL SimpleType@@Object @AT@ 2690 @LENGTH@ 6
------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 2701 @LENGTH@ 2
---UPD VariableDeclarationStatement@@Map<String,Object> userAttributes=this.userInfoResponseClient.getUserInfoResponse(userRequest,typeReference); @TO@ OAuth2User oauth2User=this.defaultUserService.loadUser(userRequest); @AT@ 2708 @LENGTH@ 113
------DEL ParameterizedType@@Map<String,Object> @AT@ 2708 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 2708 @LENGTH@ 3
---------DEL SimpleType@@String @AT@ 2712 @LENGTH@ 6
---------DEL SimpleType@@Object @AT@ 2720 @LENGTH@ 6
------UPD VariableDeclarationFragment@@userAttributes=this.userInfoResponseClient.getUserInfoResponse(userRequest,typeReference) @TO@ oauth2User=this.defaultUserService.loadUser(userRequest) @AT@ 2728 @LENGTH@ 92
---------UPD SimpleName@@userAttributes @TO@ oauth2User @AT@ 2728 @LENGTH@ 14
---------UPD MethodInvocation@@this.userInfoResponseClient.getUserInfoResponse(userRequest,typeReference) @TO@ this.defaultUserService.loadUser(userRequest) @AT@ 2745 @LENGTH@ 75
------------UPD FieldAccess@@this.userInfoResponseClient @TO@ this.defaultUserService @AT@ 2745 @LENGTH@ 27
---------------UPD SimpleName@@userInfoResponseClient @TO@ defaultUserService @AT@ 2750 @LENGTH@ 22
------------UPD SimpleName@@MethodName:getUserInfoResponse:[userRequest, typeReference] @TO@ MethodName:loadUser:[userRequest] @AT@ 2773 @LENGTH@ 47
---------------DEL SimpleName@@typeReference @AT@ 2806 @LENGTH@ 13
------INS SimpleType@@OAuth2User @TO@ VariableDeclarationStatement@@Map<String,Object> userAttributes=this.userInfoResponseClient.getUserInfoResponse(userRequest,typeReference); @AT@ 2743 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:userInfo=new OidcUserInfo(userAttributes) @TO@ Assignment:userInfo=new OidcUserInfo(oauth2User.getAttributes()) @AT@ 2825 @LENGTH@ 44
------UPD Assignment@@userInfo=new OidcUserInfo(userAttributes) @TO@ userInfo=new OidcUserInfo(oauth2User.getAttributes()) @AT@ 2825 @LENGTH@ 43
---------UPD ClassInstanceCreation@@OidcUserInfo[userAttributes] @TO@ OidcUserInfo[oauth2User.getAttributes()] @AT@ 2836 @LENGTH@ 32
------------INS MethodInvocation@@oauth2User.getAttributes() @TO@ ClassInstanceCreation@@OidcUserInfo[userAttributes] @AT@ 2845 @LENGTH@ 26
---------------INS SimpleName@@Name:oauth2User @TO@ MethodInvocation@@oauth2User.getAttributes() @AT@ 2845 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@oauth2User.getAttributes() @AT@ 2856 @LENGTH@ 15
------------DEL SimpleName@@userAttributes @AT@ 2853 @LENGTH@ 14


UPD VariableDeclarationStatement@@URL url=new URL("http",managementClient.getMgmtAddress(),MGMT_PORT,"/console/App.html"); @TO@ URL url=new URL("http",managementClient.getMgmtAddress(),MGMT_PORT,"/console/index.html"); @AT@ 2708 @LENGTH@ 93
---UPD VariableDeclarationFragment@@url=new URL("http",managementClient.getMgmtAddress(),MGMT_PORT,"/console/App.html") @TO@ url=new URL("http",managementClient.getMgmtAddress(),MGMT_PORT,"/console/index.html") @AT@ 2712 @LENGTH@ 88
------UPD ClassInstanceCreation@@URL["http", managementClient.getMgmtAddress(), MGMT_PORT, "/console/App.html"] @TO@ URL["http", managementClient.getMgmtAddress(), MGMT_PORT, "/console/index.html"] @AT@ 2718 @LENGTH@ 82
---------UPD StringLiteral@@"/console/App.html" @TO@ "/console/index.html" @AT@ 2780 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @TO@ MethodDeclaration@@private, ClientHttpResponse, MethodName:getUserInfoResponse, ClientRegistration clientRegistration, OAuth2AccessToken oauth2AccessToken, OAuth2AuthenticationException,  @AT@ 4558 @LENGTH@ 56
---INS MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @TO@ ExpressionStatement@@MethodInvocation:httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4558 @LENGTH@ 55
------INS SimpleName@@Name:httpRequest @TO@ MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4558 @LENGTH@ 11
------INS SimpleName@@MethodName:setAccept:[MediaType.APPLICATION_JSON_VALUE] @TO@ MethodInvocation@@httpRequest.setAccept(MediaType.APPLICATION_JSON_VALUE) @AT@ 4570 @LENGTH@ 43
---------INS QualifiedName@@MediaType.APPLICATION_JSON_VALUE @TO@ SimpleName@@MethodName:setAccept:[MediaType.APPLICATION_JSON_VALUE] @AT@ 4580 @LENGTH@ 32
------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 4580 @LENGTH@ 9
------------INS SimpleName@@APPLICATION_JSON_VALUE @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 4590 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2AuthorizationRequestRedirectWebFilterTests,  @AT@ 5626 @LENGTH@ 480
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5626 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5633 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenExceptionThenRedirected @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5638 @LENGTH@ 33
---INS VariableDeclarationStatement@@FilteringWebHandler webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5678 @LENGTH@ 177
------INS SimpleType@@FilteringWebHandler @TO@ VariableDeclarationStatement@@FilteringWebHandler webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)); @AT@ 5678 @LENGTH@ 19
------INS VariableDeclarationFragment@@webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)) @TO@ VariableDeclarationStatement@@FilteringWebHandler webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)); @AT@ 5698 @LENGTH@ 156
---------INS SimpleName@@webHandler @TO@ VariableDeclarationFragment@@webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)) @AT@ 5698 @LENGTH@ 10
---------INS ClassInstanceCreation@@FilteringWebHandler[e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())), Arrays.asList(this.filter)] @TO@ VariableDeclarationFragment@@webHandler=new FilteringWebHandler(e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())),Arrays.asList(this.filter)) @AT@ 5711 @LENGTH@ 143
------------INS New@@new @TO@ ClassInstanceCreation@@FilteringWebHandler[e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())), Arrays.asList(this.filter)] @AT@ 5711 @LENGTH@ 3
------------INS SimpleType@@FilteringWebHandler @TO@ ClassInstanceCreation@@FilteringWebHandler[e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())), Arrays.asList(this.filter)] @AT@ 5715 @LENGTH@ 19
------------INS LambdaExpression@@e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @TO@ ClassInstanceCreation@@FilteringWebHandler[e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())), Arrays.asList(this.filter)] @AT@ 5735 @LENGTH@ 90
---------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @AT@ 5735 @LENGTH@ 1
------------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 5735 @LENGTH@ 1
---------------INS MethodInvocation@@Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @TO@ LambdaExpression@@e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @AT@ 5740 @LENGTH@ 85
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @AT@ 5740 @LENGTH@ 4
------------------INS SimpleName@@MethodName:error:[new ClientAuthorizationRequiredException(this.github.getRegistrationId())] @TO@ MethodInvocation@@Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())) @AT@ 5745 @LENGTH@ 80
---------------------INS ClassInstanceCreation@@ClientAuthorizationRequiredException[this.github.getRegistrationId()] @TO@ SimpleName@@MethodName:error:[new ClientAuthorizationRequiredException(this.github.getRegistrationId())] @AT@ 5751 @LENGTH@ 73
------------------------INS New@@new @TO@ ClassInstanceCreation@@ClientAuthorizationRequiredException[this.github.getRegistrationId()] @AT@ 5751 @LENGTH@ 3
------------------------INS SimpleType@@ClientAuthorizationRequiredException @TO@ ClassInstanceCreation@@ClientAuthorizationRequiredException[this.github.getRegistrationId()] @AT@ 5755 @LENGTH@ 36
------------------------INS MethodInvocation@@this.github.getRegistrationId() @TO@ ClassInstanceCreation@@ClientAuthorizationRequiredException[this.github.getRegistrationId()] @AT@ 5792 @LENGTH@ 31
---------------------------INS FieldAccess@@this.github @TO@ MethodInvocation@@this.github.getRegistrationId() @AT@ 5792 @LENGTH@ 11
------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.github @AT@ 5792 @LENGTH@ 4
------------------------------INS SimpleName@@github @TO@ FieldAccess@@this.github @AT@ 5797 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@this.github.getRegistrationId() @AT@ 5804 @LENGTH@ 19
------------INS MethodInvocation@@Arrays.asList(this.filter) @TO@ ClassInstanceCreation@@FilteringWebHandler[e -> Mono.error(new ClientAuthorizationRequiredException(this.github.getRegistrationId())), Arrays.asList(this.filter)] @AT@ 5827 @LENGTH@ 26
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(this.filter) @AT@ 5827 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[this.filter] @TO@ MethodInvocation@@Arrays.asList(this.filter) @AT@ 5834 @LENGTH@ 19
------------------INS FieldAccess@@this.filter @TO@ SimpleName@@MethodName:asList:[this.filter] @AT@ 5841 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 5841 @LENGTH@ 4
---------------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 5846 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.client=WebTestClient.bindToWebHandler(webHandler).build() @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5858 @LENGTH@ 65
------INS Assignment@@this.client=WebTestClient.bindToWebHandler(webHandler).build() @TO@ ExpressionStatement@@Assignment:this.client=WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5858 @LENGTH@ 64
---------INS FieldAccess@@this.client @TO@ Assignment@@this.client=WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5858 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 5858 @LENGTH@ 4
------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 5863 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.client=WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5869 @LENGTH@ 1
---------INS MethodInvocation@@WebTestClient.bindToWebHandler(webHandler).build() @TO@ Assignment@@this.client=WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5872 @LENGTH@ 50
------------INS MethodInvocation@@MethodName:bindToWebHandler:[webHandler] @TO@ MethodInvocation@@WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5872 @LENGTH@ 42
---------------INS SimpleName@@webHandler @TO@ MethodInvocation@@MethodName:bindToWebHandler:[webHandler] @AT@ 5903 @LENGTH@ 10
------------INS SimpleName@@Name:WebTestClient @TO@ MethodInvocation@@WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5872 @LENGTH@ 13
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClient.bindToWebHandler(webHandler).build() @AT@ 5915 @LENGTH@ 7
---INS VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenExceptionThenRedirected,  @AT@ 5926 @LENGTH@ 177
------INS ParameterizedType@@FluxExchangeResult<String> @TO@ VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @AT@ 5926 @LENGTH@ 26
---------INS SimpleType@@FluxExchangeResult @TO@ ParameterizedType@@FluxExchangeResult<String> @AT@ 5926 @LENGTH@ 18
---------INS SimpleType@@String @TO@ ParameterizedType@@FluxExchangeResult<String> @AT@ 5945 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @TO@ VariableDeclarationStatement@@FluxExchangeResult<String> result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class); @AT@ 5953 @LENGTH@ 149
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5953 @LENGTH@ 6
---------INS MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @TO@ VariableDeclarationFragment@@result=this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 140
------------INS MethodInvocation@@MethodName:is3xxRedirection:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 108
------------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 84
------------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 64
------------INS MethodInvocation@@MethodName:uri:["https://example.com/foo"] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 53
---------------INS StringLiteral@@"https://example.com/foo" @TO@ MethodInvocation@@MethodName:uri:["https://example.com/foo"] @AT@ 5989 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 17
------------INS FieldAccess@@this.client @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 5962 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.client @AT@ 5962 @LENGTH@ 4
---------------INS SimpleName@@client @TO@ FieldAccess@@this.client @AT@ 5967 @LENGTH@ 6
------------INS SimpleName@@MethodName:returnResult:[String.class] @TO@ MethodInvocation@@this.client.get().uri("https://example.com/foo").exchange().expectStatus().is3xxRedirection().returnResult(String.class) @AT@ 6076 @LENGTH@ 26
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:returnResult:[String.class] @AT@ 6089 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:factory.setExecutionListenerLoader(new StaticFlowExecutionListenerLoader(new FlowExecutionListenerAdapter(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)) @TO@ MethodInvocation:factory.setExecutionListenerLoader(new StaticFlowExecutionListenerLoader(new FlowExecutionListener(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)) @AT@ 14053 @LENGTH@ 869
---UPD MethodInvocation@@factory.setExecutionListenerLoader(new StaticFlowExecutionListenerLoader(new FlowExecutionListenerAdapter(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)) @TO@ factory.setExecutionListenerLoader(new StaticFlowExecutionListenerLoader(new FlowExecutionListener(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)) @AT@ 14053 @LENGTH@ 868
------UPD SimpleName@@MethodName:setExecutionListenerLoader:[new StaticFlowExecutionListenerLoader(new FlowExecutionListenerAdapter(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)] @TO@ MethodName:setExecutionListenerLoader:[new StaticFlowExecutionListenerLoader(new FlowExecutionListener(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
)] @AT@ 14061 @LENGTH@ 860
---------UPD ClassInstanceCreation@@StaticFlowExecutionListenerLoader[new FlowExecutionListenerAdapter(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
] @TO@ StaticFlowExecutionListenerLoader[new FlowExecutionListener(){
  public void viewRendering(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertEquals(1,result.getErrorCount());
    }
  }
  public void viewRendered(  RequestContext context,  View view,  StateDefinition viewState){
    if (context.getCurrentEvent() != null && context.getCurrentEvent().getId().equals("submit")) {
      BindingResult result=(BindingResult)context.getFlashScope().get("org.springframework.validation.BindingResult.formBean");
      assertNull(result);
    }
  }
}
] @AT@ 14088 @LENGTH@ 832
------------UPD ClassInstanceCreation@@FlowExecutionListenerAdapter[] @TO@ FlowExecutionListener[] @AT@ 14126 @LENGTH@ 793
---------------UPD SimpleType@@FlowExecutionListenerAdapter @TO@ FlowExecutionListener @AT@ 14130 @LENGTH@ 28


INS IfStatement@@if (reader.getNumberOfRows() == 0) {  return true;} @TO@ MethodDeclaration@@static, boolean, MethodName:isAcidKeyIndexValid, Reader reader,  @AT@ 4212 @LENGTH@ 61
---INS InfixExpression@@reader.getNumberOfRows() == 0 @TO@ IfStatement@@if (reader.getNumberOfRows() == 0) {  return true;} @AT@ 4216 @LENGTH@ 29
------INS MethodInvocation@@reader.getNumberOfRows() @TO@ InfixExpression@@reader.getNumberOfRows() == 0 @AT@ 4216 @LENGTH@ 24
---------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getNumberOfRows() @AT@ 4216 @LENGTH@ 6
---------INS SimpleName@@MethodName:getNumberOfRows:[] @TO@ MethodInvocation@@reader.getNumberOfRows() @AT@ 4223 @LENGTH@ 17
------INS Operator@@== @TO@ InfixExpression@@reader.getNumberOfRows() == 0 @AT@ 4240 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@reader.getNumberOfRows() == 0 @AT@ 4244 @LENGTH@ 1
---INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (reader.getNumberOfRows() == 0) {  return true;} @AT@ 4247 @LENGTH@ 26
------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 4255 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4262 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @TO@ MethodDeclaration@@protected, void, MethodName:invokeProxyClient, Exchange exchange, Exception,  @AT@ 19369 @LENGTH@ 92
---INS MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @TO@ ExpressionStatement@@MethodInvocation:((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 19369 @LENGTH@ 91
------INS MethodInvocation@@MethodName:getChainedCxfRsEndpointConfigurer:[] @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 19369 @LENGTH@ 67
------INS ParenthesizedExpression@@((CxfRsEndpoint)getEndpoint()) @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 19369 @LENGTH@ 31
---------INS CastExpression@@(CxfRsEndpoint)getEndpoint() @TO@ ParenthesizedExpression@@((CxfRsEndpoint)getEndpoint()) @AT@ 19370 @LENGTH@ 29
------------INS SimpleType@@CxfRsEndpoint @TO@ CastExpression@@(CxfRsEndpoint)getEndpoint() @AT@ 19371 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ CastExpression@@(CxfRsEndpoint)getEndpoint() @AT@ 19386 @LENGTH@ 13
------INS SimpleName@@MethodName:configureClient:[target] @TO@ MethodInvocation@@((CxfRsEndpoint)getEndpoint()).getChainedCxfRsEndpointConfigurer().configureClient(target) @AT@ 19437 @LENGTH@ 23
---------INS SimpleName@@target @TO@ SimpleName@@MethodName:configureClient:[target] @AT@ 19453 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:doMarshal, Exchange exchange, Object graph, OutputStream stream, Marshaller marshaller, Exception,  @TO@ void, MethodName:doMarshal, Exchange exchange, Object graph, OutputStream stream, Marshaller marshaller, String charset, Exception,  @AT@ 7273 @LENGTH@ 3882
---INS SingleVariableDeclaration@@String charset @TO@ MethodDeclaration@@void, MethodName:doMarshal, Exchange exchange, Object graph, OutputStream stream, Marshaller marshaller, Exception,  @AT@ 7369 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String charset @AT@ 7369 @LENGTH@ 6
------INS SimpleName@@charset @TO@ SingleVariableDeclaration@@String charset @AT@ 7376 @LENGTH@ 7
---UPD IfStatement@@if (introspector.isElement(element)) {  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(element,writer);  } else {    marshaller.marshal(element,stream);  }  return;} else if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @TO@ if (introspector.isElement(element)) {  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer,charset);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(element,writer);  } else {    marshaller.marshal(element,stream);  }  return;} else if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer,charset);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @AT@ 8491 @LENGTH@ 2067
------UPD Block@@ThenBody:{  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(element,writer);  } else {    marshaller.marshal(element,stream);  }  return;} @TO@ ThenBody:{  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer,charset);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(element,writer);  } else {    marshaller.marshal(element,stream);  }  return;} @AT@ 8528 @LENGTH@ 592
---------UPD IfStatement@@if (asXmlStreamWriter(exchange)) {  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(element,writer);} else {  marshaller.marshal(element,stream);} @TO@ if (asXmlStreamWriter(exchange)) {  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer,charset);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(element,writer);} else {  marshaller.marshal(element,stream);} @AT@ 8542 @LENGTH@ 548
------------UPD Block@@ThenBody:{  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(element,writer);} @TO@ ThenBody:{  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer,charset);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(element,writer);} @AT@ 8575 @LENGTH@ 441
---------------UPD VariableDeclarationStatement@@XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream); @TO@ XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream); @AT@ 8593 @LENGTH@ 80
------------------UPD VariableDeclarationFragment@@writer=typeConverter.convertTo(XMLStreamWriter.class,stream) @TO@ writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream) @AT@ 8609 @LENGTH@ 63
---------------------UPD MethodInvocation@@typeConverter.convertTo(XMLStreamWriter.class,stream) @TO@ typeConverter.convertTo(XMLStreamWriter.class,exchange,stream) @AT@ 8618 @LENGTH@ 54
------------------------UPD SimpleName@@MethodName:convertTo:[XMLStreamWriter.class, stream] @TO@ MethodName:convertTo:[XMLStreamWriter.class, exchange, stream] @AT@ 8632 @LENGTH@ 40
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[XMLStreamWriter.class, stream] @AT@ 8690 @LENGTH@ 8
---------------UPD IfStatement@@if (needFiltering(exchange)) {  writer=new FilteringXmlStreamWriter(writer);} @TO@ if (needFiltering(exchange)) {  writer=new FilteringXmlStreamWriter(writer,charset);} @AT@ 8690 @LENGTH@ 115
------------------UPD Block@@ThenBody:{  writer=new FilteringXmlStreamWriter(writer);} @TO@ ThenBody:{  writer=new FilteringXmlStreamWriter(writer,charset);} @AT@ 8719 @LENGTH@ 86
---------------------UPD ExpressionStatement@@Assignment:writer=new FilteringXmlStreamWriter(writer) @TO@ Assignment:writer=new FilteringXmlStreamWriter(writer,charset) @AT@ 8741 @LENGTH@ 46
------------------------UPD Assignment@@writer=new FilteringXmlStreamWriter(writer) @TO@ writer=new FilteringXmlStreamWriter(writer,charset) @AT@ 8741 @LENGTH@ 45
---------------------------UPD ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @TO@ FilteringXmlStreamWriter[writer, charset] @AT@ 8750 @LENGTH@ 36
------------------------------INS SimpleName@@charset @TO@ ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @AT@ 8822 @LENGTH@ 7
------UPD Block@@ElseBody:if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @TO@ ElseBody:if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer,charset);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @AT@ 9126 @LENGTH@ 1432
---------UPD IfStatement@@if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @TO@ if (objectFactory && element != null) {  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer,charset);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @AT@ 9126 @LENGTH@ 1432
------------UPD Block@@ThenBody:{  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @TO@ ThenBody:{  Method objectFactoryMethod=JaxbHelper.getJaxbElementFactoryMethod(camelContext,element.getClass());  if (objectFactoryMethod != null) {    try {      Object instance=objectFactoryMethod.getDeclaringClass().newInstance();      if (instance != null) {        Object toMarshall=objectFactoryMethod.invoke(instance,element);        if (asXmlStreamWriter(exchange)) {          XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);          if (needFiltering(exchange)) {            writer=new FilteringXmlStreamWriter(writer,charset);          }          if (xmlStreamWriterWrapper != null) {            writer=xmlStreamWriterWrapper.wrapWriter(writer);          }          marshaller.marshal(toMarshall,writer);        } else {          marshaller.marshal(toMarshall,stream);        }        return;      }    } catch (    Exception e) {      LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);    }  }} @AT@ 9164 @LENGTH@ 1394
---------------UPD IfStatement@@if (objectFactoryMethod != null) {  try {    Object instance=objectFactoryMethod.getDeclaringClass().newInstance();    if (instance != null) {      Object toMarshall=objectFactoryMethod.invoke(instance,element);      if (asXmlStreamWriter(exchange)) {        XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);        if (needFiltering(exchange)) {          writer=new FilteringXmlStreamWriter(writer);        }        if (xmlStreamWriterWrapper != null) {          writer=xmlStreamWriterWrapper.wrapWriter(writer);        }        marshaller.marshal(toMarshall,writer);      } else {        marshaller.marshal(toMarshall,stream);      }      return;    }  } catch (  Exception e) {    LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);  }} @TO@ if (objectFactoryMethod != null) {  try {    Object instance=objectFactoryMethod.getDeclaringClass().newInstance();    if (instance != null) {      Object toMarshall=objectFactoryMethod.invoke(instance,element);      if (asXmlStreamWriter(exchange)) {        XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);        if (needFiltering(exchange)) {          writer=new FilteringXmlStreamWriter(writer,charset);        }        if (xmlStreamWriterWrapper != null) {          writer=xmlStreamWriterWrapper.wrapWriter(writer);        }        marshaller.marshal(toMarshall,writer);      } else {        marshaller.marshal(toMarshall,stream);      }      return;    }  } catch (  Exception e) {    LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);  }} @AT@ 9293 @LENGTH@ 1255
------------------UPD Block@@ThenBody:{  try {    Object instance=objectFactoryMethod.getDeclaringClass().newInstance();    if (instance != null) {      Object toMarshall=objectFactoryMethod.invoke(instance,element);      if (asXmlStreamWriter(exchange)) {        XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);        if (needFiltering(exchange)) {          writer=new FilteringXmlStreamWriter(writer);        }        if (xmlStreamWriterWrapper != null) {          writer=xmlStreamWriterWrapper.wrapWriter(writer);        }        marshaller.marshal(toMarshall,writer);      } else {        marshaller.marshal(toMarshall,stream);      }      return;    }  } catch (  Exception e) {    LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);  }} @TO@ ThenBody:{  try {    Object instance=objectFactoryMethod.getDeclaringClass().newInstance();    if (instance != null) {      Object toMarshall=objectFactoryMethod.invoke(instance,element);      if (asXmlStreamWriter(exchange)) {        XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);        if (needFiltering(exchange)) {          writer=new FilteringXmlStreamWriter(writer,charset);        }        if (xmlStreamWriterWrapper != null) {          writer=xmlStreamWriterWrapper.wrapWriter(writer);        }        marshaller.marshal(toMarshall,writer);      } else {        marshaller.marshal(toMarshall,stream);      }      return;    }  } catch (  Exception e) {    LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);  }} @AT@ 9326 @LENGTH@ 1222
---------------------UPD TryStatement@@try {  Object instance=objectFactoryMethod.getDeclaringClass().newInstance();  if (instance != null) {    Object toMarshall=objectFactoryMethod.invoke(instance,element);    if (asXmlStreamWriter(exchange)) {      XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);      if (needFiltering(exchange)) {        writer=new FilteringXmlStreamWriter(writer);      }      if (xmlStreamWriterWrapper != null) {        writer=xmlStreamWriterWrapper.wrapWriter(writer);      }      marshaller.marshal(toMarshall,writer);    } else {      marshaller.marshal(toMarshall,stream);    }    return;  }} catch (Exception e) {  LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);} @TO@ try {  Object instance=objectFactoryMethod.getDeclaringClass().newInstance();  if (instance != null) {    Object toMarshall=objectFactoryMethod.invoke(instance,element);    if (asXmlStreamWriter(exchange)) {      XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);      if (needFiltering(exchange)) {        writer=new FilteringXmlStreamWriter(writer,charset);      }      if (xmlStreamWriterWrapper != null) {        writer=xmlStreamWriterWrapper.wrapWriter(writer);      }      marshaller.marshal(toMarshall,writer);    } else {      marshaller.marshal(toMarshall,stream);    }    return;  }} catch (Exception e) {  LOG.debug("Unable to create JAXBElement object for type " + element.getClass() + " due to "+ e.getMessage(),e);} @AT@ 9344 @LENGTH@ 1190
------------------------UPD IfStatement@@if (instance != null) {  Object toMarshall=objectFactoryMethod.invoke(instance,element);  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(toMarshall,writer);  } else {    marshaller.marshal(toMarshall,stream);  }  return;} @TO@ if (instance != null) {  Object toMarshall=objectFactoryMethod.invoke(instance,element);  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer,charset);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(toMarshall,writer);  } else {    marshaller.marshal(toMarshall,stream);  }  return;} @AT@ 9463 @LENGTH@ 879
---------------------------UPD Block@@ThenBody:{  Object toMarshall=objectFactoryMethod.invoke(instance,element);  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(toMarshall,writer);  } else {    marshaller.marshal(toMarshall,stream);  }  return;} @TO@ ThenBody:{  Object toMarshall=objectFactoryMethod.invoke(instance,element);  if (asXmlStreamWriter(exchange)) {    XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);    if (needFiltering(exchange)) {      writer=new FilteringXmlStreamWriter(writer,charset);    }    if (xmlStreamWriterWrapper != null) {      writer=xmlStreamWriterWrapper.wrapWriter(writer);    }    marshaller.marshal(toMarshall,writer);  } else {    marshaller.marshal(toMarshall,stream);  }  return;} @AT@ 9485 @LENGTH@ 857
------------------------------UPD IfStatement@@if (asXmlStreamWriter(exchange)) {  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(toMarshall,writer);} else {  marshaller.marshal(toMarshall,stream);} @TO@ if (asXmlStreamWriter(exchange)) {  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer,charset);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(toMarshall,writer);} else {  marshaller.marshal(toMarshall,stream);} @AT@ 9602 @LENGTH@ 686
---------------------------------UPD Block@@ThenBody:{  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(toMarshall,writer);} @TO@ ThenBody:{  XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream);  if (needFiltering(exchange)) {    writer=new FilteringXmlStreamWriter(writer,charset);  }  if (xmlStreamWriterWrapper != null) {    writer=xmlStreamWriterWrapper.wrapWriter(writer);  }  marshaller.marshal(toMarshall,writer);} @AT@ 9635 @LENGTH@ 552
------------------------------------UPD VariableDeclarationStatement@@XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,stream); @TO@ XMLStreamWriter writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream); @AT@ 9665 @LENGTH@ 80
---------------------------------------UPD VariableDeclarationFragment@@writer=typeConverter.convertTo(XMLStreamWriter.class,stream) @TO@ writer=typeConverter.convertTo(XMLStreamWriter.class,exchange,stream) @AT@ 9681 @LENGTH@ 63
------------------------------------------UPD MethodInvocation@@typeConverter.convertTo(XMLStreamWriter.class,stream) @TO@ typeConverter.convertTo(XMLStreamWriter.class,exchange,stream) @AT@ 9690 @LENGTH@ 54
---------------------------------------------UPD SimpleName@@MethodName:convertTo:[XMLStreamWriter.class, stream] @TO@ MethodName:convertTo:[XMLStreamWriter.class, exchange, stream] @AT@ 9704 @LENGTH@ 40
------------------------------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:convertTo:[XMLStreamWriter.class, stream] @AT@ 9781 @LENGTH@ 8
------------------------------------UPD IfStatement@@if (needFiltering(exchange)) {  writer=new FilteringXmlStreamWriter(writer);} @TO@ if (needFiltering(exchange)) {  writer=new FilteringXmlStreamWriter(writer,charset);} @AT@ 9774 @LENGTH@ 139
---------------------------------------UPD Block@@ThenBody:{  writer=new FilteringXmlStreamWriter(writer);} @TO@ ThenBody:{  writer=new FilteringXmlStreamWriter(writer,charset);} @AT@ 9803 @LENGTH@ 110
------------------------------------------UPD ExpressionStatement@@Assignment:writer=new FilteringXmlStreamWriter(writer) @TO@ Assignment:writer=new FilteringXmlStreamWriter(writer,charset) @AT@ 9837 @LENGTH@ 46
---------------------------------------------UPD Assignment@@writer=new FilteringXmlStreamWriter(writer) @TO@ writer=new FilteringXmlStreamWriter(writer,charset) @AT@ 9837 @LENGTH@ 45
------------------------------------------------UPD ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @TO@ FilteringXmlStreamWriter[writer, charset] @AT@ 9846 @LENGTH@ 36
---------------------------------------------------INS SimpleName@@charset @TO@ ClassInstanceCreation@@FilteringXmlStreamWriter[writer] @AT@ 9937 @LENGTH@ 7


UPD IfStatement@@if (!StringUtils.hasText(tokenType)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @TO@ if (!StringUtils.hasText(tokenType)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} else if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1478 @LENGTH@ 150
---INS Block@@ElseBody:if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @TO@ IfStatement@@if (!StringUtils.hasText(tokenType)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1634 @LENGTH@ 203
------INS IfStatement@@if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @TO@ Block@@ElseBody:if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1634 @LENGTH@ 203
---------INS MethodInvocation@@tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE) @TO@ IfStatement@@if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1638 @LENGTH@ 57
------------INS SimpleName@@Name:tokenType @TO@ MethodInvocation@@tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE) @AT@ 1638 @LENGTH@ 9
------------INS SimpleName@@MethodName:equalsIgnoreCase:[OAuth2AccessToken.BEARER_TYPE] @TO@ MethodInvocation@@tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE) @AT@ 1648 @LENGTH@ 47
---------------INS QualifiedName@@OAuth2AccessToken.BEARER_TYPE @TO@ SimpleName@@MethodName:equalsIgnoreCase:[OAuth2AccessToken.BEARER_TYPE] @AT@ 1665 @LENGTH@ 29
------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 1665 @LENGTH@ 17
------------------INS SimpleName@@BEARER_TYPE @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 1683 @LENGTH@ 11
---------INS Block@@ThenBody:{  tokenType=OAuth2AccessToken.BEARER_TYPE;} @TO@ IfStatement@@if (tokenType.equalsIgnoreCase(OAuth2AccessToken.BEARER_TYPE)) {  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1697 @LENGTH@ 140
------------INS ExpressionStatement@@Assignment:tokenType=OAuth2AccessToken.BEARER_TYPE @TO@ Block@@ThenBody:{  tokenType=OAuth2AccessToken.BEARER_TYPE;} @AT@ 1716 @LENGTH@ 42
---------------INS Assignment@@tokenType=OAuth2AccessToken.BEARER_TYPE @TO@ ExpressionStatement@@Assignment:tokenType=OAuth2AccessToken.BEARER_TYPE @AT@ 1716 @LENGTH@ 41
------------------INS SimpleName@@tokenType @TO@ Assignment@@tokenType=OAuth2AccessToken.BEARER_TYPE @AT@ 1716 @LENGTH@ 9
------------------INS Operator@@= @TO@ Assignment@@tokenType=OAuth2AccessToken.BEARER_TYPE @AT@ 1725 @LENGTH@ 1
------------------INS QualifiedName@@OAuth2AccessToken.BEARER_TYPE @TO@ Assignment@@tokenType=OAuth2AccessToken.BEARER_TYPE @AT@ 1728 @LENGTH@ 29
---------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 1728 @LENGTH@ 17
---------------------INS SimpleName@@BEARER_TYPE @TO@ QualifiedName@@OAuth2AccessToken.BEARER_TYPE @AT@ 1746 @LENGTH@ 11


UPD VariableDeclarationStatement@@PasswordEncoder delegate=this.idToPasswordEncoder.get(id); @TO@ PasswordEncoder delegate=null; @AT@ 8224 @LENGTH@ 60
---UPD VariableDeclarationFragment@@delegate=this.idToPasswordEncoder.get(id) @TO@ delegate=null @AT@ 8240 @LENGTH@ 43
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@delegate=this.idToPasswordEncoder.get(id) @AT@ 8277 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]NameCompleter, [OptionCompleter<CLICompleterInvocation>] @TO@ [public, static]NameCompleter, AbstractCompleter @AT@ 2064 @LENGTH@ 1228
---INS SimpleType@@AbstractCompleter @TO@ TypeDeclaration@@[public, static]NameCompleter, [OptionCompleter<CLICompleterInvocation>] @AT@ 2096 @LENGTH@ 17
---DEL ParameterizedType@@OptionCompleter<CLICompleterInvocation> @AT@ 2121 @LENGTH@ 39
------DEL SimpleType@@OptionCompleter @AT@ 2121 @LENGTH@ 15
------DEL SimpleType@@CLICompleterInvocation @AT@ 2137 @LENGTH@ 22

UPD CatchClause@@catch (NoSuchBeanDefinitionException|BeanNotOfRequiredTypeException notReactive) {  return null;} @TO@ catch (NoSuchBeanDefinitionException|BeanNotOfRequiredTypeException ex) {  return null;} @AT@ 3685 @LENGTH@ 104
---UPD SingleVariableDeclaration@@NoSuchBeanDefinitionException|BeanNotOfRequiredTypeException notReactive @TO@ NoSuchBeanDefinitionException|BeanNotOfRequiredTypeException ex @AT@ 3692 @LENGTH@ 74
------UPD SimpleName@@notReactive @TO@ ex @AT@ 3755 @LENGTH@ 11


UPD ReturnStatement@@StringLiteral:"Property converted by HighPriorityStringConverter1" @TO@ ConditionalExpression:!value.isEmpty() ? "Property converted by HighPriorityStringConverter1" : null @AT@ 1436 @LENGTH@ 60
---INS ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter1" : null @TO@ ReturnStatement@@StringLiteral:"Property converted by HighPriorityStringConverter1" @AT@ 1443 @LENGTH@ 78
------INS PrefixExpression@@!value.isEmpty() @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter1" : null @AT@ 1443 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!value.isEmpty() @AT@ 1443 @LENGTH@ 1
---------INS MethodInvocation@@value.isEmpty() @TO@ PrefixExpression@@!value.isEmpty() @AT@ 1444 @LENGTH@ 15
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.isEmpty() @AT@ 1444 @LENGTH@ 5
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@value.isEmpty() @AT@ 1450 @LENGTH@ 9
------INS StringLiteral@@"Property converted by HighPriorityStringConverter1" @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter1" : null @AT@ 1462 @LENGTH@ 52
------INS NullLiteral@@null @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter1" : null @AT@ 1517 @LENGTH@ 4
---DEL StringLiteral@@"Property converted by HighPriorityStringConverter1" @AT@ 1443 @LENGTH@ 52


UPD ReturnStatement@@MethodInvocation:new BaseServiceResolver<>(JMX_REST_DEFINITION_RESOLVER,RestDefinitionsResolver.class).resolve(camelContext).orElseThrow(() -> new IllegalArgumentException("Cannot find JMX_REST_DEFINITION_RESOLVER on classpath.")) @TO@ MethodInvocation:new BaseServiceResolver<>(JMX_REST_DEFINITION_RESOLVER,RestDefinitionsResolver.class,camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder()).resolve(camelContext).orElseThrow(() -> new IllegalArgumentException("Cannot find JMX_REST_DEFINITION_RESOLVER on classpath.")) @AT@ 8362 @LENGTH@ 256
---UPD MethodInvocation@@new BaseServiceResolver<>(JMX_REST_DEFINITION_RESOLVER,RestDefinitionsResolver.class).resolve(camelContext).orElseThrow(() -> new IllegalArgumentException("Cannot find JMX_REST_DEFINITION_RESOLVER on classpath.")) @TO@ new BaseServiceResolver<>(JMX_REST_DEFINITION_RESOLVER,RestDefinitionsResolver.class,camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder()).resolve(camelContext).orElseThrow(() -> new IllegalArgumentException("Cannot find JMX_REST_DEFINITION_RESOLVER on classpath.")) @AT@ 8369 @LENGTH@ 248
------UPD ClassInstanceCreation@@BaseServiceResolver<>[JMX_REST_DEFINITION_RESOLVER, RestDefinitionsResolver.class] @TO@ BaseServiceResolver<>[JMX_REST_DEFINITION_RESOLVER, RestDefinitionsResolver.class, camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder()] @AT@ 8369 @LENGTH@ 86
---------INS MethodInvocation@@camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder() @TO@ ClassInstanceCreation@@BaseServiceResolver<>[JMX_REST_DEFINITION_RESOLVER, RestDefinitionsResolver.class] @AT@ 8605 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:adapt:[ExtendedCamelContext.class] @TO@ MethodInvocation@@camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder() @AT@ 8605 @LENGTH@ 46
---------------INS TypeLiteral@@ExtendedCamelContext.class @TO@ MethodInvocation@@MethodName:adapt:[ExtendedCamelContext.class] @AT@ 8624 @LENGTH@ 26
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder() @AT@ 8605 @LENGTH@ 12
------------INS SimpleName@@MethodName:getBootstrapFactoryFinder:[] @TO@ MethodInvocation@@camelContext.adapt(ExtendedCamelContext.class).getBootstrapFactoryFinder() @AT@ 8652 @LENGTH@ 27


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2085 @LENGTH@ 550
---DEL Modifier@@public @AT@ 2085 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2092 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2097 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2148 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonMSKClientMock awsMSKClient=new AmazonMSKClientMock(); @AT@ 2169 @LENGTH@ 61
------DEL SimpleType@@AmazonMSKClientMock @AT@ 2169 @LENGTH@ 19
------DEL VariableDeclarationFragment@@awsMSKClient=new AmazonMSKClientMock() @AT@ 2189 @LENGTH@ 40
---------DEL SimpleName@@awsMSKClient @AT@ 2189 @LENGTH@ 12
---------DEL ClassInstanceCreation@@AmazonMSKClientMock[] @AT@ 2204 @LENGTH@ 25
------------DEL New@@new @AT@ 2204 @LENGTH@ 3
------------DEL SimpleType@@AmazonMSKClientMock @AT@ 2208 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("awsMskClient",awsMSKClient) @AT@ 2239 @LENGTH@ 57
------DEL MethodInvocation@@context.getRegistry().bind("awsMskClient",awsMSKClient) @AT@ 2239 @LENGTH@ 56
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2239 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2239 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["awsMskClient", awsMSKClient] @AT@ 2261 @LENGTH@ 34
------------DEL StringLiteral@@"awsMskClient" @AT@ 2266 @LENGTH@ 14
------------DEL SimpleName@@awsMSKClient @AT@ 2282 @LENGTH@ 12
---DEL VariableDeclarationStatement@@MSK2Component component=context.getComponent("aws2-msk",MSK2Component.class); @AT@ 2305 @LENGTH@ 80
------DEL SimpleType@@MSK2Component @AT@ 2305 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-msk",MSK2Component.class) @AT@ 2319 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2319 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-msk",MSK2Component.class) @AT@ 2331 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2331 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-msk", MSK2Component.class] @AT@ 2339 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-msk" @AT@ 2352 @LENGTH@ 10
---------------DEL TypeLiteral@@MSK2Component.class @AT@ 2364 @LENGTH@ 19
---DEL VariableDeclarationStatement@@MSK2Endpoint endpoint=(MSK2Endpoint)component.createEndpoint("aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2394 @LENGTH@ 153
------DEL SimpleType@@MSK2Endpoint @AT@ 2394 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(MSK2Endpoint)component.createEndpoint("aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2407 @LENGTH@ 139
---------DEL SimpleName@@endpoint @AT@ 2407 @LENGTH@ 8
---------DEL CastExpression@@(MSK2Endpoint)component.createEndpoint("aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2418 @LENGTH@ 128
------------DEL SimpleType@@MSK2Endpoint @AT@ 2419 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2433 @LENGTH@ 113
---------------DEL SimpleName@@Name:component @AT@ 2433 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2460 @LENGTH@ 86
------------------DEL StringLiteral@@"aws-msk://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2475 @LENGTH@ 70
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(awsMSKClient,endpoint.getConfiguration().getMskClient()) @AT@ 2557 @LENGTH@ 72
------DEL MethodInvocation@@assertNotSame(awsMSKClient,endpoint.getConfiguration().getMskClient()) @AT@ 2557 @LENGTH@ 71
---------DEL SimpleName@@MethodName:assertNotSame:[awsMSKClient, endpoint.getConfiguration().getMskClient()] @AT@ 2557 @LENGTH@ 71
------------DEL SimpleName@@awsMSKClient @AT@ 2571 @LENGTH@ 12
------------DEL MethodInvocation@@endpoint.getConfiguration().getMskClient() @AT@ 2585 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2585 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2585 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getMskClient:[] @AT@ 2613 @LENGTH@ 14


INS IfStatement@@if (http.requestCache != null) {  oauthRedirectFilter.setRequestCache(http.requestCache.requestCache);} @TO@ MethodDeclaration@@protected, void, MethodName:configure, ServerHttpSecurity http,  @AT@ 63277 @LENGTH@ 110
---INS InfixExpression@@http.requestCache != null @TO@ IfStatement@@if (http.requestCache != null) {  oauthRedirectFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 63281 @LENGTH@ 25
------INS QualifiedName@@http.requestCache @TO@ InfixExpression@@http.requestCache != null @AT@ 63281 @LENGTH@ 17
---------INS SimpleName@@http @TO@ QualifiedName@@http.requestCache @AT@ 63281 @LENGTH@ 4
---------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache @AT@ 63286 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@http.requestCache != null @AT@ 63298 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@http.requestCache != null @AT@ 63302 @LENGTH@ 4
---INS Block@@ThenBody:{  oauthRedirectFilter.setRequestCache(http.requestCache.requestCache);} @TO@ IfStatement@@if (http.requestCache != null) {  oauthRedirectFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 63308 @LENGTH@ 79
------INS ExpressionStatement@@MethodInvocation:oauthRedirectFilter.setRequestCache(http.requestCache.requestCache) @TO@ Block@@ThenBody:{  oauthRedirectFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 63314 @LENGTH@ 68
---------INS MethodInvocation@@oauthRedirectFilter.setRequestCache(http.requestCache.requestCache) @TO@ ExpressionStatement@@MethodInvocation:oauthRedirectFilter.setRequestCache(http.requestCache.requestCache) @AT@ 63314 @LENGTH@ 67
------------INS SimpleName@@Name:oauthRedirectFilter @TO@ MethodInvocation@@oauthRedirectFilter.setRequestCache(http.requestCache.requestCache) @AT@ 63314 @LENGTH@ 19
------------INS SimpleName@@MethodName:setRequestCache:[http.requestCache.requestCache] @TO@ MethodInvocation@@oauthRedirectFilter.setRequestCache(http.requestCache.requestCache) @AT@ 63334 @LENGTH@ 47
---------------INS QualifiedName@@http.requestCache.requestCache @TO@ SimpleName@@MethodName:setRequestCache:[http.requestCache.requestCache] @AT@ 63350 @LENGTH@ 30
------------------INS QualifiedName@@http.requestCache @TO@ QualifiedName@@http.requestCache.requestCache @AT@ 63350 @LENGTH@ 17
---------------------INS SimpleName@@http @TO@ QualifiedName@@http.requestCache @AT@ 63350 @LENGTH@ 4
---------------------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache @AT@ 63355 @LENGTH@ 12
------------------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache.requestCache @AT@ 63368 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:ReactiveSecurityContextHolder.getContext().filter((c) -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as((authentication) -> this.authorizationManager.verify(authentication,exchange)).doOnSuccess((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization successful");
  }
}
).doOnError(AccessDeniedException.class,(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization failed: " + e.getMessage());
  }
}
).switchIfEmpty(chain.filter(exchange)) @TO@ MethodInvocation:ReactiveSecurityContextHolder.getContext().filter((c) -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as((authentication) -> this.authorizationManager.verify(authentication,exchange)).doOnSuccess((it) -> logger.debug("Authorization successful")).doOnError(AccessDeniedException.class,(ex) -> logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage()))).switchIfEmpty(chain.filter(exchange)) @AT@ 1823 @LENGTH@ 552
---UPD MethodInvocation@@ReactiveSecurityContextHolder.getContext().filter((c) -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as((authentication) -> this.authorizationManager.verify(authentication,exchange)).doOnSuccess((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization successful");
  }
}
).doOnError(AccessDeniedException.class,(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization failed: " + e.getMessage());
  }
}
).switchIfEmpty(chain.filter(exchange)) @TO@ ReactiveSecurityContextHolder.getContext().filter((c) -> c.getAuthentication() != null).map(SecurityContext::getAuthentication).as((authentication) -> this.authorizationManager.verify(authentication,exchange)).doOnSuccess((it) -> logger.debug("Authorization successful")).doOnError(AccessDeniedException.class,(ex) -> logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage()))).switchIfEmpty(chain.filter(exchange)) @AT@ 1830 @LENGTH@ 544
------UPD MethodInvocation@@MethodName:doOnError:[AccessDeniedException.class, (e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization failed: " + e.getMessage());
  }
}
] @TO@ MethodName:doOnError:[AccessDeniedException.class, (ex) -> logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage()))] @AT@ 1830 @LENGTH@ 506
---------UPD LambdaExpression@@(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization failed: " + e.getMessage());
  }
}
 @TO@ (ex) -> logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage())) @AT@ 2215 @LENGTH@ 120
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 2216 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 2216 @LENGTH@ 1
------------INS MethodInvocation@@logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage())) @TO@ LambdaExpression@@(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization failed: " + e.getMessage());
  }
}
 @AT@ 2224 @LENGTH@ 76
---------------INS SimpleName@@MethodName:debug:[LogMessage.format("Authorization failed: %s",ex.getMessage())] @TO@ MethodInvocation@@logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage())) @AT@ 2231 @LENGTH@ 69
------------------INS MethodInvocation@@LogMessage.format("Authorization failed: %s",ex.getMessage()) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Authorization failed: %s",ex.getMessage())] @AT@ 2237 @LENGTH@ 62
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@LogMessage.format("Authorization failed: %s",ex.getMessage()) @AT@ 2266 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["Authorization failed: " + e.getMessage()] @TO@ MethodInvocation@@LogMessage.format("Authorization failed: %s",ex.getMessage()) @AT@ 2273 @LENGTH@ 48
------------------------INS StringLiteral@@"Authorization failed: %s" @TO@ SimpleName@@MethodName:debug:["Authorization failed: " + e.getMessage()] @AT@ 2255 @LENGTH@ 26
------------------------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:debug:["Authorization failed: " + e.getMessage()] @AT@ 2283 @LENGTH@ 15
---------------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@ex.getMessage() @AT@ 2306 @LENGTH@ 1
---------------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 2308 @LENGTH@ 12
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.format("Authorization failed: %s",ex.getMessage())) @AT@ 2233 @LENGTH@ 6
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Authorization failed: " + e.getMessage());} @AT@ 2229 @LENGTH@ 100
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2233 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2240 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Authorization failed: " + e.getMessage());} @AT@ 2258 @LENGTH@ 71
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Authorization failed: " + e.getMessage()) @AT@ 2266 @LENGTH@ 56
---------------------DEL MethodInvocation@@logger.debug("Authorization failed: " + e.getMessage()) @AT@ 2266 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:doOnSuccess:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization successful");
  }
}
] @TO@ MethodName:doOnSuccess:[(it) -> logger.debug("Authorization successful")] @AT@ 1830 @LENGTH@ 345
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization successful");
  }
}
 @TO@ (it) -> logger.debug("Authorization successful") @AT@ 2068 @LENGTH@ 106
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Authorization successful");} @AT@ 2083 @LENGTH@ 85
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2087 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 2087 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2094 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Authorization successful");} @AT@ 2112 @LENGTH@ 56
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Authorization successful") @AT@ 2120 @LENGTH@ 41
------------MOV MethodInvocation@@logger.debug("Authorization successful") @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authorization successful");
  }
}
 @AT@ 2120 @LENGTH@ 40


UPD VariableDeclarationStatement@@final String result=artifactPattern.matcher(query).replaceFirst(""); @TO@ String result=artifactPattern.matcher(query).replaceFirst(""); @AT@ 3752 @LENGTH@ 70
---DEL Modifier@@final @AT@ 3752 @LENGTH@ 5


UPD FieldDeclaration@@private, HttpServletResponse, [response] @TO@ private, final, HttpServletResponse, [response] @AT@ 1156 @LENGTH@ 37
---INS Modifier@@final @TO@ FieldDeclaration@@private, HttpServletResponse, [response] @AT@ 1170 @LENGTH@ 5


UPD CatchClause@@catch (Exception error) {  this.logger.error(error);} @TO@ catch (Exception ex) {  this.logger.error(ex);} @AT@ 3186 @LENGTH@ 60
---UPD SingleVariableDeclaration@@Exception error @TO@ Exception ex @AT@ 3193 @LENGTH@ 15
------UPD SimpleName@@error @TO@ ex @AT@ 3203 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:this.logger.error(error) @TO@ MethodInvocation:this.logger.error(ex) @AT@ 3216 @LENGTH@ 25
------UPD MethodInvocation@@this.logger.error(error) @TO@ this.logger.error(ex) @AT@ 3216 @LENGTH@ 24
---------UPD SimpleName@@MethodName:error:[error] @TO@ MethodName:error:[ex] @AT@ 3228 @LENGTH@ 12
------------UPD SimpleName@@error @TO@ ex @AT@ 3234 @LENGTH@ 5


UPD TypeDeclaration@@[public]OpenIDAuthenticationToken, AbstractAuthenticationToken @TO@ [@Deprecated, public]OpenIDAuthenticationToken, AbstractAuthenticationToken @AT@ 1335 @LENGTH@ 2185
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAuthenticationToken, AbstractAuthenticationToken @AT@ 1335 @LENGTH@ 11


MOV MethodDeclaration@@public, static, Consumer<HttpHeaders>, MethodName:bearerToken, String bearerTokenValue,  @TO@ TypeDeclaration@@[public, final]SecurityHeaders,  @AT@ 1158 @LENGTH@ 240


UPD ExpressionStatement@@MethodInvocation:assertEquals(true,notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertEquals(true,notify.matchesWaitTime()) @AT@ 1792 @LENGTH@ 49
---UPD MethodInvocation@@assertEquals(true,notify.matchesMockWaitTime()) @TO@ assertEquals(true,notify.matchesWaitTime()) @AT@ 1792 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertEquals:[true, notify.matchesMockWaitTime()] @TO@ MethodName:assertEquals:[true, notify.matchesWaitTime()] @AT@ 1792 @LENGTH@ 48
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1811 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1818 @LENGTH@ 21


UPD MethodDeclaration@@public, StreamReceiverOptionsBuilder<K,MapRecord<K,HK,HV>>, HK, HV, MethodName:hashValueSerializer, SerializationPair<HK> pair,  @TO@ public, StreamReceiverOptionsBuilder<K,MapRecord<K,HK,HV>>, HK, HV, MethodName:hashValueSerializer, SerializationPair<HV> pair,  @AT@ 15679 @LENGTH@ 296
---UPD SingleVariableDeclaration@@SerializationPair<HK> pair @TO@ SerializationPair<HV> pair @AT@ 15774 @LENGTH@ 26
------UPD ParameterizedType@@SerializationPair<HK> @TO@ SerializationPair<HV> @AT@ 15774 @LENGTH@ 21
---------UPD SimpleType@@HK @TO@ HV @AT@ 15792 @LENGTH@ 2


UPD VariableDeclarationStatement@@WebApplicationContext context=(WebApplicationContext)this.spring.getContext(); @TO@ WebApplicationContext context=this.spring.getContext(); @AT@ 23124 @LENGTH@ 81
---UPD VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @TO@ context=this.spring.getContext() @AT@ 23146 @LENGTH@ 58
------DEL CastExpression@@(WebApplicationContext)this.spring.getContext() @AT@ 23156 @LENGTH@ 48
---------DEL SimpleType@@WebApplicationContext @AT@ 23157 @LENGTH@ 21
------MOV MethodInvocation@@this.spring.getContext() @TO@ VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @AT@ 23180 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:testHostMasterr, Exception,  @TO@ public, void, MethodName:testHostMaster, Exception,  @AT@ 2649 @LENGTH@ 112
---UPD SimpleName@@MethodName:testHostMasterr @TO@ MethodName:testHostMaster @AT@ 2661 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @TO@ TypeDeclaration@@[@TestInstance(TestInstance.Lifecycle.PER_CLASS), public]CxfRsProducerTest, CamelSpringTestSupport @AT@ 21283 @LENGTH@ 1103
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 21283 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 21290 @LENGTH@ 4
---INS SimpleName@@MethodName:testProducerWithQueryParametersMultipleValues @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 21295 @LENGTH@ 45
---INS VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 21353 @LENGTH@ 773
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
); @AT@ 21353 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
); @AT@ 21362 @LENGTH@ 763
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @AT@ 21362 @LENGTH@ 8
---------INS MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @AT@ 21373 @LENGTH@ 752
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @AT@ 21373 @LENGTH@ 8
------------INS SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
] @TO@ MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
) @AT@ 21382 @LENGTH@ 743
---------------INS InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @TO@ SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
] @AT@ 21387 @LENGTH@ 126
------------------INS StringLiteral@@"cxfrs://http://localhost:" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21387 @LENGTH@ 27
------------------INS Operator@@+ @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21414 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getPort2:[] @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21417 @LENGTH@ 10
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21430 @LENGTH@ 3
------------------INS MethodInvocation@@getClass().getSimpleName() @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21436 @LENGTH@ 26
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 21436 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 21447 @LENGTH@ 15
------------------INS StringLiteral@@"/testQuery?httpClientAPI=true&synchronous=true" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 21465 @LENGTH@ 48
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2");
    inMessage.setBody(null);
  }
}
] @AT@ 21515 @LENGTH@ 609
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 21515 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 21519 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 21531 @LENGTH@ 593
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 21549 @LENGTH@ 548
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21549 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21556 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21561 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21569 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 21569 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 21578 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21595 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.setPattern(ExchangePattern.InOut) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21627 @LENGTH@ 43
---------------------------INS MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @TO@ ExpressionStatement@@MethodInvocation:exchange.setPattern(ExchangePattern.InOut) @AT@ 21627 @LENGTH@ 42
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @AT@ 21627 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @TO@ MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @AT@ 21636 @LENGTH@ 33
---------------------------------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @AT@ 21647 @LENGTH@ 21
------------------------------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 21647 @LENGTH@ 15
------------------------------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 21663 @LENGTH@ 5
------------------------INS VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21691 @LENGTH@ 37
---------------------------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @AT@ 21691 @LENGTH@ 7
---------------------------INS VariableDeclarationFragment@@inMessage=exchange.getIn() @TO@ VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @AT@ 21699 @LENGTH@ 28
------------------------------INS SimpleName@@inMessage @TO@ VariableDeclarationFragment@@inMessage=exchange.getIn() @AT@ 21699 @LENGTH@ 9
------------------------------INS MethodInvocation@@exchange.getIn() @TO@ VariableDeclarationFragment@@inMessage=exchange.getIn() @AT@ 21711 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 21711 @LENGTH@ 8
---------------------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 21720 @LENGTH@ 7
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21792 @LENGTH@ 49
---------------------------INS MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 21792 @LENGTH@ 48
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 21792 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 21802 @LENGTH@ 38
---------------------------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @AT@ 21812 @LENGTH@ 20
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 21812 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 21821 @LENGTH@ 11
---------------------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @AT@ 21834 @LENGTH@ 5
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21862 @LENGTH@ 81
---------------------------INS MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 21862 @LENGTH@ 80
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 21862 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @TO@ MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 21872 @LENGTH@ 70
---------------------------------INS QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @TO@ SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @AT@ 21882 @LENGTH@ 40
------------------------------------INS SimpleName@@CxfConstants @TO@ QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @AT@ 21882 @LENGTH@ 12
------------------------------------INS SimpleName@@CAMEL_CXF_RS_RESPONSE_CLASS @TO@ QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @AT@ 21895 @LENGTH@ 27
---------------------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @AT@ 21924 @LENGTH@ 17
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 21964 @LENGTH@ 54
---------------------------INS MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2") @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2") @AT@ 21964 @LENGTH@ 53
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2") @AT@ 21964 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1&id=2"] @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1&id=2") @AT@ 21974 @LENGTH@ 43
---------------------------------INS QualifiedName@@Exchange.HTTP_QUERY @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1&id=2"] @AT@ 21984 @LENGTH@ 19
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 21984 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_QUERY @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 21993 @LENGTH@ 10
---------------------------------INS StringLiteral@@"id=1&id=2" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1&id=2"] @AT@ 22005 @LENGTH@ 11
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setBody(null) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22039 @LENGTH@ 24
---------------------------INS MethodInvocation@@inMessage.setBody(null) @TO@ ExpressionStatement@@MethodInvocation:inMessage.setBody(null) @AT@ 22039 @LENGTH@ 23
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setBody(null) @AT@ 22039 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setBody:[null] @TO@ MethodInvocation@@inMessage.setBody(null) @AT@ 22049 @LENGTH@ 13
---------------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setBody:[null] @AT@ 22057 @LENGTH@ 4
---INS VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 22178 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @AT@ 22178 @LENGTH@ 6
------INS VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @AT@ 22185 @LENGTH@ 50
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @AT@ 22185 @LENGTH@ 8
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @AT@ 22196 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 22196 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 22196 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 22214 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 22222 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull(response,"The response should not be null") @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 22245 @LENGTH@ 59
------INS MethodInvocation@@assertNotNull(response,"The response should not be null") @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(response,"The response should not be null") @AT@ 22245 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @TO@ MethodInvocation@@assertNotNull(response,"The response should not be null") @AT@ 22245 @LENGTH@ 58
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @AT@ 22259 @LENGTH@ 8
------------INS StringLiteral@@"The response should not be null" @TO@ SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @AT@ 22269 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:assertEquals("id=1&id=2",response,"The response value is wrong") @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersMultipleValues,  @AT@ 22313 @LENGTH@ 67
------INS MethodInvocation@@assertEquals("id=1&id=2",response,"The response value is wrong") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("id=1&id=2",response,"The response value is wrong") @AT@ 22313 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertEquals:["id=1&id=2", response, "The response value is wrong"] @TO@ MethodInvocation@@assertEquals("id=1&id=2",response,"The response value is wrong") @AT@ 22313 @LENGTH@ 66
------------INS StringLiteral@@"id=1&id=2" @TO@ SimpleName@@MethodName:assertEquals:["id=1&id=2", response, "The response value is wrong"] @AT@ 22326 @LENGTH@ 11
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertEquals:["id=1&id=2", response, "The response value is wrong"] @AT@ 22339 @LENGTH@ 8
------------INS StringLiteral@@"The response value is wrong" @TO@ SimpleName@@MethodName:assertEquals:["id=1&id=2", response, "The response value is wrong"] @AT@ 22349 @LENGTH@ 29


INS ExpressionStatement@@MethodInvocation:Assert.state(result != null,() -> "Could not coerce " + source + " into an Instant") @TO@ MethodDeclaration@@private, static, Instant, MethodName:convertInstant, Object source,  @AT@ 5214 @LENGTH@ 86
---INS MethodInvocation@@Assert.state(result != null,() -> "Could not coerce " + source + " into an Instant") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(result != null,() -> "Could not coerce " + source + " into an Instant") @AT@ 5214 @LENGTH@ 85
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(result != null,() -> "Could not coerce " + source + " into an Instant") @AT@ 5214 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[result != null, () -> "Could not coerce " + source + " into an Instant"] @TO@ MethodInvocation@@Assert.state(result != null,() -> "Could not coerce " + source + " into an Instant") @AT@ 5221 @LENGTH@ 78
---------INS InfixExpression@@result != null @TO@ SimpleName@@MethodName:state:[result != null, () -> "Could not coerce " + source + " into an Instant"] @AT@ 5227 @LENGTH@ 14
------------MOV SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 5221 @LENGTH@ 6
------------MOV Operator@@== @TO@ InfixExpression@@result != null @AT@ 5227 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 5231 @LENGTH@ 4
---------INS LambdaExpression@@() -> "Could not coerce " + source + " into an Instant" @TO@ SimpleName@@MethodName:state:[result != null, () -> "Could not coerce " + source + " into an Instant"] @AT@ 5243 @LENGTH@ 55
------------INS InfixExpression@@"Could not coerce " + source + " into an Instant" @TO@ LambdaExpression@@() -> "Could not coerce " + source + " into an Instant" @AT@ 5249 @LENGTH@ 49
---------------MOV StringLiteral@@"Could not coerce " @TO@ InfixExpression@@"Could not coerce " + source + " into an Instant" @AT@ 5274 @LENGTH@ 19
---------------MOV Operator@@+ @TO@ InfixExpression@@"Could not coerce " + source + " into an Instant" @AT@ 5293 @LENGTH@ 1
---------------MOV SimpleName@@source @TO@ InfixExpression@@"Could not coerce " + source + " into an Instant" @AT@ 5296 @LENGTH@ 6
---------------MOV StringLiteral@@" into an Instant" @TO@ InfixExpression@@"Could not coerce " + source + " into an Instant" @AT@ 5305 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getBody(),true) @TO@ MethodInvocation:assertEquals(true,resultExchange.getIn().getBody()) @AT@ 2092 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getBody(),true) @TO@ assertEquals(true,resultExchange.getIn().getBody()) @AT@ 2092 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getBody(), true] @TO@ MethodName:assertEquals:[true, resultExchange.getIn().getBody()] @AT@ 2092 @LENGTH@ 52
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getBody(), true] @AT@ 2105 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2139 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2573 @LENGTH@ 144
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2573 @LENGTH@ 143
------UPD MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, rabbitMQEndpoint] @AT@ 2573 @LENGTH@ 92
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @AT@ 2685 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2685 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2701 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:this.authorizationRequestResolver.resolve(exchange).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).onErrorResume(ClientAuthorizationRequiredException.class,(e) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId()))).flatMap((clientRegistration) -> sendRedirectForAuthorization(exchange,clientRegistration)) @TO@ MethodInvocation:this.authorizationRequestResolver.resolve(exchange).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).onErrorResume(ClientAuthorizationRequiredException.class,(ex) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId()))).flatMap((clientRegistration) -> sendRedirectForAuthorization(exchange,clientRegistration)) @AT@ 5994 @LENGTH@ 431
---UPD MethodInvocation@@this.authorizationRequestResolver.resolve(exchange).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).onErrorResume(ClientAuthorizationRequiredException.class,(e) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId()))).flatMap((clientRegistration) -> sendRedirectForAuthorization(exchange,clientRegistration)) @TO@ this.authorizationRequestResolver.resolve(exchange).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).onErrorResume(ClientAuthorizationRequiredException.class,(ex) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId()))).flatMap((clientRegistration) -> sendRedirectForAuthorization(exchange,clientRegistration)) @AT@ 6001 @LENGTH@ 423
------UPD MethodInvocation@@MethodName:onErrorResume:[ClientAuthorizationRequiredException.class, (e) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId()))] @TO@ MethodName:onErrorResume:[ClientAuthorizationRequiredException.class, (ex) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId()))] @AT@ 6001 @LENGTH@ 326
---------UPD LambdaExpression@@(e) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId())) @TO@ (ex) -> this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId())) @AT@ 6184 @LENGTH@ 142
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 6185 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 6185 @LENGTH@ 1
------------UPD MethodInvocation@@this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId())) @TO@ this.requestCache.saveRequest(exchange).then(this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId())) @AT@ 6191 @LENGTH@ 135
---------------UPD SimpleName@@MethodName:then:[this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId())] @TO@ MethodName:then:[this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId())] @AT@ 6240 @LENGTH@ 86
------------------UPD MethodInvocation@@this.authorizationRequestResolver.resolve(exchange,e.getClientRegistrationId()) @TO@ this.authorizationRequestResolver.resolve(exchange,ex.getClientRegistrationId()) @AT@ 6245 @LENGTH@ 80
---------------------UPD SimpleName@@MethodName:resolve:[exchange, e.getClientRegistrationId()] @TO@ MethodName:resolve:[exchange, ex.getClientRegistrationId()] @AT@ 6279 @LENGTH@ 46
------------------------UPD MethodInvocation@@e.getClientRegistrationId() @TO@ ex.getClientRegistrationId() @AT@ 6297 @LENGTH@ 27
---------------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 6297 @LENGTH@ 1


UPD VariableDeclarationStatement@@final DeploymentUnit depUnit=config.getDeploymentUnit(); @TO@ final DeploymentUnit depUnit=config.getDeploymentUnit().getValue(); @AT@ 4122 @LENGTH@ 58
---UPD VariableDeclarationFragment@@depUnit=config.getDeploymentUnit() @TO@ depUnit=config.getDeploymentUnit().getValue() @AT@ 4143 @LENGTH@ 36
------UPD MethodInvocation@@config.getDeploymentUnit() @TO@ config.getDeploymentUnit().getValue() @AT@ 4153 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getDeploymentUnit:[] @TO@ MethodName:getValue:[] @AT@ 4160 @LENGTH@ 19
---------INS MethodInvocation@@MethodName:getDeploymentUnit:[] @TO@ MethodInvocation@@config.getDeploymentUnit() @AT@ 4164 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),1) @TO@ MethodInvocation:assertEquals(1,parse.size()) @AT@ 2253 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(parse.size(),1) @TO@ assertEquals(1,parse.size()) @AT@ 2253 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[parse.size(), 1] @TO@ MethodName:assertEquals:[1, parse.size()] @AT@ 2253 @LENGTH@ 29
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 1] @AT@ 2266 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2280 @LENGTH@ 1


UPD VariableDeclarationStatement@@Collection<Result> results=HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness())); @TO@ Collection<Result> results=HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check)); @AT@ 1957 @LENGTH@ 509
---UPD VariableDeclarationFragment@@results=HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness())) @TO@ results=HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check)) @AT@ 1976 @LENGTH@ 489
------UPD MethodInvocation@@HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness())) @TO@ HealthCheckHelper.invoke(camelContext,(HealthCheckFilter)check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check)) @AT@ 1986 @LENGTH@ 479
---------UPD SimpleName@@MethodName:invoke:[camelContext, (HealthCheckFilter)check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness())] @TO@ MethodName:invoke:[camelContext, (HealthCheckFilter)check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check)] @AT@ 2004 @LENGTH@ 461
------------UPD CastExpression@@(HealthCheckFilter)check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness()) @TO@ (HealthCheckFilter)check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2045 @LENGTH@ 419
---------------UPD LambdaExpression@@check -> check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness()) @TO@ check -> check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2065 @LENGTH@ 399
------------------UPD InfixExpression@@check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness()) @TO@ check.getId().equals("context") || check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2179 @LENGTH@ 285
---------------------INS InfixExpression@@check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @TO@ InfixExpression@@check.getId().equals("context") || (isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness()) @AT@ 2370 @LENGTH@ 87
------------------------INS InstanceofExpression@@check instanceof AbstractHealthCheck @TO@ InfixExpression@@check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2370 @LENGTH@ 36
---------------------------INS SimpleName@@check @TO@ InstanceofExpression@@check instanceof AbstractHealthCheck @AT@ 2370 @LENGTH@ 5
---------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@check instanceof AbstractHealthCheck @AT@ 2376 @LENGTH@ 10
---------------------------INS SimpleType@@AbstractHealthCheck @TO@ InstanceofExpression@@check instanceof AbstractHealthCheck @AT@ 2387 @LENGTH@ 19
------------------------MOV Operator@@&& @TO@ InfixExpression@@check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2439 @LENGTH@ 2
------------------------MOV PrefixExpression@@!check.isReadiness() @TO@ InfixExpression@@check instanceof AbstractHealthCheck && !acceptHealthCheck((AbstractHealthCheck)check) @AT@ 2443 @LENGTH@ 20
---------------------DEL ParenthesizedExpression@@(isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness()) @AT@ 2386 @LENGTH@ 78
------------------------DEL InfixExpression@@isLiveness() && !check.isLiveness() || isReadiness() && !check.isReadiness() @AT@ 2387 @LENGTH@ 76
---------------------------DEL InfixExpression@@isLiveness() && !check.isLiveness() @AT@ 2387 @LENGTH@ 35
------------------------------DEL MethodInvocation@@MethodName:isLiveness:[] @AT@ 2387 @LENGTH@ 12
------------------------------DEL Operator@@&& @AT@ 2399 @LENGTH@ 2
------------------------------DEL PrefixExpression@@!check.isLiveness() @AT@ 2403 @LENGTH@ 19
---------------------------------DEL Operator@@! @AT@ 2403 @LENGTH@ 1
---------------------------------DEL MethodInvocation@@check.isLiveness() @AT@ 2404 @LENGTH@ 18
------------------------------------DEL SimpleName@@Name:check @AT@ 2404 @LENGTH@ 5
------------------------------------DEL SimpleName@@MethodName:isLiveness:[] @AT@ 2410 @LENGTH@ 12
---------------------------DEL Operator@@|| @AT@ 2422 @LENGTH@ 2
---------------------------DEL InfixExpression@@isReadiness() && !check.isReadiness() @AT@ 2426 @LENGTH@ 37
------------------------------DEL MethodInvocation@@MethodName:isReadiness:[] @AT@ 2426 @LENGTH@ 13


UPD VariableDeclarationStatement@@ConfigurableWebApplicationContext context=(ConfigurableWebApplicationContext)this.spring.getContext(); @TO@ ConfigurableWebApplicationContext context=this.spring.getContext(); @AT@ 6428 @LENGTH@ 105
---UPD VariableDeclarationFragment@@context=(ConfigurableWebApplicationContext)this.spring.getContext() @TO@ context=this.spring.getContext() @AT@ 6462 @LENGTH@ 70
------DEL CastExpression@@(ConfigurableWebApplicationContext)this.spring.getContext() @AT@ 6472 @LENGTH@ 60
---------DEL SimpleType@@ConfigurableWebApplicationContext @AT@ 6473 @LENGTH@ 33
------MOV MethodInvocation@@this.spring.getContext() @TO@ VariableDeclarationFragment@@context=(ConfigurableWebApplicationContext)this.spring.getContext() @AT@ 6508 @LENGTH@ 24


INS MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @TO@ TypeDeclaration@@[public]CopyDirectoryVisitor, CountingPathVisitor @AT@ 2633 @LENGTH@ 524
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2633 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2640 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2648 @LENGTH@ 6
---INS SingleVariableDeclaration@@final Object obj @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2655 @LENGTH@ 16
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Object obj @AT@ 2655 @LENGTH@ 5
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@final Object obj @AT@ 2661 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@final Object obj @AT@ 2668 @LENGTH@ 3
---INS IfStatement@@if (this == obj) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2683 @LENGTH@ 53
------INS InfixExpression@@this == obj @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 2687 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ InfixExpression@@this == obj @AT@ 2687 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == obj @AT@ 2691 @LENGTH@ 2
---------INS SimpleName@@obj @TO@ InfixExpression@@this == obj @AT@ 2695 @LENGTH@ 3
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == obj) {  return true;} @AT@ 2700 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 2714 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2721 @LENGTH@ 4
---INS IfStatement@@if (!super.equals(obj)) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2745 @LENGTH@ 61
------INS PrefixExpression@@!super.equals(obj) @TO@ IfStatement@@if (!super.equals(obj)) {  return false;} @AT@ 2749 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!super.equals(obj) @AT@ 2749 @LENGTH@ 1
---------INS SuperMethodInvocation@@super.equals(obj) @TO@ PrefixExpression@@!super.equals(obj) @AT@ 2750 @LENGTH@ 17
------------INS SimpleName@@MethodName:equals:[obj] @TO@ SuperMethodInvocation@@super.equals(obj) @AT@ 2756 @LENGTH@ 6
------------INS SimpleName@@obj @TO@ SuperMethodInvocation@@super.equals(obj) @AT@ 2763 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!super.equals(obj)) {  return false;} @AT@ 2769 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2783 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2790 @LENGTH@ 5
---INS IfStatement@@if (getClass() != obj.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2815 @LENGTH@ 71
------INS InfixExpression@@getClass() != obj.getClass() @TO@ IfStatement@@if (getClass() != obj.getClass()) {  return false;} @AT@ 2819 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 2819 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 2829 @LENGTH@ 2
---------INS MethodInvocation@@obj.getClass() @TO@ InfixExpression@@getClass() != obj.getClass() @AT@ 2833 @LENGTH@ 14
------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getClass() @AT@ 2833 @LENGTH@ 3
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@obj.getClass() @AT@ 2837 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (getClass() != obj.getClass()) {  return false;} @AT@ 2849 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2863 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2870 @LENGTH@ 5
---INS VariableDeclarationStatement@@final CopyDirectoryVisitor other=(CopyDirectoryVisitor)obj; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2895 @LENGTH@ 62
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final CopyDirectoryVisitor other=(CopyDirectoryVisitor)obj; @AT@ 2895 @LENGTH@ 5
------INS SimpleType@@CopyDirectoryVisitor @TO@ VariableDeclarationStatement@@final CopyDirectoryVisitor other=(CopyDirectoryVisitor)obj; @AT@ 2901 @LENGTH@ 20
------INS VariableDeclarationFragment@@other=(CopyDirectoryVisitor)obj @TO@ VariableDeclarationStatement@@final CopyDirectoryVisitor other=(CopyDirectoryVisitor)obj; @AT@ 2922 @LENGTH@ 34
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=(CopyDirectoryVisitor)obj @AT@ 2922 @LENGTH@ 5
---------INS CastExpression@@(CopyDirectoryVisitor)obj @TO@ VariableDeclarationFragment@@other=(CopyDirectoryVisitor)obj @AT@ 2930 @LENGTH@ 26
------------INS SimpleType@@CopyDirectoryVisitor @TO@ CastExpression@@(CopyDirectoryVisitor)obj @AT@ 2931 @LENGTH@ 20
------------INS SimpleName@@obj @TO@ CastExpression@@(CopyDirectoryVisitor)obj @AT@ 2953 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @TO@ MethodDeclaration@@public, boolean, MethodName:equals, final Object obj,  @AT@ 2966 @LENGTH@ 185
------INS InfixExpression@@Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @TO@ ReturnStatement@@InfixExpression:Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @AT@ 2973 @LENGTH@ 177
---------INS MethodInvocation@@Arrays.equals(copyOptions,other.copyOptions) @TO@ InfixExpression@@Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @AT@ 2973 @LENGTH@ 45
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.equals(copyOptions,other.copyOptions) @AT@ 2973 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[copyOptions, other.copyOptions] @TO@ MethodInvocation@@Arrays.equals(copyOptions,other.copyOptions) @AT@ 2980 @LENGTH@ 38
---------------INS SimpleName@@copyOptions @TO@ SimpleName@@MethodName:equals:[copyOptions, other.copyOptions] @AT@ 2987 @LENGTH@ 11
---------------INS QualifiedName@@other.copyOptions @TO@ SimpleName@@MethodName:equals:[copyOptions, other.copyOptions] @AT@ 3000 @LENGTH@ 17
------------------INS SimpleName@@other @TO@ QualifiedName@@other.copyOptions @AT@ 3000 @LENGTH@ 5
------------------INS SimpleName@@copyOptions @TO@ QualifiedName@@other.copyOptions @AT@ 3006 @LENGTH@ 11
---------INS Operator@@&& @TO@ InfixExpression@@Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @AT@ 3018 @LENGTH@ 2
---------INS MethodInvocation@@Objects.equals(sourceDirectory,other.sourceDirectory) @TO@ InfixExpression@@Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @AT@ 3022 @LENGTH@ 54
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(sourceDirectory,other.sourceDirectory) @AT@ 3022 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[sourceDirectory, other.sourceDirectory] @TO@ MethodInvocation@@Objects.equals(sourceDirectory,other.sourceDirectory) @AT@ 3030 @LENGTH@ 46
---------------INS SimpleName@@sourceDirectory @TO@ SimpleName@@MethodName:equals:[sourceDirectory, other.sourceDirectory] @AT@ 3037 @LENGTH@ 15
---------------INS QualifiedName@@other.sourceDirectory @TO@ SimpleName@@MethodName:equals:[sourceDirectory, other.sourceDirectory] @AT@ 3054 @LENGTH@ 21
------------------INS SimpleName@@other @TO@ QualifiedName@@other.sourceDirectory @AT@ 3054 @LENGTH@ 5
------------------INS SimpleName@@sourceDirectory @TO@ QualifiedName@@other.sourceDirectory @AT@ 3060 @LENGTH@ 15
---------INS MethodInvocation@@Objects.equals(targetDirectory,other.targetDirectory) @TO@ InfixExpression@@Arrays.equals(copyOptions,other.copyOptions) && Objects.equals(sourceDirectory,other.sourceDirectory) && Objects.equals(targetDirectory,other.targetDirectory) @AT@ 3096 @LENGTH@ 54
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.equals(targetDirectory,other.targetDirectory) @AT@ 3096 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[targetDirectory, other.targetDirectory] @TO@ MethodInvocation@@Objects.equals(targetDirectory,other.targetDirectory) @AT@ 3104 @LENGTH@ 46
---------------INS SimpleName@@targetDirectory @TO@ SimpleName@@MethodName:equals:[targetDirectory, other.targetDirectory] @AT@ 3111 @LENGTH@ 15
---------------INS QualifiedName@@other.targetDirectory @TO@ SimpleName@@MethodName:equals:[targetDirectory, other.targetDirectory] @AT@ 3128 @LENGTH@ 21
------------------INS SimpleName@@other @TO@ QualifiedName@@other.targetDirectory @AT@ 3128 @LENGTH@ 5
------------------INS SimpleName@@targetDirectory @TO@ QualifiedName@@other.targetDirectory @AT@ 3134 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2037 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2037 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 2037 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2048 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2064 @LENGTH@ 21


UPD TryStatement@@try {  if (isPipelined()) {    if (limit != null) {      pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));    } else {      pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));    }    return null;  }  if (isQueueing()) {    if (limit != null) {      transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));    } else {      transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));    }    return null;  }  if (limit != null) {    return connection.getJedis().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount());  }  return connection.getJedis().zrangeByLex(key,min,max);} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  if (isPipelined()) {    if (limit != null && !limit.isUnlimited()) {      pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));    } else {      pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));    }    return null;  }  if (isQueueing()) {    if (limit != null && !limit.isUnlimited()) {      transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));    } else {      transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));    }    return null;  }  if (limit != null) {    return connection.getJedis().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount());  }  return connection.getJedis().zrangeByLex(key,min,max);} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 29750 @LENGTH@ 960
---UPD IfStatement@@if (isPipelined()) {  if (limit != null) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));  }  return null;} @TO@ if (isPipelined()) {  if (limit != null && !limit.isUnlimited()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));  }  return null;} @AT@ 29759 @LENGTH@ 337
------UPD Block@@ThenBody:{  if (limit != null) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));  }  return null;} @TO@ ThenBody:{  if (limit != null && !limit.isUnlimited()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));  }  return null;} @AT@ 29778 @LENGTH@ 318
---------UPD IfStatement@@if (limit != null) {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));} @TO@ if (limit != null && !limit.isUnlimited()) {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));} @AT@ 29784 @LENGTH@ 290
------------DEL InfixExpression@@limit != null @AT@ 29788 @LENGTH@ 13
------------INS InfixExpression@@limit != null && !limit.isUnlimited() @TO@ IfStatement@@if (limit != null) {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  pipeline(connection.newJedisResult(connection.getRequiredPipeline().zrangeByLex(key,min,max)));} @AT@ 29814 @LENGTH@ 37
---------------INS InfixExpression@@limit != null @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 29814 @LENGTH@ 13
------------------MOV SimpleName@@limit @TO@ InfixExpression@@limit != null @AT@ 29788 @LENGTH@ 5
------------------MOV Operator@@!= @TO@ InfixExpression@@limit != null @AT@ 29793 @LENGTH@ 2
------------------MOV NullLiteral@@null @TO@ InfixExpression@@limit != null @AT@ 29797 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 29827 @LENGTH@ 2
---------------INS PrefixExpression@@!limit.isUnlimited() @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 29831 @LENGTH@ 20
------------------INS Operator@@! @TO@ PrefixExpression@@!limit.isUnlimited() @AT@ 29831 @LENGTH@ 1
------------------INS MethodInvocation@@limit.isUnlimited() @TO@ PrefixExpression@@!limit.isUnlimited() @AT@ 29832 @LENGTH@ 19
---------------------INS SimpleName@@Name:limit @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 29832 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:isUnlimited:[] @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 29838 @LENGTH@ 13
---UPD IfStatement@@if (isQueueing()) {  if (limit != null) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));  }  return null;} @TO@ if (isQueueing()) {  if (limit != null && !limit.isUnlimited()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));  }  return null;} @AT@ 30101 @LENGTH@ 348
------UPD Block@@ThenBody:{  if (limit != null) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));  }  return null;} @TO@ ThenBody:{  if (limit != null && !limit.isUnlimited()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));  } else {    transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));  }  return null;} @AT@ 30119 @LENGTH@ 330
---------UPD IfStatement@@if (limit != null) {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));} @TO@ if (limit != null && !limit.isUnlimited()) {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));} @AT@ 30125 @LENGTH@ 302
------------DEL InfixExpression@@limit != null @AT@ 30129 @LENGTH@ 13
------------INS InfixExpression@@limit != null && !limit.isUnlimited() @TO@ IfStatement@@if (limit != null) {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max,limit.getOffset(),limit.getCount())));} else {  transaction(connection.newJedisResult(connection.getRequiredTransaction().zrangeByLex(key,min,max)));} @AT@ 30179 @LENGTH@ 37
---------------INS InfixExpression@@limit != null @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 30179 @LENGTH@ 13
------------------MOV SimpleName@@limit @TO@ InfixExpression@@limit != null @AT@ 30129 @LENGTH@ 5
------------------MOV Operator@@!= @TO@ InfixExpression@@limit != null @AT@ 30134 @LENGTH@ 2
------------------MOV NullLiteral@@null @TO@ InfixExpression@@limit != null @AT@ 30138 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 30192 @LENGTH@ 2
---------------INS PrefixExpression@@!limit.isUnlimited() @TO@ InfixExpression@@limit != null && !limit.isUnlimited() @AT@ 30196 @LENGTH@ 20
------------------INS Operator@@! @TO@ PrefixExpression@@!limit.isUnlimited() @AT@ 30196 @LENGTH@ 1
------------------INS MethodInvocation@@limit.isUnlimited() @TO@ PrefixExpression@@!limit.isUnlimited() @AT@ 30197 @LENGTH@ 19
---------------------INS SimpleName@@Name:limit @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 30197 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:isUnlimited:[] @TO@ MethodInvocation@@limit.isUnlimited() @AT@ 30203 @LENGTH@ 13


DEL IfStatement@@if (!Publisher.class.isAssignableFrom(returnType)) {  throw new IllegalStateException("The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context");} @AT@ 3221 @LENGTH@ 264
---DEL PrefixExpression@@!Publisher.class.isAssignableFrom(returnType) @AT@ 3225 @LENGTH@ 45
------DEL Operator@@! @AT@ 3225 @LENGTH@ 1
---DEL Block@@ThenBody:{  throw new IllegalStateException("The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context");} @AT@ 3272 @LENGTH@ 213
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context") @AT@ 3277 @LENGTH@ 204
---------DEL ClassInstanceCreation@@IllegalStateException["The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context"] @AT@ 3283 @LENGTH@ 197
------------DEL New@@new @AT@ 3283 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 3287 @LENGTH@ 21
------------DEL InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3309 @LENGTH@ 170


UPD Block@@ThenBody:{  Relationship relatedEntityRelationship=relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP).asRelationship();  Object relationshipProperties=map(relatedEntityRelationship,allValues,(Neo4jPersistentEntity)relationshipDescription.getRelationshipPropertiesEntity(),knownObjects,valueEntry,processedSegments);  relationshipsAndProperties.add(relationshipProperties);  mappedObjectHandler.accept(relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP_TYPE).asString(),relationshipProperties);} @TO@ ThenBody:{  String relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel;  Relationship relatedEntityRelationship=relatedEntity.get(relationshipSymbolicName).asRelationship();  Object relationshipProperties=map(relatedEntityRelationship,allValues,(Neo4jPersistentEntity)relationshipDescription.getRelationshipPropertiesEntity(),knownObjects,valueEntry,processedSegments);  relationshipsAndProperties.add(relationshipProperties);  mappedObjectHandler.accept(relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP_TYPE).asString(),relationshipProperties);} @AT@ 22462 @LENGTH@ 565
---UPD VariableDeclarationStatement@@Relationship relatedEntityRelationship=relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP).asRelationship(); @TO@ Relationship relatedEntityRelationship=relatedEntity.get(relationshipSymbolicName).asRelationship(); @AT@ 22469 @LENGTH@ 130
------UPD VariableDeclarationFragment@@relatedEntityRelationship=relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP).asRelationship() @TO@ relatedEntityRelationship=relatedEntity.get(relationshipSymbolicName).asRelationship() @AT@ 22482 @LENGTH@ 116
---------UPD MethodInvocation@@relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP).asRelationship() @TO@ relatedEntity.get(relationshipSymbolicName).asRelationship() @AT@ 22510 @LENGTH@ 88
------------UPD MethodInvocation@@MethodName:get:[RelationshipDescription.NAME_OF_RELATIONSHIP] @TO@ MethodName:get:[relationshipSymbolicName] @AT@ 22510 @LENGTH@ 63
---------------DEL QualifiedName@@RelationshipDescription.NAME_OF_RELATIONSHIP @AT@ 22528 @LENGTH@ 44
------------------DEL SimpleName@@RelationshipDescription @AT@ 22528 @LENGTH@ 23
------------------DEL SimpleName@@NAME_OF_RELATIONSHIP @AT@ 22552 @LENGTH@ 20
---------------INS SimpleName@@relationshipSymbolicName @TO@ MethodInvocation@@MethodName:get:[RelationshipDescription.NAME_OF_RELATIONSHIP] @AT@ 22726 @LENGTH@ 24
---INS VariableDeclarationStatement@@String relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel; @TO@ Block@@ThenBody:{  Relationship relatedEntityRelationship=relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP).asRelationship();  Object relationshipProperties=map(relatedEntityRelationship,allValues,(Neo4jPersistentEntity)relationshipDescription.getRelationshipPropertiesEntity(),knownObjects,valueEntry,processedSegments);  relationshipsAndProperties.add(relationshipProperties);  mappedObjectHandler.accept(relatedEntity.get(RelationshipDescription.NAME_OF_RELATIONSHIP_TYPE).asString(),relationshipProperties);} @AT@ 22547 @LENGTH@ 114
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel; @AT@ 22547 @LENGTH@ 6
------INS VariableDeclarationFragment@@relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @TO@ VariableDeclarationStatement@@String relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel; @AT@ 22554 @LENGTH@ 106
---------INS SimpleName@@relationshipSymbolicName @TO@ VariableDeclarationFragment@@relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22554 @LENGTH@ 24
---------INS InfixExpression@@sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @TO@ VariableDeclarationFragment@@relationshipSymbolicName=sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22581 @LENGTH@ 79
------------INS SimpleName@@sourceLabel @TO@ InfixExpression@@sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22581 @LENGTH@ 11
------------INS Operator@@+ @TO@ InfixExpression@@sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22592 @LENGTH@ 1
------------INS QualifiedName@@RelationshipDescription.NAME_OF_RELATIONSHIP @TO@ InfixExpression@@sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22602 @LENGTH@ 44
---------------INS SimpleName@@RelationshipDescription @TO@ QualifiedName@@RelationshipDescription.NAME_OF_RELATIONSHIP @AT@ 22602 @LENGTH@ 23
---------------INS SimpleName@@NAME_OF_RELATIONSHIP @TO@ QualifiedName@@RelationshipDescription.NAME_OF_RELATIONSHIP @AT@ 22626 @LENGTH@ 20
------------INS SimpleName@@targetLabel @TO@ InfixExpression@@sourceLabel + RelationshipDescription.NAME_OF_RELATIONSHIP + targetLabel @AT@ 22649 @LENGTH@ 11


UPD VariableDeclarationStatement@@WebApplicationContext context=(WebApplicationContext)this.spring.getContext(); @TO@ WebApplicationContext context=this.spring.getContext(); @AT@ 13162 @LENGTH@ 81
---UPD VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @TO@ context=this.spring.getContext() @AT@ 13184 @LENGTH@ 58
------DEL CastExpression@@(WebApplicationContext)this.spring.getContext() @AT@ 13194 @LENGTH@ 48
---------DEL SimpleType@@WebApplicationContext @AT@ 13195 @LENGTH@ 21
------MOV MethodInvocation@@this.spring.getContext() @TO@ VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @AT@ 13218 @LENGTH@ 24


UPD CatchClause@@catch (NoSuchFieldException nsf) {  if (clazz.getSuperclass() != null) {    return getField(clazz.getSuperclass(),fieldName);  }  throw new IllegalStateException("Could not locate field '" + fieldName + "' on class "+ clazz);} @TO@ catch (NoSuchFieldException ex) {  if (clazz.getSuperclass() != null) {    return getField(clazz.getSuperclass(),fieldName);  }  throw new IllegalStateException("Could not locate field '" + fieldName + "' on class "+ clazz);} @AT@ 1516 @LENGTH@ 260
---UPD SingleVariableDeclaration@@NoSuchFieldException nsf @TO@ NoSuchFieldException ex @AT@ 1523 @LENGTH@ 24
------UPD SimpleName@@nsf @TO@ ex @AT@ 1544 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals(e.getCause().getClass(),IllegalArgumentException.class) @TO@ MethodInvocation:assertEquals(IllegalArgumentException.class,e.getCause().getClass()) @AT@ 10982 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(e.getCause().getClass(),IllegalArgumentException.class) @TO@ assertEquals(IllegalArgumentException.class,e.getCause().getClass()) @AT@ 10982 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[e.getCause().getClass(), IllegalArgumentException.class] @TO@ MethodName:assertEquals:[IllegalArgumentException.class, e.getCause().getClass()] @AT@ 10982 @LENGTH@ 69
---------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:assertEquals:[e.getCause().getClass(), IllegalArgumentException.class] @AT@ 10995 @LENGTH@ 30
---------DEL TypeLiteral@@IllegalArgumentException.class @AT@ 11020 @LENGTH@ 30


UPD Block@@ThenBody:{  RememberMeAuthenticationToken test=(RememberMeAuthenticationToken)obj;  if (this.getKeyHash() != test.getKeyHash()) {    return false;  }  return true;} @TO@ ThenBody:{  RememberMeAuthenticationToken other=(RememberMeAuthenticationToken)obj;  if (this.getKeyHash() != other.getKeyHash()) {    return false;  }  return true;} @AT@ 3022 @LENGTH@ 172
---UPD VariableDeclarationStatement@@RememberMeAuthenticationToken test=(RememberMeAuthenticationToken)obj; @TO@ RememberMeAuthenticationToken other=(RememberMeAuthenticationToken)obj; @AT@ 3027 @LENGTH@ 73
------UPD VariableDeclarationFragment@@test=(RememberMeAuthenticationToken)obj @TO@ other=(RememberMeAuthenticationToken)obj @AT@ 3057 @LENGTH@ 42
---------UPD SimpleName@@test @TO@ other @AT@ 3057 @LENGTH@ 4
---UPD IfStatement@@if (this.getKeyHash() != test.getKeyHash()) {  return false;} @TO@ if (this.getKeyHash() != other.getKeyHash()) {  return false;} @AT@ 3105 @LENGTH@ 68
------UPD InfixExpression@@this.getKeyHash() != test.getKeyHash() @TO@ this.getKeyHash() != other.getKeyHash() @AT@ 3109 @LENGTH@ 38
---------UPD MethodInvocation@@test.getKeyHash() @TO@ other.getKeyHash() @AT@ 3130 @LENGTH@ 17
------------UPD SimpleName@@Name:test @TO@ Name:other @AT@ 3130 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @TO@ TypeDeclaration@@[@Nested]SaveWithRelationships, IntegrationTestBase @AT@ 58610 @LENGTH@ 772
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58605 @LENGTH@ 4
---INS SimpleName@@MethodName:saveEntityWithSelfReferencesInBothDirections @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58610 @LENGTH@ 44
---INS SingleVariableDeclaration@@@Autowired PetRepository repository @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58655 @LENGTH@ 35
------INS SimpleType@@PetRepository @TO@ SingleVariableDeclaration@@@Autowired PetRepository repository @AT@ 58666 @LENGTH@ 13
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired PetRepository repository @AT@ 58680 @LENGTH@ 10
---INS VariableDeclarationStatement@@Pet luna=new Pet("Luna"); @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58697 @LENGTH@ 27
------INS SimpleType@@Pet @TO@ VariableDeclarationStatement@@Pet luna=new Pet("Luna"); @AT@ 58697 @LENGTH@ 3
------INS VariableDeclarationFragment@@luna=new Pet("Luna") @TO@ VariableDeclarationStatement@@Pet luna=new Pet("Luna"); @AT@ 58701 @LENGTH@ 22
---------INS SimpleName@@luna @TO@ VariableDeclarationFragment@@luna=new Pet("Luna") @AT@ 58701 @LENGTH@ 4
---------INS ClassInstanceCreation@@Pet["Luna"] @TO@ VariableDeclarationFragment@@luna=new Pet("Luna") @AT@ 58708 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@Pet["Luna"] @AT@ 58708 @LENGTH@ 3
------------INS SimpleType@@Pet @TO@ ClassInstanceCreation@@Pet["Luna"] @AT@ 58712 @LENGTH@ 3
------------INS StringLiteral@@"Luna" @TO@ ClassInstanceCreation@@Pet["Luna"] @AT@ 58716 @LENGTH@ 6
---INS VariableDeclarationStatement@@Pet daphne=new Pet("Daphne"); @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58728 @LENGTH@ 31
------INS SimpleType@@Pet @TO@ VariableDeclarationStatement@@Pet daphne=new Pet("Daphne"); @AT@ 58728 @LENGTH@ 3
------INS VariableDeclarationFragment@@daphne=new Pet("Daphne") @TO@ VariableDeclarationStatement@@Pet daphne=new Pet("Daphne"); @AT@ 58732 @LENGTH@ 26
---------INS SimpleName@@daphne @TO@ VariableDeclarationFragment@@daphne=new Pet("Daphne") @AT@ 58732 @LENGTH@ 6
---------INS ClassInstanceCreation@@Pet["Daphne"] @TO@ VariableDeclarationFragment@@daphne=new Pet("Daphne") @AT@ 58741 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@Pet["Daphne"] @AT@ 58741 @LENGTH@ 3
------------INS SimpleType@@Pet @TO@ ClassInstanceCreation@@Pet["Daphne"] @AT@ 58745 @LENGTH@ 3
------------INS StringLiteral@@"Daphne" @TO@ ClassInstanceCreation@@Pet["Daphne"] @AT@ 58749 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:luna.setFriends(singletonList(daphne)) @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58764 @LENGTH@ 39
------INS MethodInvocation@@luna.setFriends(singletonList(daphne)) @TO@ ExpressionStatement@@MethodInvocation:luna.setFriends(singletonList(daphne)) @AT@ 58764 @LENGTH@ 38
---------INS SimpleName@@Name:luna @TO@ MethodInvocation@@luna.setFriends(singletonList(daphne)) @AT@ 58764 @LENGTH@ 4
---------INS SimpleName@@MethodName:setFriends:[singletonList(daphne)] @TO@ MethodInvocation@@luna.setFriends(singletonList(daphne)) @AT@ 58769 @LENGTH@ 33
------------INS MethodInvocation@@singletonList(daphne) @TO@ SimpleName@@MethodName:setFriends:[singletonList(daphne)] @AT@ 58780 @LENGTH@ 21
---------------INS SimpleName@@MethodName:singletonList:[daphne] @TO@ MethodInvocation@@singletonList(daphne) @AT@ 58780 @LENGTH@ 21
------------------INS SimpleName@@daphne @TO@ SimpleName@@MethodName:singletonList:[daphne] @AT@ 58794 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:daphne.setFriends(singletonList(luna)) @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58807 @LENGTH@ 39
------INS MethodInvocation@@daphne.setFriends(singletonList(luna)) @TO@ ExpressionStatement@@MethodInvocation:daphne.setFriends(singletonList(luna)) @AT@ 58807 @LENGTH@ 38
---------INS SimpleName@@Name:daphne @TO@ MethodInvocation@@daphne.setFriends(singletonList(luna)) @AT@ 58807 @LENGTH@ 6
---------INS SimpleName@@MethodName:setFriends:[singletonList(luna)] @TO@ MethodInvocation@@daphne.setFriends(singletonList(luna)) @AT@ 58814 @LENGTH@ 31
------------INS MethodInvocation@@singletonList(luna) @TO@ SimpleName@@MethodName:setFriends:[singletonList(luna)] @AT@ 58825 @LENGTH@ 19
---------------INS SimpleName@@MethodName:singletonList:[luna] @TO@ MethodInvocation@@singletonList(luna) @AT@ 58825 @LENGTH@ 19
------------------INS SimpleName@@luna @TO@ SimpleName@@MethodName:singletonList:[luna] @AT@ 58839 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:repository.save(luna) @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58851 @LENGTH@ 22
------INS MethodInvocation@@repository.save(luna) @TO@ ExpressionStatement@@MethodInvocation:repository.save(luna) @AT@ 58851 @LENGTH@ 21
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(luna) @AT@ 58851 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[luna] @TO@ MethodInvocation@@repository.save(luna) @AT@ 58862 @LENGTH@ 10
------------INS SimpleName@@luna @TO@ SimpleName@@MethodName:save:[luna] @AT@ 58867 @LENGTH@ 4
---INS TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @TO@ MethodDeclaration@@void, MethodName:saveEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 58878 @LENGTH@ 500
------INS VariableDeclarationExpression@@Session session=createSession() @TO@ TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @AT@ 58883 @LENGTH@ 33
---------INS SimpleType@@Session @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 58883 @LENGTH@ 7
---------INS VariableDeclarationFragment@@session=createSession() @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 58891 @LENGTH@ 25
------------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 58891 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:createSession:[] @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 58901 @LENGTH@ 15
------INS VariableDeclarationStatement@@Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single(); @TO@ TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @AT@ 58924 @LENGTH@ 185
---------INS SimpleType@@Record @TO@ VariableDeclarationStatement@@Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single(); @AT@ 58924 @LENGTH@ 6
---------INS VariableDeclarationFragment@@record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @TO@ VariableDeclarationStatement@@Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single(); @AT@ 58931 @LENGTH@ 177
------------INS SimpleName@@record @TO@ VariableDeclarationFragment@@record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @AT@ 58931 @LENGTH@ 6
------------INS MethodInvocation@@session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @TO@ VariableDeclarationFragment@@record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @AT@ 58940 @LENGTH@ 168
---------------INS MethodInvocation@@MethodName:run:["MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2"] @TO@ MethodInvocation@@session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @AT@ 58940 @LENGTH@ 159
------------------INS InfixExpression@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2" @TO@ MethodInvocation@@MethodName:run:["MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2"] @AT@ 58952 @LENGTH@ 146
---------------------INS StringLiteral@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" @TO@ InfixExpression@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2" @AT@ 58952 @LENGTH@ 67
---------------------INS Operator@@+ @TO@ InfixExpression@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2" @AT@ 59019 @LENGTH@ 1
---------------------INS StringLiteral@@"-[:Has]->(luna2:Pet{name:'Luna'})" @TO@ InfixExpression@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2" @AT@ 59027 @LENGTH@ 35
---------------------INS StringLiteral@@"RETURN luna, daphne, luna2" @TO@ InfixExpression@@"MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2" @AT@ 59070 @LENGTH@ 28
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @AT@ 58940 @LENGTH@ 7
---------------INS SimpleName@@MethodName:single:[] @TO@ MethodInvocation@@session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single() @AT@ 59100 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna") @TO@ TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @AT@ 59115 @LENGTH@ 81
---------INS MethodInvocation@@assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna") @TO@ ExpressionStatement@@MethodInvocation:assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59115 @LENGTH@ 80
------------INS MethodInvocation@@MethodName:assertThat:[record.get("luna").asNode().get("name").asString()] @TO@ MethodInvocation@@assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59115 @LENGTH@ 62
---------------INS MethodInvocation@@record.get("luna").asNode().get("name").asString() @TO@ MethodInvocation@@MethodName:assertThat:[record.get("luna").asNode().get("name").asString()] @AT@ 59126 @LENGTH@ 50
------------------INS MethodInvocation@@MethodName:get:["name"] @TO@ MethodInvocation@@record.get("luna").asNode().get("name").asString() @AT@ 59126 @LENGTH@ 39
---------------------INS StringLiteral@@"name" @TO@ MethodInvocation@@MethodName:get:["name"] @AT@ 59158 @LENGTH@ 6
------------------INS MethodInvocation@@MethodName:asNode:[] @TO@ MethodInvocation@@record.get("luna").asNode().get("name").asString() @AT@ 59126 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:get:["luna"] @TO@ MethodInvocation@@record.get("luna").asNode().get("name").asString() @AT@ 59126 @LENGTH@ 18
---------------------INS StringLiteral@@"luna" @TO@ MethodInvocation@@MethodName:get:["luna"] @AT@ 59137 @LENGTH@ 6
------------------INS SimpleName@@Name:record @TO@ MethodInvocation@@record.get("luna").asNode().get("name").asString() @AT@ 59126 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@record.get("luna").asNode().get("name").asString() @AT@ 59166 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEqualTo:["Luna"] @TO@ MethodInvocation@@assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59178 @LENGTH@ 17
---------------INS StringLiteral@@"Luna" @TO@ SimpleName@@MethodName:isEqualTo:["Luna"] @AT@ 59188 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne") @TO@ TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @AT@ 59201 @LENGTH@ 85
---------INS MethodInvocation@@assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne") @TO@ ExpressionStatement@@MethodInvocation:assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne") @AT@ 59201 @LENGTH@ 84
------------INS MethodInvocation@@MethodName:assertThat:[record.get("daphne").asNode().get("name").asString()] @TO@ MethodInvocation@@assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne") @AT@ 59201 @LENGTH@ 64
---------------INS MethodInvocation@@record.get("daphne").asNode().get("name").asString() @TO@ MethodInvocation@@MethodName:assertThat:[record.get("daphne").asNode().get("name").asString()] @AT@ 59212 @LENGTH@ 52
------------------INS MethodInvocation@@MethodName:get:["name"] @TO@ MethodInvocation@@record.get("daphne").asNode().get("name").asString() @AT@ 59212 @LENGTH@ 41
---------------------INS StringLiteral@@"name" @TO@ MethodInvocation@@MethodName:get:["name"] @AT@ 59246 @LENGTH@ 6
------------------INS MethodInvocation@@MethodName:asNode:[] @TO@ MethodInvocation@@record.get("daphne").asNode().get("name").asString() @AT@ 59212 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:get:["daphne"] @TO@ MethodInvocation@@record.get("daphne").asNode().get("name").asString() @AT@ 59212 @LENGTH@ 20
---------------------INS StringLiteral@@"daphne" @TO@ MethodInvocation@@MethodName:get:["daphne"] @AT@ 59223 @LENGTH@ 8
------------------INS SimpleName@@Name:record @TO@ MethodInvocation@@record.get("daphne").asNode().get("name").asString() @AT@ 59212 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@record.get("daphne").asNode().get("name").asString() @AT@ 59254 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEqualTo:["Daphne"] @TO@ MethodInvocation@@assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne") @AT@ 59266 @LENGTH@ 19
---------------INS StringLiteral@@"Daphne" @TO@ SimpleName@@MethodName:isEqualTo:["Daphne"] @AT@ 59276 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna") @TO@ TryStatement@@try (Session session=createSession()){  Record record=session.run("MATCH (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN luna, daphne, luna2").single();  assertThat(record.get("luna").asNode().get("name").asString()).isEqualTo("Luna");  assertThat(record.get("daphne").asNode().get("name").asString()).isEqualTo("Daphne");  assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna");}  @AT@ 59291 @LENGTH@ 82
---------INS MethodInvocation@@assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna") @TO@ ExpressionStatement@@MethodInvocation:assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59291 @LENGTH@ 81
------------INS MethodInvocation@@MethodName:assertThat:[record.get("luna2").asNode().get("name").asString()] @TO@ MethodInvocation@@assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59291 @LENGTH@ 63
---------------INS MethodInvocation@@record.get("luna2").asNode().get("name").asString() @TO@ MethodInvocation@@MethodName:assertThat:[record.get("luna2").asNode().get("name").asString()] @AT@ 59302 @LENGTH@ 51
------------------INS MethodInvocation@@MethodName:get:["name"] @TO@ MethodInvocation@@record.get("luna2").asNode().get("name").asString() @AT@ 59302 @LENGTH@ 40
---------------------INS StringLiteral@@"name" @TO@ MethodInvocation@@MethodName:get:["name"] @AT@ 59335 @LENGTH@ 6
------------------INS MethodInvocation@@MethodName:asNode:[] @TO@ MethodInvocation@@record.get("luna2").asNode().get("name").asString() @AT@ 59302 @LENGTH@ 28
------------------INS MethodInvocation@@MethodName:get:["luna2"] @TO@ MethodInvocation@@record.get("luna2").asNode().get("name").asString() @AT@ 59302 @LENGTH@ 19
---------------------INS StringLiteral@@"luna2" @TO@ MethodInvocation@@MethodName:get:["luna2"] @AT@ 59313 @LENGTH@ 7
------------------INS SimpleName@@Name:record @TO@ MethodInvocation@@record.get("luna2").asNode().get("name").asString() @AT@ 59302 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@record.get("luna2").asNode().get("name").asString() @AT@ 59343 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEqualTo:["Luna"] @TO@ MethodInvocation@@assertThat(record.get("luna2").asNode().get("name").asString()).isEqualTo("Luna") @AT@ 59355 @LENGTH@ 17
---------------INS StringLiteral@@"Luna" @TO@ SimpleName@@MethodName:isEqualTo:["Luna"] @AT@ 59365 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ MethodInvocation:assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2616 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2616 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @TO@ MethodName:assertEquals:[false, exchange.isFailed(), "The request should be handled sucessfully"] @AT@ 2616 @LENGTH@ 85
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @AT@ 2629 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 2650 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:this.spring.configLocations(this.xml("MultiClientRegistration")).autowire() @TO@ MethodInvocation:this.spring.configLocations(ClientRegistrationsBeanDefinitionParserTests.xml("MultiClientRegistration")).autowire() @AT@ 7668 @LENGTH@ 76
---UPD MethodInvocation@@this.spring.configLocations(this.xml("MultiClientRegistration")).autowire() @TO@ this.spring.configLocations(ClientRegistrationsBeanDefinitionParserTests.xml("MultiClientRegistration")).autowire() @AT@ 7668 @LENGTH@ 75
------UPD MethodInvocation@@MethodName:configLocations:[this.xml("MultiClientRegistration")] @TO@ MethodName:configLocations:[ClientRegistrationsBeanDefinitionParserTests.xml("MultiClientRegistration")] @AT@ 7668 @LENGTH@ 64
---------UPD MethodInvocation@@this.xml("MultiClientRegistration") @TO@ ClientRegistrationsBeanDefinitionParserTests.xml("MultiClientRegistration") @AT@ 7696 @LENGTH@ 35
------------DEL ThisExpression@@this @AT@ 7696 @LENGTH@ 4
------------INS SimpleName@@Name:ClientRegistrationsBeanDefinitionParserTests @TO@ MethodInvocation@@this.xml("MultiClientRegistration") @AT@ 7696 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ MethodInvocation:assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2531 @LENGTH@ 102
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2531 @LENGTH@ 101
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @TO@ MethodName:assertEquals:["3a5c8b1ad448bca04584ecb55b836264", resultExchange.getIn().getHeader(S3Constants.E_TAG)] @AT@ 2531 @LENGTH@ 101
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.E_TAG) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @AT@ 2544 @LENGTH@ 51


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeaders(headers) @TO@ MethodInvocation:exchange.getMessage().setHeaders(headers) @AT@ 2639 @LENGTH@ 38
---UPD MethodInvocation@@exchange.getOut().setHeaders(headers) @TO@ exchange.getMessage().setHeaders(headers) @AT@ 2639 @LENGTH@ 37
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2639 @LENGTH@ 17


MOV MethodDeclaration@@private, voidMethodName:JwtValidators,  @TO@ TypeDeclaration@@[public, final]JwtValidators,  @AT@ 2425 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:assertEquals(body,"Hello World") @TO@ MethodInvocation:assertEquals("Hello World",body) @AT@ 2024 @LENGTH@ 34
---UPD MethodInvocation@@assertEquals(body,"Hello World") @TO@ assertEquals("Hello World",body) @AT@ 2024 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertEquals:[body, "Hello World"] @TO@ MethodName:assertEquals:["Hello World", body] @AT@ 2024 @LENGTH@ 33
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:[body, "Hello World"] @AT@ 2037 @LENGTH@ 13
---------DEL StringLiteral@@"Hello World" @AT@ 2043 @LENGTH@ 13


UPD IfStatement@@if (x.getEventType() != DumpType.EVENT_COMMIT_TXN) {  Task t=createTableTask(tblDesc,x);  if (dependentTasks != null) {    dependentTasks.forEach(task -> t.addDependentTask(task));  }  if (dropTblTask != null) {    dropTblTask.addDependentTask(t);    x.getTasks().add(dropTblTask);  } else {    x.getTasks().add(t);  }} else {  assert dropTblTask == null;  if (dependentTasks != null) {    x.getTasks().addAll(dependentTasks);  }} @TO@ if (x.getEventType() != DumpType.EVENT_COMMIT_TXN) {  if (x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal()) {    tblDesc.setLocation(null);  }  Task t=createTableTask(tblDesc,x);  if (dependentTasks != null) {    dependentTasks.forEach(task -> t.addDependentTask(task));  }  if (dropTblTask != null) {    dropTblTask.addDependentTask(t);    x.getTasks().add(dropTblTask);  } else {    x.getTasks().add(t);  }} else {  assert dropTblTask == null;  if (dependentTasks != null) {    x.getTasks().addAll(dependentTasks);  }} @AT@ 54896 @LENGTH@ 849
---UPD Block@@ThenBody:{  Task t=createTableTask(tblDesc,x);  if (dependentTasks != null) {    dependentTasks.forEach(task -> t.addDependentTask(task));  }  if (dropTblTask != null) {    dropTblTask.addDependentTask(t);    x.getTasks().add(dropTblTask);  } else {    x.getTasks().add(t);  }} @TO@ ThenBody:{  if (x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal()) {    tblDesc.setLocation(null);  }  Task t=createTableTask(tblDesc,x);  if (dependentTasks != null) {    dependentTasks.forEach(task -> t.addDependentTask(task));  }  if (dropTblTask != null) {    dropTblTask.addDependentTask(t);    x.getTasks().add(dropTblTask);  } else {    x.getTasks().add(t);  }} @AT@ 54947 @LENGTH@ 415
------INS IfStatement@@if (x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal()) {  tblDesc.setLocation(null);} @TO@ Block@@ThenBody:{  Task t=createTableTask(tblDesc,x);  if (dependentTasks != null) {    dependentTasks.forEach(task -> t.addDependentTask(task));  }  if (dropTblTask != null) {    dropTblTask.addDependentTask(t);    x.getTasks().add(dropTblTask);  } else {    x.getTasks().add(t);  }} @AT@ 55031 @LENGTH@ 126
---------INS InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal() @TO@ IfStatement@@if (x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal()) {  tblDesc.setLocation(null);} @AT@ 55035 @LENGTH@ 72
------------INS InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal() @AT@ 55035 @LENGTH@ 47
---------------INS MethodInvocation@@x.getEventType() @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE @AT@ 55035 @LENGTH@ 16
------------------INS SimpleName@@Name:x @TO@ MethodInvocation@@x.getEventType() @AT@ 55035 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getEventType:[] @TO@ MethodInvocation@@x.getEventType() @AT@ 55037 @LENGTH@ 14
---------------INS Operator@@== @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE @AT@ 55051 @LENGTH@ 2
---------------INS QualifiedName@@DumpType.EVENT_CREATE_TABLE @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE @AT@ 55055 @LENGTH@ 27
------------------INS SimpleName@@DumpType @TO@ QualifiedName@@DumpType.EVENT_CREATE_TABLE @AT@ 55055 @LENGTH@ 8
------------------INS SimpleName@@EVENT_CREATE_TABLE @TO@ QualifiedName@@DumpType.EVENT_CREATE_TABLE @AT@ 55064 @LENGTH@ 18
------------INS Operator@@&& @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal() @AT@ 55082 @LENGTH@ 2
------------INS PrefixExpression@@!tblDesc.isExternal() @TO@ InfixExpression@@x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal() @AT@ 55086 @LENGTH@ 21
---------------INS Operator@@! @TO@ PrefixExpression@@!tblDesc.isExternal() @AT@ 55086 @LENGTH@ 1
---------------INS MethodInvocation@@tblDesc.isExternal() @TO@ PrefixExpression@@!tblDesc.isExternal() @AT@ 55087 @LENGTH@ 20
------------------INS SimpleName@@Name:tblDesc @TO@ MethodInvocation@@tblDesc.isExternal() @AT@ 55087 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isExternal:[] @TO@ MethodInvocation@@tblDesc.isExternal() @AT@ 55095 @LENGTH@ 12
---------INS Block@@ThenBody:{  tblDesc.setLocation(null);} @TO@ IfStatement@@if (x.getEventType() == DumpType.EVENT_CREATE_TABLE && !tblDesc.isExternal()) {  tblDesc.setLocation(null);} @AT@ 55109 @LENGTH@ 48
------------INS ExpressionStatement@@MethodInvocation:tblDesc.setLocation(null) @TO@ Block@@ThenBody:{  tblDesc.setLocation(null);} @AT@ 55121 @LENGTH@ 26
---------------INS MethodInvocation@@tblDesc.setLocation(null) @TO@ ExpressionStatement@@MethodInvocation:tblDesc.setLocation(null) @AT@ 55121 @LENGTH@ 25
------------------INS SimpleName@@Name:tblDesc @TO@ MethodInvocation@@tblDesc.setLocation(null) @AT@ 55121 @LENGTH@ 7
------------------INS SimpleName@@MethodName:setLocation:[null] @TO@ MethodInvocation@@tblDesc.setLocation(null) @AT@ 55129 @LENGTH@ 17
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setLocation:[null] @AT@ 55141 @LENGTH@ 4


DEL FieldDeclaration@@private, final, Log, [logger=LogFactory.getLog(getClass())] @AT@ 2115 @LENGTH@ 57
---DEL Modifier@@private @AT@ 2115 @LENGTH@ 7
---DEL Modifier@@final @AT@ 2123 @LENGTH@ 5
---DEL SimpleType@@Log @AT@ 2129 @LENGTH@ 3
---DEL VariableDeclarationFragment@@logger=LogFactory.getLog(getClass()) @AT@ 2133 @LENGTH@ 38
------DEL SimpleName@@logger @AT@ 2133 @LENGTH@ 6
------DEL MethodInvocation@@LogFactory.getLog(getClass()) @AT@ 2142 @LENGTH@ 29
---------DEL SimpleName@@Name:LogFactory @AT@ 2142 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[getClass()] @AT@ 2153 @LENGTH@ 18
------------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 2160 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1827 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1827 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1843 @LENGTH@ 21


UPD VariableDeclarationStatement@@org.apache.camel.Message out=exchange.getOut(); @TO@ org.apache.camel.Message out=exchange.getMessage(); @AT@ 2244 @LENGTH@ 49
---UPD VariableDeclarationFragment@@out=exchange.getOut() @TO@ out=exchange.getMessage() @AT@ 2269 @LENGTH@ 23
------UPD MethodInvocation@@exchange.getOut() @TO@ exchange.getMessage() @AT@ 2275 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2284 @LENGTH@ 8


UPD MethodDeclaration@@private, Object, MethodName:handleClose, Channel channel, boolean transactional, MethodInvocation invocation, Throwable,  @TO@ private, void, MethodName:handleClose, Channel channel, boolean transactional,  @AT@ 5804 @LENGTH@ 494
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, Object, MethodName:handleClose, Channel channel, boolean transactional, MethodInvocation invocation, Throwable,  @AT@ 5763 @LENGTH@ 4
---DEL SimpleType@@Object @AT@ 5812 @LENGTH@ 6
---DEL SingleVariableDeclaration@@MethodInvocation invocation @AT@ 5871 @LENGTH@ 27
------DEL SimpleType@@MethodInvocation @AT@ 5871 @LENGTH@ 16
------DEL SimpleName@@invocation @AT@ 5888 @LENGTH@ 10
---DEL SimpleType@@Throwable @AT@ 5911 @LENGTH@ 9
---UPD IfStatement@@if (ConnectionWrapper.this.channels.get() == null) {  return invocation.proceed();} else {  if (RabbitUtils.isPhysicalCloseRequired()) {    physicalClose(channel);    if (transactional) {      this.txChannels.remove();    } else {      this.channels.remove();    }    RabbitUtils.clearPhysicalCloseRequired();  }  return null;} @TO@ if (ConnectionWrapper.this.channels.get() == null) {  physicalClose(channel);} else {  if (RabbitUtils.isPhysicalCloseRequired()) {    physicalClose(channel);    if (transactional) {      this.txChannels.remove();    } else {      this.channels.remove();    }    RabbitUtils.clearPhysicalCloseRequired();  }} @AT@ 5927 @LENGTH@ 367
------UPD Block@@ThenBody:{  return invocation.proceed();} @TO@ ThenBody:{  physicalClose(channel);} @AT@ 5978 @LENGTH@ 39
---------INS ExpressionStatement@@MethodInvocation:physicalClose(channel) @TO@ Block@@ThenBody:{  return invocation.proceed();} @AT@ 5883 @LENGTH@ 23
------------INS MethodInvocation@@physicalClose(channel) @TO@ ExpressionStatement@@MethodInvocation:physicalClose(channel) @AT@ 5883 @LENGTH@ 22
---------------MOV SimpleName@@MethodName:proceed:[] @TO@ MethodInvocation@@physicalClose(channel) @AT@ 6002 @LENGTH@ 9
------------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:proceed:[] @AT@ 5897 @LENGTH@ 7
------------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:proceed:[] @AT@ 5897 @LENGTH@ 7
---------DEL ReturnStatement@@MethodInvocation:invocation.proceed() @AT@ 5984 @LENGTH@ 28
------------DEL MethodInvocation@@invocation.proceed() @AT@ 5991 @LENGTH@ 20
---------------DEL SimpleName@@Name:invocation @AT@ 5991 @LENGTH@ 10
------UPD Block@@ElseBody:{  if (RabbitUtils.isPhysicalCloseRequired()) {    physicalClose(channel);    if (transactional) {      this.txChannels.remove();    } else {      this.channels.remove();    }    RabbitUtils.clearPhysicalCloseRequired();  }  return null;} @TO@ ElseBody:{  if (RabbitUtils.isPhysicalCloseRequired()) {    physicalClose(channel);    if (transactional) {      this.txChannels.remove();    } else {      this.channels.remove();    }    RabbitUtils.clearPhysicalCloseRequired();  }} @AT@ 6026 @LENGTH@ 268
---------DEL ReturnStatement@@NullLiteral:null @AT@ 6277 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 6284 @LENGTH@ 4


UPD SwitchStatement@@switch (method) {case "close":  return handleClose(channel,transactional,invocation);case "getTargetChannel":return channel;case "isTransactional":return transactional;case "confirmSelect":confirmSelected.set(true);return channel.confirmSelect();case "isConfirmSelected":return confirmSelected.get();} @TO@ switch (method) {case "close":  handleClose(channel,transactional);return null;case "getTargetChannel":return channel;case "isTransactional":return transactional;case "confirmSelect":confirmSelected.set(true);return channel.confirmSelect();case "isConfirmSelected":return confirmSelected.get();} @AT@ 4961 @LENGTH@ 402
---INS ExpressionStatement@@MethodInvocation:handleClose(channel,transactional) @TO@ SwitchStatement@@switch (method) {case "close":  return handleClose(channel,transactional,invocation);case "getTargetChannel":return channel;case "isTransactional":return transactional;case "confirmSelect":confirmSelected.set(true);return channel.confirmSelect();case "isConfirmSelected":return confirmSelected.get();} @AT@ 4957 @LENGTH@ 36
------INS MethodInvocation@@handleClose(channel,transactional) @TO@ ExpressionStatement@@MethodInvocation:handleClose(channel,transactional) @AT@ 4957 @LENGTH@ 35
---------MOV SimpleName@@MethodName:handleClose:[channel, transactional, invocation] @TO@ MethodInvocation@@handleClose(channel,transactional) @AT@ 5015 @LENGTH@ 47
---INS ReturnStatement@@NullLiteral:null @TO@ SwitchStatement@@switch (method) {case "close":  return handleClose(channel,transactional,invocation);case "getTargetChannel":return channel;case "isTransactional":return transactional;case "confirmSelect":confirmSelected.set(true);return channel.confirmSelect();case "isConfirmSelected":return confirmSelected.get();} @AT@ 5002 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5009 @LENGTH@ 4
---DEL ReturnStatement@@MethodInvocation:handleClose(channel,transactional,invocation) @AT@ 5008 @LENGTH@ 55
------DEL MethodInvocation@@handleClose(channel,transactional,invocation) @AT@ 5015 @LENGTH@ 47


UPD TryStatement@@try {  XZUtils.setCacheXZAvailability(false);  assertEquals(XZUtils.CachedAvailability.DONT_CACHE,XZUtils.getCachedXZAvailability());  XZUtils.setCacheXZAvailability(true);  assertEquals(XZUtils.CachedAvailability.CACHED_AVAILABLE,XZUtils.getCachedXZAvailability());}  finally {  XZUtils.setCacheXZAvailability(true);} @TO@ try {  XZUtils.setCacheXZAvailablity(false);  assertEquals(XZUtils.CachedAvailability.DONT_CACHE,XZUtils.getCachedXZAvailability());  XZUtils.setCacheXZAvailablity(true);  assertEquals(XZUtils.CachedAvailability.CACHED_AVAILABLE,XZUtils.getCachedXZAvailability());}  finally {  XZUtils.setCacheXZAvailablity(true);} @AT@ 3832 @LENGTH@ 392
---UPD ExpressionStatement@@MethodInvocation:XZUtils.setCacheXZAvailability(false) @TO@ MethodInvocation:XZUtils.setCacheXZAvailablity(false) @AT@ 3850 @LENGTH@ 38
------UPD MethodInvocation@@XZUtils.setCacheXZAvailability(false) @TO@ XZUtils.setCacheXZAvailablity(false) @AT@ 3850 @LENGTH@ 37
---------UPD SimpleName@@MethodName:setCacheXZAvailability:[false] @TO@ MethodName:setCacheXZAvailablity:[false] @AT@ 3858 @LENGTH@ 29
---UPD ExpressionStatement@@MethodInvocation:XZUtils.setCacheXZAvailability(true) @TO@ MethodInvocation:XZUtils.setCacheXZAvailablity(true) @AT@ 4001 @LENGTH@ 37
------UPD MethodInvocation@@XZUtils.setCacheXZAvailability(true) @TO@ XZUtils.setCacheXZAvailablity(true) @AT@ 4001 @LENGTH@ 36
---------UPD SimpleName@@MethodName:setCacheXZAvailability:[true] @TO@ MethodName:setCacheXZAvailablity:[true] @AT@ 4009 @LENGTH@ 28
---UPD Block@@FinallyBody:{  XZUtils.setCacheXZAvailability(true);} @TO@ FinallyBody:{  XZUtils.setCacheXZAvailablity(true);} @AT@ 4163 @LENGTH@ 61
------UPD ExpressionStatement@@MethodInvocation:XZUtils.setCacheXZAvailability(true) @TO@ MethodInvocation:XZUtils.setCacheXZAvailablity(true) @AT@ 4177 @LENGTH@ 37
---------UPD MethodInvocation@@XZUtils.setCacheXZAvailability(true) @TO@ XZUtils.setCacheXZAvailablity(true) @AT@ 4177 @LENGTH@ 36
------------UPD SimpleName@@MethodName:setCacheXZAvailability:[true] @TO@ MethodName:setCacheXZAvailablity:[true] @AT@ 4185 @LENGTH@ 28


DEL EnhancedForStatement@@for (Map.Entry<String,String> entry : this.userProperties.entrySet()) {  String name=entry.getKey();  String property=entry.getValue();  editor.setAsText(property);  UserAttribute attr=(UserAttribute)editor.getValue();  if (attr == null) {    throw new IllegalStateException("The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");  }  UserDetails user=User.withUsername(name).password(attr.getPassword()).disabled(!attr.isEnabled()).authorities(attr.getAuthorities()).build();  users.add(user);} @AT@ 2119 @LENGTH@ 649
---DEL SingleVariableDeclaration@@Map.Entry<String,String> entry @AT@ 2124 @LENGTH@ 31
------DEL ParameterizedType@@Map.Entry<String,String> @AT@ 2124 @LENGTH@ 25
---------DEL SimpleType@@Map.Entry @AT@ 2124 @LENGTH@ 9
---------DEL SimpleType@@String @AT@ 2134 @LENGTH@ 6
---------DEL SimpleType@@String @AT@ 2142 @LENGTH@ 6
------DEL SimpleName@@entry @AT@ 2150 @LENGTH@ 5
---DEL MethodInvocation@@this.userProperties.entrySet() @AT@ 2158 @LENGTH@ 30
------DEL SimpleName@@MethodName:entrySet:[] @AT@ 2178 @LENGTH@ 10
---DEL VariableDeclarationStatement@@String name=entry.getKey(); @AT@ 2195 @LENGTH@ 29
------DEL SimpleType@@String @AT@ 2195 @LENGTH@ 6
------DEL VariableDeclarationFragment@@name=entry.getKey() @AT@ 2202 @LENGTH@ 21
---------DEL MethodInvocation@@entry.getKey() @AT@ 2209 @LENGTH@ 14
------------DEL SimpleName@@Name:entry @AT@ 2209 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getKey:[] @AT@ 2215 @LENGTH@ 8
---DEL VariableDeclarationStatement@@String property=entry.getValue(); @AT@ 2228 @LENGTH@ 35
------DEL SimpleType@@String @AT@ 2228 @LENGTH@ 6
------DEL VariableDeclarationFragment@@property=entry.getValue() @AT@ 2235 @LENGTH@ 27
---------DEL MethodInvocation@@entry.getValue() @AT@ 2246 @LENGTH@ 16
------------DEL SimpleName@@Name:entry @AT@ 2246 @LENGTH@ 5
------------DEL SimpleName@@MethodName:getValue:[] @AT@ 2252 @LENGTH@ 10
---DEL IfStatement@@if (attr == null) {  throw new IllegalStateException("The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");} @AT@ 2357 @LENGTH@ 179
------DEL InfixExpression@@attr == null @AT@ 2361 @LENGTH@ 12
------DEL Block@@ThenBody:{  throw new IllegalStateException("The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");} @AT@ 2375 @LENGTH@ 161
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @AT@ 2381 @LENGTH@ 150
------------DEL ClassInstanceCreation@@IllegalStateException["The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails."] @AT@ 2387 @LENGTH@ 143
---------------DEL New@@new @AT@ 2387 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2391 @LENGTH@ 21
---------------DEL InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2413 @LENGTH@ 116
---DEL VariableDeclarationStatement@@UserDetails user=User.withUsername(name).password(attr.getPassword()).disabled(!attr.isEnabled()).authorities(attr.getAuthorities()).build(); @AT@ 2561 @LENGTH@ 163
------DEL VariableDeclarationFragment@@user=User.withUsername(name).password(attr.getPassword()).disabled(!attr.isEnabled()).authorities(attr.getAuthorities()).build() @AT@ 2573 @LENGTH@ 150
---------DEL MethodInvocation@@User.withUsername(name).password(attr.getPassword()).disabled(!attr.isEnabled()).authorities(attr.getAuthorities()).build() @AT@ 2580 @LENGTH@ 143
------------DEL MethodInvocation@@MethodName:authorities:[attr.getAuthorities()] @AT@ 2580 @LENGTH@ 130
---------------DEL MethodInvocation@@attr.getAuthorities() @AT@ 2688 @LENGTH@ 21
------------DEL MethodInvocation@@MethodName:disabled:[!attr.isEnabled()] @AT@ 2580 @LENGTH@ 90
------------DEL MethodInvocation@@MethodName:password:[attr.getPassword()] @AT@ 2580 @LENGTH@ 57
---------------DEL MethodInvocation@@attr.getPassword() @AT@ 2618 @LENGTH@ 18
------------DEL MethodInvocation@@MethodName:withUsername:[name] @AT@ 2580 @LENGTH@ 23
---------------DEL SimpleName@@name @AT@ 2598 @LENGTH@ 4
------------DEL SimpleName@@Name:User @AT@ 2580 @LENGTH@ 4
------------DEL SimpleName@@MethodName:build:[] @AT@ 2716 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:users.add(user) @AT@ 2728 @LENGTH@ 16


INS FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @TO@ TypeDeclaration@@[public]RemoveAuthorizedClientOAuth2AuthorizationFailureHandler, [OAuth2AuthorizationFailureHandler] @AT@ 1841 @LENGTH@ 77
---MOV Modifier@@public @TO@ FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @AT@ 1834 @LENGTH@ 6
---MOV Modifier@@static @TO@ FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @AT@ 1841 @LENGTH@ 6
---MOV Modifier@@final @TO@ FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @AT@ 1848 @LENGTH@ 5
---MOV ParameterizedType@@Set<String> @TO@ FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @AT@ 1854 @LENGTH@ 11
---INS VariableDeclarationFragment@@DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES @TO@ FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES] @AT@ 1873 @LENGTH@ 44
------MOV SimpleName@@DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES @TO@ VariableDeclarationFragment@@DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES @AT@ 1866 @LENGTH@ 44


UPD ReturnStatement@@MethodInvocation:Arrays.<ChannelProcessor>asList(insecureChannelProcessor,secureChannelProcessor) @TO@ MethodInvocation:Arrays.asList(insecureChannelProcessor,secureChannelProcessor) @AT@ 5473 @LENGTH@ 89
---UPD MethodInvocation@@Arrays.<ChannelProcessor>asList(insecureChannelProcessor,secureChannelProcessor) @TO@ Arrays.asList(insecureChannelProcessor,secureChannelProcessor) @AT@ 5480 @LENGTH@ 81


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false").threads(20).to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @TO@ MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false").threads(20).to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @AT@ 4252 @LENGTH@ 485
---UPD MethodInvocation@@from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false").threads(20).to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @TO@ from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false").threads(20).to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @AT@ 4252 @LENGTH@ 484
------UPD MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false"] @TO@ MethodName:to:[ExchangePattern.InOut, "sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false"] @AT@ 4252 @LENGTH@ 360
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=10&producerCount=20&synchronous=false"] @AT@ 4428 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4428 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4444 @LENGTH@ 5


UPD TryStatement@@try {  ZstdUtils.setCacheZstdAvailability(false);  assertEquals(ZstdUtils.CachedAvailability.DONT_CACHE,ZstdUtils.getCachedZstdAvailability());  assertTrue(ZstdUtils.isZstdCompressionAvailable());}  finally {  ZstdUtils.setCacheZstdAvailability(true);} @TO@ try {  ZstdUtils.setCacheZstdAvailablity(false);  assertEquals(ZstdUtils.CachedAvailability.DONT_CACHE,ZstdUtils.getCachedZstdAvailability());  assertTrue(ZstdUtils.isZstdCompressionAvailable());}  finally {  ZstdUtils.setCacheZstdAvailablity(true);} @AT@ 2715 @LENGTH@ 314
---UPD ExpressionStatement@@MethodInvocation:ZstdUtils.setCacheZstdAvailability(false) @TO@ MethodInvocation:ZstdUtils.setCacheZstdAvailablity(false) @AT@ 2733 @LENGTH@ 42
------UPD MethodInvocation@@ZstdUtils.setCacheZstdAvailability(false) @TO@ ZstdUtils.setCacheZstdAvailablity(false) @AT@ 2733 @LENGTH@ 41
---------UPD SimpleName@@MethodName:setCacheZstdAvailability:[false] @TO@ MethodName:setCacheZstdAvailablity:[false] @AT@ 2743 @LENGTH@ 31
---UPD Block@@FinallyBody:{  ZstdUtils.setCacheZstdAvailability(true);} @TO@ FinallyBody:{  ZstdUtils.setCacheZstdAvailablity(true);} @AT@ 2964 @LENGTH@ 65
------UPD ExpressionStatement@@MethodInvocation:ZstdUtils.setCacheZstdAvailability(true) @TO@ MethodInvocation:ZstdUtils.setCacheZstdAvailablity(true) @AT@ 2978 @LENGTH@ 41
---------UPD MethodInvocation@@ZstdUtils.setCacheZstdAvailability(true) @TO@ ZstdUtils.setCacheZstdAvailablity(true) @AT@ 2978 @LENGTH@ 40
------------UPD SimpleName@@MethodName:setCacheZstdAvailability:[true] @TO@ MethodName:setCacheZstdAvailablity:[true] @AT@ 2988 @LENGTH@ 30


UPD ReturnStatement@@MethodInvocation:Mono.fromRunnable(() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  if (logger.isDebugEnabled()) {
    logger.debug("Redirecting to '" + newLocation + "'");
  }
  response.getHeaders().setLocation(newLocation);
}
) @TO@ MethodInvocation:Mono.fromRunnable(() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  logger.debug(LogMessage.format("Redirecting to '%s'",newLocation));
  response.getHeaders().setLocation(newLocation);
}
) @AT@ 1619 @LENGTH@ 344
---UPD MethodInvocation@@Mono.fromRunnable(() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  if (logger.isDebugEnabled()) {
    logger.debug("Redirecting to '" + newLocation + "'");
  }
  response.getHeaders().setLocation(newLocation);
}
) @TO@ Mono.fromRunnable(() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  logger.debug(LogMessage.format("Redirecting to '%s'",newLocation));
  response.getHeaders().setLocation(newLocation);
}
) @AT@ 1626 @LENGTH@ 336
------UPD SimpleName@@MethodName:fromRunnable:[() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  if (logger.isDebugEnabled()) {
    logger.debug("Redirecting to '" + newLocation + "'");
  }
  response.getHeaders().setLocation(newLocation);
}
] @TO@ MethodName:fromRunnable:[() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  logger.debug(LogMessage.format("Redirecting to '%s'",newLocation));
  response.getHeaders().setLocation(newLocation);
}
] @AT@ 1631 @LENGTH@ 331
---------UPD LambdaExpression@@() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  if (logger.isDebugEnabled()) {
    logger.debug("Redirecting to '" + newLocation + "'");
  }
  response.getHeaders().setLocation(newLocation);
}
 @TO@ () -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  logger.debug(LogMessage.format("Redirecting to '%s'",newLocation));
  response.getHeaders().setLocation(newLocation);
}
 @AT@ 1644 @LENGTH@ 317
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Redirecting to '" + newLocation + "'");} @AT@ 1813 @LENGTH@ 93
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 1817 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 1817 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1824 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Redirecting to '" + newLocation + "'");} @AT@ 1842 @LENGTH@ 64
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Redirecting to '" + newLocation + "'") @AT@ 1848 @LENGTH@ 53
------------INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Redirecting to '%s'",newLocation)) @TO@ LambdaExpression@@() -> {
  ServerHttpResponse response=exchange.getResponse();
  response.setStatusCode(this.httpStatus);
  URI newLocation=createLocation(exchange,location);
  if (logger.isDebugEnabled()) {
    logger.debug("Redirecting to '" + newLocation + "'");
  }
  response.getHeaders().setLocation(newLocation);
}
 @AT@ 1861 @LENGTH@ 68
---------------MOV MethodInvocation@@logger.debug("Redirecting to '" + newLocation + "'") @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Redirecting to '%s'",newLocation)) @AT@ 1848 @LENGTH@ 52
------------------UPD SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @TO@ MethodName:format:["Redirecting to '%s'", newLocation] @AT@ 1855 @LENGTH@ 45
------------------INS SimpleName@@MethodName:debug:[LogMessage.format("Redirecting to '%s'",newLocation)] @TO@ MethodInvocation@@logger.debug("Redirecting to '" + newLocation + "'") @AT@ 1868 @LENGTH@ 60
---------------------INS MethodInvocation@@LogMessage.format("Redirecting to '%s'",newLocation) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Redirecting to '%s'",newLocation)] @AT@ 1874 @LENGTH@ 53
------------------------MOV SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @TO@ MethodInvocation@@LogMessage.format("Redirecting to '%s'",newLocation) @AT@ 1855 @LENGTH@ 45
---------------------------DEL InfixExpression@@"Redirecting to '" + newLocation + "'" @AT@ 1861 @LENGTH@ 38
------------------------------DEL StringLiteral@@"Redirecting to '" @AT@ 1861 @LENGTH@ 18
------------------------------DEL Operator@@+ @AT@ 1879 @LENGTH@ 1
------------------------------DEL SimpleName@@newLocation @AT@ 1882 @LENGTH@ 11
------------------------------DEL StringLiteral@@"'" @AT@ 1896 @LENGTH@ 3
---------------------------INS StringLiteral@@"Redirecting to '%s'" @TO@ SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @AT@ 1892 @LENGTH@ 21
---------------------------INS SimpleName@@newLocation @TO@ SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @AT@ 1915 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @TO@ MethodInvocation@@LogMessage.format("Redirecting to '%s'",newLocation) @AT@ 1855 @LENGTH@ 45
---------------------------DEL InfixExpression@@"Redirecting to '" + newLocation + "'" @AT@ 1861 @LENGTH@ 38
------------------------------DEL StringLiteral@@"Redirecting to '" @AT@ 1861 @LENGTH@ 18
------------------------------DEL Operator@@+ @AT@ 1879 @LENGTH@ 1
------------------------------DEL SimpleName@@newLocation @AT@ 1882 @LENGTH@ 11
------------------------------DEL StringLiteral@@"'" @AT@ 1896 @LENGTH@ 3
---------------------------INS StringLiteral@@"Redirecting to '%s'" @TO@ SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @AT@ 1892 @LENGTH@ 21
---------------------------INS SimpleName@@newLocation @TO@ SimpleName@@MethodName:debug:["Redirecting to '" + newLocation + "'"] @AT@ 1915 @LENGTH@ 11
------------------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Redirecting to '%s'",newLocation) @AT@ 1874 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(123),exchange.getIn().getHeader("bar",234,Integer.class)) @TO@ MethodInvocation:assertEquals(Integer.valueOf(123),exchange.getIn().getHeader("bar",234,Integer.class)) @AT@ 4348 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(new Integer(123),exchange.getIn().getHeader("bar",234,Integer.class)) @TO@ assertEquals(Integer.valueOf(123),exchange.getIn().getHeader("bar",234,Integer.class)) @AT@ 4348 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[new Integer(123), exchange.getIn().getHeader("bar",234,Integer.class)] @TO@ MethodName:assertEquals:[Integer.valueOf(123), exchange.getIn().getHeader("bar",234,Integer.class)] @AT@ 4348 @LENGTH@ 85
---------DEL ClassInstanceCreation@@Integer[123] @AT@ 4361 @LENGTH@ 16
------------DEL New@@new @AT@ 4361 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 4365 @LENGTH@ 7
------------DEL NumberLiteral@@123 @AT@ 4373 @LENGTH@ 3
---------INS MethodInvocation@@Integer.valueOf(123) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(123), exchange.getIn().getHeader("bar",234,Integer.class)] @AT@ 4365 @LENGTH@ 20
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(123) @AT@ 4365 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[123] @TO@ MethodInvocation@@Integer.valueOf(123) @AT@ 4373 @LENGTH@ 12
---------------INS NumberLiteral@@123 @TO@ SimpleName@@MethodName:valueOf:[123] @AT@ 4381 @LENGTH@ 3


UPD MethodDeclaration@@public, int, MethodName:vote, Authentication authentication, FilterInvocation fi, Collection<ConfigAttribute> attributes,  @TO@ public, int, MethodName:vote, Authentication authentication, FilterInvocation filterInvocation, Collection<ConfigAttribute> attributes,  @AT@ 1476 @LENGTH@ 564
---UPD SingleVariableDeclaration@@FilterInvocation fi @TO@ FilterInvocation filterInvocation @AT@ 1523 @LENGTH@ 19
------UPD SimpleName@@fi @TO@ filterInvocation @AT@ 1540 @LENGTH@ 2
---DEL AssertStatement@@InfixExpression:authentication != null @AT@ 1588 @LENGTH@ 30
------DEL InfixExpression@@authentication != null @AT@ 1595 @LENGTH@ 22
---------DEL SimpleName@@authentication @AT@ 1595 @LENGTH@ 14
---------DEL Operator@@!= @AT@ 1609 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 1613 @LENGTH@ 4
---DEL AssertStatement@@InfixExpression:fi != null @AT@ 1621 @LENGTH@ 18
------DEL InfixExpression@@fi != null @AT@ 1628 @LENGTH@ 10
---------DEL SimpleName@@fi @AT@ 1628 @LENGTH@ 2
---------DEL Operator@@!= @AT@ 1630 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 1634 @LENGTH@ 4
---DEL AssertStatement@@InfixExpression:attributes != null @AT@ 1642 @LENGTH@ 26
------DEL InfixExpression@@attributes != null @AT@ 1649 @LENGTH@ 18
---------DEL SimpleName@@attributes @AT@ 1649 @LENGTH@ 10
---------DEL Operator@@!= @AT@ 1659 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 1663 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(authentication,"authentication must not be null") @TO@ MethodDeclaration@@public, int, MethodName:vote, Authentication authentication, FilterInvocation fi, Collection<ConfigAttribute> attributes,  @AT@ 1645 @LENGTH@ 66
------INS MethodInvocation@@Assert.notNull(authentication,"authentication must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(authentication,"authentication must not be null") @AT@ 1645 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(authentication,"authentication must not be null") @AT@ 1645 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[authentication, "authentication must not be null"] @TO@ MethodInvocation@@Assert.notNull(authentication,"authentication must not be null") @AT@ 1652 @LENGTH@ 58
------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:notNull:[authentication, "authentication must not be null"] @AT@ 1660 @LENGTH@ 14
------------INS StringLiteral@@"authentication must not be null" @TO@ SimpleName@@MethodName:notNull:[authentication, "authentication must not be null"] @AT@ 1676 @LENGTH@ 33
---UPD VariableDeclarationStatement@@WebExpressionConfigAttribute weca=findConfigAttribute(attributes); @TO@ WebExpressionConfigAttribute webExpressionConfigAttribute=findConfigAttribute(attributes); @AT@ 1672 @LENGTH@ 68
------UPD VariableDeclarationFragment@@weca=findConfigAttribute(attributes) @TO@ webExpressionConfigAttribute=findConfigAttribute(attributes) @AT@ 1701 @LENGTH@ 38
---------UPD SimpleName@@weca @TO@ webExpressionConfigAttribute @AT@ 1701 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(filterInvocation,"filterInvocation must not be null") @TO@ MethodDeclaration@@public, int, MethodName:vote, Authentication authentication, FilterInvocation fi, Collection<ConfigAttribute> attributes,  @AT@ 1714 @LENGTH@ 70
------INS MethodInvocation@@Assert.notNull(filterInvocation,"filterInvocation must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(filterInvocation,"filterInvocation must not be null") @AT@ 1714 @LENGTH@ 69
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(filterInvocation,"filterInvocation must not be null") @AT@ 1714 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[filterInvocation, "filterInvocation must not be null"] @TO@ MethodInvocation@@Assert.notNull(filterInvocation,"filterInvocation must not be null") @AT@ 1721 @LENGTH@ 62
------------INS SimpleName@@filterInvocation @TO@ SimpleName@@MethodName:notNull:[filterInvocation, "filterInvocation must not be null"] @AT@ 1729 @LENGTH@ 16
------------INS StringLiteral@@"filterInvocation must not be null" @TO@ SimpleName@@MethodName:notNull:[filterInvocation, "filterInvocation must not be null"] @AT@ 1747 @LENGTH@ 35
---UPD IfStatement@@if (weca == null) {  return ACCESS_ABSTAIN;} @TO@ if (webExpressionConfigAttribute == null) {  return ACCESS_ABSTAIN;} @AT@ 1744 @LENGTH@ 49
------UPD InfixExpression@@weca == null @TO@ webExpressionConfigAttribute == null @AT@ 1748 @LENGTH@ 12
---------UPD SimpleName@@weca @TO@ webExpressionConfigAttribute @AT@ 1748 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(attributes,"attributes must not be null") @TO@ MethodDeclaration@@public, int, MethodName:vote, Authentication authentication, FilterInvocation fi, Collection<ConfigAttribute> attributes,  @AT@ 1787 @LENGTH@ 58
------INS MethodInvocation@@Assert.notNull(attributes,"attributes must not be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(attributes,"attributes must not be null") @AT@ 1787 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(attributes,"attributes must not be null") @AT@ 1787 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[attributes, "attributes must not be null"] @TO@ MethodInvocation@@Assert.notNull(attributes,"attributes must not be null") @AT@ 1794 @LENGTH@ 50
------------INS SimpleName@@attributes @TO@ SimpleName@@MethodName:notNull:[attributes, "attributes must not be null"] @AT@ 1802 @LENGTH@ 10
------------INS StringLiteral@@"attributes must not be null" @TO@ SimpleName@@MethodName:notNull:[attributes, "attributes must not be null"] @AT@ 1814 @LENGTH@ 29
---UPD VariableDeclarationStatement@@EvaluationContext ctx=this.expressionHandler.createEvaluationContext(authentication,fi); @TO@ EvaluationContext ctx=webExpressionConfigAttribute.postProcess(this.expressionHandler.createEvaluationContext(authentication,filterInvocation),filterInvocation); @AT@ 1797 @LENGTH@ 91
------UPD VariableDeclarationFragment@@ctx=this.expressionHandler.createEvaluationContext(authentication,fi) @TO@ ctx=webExpressionConfigAttribute.postProcess(this.expressionHandler.createEvaluationContext(authentication,filterInvocation),filterInvocation) @AT@ 1815 @LENGTH@ 72
---------DEL MethodInvocation@@this.expressionHandler.createEvaluationContext(authentication,fi) @AT@ 1821 @LENGTH@ 66
---------INS MethodInvocation@@webExpressionConfigAttribute.postProcess(this.expressionHandler.createEvaluationContext(authentication,filterInvocation),filterInvocation) @TO@ VariableDeclarationFragment@@ctx=this.expressionHandler.createEvaluationContext(authentication,fi) @AT@ 2043 @LENGTH@ 145
------------INS SimpleName@@Name:webExpressionConfigAttribute @TO@ MethodInvocation@@webExpressionConfigAttribute.postProcess(this.expressionHandler.createEvaluationContext(authentication,filterInvocation),filterInvocation) @AT@ 2043 @LENGTH@ 28
------------INS SimpleName@@MethodName:postProcess:[this.expressionHandler.createEvaluationContext(authentication,filterInvocation), filterInvocation] @TO@ MethodInvocation@@webExpressionConfigAttribute.postProcess(this.expressionHandler.createEvaluationContext(authentication,filterInvocation),filterInvocation) @AT@ 2072 @LENGTH@ 116
---------------INS MethodInvocation@@this.expressionHandler.createEvaluationContext(authentication,filterInvocation) @TO@ SimpleName@@MethodName:postProcess:[this.expressionHandler.createEvaluationContext(authentication,filterInvocation), filterInvocation] @AT@ 2089 @LENGTH@ 80
------------------MOV FieldAccess@@this.expressionHandler @TO@ MethodInvocation@@this.expressionHandler.createEvaluationContext(authentication,filterInvocation) @AT@ 1821 @LENGTH@ 22
------------------MOV SimpleName@@MethodName:createEvaluationContext:[authentication, fi] @TO@ MethodInvocation@@this.expressionHandler.createEvaluationContext(authentication,filterInvocation) @AT@ 1844 @LENGTH@ 43
---------------------UPD SimpleName@@fi @TO@ filterInvocation @AT@ 1884 @LENGTH@ 2
---------------INS SimpleName@@filterInvocation @TO@ SimpleName@@MethodName:postProcess:[this.expressionHandler.createEvaluationContext(authentication,filterInvocation), filterInvocation] @AT@ 2171 @LENGTH@ 16
---DEL ExpressionStatement@@Assignment:ctx=weca.postProcess(ctx,fi) @AT@ 1891 @LENGTH@ 32
------DEL Assignment@@ctx=weca.postProcess(ctx,fi) @AT@ 1891 @LENGTH@ 31
---------DEL SimpleName@@ctx @AT@ 1891 @LENGTH@ 3
---------DEL Operator@@= @AT@ 1894 @LENGTH@ 1
---------DEL MethodInvocation@@weca.postProcess(ctx,fi) @AT@ 1897 @LENGTH@ 25
------------DEL SimpleName@@Name:weca @AT@ 1897 @LENGTH@ 4
------------DEL SimpleName@@MethodName:postProcess:[ctx, fi] @AT@ 1902 @LENGTH@ 20
---------------DEL SimpleName@@ctx @AT@ 1914 @LENGTH@ 3
---------------DEL SimpleName@@fi @AT@ 1919 @LENGTH@ 2
---UPD ReturnStatement@@ConditionalExpression:ExpressionUtils.evaluateAsBoolean(weca.getAuthorizeExpression(),ctx) ? ACCESS_GRANTED : ACCESS_DENIED @TO@ ConditionalExpression:ExpressionUtils.evaluateAsBoolean(webExpressionConfigAttribute.getAuthorizeExpression(),ctx) ? ACCESS_GRANTED : ACCESS_DENIED @AT@ 1927 @LENGTH@ 110
------UPD ConditionalExpression@@ExpressionUtils.evaluateAsBoolean(weca.getAuthorizeExpression(),ctx) ? ACCESS_GRANTED : ACCESS_DENIED @TO@ ExpressionUtils.evaluateAsBoolean(webExpressionConfigAttribute.getAuthorizeExpression(),ctx) ? ACCESS_GRANTED : ACCESS_DENIED @AT@ 1934 @LENGTH@ 102
---------UPD MethodInvocation@@ExpressionUtils.evaluateAsBoolean(weca.getAuthorizeExpression(),ctx) @TO@ ExpressionUtils.evaluateAsBoolean(webExpressionConfigAttribute.getAuthorizeExpression(),ctx) @AT@ 1934 @LENGTH@ 69
------------UPD SimpleName@@MethodName:evaluateAsBoolean:[weca.getAuthorizeExpression(), ctx] @TO@ MethodName:evaluateAsBoolean:[webExpressionConfigAttribute.getAuthorizeExpression(), ctx] @AT@ 1950 @LENGTH@ 53
---------------UPD MethodInvocation@@weca.getAuthorizeExpression() @TO@ webExpressionConfigAttribute.getAuthorizeExpression() @AT@ 1968 @LENGTH@ 29
------------------UPD SimpleName@@Name:weca @TO@ Name:webExpressionConfigAttribute @AT@ 1968 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:localServer=new HttpTestServer(null,null) @TO@ Assignment:localServer=new HttpTestServer() @AT@ 2071 @LENGTH@ 45
---UPD Assignment@@localServer=new HttpTestServer(null,null) @TO@ localServer=new HttpTestServer() @AT@ 2071 @LENGTH@ 44
------UPD ClassInstanceCreation@@HttpTestServer[null, null] @TO@ HttpTestServer[] @AT@ 2085 @LENGTH@ 30
---------DEL NullLiteral@@null @AT@ 2104 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 2110 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(!isAuthenticated,"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @TO@ MethodDeclaration@@public, void, MethodName:setAuthenticated, boolean isAuthenticated, IllegalArgumentException,  @AT@ 2872 @LENGTH@ 134
---INS MethodInvocation@@Assert.isTrue(!isAuthenticated,"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(!isAuthenticated,"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @AT@ 2872 @LENGTH@ 133
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(!isAuthenticated,"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @AT@ 2872 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[!isAuthenticated, "Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"] @TO@ MethodInvocation@@Assert.isTrue(!isAuthenticated,"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @AT@ 2879 @LENGTH@ 126
---------INS PrefixExpression@@!isAuthenticated @TO@ SimpleName@@MethodName:isTrue:[!isAuthenticated, "Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"] @AT@ 2886 @LENGTH@ 16
------------INS Operator@@! @TO@ PrefixExpression@@!isAuthenticated @AT@ 2886 @LENGTH@ 1
------------INS SimpleName@@isAuthenticated @TO@ PrefixExpression@@!isAuthenticated @AT@ 2887 @LENGTH@ 15
---------INS StringLiteral@@"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead" @TO@ SimpleName@@MethodName:isTrue:[!isAuthenticated, "Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"] @AT@ 2908 @LENGTH@ 96


UPD TypeDeclaration@@[public]OpenID4JavaConsumerTests,  @TO@ [@Deprecated, public]OpenID4JavaConsumerTests,  @AT@ 2051 @LENGTH@ 7129
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenID4JavaConsumerTests,  @AT@ 2051 @LENGTH@ 11


UPD VariableDeclarationStatement@@final String beanId=resolveId(element,userService,parserContext); @TO@ String beanId=resolveId(element,userService,parserContext); @AT@ 2248 @LENGTH@ 69
---DEL Modifier@@final @AT@ 2248 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @TO@ protected, Collection<Declarable>, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 2964 @LENGTH@ 1117
---DEL PrimitiveType@@void @AT@ 2974 @LENGTH@ 4
---INS ParameterizedType@@Collection<Declarable> @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 3052 @LENGTH@ 22
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Declarable> @AT@ 3052 @LENGTH@ 10
------INS SimpleType@@Declarable @TO@ ParameterizedType@@Collection<Declarable> @AT@ 3063 @LENGTH@ 10
---DEL ExpressionStatement@@SuperMethodInvocation:super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 3976 @LENGTH@ 73
------DEL SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 3976 @LENGTH@ 72
---INS ReturnStatement@@SuperMethodInvocation:super.processListener(endpoint,rabbitListener,proxy,target,beanName) @TO@ MethodDeclaration@@protected, void, MethodName:processListener, MethodRabbitListenerEndpoint endpoint, RabbitListener rabbitListener, Object bean, Object target, String beanName,  @AT@ 4072 @LENGTH@ 80
------INS SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @TO@ ReturnStatement@@SuperMethodInvocation:super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 4079 @LENGTH@ 72
---------MOV SimpleName@@MethodName:processListener:[endpoint, rabbitListener, proxy, target, beanName] @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 3982 @LENGTH@ 15
---------MOV SimpleName@@endpoint @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 3998 @LENGTH@ 8
---------MOV SimpleName@@rabbitListener @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 4008 @LENGTH@ 14
---------MOV SimpleName@@proxy @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 4024 @LENGTH@ 5
---------MOV SimpleName@@target @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 4031 @LENGTH@ 6
---------MOV SimpleName@@beanName @TO@ SuperMethodInvocation@@super.processListener(endpoint,rabbitListener,proxy,target,beanName) @AT@ 4039 @LENGTH@ 8


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageble instead! Offending method: %s",method.toString())) @TO@ ClassInstanceCreation:new IllegalStateException(String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageable instead! Offending method: %s",method.toString())) @AT@ 3998 @LENGTH@ 198
---UPD ClassInstanceCreation@@IllegalStateException[String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageble instead! Offending method: %s",method.toString())] @TO@ IllegalStateException[String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageable instead! Offending method: %s",method.toString())] @AT@ 4004 @LENGTH@ 191
------UPD MethodInvocation@@String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageble instead! Offending method: %s",method.toString()) @TO@ String.format("Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageable instead! Offending method: %s",method.toString()) @AT@ 4030 @LENGTH@ 164
---------UPD SimpleName@@MethodName:format:["Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageble instead! Offending method: %s", method.toString()] @TO@ MethodName:format:["Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageable instead! Offending method: %s", method.toString()] @AT@ 4037 @LENGTH@ 157
------------UPD InfixExpression@@"Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageble instead! Offending method: %s" @TO@ "Method must not have Pageable *and* Sort parameter. " + "Use sorting capabilities on Pageable instead! Offending method: %s" @AT@ 4044 @LENGTH@ 130
---------------UPD StringLiteral@@"Use sorting capabilities on Pageble instead! Offending method: %s" @TO@ "Use sorting capabilities on Pageable instead! Offending method: %s" @AT@ 4107 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:original.getOut().setBody(resourceResponse) @TO@ MethodInvocation:original.getMessage().setBody(resourceResponse) @AT@ 3528 @LENGTH@ 44
---UPD MethodInvocation@@original.getOut().setBody(resourceResponse) @TO@ original.getMessage().setBody(resourceResponse) @AT@ 3528 @LENGTH@ 43
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3528 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assumeNotNull(loginConfig.getKeystore().getResource()) @TO@ MethodInvocation:assumeTrue(loginConfig.getKeystore().getResource() != null) @AT@ 1798 @LENGTH@ 55
---UPD MethodInvocation@@assumeNotNull(loginConfig.getKeystore().getResource()) @TO@ assumeTrue(loginConfig.getKeystore().getResource() != null) @AT@ 1798 @LENGTH@ 54
------UPD SimpleName@@MethodName:assumeNotNull:[loginConfig.getKeystore().getResource()] @TO@ MethodName:assumeTrue:[loginConfig.getKeystore().getResource() != null] @AT@ 1798 @LENGTH@ 54
---------DEL MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1812 @LENGTH@ 39
---------INS InfixExpression@@loginConfig.getKeystore().getResource() != null @TO@ SimpleName@@MethodName:assumeNotNull:[loginConfig.getKeystore().getResource()] @AT@ 1819 @LENGTH@ 47
------------INS MethodInvocation@@loginConfig.getKeystore().getResource() @TO@ InfixExpression@@loginConfig.getKeystore().getResource() != null @AT@ 1819 @LENGTH@ 39
---------------MOV MethodInvocation@@MethodName:getKeystore:[] @TO@ MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1812 @LENGTH@ 25
---------------MOV MethodInvocation@@MethodName:getKeystore:[] @TO@ MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1812 @LENGTH@ 25
---------------MOV SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1812 @LENGTH@ 11
---------------MOV SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1812 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:getResource:[] @TO@ MethodInvocation@@loginConfig.getKeystore().getResource() @AT@ 1838 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@loginConfig.getKeystore().getResource() != null @AT@ 1858 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@loginConfig.getKeystore().getResource() != null @AT@ 1862 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1788 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1788 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1804 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(cause.getMessage(),"File already exist: hello.txt. Cannot write new file.") @TO@ MethodInvocation:assertEquals("File already exist: hello.txt. Cannot write new file.",cause.getMessage()) @AT@ 2236 @LENGTH@ 90
---UPD MethodInvocation@@assertEquals(cause.getMessage(),"File already exist: hello.txt. Cannot write new file.") @TO@ assertEquals("File already exist: hello.txt. Cannot write new file.",cause.getMessage()) @AT@ 2236 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertEquals:[cause.getMessage(), "File already exist: hello.txt. Cannot write new file."] @TO@ MethodName:assertEquals:["File already exist: hello.txt. Cannot write new file.", cause.getMessage()] @AT@ 2236 @LENGTH@ 89
---------INS StringLiteral@@"File already exist: hello.txt. Cannot write new file." @TO@ SimpleName@@MethodName:assertEquals:[cause.getMessage(), "File already exist: hello.txt. Cannot write new file."] @AT@ 2249 @LENGTH@ 55
---------DEL StringLiteral@@"File already exist: hello.txt. Cannot write new file." @AT@ 2269 @LENGTH@ 55


UPD TryStatement@@try {  return getAuthenticator().authenticate(authentication);} catch (PasswordPolicyException ppe) {  throw new LockedException(this.messages.getMessage(ppe.getStatus().getErrorCode(),ppe.getStatus().getDefaultMessage()));}catch (UsernameNotFoundException notFound) {  if (this.hideUserNotFoundExceptions) {    throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));  } else {    throw notFound;  }}catch (NamingException ldapAccessFailure) {  throw new InternalAuthenticationServiceException(ldapAccessFailure.getMessage(),ldapAccessFailure);} @TO@ try {  return getAuthenticator().authenticate(authentication);} catch (PasswordPolicyException ex) {  throw new LockedException(this.messages.getMessage(ex.getStatus().getErrorCode(),ex.getStatus().getDefaultMessage()));}catch (UsernameNotFoundException ex) {  if (this.hideUserNotFoundExceptions) {    throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));  }  throw ex;}catch (NamingException ex) {  throw new InternalAuthenticationServiceException(ex.getMessage(),ex);} @AT@ 8341 @LENGTH@ 769
---UPD CatchClause@@catch (PasswordPolicyException ppe) {  throw new LockedException(this.messages.getMessage(ppe.getStatus().getErrorCode(),ppe.getStatus().getDefaultMessage()));} @TO@ catch (PasswordPolicyException ex) {  throw new LockedException(this.messages.getMessage(ex.getStatus().getErrorCode(),ex.getStatus().getDefaultMessage()));} @AT@ 8412 @LENGTH@ 275
------UPD SingleVariableDeclaration@@PasswordPolicyException ppe @TO@ PasswordPolicyException ex @AT@ 8419 @LENGTH@ 27
---------UPD SimpleName@@ppe @TO@ ex @AT@ 8443 @LENGTH@ 3
------UPD ThrowStatement@@ClassInstanceCreation:new LockedException(this.messages.getMessage(ppe.getStatus().getErrorCode(),ppe.getStatus().getDefaultMessage())) @TO@ ClassInstanceCreation:new LockedException(this.messages.getMessage(ex.getStatus().getErrorCode(),ex.getStatus().getDefaultMessage())) @AT@ 8556 @LENGTH@ 127
---------UPD ClassInstanceCreation@@LockedException[this.messages.getMessage(ppe.getStatus().getErrorCode(),ppe.getStatus().getDefaultMessage())] @TO@ LockedException[this.messages.getMessage(ex.getStatus().getErrorCode(),ex.getStatus().getDefaultMessage())] @AT@ 8562 @LENGTH@ 120
------------UPD MethodInvocation@@this.messages.getMessage(ppe.getStatus().getErrorCode(),ppe.getStatus().getDefaultMessage()) @TO@ this.messages.getMessage(ex.getStatus().getErrorCode(),ex.getStatus().getDefaultMessage()) @AT@ 8588 @LENGTH@ 93
---------------UPD SimpleName@@MethodName:getMessage:[ppe.getStatus().getErrorCode(), ppe.getStatus().getDefaultMessage()] @TO@ MethodName:getMessage:[ex.getStatus().getErrorCode(), ex.getStatus().getDefaultMessage()] @AT@ 8602 @LENGTH@ 79
------------------UPD MethodInvocation@@ppe.getStatus().getErrorCode() @TO@ ex.getStatus().getErrorCode() @AT@ 8613 @LENGTH@ 30
---------------------UPD SimpleName@@Name:ppe @TO@ Name:ex @AT@ 8613 @LENGTH@ 3
------------------UPD MethodInvocation@@ppe.getStatus().getDefaultMessage() @TO@ ex.getStatus().getDefaultMessage() @AT@ 8645 @LENGTH@ 35
---------------------UPD SimpleName@@Name:ppe @TO@ Name:ex @AT@ 8645 @LENGTH@ 3
---UPD CatchClause@@catch (UsernameNotFoundException notFound) {  if (this.hideUserNotFoundExceptions) {    throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));  } else {    throw notFound;  }} @TO@ catch (UsernameNotFoundException ex) {  if (this.hideUserNotFoundExceptions) {    throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));  }  throw ex;} @AT@ 8690 @LENGTH@ 266
------UPD SingleVariableDeclaration@@UsernameNotFoundException notFound @TO@ UsernameNotFoundException ex @AT@ 8697 @LENGTH@ 34
---------UPD SimpleName@@notFound @TO@ ex @AT@ 8723 @LENGTH@ 8
------UPD IfStatement@@if (this.hideUserNotFoundExceptions) {  throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));} else {  throw notFound;} @TO@ if (this.hideUserNotFoundExceptions) {  throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));} @AT@ 8738 @LENGTH@ 214
---------DEL Block@@ElseBody:{  throw notFound;} @AT@ 8926 @LENGTH@ 26
------------DEL ThrowStatement@@SimpleName:notFound @AT@ 8932 @LENGTH@ 15
---------------DEL SimpleName@@notFound @AT@ 8938 @LENGTH@ 8
------INS ThrowStatement@@SimpleName:ex @TO@ CatchClause@@catch (UsernameNotFoundException notFound) {  if (this.hideUserNotFoundExceptions) {    throw new BadCredentialsException(this.messages.getMessage("LdapAuthenticationProvider.badCredentials","Bad credentials"));  } else {    throw notFound;  }} @AT@ 8912 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 8918 @LENGTH@ 2
---UPD CatchClause@@catch (NamingException ldapAccessFailure) {  throw new InternalAuthenticationServiceException(ldapAccessFailure.getMessage(),ldapAccessFailure);} @TO@ catch (NamingException ex) {  throw new InternalAuthenticationServiceException(ex.getMessage(),ex);} @AT@ 8959 @LENGTH@ 151
------UPD SingleVariableDeclaration@@NamingException ldapAccessFailure @TO@ NamingException ex @AT@ 8966 @LENGTH@ 33
---------UPD SimpleName@@ldapAccessFailure @TO@ ex @AT@ 8982 @LENGTH@ 17
------UPD ThrowStatement@@ClassInstanceCreation:new InternalAuthenticationServiceException(ldapAccessFailure.getMessage(),ldapAccessFailure) @TO@ ClassInstanceCreation:new InternalAuthenticationServiceException(ex.getMessage(),ex) @AT@ 9006 @LENGTH@ 100
---------UPD ClassInstanceCreation@@InternalAuthenticationServiceException[ldapAccessFailure.getMessage(), ldapAccessFailure] @TO@ InternalAuthenticationServiceException[ex.getMessage(), ex] @AT@ 9012 @LENGTH@ 93
------------UPD MethodInvocation@@ldapAccessFailure.getMessage() @TO@ ex.getMessage() @AT@ 9055 @LENGTH@ 30
---------------UPD SimpleName@@Name:ldapAccessFailure @TO@ Name:ex @AT@ 9055 @LENGTH@ 17
------------UPD SimpleName@@ldapAccessFailure @TO@ ex @AT@ 9087 @LENGTH@ 17


INS MethodDeclaration@@String, MethodName:argDisplayGalleonConfig,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYJAR",length=4), public]BootableJarLogger, [BasicLogger] @AT@ 5668 @LENGTH@ 26
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argDisplayGalleonConfig,  @AT@ 5661 @LENGTH@ 6
---INS SimpleName@@MethodName:argDisplayGalleonConfig @TO@ MethodDeclaration@@String, MethodName:argDisplayGalleonConfig,  @AT@ 5668 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertEquals("os=" + System.getProperty("os.name"),result) @TO@ MethodInvocation:assertEquals("os=" + System.getProperty("os.name"),result.replaceAll("%20"," ")) @AT@ 1319 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals("os=" + System.getProperty("os.name"),result) @TO@ assertEquals("os=" + System.getProperty("os.name"),result.replaceAll("%20"," ")) @AT@ 1319 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:["os=" + System.getProperty("os.name"), result] @TO@ MethodName:assertEquals:["os=" + System.getProperty("os.name"), result.replaceAll("%20"," ")] @AT@ 1319 @LENGTH@ 59
---------INS MethodInvocation@@result.replaceAll("%20"," ") @TO@ SimpleName@@MethodName:assertEquals:["os=" + System.getProperty("os.name"), result] @AT@ 1371 @LENGTH@ 29
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.replaceAll("%20"," ") @AT@ 1371 @LENGTH@ 6
------------INS SimpleName@@MethodName:replaceAll:["%20", " "] @TO@ MethodInvocation@@result.replaceAll("%20"," ") @AT@ 1378 @LENGTH@ 22
---------------INS StringLiteral@@"%20" @TO@ SimpleName@@MethodName:replaceAll:["%20", " "] @AT@ 1389 @LENGTH@ 5
---------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:replaceAll:["%20", " "] @AT@ 1396 @LENGTH@ 3
---------DEL SimpleName@@result @AT@ 1371 @LENGTH@ 6


UPD SuperConstructorInvocation@@super(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)));
 @TO@ super(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName));
 @AT@ 1990 @LENGTH@ 101
---UPD MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @TO@ ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName) @AT@ 1996 @LENGTH@ 93
------INS MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.getName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @AT@ 1996 @LENGTH@ 83
---------INS MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @TO@ MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.getName()] @AT@ 2032 @LENGTH@ 46
------------MOV QualifiedName@@Name:WebDeploymentRequirement.LOCAL_ROUTE @TO@ MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @AT@ 2032 @LENGTH@ 36
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @AT@ 2069 @LENGTH@ 9
------DEL SimpleName@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)] @AT@ 2015 @LENGTH@ 74
---------DEL MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName) @AT@ 2032 @LENGTH@ 56
------MOV SimpleName@@MethodName:resolve:[serverName] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @AT@ 2069 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?synchronous=true").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?synchronous=true").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 4565 @LENGTH@ 635
---UPD MethodInvocation@@from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?synchronous=true").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?synchronous=true").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 4565 @LENGTH@ 634
------UPD MethodInvocation@@MethodName:setBody:[simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @TO@ MethodName:setBody:[simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @AT@ 4565 @LENGTH@ 425
---------UPD MethodInvocation@@simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @TO@ simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @AT@ 4922 @LENGTH@ 67
------------UPD SimpleName@@MethodName:simple:[new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @TO@ MethodName:simple:[Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @AT@ 4922 @LENGTH@ 67
---------------UPD MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @TO@ Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 4929 @LENGTH@ 59
------------------INS MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 4929 @LENGTH@ 52
---------------------INS InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @TO@ MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 4945 @LENGTH@ 35
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 4941 @LENGTH@ 16
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 4941 @LENGTH@ 16
------------------------MOV Operator@@* @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 4957 @LENGTH@ 1
------------------------MOV SimpleName@@THRIFT_TEST_NUM2 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 4960 @LENGTH@ 16
------------------DEL ClassInstanceCreation@@Integer[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 4929 @LENGTH@ 48
---------------------DEL New@@new @AT@ 4929 @LENGTH@ 3
---------------------DEL SimpleType@@Integer @AT@ 4933 @LENGTH@ 7
---------------------DEL InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 4941 @LENGTH@ 35
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 4929 @LENGTH@ 7


UPD TypeDeclaration@@[public]OpenIDConsumer,  @TO@ [@Deprecated, public]OpenIDConsumer,  @AT@ 1148 @LENGTH@ 832
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDConsumer,  @AT@ 1148 @LENGTH@ 11


INS MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @TO@ TypeDeclaration@@[public, final]JwtAuthenticationProvider, [AuthenticationProvider] @AT@ 3359 @LENGTH@ 361
---INS Modifier@@public @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3359 @LENGTH@ 6
---INS SimpleType@@Authentication @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3366 @LENGTH@ 14
---INS SimpleName@@MethodName:authenticate @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3381 @LENGTH@ 12
---INS SingleVariableDeclaration@@Authentication authentication @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3394 @LENGTH@ 29
------INS SimpleType@@Authentication @TO@ SingleVariableDeclaration@@Authentication authentication @AT@ 3394 @LENGTH@ 14
------INS SimpleName@@authentication @TO@ SingleVariableDeclaration@@Authentication authentication @AT@ 3409 @LENGTH@ 14
---INS SimpleType@@AuthenticationException @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3432 @LENGTH@ 23
---MOV VariableDeclarationStatement@@BearerTokenAuthenticationToken bearer=(BearerTokenAuthenticationToken)authentication; @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3460 @LENGTH@ 88
---INS VariableDeclarationStatement@@Jwt jwt=getJwt(bearer); @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3551 @LENGTH@ 25
------INS SimpleType@@Jwt @TO@ VariableDeclarationStatement@@Jwt jwt=getJwt(bearer); @AT@ 3551 @LENGTH@ 3
------INS VariableDeclarationFragment@@jwt=getJwt(bearer) @TO@ VariableDeclarationStatement@@Jwt jwt=getJwt(bearer); @AT@ 3555 @LENGTH@ 20
---------INS SimpleName@@jwt @TO@ VariableDeclarationFragment@@jwt=getJwt(bearer) @AT@ 3555 @LENGTH@ 3
---------INS MethodInvocation@@getJwt(bearer) @TO@ VariableDeclarationFragment@@jwt=getJwt(bearer) @AT@ 3561 @LENGTH@ 14
------------INS SimpleName@@MethodName:getJwt:[bearer] @TO@ MethodInvocation@@getJwt(bearer) @AT@ 3561 @LENGTH@ 14
---------------INS SimpleName@@bearer @TO@ SimpleName@@MethodName:getJwt:[bearer] @AT@ 3568 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:token @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3704 @LENGTH@ 13
------INS SimpleName@@token @TO@ ReturnStatement@@SimpleName:token @AT@ 3711 @LENGTH@ 5
---MOV VariableDeclarationStatement@@AbstractAuthenticationToken token=this.jwtAuthenticationConverter.convert(jwt); @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3848 @LENGTH@ 81
---MOV ExpressionStatement@@MethodInvocation:token.setDetails(bearer.getDetails()) @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 3932 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertEquals(service,SERVICE_NAME,"We should get the right service name") @TO@ MethodInvocation:assertEquals(SERVICE_NAME,service,"We should get the right service name") @AT@ 3318 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals(service,SERVICE_NAME,"We should get the right service name") @TO@ assertEquals(SERVICE_NAME,service,"We should get the right service name") @AT@ 3318 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:[service, SERVICE_NAME, "We should get the right service name"] @TO@ MethodName:assertEquals:[SERVICE_NAME, service, "We should get the right service name"] @AT@ 3318 @LENGTH@ 75
---------INS SimpleName@@SERVICE_NAME @TO@ SimpleName@@MethodName:assertEquals:[service, SERVICE_NAME, "We should get the right service name"] @AT@ 3331 @LENGTH@ 12
---------DEL SimpleName@@SERVICE_NAME @AT@ 3340 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1870 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1870 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1886 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoveryClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2710 @LENGTH@ 514
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoveryClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2722 @LENGTH@ 41


UPD TypeDeclaration@@[public]OpenIDAuthenticationFilter, AbstractAuthenticationProcessingFilter @TO@ [@Deprecated, public]OpenIDAuthenticationFilter, AbstractAuthenticationProcessingFilter @AT@ 3381 @LENGTH@ 7095
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAuthenticationFilter, AbstractAuthenticationProcessingFilter @AT@ 3381 @LENGTH@ 11


DEL IfStatement@@if (s == null) {  return null;} @AT@ 1333 @LENGTH@ 36
---DEL InfixExpression@@s == null @AT@ 1337 @LENGTH@ 9
------DEL SimpleName@@s @AT@ 1337 @LENGTH@ 1
------DEL Operator@@== @AT@ 1338 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1342 @LENGTH@ 4
---DEL Block@@ThenBody:{  return null;} @AT@ 1348 @LENGTH@ 21
------DEL ReturnStatement@@NullLiteral:null @AT@ 1353 @LENGTH@ 12
---------DEL NullLiteral@@null @AT@ 1360 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.matchers).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
).flatMap((matcher) -> matcher.matches(exchange)).doOnNext((matchResult) -> variables.putAll(matchResult.getVariables())).all(MatchResult::isMatch).flatMap((allMatch) -> allMatch ? MatchResult.match(variables) : MatchResult.notMatch()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");
  }
}
) @TO@ MethodInvocation:Flux.fromIterable(this.matchers).doOnNext((matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))).flatMap((matcher) -> matcher.matches(exchange)).doOnNext((matchResult) -> variables.putAll(matchResult.getVariables())).all(MatchResult::isMatch).flatMap((allMatch) -> allMatch ? MatchResult.match(variables) : MatchResult.notMatch()).doOnNext((matchResult) -> logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match")) @AT@ 1883 @LENGTH@ 571
---UPD MethodInvocation@@Flux.fromIterable(this.matchers).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
).flatMap((matcher) -> matcher.matches(exchange)).doOnNext((matchResult) -> variables.putAll(matchResult.getVariables())).all(MatchResult::isMatch).flatMap((allMatch) -> allMatch ? MatchResult.match(variables) : MatchResult.notMatch()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");
  }
}
) @TO@ Flux.fromIterable(this.matchers).doOnNext((matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))).flatMap((matcher) -> matcher.matches(exchange)).doOnNext((matchResult) -> variables.putAll(matchResult.getVariables())).all(MatchResult::isMatch).flatMap((allMatch) -> allMatch ? MatchResult.match(variables) : MatchResult.notMatch()).doOnNext((matchResult) -> logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match")) @AT@ 1890 @LENGTH@ 563
------UPD MethodInvocation@@MethodName:doOnNext:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
] @TO@ MethodName:doOnNext:[(matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))] @AT@ 1890 @LENGTH@ 148
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
 @TO@ (matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1932 @LENGTH@ 105
------------UPD VariableDeclarationFragment@@it @TO@ matcher @AT@ 1933 @LENGTH@ 2
---------------UPD SimpleName@@it @TO@ matcher @AT@ 1933 @LENGTH@ 2
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Trying to match using " + it);} @AT@ 1946 @LENGTH@ 86
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 1950 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1957 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Trying to match using " + it);} @AT@ 1975 @LENGTH@ 57
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Trying to match using " + it) @AT@ 1982 @LENGTH@ 44
---------------------DEL MethodInvocation@@logger.debug("Trying to match using " + it) @AT@ 1982 @LENGTH@ 43
------------INS MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
 @AT@ 1999 @LENGTH@ 68
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1950 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @TO@ MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 2006 @LENGTH@ 61
------------------INS MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @AT@ 2012 @LENGTH@ 54
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1982 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["Trying to match using " + it] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1989 @LENGTH@ 36
------------------------DEL InfixExpression@@"Trying to match using " + it @AT@ 1995 @LENGTH@ 29
---------------------------DEL StringLiteral@@"Trying to match using " @AT@ 1995 @LENGTH@ 24
---------------------------DEL Operator@@+ @AT@ 2019 @LENGTH@ 1
---------------------------DEL SimpleName@@it @AT@ 2022 @LENGTH@ 2
------------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + it] @AT@ 2030 @LENGTH@ 26
------------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + it] @AT@ 2058 @LENGTH@ 7
------UPD SimpleName@@MethodName:doOnNext:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");
  }
}
] @TO@ MethodName:doOnNext:[(matchResult) -> logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match")] @AT@ 2291 @LENGTH@ 162
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");
  }
}
 @TO@ (matchResult) -> logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match") @AT@ 2300 @LENGTH@ 152
------------UPD VariableDeclarationFragment@@it @TO@ matchResult @AT@ 2301 @LENGTH@ 2
---------------UPD SimpleName@@it @TO@ matchResult @AT@ 2301 @LENGTH@ 2
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");} @AT@ 2316 @LENGTH@ 129
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2320 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 2320 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2327 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");} @AT@ 2345 @LENGTH@ 100
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match") @AT@ 2354 @LENGTH@ 83
---------------------DEL MethodInvocation@@logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match") @AT@ 2354 @LENGTH@ 82
------------INS MethodInvocation@@logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match") @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "All requestMatchers returned true" : "Did not match");
  }
}
 @AT@ 2353 @LENGTH@ 99
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match") @AT@ 2354 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:debug:[it.isMatch() ? "All requestMatchers returned true" : "Did not match"] @TO@ MethodInvocation@@logger.debug(matchResult.isMatch() ? "All requestMatchers returned true" : "Did not match") @AT@ 2361 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getMessage().getBody(String.class),"{\"Hello\":\"Camel\"}") @TO@ MethodInvocation:assertEquals("{\"Hello\":\"Camel\"}",exchange.getMessage().getBody(String.class)) @AT@ 2087 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals(exchange.getMessage().getBody(String.class),"{\"Hello\":\"Camel\"}") @TO@ assertEquals("{\"Hello\":\"Camel\"}",exchange.getMessage().getBody(String.class)) @AT@ 2087 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(String.class), "{\"Hello\":\"Camel\"}"] @TO@ MethodName:assertEquals:["{\"Hello\":\"Camel\"}", exchange.getMessage().getBody(String.class)] @AT@ 2087 @LENGTH@ 82
---------MOV MethodInvocation@@exchange.getMessage().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(String.class), "{\"Hello\":\"Camel\"}"] @AT@ 2100 @LENGTH@ 43


INS MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @TO@ TypeDeclaration@@[public]PublisherCallbackChannelImpl, [PublisherCallbackChannel, ConfirmListener, ReturnListener, ShutdownListener] @AT@ 35994 @LENGTH@ 515
---MOV VariableDeclarationStatement@@Object returnListenerHeader=properties.getHeaders().get(RETURN_LISTENER_CORRELATION_KEY); @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35278 @LENGTH@ 91
---MOV VariableDeclarationStatement@@String uuidObject=null; @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35372 @LENGTH@ 25
---MOV IfStatement@@if (returnListenerHeader != null) {  uuidObject=returnListenerHeader.toString();} @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35400 @LENGTH@ 88
---MOV VariableDeclarationStatement@@Listener listener=null; @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35491 @LENGTH@ 25
---MOV IfStatement@@if (uuidObject != null) {  listener=this.listeners.get(uuidObject);} else {  this.logger.error("No '" + RETURN_LISTENER_CORRELATION_KEY + "' header in returned message");} @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35519 @LENGTH@ 185
---INS Modifier@@private @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 35994 @LENGTH@ 7
---INS SimpleType@@Listener @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 36002 @LENGTH@ 8
---INS SimpleName@@MethodName:findListener @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 36011 @LENGTH@ 12
---INS SingleVariableDeclaration@@AMQP.BasicProperties properties @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 36024 @LENGTH@ 31
------INS SimpleType@@AMQP.BasicProperties @TO@ SingleVariableDeclaration@@AMQP.BasicProperties properties @AT@ 36024 @LENGTH@ 20
------INS SimpleName@@properties @TO@ SingleVariableDeclaration@@AMQP.BasicProperties properties @AT@ 36045 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:listener @TO@ MethodDeclaration@@private, Listener, MethodName:findListener, AMQP.BasicProperties properties,  @AT@ 36490 @LENGTH@ 16
------INS SimpleName@@listener @TO@ ReturnStatement@@SimpleName:listener @AT@ 36497 @LENGTH@ 8


UPD TryStatement@@try {  ByteArrayOutputStream b=new ByteArrayOutputStream();  DeflaterOutputStream deflater=new DeflaterOutputStream(b,new Deflater(Deflater.DEFLATED,true));  deflater.write(s.getBytes(StandardCharsets.UTF_8));  deflater.finish();  return b.toByteArray();} catch (IOException ex) {  throw new Saml2Exception("Unable to deflate string",ex);} @TO@ try {  ByteArrayOutputStream out=new ByteArrayOutputStream();  DeflaterOutputStream deflaterOutputStream=new DeflaterOutputStream(out,new Deflater(Deflater.DEFLATED,true));  deflaterOutputStream.write(s.getBytes(StandardCharsets.UTF_8));  deflaterOutputStream.finish();  return out.toByteArray();} catch (IOException ex) {  throw new Saml2Exception("Unable to deflate string",ex);} @AT@ 1375 @LENGTH@ 366
---UPD VariableDeclarationStatement@@ByteArrayOutputStream b=new ByteArrayOutputStream(); @TO@ ByteArrayOutputStream out=new ByteArrayOutputStream(); @AT@ 1384 @LENGTH@ 54
------UPD VariableDeclarationFragment@@b=new ByteArrayOutputStream() @TO@ out=new ByteArrayOutputStream() @AT@ 1406 @LENGTH@ 31
---------UPD SimpleName@@b @TO@ out @AT@ 1406 @LENGTH@ 1
---UPD VariableDeclarationStatement@@DeflaterOutputStream deflater=new DeflaterOutputStream(b,new Deflater(Deflater.DEFLATED,true)); @TO@ DeflaterOutputStream deflaterOutputStream=new DeflaterOutputStream(out,new Deflater(Deflater.DEFLATED,true)); @AT@ 1442 @LENGTH@ 99
------UPD VariableDeclarationFragment@@deflater=new DeflaterOutputStream(b,new Deflater(Deflater.DEFLATED,true)) @TO@ deflaterOutputStream=new DeflaterOutputStream(out,new Deflater(Deflater.DEFLATED,true)) @AT@ 1463 @LENGTH@ 77
---------UPD SimpleName@@deflater @TO@ deflaterOutputStream @AT@ 1463 @LENGTH@ 8
---------UPD ClassInstanceCreation@@DeflaterOutputStream[b, new Deflater(Deflater.DEFLATED,true)] @TO@ DeflaterOutputStream[out, new Deflater(Deflater.DEFLATED,true)] @AT@ 1474 @LENGTH@ 66
------------UPD SimpleName@@b @TO@ out @AT@ 1499 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:deflater.write(s.getBytes(StandardCharsets.UTF_8)) @TO@ MethodInvocation:deflaterOutputStream.write(s.getBytes(StandardCharsets.UTF_8)) @AT@ 1545 @LENGTH@ 51
------UPD MethodInvocation@@deflater.write(s.getBytes(StandardCharsets.UTF_8)) @TO@ deflaterOutputStream.write(s.getBytes(StandardCharsets.UTF_8)) @AT@ 1545 @LENGTH@ 50
---------UPD SimpleName@@Name:deflater @TO@ Name:deflaterOutputStream @AT@ 1545 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:deflater.finish() @TO@ MethodInvocation:deflaterOutputStream.finish() @AT@ 1600 @LENGTH@ 18
------UPD MethodInvocation@@deflater.finish() @TO@ deflaterOutputStream.finish() @AT@ 1600 @LENGTH@ 17
---------UPD SimpleName@@Name:deflater @TO@ Name:deflaterOutputStream @AT@ 1600 @LENGTH@ 8
---UPD ReturnStatement@@MethodInvocation:b.toByteArray() @TO@ MethodInvocation:out.toByteArray() @AT@ 1622 @LENGTH@ 23
------UPD MethodInvocation@@b.toByteArray() @TO@ out.toByteArray() @AT@ 1629 @LENGTH@ 15
---------UPD SimpleName@@Name:b @TO@ Name:out @AT@ 1629 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(responsePayload) @TO@ MethodInvocation:exchange.getMessage().setBody(responsePayload) @AT@ 5353 @LENGTH@ 43
---UPD MethodInvocation@@exchange.getOut().setBody(responsePayload) @TO@ exchange.getMessage().setBody(responsePayload) @AT@ 5353 @LENGTH@ 42
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 5353 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.matchers).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
).flatMap((m) -> m.matches(exchange)).filter(MatchResult::isMatch).next().switchIfEmpty(MatchResult.notMatch()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "matched" : "No matches found");
  }
}
) @TO@ MethodInvocation:Flux.fromIterable(this.matchers).doOnNext((matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))).flatMap((matcher) -> matcher.matches(exchange)).filter(MatchResult::isMatch).next().switchIfEmpty(MatchResult.notMatch()).doOnNext((matchResult) -> logger.debug(matchResult.isMatch() ? "matched" : "No matches found")) @AT@ 1754 @LENGTH@ 403
---UPD MethodInvocation@@Flux.fromIterable(this.matchers).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
).flatMap((m) -> m.matches(exchange)).filter(MatchResult::isMatch).next().switchIfEmpty(MatchResult.notMatch()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "matched" : "No matches found");
  }
}
) @TO@ Flux.fromIterable(this.matchers).doOnNext((matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))).flatMap((matcher) -> matcher.matches(exchange)).filter(MatchResult::isMatch).next().switchIfEmpty(MatchResult.notMatch()).doOnNext((matchResult) -> logger.debug(matchResult.isMatch() ? "matched" : "No matches found")) @AT@ 1761 @LENGTH@ 395
------UPD MethodInvocation@@MethodName:flatMap:[(m) -> m.matches(exchange)] @TO@ MethodName:flatMap:[(matcher) -> matcher.matches(exchange)] @AT@ 1761 @LENGTH@ 180
---------UPD LambdaExpression@@(m) -> m.matches(exchange) @TO@ (matcher) -> matcher.matches(exchange) @AT@ 1914 @LENGTH@ 26
------------UPD VariableDeclarationFragment@@m @TO@ matcher @AT@ 1915 @LENGTH@ 1
---------------UPD SimpleName@@m @TO@ matcher @AT@ 1915 @LENGTH@ 1
------------UPD MethodInvocation@@m.matches(exchange) @TO@ matcher.matches(exchange) @AT@ 1921 @LENGTH@ 19
---------------UPD SimpleName@@Name:m @TO@ Name:matcher @AT@ 1921 @LENGTH@ 1
------UPD MethodInvocation@@MethodName:doOnNext:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
] @TO@ MethodName:doOnNext:[(matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher))] @AT@ 1761 @LENGTH@ 144
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
 @TO@ (matcher) -> logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1803 @LENGTH@ 101
------------UPD VariableDeclarationFragment@@it @TO@ matcher @AT@ 1804 @LENGTH@ 2
---------------UPD SimpleName@@it @TO@ matcher @AT@ 1804 @LENGTH@ 2
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Trying to match using " + it);} @AT@ 1816 @LENGTH@ 84
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 1820 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1827 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Trying to match using " + it);} @AT@ 1845 @LENGTH@ 55
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Trying to match using " + it) @AT@ 1851 @LENGTH@ 44
---------------------DEL MethodInvocation@@logger.debug("Trying to match using " + it) @AT@ 1851 @LENGTH@ 43
------------INS MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Trying to match using " + it);
  }
}
 @AT@ 1869 @LENGTH@ 68
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1820 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @TO@ MethodInvocation@@logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1876 @LENGTH@ 61
------------------INS MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @AT@ 1882 @LENGTH@ 54
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1851 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["Trying to match using " + it] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1858 @LENGTH@ 36
------------------------DEL InfixExpression@@"Trying to match using " + it @AT@ 1864 @LENGTH@ 29
---------------------------DEL StringLiteral@@"Trying to match using " @AT@ 1864 @LENGTH@ 24
---------------------------DEL Operator@@+ @AT@ 1888 @LENGTH@ 1
---------------------------DEL SimpleName@@it @AT@ 1891 @LENGTH@ 2
------------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + it] @AT@ 1900 @LENGTH@ 26
------------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + it] @AT@ 1928 @LENGTH@ 7
------UPD SimpleName@@MethodName:doOnNext:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "matched" : "No matches found");
  }
}
] @TO@ MethodName:doOnNext:[(matchResult) -> logger.debug(matchResult.isMatch() ? "matched" : "No matches found")] @AT@ 2021 @LENGTH@ 135
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "matched" : "No matches found");
  }
}
 @TO@ (matchResult) -> logger.debug(matchResult.isMatch() ? "matched" : "No matches found") @AT@ 2030 @LENGTH@ 125
------------UPD VariableDeclarationFragment@@it @TO@ matchResult @AT@ 2031 @LENGTH@ 2
---------------UPD SimpleName@@it @TO@ matchResult @AT@ 2031 @LENGTH@ 2
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug(it.isMatch() ? "matched" : "No matches found");} @AT@ 2045 @LENGTH@ 104
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2049 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 2049 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2056 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug(it.isMatch() ? "matched" : "No matches found");} @AT@ 2074 @LENGTH@ 75
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug(it.isMatch() ? "matched" : "No matches found") @AT@ 2082 @LENGTH@ 60
---------------------DEL MethodInvocation@@logger.debug(it.isMatch() ? "matched" : "No matches found") @AT@ 2082 @LENGTH@ 59
------------INS MethodInvocation@@logger.debug(matchResult.isMatch() ? "matched" : "No matches found") @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug(it.isMatch() ? "matched" : "No matches found");
  }
}
 @AT@ 2102 @LENGTH@ 68
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(matchResult.isMatch() ? "matched" : "No matches found") @AT@ 2082 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:debug:[it.isMatch() ? "matched" : "No matches found"] @TO@ MethodInvocation@@logger.debug(matchResult.isMatch() ? "matched" : "No matches found") @AT@ 2089 @LENGTH@ 52
------------------UPD ConditionalExpression@@it.isMatch() ? "matched" : "No matches found" @TO@ matchResult.isMatch() ? "matched" : "No matches found" @AT@ 2095 @LENGTH@ 45
---------------------UPD MethodInvocation@@it.isMatch() @TO@ matchResult.isMatch() @AT@ 2095 @LENGTH@ 12
------------------------UPD SimpleName@@Name:it @TO@ Name:matchResult @AT@ 2095 @LENGTH@ 2


INS MethodDeclaration@@DtoPersonProjection, MethodName:findOneByNullable, String nullable,  @TO@ TypeDeclaration@@[public]PersonRepository, [Neo4jRepository<PersonWithAllConstructor,Long>] @AT@ 10728 @LENGTH@ 35
---INS SimpleType@@DtoPersonProjection @TO@ MethodDeclaration@@DtoPersonProjection, MethodName:findOneByNullable, String nullable,  @AT@ 10708 @LENGTH@ 19
---INS SimpleName@@MethodName:findOneByNullable @TO@ MethodDeclaration@@DtoPersonProjection, MethodName:findOneByNullable, String nullable,  @AT@ 10728 @LENGTH@ 17
---INS SingleVariableDeclaration@@String nullable @TO@ MethodDeclaration@@DtoPersonProjection, MethodName:findOneByNullable, String nullable,  @AT@ 10746 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String nullable @AT@ 10746 @LENGTH@ 6
------INS SimpleName@@nullable @TO@ SingleVariableDeclaration@@String nullable @AT@ 10753 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
) @TO@ MethodInvocation:Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));
  }
  OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest();
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    return Mono.error(new OAuth2AuthorizationException(oauth2Error));
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
) @AT@ 3743 @LENGTH@ 505
---UPD MethodInvocation@@Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
) @TO@ Mono.defer(() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));
  }
  OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest();
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    return Mono.error(new OAuth2AuthorizationException(oauth2Error));
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
) @AT@ 3750 @LENGTH@ 497
------UPD SimpleName@@MethodName:defer:[() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
] @TO@ MethodName:defer:[() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));
  }
  OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest();
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    return Mono.error(new OAuth2AuthorizationException(oauth2Error));
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
] @AT@ 3755 @LENGTH@ 492
---------UPD LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @TO@ () -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse();
  if (authorizationResponse.statusError()) {
    return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));
  }
  OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest();
  if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {
    OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);
    return Mono.error(new OAuth2AuthorizationException(oauth2Error));
  }
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @AT@ 3761 @LENGTH@ 485
------------DEL ExpressionStatement@@MethodInvocation:OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange()) @AT@ 3888 @LENGTH@ 80
---------------DEL MethodInvocation@@OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange()) @AT@ 3888 @LENGTH@ 79
------------INS VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse(); @TO@ LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @AT@ 4289 @LENGTH@ 112
---------------INS SimpleType@@OAuth2AuthorizationResponse @TO@ VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse(); @AT@ 4289 @LENGTH@ 27
---------------INS VariableDeclarationFragment@@authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationResponse authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse(); @AT@ 4317 @LENGTH@ 83
------------------INS SimpleName@@authorizationResponse @TO@ VariableDeclarationFragment@@authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse() @AT@ 4317 @LENGTH@ 21
------------------INS MethodInvocation@@token.getAuthorizationExchange().getAuthorizationResponse() @TO@ VariableDeclarationFragment@@authorizationResponse=token.getAuthorizationExchange().getAuthorizationResponse() @AT@ 4341 @LENGTH@ 59
---------------------INS MethodInvocation@@MethodName:getAuthorizationExchange:[] @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationResponse() @AT@ 4341 @LENGTH@ 32
---------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationResponse() @AT@ 4341 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getAuthorizationResponse:[] @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationResponse() @AT@ 4374 @LENGTH@ 26
------------INS IfStatement@@if (authorizationResponse.statusError()) {  return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));} @TO@ LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @AT@ 4405 @LENGTH@ 138
---------------INS MethodInvocation@@authorizationResponse.statusError() @TO@ IfStatement@@if (authorizationResponse.statusError()) {  return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));} @AT@ 4409 @LENGTH@ 35
------------------INS SimpleName@@Name:authorizationResponse @TO@ MethodInvocation@@authorizationResponse.statusError() @AT@ 4409 @LENGTH@ 21
------------------INS SimpleName@@MethodName:statusError:[] @TO@ MethodInvocation@@authorizationResponse.statusError() @AT@ 4431 @LENGTH@ 13
---------------INS Block@@ThenBody:{  return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));} @TO@ IfStatement@@if (authorizationResponse.statusError()) {  return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));} @AT@ 4446 @LENGTH@ 97
------------------INS ReturnStatement@@MethodInvocation:Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError())) @TO@ Block@@ThenBody:{  return Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError()));} @AT@ 4452 @LENGTH@ 86
---------------------INS MethodInvocation@@Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError())) @TO@ ReturnStatement@@MethodInvocation:Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError())) @AT@ 4459 @LENGTH@ 78
------------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError())) @AT@ 4459 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:error:[new OAuth2AuthorizationException(authorizationResponse.getError())] @TO@ MethodInvocation@@Mono.error(new OAuth2AuthorizationException(authorizationResponse.getError())) @AT@ 4464 @LENGTH@ 73
---------------------------INS ClassInstanceCreation@@OAuth2AuthorizationException[authorizationResponse.getError()] @TO@ SimpleName@@MethodName:error:[new OAuth2AuthorizationException(authorizationResponse.getError())] @AT@ 4470 @LENGTH@ 66
------------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[authorizationResponse.getError()] @AT@ 4470 @LENGTH@ 3
------------------------------INS SimpleType@@OAuth2AuthorizationException @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[authorizationResponse.getError()] @AT@ 4474 @LENGTH@ 28
------------------------------INS MethodInvocation@@authorizationResponse.getError() @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[authorizationResponse.getError()] @AT@ 4503 @LENGTH@ 32
---------------------------------INS SimpleName@@Name:authorizationResponse @TO@ MethodInvocation@@authorizationResponse.getError() @AT@ 4503 @LENGTH@ 21
---------------------------------INS SimpleName@@MethodName:getError:[] @TO@ MethodInvocation@@authorizationResponse.getError() @AT@ 4525 @LENGTH@ 10
------------INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest(); @TO@ LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @AT@ 4548 @LENGTH@ 109
---------------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest(); @AT@ 4548 @LENGTH@ 26
---------------INS VariableDeclarationFragment@@authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest(); @AT@ 4575 @LENGTH@ 81
------------------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest() @AT@ 4575 @LENGTH@ 20
------------------INS MethodInvocation@@token.getAuthorizationExchange().getAuthorizationRequest() @TO@ VariableDeclarationFragment@@authorizationRequest=token.getAuthorizationExchange().getAuthorizationRequest() @AT@ 4598 @LENGTH@ 58
---------------------INS MethodInvocation@@MethodName:getAuthorizationExchange:[] @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationRequest() @AT@ 4598 @LENGTH@ 32
---------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationRequest() @AT@ 4598 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getAuthorizationRequest:[] @TO@ MethodInvocation@@token.getAuthorizationExchange().getAuthorizationRequest() @AT@ 4631 @LENGTH@ 25
------------INS IfStatement@@if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @TO@ LambdaExpression@@() -> {
  OAuth2AuthorizationCodeAuthenticationToken token=(OAuth2AuthorizationCodeAuthenticationToken)authentication;
  OAuth2AuthorizationExchangeValidator.validate(token.getAuthorizationExchange());
  OAuth2AuthorizationCodeGrantRequest authzRequest=new OAuth2AuthorizationCodeGrantRequest(token.getClientRegistration(),token.getAuthorizationExchange());
  return this.accessTokenResponseClient.getTokenResponse(authzRequest).map(onSuccess(token));
}
 @AT@ 4661 @LENGTH@ 238
---------------INS PrefixExpression@@!authorizationResponse.getState().equals(authorizationRequest.getState()) @TO@ IfStatement@@if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @AT@ 4665 @LENGTH@ 73
------------------INS Operator@@! @TO@ PrefixExpression@@!authorizationResponse.getState().equals(authorizationRequest.getState()) @AT@ 4665 @LENGTH@ 1
------------------INS MethodInvocation@@authorizationResponse.getState().equals(authorizationRequest.getState()) @TO@ PrefixExpression@@!authorizationResponse.getState().equals(authorizationRequest.getState()) @AT@ 4666 @LENGTH@ 72
---------------------MOV SimpleName@@Name:OAuth2AuthorizationExchangeValidator @TO@ MethodInvocation@@authorizationResponse.getState().equals(authorizationRequest.getState()) @AT@ 3888 @LENGTH@ 36
---------------------MOV SimpleName@@MethodName:validate:[token.getAuthorizationExchange()] @TO@ MethodInvocation@@authorizationResponse.getState().equals(authorizationRequest.getState()) @AT@ 3925 @LENGTH@ 42
------------------------UPD MethodInvocation@@token.getAuthorizationExchange() @TO@ authorizationRequest.getState() @AT@ 3934 @LENGTH@ 32
---------------------------UPD SimpleName@@Name:token @TO@ Name:authorizationRequest @AT@ 3934 @LENGTH@ 5
---------------------------UPD SimpleName@@MethodName:getAuthorizationExchange:[] @TO@ MethodName:getState:[] @AT@ 3940 @LENGTH@ 26
---------------------INS MethodInvocation@@MethodName:getState:[] @TO@ MethodInvocation@@authorizationResponse.getState().equals(authorizationRequest.getState()) @AT@ 4666 @LENGTH@ 32
---------------INS Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @TO@ IfStatement@@if (!authorizationResponse.getState().equals(authorizationRequest.getState())) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @AT@ 4740 @LENGTH@ 159
------------------INS VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE); @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @AT@ 4746 @LENGTH@ 78
---------------------INS SimpleType@@OAuth2Error @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE); @AT@ 4746 @LENGTH@ 11
---------------------INS VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE) @TO@ VariableDeclarationStatement@@OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE); @AT@ 4758 @LENGTH@ 65
------------------------INS SimpleName@@oauth2Error @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE) @AT@ 4758 @LENGTH@ 11
------------------------INS ClassInstanceCreation@@OAuth2Error[INVALID_STATE_PARAMETER_ERROR_CODE] @TO@ VariableDeclarationFragment@@oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE) @AT@ 4772 @LENGTH@ 51
---------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_STATE_PARAMETER_ERROR_CODE] @AT@ 4772 @LENGTH@ 3
---------------------------INS SimpleType@@OAuth2Error @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_STATE_PARAMETER_ERROR_CODE] @AT@ 4776 @LENGTH@ 11
---------------------------INS SimpleName@@INVALID_STATE_PARAMETER_ERROR_CODE @TO@ ClassInstanceCreation@@OAuth2Error[INVALID_STATE_PARAMETER_ERROR_CODE] @AT@ 4788 @LENGTH@ 34
------------------INS ReturnStatement@@MethodInvocation:Mono.error(new OAuth2AuthorizationException(oauth2Error)) @TO@ Block@@ThenBody:{  OAuth2Error oauth2Error=new OAuth2Error(INVALID_STATE_PARAMETER_ERROR_CODE);  return Mono.error(new OAuth2AuthorizationException(oauth2Error));} @AT@ 4829 @LENGTH@ 65
---------------------INS MethodInvocation@@Mono.error(new OAuth2AuthorizationException(oauth2Error)) @TO@ ReturnStatement@@MethodInvocation:Mono.error(new OAuth2AuthorizationException(oauth2Error)) @AT@ 4836 @LENGTH@ 57
------------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(new OAuth2AuthorizationException(oauth2Error)) @AT@ 4836 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:error:[new OAuth2AuthorizationException(oauth2Error)] @TO@ MethodInvocation@@Mono.error(new OAuth2AuthorizationException(oauth2Error)) @AT@ 4841 @LENGTH@ 52
---------------------------INS ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @TO@ SimpleName@@MethodName:error:[new OAuth2AuthorizationException(oauth2Error)] @AT@ 4847 @LENGTH@ 45
------------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @AT@ 4847 @LENGTH@ 3
------------------------------INS SimpleType@@OAuth2AuthorizationException @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @AT@ 4851 @LENGTH@ 28
------------------------------INS SimpleName@@oauth2Error @TO@ ClassInstanceCreation@@OAuth2AuthorizationException[oauth2Error] @AT@ 4880 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1741 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1741 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1757 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:configuration.setHttpProxyPort(new Integer(3128)) @TO@ MethodInvocation:configuration.setHttpProxyPort(Integer.valueOf(3128)) @AT@ 2767 @LENGTH@ 50
---UPD MethodInvocation@@configuration.setHttpProxyPort(new Integer(3128)) @TO@ configuration.setHttpProxyPort(Integer.valueOf(3128)) @AT@ 2767 @LENGTH@ 49
------UPD SimpleName@@MethodName:setHttpProxyPort:[new Integer(3128)] @TO@ MethodName:setHttpProxyPort:[Integer.valueOf(3128)] @AT@ 2781 @LENGTH@ 35
---------DEL ClassInstanceCreation@@Integer[3128] @AT@ 2798 @LENGTH@ 17
------------DEL New@@new @AT@ 2798 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2802 @LENGTH@ 7
------------DEL NumberLiteral@@3128 @AT@ 2810 @LENGTH@ 4
---------INS MethodInvocation@@Integer.valueOf(3128) @TO@ SimpleName@@MethodName:setHttpProxyPort:[new Integer(3128)] @AT@ 2802 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(3128) @AT@ 2802 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[3128] @TO@ MethodInvocation@@Integer.valueOf(3128) @AT@ 2810 @LENGTH@ 13
---------------INS NumberLiteral@@3128 @TO@ SimpleName@@MethodName:valueOf:[3128] @AT@ 2818 @LENGTH@ 4


MOV FieldDeclaration@@public, static, final, RedeliveryPolicy, [DEFAULT_POLICY=new RedeliveryPolicy()] @TO@ TypeDeclaration@@[public]RedeliveryPolicy, [Cloneable, Serializable] @AT@ 3814 @LENGTH@ 77


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1850 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1850 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1866 @LENGTH@ 21


UPD MethodDeclaration@@public, static, MongoDatabase, MethodName:getDatabase, String dbName, MongoDatabaseFactory factory,  @TO@ public, static, MongoDatabase, MethodName:getDatabase, @Nullable String dbName, MongoDatabaseFactory factory,  @AT@ 4071 @LENGTH@ 181
---UPD SingleVariableDeclaration@@String dbName @TO@ @Nullable String dbName @AT@ 4111 @LENGTH@ 13


MOV MethodDeclaration@@public, Mono<Void>, MethodName:deleteAll,  @TO@ TypeDeclaration@@[@Repository, @Transactional(readOnly=true), @API(status=API.Status.STABLE,since="6.0"), public]SimpleReactiveNeo4jRepository, [ReactiveSortingRepository<T,ID>] @AT@ 5975 @LENGTH@ 114


UPD VariableDeclarationStatement@@Object value=properties[index]; @TO@ Object value=properties != null ? properties[index] : null; @AT@ 4706 @LENGTH@ 33
---UPD VariableDeclarationFragment@@value=properties[index] @TO@ value=properties != null ? properties[index] : null @AT@ 4713 @LENGTH@ 25
------INS ConditionalExpression@@properties != null ? properties[index] : null @TO@ VariableDeclarationFragment@@value=properties[index] @AT@ 4721 @LENGTH@ 45
---------INS InfixExpression@@properties != null @TO@ ConditionalExpression@@properties != null ? properties[index] : null @AT@ 4721 @LENGTH@ 18
------------INS SimpleName@@properties @TO@ InfixExpression@@properties != null @AT@ 4721 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@properties != null @AT@ 4731 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@properties != null @AT@ 4735 @LENGTH@ 4
---------INS ArrayAccess@@properties[index] @TO@ ConditionalExpression@@properties != null ? properties[index] : null @AT@ 4742 @LENGTH@ 17
------------MOV SimpleName@@properties @TO@ ArrayAccess@@properties[index] @AT@ 4721 @LENGTH@ 10
------------MOV SimpleName@@index @TO@ ArrayAccess@@properties[index] @AT@ 4732 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ ConditionalExpression@@properties != null ? properties[index] : null @AT@ 4762 @LENGTH@ 4
------DEL ArrayAccess@@properties[index] @AT@ 4721 @LENGTH@ 17


DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("PreAuthenticated WebSphere principal: " + principal);} @AT@ 1890 @LENGTH@ 115
---DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 1894 @LENGTH@ 28
------DEL FieldAccess@@this.logger @AT@ 1894 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1894 @LENGTH@ 4
---------DEL SimpleName@@logger @AT@ 1899 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1906 @LENGTH@ 16
---DEL Block@@ThenBody:{  this.logger.debug("PreAuthenticated WebSphere principal: " + principal);} @AT@ 1924 @LENGTH@ 81
------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("PreAuthenticated WebSphere principal: " + principal) @AT@ 1929 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:assertEquals(response,"Message: hello, world!") @TO@ MethodInvocation:assertEquals("Message: hello, world!",response) @AT@ 3632 @LENGTH@ 49
---UPD MethodInvocation@@assertEquals(response,"Message: hello, world!") @TO@ assertEquals("Message: hello, world!",response) @AT@ 3632 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertEquals:[response, "Message: hello, world!"] @TO@ MethodName:assertEquals:["Message: hello, world!", response] @AT@ 3632 @LENGTH@ 48
---------INS StringLiteral@@"Message: hello, world!" @TO@ SimpleName@@MethodName:assertEquals:[response, "Message: hello, world!"] @AT@ 3645 @LENGTH@ 24
---------DEL StringLiteral@@"Message: hello, world!" @AT@ 3655 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 4749 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 4749 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 4749 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 4760 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 4776 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("amq:queue:inbox").to("mock:inbox").inOnly("amq:topic:orderServiceNotification").bean("orderService","handleOrder") @TO@ MethodInvocation:from("amq:queue:inbox").to("mock:inbox").to(ExchangePattern.InOnly,"amq:topic:orderServiceNotification").bean("orderService","handleOrder") @AT@ 3483 @LENGTH@ 146
---UPD MethodInvocation@@from("amq:queue:inbox").to("mock:inbox").inOnly("amq:topic:orderServiceNotification").bean("orderService","handleOrder") @TO@ from("amq:queue:inbox").to("mock:inbox").to(ExchangePattern.InOnly,"amq:topic:orderServiceNotification").bean("orderService","handleOrder") @AT@ 3483 @LENGTH@ 145
------UPD MethodInvocation@@MethodName:inOnly:["amq:topic:orderServiceNotification"] @TO@ MethodName:to:[ExchangePattern.InOnly, "amq:topic:orderServiceNotification"] @AT@ 3483 @LENGTH@ 85
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:["amq:topic:orderServiceNotification"] @AT@ 3568 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3568 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3584 @LENGTH@ 6


UPD IfStatement@@if (session == null) {  return;} @TO@ if (session != null) {  session.removeAttribute(WebAttributes.AUTHENTICATION_EXCEPTION);} @AT@ 2580 @LENGTH@ 37
---UPD InfixExpression@@session == null @TO@ session != null @AT@ 2584 @LENGTH@ 15
------UPD Operator@@== @TO@ != @AT@ 2591 @LENGTH@ 2
---UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  session.removeAttribute(WebAttributes.AUTHENTICATION_EXCEPTION);} @AT@ 2601 @LENGTH@ 16
------DEL ReturnStatement@@ @AT@ 2606 @LENGTH@ 7
------MOV ExpressionStatement@@MethodInvocation:session.removeAttribute(WebAttributes.AUTHENTICATION_EXCEPTION) @TO@ Block@@ThenBody:{  return;} @AT@ 2621 @LENGTH@ 64


UPD TypeDeclaration@@[public]OpenIDAttribute, [Serializable] @TO@ [@Deprecated, public]OpenIDAttribute, [Serializable] @AT@ 1405 @LENGTH@ 1729
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAttribute, [Serializable] @AT@ 1405 @LENGTH@ 11


INS ReturnStatement@@SimpleName:authentication @TO@ MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @AT@ 2619 @LENGTH@ 22
---INS SimpleName@@authentication @TO@ ReturnStatement@@SimpleName:authentication @AT@ 2626 @LENGTH@ 14


UPD VariableDeclarationStatement@@final String input="line1" + LINE_SEPARATOR + "line2"; @TO@ final String input="line1" + System.lineSeparator() + "line2"; @AT@ 4566 @LENGTH@ 56
---UPD VariableDeclarationFragment@@input="line1" + LINE_SEPARATOR + "line2" @TO@ input="line1" + System.lineSeparator() + "line2" @AT@ 4579 @LENGTH@ 42
------UPD InfixExpression@@"line1" + LINE_SEPARATOR + "line2" @TO@ "line1" + System.lineSeparator() + "line2" @AT@ 4587 @LENGTH@ 34
---------INS MethodInvocation@@System.lineSeparator() @TO@ InfixExpression@@"line1" + LINE_SEPARATOR + "line2" @AT@ 4537 @LENGTH@ 22
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.lineSeparator() @AT@ 4537 @LENGTH@ 6
------------INS SimpleName@@MethodName:lineSeparator:[] @TO@ MethodInvocation@@System.lineSeparator() @AT@ 4544 @LENGTH@ 15
---------DEL SimpleName@@LINE_SEPARATOR @AT@ 4597 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2326 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2326 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2342 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:(StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase()).getCollection(dbref.getCollectionName(),Document.class) @TO@ MethodInvocation:MongoDatabaseUtils.getDatabase(dbref.getDatabaseName(),mongoDbFactory).getCollection(dbref.getCollectionName(),Document.class) @AT@ 15389 @LENGTH@ 210
---UPD MethodInvocation@@(StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase()).getCollection(dbref.getCollectionName(),Document.class) @TO@ MongoDatabaseUtils.getDatabase(dbref.getDatabaseName(),mongoDbFactory).getCollection(dbref.getCollectionName(),Document.class) @AT@ 15396 @LENGTH@ 202
------DEL ParenthesizedExpression@@(StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase()) @AT@ 15396 @LENGTH@ 145
---------DEL ConditionalExpression@@StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase() @AT@ 15397 @LENGTH@ 143
------------DEL MethodInvocation@@StringUtils.hasText(dbref.getDatabaseName()) @AT@ 15397 @LENGTH@ 44
---------------DEL SimpleName@@MethodName:hasText:[dbref.getDatabaseName()] @AT@ 15409 @LENGTH@ 32
------------------DEL MethodInvocation@@dbref.getDatabaseName() @AT@ 15417 @LENGTH@ 23
------------DEL MethodInvocation@@mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) @AT@ 15444 @LENGTH@ 56
---------------DEL SimpleName@@MethodName:getMongoDatabase:[dbref.getDatabaseName()] @AT@ 15459 @LENGTH@ 41
------------------DEL MethodInvocation@@dbref.getDatabaseName() @AT@ 15476 @LENGTH@ 23
---------------------DEL SimpleName@@Name:dbref @AT@ 15476 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:getDatabaseName:[] @AT@ 15482 @LENGTH@ 17
------------DEL MethodInvocation@@mongoDbFactory.getMongoDatabase() @AT@ 15507 @LENGTH@ 33
---------------DEL SimpleName@@Name:mongoDbFactory @AT@ 15507 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getMongoDatabase:[] @AT@ 15522 @LENGTH@ 18
------MOV SimpleName@@Name:StringUtils @TO@ MethodInvocation@@(StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase()).getCollection(dbref.getCollectionName(),Document.class) @AT@ 15397 @LENGTH@ 11
------INS MethodInvocation@@MethodName:getDatabase:[dbref.getDatabaseName(), mongoDbFactory] @TO@ MethodInvocation@@(StringUtils.hasText(dbref.getDatabaseName()) ? mongoDbFactory.getMongoDatabase(dbref.getDatabaseName()) : mongoDbFactory.getMongoDatabase()).getCollection(dbref.getCollectionName(),Document.class) @AT@ 15456 @LENGTH@ 71
---------MOV SimpleName@@Name:mongoDbFactory @TO@ MethodInvocation@@MethodName:getDatabase:[dbref.getDatabaseName(), mongoDbFactory] @AT@ 15444 @LENGTH@ 14
---------INS MethodInvocation@@dbref.getDatabaseName() @TO@ MethodInvocation@@MethodName:getDatabase:[dbref.getDatabaseName(), mongoDbFactory] @AT@ 15487 @LENGTH@ 23
------------MOV SimpleName@@Name:dbref @TO@ MethodInvocation@@dbref.getDatabaseName() @AT@ 15417 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getDatabaseName:[] @TO@ MethodInvocation@@dbref.getDatabaseName() @AT@ 15423 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("matches = %s",result)) @TO@ MethodDeclaration@@public, boolean, MethodName:matches, HttpServletRequest request,  @AT@ 1840 @LENGTH@ 61
---MOV MethodInvocation@@this.logger.debug("matches = " + result) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("matches = %s",result)) @AT@ 1831 @LENGTH@ 40
------UPD SimpleName@@MethodName:debug:["matches = " + result] @TO@ MethodName:format:["matches = %s", result] @AT@ 1843 @LENGTH@ 28
------INS SimpleName@@MethodName:debug:[LogMessage.format("matches = %s",result)] @TO@ MethodInvocation@@this.logger.debug("matches = " + result) @AT@ 1852 @LENGTH@ 48
---------INS MethodInvocation@@LogMessage.format("matches = %s",result) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("matches = %s",result)] @AT@ 1858 @LENGTH@ 41
------------MOV SimpleName@@MethodName:debug:["matches = " + result] @TO@ MethodInvocation@@LogMessage.format("matches = %s",result) @AT@ 1843 @LENGTH@ 28
---------------DEL InfixExpression@@"matches = " + result @AT@ 1849 @LENGTH@ 21
------------------DEL StringLiteral@@"matches = " @AT@ 1849 @LENGTH@ 12
------------------DEL Operator@@+ @AT@ 1861 @LENGTH@ 1
------------------DEL SimpleName@@result @AT@ 1864 @LENGTH@ 6
---------------INS StringLiteral@@"matches = %s" @TO@ SimpleName@@MethodName:debug:["matches = " + result] @AT@ 1876 @LENGTH@ 14
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["matches = " + result] @AT@ 1892 @LENGTH@ 6
------------MOV SimpleName@@MethodName:debug:["matches = " + result] @TO@ MethodInvocation@@LogMessage.format("matches = %s",result) @AT@ 1843 @LENGTH@ 28
---------------DEL InfixExpression@@"matches = " + result @AT@ 1849 @LENGTH@ 21
------------------DEL StringLiteral@@"matches = " @AT@ 1849 @LENGTH@ 12
------------------DEL Operator@@+ @AT@ 1861 @LENGTH@ 1
------------------DEL SimpleName@@result @AT@ 1864 @LENGTH@ 6
---------------INS StringLiteral@@"matches = %s" @TO@ SimpleName@@MethodName:debug:["matches = " + result] @AT@ 1876 @LENGTH@ 14
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["matches = " + result] @AT@ 1892 @LENGTH@ 6
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("matches = %s",result) @AT@ 1858 @LENGTH@ 10


UPD EnhancedForStatement@@for (Map.Entry<ArchivePath,Node> entry : archive.getContent(a -> a.get().endsWith(JAR_SUFFIX)).entrySet()) {  if (entry.getValue().getAsset() instanceof ArchiveAsset) {    ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();    index(archiveAsset.getArchive(),indexes);  } else {    try (InputStream contentStream=entry.getValue().getAsset().openStream()){      JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);      index(jarArchive,indexes);    }   }} @TO@ for (Map.Entry<ArchivePath,Node> entry : archive.getContent(a -> a.get().endsWith(JAR_SUFFIX)).entrySet()) {  Asset asset=entry.getValue().getAsset();  if (asset instanceof ArchiveAsset) {    ArchiveAsset archiveAsset=(ArchiveAsset)asset;    index(archiveAsset.getArchive(),indexes);  } else   if (asset != null) {    try (InputStream contentStream=asset.openStream()){      JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);      index(jarArchive,indexes);    }   }} @AT@ 4184 @LENGTH@ 776
---UPD IfStatement@@if (entry.getValue().getAsset() instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();  index(archiveAsset.getArchive(),indexes);} else {  try (InputStream contentStream=entry.getValue().getAsset().openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @TO@ if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4310 @LENGTH@ 636
---INS VariableDeclarationStatement@@Asset asset=entry.getValue().getAsset(); @TO@ EnhancedForStatement@@for (Map.Entry<ArchivePath,Node> entry : archive.getContent(a -> a.get().endsWith(JAR_SUFFIX)).entrySet()) {  if (entry.getValue().getAsset() instanceof ArchiveAsset) {    ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();    index(archiveAsset.getArchive(),indexes);  } else {    try (InputStream contentStream=entry.getValue().getAsset().openStream()){      JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);      index(jarArchive,indexes);    }   }} @AT@ 4355 @LENGTH@ 42
------INS SimpleType@@Asset @TO@ VariableDeclarationStatement@@Asset asset=entry.getValue().getAsset(); @AT@ 4355 @LENGTH@ 5
------INS VariableDeclarationFragment@@asset=entry.getValue().getAsset() @TO@ VariableDeclarationStatement@@Asset asset=entry.getValue().getAsset(); @AT@ 4361 @LENGTH@ 35
---------INS SimpleName@@asset @TO@ VariableDeclarationFragment@@asset=entry.getValue().getAsset() @AT@ 4361 @LENGTH@ 5
---------INS MethodInvocation@@entry.getValue().getAsset() @TO@ VariableDeclarationFragment@@asset=entry.getValue().getAsset() @AT@ 4369 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue().getAsset() @AT@ 4369 @LENGTH@ 16
------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue().getAsset() @AT@ 4369 @LENGTH@ 5
------------INS SimpleName@@MethodName:getAsset:[] @TO@ MethodInvocation@@entry.getValue().getAsset() @AT@ 4386 @LENGTH@ 10
---INS IfStatement@@if (asset instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} else if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @TO@ EnhancedForStatement@@for (Map.Entry<ArchivePath,Node> entry : archive.getContent(a -> a.get().endsWith(JAR_SUFFIX)).entrySet()) {  if (entry.getValue().getAsset() instanceof ArchiveAsset) {    ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();    index(archiveAsset.getArchive(),indexes);  } else {    try (InputStream contentStream=entry.getValue().getAsset().openStream()){      JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);      index(jarArchive,indexes);    }   }} @AT@ 4414 @LENGTH@ 757
------INS InstanceofExpression@@asset instanceof ArchiveAsset @TO@ IfStatement@@if (asset instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} else if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4418 @LENGTH@ 29
---------INS SimpleName@@asset @TO@ InstanceofExpression@@asset instanceof ArchiveAsset @AT@ 4418 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@asset instanceof ArchiveAsset @AT@ 4424 @LENGTH@ 10
---------INS SimpleType@@ArchiveAsset @TO@ InstanceofExpression@@asset instanceof ArchiveAsset @AT@ 4435 @LENGTH@ 12
------INS Block@@ThenBody:{  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} @TO@ IfStatement@@if (asset instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} else if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4449 @LENGTH@ 152
---------INS VariableDeclarationStatement@@ArchiveAsset archiveAsset=(ArchiveAsset)asset; @TO@ Block@@ThenBody:{  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} @AT@ 4471 @LENGTH@ 49
------------INS SimpleType@@ArchiveAsset @TO@ VariableDeclarationStatement@@ArchiveAsset archiveAsset=(ArchiveAsset)asset; @AT@ 4471 @LENGTH@ 12
------------INS VariableDeclarationFragment@@archiveAsset=(ArchiveAsset)asset @TO@ VariableDeclarationStatement@@ArchiveAsset archiveAsset=(ArchiveAsset)asset; @AT@ 4484 @LENGTH@ 35
---------------INS SimpleName@@archiveAsset @TO@ VariableDeclarationFragment@@archiveAsset=(ArchiveAsset)asset @AT@ 4484 @LENGTH@ 12
---------------INS CastExpression@@(ArchiveAsset)asset @TO@ VariableDeclarationFragment@@archiveAsset=(ArchiveAsset)asset @AT@ 4499 @LENGTH@ 20
------------------INS SimpleType@@ArchiveAsset @TO@ CastExpression@@(ArchiveAsset)asset @AT@ 4500 @LENGTH@ 12
------------------INS SimpleName@@asset @TO@ CastExpression@@(ArchiveAsset)asset @AT@ 4514 @LENGTH@ 5
---------MOV ExpressionStatement@@MethodInvocation:index(archiveAsset.getArchive(),indexes) @TO@ Block@@ThenBody:{  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} @AT@ 4481 @LENGTH@ 42
------INS Block@@ElseBody:if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @TO@ IfStatement@@if (asset instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)asset;  index(archiveAsset.getArchive(),indexes);} else if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4607 @LENGTH@ 564
---------MOV IfStatement@@if (entry.getValue().getAsset() instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();  index(archiveAsset.getArchive(),indexes);} else {  try (InputStream contentStream=entry.getValue().getAsset().openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @TO@ Block@@ElseBody:if (asset != null) {  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4310 @LENGTH@ 636
------------DEL InstanceofExpression@@entry.getValue().getAsset() instanceof ArchiveAsset @AT@ 4314 @LENGTH@ 51
---------------DEL MethodInvocation@@entry.getValue().getAsset() @AT@ 4314 @LENGTH@ 27
------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 4314 @LENGTH@ 16
------------------DEL SimpleName@@Name:entry @AT@ 4314 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:getAsset:[] @AT@ 4331 @LENGTH@ 10
---------------DEL Instanceof@@instanceof @AT@ 4342 @LENGTH@ 10
---------------DEL SimpleType@@ArchiveAsset @AT@ 4353 @LENGTH@ 12
------------DEL Block@@ThenBody:{  ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();  index(archiveAsset.getArchive(),indexes);} @AT@ 4367 @LENGTH@ 174
---------------DEL VariableDeclarationStatement@@ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset(); @AT@ 4389 @LENGTH@ 71
------------------DEL SimpleType@@ArchiveAsset @AT@ 4389 @LENGTH@ 12
------------------DEL VariableDeclarationFragment@@archiveAsset=(ArchiveAsset)entry.getValue().getAsset() @AT@ 4402 @LENGTH@ 57
---------------------DEL SimpleName@@archiveAsset @AT@ 4402 @LENGTH@ 12
---------------------DEL CastExpression@@(ArchiveAsset)entry.getValue().getAsset() @AT@ 4417 @LENGTH@ 42
------------------------DEL SimpleType@@ArchiveAsset @AT@ 4418 @LENGTH@ 12
------------------------DEL MethodInvocation@@entry.getValue().getAsset() @AT@ 4432 @LENGTH@ 27
---------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 4432 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:entry @AT@ 4432 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:getAsset:[] @AT@ 4449 @LENGTH@ 10
------------UPD Block@@ElseBody:{  try (InputStream contentStream=entry.getValue().getAsset().openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @TO@ ThenBody:{  try (InputStream contentStream=asset.openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4547 @LENGTH@ 399
---------------UPD TryStatement@@try (InputStream contentStream=entry.getValue().getAsset().openStream()){  JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);  index(jarArchive,indexes);}  @TO@ try (InputStream contentStream=asset.openStream()){  JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);  index(jarArchive,indexes);}  @AT@ 4569 @LENGTH@ 359
------------------UPD VariableDeclarationExpression@@InputStream contentStream=entry.getValue().getAsset().openStream() @TO@ InputStream contentStream=asset.openStream() @AT@ 4574 @LENGTH@ 68
---------------------UPD VariableDeclarationFragment@@contentStream=entry.getValue().getAsset().openStream() @TO@ contentStream=asset.openStream() @AT@ 4586 @LENGTH@ 56
------------------------UPD MethodInvocation@@entry.getValue().getAsset().openStream() @TO@ asset.openStream() @AT@ 4602 @LENGTH@ 40
---------------------------DEL MethodInvocation@@MethodName:getAsset:[] @AT@ 4602 @LENGTH@ 27
---------------------------DEL MethodInvocation@@MethodName:getValue:[] @AT@ 4602 @LENGTH@ 16
---------------------------UPD SimpleName@@Name:entry @TO@ Name:asset @AT@ 4602 @LENGTH@ 5
------------INS InfixExpression@@asset != null @TO@ IfStatement@@if (entry.getValue().getAsset() instanceof ArchiveAsset) {  ArchiveAsset archiveAsset=(ArchiveAsset)entry.getValue().getAsset();  index(archiveAsset.getArchive(),indexes);} else {  try (InputStream contentStream=entry.getValue().getAsset().openStream()){    JARArchive jarArchive=ShrinkWrap.create(JARArchive.class,entry.getKey().get()).as(ZipImporter.class).importFrom(contentStream).as(JARArchive.class);    index(jarArchive,indexes);  } } @AT@ 4611 @LENGTH@ 13
---------------INS SimpleName@@asset @TO@ InfixExpression@@asset != null @AT@ 4611 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@asset != null @AT@ 4616 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@asset != null @AT@ 4620 @LENGTH@ 4


UPD EnhancedForStatement@@for (Object property : new HashSet<>(System.getProperties().keySet())) {  System.clearProperty((String)property);} @TO@ for (Object property : new HashSet<>(System.getProperties().keySet())) {  if (!startingProperties.contains(property)) {    System.clearProperty((String)property);  }} @AT@ 1683 @LENGTH@ 134
---INS IfStatement@@if (!startingProperties.contains(property)) {  System.clearProperty((String)property);} @TO@ EnhancedForStatement@@for (Object property : new HashSet<>(System.getProperties().keySet())) {  System.clearProperty((String)property);} @AT@ 1768 @LENGTH@ 116
------INS PrefixExpression@@!startingProperties.contains(property) @TO@ IfStatement@@if (!startingProperties.contains(property)) {  System.clearProperty((String)property);} @AT@ 1772 @LENGTH@ 38
---------INS Operator@@! @TO@ PrefixExpression@@!startingProperties.contains(property) @AT@ 1772 @LENGTH@ 1
---------INS MethodInvocation@@startingProperties.contains(property) @TO@ PrefixExpression@@!startingProperties.contains(property) @AT@ 1773 @LENGTH@ 37
------------INS SimpleName@@Name:startingProperties @TO@ MethodInvocation@@startingProperties.contains(property) @AT@ 1773 @LENGTH@ 18
------------INS SimpleName@@MethodName:contains:[property] @TO@ MethodInvocation@@startingProperties.contains(property) @AT@ 1792 @LENGTH@ 18
---------------INS SimpleName@@property @TO@ SimpleName@@MethodName:contains:[property] @AT@ 1801 @LENGTH@ 8
------INS Block@@ThenBody:{  System.clearProperty((String)property);} @TO@ IfStatement@@if (!startingProperties.contains(property)) {  System.clearProperty((String)property);} @AT@ 1812 @LENGTH@ 72
---------MOV ExpressionStatement@@MethodInvocation:System.clearProperty((String)property) @TO@ Block@@ThenBody:{  System.clearProperty((String)property);} @AT@ 1768 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ MethodInvocation:assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2613 @LENGTH@ 102
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2613 @LENGTH@ 101
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @TO@ MethodName:assertEquals:["3a5c8b1ad448bca04584ecb55b836264", resultExchange.getIn().getHeader(S3Constants.E_TAG)] @AT@ 2613 @LENGTH@ 101
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.E_TAG) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @AT@ 2626 @LENGTH@ 51


UPD EnhancedForStatement@@for (Map.Entry<Class,Boolean> entry : threadClasses.entrySet()) {  if (entry.getValue()) {    LOG.info("Found thread for " + entry.getKey().getSimpleName());  }  Assert.assertTrue("No thread found for class " + entry.getKey().getSimpleName(),entry.getValue());} @TO@ for (Map.Entry<Class<? extends Thread>,Boolean> entry : threadClasses.entrySet()) {  if (entry.getValue()) {    LOG.info("Found thread for " + entry.getKey().getSimpleName());  }  Assert.assertTrue("No thread found for class " + entry.getKey().getSimpleName(),entry.getValue());} @AT@ 2034 @LENGTH@ 302
---UPD SingleVariableDeclaration@@Map.Entry<Class,Boolean> entry @TO@ Map.Entry<Class<? extends Thread>,Boolean> entry @AT@ 2039 @LENGTH@ 31
------UPD ParameterizedType@@Map.Entry<Class,Boolean> @TO@ Map.Entry<Class<? extends Thread>,Boolean> @AT@ 2039 @LENGTH@ 25
---------INS ParameterizedType@@Class<? extends Thread> @TO@ ParameterizedType@@Map.Entry<Class,Boolean> @AT@ 1857 @LENGTH@ 23
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 1863 @LENGTH@ 16
------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 2049 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertNotNull(calculateResponse,"instanceId = " + instanceId) @TO@ MethodInvocation:assertNotEquals(0,calculateResponse,"instanceId = " + instanceId) @AT@ 3905 @LENGTH@ 63
---UPD MethodInvocation@@assertNotNull(calculateResponse,"instanceId = " + instanceId) @TO@ assertNotEquals(0,calculateResponse,"instanceId = " + instanceId) @AT@ 3905 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertNotNull:[calculateResponse, "instanceId = " + instanceId] @TO@ MethodName:assertNotEquals:[0, calculateResponse, "instanceId = " + instanceId] @AT@ 3905 @LENGTH@ 62
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertNotNull:[calculateResponse, "instanceId = " + instanceId] @AT@ 3923 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2333 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2333 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2349 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:Thread.sleep(10000) @AT@ 1895 @LENGTH@ 50
---UPD MethodInvocation@@Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ Thread.sleep(10000) @AT@ 1895 @LENGTH@ 49
------UPD SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @TO@ MethodName:sleep:[10000] @AT@ 1902 @LENGTH@ 42
---------DEL MethodInvocation@@runFrequency(TimeUnit.MILLISECONDS) @AT@ 1908 @LENGTH@ 35
------------DEL SimpleName@@MethodName:runFrequency:[TimeUnit.MILLISECONDS] @AT@ 1908 @LENGTH@ 35
---------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 1921 @LENGTH@ 21
------------------DEL SimpleName@@TimeUnit @AT@ 1921 @LENGTH@ 8
------------------DEL SimpleName@@MILLISECONDS @AT@ 1930 @LENGTH@ 12
---------INS NumberLiteral@@10000 @TO@ SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @AT@ 1908 @LENGTH@ 5


MOV MethodDeclaration@@private, voidMethodName:TestSecurityContextHolder,  @TO@ TypeDeclaration@@[public, final]TestSecurityContextHolder,  @AT@ 4703 @LENGTH@ 40


UPD VariableDeclarationStatement@@Path file=srcDir.resolve(className.replace('.','/') + ".java"); @TO@ Path file=srcDir.resolve(className.replaceAll("<.*>","").replace('.','/') + ".java"); @AT@ 22925 @LENGTH@ 66
---UPD VariableDeclarationFragment@@file=srcDir.resolve(className.replace('.','/') + ".java") @TO@ file=srcDir.resolve(className.replaceAll("<.*>","").replace('.','/') + ".java") @AT@ 22930 @LENGTH@ 60
------UPD MethodInvocation@@srcDir.resolve(className.replace('.','/') + ".java") @TO@ srcDir.resolve(className.replaceAll("<.*>","").replace('.','/') + ".java") @AT@ 22937 @LENGTH@ 53
---------UPD SimpleName@@MethodName:resolve:[className.replace('.','/') + ".java"] @TO@ MethodName:resolve:[className.replaceAll("<.*>","").replace('.','/') + ".java"] @AT@ 22944 @LENGTH@ 46
------------UPD InfixExpression@@className.replace('.','/') + ".java" @TO@ className.replaceAll("<.*>","").replace('.','/') + ".java" @AT@ 22952 @LENGTH@ 37
---------------UPD MethodInvocation@@className.replace('.','/') @TO@ className.replaceAll("<.*>","").replace('.','/') @AT@ 22952 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:replaceAll:["<.*>", ""] @TO@ MethodInvocation@@className.replace('.','/') @AT@ 23035 @LENGTH@ 32
---------------------INS StringLiteral@@"<.*>" @TO@ MethodInvocation@@MethodName:replaceAll:["<.*>", ""] @AT@ 23056 @LENGTH@ 6
---------------------INS StringLiteral@@"" @TO@ MethodInvocation@@MethodName:replaceAll:["<.*>", ""] @AT@ 23064 @LENGTH@ 2


INS MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @TO@ TypeDeclaration@@[public]DefaultOAuth2UserService, [OAuth2UserService<OAuth2UserRequest,OAuth2User>] @AT@ 3854 @LENGTH@ 1760
---INS Modifier@@public @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3854 @LENGTH@ 6
---INS SimpleType@@OAuth2User @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3861 @LENGTH@ 10
---INS SimpleName@@MethodName:loadUser @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3872 @LENGTH@ 8
---INS SingleVariableDeclaration@@OAuth2UserRequest userRequest @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3881 @LENGTH@ 29
------INS SimpleType@@OAuth2UserRequest @TO@ SingleVariableDeclaration@@OAuth2UserRequest userRequest @AT@ 3881 @LENGTH@ 17
------INS SimpleName@@userRequest @TO@ SingleVariableDeclaration@@OAuth2UserRequest userRequest @AT@ 3899 @LENGTH@ 11
---INS SimpleType@@OAuth2AuthenticationException @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3919 @LENGTH@ 29
---MOV ExpressionStatement@@MethodInvocation:Assert.notNull(userRequest,"userRequest cannot be null") @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 3953 @LENGTH@ 58
---MOV IfStatement@@if (!StringUtils.hasText(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri())) {  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_INFO_URI_ERROR_CODE,"Missing required UserInfo Uri in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 4015 @LENGTH@ 446
---MOV VariableDeclarationStatement@@String userNameAttributeName=userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUserNameAttributeName(); @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 4464 @LENGTH@ 142
---MOV IfStatement@@if (!StringUtils.hasText(userNameAttributeName)) {  OAuth2Error oauth2Error=new OAuth2Error(MISSING_USER_NAME_ATTRIBUTE_ERROR_CODE,"Missing required \"user name\" attribute name in UserInfoEndpoint for Client Registration: " + userRequest.getClientRegistration().getRegistrationId(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 4609 @LENGTH@ 397
---MOV VariableDeclarationStatement@@RequestEntity<?> request=this.requestEntityConverter.convert(userRequest); @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 5010 @LENGTH@ 76
---MOV VariableDeclarationStatement@@ResponseEntity<Map<String,Object>> response; @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 5090 @LENGTH@ 45
---MOV VariableDeclarationStatement@@Map<String,Object> userAttributes=response.getBody(); @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7429 @LENGTH@ 56
---MOV VariableDeclarationStatement@@Set<GrantedAuthority> authorities=new LinkedHashSet<>(); @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7488 @LENGTH@ 58
---MOV ExpressionStatement@@MethodInvocation:authorities.add(new OAuth2UserAuthority(userAttributes)) @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7549 @LENGTH@ 57
---MOV VariableDeclarationStatement@@OAuth2AccessToken token=userRequest.getAccessToken(); @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7609 @LENGTH@ 55
---MOV EnhancedForStatement@@for (String authority : token.getScopes()) {  authorities.add(new SimpleGrantedAuthority("SCOPE_" + authority));} @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7667 @LENGTH@ 118
---MOV ReturnStatement@@ClassInstanceCreation:new DefaultOAuth2User(authorities,userAttributes,userNameAttributeName) @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 7789 @LENGTH@ 81


UPD ExpressionStatement@@MethodInvocation:assertEquals(status.getState(),"success") @TO@ MethodInvocation:assertEquals("success",status.getState()) @AT@ 3160 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(status.getState(),"success") @TO@ assertEquals("success",status.getState()) @AT@ 3160 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[status.getState(), "success"] @TO@ MethodName:assertEquals:["success", status.getState()] @AT@ 3160 @LENGTH@ 42
---------INS StringLiteral@@"success" @TO@ SimpleName@@MethodName:assertEquals:[status.getState(), "success"] @AT@ 3173 @LENGTH@ 9
---------DEL StringLiteral@@"success" @AT@ 3192 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:assertEquals("fooReader",getField(executionContextUserSupport,"name")) @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 3928 @LENGTH@ 73
---INS MethodInvocation@@assertEquals("fooReader",getField(executionContextUserSupport,"name")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("fooReader",getField(executionContextUserSupport,"name")) @AT@ 3928 @LENGTH@ 72
------INS SimpleName@@MethodName:assertEquals:["fooReader", getField(executionContextUserSupport,"name")] @TO@ MethodInvocation@@assertEquals("fooReader",getField(executionContextUserSupport,"name")) @AT@ 3928 @LENGTH@ 72
---------INS StringLiteral@@"fooReader" @TO@ SimpleName@@MethodName:assertEquals:["fooReader", getField(executionContextUserSupport,"name")] @AT@ 3941 @LENGTH@ 11
---------INS MethodInvocation@@getField(executionContextUserSupport,"name") @TO@ SimpleName@@MethodName:assertEquals:["fooReader", getField(executionContextUserSupport,"name")] @AT@ 3954 @LENGTH@ 45
------------INS SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @TO@ MethodInvocation@@getField(executionContextUserSupport,"name") @AT@ 3954 @LENGTH@ 45
---------------INS SimpleName@@executionContextUserSupport @TO@ SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @AT@ 3963 @LENGTH@ 27
---------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @AT@ 3992 @LENGTH@ 6
------------INS SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @TO@ MethodInvocation@@getField(executionContextUserSupport,"name") @AT@ 3954 @LENGTH@ 45
---------------INS SimpleName@@executionContextUserSupport @TO@ SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @AT@ 3963 @LENGTH@ 27
---------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:getField:[executionContextUserSupport, "name"] @AT@ 3992 @LENGTH@ 6


DEL IfStatement@@if (!("http".equals(scheme) | "https".equals(scheme))) {  throw new IllegalArgumentException("Unsupported scheme '" + scheme + "'");} @AT@ 1140 @LENGTH@ 138
---DEL PrefixExpression@@!("http".equals(scheme) | "https".equals(scheme)) @AT@ 1144 @LENGTH@ 49
------DEL Operator@@! @AT@ 1144 @LENGTH@ 1
------DEL ParenthesizedExpression@@("http".equals(scheme) | "https".equals(scheme)) @AT@ 1145 @LENGTH@ 48
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Unsupported scheme '" + scheme + "'");} @AT@ 1195 @LENGTH@ 83
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unsupported scheme '" + scheme + "'") @AT@ 1200 @LENGTH@ 74
---------DEL ClassInstanceCreation@@IllegalArgumentException["Unsupported scheme '" + scheme + "'"] @AT@ 1206 @LENGTH@ 67
------------DEL New@@new @AT@ 1206 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 1210 @LENGTH@ 24
------------DEL InfixExpression@@"Unsupported scheme '" + scheme + "'" @AT@ 1235 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:assertEquals(c.assertExchangeReceived(0).getIn().getBody(String.class),"James,Guillaume,Hiram,Rob,Roman") @TO@ MethodInvocation:assertEquals("James,Guillaume,Hiram,Rob,Roman",c.assertExchangeReceived(0).getIn().getBody(String.class)) @AT@ 1701 @LENGTH@ 107
---UPD MethodInvocation@@assertEquals(c.assertExchangeReceived(0).getIn().getBody(String.class),"James,Guillaume,Hiram,Rob,Roman") @TO@ assertEquals("James,Guillaume,Hiram,Rob,Roman",c.assertExchangeReceived(0).getIn().getBody(String.class)) @AT@ 1701 @LENGTH@ 106
------UPD SimpleName@@MethodName:assertEquals:[c.assertExchangeReceived(0).getIn().getBody(String.class), "James,Guillaume,Hiram,Rob,Roman"] @TO@ MethodName:assertEquals:["James,Guillaume,Hiram,Rob,Roman", c.assertExchangeReceived(0).getIn().getBody(String.class)] @AT@ 1701 @LENGTH@ 106
---------MOV MethodInvocation@@c.assertExchangeReceived(0).getIn().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:[c.assertExchangeReceived(0).getIn().getBody(String.class), "James,Guillaume,Hiram,Rob,Roman"] @AT@ 1714 @LENGTH@ 57


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2234 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2234 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2241 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Will create JmsMessage with caused exception: {}",cause) @TO@ MethodInvocation:LOG.debug("Will create JmsMessage with caused exception: {}",cause.getMessage(),cause) @AT@ 12930 @LENGTH@ 69
---UPD MethodInvocation@@LOG.debug("Will create JmsMessage with caused exception: {}",cause) @TO@ LOG.debug("Will create JmsMessage with caused exception: {}",cause.getMessage(),cause) @AT@ 12930 @LENGTH@ 68
------UPD SimpleName@@MethodName:debug:["Will create JmsMessage with caused exception: {}", cause] @TO@ MethodName:debug:["Will create JmsMessage with caused exception: {}", cause.getMessage(), cause] @AT@ 12934 @LENGTH@ 64
---------INS MethodInvocation@@cause.getMessage() @TO@ SimpleName@@MethodName:debug:["Will create JmsMessage with caused exception: {}", cause] @AT@ 12992 @LENGTH@ 18
------------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 12992 @LENGTH@ 5
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 12998 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:setChannelProcessors, List<?> newList,  @TO@ public, void, MethodName:setChannelProcessors, List<?> channelProcessors,  @AT@ 2701 @LENGTH@ 465
---UPD SingleVariableDeclaration@@List<?> newList @TO@ List<?> channelProcessors @AT@ 2734 @LENGTH@ 15
------UPD SimpleName@@newList @TO@ channelProcessors @AT@ 2742 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(newList,"A list of ChannelProcessors is required") @TO@ MethodInvocation:Assert.notEmpty(channelProcessors,"A list of ChannelProcessors is required") @AT@ 2755 @LENGTH@ 68
------UPD MethodInvocation@@Assert.notEmpty(newList,"A list of ChannelProcessors is required") @TO@ Assert.notEmpty(channelProcessors,"A list of ChannelProcessors is required") @AT@ 2755 @LENGTH@ 67
---------UPD SimpleName@@MethodName:notEmpty:[newList, "A list of ChannelProcessors is required"] @TO@ MethodName:notEmpty:[channelProcessors, "A list of ChannelProcessors is required"] @AT@ 2762 @LENGTH@ 60
------------UPD SimpleName@@newList @TO@ channelProcessors @AT@ 2771 @LENGTH@ 7
---UPD ExpressionStatement@@Assignment:this.channelProcessors=new ArrayList<>(newList.size()) @TO@ Assignment:this.channelProcessors=new ArrayList<>(channelProcessors.size()) @AT@ 2826 @LENGTH@ 57
------UPD Assignment@@this.channelProcessors=new ArrayList<>(newList.size()) @TO@ this.channelProcessors=new ArrayList<>(channelProcessors.size()) @AT@ 2826 @LENGTH@ 56
---------UPD ClassInstanceCreation@@ArrayList<>[newList.size()] @TO@ ArrayList<>[channelProcessors.size()] @AT@ 2851 @LENGTH@ 31
------------UPD MethodInvocation@@newList.size() @TO@ channelProcessors.size() @AT@ 2867 @LENGTH@ 14
---------------UPD SimpleName@@Name:newList @TO@ Name:channelProcessors @AT@ 2867 @LENGTH@ 7
---UPD EnhancedForStatement@@for (Object currentObject : newList) {  Assert.isInstanceOf(ChannelProcessor.class,currentObject,() -> "ChannelProcessor " + currentObject.getClass().getName() + " must implement ChannelProcessor");  this.channelProcessors.add((ChannelProcessor)currentObject);} @TO@ for (Object currentObject : channelProcessors) {  Assert.isInstanceOf(ChannelProcessor.class,currentObject,() -> "ChannelProcessor " + currentObject.getClass().getName() + " must implement ChannelProcessor");  this.channelProcessors.add((ChannelProcessor)currentObject);} @AT@ 2887 @LENGTH@ 276
------UPD SimpleName@@newList @TO@ channelProcessors @AT@ 2915 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:Assert.isTrue("http".equals(scheme) || "https".equals(scheme),() -> "Unsupported scheme '" + scheme + "'") @TO@ MethodDeclaration@@public, void, MethodName:setScheme, String scheme,  @AT@ 1140 @LENGTH@ 108
---INS MethodInvocation@@Assert.isTrue("http".equals(scheme) || "https".equals(scheme),() -> "Unsupported scheme '" + scheme + "'") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue("http".equals(scheme) || "https".equals(scheme),() -> "Unsupported scheme '" + scheme + "'") @AT@ 1140 @LENGTH@ 107
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue("http".equals(scheme) || "https".equals(scheme),() -> "Unsupported scheme '" + scheme + "'") @AT@ 1140 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:["http".equals(scheme) || "https".equals(scheme), () -> "Unsupported scheme '" + scheme + "'"] @TO@ MethodInvocation@@Assert.isTrue("http".equals(scheme) || "https".equals(scheme),() -> "Unsupported scheme '" + scheme + "'") @AT@ 1147 @LENGTH@ 100
---------MOV InfixExpression@@"http".equals(scheme) | "https".equals(scheme) @TO@ SimpleName@@MethodName:isTrue:["http".equals(scheme) || "https".equals(scheme), () -> "Unsupported scheme '" + scheme + "'"] @AT@ 1146 @LENGTH@ 46
------------UPD Operator@@| @TO@ || @AT@ 1167 @LENGTH@ 1
---------INS LambdaExpression@@() -> "Unsupported scheme '" + scheme + "'" @TO@ SimpleName@@MethodName:isTrue:["http".equals(scheme) || "https".equals(scheme), () -> "Unsupported scheme '" + scheme + "'"] @AT@ 1203 @LENGTH@ 43
------------INS InfixExpression@@"Unsupported scheme '" + scheme + "'" @TO@ LambdaExpression@@() -> "Unsupported scheme '" + scheme + "'" @AT@ 1209 @LENGTH@ 37
---------------MOV StringLiteral@@"Unsupported scheme '" @TO@ InfixExpression@@"Unsupported scheme '" + scheme + "'" @AT@ 1235 @LENGTH@ 22
---------------MOV Operator@@+ @TO@ InfixExpression@@"Unsupported scheme '" + scheme + "'" @AT@ 1257 @LENGTH@ 1
---------------MOV SimpleName@@scheme @TO@ InfixExpression@@"Unsupported scheme '" + scheme + "'" @AT@ 1260 @LENGTH@ 6
---------------MOV StringLiteral@@"'" @TO@ InfixExpression@@"Unsupported scheme '" + scheme + "'" @AT@ 1269 @LENGTH@ 3


UPD VariableDeclarationStatement@@Map<String,Object> additionalHeaders=resolveAndRemoveReferenceParameter(params,"additionalHeaders",SimpleDataHolderBean.class).getMapData(); @TO@ Map<String,Object> additionalHeaders=resolveAndRemoveReferenceParameter(params,"additionalHeaders",Map.class); @AT@ 9206 @LENGTH@ 161
---UPD VariableDeclarationFragment@@additionalHeaders=resolveAndRemoveReferenceParameter(params,"additionalHeaders",SimpleDataHolderBean.class).getMapData() @TO@ additionalHeaders=resolveAndRemoveReferenceParameter(params,"additionalHeaders",Map.class) @AT@ 9226 @LENGTH@ 140
------UPD MethodInvocation@@resolveAndRemoveReferenceParameter(params,"additionalHeaders",SimpleDataHolderBean.class).getMapData() @TO@ resolveAndRemoveReferenceParameter(params,"additionalHeaders",Map.class) @AT@ 9262 @LENGTH@ 104
---------DEL MethodInvocation@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalHeaders", SimpleDataHolderBean.class] @AT@ 9262 @LENGTH@ 91
------------DEL SimpleName@@params @AT@ 9297 @LENGTH@ 6
------------DEL StringLiteral@@"additionalHeaders" @AT@ 9305 @LENGTH@ 19
------------DEL TypeLiteral@@SimpleDataHolderBean.class @AT@ 9326 @LENGTH@ 26
---------INS SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalHeaders", Map.class] @TO@ MethodInvocation@@resolveAndRemoveReferenceParameter(params,"additionalHeaders",SimpleDataHolderBean.class).getMapData() @AT@ 9262 @LENGTH@ 74
------------INS SimpleName@@params @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalHeaders", Map.class] @AT@ 9297 @LENGTH@ 6
------------INS StringLiteral@@"additionalHeaders" @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalHeaders", Map.class] @AT@ 9305 @LENGTH@ 19
------------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalHeaders", Map.class] @AT@ 9326 @LENGTH@ 9
---------DEL SimpleName@@MethodName:getMapData:[] @AT@ 9354 @LENGTH@ 12


UPD TypeDeclaration@@[public]AuthenticationCancelledException, AuthenticationException @TO@ [@Deprecated, public]AuthenticationCancelledException, AuthenticationException @AT@ 1148 @LENGTH@ 244
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthenticationCancelledException, AuthenticationException @AT@ 1148 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2972 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2972 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 2972 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2983 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2999 @LENGTH@ 21


INS ExpressionStatement@@MethodInvocation:Assert.state(corsFilter != null,() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @TO@ MethodDeclaration@@public, void, MethodName:configure, H http,  @AT@ 2637 @LENGTH@ 161
---INS MethodInvocation@@Assert.state(corsFilter != null,() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(corsFilter != null,() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @AT@ 2637 @LENGTH@ 160
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(corsFilter != null,() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @AT@ 2637 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[corsFilter != null, () -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean."] @TO@ MethodInvocation@@Assert.state(corsFilter != null,() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @AT@ 2644 @LENGTH@ 153
---------INS InfixExpression@@corsFilter != null @TO@ SimpleName@@MethodName:state:[corsFilter != null, () -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean."] @AT@ 2650 @LENGTH@ 18
------------MOV SimpleName@@corsFilter @TO@ InfixExpression@@corsFilter != null @AT@ 2602 @LENGTH@ 10
------------MOV Operator@@== @TO@ InfixExpression@@corsFilter != null @AT@ 2612 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@corsFilter != null @AT@ 2616 @LENGTH@ 4
---------INS LambdaExpression@@() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @TO@ SimpleName@@MethodName:state:[corsFilter != null, () -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean."] @AT@ 2670 @LENGTH@ 126
------------INS InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @TO@ LambdaExpression@@() -> "Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2676 @LENGTH@ 120
---------------MOV StringLiteral@@"Please configure either a " @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2659 @LENGTH@ 28
---------------MOV Operator@@+ @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2687 @LENGTH@ 1
---------------MOV SimpleName@@CORS_FILTER_BEAN_NAME @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2690 @LENGTH@ 21
---------------MOV StringLiteral@@" bean or a " @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2714 @LENGTH@ 13
---------------MOV SimpleName@@CORS_CONFIGURATION_SOURCE_BEAN_NAME @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2735 @LENGTH@ 35
---------------MOV StringLiteral@@"bean." @TO@ InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2773 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(cos.newStreamCache()) @TO@ MethodInvocation:exchange.getMessage().setBody(cos.newStreamCache()) @AT@ 3758 @LENGTH@ 48
---UPD MethodInvocation@@exchange.getOut().setBody(cos.newStreamCache()) @TO@ exchange.getMessage().setBody(cos.newStreamCache()) @AT@ 3758 @LENGTH@ 47
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3758 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:this.LOGGER.debug("All messageMatchers returned true") @TO@ MethodInvocation:this.logger.debug("All messageMatchers returned true") @AT@ 1742 @LENGTH@ 55
---UPD MethodInvocation@@this.LOGGER.debug("All messageMatchers returned true") @TO@ this.logger.debug("All messageMatchers returned true") @AT@ 1742 @LENGTH@ 54
------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1742 @LENGTH@ 11
---------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1747 @LENGTH@ 6


UPD EnhancedForStatement@@for (AccessDecisionVoter voter : this.decisionVoters) {  if (!voter.supports(clazz)) {    return false;  }} @TO@ for (AccessDecisionVoter<?> voter : this.decisionVoters) {  if (!voter.supports(clazz)) {    return false;  }} @AT@ 3767 @LENGTH@ 115
---UPD SingleVariableDeclaration@@AccessDecisionVoter voter @TO@ AccessDecisionVoter<?> voter @AT@ 3772 @LENGTH@ 25
------DEL SimpleType@@AccessDecisionVoter @AT@ 3772 @LENGTH@ 19
------INS ParameterizedType@@AccessDecisionVoter<?> @TO@ SingleVariableDeclaration@@AccessDecisionVoter voter @AT@ 3774 @LENGTH@ 22
---------INS SimpleType@@AccessDecisionVoter @TO@ ParameterizedType@@AccessDecisionVoter<?> @AT@ 3774 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@AccessDecisionVoter<?> @AT@ 3794 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url"))) @TO@ MethodInvocation:Assert.isTrue(endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url")),"Endpoint host and environment property do not match") @AT@ 14140 @LENGTH@ 108
---UPD MethodInvocation@@Assert.isTrue(endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url"))) @TO@ Assert.isTrue(endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url")),"Endpoint host and environment property do not match") @AT@ 14140 @LENGTH@ 107
------UPD SimpleName@@MethodName:isTrue:[endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url"))] @TO@ MethodName:isTrue:[endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url")), "Endpoint host and environment property do not match"] @AT@ 14147 @LENGTH@ 100
---------INS StringLiteral@@"Endpoint host and environment property do not match" @TO@ SimpleName@@MethodName:isTrue:[endpoint.getHost().equals(applicationContext.getEnvironment().getRequiredProperty("cm.url"))] @AT@ 14264 @LENGTH@ 53


INS VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder); @TO@ MethodDeclaration@@public, OAuth2AuthorizedClient, MethodName:authorize, OAuth2AuthorizeRequest authorizeRequest,  @AT@ 6482 @LENGTH@ 125
---INS SimpleType@@OAuth2AuthorizationContext @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder); @AT@ 6482 @LENGTH@ 26
---INS VariableDeclarationFragment@@authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder); @AT@ 6509 @LENGTH@ 97
------INS SimpleName@@authorizationContext @TO@ VariableDeclarationFragment@@authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder) @AT@ 6509 @LENGTH@ 20
------INS MethodInvocation@@buildAuthorizationContext(authorizeRequest,principal,contextBuilder) @TO@ VariableDeclarationFragment@@authorizationContext=buildAuthorizationContext(authorizeRequest,principal,contextBuilder) @AT@ 6532 @LENGTH@ 74
---------INS SimpleName@@MethodName:buildAuthorizationContext:[authorizeRequest, principal, contextBuilder] @TO@ MethodInvocation@@buildAuthorizationContext(authorizeRequest,principal,contextBuilder) @AT@ 6532 @LENGTH@ 74
------------INS SimpleName@@authorizeRequest @TO@ SimpleName@@MethodName:buildAuthorizationContext:[authorizeRequest, principal, contextBuilder] @AT@ 6558 @LENGTH@ 16
------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:buildAuthorizationContext:[authorizeRequest, principal, contextBuilder] @AT@ 6576 @LENGTH@ 9
------------INS SimpleName@@contextBuilder @TO@ SimpleName@@MethodName:buildAuthorizationContext:[authorizeRequest, principal, contextBuilder] @AT@ 6591 @LENGTH@ 14


UPD VariableDeclarationStatement@@Ses2Endpoint endpoint=(Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy"); @TO@ Ses2Endpoint endpoint=(Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com"); @AT@ 1435 @LENGTH@ 123
---UPD VariableDeclarationFragment@@endpoint=(Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy") @TO@ endpoint=(Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com") @AT@ 1448 @LENGTH@ 109
------UPD CastExpression@@(Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy") @TO@ (Ses2Endpoint)component.createEndpoint("aws2-ses://from@example.com") @AT@ 1459 @LENGTH@ 98
---------UPD MethodInvocation@@component.createEndpoint("aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy") @TO@ component.createEndpoint("aws2-ses://from@example.com") @AT@ 1474 @LENGTH@ 83
------------UPD SimpleName@@MethodName:createEndpoint:["aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy"] @TO@ MethodName:createEndpoint:["aws2-ses://from@example.com"] @AT@ 1484 @LENGTH@ 73
---------------UPD StringLiteral@@"aws2-ses://from@example.com?accessKey=xxx&secretKey=yyy" @TO@ "aws2-ses://from@example.com" @AT@ 1499 @LENGTH@ 57


UPD IfStatement@@if (removed) {  if (logger.isDebugEnabled()) {    logger.debug("Request removed from WebSession: '" + requestPath + "'");  }} @TO@ if (removed) {  logger.debug(LogMessage.format("Request removed from WebSession: '%s'",requestPath));} @AT@ 3804 @LENGTH@ 137
---DEL Block@@ThenBody:{  if (logger.isDebugEnabled()) {    logger.debug("Request removed from WebSession: '" + requestPath + "'");  }} @AT@ 3817 @LENGTH@ 124
------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Request removed from WebSession: '" + requestPath + "'");} @AT@ 3823 @LENGTH@ 113
---------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 3827 @LENGTH@ 23
------------DEL SimpleName@@Name:logger @AT@ 3827 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3834 @LENGTH@ 16
---MOV Block@@ThenBody:{  logger.debug("Request removed from WebSession: '" + requestPath + "'");} @TO@ IfStatement@@if (removed) {  if (logger.isDebugEnabled()) {    logger.debug("Request removed from WebSession: '" + requestPath + "'");  }} @AT@ 3852 @LENGTH@ 84
------UPD ExpressionStatement@@MethodInvocation:logger.debug("Request removed from WebSession: '" + requestPath + "'") @TO@ MethodInvocation:logger.debug(LogMessage.format("Request removed from WebSession: '%s'",requestPath)) @AT@ 3859 @LENGTH@ 71
---------UPD MethodInvocation@@logger.debug("Request removed from WebSession: '" + requestPath + "'") @TO@ logger.debug(LogMessage.format("Request removed from WebSession: '%s'",requestPath)) @AT@ 3859 @LENGTH@ 70
------------INS SimpleName@@MethodName:debug:[LogMessage.format("Request removed from WebSession: '%s'",requestPath)] @TO@ MethodInvocation@@logger.debug("Request removed from WebSession: '" + requestPath + "'") @AT@ 3849 @LENGTH@ 78
---------------INS MethodInvocation@@LogMessage.format("Request removed from WebSession: '%s'",requestPath) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Request removed from WebSession: '%s'",requestPath)] @AT@ 3855 @LENGTH@ 71
------------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Request removed from WebSession: '%s'",requestPath) @AT@ 3855 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:debug:["Request removed from WebSession: '" + requestPath + "'"] @TO@ MethodInvocation@@LogMessage.format("Request removed from WebSession: '%s'",requestPath) @AT@ 3866 @LENGTH@ 63
---------------------INS StringLiteral@@"Request removed from WebSession: '%s'" @TO@ SimpleName@@MethodName:debug:["Request removed from WebSession: '" + requestPath + "'"] @AT@ 3873 @LENGTH@ 39
---------------------INS SimpleName@@requestPath @TO@ SimpleName@@MethodName:debug:["Request removed from WebSession: '" + requestPath + "'"] @AT@ 3914 @LENGTH@ 11
------------UPD SimpleName@@MethodName:debug:["Request removed from WebSession: '" + requestPath + "'"] @TO@ MethodName:format:["Request removed from WebSession: '%s'", requestPath] @AT@ 3866 @LENGTH@ 63


UPD ExpressionStatement@@MethodInvocation:assertEquals(endpoint.getServiceClass().getCanonicalName(),"org.apache.camel.component.cxf.HelloService","Got the wrong endpont service class") @TO@ MethodInvocation:assertEquals("org.apache.camel.component.cxf.HelloService",endpoint.getServiceClass().getCanonicalName(),"Got the wrong endpont service class") @AT@ 3753 @LENGTH@ 162
---UPD MethodInvocation@@assertEquals(endpoint.getServiceClass().getCanonicalName(),"org.apache.camel.component.cxf.HelloService","Got the wrong endpont service class") @TO@ assertEquals("org.apache.camel.component.cxf.HelloService",endpoint.getServiceClass().getCanonicalName(),"Got the wrong endpont service class") @AT@ 3753 @LENGTH@ 161
------UPD SimpleName@@MethodName:assertEquals:[endpoint.getServiceClass().getCanonicalName(), "org.apache.camel.component.cxf.HelloService", "Got the wrong endpont service class"] @TO@ MethodName:assertEquals:["org.apache.camel.component.cxf.HelloService", endpoint.getServiceClass().getCanonicalName(), "Got the wrong endpont service class"] @AT@ 3753 @LENGTH@ 161
---------INS StringLiteral@@"org.apache.camel.component.cxf.HelloService" @TO@ SimpleName@@MethodName:assertEquals:[endpoint.getServiceClass().getCanonicalName(), "org.apache.camel.component.cxf.HelloService", "Got the wrong endpont service class"] @AT@ 3766 @LENGTH@ 45
---------DEL StringLiteral@@"org.apache.camel.component.cxf.HelloService" @AT@ 3829 @LENGTH@ 45


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(!hasCrlf(name) && !hasCrlf(value),() -> "Invalid characters (CR/LF) in header " + name) @TO@ MethodDeclaration@@void, MethodName:validateCrlf, String name, String value,  @AT@ 2216 @LENGTH@ 103
---INS MethodInvocation@@Assert.isTrue(!hasCrlf(name) && !hasCrlf(value),() -> "Invalid characters (CR/LF) in header " + name) @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(!hasCrlf(name) && !hasCrlf(value),() -> "Invalid characters (CR/LF) in header " + name) @AT@ 2216 @LENGTH@ 102
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(!hasCrlf(name) && !hasCrlf(value),() -> "Invalid characters (CR/LF) in header " + name) @AT@ 2216 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[!hasCrlf(name) && !hasCrlf(value), () -> "Invalid characters (CR/LF) in header " + name] @TO@ MethodInvocation@@Assert.isTrue(!hasCrlf(name) && !hasCrlf(value),() -> "Invalid characters (CR/LF) in header " + name) @AT@ 2223 @LENGTH@ 95
---------MOV InfixExpression@@hasCrlf(name) || hasCrlf(value) @TO@ SimpleName@@MethodName:isTrue:[!hasCrlf(name) && !hasCrlf(value), () -> "Invalid characters (CR/LF) in header " + name] @AT@ 2179 @LENGTH@ 31
------------DEL Operator@@|| @AT@ 2192 @LENGTH@ 2
------------INS PrefixExpression@@!hasCrlf(name) @TO@ InfixExpression@@hasCrlf(name) || hasCrlf(value) @AT@ 2230 @LENGTH@ 14
---------------MOV MethodInvocation@@hasCrlf(name) @TO@ PrefixExpression@@!hasCrlf(name) @AT@ 2179 @LENGTH@ 13
---------------MOV MethodInvocation@@hasCrlf(name) @TO@ PrefixExpression@@!hasCrlf(name) @AT@ 2179 @LENGTH@ 13
---------------INS Operator@@! @TO@ PrefixExpression@@!hasCrlf(name) @AT@ 2230 @LENGTH@ 1
------------INS Operator@@&& @TO@ InfixExpression@@hasCrlf(name) || hasCrlf(value) @AT@ 2244 @LENGTH@ 2
------------INS PrefixExpression@@!hasCrlf(value) @TO@ InfixExpression@@hasCrlf(name) || hasCrlf(value) @AT@ 2248 @LENGTH@ 15
---------------MOV MethodInvocation@@hasCrlf(value) @TO@ PrefixExpression@@!hasCrlf(value) @AT@ 2196 @LENGTH@ 14
---------------MOV MethodInvocation@@hasCrlf(value) @TO@ PrefixExpression@@!hasCrlf(value) @AT@ 2196 @LENGTH@ 14
---------------INS Operator@@! @TO@ PrefixExpression@@!hasCrlf(value) @AT@ 2248 @LENGTH@ 1
---------INS LambdaExpression@@() -> "Invalid characters (CR/LF) in header " + name @TO@ SimpleName@@MethodName:isTrue:[!hasCrlf(name) && !hasCrlf(value), () -> "Invalid characters (CR/LF) in header " + name] @AT@ 2265 @LENGTH@ 52
------------INS InfixExpression@@"Invalid characters (CR/LF) in header " + name @TO@ LambdaExpression@@() -> "Invalid characters (CR/LF) in header " + name @AT@ 2271 @LENGTH@ 46
---------------MOV StringLiteral@@"Invalid characters (CR/LF) in header " @TO@ InfixExpression@@"Invalid characters (CR/LF) in header " + name @AT@ 2252 @LENGTH@ 39
---------------MOV Operator@@+ @TO@ InfixExpression@@"Invalid characters (CR/LF) in header " + name @AT@ 2291 @LENGTH@ 1
---------------MOV SimpleName@@name @TO@ InfixExpression@@"Invalid characters (CR/LF) in header " + name @AT@ 2294 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1994 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1994 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2010 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:this.saveRequestMatcher.matches(exchange).filter((m) -> m.isMatch()).map((m) -> exchange.getResponse()).map(ServerHttpResponse::getCookies).doOnNext((cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to Cookie: " + redirectUriCookie);
  }
}
).then() @TO@ MethodInvocation:this.saveRequestMatcher.matches(exchange).filter((m) -> m.isMatch()).map((m) -> exchange.getResponse()).map(ServerHttpResponse::getCookies).doOnNext((cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie));
}
).then() @AT@ 2913 @LENGTH@ 453
---UPD MethodInvocation@@this.saveRequestMatcher.matches(exchange).filter((m) -> m.isMatch()).map((m) -> exchange.getResponse()).map(ServerHttpResponse::getCookies).doOnNext((cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to Cookie: " + redirectUriCookie);
  }
}
).then() @TO@ this.saveRequestMatcher.matches(exchange).filter((m) -> m.isMatch()).map((m) -> exchange.getResponse()).map(ServerHttpResponse::getCookies).doOnNext((cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie));
}
).then() @AT@ 2920 @LENGTH@ 445
------UPD MethodInvocation@@MethodName:doOnNext:[(cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to Cookie: " + redirectUriCookie);
  }
}
] @TO@ MethodName:doOnNext:[(cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie));
}
] @AT@ 2920 @LENGTH@ 438
---------UPD LambdaExpression@@(cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to Cookie: " + redirectUriCookie);
  }
}
 @TO@ (cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie));
}
 @AT@ 3074 @LENGTH@ 283
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Request added to Cookie: " + redirectUriCookie);} @AT@ 3245 @LENGTH@ 106
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 3249 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 3249 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3256 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Request added to Cookie: " + redirectUriCookie);} @AT@ 3274 @LENGTH@ 77
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Request added to Cookie: " + redirectUriCookie) @AT@ 3282 @LENGTH@ 62
------------INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie)) @TO@ LambdaExpression@@(cookies) -> {
  ResponseCookie redirectUriCookie=createRedirectUriCookie(exchange.getRequest());
  cookies.add(REDIRECT_URI_COOKIE_NAME,redirectUriCookie);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to Cookie: " + redirectUriCookie);
  }
}
 @AT@ 3293 @LENGTH@ 82
---------------MOV MethodInvocation@@logger.debug("Request added to Cookie: " + redirectUriCookie) @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Request added to Cookie: %s",redirectUriCookie)) @AT@ 3282 @LENGTH@ 61
------------------UPD SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @TO@ MethodName:format:["Request added to Cookie: %s", redirectUriCookie] @AT@ 3289 @LENGTH@ 54
------------------INS SimpleName@@MethodName:debug:[LogMessage.format("Request added to Cookie: %s",redirectUriCookie)] @TO@ MethodInvocation@@logger.debug("Request added to Cookie: " + redirectUriCookie) @AT@ 3300 @LENGTH@ 74
---------------------INS MethodInvocation@@LogMessage.format("Request added to Cookie: %s",redirectUriCookie) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Request added to Cookie: %s",redirectUriCookie)] @AT@ 3306 @LENGTH@ 67
------------------------MOV SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @TO@ MethodInvocation@@LogMessage.format("Request added to Cookie: %s",redirectUriCookie) @AT@ 3289 @LENGTH@ 54
---------------------------DEL InfixExpression@@"Request added to Cookie: " + redirectUriCookie @AT@ 3295 @LENGTH@ 47
------------------------------DEL StringLiteral@@"Request added to Cookie: " @AT@ 3295 @LENGTH@ 27
------------------------------DEL Operator@@+ @AT@ 3322 @LENGTH@ 1
------------------------------DEL SimpleName@@redirectUriCookie @AT@ 3325 @LENGTH@ 17
---------------------------INS StringLiteral@@"Request added to Cookie: %s" @TO@ SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @AT@ 3324 @LENGTH@ 29
---------------------------INS SimpleName@@redirectUriCookie @TO@ SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @AT@ 3355 @LENGTH@ 17
------------------------MOV SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @TO@ MethodInvocation@@LogMessage.format("Request added to Cookie: %s",redirectUriCookie) @AT@ 3289 @LENGTH@ 54
---------------------------DEL InfixExpression@@"Request added to Cookie: " + redirectUriCookie @AT@ 3295 @LENGTH@ 47
------------------------------DEL StringLiteral@@"Request added to Cookie: " @AT@ 3295 @LENGTH@ 27
------------------------------DEL Operator@@+ @AT@ 3322 @LENGTH@ 1
------------------------------DEL SimpleName@@redirectUriCookie @AT@ 3325 @LENGTH@ 17
---------------------------INS StringLiteral@@"Request added to Cookie: %s" @TO@ SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @AT@ 3324 @LENGTH@ 29
---------------------------INS SimpleName@@redirectUriCookie @TO@ SimpleName@@MethodName:debug:["Request added to Cookie: " + redirectUriCookie] @AT@ 3355 @LENGTH@ 17
------------------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Request added to Cookie: %s",redirectUriCookie) @AT@ 3306 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:request.addParameter(TokenBasedRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ MethodInvocation:request.addParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 12648 @LENGTH@ 77
---UPD MethodInvocation@@request.addParameter(TokenBasedRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ request.addParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 12648 @LENGTH@ 76
------UPD SimpleName@@MethodName:addParameter:[TokenBasedRememberMeServices.DEFAULT_PARAMETER, "true"] @TO@ MethodName:addParameter:[AbstractRememberMeServices.DEFAULT_PARAMETER, "true"] @AT@ 12656 @LENGTH@ 68
---------UPD QualifiedName@@TokenBasedRememberMeServices.DEFAULT_PARAMETER @TO@ AbstractRememberMeServices.DEFAULT_PARAMETER @AT@ 12669 @LENGTH@ 46
------------UPD SimpleName@@TokenBasedRememberMeServices @TO@ AbstractRememberMeServices @AT@ 12669 @LENGTH@ 28


UPD TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2),distanceConverter));    return null;  }  return distanceConverter.convert(connection.getJedis().geodist(key,member1,member2));} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2),distanceConverter));    return null;  }  Double distance=connection.getJedis().geodist(key,member1,member2);  return distance != null ? distanceConverter.convert(distance) : null;} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 5042 @LENGTH@ 529
---UPD ReturnStatement@@MethodInvocation:distanceConverter.convert(connection.getJedis().geodist(key,member1,member2)) @TO@ ConditionalExpression:distance != null ? distanceConverter.convert(distance) : null @AT@ 5411 @LENGTH@ 87
------DEL MethodInvocation@@distanceConverter.convert(connection.getJedis().geodist(key,member1,member2)) @AT@ 5418 @LENGTH@ 79
------INS ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @TO@ ReturnStatement@@MethodInvocation:distanceConverter.convert(connection.getJedis().geodist(key,member1,member2)) @AT@ 5493 @LENGTH@ 61
---------INS InfixExpression@@distance != null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5493 @LENGTH@ 16
------------INS SimpleName@@distance @TO@ InfixExpression@@distance != null @AT@ 5493 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@distance != null @AT@ 5501 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@distance != null @AT@ 5505 @LENGTH@ 4
---------INS MethodInvocation@@distanceConverter.convert(distance) @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5512 @LENGTH@ 35
------------MOV SimpleName@@Name:distanceConverter @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 5418 @LENGTH@ 17
------------MOV SimpleName@@MethodName:convert:[connection.getJedis().geodist(key,member1,member2)] @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 5436 @LENGTH@ 61
---------------INS SimpleName@@distance @TO@ SimpleName@@MethodName:convert:[connection.getJedis().geodist(key,member1,member2)] @AT@ 5538 @LENGTH@ 8
---------INS NullLiteral@@null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5550 @LENGTH@ 4
---INS VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2); @TO@ TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2),distanceConverter));    return null;  }  return distanceConverter.convert(connection.getJedis().geodist(key,member1,member2));} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 5411 @LENGTH@ 71
------INS SimpleType@@Double @TO@ VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2); @AT@ 5411 @LENGTH@ 6
------INS VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2) @TO@ VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2); @AT@ 5418 @LENGTH@ 63
---------INS SimpleName@@distance @TO@ VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2) @AT@ 5418 @LENGTH@ 8
---------MOV MethodInvocation@@connection.getJedis().geodist(key,member1,member2) @TO@ VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2) @AT@ 5444 @LENGTH@ 52


UPD VariableDeclarationStatement@@Map<String,Object> additionalProperties=resolveAndRemoveReferenceParameter(params,"additionalProperties",SimpleDataHolderBean.class).getMapData(); @TO@ Map<String,Object> additionalProperties=resolveAndRemoveReferenceParameter(params,"additionalProperties",Map.class); @AT@ 9376 @LENGTH@ 167
---UPD VariableDeclarationFragment@@additionalProperties=resolveAndRemoveReferenceParameter(params,"additionalProperties",SimpleDataHolderBean.class).getMapData() @TO@ additionalProperties=resolveAndRemoveReferenceParameter(params,"additionalProperties",Map.class) @AT@ 9396 @LENGTH@ 146
------UPD MethodInvocation@@resolveAndRemoveReferenceParameter(params,"additionalProperties",SimpleDataHolderBean.class).getMapData() @TO@ resolveAndRemoveReferenceParameter(params,"additionalProperties",Map.class) @AT@ 9435 @LENGTH@ 107
---------INS SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalProperties", Map.class] @TO@ MethodInvocation@@resolveAndRemoveReferenceParameter(params,"additionalProperties",SimpleDataHolderBean.class).getMapData() @AT@ 9405 @LENGTH@ 77
------------INS SimpleName@@params @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalProperties", Map.class] @AT@ 9440 @LENGTH@ 6
------------INS StringLiteral@@"additionalProperties" @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalProperties", Map.class] @AT@ 9448 @LENGTH@ 22
------------INS TypeLiteral@@Map.class @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalProperties", Map.class] @AT@ 9472 @LENGTH@ 9
---------DEL MethodInvocation@@MethodName:resolveAndRemoveReferenceParameter:[params, "additionalProperties", SimpleDataHolderBean.class] @AT@ 9435 @LENGTH@ 94
------------DEL SimpleName@@params @AT@ 9470 @LENGTH@ 6
------------DEL StringLiteral@@"additionalProperties" @AT@ 9478 @LENGTH@ 22
------------DEL TypeLiteral@@SimpleDataHolderBean.class @AT@ 9502 @LENGTH@ 26
---------DEL SimpleName@@MethodName:getMapData:[] @AT@ 9530 @LENGTH@ 12


MOV MethodDeclaration@@public, static, String, MethodName:getVersion,  @TO@ TypeDeclaration@@[public, final]SpringSecurityCoreVersion,  @AT@ 1664 @LENGTH@ 164


UPD ExpressionStatement@@MethodInvocation:assertThat(getShardIteratorReqCap.getValue().shardIteratorType(),is("LATEST")) @TO@ MethodInvocation:assertThat(getShardIteratorReqCap.getValue().shardIteratorType(),is(ShardIteratorType.LATEST)) @AT@ 4952 @LENGTH@ 80
---UPD MethodInvocation@@assertThat(getShardIteratorReqCap.getValue().shardIteratorType(),is("LATEST")) @TO@ assertThat(getShardIteratorReqCap.getValue().shardIteratorType(),is(ShardIteratorType.LATEST)) @AT@ 4952 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertThat:[getShardIteratorReqCap.getValue().shardIteratorType(), is("LATEST")] @TO@ MethodName:assertThat:[getShardIteratorReqCap.getValue().shardIteratorType(), is(ShardIteratorType.LATEST)] @AT@ 4952 @LENGTH@ 79
---------UPD MethodInvocation@@is("LATEST") @TO@ is(ShardIteratorType.LATEST) @AT@ 5018 @LENGTH@ 12
------------UPD SimpleName@@MethodName:is:["LATEST"] @TO@ MethodName:is:[ShardIteratorType.LATEST] @AT@ 5018 @LENGTH@ 12
---------------DEL StringLiteral@@"LATEST" @AT@ 5021 @LENGTH@ 8
---------------INS QualifiedName@@ShardIteratorType.LATEST @TO@ SimpleName@@MethodName:is:["LATEST"] @AT@ 5056 @LENGTH@ 24
------------------INS SimpleName@@ShardIteratorType @TO@ QualifiedName@@ShardIteratorType.LATEST @AT@ 5056 @LENGTH@ 17
------------------INS SimpleName@@LATEST @TO@ QualifiedName@@ShardIteratorType.LATEST @AT@ 5074 @LENGTH@ 6
------------UPD SimpleName@@MethodName:is:["LATEST"] @TO@ MethodName:is:[ShardIteratorType.LATEST] @AT@ 5018 @LENGTH@ 12
---------------DEL StringLiteral@@"LATEST" @AT@ 5021 @LENGTH@ 8
---------------INS QualifiedName@@ShardIteratorType.LATEST @TO@ SimpleName@@MethodName:is:["LATEST"] @AT@ 5056 @LENGTH@ 24
------------------INS SimpleName@@ShardIteratorType @TO@ QualifiedName@@ShardIteratorType.LATEST @AT@ 5056 @LENGTH@ 17
------------------INS SimpleName@@LATEST @TO@ QualifiedName@@ShardIteratorType.LATEST @AT@ 5074 @LENGTH@ 6


UPD FieldDeclaration@@static, final, CometDReplayExtension, [REPLAY_EXTENSION=new CometDReplayExtension()] @TO@ static, final, ReplayExtension, [REPLAY_EXTENSION=new ReplayExtension()] @AT@ 2709 @LENGTH@ 82
---UPD SimpleType@@CometDReplayExtension @TO@ ReplayExtension @AT@ 2722 @LENGTH@ 21
---UPD VariableDeclarationFragment@@REPLAY_EXTENSION=new CometDReplayExtension() @TO@ REPLAY_EXTENSION=new ReplayExtension() @AT@ 2744 @LENGTH@ 46
------UPD ClassInstanceCreation@@CometDReplayExtension[] @TO@ ReplayExtension[] @AT@ 2763 @LENGTH@ 27
---------UPD SimpleType@@CometDReplayExtension @TO@ ReplayExtension @AT@ 2767 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2567 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2567 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2583 @LENGTH@ 21


UPD VariableDeclarationStatement@@Customer response=(Customer)exchange.getOut().getBody(); @TO@ Customer response=(Customer)exchange.getMessage().getBody(); @AT@ 3702 @LENGTH@ 59
---UPD VariableDeclarationFragment@@response=(Customer)exchange.getOut().getBody() @TO@ response=(Customer)exchange.getMessage().getBody() @AT@ 3711 @LENGTH@ 49
------UPD CastExpression@@(Customer)exchange.getOut().getBody() @TO@ (Customer)exchange.getMessage().getBody() @AT@ 3722 @LENGTH@ 38
---------UPD MethodInvocation@@exchange.getOut().getBody() @TO@ exchange.getMessage().getBody() @AT@ 3733 @LENGTH@ 27
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3733 @LENGTH@ 17


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2663 @LENGTH@ 507
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2675 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ MethodInvocation:assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 4901 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 4901 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @TO@ MethodName:assertEquals:["true", bool.toString(), "We should get the echo boolean result from router"] @AT@ 4901 @LENGTH@ 90
---------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @AT@ 4914 @LENGTH@ 6
---------DEL StringLiteral@@"true" @AT@ 4931 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @TO@ MethodInvocation:logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())) @AT@ 2299 @LENGTH@ 155


INS MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @TO@ TypeDeclaration@@[public]JdbcTokenRepositoryImpl, JdbcDaoSupport[PersistentTokenRepository] @AT@ 4138 @LENGTH@ 217
---MOV ReturnStatement@@MethodInvocation:getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId) @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 3420 @LENGTH@ 209
------DEL MethodInvocation@@getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId) @AT@ 3427 @LENGTH@ 201
---------DEL MethodInvocation@@MethodName:getJdbcTemplate:[] @AT@ 3427 @LENGTH@ 17
---------DEL SimpleName@@MethodName:queryForObject:[this.tokensBySeriesSql, (rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)), seriesId] @AT@ 3445 @LENGTH@ 183
------------DEL FieldAccess@@this.tokensBySeriesSql @AT@ 3460 @LENGTH@ 22
---------------DEL ThisExpression@@this @AT@ 3460 @LENGTH@ 4
---------------DEL SimpleName@@tokensBySeriesSql @AT@ 3465 @LENGTH@ 17
------------DEL LambdaExpression@@(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)) @AT@ 3489 @LENGTH@ 123
---------------DEL VariableDeclarationFragment@@rs @AT@ 3490 @LENGTH@ 2
------------------DEL SimpleName@@rs @AT@ 3490 @LENGTH@ 2
---------------DEL VariableDeclarationFragment@@rowNum @AT@ 3494 @LENGTH@ 6
------------------DEL SimpleName@@rowNum @AT@ 3494 @LENGTH@ 6
------------DEL SimpleName@@seriesId @AT@ 3619 @LENGTH@ 8
------MOV ClassInstanceCreation@@PersistentRememberMeToken[rs.getString(1), rs.getString(2), rs.getString(3), rs.getTimestamp(4)] @TO@ ReturnStatement@@MethodInvocation:getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId) @AT@ 3505 @LENGTH@ 107
---INS Modifier@@private @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4138 @LENGTH@ 7
---INS SimpleType@@PersistentRememberMeToken @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4146 @LENGTH@ 25
---INS SimpleName@@MethodName:createRememberMeToken @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4172 @LENGTH@ 21
---INS SingleVariableDeclaration@@ResultSet rs @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4194 @LENGTH@ 12
------INS SimpleType@@ResultSet @TO@ SingleVariableDeclaration@@ResultSet rs @AT@ 4194 @LENGTH@ 9
------INS SimpleName@@rs @TO@ SingleVariableDeclaration@@ResultSet rs @AT@ 4204 @LENGTH@ 2
---INS SingleVariableDeclaration@@int rowNum @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4208 @LENGTH@ 10
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int rowNum @AT@ 4208 @LENGTH@ 3
------INS SimpleName@@rowNum @TO@ SingleVariableDeclaration@@int rowNum @AT@ 4212 @LENGTH@ 6
---INS SimpleType@@SQLException @TO@ MethodDeclaration@@private, PersistentRememberMeToken, MethodName:createRememberMeToken, ResultSet rs, int rowNum, SQLException,  @AT@ 4227 @LENGTH@ 12


INS ExpressionStatement@@Assignment:desc=desc.trim() @TO@ MethodDeclaration@@private, static, String, MethodName:sanitizeJavaDocValue, String desc,  @AT@ 6976 @LENGTH@ 19
---INS Assignment@@desc=desc.trim() @TO@ ExpressionStatement@@Assignment:desc=desc.trim() @AT@ 6976 @LENGTH@ 18
------INS SimpleName@@desc @TO@ Assignment@@desc=desc.trim() @AT@ 6976 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@desc=desc.trim() @AT@ 6980 @LENGTH@ 1
------INS MethodInvocation@@desc.trim() @TO@ Assignment@@desc=desc.trim() @AT@ 6983 @LENGTH@ 11
---------INS SimpleName@@Name:desc @TO@ MethodInvocation@@desc.trim() @AT@ 6983 @LENGTH@ 4
---------INS SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@desc.trim() @AT@ 6988 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(((HttpOperationFailedException)exception.getCause()).getStatusCode(),500,"Get a wrong response code") @TO@ MethodInvocation:assertEquals(500,((HttpOperationFailedException)exception.getCause()).getStatusCode(),"Get a wrong response code") @AT@ 5234 @LENGTH@ 138
---UPD MethodInvocation@@assertEquals(((HttpOperationFailedException)exception.getCause()).getStatusCode(),500,"Get a wrong response code") @TO@ assertEquals(500,((HttpOperationFailedException)exception.getCause()).getStatusCode(),"Get a wrong response code") @AT@ 5234 @LENGTH@ 137
------UPD SimpleName@@MethodName:assertEquals:[((HttpOperationFailedException)exception.getCause()).getStatusCode(), 500, "Get a wrong response code"] @TO@ MethodName:assertEquals:[500, ((HttpOperationFailedException)exception.getCause()).getStatusCode(), "Get a wrong response code"] @AT@ 5234 @LENGTH@ 137
---------MOV MethodInvocation@@((HttpOperationFailedException)exception.getCause()).getStatusCode() @TO@ SimpleName@@MethodName:assertEquals:[((HttpOperationFailedException)exception.getCause()).getStatusCode(), 500, "Get a wrong response code"] @AT@ 5247 @LENGTH@ 69


UPD ExpressionStatement@@Assignment:template=new Template("temp",reader,new Configuration()) @TO@ Assignment:template=new Template("temp",reader,new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS)) @AT@ 6184 @LENGTH@ 61
---UPD Assignment@@template=new Template("temp",reader,new Configuration()) @TO@ template=new Template("temp",reader,new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS)) @AT@ 6184 @LENGTH@ 60
------UPD ClassInstanceCreation@@Template["temp", reader, new Configuration()] @TO@ Template["temp", reader, new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS)] @AT@ 6195 @LENGTH@ 49
---------UPD ClassInstanceCreation@@Configuration[] @TO@ Configuration[Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS] @AT@ 6224 @LENGTH@ 19
------------INS QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @TO@ ClassInstanceCreation@@Configuration[] @AT@ 6242 @LENGTH@ 47
---------------INS SimpleName@@Configuration @TO@ QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @AT@ 6242 @LENGTH@ 13
---------------INS SimpleName@@DEFAULT_INCOMPATIBLE_IMPROVEMENTS @TO@ QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @AT@ 6256 @LENGTH@ 33


UPD FieldDeclaration@@private, HttpServletRequest, [request] @TO@ private, final, HttpServletRequest, [request] @AT@ 1118 @LENGTH@ 35
---INS Modifier@@final @TO@ FieldDeclaration@@private, HttpServletRequest, [request] @AT@ 1126 @LENGTH@ 5


UPD MethodDeclaration@@private, String, MethodName:getOrSetCorrelationIdAndSetReplyTo, Message message, @Nullable AsyncCorrelationData correlationData,  @TO@ private, String, MethodName:getOrSetCorrelationIdAndSetReplyTo, Message message, @Nullable AsyncCorrelationData<?> correlationData,  @AT@ 24426 @LENGTH@ 792
---UPD SingleVariableDeclaration@@@Nullable AsyncCorrelationData correlationData @TO@ @Nullable AsyncCorrelationData<?> correlationData @AT@ 24496 @LENGTH@ 46
------INS ParameterizedType@@AsyncCorrelationData<?> @TO@ SingleVariableDeclaration@@@Nullable AsyncCorrelationData correlationData @AT@ 24506 @LENGTH@ 23
---------INS SimpleType@@AsyncCorrelationData @TO@ ParameterizedType@@AsyncCorrelationData<?> @AT@ 24506 @LENGTH@ 20
---------INS WildcardType@@? @TO@ ParameterizedType@@AsyncCorrelationData<?> @AT@ 24527 @LENGTH@ 1
------DEL SimpleType@@AsyncCorrelationData @AT@ 24506 @LENGTH@ 20


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), @EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @TO@ [@Deprecated, @Configuration(proxyBeanMethods=false), @EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2049 @LENGTH@ 589
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), @EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2049 @LENGTH@ 11


INS MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @TO@ TypeDeclaration@@[public, abstract]AbstractCamelMicroProfileHealthCheck, [HealthCheck, CamelContextAware] @AT@ 1710 @LENGTH@ 72
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1710 @LENGTH@ 9
---INS Modifier@@abstract @TO@ MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1720 @LENGTH@ 8
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1729 @LENGTH@ 7
---INS SimpleName@@MethodName:acceptHealthCheck @TO@ MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1737 @LENGTH@ 17
---INS SingleVariableDeclaration@@AbstractHealthCheck check @TO@ MethodDeclaration@@protected, abstract, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1755 @LENGTH@ 25
------INS SimpleType@@AbstractHealthCheck @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1755 @LENGTH@ 19
------INS SimpleName@@check @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1775 @LENGTH@ 5


UPD VariableDeclarationStatement@@SimpleQueryHints mainHints=new SimpleQueryHints(); @TO@ MutableQueryHints mainHints=new MutableQueryHints(); @AT@ 1969 @LENGTH@ 52
---UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 1969 @LENGTH@ 16
---UPD VariableDeclarationFragment@@mainHints=new SimpleQueryHints() @TO@ mainHints=new MutableQueryHints() @AT@ 1986 @LENGTH@ 34
------UPD ClassInstanceCreation@@SimpleQueryHints[] @TO@ MutableQueryHints[] @AT@ 1998 @LENGTH@ 22
---------UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2002 @LENGTH@ 16


UPD IfStatement@@if (targetDbName.equals(sourceDbName)) {  return rangerPolicies;} @TO@ if (StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName)) {  return rangerPolicies;} @AT@ 13082 @LENGTH@ 75
---INS InfixExpression@@StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName) @TO@ IfStatement@@if (targetDbName.equals(sourceDbName)) {  return rangerPolicies;} @AT@ 13085 @LENGTH@ 107
------INS MethodInvocation@@StringUtils.isEmpty(sourceDbName) @TO@ InfixExpression@@StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName) @AT@ 13085 @LENGTH@ 33
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(sourceDbName) @AT@ 13085 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEmpty:[sourceDbName] @TO@ MethodInvocation@@StringUtils.isEmpty(sourceDbName) @AT@ 13097 @LENGTH@ 21
------------INS SimpleName@@sourceDbName @TO@ SimpleName@@MethodName:isEmpty:[sourceDbName] @AT@ 13105 @LENGTH@ 12
------MOV MethodInvocation@@targetDbName.equals(sourceDbName) @TO@ InfixExpression@@StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName) @AT@ 13086 @LENGTH@ 33
------INS Operator@@|| @TO@ InfixExpression@@StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName) @AT@ 13118 @LENGTH@ 2
------INS MethodInvocation@@StringUtils.isEmpty(targetDbName) @TO@ InfixExpression@@StringUtils.isEmpty(sourceDbName) || StringUtils.isEmpty(targetDbName) || targetDbName.equals(sourceDbName) @AT@ 13122 @LENGTH@ 33
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(targetDbName) @AT@ 13122 @LENGTH@ 11
---------INS SimpleName@@MethodName:isEmpty:[targetDbName] @TO@ MethodInvocation@@StringUtils.isEmpty(targetDbName) @AT@ 13134 @LENGTH@ 21
------------INS SimpleName@@targetDbName @TO@ SimpleName@@MethodName:isEmpty:[targetDbName] @AT@ 13142 @LENGTH@ 12


UPD IfStatement@@if (ex instanceof BadJwtException) {  return new InvalidBearerTokenException(ex.getMessage(),ex);} else {  return new AuthenticationServiceException(ex.getMessage(),ex);} @TO@ if (ex instanceof BadJwtException) {  return new InvalidBearerTokenException(ex.getMessage(),ex);} @AT@ 3253 @LENGTH@ 184
---DEL Block@@ElseBody:{  return new AuthenticationServiceException(ex.getMessage(),ex);} @AT@ 3365 @LENGTH@ 72


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requries at least two trailing 6-bit characters to create bytes.") @TO@ ClassInstanceCreation:new IllegalArgumentException("Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requires at least two trailing 6-bit characters to create bytes.") @AT@ 36833 @LENGTH@ 276
---UPD ClassInstanceCreation@@IllegalArgumentException["Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requries at least two trailing 6-bit characters to create bytes."] @TO@ IllegalArgumentException["Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requires at least two trailing 6-bit characters to create bytes."] @AT@ 36839 @LENGTH@ 269
------UPD InfixExpression@@"Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requries at least two trailing 6-bit characters to create bytes." @TO@ "Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. " + "Decoding requires at least two trailing 6-bit characters to create bytes." @AT@ 36885 @LENGTH@ 222
---------UPD StringLiteral@@"Decoding requries at least two trailing 6-bit characters to create bytes." @TO@ "Decoding requires at least two trailing 6-bit characters to create bytes." @AT@ 37032 @LENGTH@ 75


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000").to("mock:result") @AT@ 1211 @LENGTH@ 188
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000").to("mock:result") @AT@ 1211 @LENGTH@ 187
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000"] @AT@ 1211 @LENGTH@ 144
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&useMessageIDAsCorrelationID=true&requestTimeout=2000"] @AT@ 1301 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1301 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1317 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(list.size(),1,"Should get one message") @TO@ MethodInvocation:assertEquals(1,list.size(),"Should get one message") @AT@ 2762 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals(list.size(),1,"Should get one message") @TO@ assertEquals(1,list.size(),"Should get one message") @AT@ 2762 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:[list.size(), 1, "Should get one message"] @TO@ MethodName:assertEquals:[1, list.size(), "Should get one message"] @AT@ 2762 @LENGTH@ 54
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[list.size(), 1, "Should get one message"] @AT@ 2775 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2788 @LENGTH@ 1


UPD TypeDeclaration@@[public]OpenIDAuthenticationProviderTests,  @TO@ [@Deprecated, public]OpenIDAuthenticationProviderTests,  @AT@ 2013 @LENGTH@ 6832
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAuthenticationProviderTests,  @AT@ 2013 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2394 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2394 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2410 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2747 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2747 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2763 @LENGTH@ 21


INS FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @TO@ TypeDeclaration@@[public]OAuth2AuthorizationCodeReactiveAuthenticationManager, [ReactiveAuthenticationManager] @AT@ 3518 @LENGTH@ 91
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @AT@ 3518 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @AT@ 3526 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @AT@ 3533 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @AT@ 3539 @LENGTH@ 6
---INS VariableDeclarationFragment@@INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter" @TO@ FieldDeclaration@@private, static, final, String, [INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter"] @AT@ 3546 @LENGTH@ 62
------INS SimpleName@@INVALID_STATE_PARAMETER_ERROR_CODE @TO@ VariableDeclarationFragment@@INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter" @AT@ 3546 @LENGTH@ 34
------INS StringLiteral@@"invalid_state_parameter" @TO@ VariableDeclarationFragment@@INVALID_STATE_PARAMETER_ERROR_CODE="invalid_state_parameter" @AT@ 3583 @LENGTH@ 25


UPD SuperConstructorInvocation@@super(ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName)));
 @TO@ super(ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.getName()).append(containerName,serverName));
 @AT@ 2392 @LENGTH@ 121
---UPD MethodInvocation@@ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName)) @TO@ ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.getName()).append(containerName,serverName) @AT@ 2398 @LENGTH@ 113
------INS MethodInvocation@@MethodName:parseServiceName:[ClusteringCacheRequirement.REGISTRY_ENTRY.getName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName)) @AT@ 2398 @LENGTH@ 88
---------INS MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.getName() @TO@ MethodInvocation@@MethodName:parseServiceName:[ClusteringCacheRequirement.REGISTRY_ENTRY.getName()] @AT@ 2434 @LENGTH@ 51
------------MOV QualifiedName@@Name:ClusteringCacheRequirement.REGISTRY_ENTRY @TO@ MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.getName() @AT@ 2434 @LENGTH@ 41
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.getName() @AT@ 2476 @LENGTH@ 9
------DEL SimpleName@@MethodName:parseServiceName:[ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName)] @AT@ 2417 @LENGTH@ 94
---------DEL MethodInvocation@@ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName) @AT@ 2434 @LENGTH@ 76
------MOV SimpleName@@MethodName:resolve:[containerName, serverName] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(ClusteringCacheRequirement.REGISTRY_ENTRY.resolve(containerName,serverName)) @AT@ 2476 @LENGTH@ 34


UPD Block@@ThenBody:{  assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + (destLastMod - unexpected));  assertTrue(destLastMod > now,destLastMod + " > " + now);} @TO@ ThenBody:{  final long delta=destLastMod - unexpected;  assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + delta);  assertTrue(destLastMod > now,destLastMod + " > " + now+ " (delta "+ delta+ ")");} @AT@ 48118 @LENGTH@ 234
---UPD ExpressionStatement@@MethodInvocation:assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + (destLastMod - unexpected)) @TO@ MethodInvocation:assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + delta) @AT@ 48132 @LENGTH@ 140
------UPD MethodInvocation@@assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + (destLastMod - unexpected)) @TO@ assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + delta) @AT@ 48132 @LENGTH@ 139
---------UPD SimpleName@@MethodName:assertNotEquals:[unexpected, destLastMod, "Check last modified date not same as input, delta " + (destLastMod - unexpected)] @TO@ MethodName:assertNotEquals:[unexpected, destLastMod, "Check last modified date not same as input, delta " + delta] @AT@ 48132 @LENGTH@ 139
------------UPD InfixExpression@@"Check last modified date not same as input, delta " + (destLastMod - unexpected) @TO@ "Check last modified date not same as input, delta " + delta @AT@ 48189 @LENGTH@ 81
---------------DEL ParenthesizedExpression@@(destLastMod - unexpected) @AT@ 48244 @LENGTH@ 26
------------------DEL InfixExpression@@destLastMod - unexpected @AT@ 48245 @LENGTH@ 24
---------------------DEL Operator@@- @AT@ 48256 @LENGTH@ 1
---------------------DEL SimpleName@@unexpected @AT@ 48259 @LENGTH@ 10
---------------MOV SimpleName@@destLastMod @TO@ InfixExpression@@"Check last modified date not same as input, delta " + (destLastMod - unexpected) @AT@ 48245 @LENGTH@ 11
---INS VariableDeclarationStatement@@final long delta=destLastMod - unexpected; @TO@ Block@@ThenBody:{  assertNotEquals(unexpected,destLastMod,"Check last modified date not same as input, delta " + (destLastMod - unexpected));  assertTrue(destLastMod > now,destLastMod + " > " + now);} @AT@ 48132 @LENGTH@ 44
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final long delta=destLastMod - unexpected; @AT@ 48132 @LENGTH@ 5
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@final long delta=destLastMod - unexpected; @AT@ 48138 @LENGTH@ 4
------INS VariableDeclarationFragment@@delta=destLastMod - unexpected @TO@ VariableDeclarationStatement@@final long delta=destLastMod - unexpected; @AT@ 48143 @LENGTH@ 32
---------INS SimpleName@@delta @TO@ VariableDeclarationFragment@@delta=destLastMod - unexpected @AT@ 48143 @LENGTH@ 5
---------INS InfixExpression@@destLastMod - unexpected @TO@ VariableDeclarationFragment@@delta=destLastMod - unexpected @AT@ 48151 @LENGTH@ 24
------------INS SimpleName@@destLastMod @TO@ InfixExpression@@destLastMod - unexpected @AT@ 48151 @LENGTH@ 11
------------INS Operator@@- @TO@ InfixExpression@@destLastMod - unexpected @AT@ 48162 @LENGTH@ 1
------------INS SimpleName@@unexpected @TO@ InfixExpression@@destLastMod - unexpected @AT@ 48165 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:assertTrue(destLastMod > now,destLastMod + " > " + now) @TO@ MethodInvocation:assertTrue(destLastMod > now,destLastMod + " > " + now+ " (delta "+ delta+ ")") @AT@ 48285 @LENGTH@ 57
------UPD MethodInvocation@@assertTrue(destLastMod > now,destLastMod + " > " + now) @TO@ assertTrue(destLastMod > now,destLastMod + " > " + now+ " (delta "+ delta+ ")") @AT@ 48285 @LENGTH@ 56
---------UPD SimpleName@@MethodName:assertTrue:[destLastMod > now, destLastMod + " > " + now] @TO@ MethodName:assertTrue:[destLastMod > now, destLastMod + " > " + now+ " (delta "+ delta+ ")"] @AT@ 48285 @LENGTH@ 56
------------UPD InfixExpression@@destLastMod + " > " + now @TO@ destLastMod + " > " + now+ " (delta "+ delta+ ")" @AT@ 48315 @LENGTH@ 25
---------------INS StringLiteral@@" (delta " @TO@ InfixExpression@@destLastMod + " > " + now @AT@ 48363 @LENGTH@ 10
---------------INS SimpleName@@delta @TO@ InfixExpression@@destLastMod + " > " + now @AT@ 48376 @LENGTH@ 5
---------------INS StringLiteral@@")" @TO@ InfixExpression@@destLastMod + " > " + now @AT@ 48384 @LENGTH@ 3


UPD IfStatement@@if (this.encodeHashAsBase64) {  return Utf8.decode(Base64.getEncoder().encode(digest));} else {  return new String(Hex.encode(digest));} @TO@ if (this.encodeHashAsBase64) {  return Utf8.decode(Base64.getEncoder().encode(digest));} @AT@ 4182 @LENGTH@ 148
---DEL Block@@ElseBody:{  return new String(Hex.encode(digest));} @AT@ 4283 @LENGTH@ 47


UPD EnhancedForStatement@@for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,configAttributes);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Voter: " + voter + ", returned: "+ result);  }switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    return;case AccessDecisionVoter.ACCESS_DENIED:  deny++;break;default :break;}} @TO@ for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,configAttributes);  this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result));switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    return;case AccessDecisionVoter.ACCESS_DENIED:  deny++;break;default :break;}} @AT@ 2245 @LENGTH@ 417
---DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Voter: " + voter + ", returned: "+ result);} @AT@ 2375 @LENGTH@ 108
------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 2379 @LENGTH@ 28
---------DEL FieldAccess@@this.logger @AT@ 2379 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 2379 @LENGTH@ 4
------------DEL SimpleName@@logger @AT@ 2384 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2391 @LENGTH@ 16
------DEL Block@@ThenBody:{  this.logger.debug("Voter: " + voter + ", returned: "+ result);} @AT@ 2409 @LENGTH@ 74
---------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("Voter: " + voter + ", returned: "+ result) @AT@ 2415 @LENGTH@ 63
---INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result)) @TO@ EnhancedForStatement@@for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,configAttributes);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Voter: " + voter + ", returned: "+ result);  }switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    return;case AccessDecisionVoter.ACCESS_DENIED:  deny++;break;default :break;}} @AT@ 2469 @LENGTH@ 79
------MOV MethodInvocation@@this.logger.debug("Voter: " + voter + ", returned: "+ result) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result)) @AT@ 2415 @LENGTH@ 62
---------UPD SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodName:format:["Voter: %s, returned: %s", voter, result] @AT@ 2427 @LENGTH@ 50
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Voter: %s, returned: %s",voter,result)] @TO@ MethodInvocation@@this.logger.debug("Voter: " + voter + ", returned: "+ result) @AT@ 2481 @LENGTH@ 66
------------INS MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Voter: %s, returned: %s",voter,result)] @AT@ 2487 @LENGTH@ 59
---------------MOV SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2427 @LENGTH@ 50
------------------DEL InfixExpression@@"Voter: " + voter + ", returned: "+ result @AT@ 2433 @LENGTH@ 43
---------------------DEL StringLiteral@@"Voter: " @AT@ 2433 @LENGTH@ 9
---------------------DEL Operator@@+ @AT@ 2442 @LENGTH@ 1
---------------------DEL SimpleName@@voter @AT@ 2445 @LENGTH@ 5
---------------------DEL StringLiteral@@", returned: " @AT@ 2453 @LENGTH@ 14
---------------------DEL SimpleName@@result @AT@ 2470 @LENGTH@ 6
------------------INS StringLiteral@@"Voter: %s, returned: %s" @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2505 @LENGTH@ 25
------------------INS SimpleName@@voter @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2532 @LENGTH@ 5
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2539 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2427 @LENGTH@ 50
------------------DEL InfixExpression@@"Voter: " + voter + ", returned: "+ result @AT@ 2433 @LENGTH@ 43
---------------------DEL StringLiteral@@"Voter: " @AT@ 2433 @LENGTH@ 9
---------------------DEL Operator@@+ @AT@ 2442 @LENGTH@ 1
---------------------DEL SimpleName@@voter @AT@ 2445 @LENGTH@ 5
---------------------DEL StringLiteral@@", returned: " @AT@ 2453 @LENGTH@ 14
---------------------DEL SimpleName@@result @AT@ 2470 @LENGTH@ 6
------------------INS StringLiteral@@"Voter: %s, returned: %s" @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2505 @LENGTH@ 25
------------------INS SimpleName@@voter @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2532 @LENGTH@ 5
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2539 @LENGTH@ 6
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2487 @LENGTH@ 10


MOV FieldDeclaration@@private, ArtifactFactory, [artifactFactory] @TO@ TypeDeclaration@@[@Mojo(name="generate-configurer",threadSafe=true,defaultPhase=LifecyclePhase.PROCESS_CLASSES,requiresDependencyCollection=ResolutionScope.COMPILE,requiresDependencyResolution=ResolutionScope.COMPILE), public]GenerateConfigurerMojo, AbstractGeneratorMojo @AT@ 3276 @LENGTH@ 40


MOV MethodDeclaration@@private, voidMethodName:PayloadExchangeMatchers,  @TO@ TypeDeclaration@@[public, abstract]PayloadExchangeMatchers,  @AT@ 1717 @LENGTH@ 38


UPD FieldDeclaration@@private, Long, [interval=new Long(2)] @TO@ private, Long, [interval=Long.valueOf(2)] @AT@ 1053 @LENGTH@ 36
---UPD VariableDeclarationFragment@@interval=new Long(2) @TO@ interval=Long.valueOf(2) @AT@ 1066 @LENGTH@ 22
------INS MethodInvocation@@Long.valueOf(2) @TO@ VariableDeclarationFragment@@interval=new Long(2) @AT@ 1077 @LENGTH@ 15
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(2) @AT@ 1077 @LENGTH@ 4
---------INS SimpleName@@MethodName:valueOf:[2] @TO@ MethodInvocation@@Long.valueOf(2) @AT@ 1082 @LENGTH@ 10
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:valueOf:[2] @AT@ 1090 @LENGTH@ 1
------DEL ClassInstanceCreation@@Long[2] @AT@ 1077 @LENGTH@ 11
---------DEL New@@new @AT@ 1077 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 1081 @LENGTH@ 4
---------DEL NumberLiteral@@2 @AT@ 1086 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(resource2Classes.size(),1,"Get a wrong size of resouceClasses") @TO@ MethodInvocation:assertEquals(1,resource2Classes.size(),"Get a wrong size of resouceClasses") @AT@ 2299 @LENGTH@ 79
---UPD MethodInvocation@@assertEquals(resource2Classes.size(),1,"Get a wrong size of resouceClasses") @TO@ assertEquals(1,resource2Classes.size(),"Get a wrong size of resouceClasses") @AT@ 2299 @LENGTH@ 78
------UPD SimpleName@@MethodName:assertEquals:[resource2Classes.size(), 1, "Get a wrong size of resouceClasses"] @TO@ MethodName:assertEquals:[1, resource2Classes.size(), "Get a wrong size of resouceClasses"] @AT@ 2299 @LENGTH@ 78
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[resource2Classes.size(), 1, "Get a wrong size of resouceClasses"] @AT@ 2312 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2337 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:verify(template).bulkOps(any(),anyString()) @TO@ MethodInvocation:verify(template).bulkOps(any(),eq("collection")) @AT@ 4953 @LENGTH@ 45
---UPD MethodInvocation@@verify(template).bulkOps(any(),anyString()) @TO@ verify(template).bulkOps(any(),eq("collection")) @AT@ 4953 @LENGTH@ 44
------UPD SimpleName@@MethodName:bulkOps:[any(), anyString()] @TO@ MethodName:bulkOps:[any(), eq("collection")] @AT@ 4970 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:anyString:[] @TO@ eq("collection") @AT@ 4985 @LENGTH@ 11
------------INS SimpleName@@MethodName:eq:["collection"] @TO@ MethodInvocation@@MethodName:anyString:[] @AT@ 5068 @LENGTH@ 16
---------------INS StringLiteral@@"collection" @TO@ SimpleName@@MethodName:eq:["collection"] @AT@ 5071 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:registry.stream().collect(Collectors.groupingBy(HealthCheckHelper::getGroup)).entrySet().stream().map(Map.Entry::getValue).flatMap(Collection::stream).filter(check -> !filter.test(check)).sorted(Comparator.comparingInt(HealthCheck::getOrder)).map(check -> check.call(optionsSupplier.apply(check))).collect(Collectors.toList()) @TO@ MethodInvocation:registry.stream().collect(Collectors.groupingBy(HealthCheckHelper::getGroup)).entrySet().stream().map(Map.Entry::getValue).flatMap(Collection::stream).filter(check -> !filter.test(check)).sorted(Comparator.comparingInt(HealthCheck::getOrder)).distinct().map(check -> check.call(optionsSupplier.apply(check))).collect(Collectors.toList()) @AT@ 4267 @LENGTH@ 494
---UPD MethodInvocation@@registry.stream().collect(Collectors.groupingBy(HealthCheckHelper::getGroup)).entrySet().stream().map(Map.Entry::getValue).flatMap(Collection::stream).filter(check -> !filter.test(check)).sorted(Comparator.comparingInt(HealthCheck::getOrder)).map(check -> check.call(optionsSupplier.apply(check))).collect(Collectors.toList()) @TO@ registry.stream().collect(Collectors.groupingBy(HealthCheckHelper::getGroup)).entrySet().stream().map(Map.Entry::getValue).flatMap(Collection::stream).filter(check -> !filter.test(check)).sorted(Comparator.comparingInt(HealthCheck::getOrder)).distinct().map(check -> check.call(optionsSupplier.apply(check))).collect(Collectors.toList()) @AT@ 4274 @LENGTH@ 486
------INS MethodInvocation@@MethodName:distinct:[] @TO@ MethodInvocation@@registry.stream().collect(Collectors.groupingBy(HealthCheckHelper::getGroup)).entrySet().stream().map(Map.Entry::getValue).flatMap(Collection::stream).filter(check -> !filter.test(check)).sorted(Comparator.comparingInt(HealthCheck::getOrder)).map(check -> check.call(optionsSupplier.apply(check))).collect(Collectors.toList()) @AT@ 4274 @LENGTH@ 392


INS FieldDeclaration@@private, Map<String,String>, [baggage=new HashMap<>()] @TO@ TypeDeclaration@@[public]SpanTestData,  @AT@ 1382 @LENGTH@ 54
---INS Modifier@@private @TO@ FieldDeclaration@@private, Map<String,String>, [baggage=new HashMap<>()] @AT@ 1382 @LENGTH@ 7
---INS ParameterizedType@@Map<String,String> @TO@ FieldDeclaration@@private, Map<String,String>, [baggage=new HashMap<>()] @AT@ 1390 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1390 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1394 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1402 @LENGTH@ 6
---INS VariableDeclarationFragment@@baggage=new HashMap<>() @TO@ FieldDeclaration@@private, Map<String,String>, [baggage=new HashMap<>()] @AT@ 1410 @LENGTH@ 25
------INS SimpleName@@baggage @TO@ VariableDeclarationFragment@@baggage=new HashMap<>() @AT@ 1410 @LENGTH@ 7
------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@baggage=new HashMap<>() @AT@ 1420 @LENGTH@ 15
---------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 1420 @LENGTH@ 3
---------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 1424 @LENGTH@ 9
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 1424 @LENGTH@ 7


UPD Block@@ThenBody:{  PasswordCallback pc=(PasswordCallback)callback;  pc.setPassword(auth.getCredentials().toString().toCharArray());} @TO@ ThenBody:{  ((PasswordCallback)callback).setPassword(auth.getCredentials().toString().toCharArray());} @AT@ 1845 @LENGTH@ 126
---DEL VariableDeclarationStatement@@PasswordCallback pc=(PasswordCallback)callback; @AT@ 1850 @LENGTH@ 50
------DEL SimpleType@@PasswordCallback @AT@ 1850 @LENGTH@ 16
------DEL VariableDeclarationFragment@@pc=(PasswordCallback)callback @AT@ 1867 @LENGTH@ 32
---------DEL SimpleName@@pc @AT@ 1867 @LENGTH@ 2
---------DEL CastExpression@@(PasswordCallback)callback @AT@ 1872 @LENGTH@ 27
------------DEL SimpleType@@PasswordCallback @AT@ 1873 @LENGTH@ 16
------------DEL SimpleName@@callback @AT@ 1891 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:pc.setPassword(auth.getCredentials().toString().toCharArray()) @TO@ MethodInvocation:((PasswordCallback)callback).setPassword(auth.getCredentials().toString().toCharArray()) @AT@ 1904 @LENGTH@ 63
------UPD MethodInvocation@@pc.setPassword(auth.getCredentials().toString().toCharArray()) @TO@ ((PasswordCallback)callback).setPassword(auth.getCredentials().toString().toCharArray()) @AT@ 1904 @LENGTH@ 62
---------INS ParenthesizedExpression@@((PasswordCallback)callback) @TO@ MethodInvocation@@pc.setPassword(auth.getCredentials().toString().toCharArray()) @AT@ 1850 @LENGTH@ 29
------------INS CastExpression@@(PasswordCallback)callback @TO@ ParenthesizedExpression@@((PasswordCallback)callback) @AT@ 1851 @LENGTH@ 27
---------------INS SimpleType@@PasswordCallback @TO@ CastExpression@@(PasswordCallback)callback @AT@ 1852 @LENGTH@ 16
---------------INS SimpleName@@callback @TO@ CastExpression@@(PasswordCallback)callback @AT@ 1870 @LENGTH@ 8
---------DEL SimpleName@@Name:pc @AT@ 1904 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2602 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2602 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2618 @LENGTH@ 21


UPD IfStatement@@if (i >= expectedDDLen && (buf.array()[i + 2] == LFH[2] && buf.array()[i + 3] == LFH[3]) || (buf.array()[i] == CFH[2] && buf.array()[i + 3] == CFH[3])) {  expectDDPos=i - expectedDDLen;  done=true;} else if (buf.array()[i + 2] == DD[2] && buf.array()[i + 3] == DD[3]) {  done=true;} @TO@ if (i >= expectedDDLen && (buf.array()[i + 2] == LFH[2] && buf.array()[i + 3] == LFH[3]) || (buf.array()[i + 2] == CFH[2] && buf.array()[i + 3] == CFH[3])) {  expectDDPos=i - expectedDDLen;  done=true;} else if (buf.array()[i + 2] == DD[2] && buf.array()[i + 3] == DD[3]) {  done=true;} @AT@ 39038 @LENGTH@ 511
---UPD InfixExpression@@i >= expectedDDLen && (buf.array()[i + 2] == LFH[2] && buf.array()[i + 3] == LFH[3]) || (buf.array()[i] == CFH[2] && buf.array()[i + 3] == CFH[3]) @TO@ i >= expectedDDLen && (buf.array()[i + 2] == LFH[2] && buf.array()[i + 3] == LFH[3]) || (buf.array()[i + 2] == CFH[2] && buf.array()[i + 3] == CFH[3]) @AT@ 39042 @LENGTH@ 186
------UPD ParenthesizedExpression@@(buf.array()[i] == CFH[2] && buf.array()[i + 3] == CFH[3]) @TO@ (buf.array()[i + 2] == CFH[2] && buf.array()[i + 3] == CFH[3]) @AT@ 39170 @LENGTH@ 58
---------UPD InfixExpression@@buf.array()[i] == CFH[2] && buf.array()[i + 3] == CFH[3] @TO@ buf.array()[i + 2] == CFH[2] && buf.array()[i + 3] == CFH[3] @AT@ 39171 @LENGTH@ 56
------------UPD InfixExpression@@buf.array()[i] == CFH[2] @TO@ buf.array()[i + 2] == CFH[2] @AT@ 39171 @LENGTH@ 24
---------------UPD ArrayAccess@@buf.array()[i] @TO@ buf.array()[i + 2] @AT@ 39171 @LENGTH@ 14
------------------INS InfixExpression@@i + 2 @TO@ ArrayAccess@@buf.array()[i] @AT@ 39183 @LENGTH@ 5
---------------------INS SimpleName@@i @TO@ InfixExpression@@i + 2 @AT@ 39183 @LENGTH@ 1
---------------------INS Operator@@+ @TO@ InfixExpression@@i + 2 @AT@ 39184 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ InfixExpression@@i + 2 @AT@ 39187 @LENGTH@ 1
------------------DEL SimpleName@@i @AT@ 39183 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:resultHandler.onComplete(new Integer(1)) @TO@ MethodInvocation:resultHandler.onComplete(Integer.valueOf(1)) @AT@ 3513 @LENGTH@ 41
---UPD MethodInvocation@@resultHandler.onComplete(new Integer(1)) @TO@ resultHandler.onComplete(Integer.valueOf(1)) @AT@ 3513 @LENGTH@ 40
------UPD SimpleName@@MethodName:onComplete:[new Integer(1)] @TO@ MethodName:onComplete:[Integer.valueOf(1)] @AT@ 3527 @LENGTH@ 26
---------DEL ClassInstanceCreation@@Integer[1] @AT@ 3538 @LENGTH@ 14
------------DEL New@@new @AT@ 3538 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 3542 @LENGTH@ 7
------------DEL NumberLiteral@@1 @AT@ 3550 @LENGTH@ 1
---------INS MethodInvocation@@Integer.valueOf(1) @TO@ SimpleName@@MethodName:onComplete:[new Integer(1)] @AT@ 3542 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 3542 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 3550 @LENGTH@ 10
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 3558 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2355 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2355 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2355 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2366 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2373 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:servletContext.setAttribute(StaticWebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,context) @TO@ MethodInvocation:servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,context) @AT@ 1471 @LENGTH@ 105
---UPD MethodInvocation@@servletContext.setAttribute(StaticWebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,context) @TO@ servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,context) @AT@ 1471 @LENGTH@ 104
------UPD SimpleName@@MethodName:setAttribute:[StaticWebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context] @TO@ MethodName:setAttribute:[WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context] @AT@ 1486 @LENGTH@ 89
---------UPD QualifiedName@@StaticWebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE @TO@ WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE @AT@ 1499 @LENGTH@ 66
------------UPD SimpleName@@StaticWebApplicationContext @TO@ WebApplicationContext @AT@ 1499 @LENGTH@ 27


INS ReturnStatement@@ConditionalExpression:(!this.trustResolver.isAnonymous(auth)) ? auth : null @TO@ MethodDeclaration@@private, Authentication, MethodName:getAuthentication,  @AT@ 3370 @LENGTH@ 61
---INS ConditionalExpression@@(!this.trustResolver.isAnonymous(auth)) ? auth : null @TO@ ReturnStatement@@ConditionalExpression:(!this.trustResolver.isAnonymous(auth)) ? auth : null @AT@ 3377 @LENGTH@ 53
------INS ParenthesizedExpression@@(!this.trustResolver.isAnonymous(auth)) @TO@ ConditionalExpression@@(!this.trustResolver.isAnonymous(auth)) ? auth : null @AT@ 3377 @LENGTH@ 39
---------MOV PrefixExpression@@!this.trustResolver.isAnonymous(auth) @TO@ ParenthesizedExpression@@(!this.trustResolver.isAnonymous(auth)) @AT@ 3375 @LENGTH@ 37
------INS SimpleName@@auth @TO@ ConditionalExpression@@(!this.trustResolver.isAnonymous(auth)) ? auth : null @AT@ 3419 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@(!this.trustResolver.isAnonymous(auth)) ? auth : null @AT@ 3426 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:ClientRegistration.withRegistrationId(JsonNodeUtils.findStringValue(clientRegistrationNode,"registrationId")).clientId(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientId")).clientSecret(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientSecret")).clientAuthenticationMethod(CLIENT_AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"clientAuthenticationMethod"))).authorizationGrantType(AUTHORIZATION_GRANT_TYPE_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"authorizationGrantType"))).redirectUri(JsonNodeUtils.findStringValue(clientRegistrationNode,"redirectUri")).scope(JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.SET_TYPE_REFERENCE,mapper)).clientName(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientName")).authorizationUri(JsonNodeUtils.findStringValue(providerDetailsNode,"authorizationUri")).tokenUri(JsonNodeUtils.findStringValue(providerDetailsNode,"tokenUri")).userInfoUri(JsonNodeUtils.findStringValue(userInfoEndpointNode,"uri")).userInfoAuthenticationMethod(AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(userInfoEndpointNode,"authenticationMethod"))).userNameAttributeName(JsonNodeUtils.findStringValue(userInfoEndpointNode,"userNameAttributeName")).jwkSetUri(JsonNodeUtils.findStringValue(providerDetailsNode,"jwkSetUri")).issuerUri(JsonNodeUtils.findStringValue(providerDetailsNode,"issuerUri")).providerConfigurationMetadata(JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.MAP_TYPE_REFERENCE,mapper)).build() @TO@ MethodInvocation:ClientRegistration.withRegistrationId(JsonNodeUtils.findStringValue(clientRegistrationNode,"registrationId")).clientId(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientId")).clientSecret(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientSecret")).clientAuthenticationMethod(CLIENT_AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"clientAuthenticationMethod"))).authorizationGrantType(AUTHORIZATION_GRANT_TYPE_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"authorizationGrantType"))).redirectUri(JsonNodeUtils.findStringValue(clientRegistrationNode,"redirectUri")).scope(JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.STRING_SET,mapper)).clientName(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientName")).authorizationUri(JsonNodeUtils.findStringValue(providerDetailsNode,"authorizationUri")).tokenUri(JsonNodeUtils.findStringValue(providerDetailsNode,"tokenUri")).userInfoUri(JsonNodeUtils.findStringValue(userInfoEndpointNode,"uri")).userInfoAuthenticationMethod(AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(userInfoEndpointNode,"authenticationMethod"))).userNameAttributeName(JsonNodeUtils.findStringValue(userInfoEndpointNode,"userNameAttributeName")).jwkSetUri(JsonNodeUtils.findStringValue(providerDetailsNode,"jwkSetUri")).issuerUri(JsonNodeUtils.findStringValue(providerDetailsNode,"issuerUri")).providerConfigurationMetadata(JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.STRING_OBJECT_MAP,mapper)).build() @AT@ 2538 @LENGTH@ 1752
---UPD MethodInvocation@@ClientRegistration.withRegistrationId(JsonNodeUtils.findStringValue(clientRegistrationNode,"registrationId")).clientId(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientId")).clientSecret(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientSecret")).clientAuthenticationMethod(CLIENT_AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"clientAuthenticationMethod"))).authorizationGrantType(AUTHORIZATION_GRANT_TYPE_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"authorizationGrantType"))).redirectUri(JsonNodeUtils.findStringValue(clientRegistrationNode,"redirectUri")).scope(JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.SET_TYPE_REFERENCE,mapper)).clientName(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientName")).authorizationUri(JsonNodeUtils.findStringValue(providerDetailsNode,"authorizationUri")).tokenUri(JsonNodeUtils.findStringValue(providerDetailsNode,"tokenUri")).userInfoUri(JsonNodeUtils.findStringValue(userInfoEndpointNode,"uri")).userInfoAuthenticationMethod(AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(userInfoEndpointNode,"authenticationMethod"))).userNameAttributeName(JsonNodeUtils.findStringValue(userInfoEndpointNode,"userNameAttributeName")).jwkSetUri(JsonNodeUtils.findStringValue(providerDetailsNode,"jwkSetUri")).issuerUri(JsonNodeUtils.findStringValue(providerDetailsNode,"issuerUri")).providerConfigurationMetadata(JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.MAP_TYPE_REFERENCE,mapper)).build() @TO@ ClientRegistration.withRegistrationId(JsonNodeUtils.findStringValue(clientRegistrationNode,"registrationId")).clientId(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientId")).clientSecret(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientSecret")).clientAuthenticationMethod(CLIENT_AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"clientAuthenticationMethod"))).authorizationGrantType(AUTHORIZATION_GRANT_TYPE_CONVERTER.convert(JsonNodeUtils.findObjectNode(clientRegistrationNode,"authorizationGrantType"))).redirectUri(JsonNodeUtils.findStringValue(clientRegistrationNode,"redirectUri")).scope(JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.STRING_SET,mapper)).clientName(JsonNodeUtils.findStringValue(clientRegistrationNode,"clientName")).authorizationUri(JsonNodeUtils.findStringValue(providerDetailsNode,"authorizationUri")).tokenUri(JsonNodeUtils.findStringValue(providerDetailsNode,"tokenUri")).userInfoUri(JsonNodeUtils.findStringValue(userInfoEndpointNode,"uri")).userInfoAuthenticationMethod(AUTHENTICATION_METHOD_CONVERTER.convert(JsonNodeUtils.findObjectNode(userInfoEndpointNode,"authenticationMethod"))).userNameAttributeName(JsonNodeUtils.findStringValue(userInfoEndpointNode,"userNameAttributeName")).jwkSetUri(JsonNodeUtils.findStringValue(providerDetailsNode,"jwkSetUri")).issuerUri(JsonNodeUtils.findStringValue(providerDetailsNode,"issuerUri")).providerConfigurationMetadata(JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.STRING_OBJECT_MAP,mapper)).build() @AT@ 2545 @LENGTH@ 1744
------UPD MethodInvocation@@MethodName:providerConfigurationMetadata:[JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.MAP_TYPE_REFERENCE,mapper)] @TO@ MethodName:providerConfigurationMetadata:[JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.STRING_OBJECT_MAP,mapper)] @AT@ 2545 @LENGTH@ 1731
---------UPD MethodInvocation@@JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.MAP_TYPE_REFERENCE,mapper) @TO@ JsonNodeUtils.findValue(providerDetailsNode,"configurationMetadata",JsonNodeUtils.STRING_OBJECT_MAP,mapper) @AT@ 4158 @LENGTH@ 117
------------UPD SimpleName@@MethodName:findValue:[providerDetailsNode, "configurationMetadata", JsonNodeUtils.MAP_TYPE_REFERENCE, mapper] @TO@ MethodName:findValue:[providerDetailsNode, "configurationMetadata", JsonNodeUtils.STRING_OBJECT_MAP, mapper] @AT@ 4172 @LENGTH@ 103
---------------UPD QualifiedName@@JsonNodeUtils.MAP_TYPE_REFERENCE @TO@ JsonNodeUtils.STRING_OBJECT_MAP @AT@ 4234 @LENGTH@ 32
------------------UPD SimpleName@@MAP_TYPE_REFERENCE @TO@ STRING_OBJECT_MAP @AT@ 4248 @LENGTH@ 18
------UPD MethodInvocation@@MethodName:scope:[JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.SET_TYPE_REFERENCE,mapper)] @TO@ MethodName:scope:[JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.STRING_SET,mapper)] @AT@ 2545 @LENGTH@ 820
---------UPD MethodInvocation@@JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.SET_TYPE_REFERENCE,mapper) @TO@ JsonNodeUtils.findValue(clientRegistrationNode,"scopes",JsonNodeUtils.STRING_SET,mapper) @AT@ 3259 @LENGTH@ 105
------------UPD SimpleName@@MethodName:findValue:[clientRegistrationNode, "scopes", JsonNodeUtils.SET_TYPE_REFERENCE, mapper] @TO@ MethodName:findValue:[clientRegistrationNode, "scopes", JsonNodeUtils.STRING_SET, mapper] @AT@ 3273 @LENGTH@ 91
---------------UPD QualifiedName@@JsonNodeUtils.SET_TYPE_REFERENCE @TO@ JsonNodeUtils.STRING_SET @AT@ 3317 @LENGTH@ 32
------------------UPD SimpleName@@SET_TYPE_REFERENCE @TO@ STRING_SET @AT@ 3331 @LENGTH@ 18


UPD EnhancedForStatement@@for (RelationshipDescription relationshipDescription : nodeDescription.getRelationships()) {  String relationshipType=relationshipDescription.getType();  if (relationshipTypes.contains(relationshipType)) {    break;  }  if (relationshipDescription.isDynamic()) {    relationshipTypes.clear();    break;  }  relationshipTypes.add(relationshipType);  collectAllRelationshipTypes(relationshipDescription.getTarget(),relationshipTypes);} @TO@ for (RelationshipDescription relationshipDescription : nodeDescription.getRelationships()) {  String relationshipType=relationshipDescription.getType();  if (relationshipTypes.contains(relationshipType)) {    continue;  }  if (relationshipDescription.isDynamic()) {    relationshipTypes.clear();    continue;  }  relationshipTypes.add(relationshipType);  collectAllRelationshipTypes(relationshipDescription.getTarget(),relationshipTypes);} @AT@ 18771 @LENGTH@ 456
---UPD IfStatement@@if (relationshipTypes.contains(relationshipType)) {  break;} @TO@ if (relationshipTypes.contains(relationshipType)) {  continue;} @AT@ 18931 @LENGTH@ 67
------UPD Block@@ThenBody:{  break;} @TO@ ThenBody:{  continue;} @AT@ 18981 @LENGTH@ 17
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 18987 @LENGTH@ 9
---------DEL BreakStatement@@ @AT@ 18987 @LENGTH@ 6
---UPD IfStatement@@if (relationshipDescription.isDynamic()) {  relationshipTypes.clear();  break;} @TO@ if (relationshipDescription.isDynamic()) {  relationshipTypes.clear();  continue;} @AT@ 19002 @LENGTH@ 89
------UPD Block@@ThenBody:{  relationshipTypes.clear();  break;} @TO@ ThenBody:{  relationshipTypes.clear();  continue;} @AT@ 19043 @LENGTH@ 48
---------DEL BreakStatement@@ @AT@ 19080 @LENGTH@ 6
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  relationshipTypes.clear();  break;} @AT@ 19083 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1704 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1704 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1720 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault) @TO@ MethodInvocation:exchange.getMessage().setBody(fault) @AT@ 4167 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(fault) @TO@ exchange.getMessage().setBody(fault) @AT@ 4167 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4167 @LENGTH@ 17


UPD TypeDeclaration@@[@org.junit.Ignore("HIVE-24172"), public]TestMmCompactorOnMr, TestMmCompactorOnTez @TO@ [public]TestMmCompactorOnMr, TestMmCompactorOnTez @AT@ 927 @LENGTH@ 211
---DEL SingleMemberAnnotation@@@org.junit.Ignore("HIVE-24172") @AT@ 927 @LENGTH@ 31


MOV MethodDeclaration@@private, voidMethodName:AnyRequestMatcher,  @TO@ TypeDeclaration@@[public, final]AnyRequestMatcher, [RequestMatcher] @AT@ 1365 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:from("activemq:testReplyFixedQueue").inOut("activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)) @TO@ MethodInvocation:from("activemq:testReplyFixedQueue").to(ExchangePattern.InOut,"activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)) @AT@ 3063 @LENGTH@ 187
---UPD MethodInvocation@@from("activemq:testReplyFixedQueue").inOut("activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)) @TO@ from("activemq:testReplyFixedQueue").to(ExchangePattern.InOut,"activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)) @AT@ 3063 @LENGTH@ 186
------UPD MethodInvocation@@MethodName:inOut:["activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply"] @AT@ 3063 @LENGTH@ 139
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply"] @AT@ 3189 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3189 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3205 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:logger.info("Using bean '" + expressionHandlerRef + "' as web SecurityExpressionHandler implementation") @TO@ MethodInvocation:logger.info("Using bean '" + expressionHandlerRef + "' as web "+ "SecurityExpressionHandler implementation") @AT@ 4944 @LENGTH@ 112
---UPD MethodInvocation@@logger.info("Using bean '" + expressionHandlerRef + "' as web SecurityExpressionHandler implementation") @TO@ logger.info("Using bean '" + expressionHandlerRef + "' as web "+ "SecurityExpressionHandler implementation") @AT@ 4944 @LENGTH@ 111
------UPD SimpleName@@MethodName:info:["Using bean '" + expressionHandlerRef + "' as web SecurityExpressionHandler implementation"] @TO@ MethodName:info:["Using bean '" + expressionHandlerRef + "' as web "+ "SecurityExpressionHandler implementation"] @AT@ 4951 @LENGTH@ 104
---------UPD InfixExpression@@"Using bean '" + expressionHandlerRef + "' as web SecurityExpressionHandler implementation" @TO@ "Using bean '" + expressionHandlerRef + "' as web "+ "SecurityExpressionHandler implementation" @AT@ 4963 @LENGTH@ 91
------------INS StringLiteral@@"' as web " @TO@ InfixExpression@@"Using bean '" + expressionHandlerRef + "' as web SecurityExpressionHandler implementation" @AT@ 4986 @LENGTH@ 11
------------UPD StringLiteral@@"' as web SecurityExpressionHandler implementation" @TO@ "SecurityExpressionHandler implementation" @AT@ 5003 @LENGTH@ 51


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 3456 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 3456 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3472 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2111 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2111 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2127 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:configuration.setHttpProxyPort(new Integer(3128)) @TO@ MethodInvocation:configuration.setHttpProxyPort(Integer.valueOf(3128)) @AT@ 2073 @LENGTH@ 50
---UPD MethodInvocation@@configuration.setHttpProxyPort(new Integer(3128)) @TO@ configuration.setHttpProxyPort(Integer.valueOf(3128)) @AT@ 2073 @LENGTH@ 49
------UPD SimpleName@@MethodName:setHttpProxyPort:[new Integer(3128)] @TO@ MethodName:setHttpProxyPort:[Integer.valueOf(3128)] @AT@ 2087 @LENGTH@ 35
---------INS MethodInvocation@@Integer.valueOf(3128) @TO@ SimpleName@@MethodName:setHttpProxyPort:[new Integer(3128)] @AT@ 2104 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(3128) @AT@ 2104 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[3128] @TO@ MethodInvocation@@Integer.valueOf(3128) @AT@ 2112 @LENGTH@ 13
---------------INS NumberLiteral@@3128 @TO@ SimpleName@@MethodName:valueOf:[3128] @AT@ 2120 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Integer[3128] @AT@ 2104 @LENGTH@ 17
------------DEL New@@new @AT@ 2104 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2108 @LENGTH@ 7
------------DEL NumberLiteral@@3128 @AT@ 2116 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(1000),(Object)value,"Converted to Integer") @TO@ MethodInvocation:assertEquals(Integer.valueOf(1000),(Object)value,"Converted to Integer") @AT@ 3262 @LENGTH@ 72
---UPD MethodInvocation@@assertEquals(new Integer(1000),(Object)value,"Converted to Integer") @TO@ assertEquals(Integer.valueOf(1000),(Object)value,"Converted to Integer") @AT@ 3262 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertEquals:[new Integer(1000), (Object)value, "Converted to Integer"] @TO@ MethodName:assertEquals:[Integer.valueOf(1000), (Object)value, "Converted to Integer"] @AT@ 3262 @LENGTH@ 71
---------DEL ClassInstanceCreation@@Integer[1000] @AT@ 3275 @LENGTH@ 17
------------DEL New@@new @AT@ 3275 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 3279 @LENGTH@ 7
------------DEL NumberLiteral@@1000 @AT@ 3287 @LENGTH@ 4
---------INS MethodInvocation@@Integer.valueOf(1000) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(1000), (Object)value, "Converted to Integer"] @AT@ 3279 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1000) @AT@ 3279 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[1000] @TO@ MethodInvocation@@Integer.valueOf(1000) @AT@ 3287 @LENGTH@ 13
---------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:valueOf:[1000] @AT@ 3295 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assume.assumeThat("Please specify a Slack application webhook URL",hook,CoreMatchers.notNullValue()) @TO@ MethodInvocation:assumeTrue(hook != null,"Please specify a Slack application webhook URL") @AT@ 2421 @LENGTH@ 103
---UPD MethodInvocation@@Assume.assumeThat("Please specify a Slack application webhook URL",hook,CoreMatchers.notNullValue()) @TO@ assumeTrue(hook != null,"Please specify a Slack application webhook URL") @AT@ 2421 @LENGTH@ 102
------DEL SimpleName@@Name:Assume @AT@ 2421 @LENGTH@ 6
------UPD SimpleName@@MethodName:assumeThat:["Please specify a Slack application webhook URL", hook, CoreMatchers.notNullValue()] @TO@ MethodName:assumeTrue:[hook != null, "Please specify a Slack application webhook URL"] @AT@ 2428 @LENGTH@ 95
---------INS InfixExpression@@hook != null @TO@ SimpleName@@MethodName:assumeThat:["Please specify a Slack application webhook URL", hook, CoreMatchers.notNullValue()] @AT@ 2405 @LENGTH@ 12
------------INS SimpleName@@hook @TO@ InfixExpression@@hook != null @AT@ 2405 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@hook != null @AT@ 2409 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@hook != null @AT@ 2413 @LENGTH@ 4
---------DEL SimpleName@@hook @AT@ 2489 @LENGTH@ 4
---------DEL MethodInvocation@@CoreMatchers.notNullValue() @AT@ 2495 @LENGTH@ 27
------------DEL SimpleName@@Name:CoreMatchers @AT@ 2495 @LENGTH@ 12
------------DEL SimpleName@@MethodName:notNullValue:[] @AT@ 2508 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:LOG.error("Error initializing servlet: {}",e) @TO@ MethodInvocation:LOG.error("Error initializing servlet: {}",e.getMessage(),e) @AT@ 4858 @LENGTH@ 47
---UPD MethodInvocation@@LOG.error("Error initializing servlet: {}",e) @TO@ LOG.error("Error initializing servlet: {}",e.getMessage(),e) @AT@ 4858 @LENGTH@ 46
------UPD SimpleName@@MethodName:error:["Error initializing servlet: {}", e] @TO@ MethodName:error:["Error initializing servlet: {}", e.getMessage(), e] @AT@ 4862 @LENGTH@ 42
---------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:error:["Error initializing servlet: {}", e] @AT@ 4902 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 4902 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 4904 @LENGTH@ 12


UPD CatchClause@@catch (AuthenticationException failed) {  SecurityContextHolder.clearContext();  if (debug) {    this.logger.debug("Authentication request for failed!",failed);  }  this.authenticationFailureHandler.onAuthenticationFailure(request,response,failed);} @TO@ catch (AuthenticationException failed) {  SecurityContextHolder.clearContext();  this.logger.debug("Authentication request for failed!",failed);  this.authenticationFailureHandler.onAuthenticationFailure(request,response,failed);} @AT@ 5489 @LENGTH@ 266
---DEL IfStatement@@if (debug) {  this.logger.debug("Authentication request for failed!",failed);} @AT@ 5575 @LENGTH@ 86
------DEL SimpleName@@debug @AT@ 5579 @LENGTH@ 5
------DEL Block@@ThenBody:{  this.logger.debug("Authentication request for failed!",failed);} @AT@ 5586 @LENGTH@ 75
---MOV ExpressionStatement@@MethodInvocation:this.logger.debug("Authentication request for failed!",failed) @TO@ CatchClause@@catch (AuthenticationException failed) {  SecurityContextHolder.clearContext();  if (debug) {    this.logger.debug("Authentication request for failed!",failed);  }  this.authenticationFailureHandler.onAuthenticationFailure(request,response,failed);} @AT@ 5592 @LENGTH@ 64


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ MethodInvocation:assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2350 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2350 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @TO@ MethodName:assertEquals:["11192828ahsh2723", resultExchange.getIn().getHeader(S3Constants.VERSION_ID)] @AT@ 2350 @LENGTH@ 90
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.VERSION_ID) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @AT@ 2363 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:setOutFilterPattern("CamelRabbitmq*") @TO@ MethodInvocation:setOutFilterPattern("CamelRabbitmq.*") @AT@ 1174 @LENGTH@ 38
---UPD MethodInvocation@@setOutFilterPattern("CamelRabbitmq*") @TO@ setOutFilterPattern("CamelRabbitmq.*") @AT@ 1174 @LENGTH@ 37
------UPD SimpleName@@MethodName:setOutFilterPattern:["CamelRabbitmq*"] @TO@ MethodName:setOutFilterPattern:["CamelRabbitmq.*"] @AT@ 1174 @LENGTH@ 37
---------UPD StringLiteral@@"CamelRabbitmq*" @TO@ "CamelRabbitmq.*" @AT@ 1194 @LENGTH@ 16


UPD TypeDeclaration@@[public, final]OpenIDLoginConfigurer, AbstractAuthenticationFilterConfigurer<H,OpenIDLoginConfigurer<H>,OpenIDAuthenticationFilter> @TO@ [@Deprecated, public, final]OpenIDLoginConfigurer, AbstractAuthenticationFilterConfigurer<H,OpenIDLoginConfigurer<H>,OpenIDAuthenticationFilter> @AT@ 5213 @LENGTH@ 15834
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]OpenIDLoginConfigurer, AbstractAuthenticationFilterConfigurer<H,OpenIDLoginConfigurer<H>,OpenIDAuthenticationFilter> @AT@ 5213 @LENGTH@ 11


UPD TryStatement@@try {  XZUtils.setCacheXZAvailability(false);  assertEquals(XZUtils.CachedAvailability.DONT_CACHE,XZUtils.getCachedXZAvailability());  assertTrue(XZUtils.isXZCompressionAvailable());}  finally {  XZUtils.setCacheXZAvailability(true);} @TO@ try {  XZUtils.setCacheXZAvailablity(false);  assertEquals(XZUtils.CachedAvailability.DONT_CACHE,XZUtils.getCachedXZAvailability());  assertTrue(XZUtils.isXZCompressionAvailable());}  finally {  XZUtils.setCacheXZAvailablity(true);} @AT@ 3446 @LENGTH@ 296
---UPD ExpressionStatement@@MethodInvocation:XZUtils.setCacheXZAvailability(false) @TO@ MethodInvocation:XZUtils.setCacheXZAvailablity(false) @AT@ 3464 @LENGTH@ 38
------UPD MethodInvocation@@XZUtils.setCacheXZAvailability(false) @TO@ XZUtils.setCacheXZAvailablity(false) @AT@ 3464 @LENGTH@ 37
---------UPD SimpleName@@MethodName:setCacheXZAvailability:[false] @TO@ MethodName:setCacheXZAvailablity:[false] @AT@ 3472 @LENGTH@ 29
---UPD Block@@FinallyBody:{  XZUtils.setCacheXZAvailability(true);} @TO@ FinallyBody:{  XZUtils.setCacheXZAvailablity(true);} @AT@ 3681 @LENGTH@ 61
------UPD ExpressionStatement@@MethodInvocation:XZUtils.setCacheXZAvailability(true) @TO@ MethodInvocation:XZUtils.setCacheXZAvailablity(true) @AT@ 3695 @LENGTH@ 37
---------UPD MethodInvocation@@XZUtils.setCacheXZAvailability(true) @TO@ XZUtils.setCacheXZAvailablity(true) @AT@ 3695 @LENGTH@ 36
------------UPD SimpleName@@MethodName:setCacheXZAvailability:[true] @TO@ MethodName:setCacheXZAvailablity:[true] @AT@ 3703 @LENGTH@ 28


INS MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @TO@ TypeDeclaration@@[public]NegatedServerWebExchangeMatcher, [ServerWebExchangeMatcher] @AT@ 1833 @LENGTH@ 141
---INS Modifier@@private @TO@ MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @AT@ 1833 @LENGTH@ 7
---INS ParameterizedType@@Mono<MatchResult> @TO@ MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @AT@ 1841 @LENGTH@ 17
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<MatchResult> @AT@ 1841 @LENGTH@ 4
------INS SimpleType@@MatchResult @TO@ ParameterizedType@@Mono<MatchResult> @AT@ 1846 @LENGTH@ 11
---INS SimpleName@@MethodName:negate @TO@ MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @AT@ 1859 @LENGTH@ 6
---INS SingleVariableDeclaration@@MatchResult matchResult @TO@ MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @AT@ 1866 @LENGTH@ 23
------INS SimpleType@@MatchResult @TO@ SingleVariableDeclaration@@MatchResult matchResult @AT@ 1866 @LENGTH@ 11
------INS SimpleName@@matchResult @TO@ SingleVariableDeclaration@@MatchResult matchResult @AT@ 1878 @LENGTH@ 11
---INS ReturnStatement@@ConditionalExpression:matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @TO@ MethodDeclaration@@private, Mono<MatchResult>, MethodName:negate, MatchResult matchResult,  @AT@ 1895 @LENGTH@ 76
------INS ConditionalExpression@@matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @TO@ ReturnStatement@@ConditionalExpression:matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1902 @LENGTH@ 68
---------INS MethodInvocation@@matchResult.isMatch() @TO@ ConditionalExpression@@matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1902 @LENGTH@ 21
------------INS SimpleName@@Name:matchResult @TO@ MethodInvocation@@matchResult.isMatch() @AT@ 1902 @LENGTH@ 11
------------INS SimpleName@@MethodName:isMatch:[] @TO@ MethodInvocation@@matchResult.isMatch() @AT@ 1914 @LENGTH@ 9
---------INS MethodInvocation@@MatchResult.notMatch() @TO@ ConditionalExpression@@matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1926 @LENGTH@ 22
------------INS SimpleName@@Name:MatchResult @TO@ MethodInvocation@@MatchResult.notMatch() @AT@ 1926 @LENGTH@ 11
------------INS SimpleName@@MethodName:notMatch:[] @TO@ MethodInvocation@@MatchResult.notMatch() @AT@ 1938 @LENGTH@ 10
---------INS MethodInvocation@@MatchResult.match() @TO@ ConditionalExpression@@matchResult.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1951 @LENGTH@ 19
------------INS SimpleName@@Name:MatchResult @TO@ MethodInvocation@@MatchResult.match() @AT@ 1951 @LENGTH@ 11
------------INS SimpleName@@MethodName:match:[] @TO@ MethodInvocation@@MatchResult.match() @AT@ 1963 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:localServer=new HttpTestServer(null,null) @TO@ Assignment:localServer=new HttpTestServer() @AT@ 2059 @LENGTH@ 45
---UPD Assignment@@localServer=new HttpTestServer(null,null) @TO@ localServer=new HttpTestServer() @AT@ 2059 @LENGTH@ 44
------UPD ClassInstanceCreation@@HttpTestServer[null, null] @TO@ HttpTestServer[] @AT@ 2073 @LENGTH@ 30
---------DEL NullLiteral@@null @AT@ 2092 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 2098 @LENGTH@ 4


UPD MethodDeclaration@@static, RedisScript, T, MethodName:of, String script, Class<T> resultType,  @TO@ static, RedisScript<T>, T, MethodName:of, String script, Class<T> resultType,  @AT@ 2389 @LENGTH@ 237
---DEL SimpleType@@RedisScript @AT@ 2400 @LENGTH@ 11
---INS ParameterizedType@@RedisScript<T> @TO@ MethodDeclaration@@static, RedisScript, T, MethodName:of, String script, Class<T> resultType,  @AT@ 2436 @LENGTH@ 14
------INS SimpleType@@RedisScript @TO@ ParameterizedType@@RedisScript<T> @AT@ 2436 @LENGTH@ 11
------INS SimpleType@@T @TO@ ParameterizedType@@RedisScript<T> @AT@ 2448 @LENGTH@ 1
---UPD ReturnStatement@@ClassInstanceCreation:new DefaultRedisScript(script,resultType) @TO@ ClassInstanceCreation:new DefaultRedisScript<>(script,resultType) @AT@ 2573 @LENGTH@ 50
------UPD ClassInstanceCreation@@DefaultRedisScript[script, resultType] @TO@ DefaultRedisScript<>[script, resultType] @AT@ 2580 @LENGTH@ 42
---------DEL SimpleType@@DefaultRedisScript @AT@ 2584 @LENGTH@ 18
---------INS ParameterizedType@@DefaultRedisScript<> @TO@ ClassInstanceCreation@@DefaultRedisScript[script, resultType] @AT@ 2623 @LENGTH@ 20
------------INS SimpleType@@DefaultRedisScript @TO@ ParameterizedType@@DefaultRedisScript<> @AT@ 2623 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("Should not use reflection",0,counter) @TO@ MethodInvocation:assertEquals(0,counter,"Should not use reflection") @AT@ 4092 @LENGTH@ 61
---UPD MethodInvocation@@Assert.assertEquals("Should not use reflection",0,counter) @TO@ assertEquals(0,counter,"Should not use reflection") @AT@ 4092 @LENGTH@ 60
------DEL SimpleName@@Name:Assert @AT@ 4092 @LENGTH@ 6
------UPD SimpleName@@MethodName:assertEquals:["Should not use reflection", 0, counter] @TO@ MethodName:assertEquals:[0, counter, "Should not use reflection"] @AT@ 4099 @LENGTH@ 53
---------DEL StringLiteral@@"Should not use reflection" @AT@ 4112 @LENGTH@ 27
---------INS StringLiteral@@"Should not use reflection" @TO@ SimpleName@@MethodName:assertEquals:["Should not use reflection", 0, counter] @AT@ 4133 @LENGTH@ 27


UPD MethodDeclaration@@public, void, MethodName:savedRequestIsRemovedAfterMatch, Exception,  @TO@ public, void, MethodName:doFilterWhenHttpSessionRequestCacheConfiguredThenSavedRequestRemovedAfterMatch, Exception,  @AT@ 979 @LENGTH@ 667
---UPD SimpleName@@MethodName:savedRequestIsRemovedAfterMatch @TO@ MethodName:doFilterWhenHttpSessionRequestCacheConfiguredThenSavedRequestRemovedAfterMatch @AT@ 991 @LENGTH@ 31


INS ExpressionStatement@@MethodInvocation:this.requestMap.values().forEach(allAttributes::addAll) @TO@ MethodDeclaration@@public, Collection<ConfigAttribute>, MethodName:getAllConfigAttributes,  @AT@ 2999 @LENGTH@ 56
---INS MethodInvocation@@this.requestMap.values().forEach(allAttributes::addAll) @TO@ ExpressionStatement@@MethodInvocation:this.requestMap.values().forEach(allAttributes::addAll) @AT@ 2999 @LENGTH@ 55
------INS MethodInvocation@@MethodName:values:[] @TO@ MethodInvocation@@this.requestMap.values().forEach(allAttributes::addAll) @AT@ 2999 @LENGTH@ 24
------MOV FieldAccess@@this.requestMap @TO@ MethodInvocation@@this.requestMap.values().forEach(allAttributes::addAll) @AT@ 3069 @LENGTH@ 15
------MOV SimpleName@@MethodName:entrySet:[] @TO@ MethodInvocation@@this.requestMap.values().forEach(allAttributes::addAll) @AT@ 3085 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2705 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2705 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2721 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("activemq:test").inOut("activemq:ping?requestTimeout=500").delay(constant(1000)) @TO@ MethodInvocation:from("activemq:test").to(ExchangePattern.InOut,"activemq:ping?requestTimeout=500").delay(constant(1000)) @AT@ 2909 @LENGTH@ 136
---UPD MethodInvocation@@from("activemq:test").inOut("activemq:ping?requestTimeout=500").delay(constant(1000)) @TO@ from("activemq:test").to(ExchangePattern.InOut,"activemq:ping?requestTimeout=500").delay(constant(1000)) @AT@ 2909 @LENGTH@ 135
------UPD MethodInvocation@@MethodName:inOut:["activemq:ping?requestTimeout=500"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:ping?requestTimeout=500"] @AT@ 2909 @LENGTH@ 88
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:ping?requestTimeout=500"] @AT@ 3000 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3000 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3016 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @AT@ 2875 @LENGTH@ 155
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @AT@ 2875 @LENGTH@ 154
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @AT@ 2875 @LENGTH@ 111
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @AT@ 2965 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2965 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2981 @LENGTH@ 5


INS MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @TO@ TypeDeclaration@@[@Nested]FindWithRelationships, IntegrationTestBase @AT@ 29560 @LENGTH@ 574
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29555 @LENGTH@ 4
---INS SimpleName@@MethodName:findEntityWithSelfReferencesInBothDirections @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29560 @LENGTH@ 44
---INS SingleVariableDeclaration@@@Autowired PetRepository repository @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29605 @LENGTH@ 35
------INS SimpleType@@PetRepository @TO@ SingleVariableDeclaration@@@Autowired PetRepository repository @AT@ 29616 @LENGTH@ 13
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired PetRepository repository @AT@ 29630 @LENGTH@ 10
---INS VariableDeclarationStatement@@long petId; @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29647 @LENGTH@ 11
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long petId; @AT@ 29647 @LENGTH@ 4
------INS VariableDeclarationFragment@@petId @TO@ VariableDeclarationStatement@@long petId; @AT@ 29652 @LENGTH@ 5
---------INS SimpleName@@petId @TO@ VariableDeclarationFragment@@petId @AT@ 29652 @LENGTH@ 5
---INS TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29662 @LENGTH@ 243
------INS VariableDeclarationExpression@@Session session=createSession() @TO@ TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @AT@ 29667 @LENGTH@ 33
---------INS SimpleType@@Session @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 29667 @LENGTH@ 7
---------INS VariableDeclarationFragment@@session=createSession() @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 29675 @LENGTH@ 25
------------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 29675 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:createSession:[] @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 29685 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @AT@ 29708 @LENGTH@ 192
---------INS Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ ExpressionStatement@@Assignment:petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29708 @LENGTH@ 191
------------INS SimpleName@@petId @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29708 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29713 @LENGTH@ 1
------------INS MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29716 @LENGTH@ 183
---------------INS MethodInvocation@@MethodName:get:["id"] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29716 @LENGTH@ 174
------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:get:["id"] @AT@ 29885 @LENGTH@ 4
---------------INS MethodInvocation@@MethodName:single:[] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29716 @LENGTH@ 164
---------------INS MethodInvocation@@MethodName:run:["CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id"] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29716 @LENGTH@ 155
------------------INS InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @TO@ MethodInvocation@@MethodName:run:["CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id"] @AT@ 29728 @LENGTH@ 142
---------------------INS StringLiteral@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 29728 @LENGTH@ 68
---------------------INS Operator@@+ @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 29796 @LENGTH@ 1
---------------------INS StringLiteral@@"-[:Has]->(luna2:Pet{name:'Luna'})" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 29804 @LENGTH@ 35
---------------------INS StringLiteral@@"RETURN id(luna) as id" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 29847 @LENGTH@ 23
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29716 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asLong:[] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 29891 @LENGTH@ 8
---INS VariableDeclarationStatement@@Pet loadedPet=repository.findById(petId).get(); @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29909 @LENGTH@ 49
------INS SimpleType@@Pet @TO@ VariableDeclarationStatement@@Pet loadedPet=repository.findById(petId).get(); @AT@ 29909 @LENGTH@ 3
------INS VariableDeclarationFragment@@loadedPet=repository.findById(petId).get() @TO@ VariableDeclarationStatement@@Pet loadedPet=repository.findById(petId).get(); @AT@ 29913 @LENGTH@ 44
---------INS SimpleName@@loadedPet @TO@ VariableDeclarationFragment@@loadedPet=repository.findById(petId).get() @AT@ 29913 @LENGTH@ 9
---------INS MethodInvocation@@repository.findById(petId).get() @TO@ VariableDeclarationFragment@@loadedPet=repository.findById(petId).get() @AT@ 29925 @LENGTH@ 32
------------INS MethodInvocation@@MethodName:findById:[petId] @TO@ MethodInvocation@@repository.findById(petId).get() @AT@ 29925 @LENGTH@ 26
---------------INS SimpleName@@petId @TO@ MethodInvocation@@MethodName:findById:[petId] @AT@ 29945 @LENGTH@ 5
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(petId).get() @AT@ 29925 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@repository.findById(petId).get() @AT@ 29952 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 29963 @LENGTH@ 72
------INS MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @TO@ ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 29963 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getName()] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 29963 @LENGTH@ 51
------------INS MethodInvocation@@loadedPet.getFriends().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getName()] @AT@ 29974 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 29974 @LENGTH@ 29
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 30001 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 29974 @LENGTH@ 22
---------------INS SimpleName@@Name:loadedPet @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 29974 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 30004 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["Daphne"] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 30015 @LENGTH@ 19
------------INS StringLiteral@@"Daphne" @TO@ SimpleName@@MethodName:isEqualTo:["Daphne"] @AT@ 30025 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired PetRepository repository,  @AT@ 30039 @LENGTH@ 90
------INS MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @TO@ ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 30039 @LENGTH@ 89
---------INS MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getFriends().get(0).getName()] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 30039 @LENGTH@ 71
------------INS MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getFriends().get(0).getName()] @AT@ 30050 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30050 @LENGTH@ 49
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 30097 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30050 @LENGTH@ 42
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30050 @LENGTH@ 29
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 30077 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30050 @LENGTH@ 22
---------------INS SimpleName@@Name:loadedPet @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30050 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 30100 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["Luna"] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 30111 @LENGTH@ 17
------------INS StringLiteral@@"Luna" @TO@ SimpleName@@MethodName:isEqualTo:["Luna"] @AT@ 30121 @LENGTH@ 6


INS MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @TO@ TypeDeclaration@@[public]OpenSamlRelyingPartyRegistrationBuilderHttpMessageConverter, [HttpMessageConverter<RelyingPartyRegistration.Builder>] @AT@ 7503 @LENGTH@ 520
---INS Modifier@@private @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7503 @LENGTH@ 7
---INS ParameterizedType@@List<Saml2X509Credential> @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7511 @LENGTH@ 25
------INS SimpleType@@List @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 7511 @LENGTH@ 4
------INS SimpleType@@Saml2X509Credential @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 7516 @LENGTH@ 19
---INS SimpleName@@MethodName:getVerification @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7537 @LENGTH@ 15
---INS SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7553 @LENGTH@ 33
------INS SimpleType@@IDPSSODescriptor @TO@ SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @AT@ 7553 @LENGTH@ 16
------INS SimpleName@@idpssoDescriptor @TO@ SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @AT@ 7570 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<Saml2X509Credential> verification=new ArrayList<>(); @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7592 @LENGTH@ 59
------INS ParameterizedType@@List<Saml2X509Credential> @TO@ VariableDeclarationStatement@@List<Saml2X509Credential> verification=new ArrayList<>(); @AT@ 7592 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 7592 @LENGTH@ 4
---------INS SimpleType@@Saml2X509Credential @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 7597 @LENGTH@ 19
------INS VariableDeclarationFragment@@verification=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<Saml2X509Credential> verification=new ArrayList<>(); @AT@ 7618 @LENGTH@ 32
---------INS SimpleName@@verification @TO@ VariableDeclarationFragment@@verification=new ArrayList<>() @AT@ 7618 @LENGTH@ 12
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@verification=new ArrayList<>() @AT@ 7633 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 7633 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 7637 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 7637 @LENGTH@ 9
---INS EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      verification.add(Saml2X509Credential.verification(certificate));    }  }} @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 7654 @LENGTH@ 343
------INS SingleVariableDeclaration@@KeyDescriptor keyDescriptor @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      verification.add(Saml2X509Credential.verification(certificate));    }  }} @AT@ 7659 @LENGTH@ 27
---------INS SimpleType@@KeyDescriptor @TO@ SingleVariableDeclaration@@KeyDescriptor keyDescriptor @AT@ 7659 @LENGTH@ 13
---------INS SimpleName@@keyDescriptor @TO@ SingleVariableDeclaration@@KeyDescriptor keyDescriptor @AT@ 7673 @LENGTH@ 13
------INS MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      verification.add(Saml2X509Credential.verification(certificate));    }  }} @AT@ 7689 @LENGTH@ 36
---------INS SimpleName@@Name:idpssoDescriptor @TO@ MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @AT@ 7689 @LENGTH@ 16
---------INS SimpleName@@MethodName:getKeyDescriptors:[] @TO@ MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @AT@ 7706 @LENGTH@ 19
------INS IfStatement@@if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      verification.add(Saml2X509Credential.verification(certificate));    }  }} @AT@ 7732 @LENGTH@ 261
---------INS MethodInvocation@@keyDescriptor.getUse().equals(UsageType.SIGNING) @TO@ IfStatement@@if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @AT@ 7736 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:getUse:[] @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.SIGNING) @AT@ 7736 @LENGTH@ 22
------------INS SimpleName@@Name:keyDescriptor @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.SIGNING) @AT@ 7736 @LENGTH@ 13
------------INS SimpleName@@MethodName:equals:[UsageType.SIGNING] @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.SIGNING) @AT@ 7759 @LENGTH@ 25
---------------INS QualifiedName@@UsageType.SIGNING @TO@ SimpleName@@MethodName:equals:[UsageType.SIGNING] @AT@ 7766 @LENGTH@ 17
------------------INS SimpleName@@UsageType @TO@ QualifiedName@@UsageType.SIGNING @AT@ 7766 @LENGTH@ 9
------------------INS SimpleName@@SIGNING @TO@ QualifiedName@@UsageType.SIGNING @AT@ 7776 @LENGTH@ 7
---------INS Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @TO@ IfStatement@@if (keyDescriptor.getUse().equals(UsageType.SIGNING)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @AT@ 7786 @LENGTH@ 207
------------INS VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @TO@ Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @AT@ 7792 @LENGTH@ 65
---------------INS ParameterizedType@@List<X509Certificate> @TO@ VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @AT@ 7792 @LENGTH@ 21
------------------INS SimpleType@@List @TO@ ParameterizedType@@List<X509Certificate> @AT@ 7792 @LENGTH@ 4
------------------INS SimpleType@@X509Certificate @TO@ ParameterizedType@@List<X509Certificate> @AT@ 7797 @LENGTH@ 15
---------------INS VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @TO@ VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @AT@ 7814 @LENGTH@ 42
------------------INS SimpleName@@certificates @TO@ VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @AT@ 7814 @LENGTH@ 12
------------------INS MethodInvocation@@certificates(keyDescriptor) @TO@ VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @AT@ 7829 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:certificates:[keyDescriptor] @TO@ MethodInvocation@@certificates(keyDescriptor) @AT@ 7829 @LENGTH@ 27
------------------------INS SimpleName@@keyDescriptor @TO@ SimpleName@@MethodName:certificates:[keyDescriptor] @AT@ 7842 @LENGTH@ 13
------------INS EnhancedForStatement@@for (X509Certificate certificate : certificates) {  verification.add(Saml2X509Credential.verification(certificate));} @TO@ Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    verification.add(Saml2X509Credential.verification(certificate));  }} @AT@ 7862 @LENGTH@ 126
---------------INS SingleVariableDeclaration@@X509Certificate certificate @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  verification.add(Saml2X509Credential.verification(certificate));} @AT@ 7867 @LENGTH@ 27
------------------INS SimpleType@@X509Certificate @TO@ SingleVariableDeclaration@@X509Certificate certificate @AT@ 7867 @LENGTH@ 15
------------------INS SimpleName@@certificate @TO@ SingleVariableDeclaration@@X509Certificate certificate @AT@ 7883 @LENGTH@ 11
---------------INS SimpleName@@certificates @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  verification.add(Saml2X509Credential.verification(certificate));} @AT@ 7897 @LENGTH@ 12
---------------INS ExpressionStatement@@MethodInvocation:verification.add(Saml2X509Credential.verification(certificate)) @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  verification.add(Saml2X509Credential.verification(certificate));} @AT@ 7918 @LENGTH@ 64
------------------INS MethodInvocation@@verification.add(Saml2X509Credential.verification(certificate)) @TO@ ExpressionStatement@@MethodInvocation:verification.add(Saml2X509Credential.verification(certificate)) @AT@ 7918 @LENGTH@ 63
---------------------INS SimpleName@@Name:verification @TO@ MethodInvocation@@verification.add(Saml2X509Credential.verification(certificate)) @AT@ 7918 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:add:[Saml2X509Credential.verification(certificate)] @TO@ MethodInvocation@@verification.add(Saml2X509Credential.verification(certificate)) @AT@ 7931 @LENGTH@ 50
------------------------INS MethodInvocation@@Saml2X509Credential.verification(certificate) @TO@ SimpleName@@MethodName:add:[Saml2X509Credential.verification(certificate)] @AT@ 7935 @LENGTH@ 45
---------------------------INS SimpleName@@Name:Saml2X509Credential @TO@ MethodInvocation@@Saml2X509Credential.verification(certificate) @AT@ 7935 @LENGTH@ 19
---------------------------INS SimpleName@@MethodName:verification:[certificate] @TO@ MethodInvocation@@Saml2X509Credential.verification(certificate) @AT@ 7955 @LENGTH@ 25
------------------------------INS SimpleName@@certificate @TO@ SimpleName@@MethodName:verification:[certificate] @AT@ 7968 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:verification @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getVerification, IDPSSODescriptor idpssoDescriptor,  @AT@ 8000 @LENGTH@ 20
------INS SimpleName@@verification @TO@ ReturnStatement@@SimpleName:verification @AT@ 8007 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2441 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2441 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2448 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(new Object[]{null,photo,image}) @TO@ MethodInvocation:exchange.getMessage().setBody(new Object[]{null,photo,image}) @AT@ 3826 @LENGTH@ 63
---UPD MethodInvocation@@exchange.getOut().setBody(new Object[]{null,photo,image}) @TO@ exchange.getMessage().setBody(new Object[]{null,photo,image}) @AT@ 3826 @LENGTH@ 62
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3826 @LENGTH@ 17


UPD Block@@ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @TO@ ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  }  return null;} @AT@ 4165 @LENGTH@ 190
---UPD IfStatement@@if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} else {  return null;} @TO@ if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} @AT@ 4170 @LENGTH@ 181
------DEL Block@@ElseBody:{  return null;} @AT@ 4328 @LENGTH@ 23
---------DEL ReturnStatement@@NullLiteral:null @AT@ 4334 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 4341 @LENGTH@ 4
---INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @AT@ 4319 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4326 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:cloned.setPoolSize(maxPoolSize) @TO@ MethodInvocation:cloned.setPoolSize(poolSize) @AT@ 7955 @LENGTH@ 32
---UPD MethodInvocation@@cloned.setPoolSize(maxPoolSize) @TO@ cloned.setPoolSize(poolSize) @AT@ 7955 @LENGTH@ 31
------UPD SimpleName@@MethodName:setPoolSize:[maxPoolSize] @TO@ MethodName:setPoolSize:[poolSize] @AT@ 7962 @LENGTH@ 24
---------UPD SimpleName@@maxPoolSize @TO@ poolSize @AT@ 7974 @LENGTH@ 11


UPD VariableDeclarationStatement@@final byte[] codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3); @TO@ final byte[] codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3); @AT@ 4878 @LENGTH@ 89
---UPD VariableDeclarationFragment@@codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3) @TO@ codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3) @AT@ 4891 @LENGTH@ 75
------UPD MethodInvocation@@StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3) @TO@ StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3) @AT@ 4902 @LENGTH@ 64
---------UPD SimpleName@@MethodName:getBytesUtf8:[Base64TestData.CODEC_101_MULTIPLE_OF_3] @TO@ MethodName:getBytesUtf8:[Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3] @AT@ 4914 @LENGTH@ 52
------------UPD QualifiedName@@Base64TestData.CODEC_101_MULTIPLE_OF_3 @TO@ Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3 @AT@ 4927 @LENGTH@ 38
---------------UPD SimpleName@@CODEC_101_MULTIPLE_OF_3 @TO@ CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3 @AT@ 4942 @LENGTH@ 23


DEL FieldDeclaration@@public, static, final, Set<String>, [DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT)))] @AT@ 1834 @LENGTH@ 850
---DEL VariableDeclarationFragment@@DEFAULT_REMOVE_AUTHORIZED_CLIENT_ERROR_CODES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT))) @AT@ 1866 @LENGTH@ 817
------DEL MethodInvocation@@Collections.unmodifiableSet(new HashSet<>(Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT))) @AT@ 1913 @LENGTH@ 770
---------DEL SimpleName@@Name:Collections @AT@ 1913 @LENGTH@ 11
---------DEL SimpleName@@MethodName:unmodifiableSet:[new HashSet<>(Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT))] @AT@ 1929 @LENGTH@ 754
------------DEL ClassInstanceCreation@@HashSet<>[Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT)] @AT@ 1945 @LENGTH@ 737
---------------DEL MethodInvocation@@Arrays.asList(OAuth2ErrorCodes.INVALID_TOKEN,OAuth2ErrorCodes.INVALID_GRANT) @AT@ 1959 @LENGTH@ 722
------------------DEL SimpleName@@MethodName:asList:[OAuth2ErrorCodes.INVALID_TOKEN, OAuth2ErrorCodes.INVALID_GRANT] @AT@ 1966 @LENGTH@ 715


UPD ExpressionStatement@@MethodInvocation:assertEquals(fileCount,AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)) @TO@ MethodInvocation:assertEquals(AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount,String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)) @AT@ 3037 @LENGTH@ 267
---UPD MethodInvocation@@assertEquals(fileCount,AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)) @TO@ assertEquals(AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount,String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)) @AT@ 3037 @LENGTH@ 266
------UPD SimpleName@@MethodName:assertEquals:[fileCount, AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)] @TO@ MethodName:assertEquals:[AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, fileCount, String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)] @AT@ 3037 @LENGTH@ 266
---------DEL SimpleName@@fileCount @AT@ 3050 @LENGTH@ 9
---------INS SimpleName@@fileCount @TO@ SimpleName@@MethodName:assertEquals:[fileCount, AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, String.format("Zip file should contains %d files, got %d files",AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount)] @AT@ 3109 @LENGTH@ 9


UPD TypeDeclaration@@[@TestMethodOrder(MethodOrderer.Alphanumeric.class), public]NettyUdpConnectedSendTest, BaseNettyTest @TO@ [@TestMethodOrder(MethodOrderer.MethodName.class), public]NettyUdpConnectedSendTest, BaseNettyTest @AT@ 1710 @LENGTH@ 3081
---UPD SingleMemberAnnotation@@@TestMethodOrder(MethodOrderer.Alphanumeric.class) @TO@ @TestMethodOrder(MethodOrderer.MethodName.class) @AT@ 1710 @LENGTH@ 50


INS MethodDeclaration@@Mono<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @TO@ TypeDeclaration@@[public]ReactivePersonRepository, [ReactiveNeo4jRepository<PersonWithAllConstructor,Long>] @AT@ 3490 @LENGTH@ 37
---INS ParameterizedType@@Mono<DtoPersonProjection> @TO@ MethodDeclaration@@Mono<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 3464 @LENGTH@ 25
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<DtoPersonProjection> @AT@ 3464 @LENGTH@ 4
------INS SimpleType@@DtoPersonProjection @TO@ ParameterizedType@@Mono<DtoPersonProjection> @AT@ 3469 @LENGTH@ 19
---INS SimpleName@@MethodName:findOneByFirstName @TO@ MethodDeclaration@@Mono<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 3490 @LENGTH@ 18
---INS SingleVariableDeclaration@@String firstName @TO@ MethodDeclaration@@Mono<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 3509 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String firstName @AT@ 3509 @LENGTH@ 6
------INS SimpleName@@firstName @TO@ SingleVariableDeclaration@@String firstName @AT@ 3516 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2095 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2095 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2111 @LENGTH@ 21


INS MethodDeclaration@@void, MethodName:setAdminsThatShouldDeclare, Object... adminArgs,  @TO@ TypeDeclaration@@[public]Declarable,  @AT@ 2014 @LENGTH@ 48
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setAdminsThatShouldDeclare, Object... adminArgs,  @AT@ 2009 @LENGTH@ 4
---INS SimpleName@@MethodName:setAdminsThatShouldDeclare @TO@ MethodDeclaration@@void, MethodName:setAdminsThatShouldDeclare, Object... adminArgs,  @AT@ 2014 @LENGTH@ 26
---INS SingleVariableDeclaration@@Object... adminArgs @TO@ MethodDeclaration@@void, MethodName:setAdminsThatShouldDeclare, Object... adminArgs,  @AT@ 2041 @LENGTH@ 19
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object... adminArgs @AT@ 2041 @LENGTH@ 6
------INS SimpleName@@adminArgs @TO@ SingleVariableDeclaration@@Object... adminArgs @AT@ 2051 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("sjms:queue:start?synchronous=false").choice().when(body().contains("Camel")).to("async:camel?delay=2000").inOut("sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false").to("mock:result").otherwise().to("log:other").to("mock:result") @TO@ MethodInvocation:from("sjms:queue:start?synchronous=false").choice().when(body().contains("Camel")).to("async:camel?delay=2000").to(ExchangePattern.InOut,"sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false").to("mock:result").otherwise().to("log:other").to("mock:result") @AT@ 2720 @LENGTH@ 454
---UPD MethodInvocation@@from("sjms:queue:start?synchronous=false").choice().when(body().contains("Camel")).to("async:camel?delay=2000").inOut("sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false").to("mock:result").otherwise().to("log:other").to("mock:result") @TO@ from("sjms:queue:start?synchronous=false").choice().when(body().contains("Camel")).to("async:camel?delay=2000").to(ExchangePattern.InOut,"sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false").to("mock:result").otherwise().to("log:other").to("mock:result") @AT@ 2720 @LENGTH@ 453
------UPD MethodInvocation@@MethodName:inOut:["sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false"] @TO@ MethodName:to:[ExchangePattern.InOut, "sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false"] @AT@ 2720 @LENGTH@ 289
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["sjms:queue:in.out.test?namedReplyTo=response.queue&synchronous=false"] @AT@ 2976 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2976 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2992 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2712 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2712 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2719 @LENGTH@ 21


INS VariableDeclarationStatement@@boolean needToCloseConn=true; @TO@ MethodDeclaration@@public, LockHandle, MethodName:acquireLock, String key, MetaException,  @AT@ 235151 @LENGTH@ 31
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean needToCloseConn=true; @AT@ 235151 @LENGTH@ 7
---INS VariableDeclarationFragment@@needToCloseConn=true @TO@ VariableDeclarationStatement@@boolean needToCloseConn=true; @AT@ 235159 @LENGTH@ 22
------INS SimpleName@@needToCloseConn @TO@ VariableDeclarationFragment@@needToCloseConn=true @AT@ 235159 @LENGTH@ 15
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@needToCloseConn=true @AT@ 235177 @LENGTH@ 4


MOV IfStatement@@if (StringUtils.hasText(contentType)) {  uploadBuilder.contentType(contentType);} @TO@ MethodDeclaration@@default, Mono<ObjectId>, MethodName:store, Publisher<DataBuffer> content, @Nullable String filename, @Nullable String contentType, @Nullable Document metadata,  @AT@ 6074 @LENGTH@ 86


UPD VariableDeclarationStatement@@CxfPayload<?> cxfPayload=exchange.getOut().getBody(CxfPayload.class); @TO@ CxfPayload<?> cxfPayload=exchange.getMessage().getBody(CxfPayload.class); @AT@ 14158 @LENGTH@ 71
---UPD VariableDeclarationFragment@@cxfPayload=exchange.getOut().getBody(CxfPayload.class) @TO@ cxfPayload=exchange.getMessage().getBody(CxfPayload.class) @AT@ 14172 @LENGTH@ 56
------UPD MethodInvocation@@exchange.getOut().getBody(CxfPayload.class) @TO@ exchange.getMessage().getBody(CxfPayload.class) @AT@ 14185 @LENGTH@ 43
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 14185 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(message.getBody(),"Message3","The message body is wrong") @TO@ MethodInvocation:assertEquals("Message3",message.getBody(),"The message body is wrong") @AT@ 3577 @LENGTH@ 73
---UPD MethodInvocation@@assertEquals(message.getBody(),"Message3","The message body is wrong") @TO@ assertEquals("Message3",message.getBody(),"The message body is wrong") @AT@ 3577 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertEquals:[message.getBody(), "Message3", "The message body is wrong"] @TO@ MethodName:assertEquals:["Message3", message.getBody(), "The message body is wrong"] @AT@ 3577 @LENGTH@ 72
---------INS StringLiteral@@"Message3" @TO@ SimpleName@@MethodName:assertEquals:[message.getBody(), "Message3", "The message body is wrong"] @AT@ 3590 @LENGTH@ 10
---------DEL StringLiteral@@"Message3" @AT@ 3609 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(result,"echo hello world","we should get the right answer from router") @TO@ MethodInvocation:assertEquals("echo hello world",result,"we should get the right answer from router") @AT@ 3911 @LENGTH@ 87
---UPD MethodInvocation@@assertEquals(result,"echo hello world","we should get the right answer from router") @TO@ assertEquals("echo hello world",result,"we should get the right answer from router") @AT@ 3911 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertEquals:[result, "echo hello world", "we should get the right answer from router"] @TO@ MethodName:assertEquals:["echo hello world", result, "we should get the right answer from router"] @AT@ 3911 @LENGTH@ 86
---------INS StringLiteral@@"echo hello world" @TO@ SimpleName@@MethodName:assertEquals:[result, "echo hello world", "we should get the right answer from router"] @AT@ 3924 @LENGTH@ 18
---------DEL StringLiteral@@"echo hello world" @AT@ 3932 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2433 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2433 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2449 @LENGTH@ 21


DEL MethodDeclaration@@public, String, MethodName:getAmazonHost,  @AT@ 1270 @LENGTH@ 181
---DEL Modifier@@public @AT@ 1270 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1277 @LENGTH@ 6
---DEL SimpleName@@MethodName:getAmazonHost @AT@ 1284 @LENGTH@ 13
---DEL VariableDeclarationStatement@@final int kinesisPort=4568; @AT@ 1310 @LENGTH@ 29
------DEL Modifier@@final @AT@ 1310 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 1316 @LENGTH@ 3
------DEL VariableDeclarationFragment@@kinesisPort=4568 @AT@ 1320 @LENGTH@ 18
---------DEL SimpleName@@kinesisPort @AT@ 1320 @LENGTH@ 11
---------DEL NumberLiteral@@4568 @AT@ 1334 @LENGTH@ 4
---DEL ReturnStatement@@InfixExpression:getContainer().getContainerIpAddress() + ":" + getContainer().getMappedPort(kinesisPort) @AT@ 1349 @LENGTH@ 96
------DEL InfixExpression@@getContainer().getContainerIpAddress() + ":" + getContainer().getMappedPort(kinesisPort) @AT@ 1356 @LENGTH@ 88
---------DEL MethodInvocation@@getContainer().getContainerIpAddress() @AT@ 1356 @LENGTH@ 38
------------DEL MethodInvocation@@MethodName:getContainer:[] @AT@ 1356 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getContainerIpAddress:[] @AT@ 1371 @LENGTH@ 23
---------DEL Operator@@+ @AT@ 1394 @LENGTH@ 1
---------DEL StringLiteral@@":" @AT@ 1397 @LENGTH@ 3
---------DEL MethodInvocation@@getContainer().getMappedPort(kinesisPort) @AT@ 1403 @LENGTH@ 41
------------DEL MethodInvocation@@MethodName:getContainer:[] @AT@ 1403 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getMappedPort:[kinesisPort] @AT@ 1418 @LENGTH@ 26
---------------DEL SimpleName@@kinesisPort @AT@ 1432 @LENGTH@ 11


DEL IfStatement@@if (isAuthenticated) {  throw new IllegalArgumentException("Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead");} @AT@ 2832 @LENGTH@ 169
---DEL SimpleName@@isAuthenticated @AT@ 2836 @LENGTH@ 15
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead");} @AT@ 2853 @LENGTH@ 148
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead") @AT@ 2858 @LENGTH@ 139
---------DEL ClassInstanceCreation@@IllegalArgumentException["Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"] @AT@ 2864 @LENGTH@ 132
------------DEL New@@new @AT@ 2864 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 2868 @LENGTH@ 24
------------DEL StringLiteral@@"Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead" @AT@ 2899 @LENGTH@ 96


UPD IfStatement@@if (FilenameUtils.wildcardMatch(file.getFileName().toString(),wildcard)) {  return FileVisitResult.CONTINUE;} @TO@ if (FilenameUtils.wildcardMatch(Objects.toString(file.getFileName(),null),wildcard)) {  return FileVisitResult.CONTINUE;} @AT@ 5561 @LENGTH@ 138
---UPD MethodInvocation@@FilenameUtils.wildcardMatch(file.getFileName().toString(),wildcard) @TO@ FilenameUtils.wildcardMatch(Objects.toString(file.getFileName(),null),wildcard) @AT@ 5565 @LENGTH@ 68
------UPD SimpleName@@MethodName:wildcardMatch:[file.getFileName().toString(), wildcard] @TO@ MethodName:wildcardMatch:[Objects.toString(file.getFileName(),null), wildcard] @AT@ 5579 @LENGTH@ 54
---------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 5593 @LENGTH@ 29
---------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:wildcardMatch:[file.getFileName().toString(), wildcard] @AT@ 5619 @LENGTH@ 42
------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 5619 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 5627 @LENGTH@ 34
---------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 5593 @LENGTH@ 29
------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 5593 @LENGTH@ 18
------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 5612 @LENGTH@ 10
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 5656 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("jms:queue:foo?recoveryInterval=" + recoveryInterval).to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"jms:queue:foo?recoveryInterval=" + recoveryInterval).to("mock:result") @AT@ 2177 @LENGTH@ 149
---UPD MethodInvocation@@from("direct:start").inOut("jms:queue:foo?recoveryInterval=" + recoveryInterval).to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"jms:queue:foo?recoveryInterval=" + recoveryInterval).to("mock:result") @AT@ 2177 @LENGTH@ 148
------UPD MethodInvocation@@MethodName:inOut:["jms:queue:foo?recoveryInterval=" + recoveryInterval] @TO@ MethodName:to:[ExchangePattern.InOut, "jms:queue:foo?recoveryInterval=" + recoveryInterval] @AT@ 2177 @LENGTH@ 105
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["jms:queue:foo?recoveryInterval=" + recoveryInterval] @AT@ 2267 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2267 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2283 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:chain.filter(exchange).subscriberContext((c) -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @TO@ MethodInvocation:chain.filter(exchange).subscriberContext((context) -> context.hasKey(SecurityContext.class) ? context : withSecurityContext(context,exchange)) @AT@ 1682 @LENGTH@ 132
---UPD MethodInvocation@@chain.filter(exchange).subscriberContext((c) -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)) @TO@ chain.filter(exchange).subscriberContext((context) -> context.hasKey(SecurityContext.class) ? context : withSecurityContext(context,exchange)) @AT@ 1689 @LENGTH@ 124
------UPD SimpleName@@MethodName:subscriberContext:[(c) -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange)] @TO@ MethodName:subscriberContext:[(context) -> context.hasKey(SecurityContext.class) ? context : withSecurityContext(context,exchange)] @AT@ 1717 @LENGTH@ 96
---------UPD LambdaExpression@@(c) -> c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @TO@ (context) -> context.hasKey(SecurityContext.class) ? context : withSecurityContext(context,exchange) @AT@ 1735 @LENGTH@ 77
------------UPD VariableDeclarationFragment@@c @TO@ context @AT@ 1736 @LENGTH@ 1
---------------UPD SimpleName@@c @TO@ context @AT@ 1736 @LENGTH@ 1
------------UPD ConditionalExpression@@c.hasKey(SecurityContext.class) ? c : withSecurityContext(c,exchange) @TO@ context.hasKey(SecurityContext.class) ? context : withSecurityContext(context,exchange) @AT@ 1742 @LENGTH@ 70
---------------UPD MethodInvocation@@c.hasKey(SecurityContext.class) @TO@ context.hasKey(SecurityContext.class) @AT@ 1742 @LENGTH@ 31
------------------UPD SimpleName@@Name:c @TO@ Name:context @AT@ 1742 @LENGTH@ 1
---------------UPD SimpleName@@c @TO@ context @AT@ 1776 @LENGTH@ 1
---------------UPD MethodInvocation@@withSecurityContext(c,exchange) @TO@ withSecurityContext(context,exchange) @AT@ 1780 @LENGTH@ 32
------------------UPD SimpleName@@MethodName:withSecurityContext:[c, exchange] @TO@ MethodName:withSecurityContext:[context, exchange] @AT@ 1780 @LENGTH@ 32
---------------------UPD SimpleName@@c @TO@ context @AT@ 1800 @LENGTH@ 1


MOV MethodDeclaration@@private, voidMethodName:JwtDecoders,  @TO@ TypeDeclaration@@[public, final]JwtDecoders,  @AT@ 5175 @LENGTH@ 26


UPD EnhancedForStatement@@for (Cookie cookie : cookiesToClear) {  Assert.isTrue(cookie.getMaxAge() == 0,"Cookie maxAge must be 0");  Function<HttpServletRequest,Cookie> f=(request) -> cookie;  cookieList.add(f);} @TO@ for (Cookie cookie : cookiesToClear) {  Assert.isTrue(cookie.getMaxAge() == 0,"Cookie maxAge must be 0");  cookieList.add((request) -> cookie);} @AT@ 2303 @LENGTH@ 199
---DEL VariableDeclarationStatement@@Function<HttpServletRequest,Cookie> f=(request) -> cookie; @AT@ 2415 @LENGTH@ 61
------DEL ParameterizedType@@Function<HttpServletRequest,Cookie> @AT@ 2415 @LENGTH@ 36
---------DEL SimpleType@@Function @AT@ 2415 @LENGTH@ 8
---------DEL SimpleType@@HttpServletRequest @AT@ 2424 @LENGTH@ 18
---------DEL SimpleType@@Cookie @AT@ 2444 @LENGTH@ 6
------DEL VariableDeclarationFragment@@f=(request) -> cookie @AT@ 2452 @LENGTH@ 23
---------DEL SimpleName@@f @AT@ 2452 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:cookieList.add(f) @TO@ MethodInvocation:cookieList.add((request) -> cookie) @AT@ 2480 @LENGTH@ 18
------UPD MethodInvocation@@cookieList.add(f) @TO@ cookieList.add((request) -> cookie) @AT@ 2480 @LENGTH@ 17
---------UPD SimpleName@@MethodName:add:[f] @TO@ MethodName:add:[(request) -> cookie] @AT@ 2491 @LENGTH@ 6
------------MOV LambdaExpression@@(request) -> cookie @TO@ SimpleName@@MethodName:add:[f] @AT@ 2456 @LENGTH@ 19
------------DEL SimpleName@@f @AT@ 2495 @LENGTH@ 1


UPD MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ public, boolean, MethodName:equals, Object obj,  @AT@ 1881 @LENGTH@ 383
---UPD SingleVariableDeclaration@@Object o @TO@ Object obj @AT@ 1903 @LENGTH@ 8
------UPD SimpleName@@o @TO@ obj @AT@ 1910 @LENGTH@ 1
---UPD IfStatement@@if (this == o) {  return true;} @TO@ if (this == obj) {  return true;} @AT@ 1917 @LENGTH@ 36
------UPD InfixExpression@@this == o @TO@ this == obj @AT@ 1921 @LENGTH@ 9
---------UPD SimpleName@@o @TO@ obj @AT@ 1929 @LENGTH@ 1
---UPD IfStatement@@if (o == null || !(o instanceof CsrfToken)) {  return false;} @TO@ if (obj == null || !(obj instanceof CsrfToken)) {  return false;} @AT@ 1956 @LENGTH@ 66
------UPD InfixExpression@@o == null || !(o instanceof CsrfToken) @TO@ obj == null || !(obj instanceof CsrfToken) @AT@ 1960 @LENGTH@ 38
---------UPD InfixExpression@@o == null @TO@ obj == null @AT@ 1960 @LENGTH@ 9
------------UPD SimpleName@@o @TO@ obj @AT@ 1960 @LENGTH@ 1
---------UPD PrefixExpression@@!(o instanceof CsrfToken) @TO@ !(obj instanceof CsrfToken) @AT@ 1973 @LENGTH@ 25
------------UPD ParenthesizedExpression@@(o instanceof CsrfToken) @TO@ (obj instanceof CsrfToken) @AT@ 1974 @LENGTH@ 24
---------------UPD InstanceofExpression@@o instanceof CsrfToken @TO@ obj instanceof CsrfToken @AT@ 1975 @LENGTH@ 22
------------------UPD SimpleName@@o @TO@ obj @AT@ 1975 @LENGTH@ 1
---UPD VariableDeclarationStatement@@CsrfToken that=(CsrfToken)o; @TO@ CsrfToken other=(CsrfToken)obj; @AT@ 2026 @LENGTH@ 31
------UPD VariableDeclarationFragment@@that=(CsrfToken)o @TO@ other=(CsrfToken)obj @AT@ 2036 @LENGTH@ 20
---------UPD SimpleName@@that @TO@ other @AT@ 2036 @LENGTH@ 4
---------UPD CastExpression@@(CsrfToken)o @TO@ (CsrfToken)obj @AT@ 2043 @LENGTH@ 13
------------UPD SimpleName@@o @TO@ obj @AT@ 2055 @LENGTH@ 1
---UPD IfStatement@@if (!getToken().equals(that.getToken())) {  return false;} @TO@ if (!getToken().equals(other.getToken())) {  return false;} @AT@ 2061 @LENGTH@ 63
------UPD PrefixExpression@@!getToken().equals(that.getToken()) @TO@ !getToken().equals(other.getToken()) @AT@ 2065 @LENGTH@ 35
---------UPD MethodInvocation@@getToken().equals(that.getToken()) @TO@ getToken().equals(other.getToken()) @AT@ 2066 @LENGTH@ 34
------------UPD SimpleName@@MethodName:equals:[that.getToken()] @TO@ MethodName:equals:[other.getToken()] @AT@ 2077 @LENGTH@ 23
---------------UPD MethodInvocation@@that.getToken() @TO@ other.getToken() @AT@ 2084 @LENGTH@ 15
------------------UPD SimpleName@@Name:that @TO@ Name:other @AT@ 2084 @LENGTH@ 4
---UPD IfStatement@@if (!getParameterName().equals(that.getParameterName())) {  return false;} @TO@ if (!getParameterName().equals(other.getParameterName())) {  return false;} @AT@ 2127 @LENGTH@ 79
------UPD PrefixExpression@@!getParameterName().equals(that.getParameterName()) @TO@ !getParameterName().equals(other.getParameterName()) @AT@ 2131 @LENGTH@ 51
---------UPD MethodInvocation@@getParameterName().equals(that.getParameterName()) @TO@ getParameterName().equals(other.getParameterName()) @AT@ 2132 @LENGTH@ 50
------------UPD SimpleName@@MethodName:equals:[that.getParameterName()] @TO@ MethodName:equals:[other.getParameterName()] @AT@ 2151 @LENGTH@ 31
---------------UPD MethodInvocation@@that.getParameterName() @TO@ other.getParameterName() @AT@ 2158 @LENGTH@ 23
------------------UPD SimpleName@@Name:that @TO@ Name:other @AT@ 2158 @LENGTH@ 4
---UPD ReturnStatement@@MethodInvocation:getHeaderName().equals(that.getHeaderName()) @TO@ MethodInvocation:getHeaderName().equals(other.getHeaderName()) @AT@ 2209 @LENGTH@ 52
------UPD MethodInvocation@@getHeaderName().equals(that.getHeaderName()) @TO@ getHeaderName().equals(other.getHeaderName()) @AT@ 2216 @LENGTH@ 44
---------UPD SimpleName@@MethodName:equals:[that.getHeaderName()] @TO@ MethodName:equals:[other.getHeaderName()] @AT@ 2232 @LENGTH@ 28
------------UPD MethodInvocation@@that.getHeaderName() @TO@ other.getHeaderName() @AT@ 2239 @LENGTH@ 20
---------------UPD SimpleName@@Name:that @TO@ Name:other @AT@ 2239 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ MethodInvocation:assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2765 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2765 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @TO@ MethodName:assertEquals:[false, exchange.isFailed(), "The request should be handled sucessfully"] @AT@ 2765 @LENGTH@ 85
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @AT@ 2778 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 2799 @LENGTH@ 5


UPD IfStatement@@if (beans.size() == 0) {  throw new ApplicationContextException("No UserDetailsService registered.");} else if (beans.size() > 1) {  throw new ApplicationContextException("More than one UserDetailsService registered. Please " + "use a specific Id reference in <remember-me/> <openid-login/> or <x509 /> elements.");} @TO@ if (beans.size() == 0) {  throw new ApplicationContextException("No UserDetailsService registered.");} @AT@ 4070 @LENGTH@ 334
---DEL Block@@ElseBody:if (beans.size() > 1) {  throw new ApplicationContextException("More than one UserDetailsService registered. Please " + "use a specific Id reference in <remember-me/> <openid-login/> or <x509 /> elements.");} @AT@ 4186 @LENGTH@ 218


UPD Block@@ElseBody:{  String reply=getEndpoint().getReply();  exchange.getOut().setBody(reply);  exchange.getOut().setHeaders(exchange.getIn().getHeaders());  LOG.info("Setting reply " + reply);} @TO@ ElseBody:{  String reply=getEndpoint().getReply();  exchange.getMessage().setBody(reply);  exchange.getMessage().setHeaders(exchange.getIn().getHeaders());  LOG.info("Setting reply " + reply);} @AT@ 2381 @LENGTH@ 288
---UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(reply) @TO@ MethodInvocation:exchange.getMessage().setBody(reply) @AT@ 2456 @LENGTH@ 33
------UPD MethodInvocation@@exchange.getOut().setBody(reply) @TO@ exchange.getMessage().setBody(reply) @AT@ 2456 @LENGTH@ 32
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2456 @LENGTH@ 17
---UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ MethodInvocation:exchange.getMessage().setHeaders(exchange.getIn().getHeaders()) @AT@ 2543 @LENGTH@ 60
------UPD MethodInvocation@@exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ exchange.getMessage().setHeaders(exchange.getIn().getHeaders()) @AT@ 2543 @LENGTH@ 59
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2543 @LENGTH@ 17


MOV MethodDeclaration@@public, Mono<Void>, MethodName:deleteAll, Iterable<? extends T> entities,  @TO@ TypeDeclaration@@[@Repository, @Transactional(readOnly=true), @API(status=API.Status.STABLE,since="6.0"), public]SimpleReactiveNeo4jRepository, [ReactiveSortingRepository<T,ID>] @AT@ 6253 @LENGTH@ 373


MOV ReturnStatement@@MethodInvocation:Mono.empty() @TO@ MethodDeclaration@@public, Mono<Void>, MethodName:writeHttpHeaders, ServerWebExchange exchange,  @AT@ 2039 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:Mono.justOrEmpty(cookieMap.getFirst(REDIRECT_URI_COOKIE_NAME)).map(HttpCookie::getValue).map(CookieServerRequestCache::decodeCookie).onErrorResume(IllegalArgumentException.class,(e) -> Mono.empty()).map(URI::create) @TO@ MethodInvocation:Mono.justOrEmpty(cookieMap.getFirst(REDIRECT_URI_COOKIE_NAME)).map(HttpCookie::getValue).map(CookieServerRequestCache::decodeCookie).onErrorResume(IllegalArgumentException.class,(ex) -> Mono.empty()).map(URI::create) @AT@ 3531 @LENGTH@ 234
---UPD MethodInvocation@@Mono.justOrEmpty(cookieMap.getFirst(REDIRECT_URI_COOKIE_NAME)).map(HttpCookie::getValue).map(CookieServerRequestCache::decodeCookie).onErrorResume(IllegalArgumentException.class,(e) -> Mono.empty()).map(URI::create) @TO@ Mono.justOrEmpty(cookieMap.getFirst(REDIRECT_URI_COOKIE_NAME)).map(HttpCookie::getValue).map(CookieServerRequestCache::decodeCookie).onErrorResume(IllegalArgumentException.class,(ex) -> Mono.empty()).map(URI::create) @AT@ 3538 @LENGTH@ 226
------UPD MethodInvocation@@MethodName:onErrorResume:[IllegalArgumentException.class, (e) -> Mono.empty()] @TO@ MethodName:onErrorResume:[IllegalArgumentException.class, (ex) -> Mono.empty()] @AT@ 3538 @LENGTH@ 209
---------UPD LambdaExpression@@(e) -> Mono.empty() @TO@ (ex) -> Mono.empty() @AT@ 3727 @LENGTH@ 19
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 3728 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 3728 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:rsDesc=PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation) @TO@ Assignment:rsDesc=PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation,false) @AT@ 8284 @LENGTH@ 206
---UPD Assignment@@rsDesc=PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation) @TO@ rsDesc=PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation,false) @AT@ 8284 @LENGTH@ 205
------UPD MethodInvocation@@PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation) @TO@ PlanUtils.getReduceSinkDesc(reduceKeys,reduceValues,outputColumnNames,false,tag,partitionCols,order,nullOrder,NullOrdering.defaultNullOrder(hiveConf),numReducers,acidOperation,false) @AT@ 8293 @LENGTH@ 196
---------UPD SimpleName@@MethodName:getReduceSinkDesc:[reduceKeys, reduceValues, outputColumnNames, false, tag, partitionCols, order, nullOrder, NullOrdering.defaultNullOrder(hiveConf), numReducers, acidOperation] @TO@ MethodName:getReduceSinkDesc:[reduceKeys, reduceValues, outputColumnNames, false, tag, partitionCols, order, nullOrder, NullOrdering.defaultNullOrder(hiveConf), numReducers, acidOperation, false] @AT@ 8303 @LENGTH@ 186
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getReduceSinkDesc:[reduceKeys, reduceValues, outputColumnNames, false, tag, partitionCols, order, nullOrder, NullOrdering.defaultNullOrder(hiveConf), numReducers, acidOperation] @AT@ 8490 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertNull(out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2130 @LENGTH@ 35
---UPD MethodInvocation@@assertNull(out.getOut().getBody()) @TO@ assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2130 @LENGTH@ 34
------UPD SimpleName@@MethodName:assertNull:[out.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody()] @AT@ 2130 @LENGTH@ 34
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 2141 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2141 @LENGTH@ 12
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertNull:[out.getOut().getBody()] @AT@ 2149 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(endpoint.getQueueUrl(),QUEUE_URL) @TO@ MethodInvocation:assertEquals(QUEUE_URL,endpoint.getQueueUrl()) @AT@ 1854 @LENGTH@ 48
---UPD MethodInvocation@@assertEquals(endpoint.getQueueUrl(),QUEUE_URL) @TO@ assertEquals(QUEUE_URL,endpoint.getQueueUrl()) @AT@ 1854 @LENGTH@ 47
------UPD SimpleName@@MethodName:assertEquals:[endpoint.getQueueUrl(), QUEUE_URL] @TO@ MethodName:assertEquals:[QUEUE_URL, endpoint.getQueueUrl()] @AT@ 1854 @LENGTH@ 47
---------INS SimpleName@@QUEUE_URL @TO@ SimpleName@@MethodName:assertEquals:[endpoint.getQueueUrl(), QUEUE_URL] @AT@ 1867 @LENGTH@ 9
---------DEL SimpleName@@QUEUE_URL @AT@ 1891 @LENGTH@ 9


DEL IfStatement@@if (!queryParams.isEmpty()) {  HashMap<String,String[]> parameters=new HashMap<>(queryParams.size());  queryParams.forEach((key,value) -> parameters.put(key,value.toArray(new String[]{})));  builder.setParameters(parameters);} @AT@ 3047 @LENGTH@ 241
---DEL PrefixExpression@@!queryParams.isEmpty() @AT@ 3051 @LENGTH@ 22
------DEL Operator@@! @AT@ 3051 @LENGTH@ 1
------DEL MethodInvocation@@queryParams.isEmpty() @AT@ 3052 @LENGTH@ 21
---------DEL SimpleName@@Name:queryParams @AT@ 3052 @LENGTH@ 11
---------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 3064 @LENGTH@ 9
---DEL Block@@ThenBody:{  HashMap<String,String[]> parameters=new HashMap<>(queryParams.size());  queryParams.forEach((key,value) -> parameters.put(key,value.toArray(new String[]{})));  builder.setParameters(parameters);} @AT@ 3075 @LENGTH@ 213
------DEL VariableDeclarationStatement@@HashMap<String,String[]> parameters=new HashMap<>(queryParams.size()); @AT@ 3080 @LENGTH@ 73
---------DEL ParameterizedType@@HashMap<String,String[]> @AT@ 3080 @LENGTH@ 25
------------DEL SimpleType@@HashMap @AT@ 3080 @LENGTH@ 7
------------DEL SimpleType@@String @AT@ 3088 @LENGTH@ 6
------------DEL ArrayType@@String[] @AT@ 3096 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 3096 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@parameters=new HashMap<>(queryParams.size()) @AT@ 3106 @LENGTH@ 46
------------DEL SimpleName@@parameters @AT@ 3106 @LENGTH@ 10
------------DEL ClassInstanceCreation@@HashMap<>[queryParams.size()] @AT@ 3119 @LENGTH@ 33
---------------DEL New@@new @AT@ 3119 @LENGTH@ 3
---------------DEL ParameterizedType@@HashMap<> @AT@ 3123 @LENGTH@ 9
------------------DEL SimpleType@@HashMap @AT@ 3123 @LENGTH@ 7
---------------DEL MethodInvocation@@queryParams.size() @AT@ 3133 @LENGTH@ 18
------------------DEL SimpleName@@Name:queryParams @AT@ 3133 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:size:[] @AT@ 3145 @LENGTH@ 6
------DEL ExpressionStatement@@MethodInvocation:queryParams.forEach((key,value) -> parameters.put(key,value.toArray(new String[]{}))) @AT@ 3157 @LENGTH@ 89
---------DEL MethodInvocation@@queryParams.forEach((key,value) -> parameters.put(key,value.toArray(new String[]{}))) @AT@ 3157 @LENGTH@ 88
------------DEL SimpleName@@Name:queryParams @AT@ 3157 @LENGTH@ 11
------------DEL SimpleName@@MethodName:forEach:[(key,value) -> parameters.put(key,value.toArray(new String[]{}))] @AT@ 3169 @LENGTH@ 76
---------------DEL LambdaExpression@@(key,value) -> parameters.put(key,value.toArray(new String[]{})) @AT@ 3177 @LENGTH@ 67
------------------DEL VariableDeclarationFragment@@key @AT@ 3178 @LENGTH@ 3
---------------------DEL SimpleName@@key @AT@ 3178 @LENGTH@ 3
------------------DEL VariableDeclarationFragment@@value @AT@ 3183 @LENGTH@ 5
---------------------DEL SimpleName@@value @AT@ 3183 @LENGTH@ 5
------------------DEL MethodInvocation@@parameters.put(key,value.toArray(new String[]{})) @AT@ 3193 @LENGTH@ 51
---------------------DEL SimpleName@@Name:parameters @AT@ 3193 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:put:[key, value.toArray(new String[]{})] @AT@ 3204 @LENGTH@ 40
------------------------DEL SimpleName@@key @AT@ 3208 @LENGTH@ 3
------------------------DEL MethodInvocation@@value.toArray(new String[]{}) @AT@ 3213 @LENGTH@ 30
---------------------------DEL SimpleName@@Name:value @AT@ 3213 @LENGTH@ 5
---------------------------DEL SimpleName@@MethodName:toArray:[new String[]{}] @AT@ 3219 @LENGTH@ 24
------------------------------DEL ArrayCreation@@new String[]{} @AT@ 3227 @LENGTH@ 15
---------------------------------DEL ArrayType@@String[] @AT@ 3231 @LENGTH@ 8
------------------------------------DEL SimpleType@@String @AT@ 3231 @LENGTH@ 6
---------------------------------DEL ArrayInitializer@@{} @AT@ 3240 @LENGTH@ 2
------DEL ExpressionStatement@@MethodInvocation:builder.setParameters(parameters) @AT@ 3250 @LENGTH@ 34
---------DEL MethodInvocation@@builder.setParameters(parameters) @AT@ 3250 @LENGTH@ 33
------------DEL SimpleName@@Name:builder @AT@ 3250 @LENGTH@ 7
------------DEL SimpleName@@MethodName:setParameters:[parameters] @AT@ 3258 @LENGTH@ 25
---------------DEL SimpleName@@parameters @AT@ 3272 @LENGTH@ 10


INS MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @TO@ TypeDeclaration@@[public]OidcAuthorizationCodeReactiveAuthenticationManager, [ReactiveAuthenticationManager] @AT@ 12006 @LENGTH@ 305
---MOV TryStatement@@try {  nonceHash=createHash(requestNonce);} catch (NoSuchAlgorithmException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 11673 @LENGTH@ 253
------DEL ExpressionStatement@@Assignment:nonceHash=createHash(requestNonce) @AT@ 11683 @LENGTH@ 37
---------DEL Assignment@@nonceHash=createHash(requestNonce) @AT@ 11683 @LENGTH@ 36
------------DEL SimpleName@@nonceHash @AT@ 11683 @LENGTH@ 9
------------DEL Operator@@= @AT@ 11692 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:createHash(requestNonce) @TO@ TryStatement@@try {  nonceHash=createHash(requestNonce);} catch (NoSuchAlgorithmException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 12075 @LENGTH@ 32
---------MOV MethodInvocation@@createHash(requestNonce) @TO@ ReturnStatement@@MethodInvocation:createHash(requestNonce) @AT@ 11695 @LENGTH@ 24
---------MOV MethodInvocation@@createHash(requestNonce) @TO@ ReturnStatement@@MethodInvocation:createHash(requestNonce) @AT@ 11695 @LENGTH@ 24
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 12006 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 12014 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 12021 @LENGTH@ 6
---INS SimpleName@@MethodName:getNonceHash @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 12028 @LENGTH@ 12
---INS SingleVariableDeclaration@@String requestNonce @TO@ MethodDeclaration@@private, static, String, MethodName:getNonceHash, String requestNonce,  @AT@ 12041 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String requestNonce @AT@ 12041 @LENGTH@ 6
------INS SimpleName@@requestNonce @TO@ SingleVariableDeclaration@@String requestNonce @AT@ 12048 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:request.addParameter(TokenBasedRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ MethodInvocation:request.addParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 11577 @LENGTH@ 77
---UPD MethodInvocation@@request.addParameter(TokenBasedRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ request.addParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 11577 @LENGTH@ 76
------UPD SimpleName@@MethodName:addParameter:[TokenBasedRememberMeServices.DEFAULT_PARAMETER, "true"] @TO@ MethodName:addParameter:[AbstractRememberMeServices.DEFAULT_PARAMETER, "true"] @AT@ 11585 @LENGTH@ 68
---------UPD QualifiedName@@TokenBasedRememberMeServices.DEFAULT_PARAMETER @TO@ AbstractRememberMeServices.DEFAULT_PARAMETER @AT@ 11598 @LENGTH@ 46
------------UPD SimpleName@@TokenBasedRememberMeServices @TO@ AbstractRememberMeServices @AT@ 11598 @LENGTH@ 28


UPD LambdaExpression@@(ud) -> {
  PreAuthenticatedAuthenticationToken result=new PreAuthenticatedAuthenticationToken(ud,authentication.getCredentials(),ud.getAuthorities());
  result.setDetails(authentication.getDetails());
  return result;
}
 @TO@ (userDetails) -> {
  PreAuthenticatedAuthenticationToken result=new PreAuthenticatedAuthenticationToken(userDetails,authentication.getCredentials(),userDetails.getAuthorities());
  result.setDetails(authentication.getDetails());
  return result;
}
 @AT@ 2814 @LENGTH@ 245
---UPD VariableDeclarationFragment@@ud @TO@ userDetails @AT@ 2815 @LENGTH@ 2
------UPD SimpleName@@ud @TO@ userDetails @AT@ 2815 @LENGTH@ 2
---UPD VariableDeclarationStatement@@PreAuthenticatedAuthenticationToken result=new PreAuthenticatedAuthenticationToken(ud,authentication.getCredentials(),ud.getAuthorities()); @TO@ PreAuthenticatedAuthenticationToken result=new PreAuthenticatedAuthenticationToken(userDetails,authentication.getCredentials(),userDetails.getAuthorities()); @AT@ 2829 @LENGTH@ 150
------UPD VariableDeclarationFragment@@result=new PreAuthenticatedAuthenticationToken(ud,authentication.getCredentials(),ud.getAuthorities()) @TO@ result=new PreAuthenticatedAuthenticationToken(userDetails,authentication.getCredentials(),userDetails.getAuthorities()) @AT@ 2865 @LENGTH@ 113
---------UPD ClassInstanceCreation@@PreAuthenticatedAuthenticationToken[ud, authentication.getCredentials(), ud.getAuthorities()] @TO@ PreAuthenticatedAuthenticationToken[userDetails, authentication.getCredentials(), userDetails.getAuthorities()] @AT@ 2874 @LENGTH@ 104
------------UPD SimpleName@@ud @TO@ userDetails @AT@ 2914 @LENGTH@ 2
------------UPD MethodInvocation@@ud.getAuthorities() @TO@ userDetails.getAuthorities() @AT@ 2958 @LENGTH@ 19
---------------UPD SimpleName@@Name:ud @TO@ Name:userDetails @AT@ 2958 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2041 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2041 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2057 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("direct:b").multicast().timeout(500l).parallelProcessing().to("direct:y") @TO@ MethodInvocation:from("direct:b").multicast().timeout(500L).parallelProcessing().to("direct:y") @AT@ 5685 @LENGTH@ 79
---UPD MethodInvocation@@from("direct:b").multicast().timeout(500l).parallelProcessing().to("direct:y") @TO@ from("direct:b").multicast().timeout(500L).parallelProcessing().to("direct:y") @AT@ 5685 @LENGTH@ 78
------UPD MethodInvocation@@MethodName:timeout:[500l] @TO@ MethodName:timeout:[500L] @AT@ 5685 @LENGTH@ 42
---------UPD NumberLiteral@@500l @TO@ 500L @AT@ 5722 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2190 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2190 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2206 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2664 @LENGTH@ 507
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2676 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @TO@ MethodInvocation:assertEquals(Integer.valueOf(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @AT@ 2292 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals(new Integer(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @TO@ assertEquals(Integer.valueOf(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @AT@ 2292 @LENGTH@ 105
------UPD SimpleName@@MethodName:assertEquals:[new Integer(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @TO@ MethodName:assertEquals:[Integer.valueOf(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @AT@ 2292 @LENGTH@ 105
---------INS MethodInvocation@@Integer.valueOf(4) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @AT@ 2305 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(4) @AT@ 2305 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[4] @TO@ MethodInvocation@@Integer.valueOf(4) @AT@ 2313 @LENGTH@ 10
---------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:valueOf:[4] @AT@ 2321 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[4] @AT@ 2305 @LENGTH@ 14
------------DEL New@@new @AT@ 2305 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2309 @LENGTH@ 7
------------DEL NumberLiteral@@4 @AT@ 2317 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:verify(map).putIfAbsent("4711","replaced",new Long(1),TimeUnit.MINUTES) @TO@ MethodInvocation:verify(map).putIfAbsent("4711","replaced",Long.valueOf(1),TimeUnit.MINUTES) @AT@ 4968 @LENGTH@ 75
---UPD MethodInvocation@@verify(map).putIfAbsent("4711","replaced",new Long(1),TimeUnit.MINUTES) @TO@ verify(map).putIfAbsent("4711","replaced",Long.valueOf(1),TimeUnit.MINUTES) @AT@ 4968 @LENGTH@ 74
------UPD SimpleName@@MethodName:putIfAbsent:["4711", "replaced", new Long(1), TimeUnit.MINUTES] @TO@ MethodName:putIfAbsent:["4711", "replaced", Long.valueOf(1), TimeUnit.MINUTES] @AT@ 4980 @LENGTH@ 62
---------DEL ClassInstanceCreation@@Long[1] @AT@ 5012 @LENGTH@ 11
------------DEL New@@new @AT@ 5012 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 5016 @LENGTH@ 4
------------DEL NumberLiteral@@1 @AT@ 5021 @LENGTH@ 1
---------INS MethodInvocation@@Long.valueOf(1) @TO@ SimpleName@@MethodName:putIfAbsent:["4711", "replaced", new Long(1), TimeUnit.MINUTES] @AT@ 5016 @LENGTH@ 15
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 5016 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 5021 @LENGTH@ 10
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 5029 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Mapping user details from context with DN: " + dn) @TO@ MethodInvocation:this.logger.debug(LogMessage.format("Mapping user details from context with DN: %s",dn)) @AT@ 1990 @LENGTH@ 70
---UPD MethodInvocation@@this.logger.debug("Mapping user details from context with DN: " + dn) @TO@ this.logger.debug(LogMessage.format("Mapping user details from context with DN: %s",dn)) @AT@ 1990 @LENGTH@ 69
------UPD SimpleName@@MethodName:debug:["Mapping user details from context with DN: " + dn] @TO@ MethodName:format:["Mapping user details from context with DN: %s", dn] @AT@ 2002 @LENGTH@ 57
------INS SimpleName@@MethodName:debug:[LogMessage.format("Mapping user details from context with DN: %s",dn)] @TO@ MethodInvocation@@this.logger.debug("Mapping user details from context with DN: " + dn) @AT@ 2049 @LENGTH@ 77
---------INS MethodInvocation@@LogMessage.format("Mapping user details from context with DN: %s",dn) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Mapping user details from context with DN: %s",dn)] @AT@ 2055 @LENGTH@ 70
------------MOV SimpleName@@MethodName:debug:["Mapping user details from context with DN: " + dn] @TO@ MethodInvocation@@LogMessage.format("Mapping user details from context with DN: %s",dn) @AT@ 2002 @LENGTH@ 57
---------------DEL InfixExpression@@"Mapping user details from context with DN: " + dn @AT@ 2008 @LENGTH@ 50
------------------DEL StringLiteral@@"Mapping user details from context with DN: " @AT@ 2008 @LENGTH@ 45
------------------DEL Operator@@+ @AT@ 2053 @LENGTH@ 1
------------------DEL SimpleName@@dn @AT@ 2056 @LENGTH@ 2
---------------INS StringLiteral@@"Mapping user details from context with DN: %s" @TO@ SimpleName@@MethodName:debug:["Mapping user details from context with DN: " + dn] @AT@ 2073 @LENGTH@ 47
---------------INS SimpleName@@dn @TO@ SimpleName@@MethodName:debug:["Mapping user details from context with DN: " + dn] @AT@ 2122 @LENGTH@ 2
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Mapping user details from context with DN: %s",dn) @AT@ 2055 @LENGTH@ 10


UPD MethodDeclaration@@SimpleQueryHints, MethodName:getQueryHints,  @TO@ QueryHints, MethodName:getQueryHints,  @AT@ 1601 @LENGTH@ 16
---UPD SimpleType@@SimpleQueryHints @TO@ QueryHints @AT@ 1584 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:System.setProperty("server-port",new Integer(serverPort).toString()) @TO@ MethodInvocation:System.setProperty("server-port",Integer.valueOf(serverPort).toString()) @AT@ 1952 @LENGTH@ 70
---UPD MethodInvocation@@System.setProperty("server-port",new Integer(serverPort).toString()) @TO@ System.setProperty("server-port",Integer.valueOf(serverPort).toString()) @AT@ 1952 @LENGTH@ 69
------UPD SimpleName@@MethodName:setProperty:["server-port", new Integer(serverPort).toString()] @TO@ MethodName:setProperty:["server-port", Integer.valueOf(serverPort).toString()] @AT@ 1959 @LENGTH@ 62
---------UPD MethodInvocation@@new Integer(serverPort).toString() @TO@ Integer.valueOf(serverPort).toString() @AT@ 1986 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:valueOf:[serverPort] @TO@ MethodInvocation@@new Integer(serverPort).toString() @AT@ 1986 @LENGTH@ 27
---------------INS SimpleName@@serverPort @TO@ MethodInvocation@@MethodName:valueOf:[serverPort] @AT@ 2002 @LENGTH@ 10
------------DEL ClassInstanceCreation@@Integer[serverPort] @AT@ 1986 @LENGTH@ 23
---------------DEL New@@new @AT@ 1986 @LENGTH@ 3
---------------DEL SimpleType@@Integer @AT@ 1990 @LENGTH@ 7
---------------DEL SimpleName@@serverPort @AT@ 1998 @LENGTH@ 10
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(serverPort).toString() @AT@ 1986 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @TO@ TypeDeclaration@@[@TestInstance(TestInstance.Lifecycle.PER_CLASS), public]CxfRsProducerTest, CamelSpringTestSupport @AT@ 22406 @LENGTH@ 1102
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 22406 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 22413 @LENGTH@ 4
---INS SimpleName@@MethodName:testProducerWithQueryParametersEscapeAmpersand @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 22418 @LENGTH@ 46
---INS VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 22477 @LENGTH@ 772
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
); @AT@ 22477 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
); @AT@ 22486 @LENGTH@ 762
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @AT@ 22486 @LENGTH@ 8
---------INS MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @AT@ 22497 @LENGTH@ 751
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @AT@ 22497 @LENGTH@ 8
------------INS SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
] @TO@ MethodInvocation@@template.send("cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true",new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
) @AT@ 22506 @LENGTH@ 742
---------------INS InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @TO@ SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
] @AT@ 22511 @LENGTH@ 126
------------------INS StringLiteral@@"cxfrs://http://localhost:" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22511 @LENGTH@ 27
------------------INS Operator@@+ @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22538 @LENGTH@ 1
------------------INS MethodInvocation@@MethodName:getPort2:[] @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22541 @LENGTH@ 10
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22554 @LENGTH@ 3
------------------INS MethodInvocation@@getClass().getSimpleName() @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22560 @LENGTH@ 26
---------------------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 22560 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@getClass().getSimpleName() @AT@ 22571 @LENGTH@ 15
------------------INS StringLiteral@@"/testQuery?httpClientAPI=true&synchronous=true" @TO@ InfixExpression@@"cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true" @AT@ 22589 @LENGTH@ 48
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:send:["cxfrs://http://localhost:" + getPort2() + "/"+ getClass().getSimpleName()+ "/testQuery?httpClientAPI=true&synchronous=true", new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.setPattern(ExchangePattern.InOut);
    Message inMessage=exchange.getIn();
    inMessage.setHeader(Exchange.HTTP_METHOD,"GET");
    inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class);
    inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262");
    inMessage.setBody(null);
  }
}
] @AT@ 22639 @LENGTH@ 608
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 22639 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 22643 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 22655 @LENGTH@ 592
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 22673 @LENGTH@ 547
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22673 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22680 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22685 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22693 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 22693 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 22702 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22719 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.setPattern(ExchangePattern.InOut) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22751 @LENGTH@ 43
---------------------------INS MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @TO@ ExpressionStatement@@MethodInvocation:exchange.setPattern(ExchangePattern.InOut) @AT@ 22751 @LENGTH@ 42
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @AT@ 22751 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @TO@ MethodInvocation@@exchange.setPattern(ExchangePattern.InOut) @AT@ 22760 @LENGTH@ 33
---------------------------------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:setPattern:[ExchangePattern.InOut] @AT@ 22771 @LENGTH@ 21
------------------------------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 22771 @LENGTH@ 15
------------------------------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 22787 @LENGTH@ 5
------------------------INS VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22815 @LENGTH@ 37
---------------------------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @AT@ 22815 @LENGTH@ 7
---------------------------INS VariableDeclarationFragment@@inMessage=exchange.getIn() @TO@ VariableDeclarationStatement@@Message inMessage=exchange.getIn(); @AT@ 22823 @LENGTH@ 28
------------------------------INS SimpleName@@inMessage @TO@ VariableDeclarationFragment@@inMessage=exchange.getIn() @AT@ 22823 @LENGTH@ 9
------------------------------INS MethodInvocation@@exchange.getIn() @TO@ VariableDeclarationFragment@@inMessage=exchange.getIn() @AT@ 22835 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 22835 @LENGTH@ 8
---------------------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 22844 @LENGTH@ 7
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22916 @LENGTH@ 49
---------------------------INS MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 22916 @LENGTH@ 48
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 22916 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_METHOD,"GET") @AT@ 22926 @LENGTH@ 38
---------------------------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @AT@ 22936 @LENGTH@ 20
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 22936 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 22945 @LENGTH@ 11
---------------------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_METHOD, "GET"] @AT@ 22958 @LENGTH@ 5
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 22986 @LENGTH@ 81
---------------------------INS MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 22986 @LENGTH@ 80
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 22986 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @TO@ MethodInvocation@@inMessage.setHeader(CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS,InputStream.class) @AT@ 22996 @LENGTH@ 70
---------------------------------INS QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @TO@ SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @AT@ 23006 @LENGTH@ 40
------------------------------------INS SimpleName@@CxfConstants @TO@ QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @AT@ 23006 @LENGTH@ 12
------------------------------------INS SimpleName@@CAMEL_CXF_RS_RESPONSE_CLASS @TO@ QualifiedName@@CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS @AT@ 23019 @LENGTH@ 27
---------------------------------INS TypeLiteral@@InputStream.class @TO@ SimpleName@@MethodName:setHeader:[CxfConstants.CAMEL_CXF_RS_RESPONSE_CLASS, InputStream.class] @AT@ 23048 @LENGTH@ 17
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 23088 @LENGTH@ 53
---------------------------INS MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262") @TO@ ExpressionStatement@@MethodInvocation:inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262") @AT@ 23088 @LENGTH@ 52
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262") @AT@ 23088 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1%262"] @TO@ MethodInvocation@@inMessage.setHeader(Exchange.HTTP_QUERY,"id=1%262") @AT@ 23098 @LENGTH@ 42
---------------------------------INS QualifiedName@@Exchange.HTTP_QUERY @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1%262"] @AT@ 23108 @LENGTH@ 19
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 23108 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_QUERY @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 23117 @LENGTH@ 10
---------------------------------INS StringLiteral@@"id=1%262" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "id=1%262"] @AT@ 23129 @LENGTH@ 10
------------------------INS ExpressionStatement@@MethodInvocation:inMessage.setBody(null) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 23162 @LENGTH@ 24
---------------------------INS MethodInvocation@@inMessage.setBody(null) @TO@ ExpressionStatement@@MethodInvocation:inMessage.setBody(null) @AT@ 23162 @LENGTH@ 23
------------------------------INS SimpleName@@Name:inMessage @TO@ MethodInvocation@@inMessage.setBody(null) @AT@ 23162 @LENGTH@ 9
------------------------------INS SimpleName@@MethodName:setBody:[null] @TO@ MethodInvocation@@inMessage.setBody(null) @AT@ 23172 @LENGTH@ 13
---------------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setBody:[null] @AT@ 23180 @LENGTH@ 4
---INS VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 23301 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @AT@ 23301 @LENGTH@ 6
------INS VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String response=exchange.getOut().getBody(String.class); @AT@ 23308 @LENGTH@ 50
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @AT@ 23308 @LENGTH@ 8
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@response=exchange.getOut().getBody(String.class) @AT@ 23319 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 23319 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 23319 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 23337 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 23345 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull(response,"The response should not be null") @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 23368 @LENGTH@ 59
------INS MethodInvocation@@assertNotNull(response,"The response should not be null") @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(response,"The response should not be null") @AT@ 23368 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @TO@ MethodInvocation@@assertNotNull(response,"The response should not be null") @AT@ 23368 @LENGTH@ 58
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @AT@ 23382 @LENGTH@ 8
------------INS StringLiteral@@"The response should not be null" @TO@ SimpleName@@MethodName:assertNotNull:[response, "The response should not be null"] @AT@ 23392 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:assertEquals("id=1%262",response,"The response value is wrong") @TO@ MethodDeclaration@@public, void, MethodName:testProducerWithQueryParametersEscapeAmpersand,  @AT@ 23436 @LENGTH@ 66
------INS MethodInvocation@@assertEquals("id=1%262",response,"The response value is wrong") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("id=1%262",response,"The response value is wrong") @AT@ 23436 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertEquals:["id=1%262", response, "The response value is wrong"] @TO@ MethodInvocation@@assertEquals("id=1%262",response,"The response value is wrong") @AT@ 23436 @LENGTH@ 65
------------INS StringLiteral@@"id=1%262" @TO@ SimpleName@@MethodName:assertEquals:["id=1%262", response, "The response value is wrong"] @AT@ 23449 @LENGTH@ 10
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertEquals:["id=1%262", response, "The response value is wrong"] @AT@ 23461 @LENGTH@ 8
------------INS StringLiteral@@"The response value is wrong" @TO@ SimpleName@@MethodName:assertEquals:["id=1%262", response, "The response value is wrong"] @AT@ 23471 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ MethodInvocation:assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 5077 @LENGTH@ 140
---UPD MethodInvocation@@assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 5077 @LENGTH@ 139
------UPD SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @TO@ MethodName:assertEquals:["http://cxf.component.camel.apache.org/", el.getNamespaceURI(), "Get the wrong namespace URI"] @AT@ 5077 @LENGTH@ 139
---------INS StringLiteral@@"http://cxf.component.camel.apache.org/" @TO@ SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @AT@ 5090 @LENGTH@ 40
---------DEL StringLiteral@@"http://cxf.component.camel.apache.org/" @AT@ 5112 @LENGTH@ 40


UPD IfStatement@@if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} @TO@ if (isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {  try {    AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);  } catch (  IOException e) {    if (null != pool) {      pool.shutdownNow();    }    throw new HiveException(e);  }} @AT@ 178837 @LENGTH@ 162


UPD TryStatement@@try {  ZstdUtils.setCacheZstdAvailability(false);  assertEquals(ZstdUtils.CachedAvailability.DONT_CACHE,ZstdUtils.getCachedZstdAvailability());  ZstdUtils.setCacheZstdAvailability(true);  assertEquals(ZstdUtils.CachedAvailability.CACHED_AVAILABLE,ZstdUtils.getCachedZstdAvailability());}  finally {  ZstdUtils.setCacheZstdAvailability(true);} @TO@ try {  ZstdUtils.setCacheZstdAvailablity(false);  assertEquals(ZstdUtils.CachedAvailability.DONT_CACHE,ZstdUtils.getCachedZstdAvailability());  ZstdUtils.setCacheZstdAvailablity(true);  assertEquals(ZstdUtils.CachedAvailability.CACHED_AVAILABLE,ZstdUtils.getCachedZstdAvailability());}  finally {  ZstdUtils.setCacheZstdAvailablity(true);} @AT@ 3119 @LENGTH@ 416
---UPD ExpressionStatement@@MethodInvocation:ZstdUtils.setCacheZstdAvailability(false) @TO@ MethodInvocation:ZstdUtils.setCacheZstdAvailablity(false) @AT@ 3137 @LENGTH@ 42
------UPD MethodInvocation@@ZstdUtils.setCacheZstdAvailability(false) @TO@ ZstdUtils.setCacheZstdAvailablity(false) @AT@ 3137 @LENGTH@ 41
---------UPD SimpleName@@MethodName:setCacheZstdAvailability:[false] @TO@ MethodName:setCacheZstdAvailablity:[false] @AT@ 3147 @LENGTH@ 31
---UPD ExpressionStatement@@MethodInvocation:ZstdUtils.setCacheZstdAvailability(true) @TO@ MethodInvocation:ZstdUtils.setCacheZstdAvailablity(true) @AT@ 3298 @LENGTH@ 41
------UPD MethodInvocation@@ZstdUtils.setCacheZstdAvailability(true) @TO@ ZstdUtils.setCacheZstdAvailablity(true) @AT@ 3298 @LENGTH@ 40
---------UPD SimpleName@@MethodName:setCacheZstdAvailability:[true] @TO@ MethodName:setCacheZstdAvailablity:[true] @AT@ 3308 @LENGTH@ 30
---UPD Block@@FinallyBody:{  ZstdUtils.setCacheZstdAvailability(true);} @TO@ FinallyBody:{  ZstdUtils.setCacheZstdAvailablity(true);} @AT@ 3470 @LENGTH@ 65
------UPD ExpressionStatement@@MethodInvocation:ZstdUtils.setCacheZstdAvailability(true) @TO@ MethodInvocation:ZstdUtils.setCacheZstdAvailablity(true) @AT@ 3484 @LENGTH@ 41
---------UPD MethodInvocation@@ZstdUtils.setCacheZstdAvailability(true) @TO@ ZstdUtils.setCacheZstdAvailablity(true) @AT@ 3484 @LENGTH@ 40
------------UPD SimpleName@@MethodName:setCacheZstdAvailability:[true] @TO@ MethodName:setCacheZstdAvailablity:[true] @AT@ 3494 @LENGTH@ 30


DEL IfStatement@@if (hasConfigurers && hasFilterChain) {  throw new IllegalStateException("Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." + "Please select just one.");} @AT@ 4589 @LENGTH@ 183
---DEL InfixExpression@@hasConfigurers && hasFilterChain @AT@ 4593 @LENGTH@ 32
---DEL Block@@ThenBody:{  throw new IllegalStateException("Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." + "Please select just one.");} @AT@ 4627 @LENGTH@ 145
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." + "Please select just one.") @AT@ 4632 @LENGTH@ 136
---------DEL ClassInstanceCreation@@IllegalStateException["Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." + "Please select just one."] @AT@ 4638 @LENGTH@ 129
------------DEL New@@new @AT@ 4638 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 4642 @LENGTH@ 21
------------DEL InfixExpression@@"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." + "Please select just one." @AT@ 4670 @LENGTH@ 96
---------------DEL StringLiteral@@"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain." @AT@ 4670 @LENGTH@ 68
---------------DEL Operator@@+ @AT@ 4738 @LENGTH@ 1
---------------DEL StringLiteral@@"Please select just one." @AT@ 4741 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(message) @TO@ MethodInvocation:exchange.getMessage().setBody(message) @AT@ 3557 @LENGTH@ 35
---UPD MethodInvocation@@exchange.getOut().setBody(message) @TO@ exchange.getMessage().setBody(message) @AT@ 3557 @LENGTH@ 34
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3557 @LENGTH@ 17


INS IfStatement@@if (entityInstanceAndSource == null) {  return null;} @TO@ MethodDeclaration@@public, Object, MethodName:convert, EntityInstanceWithSource entityInstanceAndSource,  @AT@ 2691 @LENGTH@ 58
---INS InfixExpression@@entityInstanceAndSource == null @TO@ IfStatement@@if (entityInstanceAndSource == null) {  return null;} @AT@ 2695 @LENGTH@ 31
------INS SimpleName@@entityInstanceAndSource @TO@ InfixExpression@@entityInstanceAndSource == null @AT@ 2695 @LENGTH@ 23
------INS Operator@@== @TO@ InfixExpression@@entityInstanceAndSource == null @AT@ 2718 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@entityInstanceAndSource == null @AT@ 2722 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (entityInstanceAndSource == null) {  return null;} @AT@ 2728 @LENGTH@ 21
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 2733 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2740 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @TO@ TypeDeclaration@@[@ExtendWith({MongoClientExtension.class,SpringExtension.class}), @EnableIfReplicaSetAvailable, @EnableIfMongoServerVersion(isGreaterThanEqual="4.0"), @Transactional(transactionManager="txManager"), public]PersonRepositoryTransactionalTests,  @AT@ 5958 @LENGTH@ 480
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 5958 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 5965 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldBeAbleToReadDbRefDuringTransaction @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 5970 @LENGTH@ 40
---INS VariableDeclarationStatement@@User rat=new User(); @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6018 @LENGTH@ 22
------INS SimpleType@@User @TO@ VariableDeclarationStatement@@User rat=new User(); @AT@ 6018 @LENGTH@ 4
------INS VariableDeclarationFragment@@rat=new User() @TO@ VariableDeclarationStatement@@User rat=new User(); @AT@ 6023 @LENGTH@ 16
---------INS SimpleName@@rat @TO@ VariableDeclarationFragment@@rat=new User() @AT@ 6023 @LENGTH@ 3
---------INS ClassInstanceCreation@@User[] @TO@ VariableDeclarationFragment@@rat=new User() @AT@ 6029 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 6029 @LENGTH@ 3
------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 6033 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:rat.setUsername("rat") @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6043 @LENGTH@ 23
------INS MethodInvocation@@rat.setUsername("rat") @TO@ ExpressionStatement@@MethodInvocation:rat.setUsername("rat") @AT@ 6043 @LENGTH@ 22
---------INS SimpleName@@Name:rat @TO@ MethodInvocation@@rat.setUsername("rat") @AT@ 6043 @LENGTH@ 3
---------INS SimpleName@@MethodName:setUsername:["rat"] @TO@ MethodInvocation@@rat.setUsername("rat") @AT@ 6047 @LENGTH@ 18
------------INS StringLiteral@@"rat" @TO@ SimpleName@@MethodName:setUsername:["rat"] @AT@ 6059 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:template.save(rat) @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6070 @LENGTH@ 19
------INS MethodInvocation@@template.save(rat) @TO@ ExpressionStatement@@MethodInvocation:template.save(rat) @AT@ 6070 @LENGTH@ 18
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.save(rat) @AT@ 6070 @LENGTH@ 8
---------INS SimpleName@@MethodName:save:[rat] @TO@ MethodInvocation@@template.save(rat) @AT@ 6079 @LENGTH@ 9
------------INS SimpleName@@rat @TO@ SimpleName@@MethodName:save:[rat] @AT@ 6084 @LENGTH@ 3
---INS VariableDeclarationStatement@@Person elene=new Person("Elene","Cromwyll",18); @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6093 @LENGTH@ 51
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person elene=new Person("Elene","Cromwyll",18); @AT@ 6093 @LENGTH@ 6
------INS VariableDeclarationFragment@@elene=new Person("Elene","Cromwyll",18) @TO@ VariableDeclarationStatement@@Person elene=new Person("Elene","Cromwyll",18); @AT@ 6100 @LENGTH@ 43
---------INS SimpleName@@elene @TO@ VariableDeclarationFragment@@elene=new Person("Elene","Cromwyll",18) @AT@ 6100 @LENGTH@ 5
---------INS ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @TO@ VariableDeclarationFragment@@elene=new Person("Elene","Cromwyll",18) @AT@ 6108 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @AT@ 6108 @LENGTH@ 3
------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @AT@ 6112 @LENGTH@ 6
------------INS StringLiteral@@"Elene" @TO@ ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @AT@ 6119 @LENGTH@ 7
------------INS StringLiteral@@"Cromwyll" @TO@ ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @AT@ 6128 @LENGTH@ 10
------------INS NumberLiteral@@18 @TO@ ClassInstanceCreation@@Person["Elene", "Cromwyll", 18] @AT@ 6140 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:elene.setCoworker(rat) @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6147 @LENGTH@ 23
------INS MethodInvocation@@elene.setCoworker(rat) @TO@ ExpressionStatement@@MethodInvocation:elene.setCoworker(rat) @AT@ 6147 @LENGTH@ 22
---------INS SimpleName@@Name:elene @TO@ MethodInvocation@@elene.setCoworker(rat) @AT@ 6147 @LENGTH@ 5
---------INS SimpleName@@MethodName:setCoworker:[rat] @TO@ MethodInvocation@@elene.setCoworker(rat) @AT@ 6153 @LENGTH@ 16
------------INS SimpleName@@rat @TO@ SimpleName@@MethodName:setCoworker:[rat] @AT@ 6165 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:repository.save(elene) @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6174 @LENGTH@ 23
------INS MethodInvocation@@repository.save(elene) @TO@ ExpressionStatement@@MethodInvocation:repository.save(elene) @AT@ 6174 @LENGTH@ 22
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(elene) @AT@ 6174 @LENGTH@ 10
---------INS SimpleName@@MethodName:save:[elene] @TO@ MethodInvocation@@repository.save(elene) @AT@ 6185 @LENGTH@ 11
------------INS SimpleName@@elene @TO@ SimpleName@@MethodName:save:[elene] @AT@ 6190 @LENGTH@ 5
---INS VariableDeclarationStatement@@Optional<Person> loaded=repository.findById(elene.getId()); @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6201 @LENGTH@ 61
------INS ParameterizedType@@Optional<Person> @TO@ VariableDeclarationStatement@@Optional<Person> loaded=repository.findById(elene.getId()); @AT@ 6201 @LENGTH@ 16
---------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<Person> @AT@ 6201 @LENGTH@ 8
---------INS SimpleType@@Person @TO@ ParameterizedType@@Optional<Person> @AT@ 6210 @LENGTH@ 6
------INS VariableDeclarationFragment@@loaded=repository.findById(elene.getId()) @TO@ VariableDeclarationStatement@@Optional<Person> loaded=repository.findById(elene.getId()); @AT@ 6218 @LENGTH@ 43
---------INS SimpleName@@loaded @TO@ VariableDeclarationFragment@@loaded=repository.findById(elene.getId()) @AT@ 6218 @LENGTH@ 6
---------INS MethodInvocation@@repository.findById(elene.getId()) @TO@ VariableDeclarationFragment@@loaded=repository.findById(elene.getId()) @AT@ 6227 @LENGTH@ 34
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(elene.getId()) @AT@ 6227 @LENGTH@ 10
------------INS SimpleName@@MethodName:findById:[elene.getId()] @TO@ MethodInvocation@@repository.findById(elene.getId()) @AT@ 6238 @LENGTH@ 23
---------------INS MethodInvocation@@elene.getId() @TO@ SimpleName@@MethodName:findById:[elene.getId()] @AT@ 6247 @LENGTH@ 13
------------------INS SimpleName@@Name:elene @TO@ MethodInvocation@@elene.getId() @AT@ 6247 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@elene.getId() @AT@ 6253 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(loaded).isPresent() @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6265 @LENGTH@ 31
------INS MethodInvocation@@assertThat(loaded).isPresent() @TO@ ExpressionStatement@@MethodInvocation:assertThat(loaded).isPresent() @AT@ 6265 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThat:[loaded] @TO@ MethodInvocation@@assertThat(loaded).isPresent() @AT@ 6265 @LENGTH@ 18
------------INS SimpleName@@loaded @TO@ MethodInvocation@@MethodName:assertThat:[loaded] @AT@ 6276 @LENGTH@ 6
---------INS SimpleName@@MethodName:isPresent:[] @TO@ MethodInvocation@@assertThat(loaded).isPresent() @AT@ 6284 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(loaded.get().getCoworker()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6299 @LENGTH@ 51
------INS MethodInvocation@@assertThat(loaded.get().getCoworker()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(loaded.get().getCoworker()).isNotNull() @AT@ 6299 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:assertThat:[loaded.get().getCoworker()] @TO@ MethodInvocation@@assertThat(loaded.get().getCoworker()).isNotNull() @AT@ 6299 @LENGTH@ 38
------------INS MethodInvocation@@loaded.get().getCoworker() @TO@ MethodInvocation@@MethodName:assertThat:[loaded.get().getCoworker()] @AT@ 6310 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@loaded.get().getCoworker() @AT@ 6310 @LENGTH@ 12
---------------INS SimpleName@@Name:loaded @TO@ MethodInvocation@@loaded.get().getCoworker() @AT@ 6310 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getCoworker:[] @TO@ MethodInvocation@@loaded.get().getCoworker() @AT@ 6323 @LENGTH@ 13
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(loaded.get().getCoworker()).isNotNull() @AT@ 6338 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(loaded.get().getCoworker().getUsername()).isEqualTo(rat.getUsername()) @TO@ MethodDeclaration@@public, void, MethodName:shouldBeAbleToReadDbRefDuringTransaction,  @AT@ 6353 @LENGTH@ 82
------INS MethodInvocation@@assertThat(loaded.get().getCoworker().getUsername()).isEqualTo(rat.getUsername()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(loaded.get().getCoworker().getUsername()).isEqualTo(rat.getUsername()) @AT@ 6353 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:assertThat:[loaded.get().getCoworker().getUsername()] @TO@ MethodInvocation@@assertThat(loaded.get().getCoworker().getUsername()).isEqualTo(rat.getUsername()) @AT@ 6353 @LENGTH@ 52
------------INS MethodInvocation@@loaded.get().getCoworker().getUsername() @TO@ MethodInvocation@@MethodName:assertThat:[loaded.get().getCoworker().getUsername()] @AT@ 6364 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getCoworker:[] @TO@ MethodInvocation@@loaded.get().getCoworker().getUsername() @AT@ 6364 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@loaded.get().getCoworker().getUsername() @AT@ 6364 @LENGTH@ 12
---------------INS SimpleName@@Name:loaded @TO@ MethodInvocation@@loaded.get().getCoworker().getUsername() @AT@ 6364 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getUsername:[] @TO@ MethodInvocation@@loaded.get().getCoworker().getUsername() @AT@ 6391 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEqualTo:[rat.getUsername()] @TO@ MethodInvocation@@assertThat(loaded.get().getCoworker().getUsername()).isEqualTo(rat.getUsername()) @AT@ 6406 @LENGTH@ 28
------------INS MethodInvocation@@rat.getUsername() @TO@ SimpleName@@MethodName:isEqualTo:[rat.getUsername()] @AT@ 6416 @LENGTH@ 17
---------------INS SimpleName@@Name:rat @TO@ MethodInvocation@@rat.getUsername() @AT@ 6416 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getUsername:[] @TO@ MethodInvocation@@rat.getUsername() @AT@ 6420 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2122 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2122 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2138 @LENGTH@ 21


INS IfStatement@@if (names[0].startsWith(Registry.WINDOW_FUNC_PREFIX)) {  names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length());} @TO@ MethodDeclaration@@public, static, String[], MethodName:splitQualifiedFunctionName, String functionName, HiveException,  @AT@ 4912 @LENGTH@ 136
---INS MethodInvocation@@names[0].startsWith(Registry.WINDOW_FUNC_PREFIX) @TO@ IfStatement@@if (names[0].startsWith(Registry.WINDOW_FUNC_PREFIX)) {  names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length());} @AT@ 4916 @LENGTH@ 48
------INS ArrayAccess@@names[0] @TO@ MethodInvocation@@names[0].startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 4916 @LENGTH@ 8
---------INS SimpleName@@names @TO@ ArrayAccess@@names[0] @AT@ 4916 @LENGTH@ 5
---------INS NumberLiteral@@0 @TO@ ArrayAccess@@names[0] @AT@ 4922 @LENGTH@ 1
------INS SimpleName@@MethodName:startsWith:[Registry.WINDOW_FUNC_PREFIX] @TO@ MethodInvocation@@names[0].startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 4925 @LENGTH@ 39
---------INS QualifiedName@@Registry.WINDOW_FUNC_PREFIX @TO@ SimpleName@@MethodName:startsWith:[Registry.WINDOW_FUNC_PREFIX] @AT@ 4936 @LENGTH@ 27
------------INS SimpleName@@Registry @TO@ QualifiedName@@Registry.WINDOW_FUNC_PREFIX @AT@ 4936 @LENGTH@ 8
------------INS SimpleName@@WINDOW_FUNC_PREFIX @TO@ QualifiedName@@Registry.WINDOW_FUNC_PREFIX @AT@ 4945 @LENGTH@ 18
---INS Block@@ThenBody:{  names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length());} @TO@ IfStatement@@if (names[0].startsWith(Registry.WINDOW_FUNC_PREFIX)) {  names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length());} @AT@ 4966 @LENGTH@ 82
------INS ExpressionStatement@@Assignment:names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @TO@ Block@@ThenBody:{  names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length());} @AT@ 4974 @LENGTH@ 68
---------INS Assignment@@names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @TO@ ExpressionStatement@@Assignment:names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4974 @LENGTH@ 67
------------INS ArrayAccess@@names[0] @TO@ Assignment@@names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4974 @LENGTH@ 8
---------------INS SimpleName@@names @TO@ ArrayAccess@@names[0] @AT@ 4974 @LENGTH@ 5
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@names[0] @AT@ 4980 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4982 @LENGTH@ 1
------------INS MethodInvocation@@names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @TO@ Assignment@@names[0]=names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4985 @LENGTH@ 56
---------------INS ArrayAccess@@names[0] @TO@ MethodInvocation@@names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4985 @LENGTH@ 8
------------------INS SimpleName@@names @TO@ ArrayAccess@@names[0] @AT@ 4985 @LENGTH@ 5
------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@names[0] @AT@ 4991 @LENGTH@ 1
---------------INS SimpleName@@MethodName:substring:[Registry.WINDOW_FUNC_PREFIX.length()] @TO@ MethodInvocation@@names[0].substring(Registry.WINDOW_FUNC_PREFIX.length()) @AT@ 4994 @LENGTH@ 47
------------------INS MethodInvocation@@Registry.WINDOW_FUNC_PREFIX.length() @TO@ SimpleName@@MethodName:substring:[Registry.WINDOW_FUNC_PREFIX.length()] @AT@ 5004 @LENGTH@ 36
---------------------INS QualifiedName@@Name:Registry.WINDOW_FUNC_PREFIX @TO@ MethodInvocation@@Registry.WINDOW_FUNC_PREFIX.length() @AT@ 5004 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@Registry.WINDOW_FUNC_PREFIX.length() @AT@ 5032 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals(ftpClientParameters.get("soTimeout"),"10") @TO@ MethodInvocation:assertEquals("10",ftpClientParameters.get("soTimeout")) @AT@ 2319 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(ftpClientParameters.get("soTimeout"),"10") @TO@ assertEquals("10",ftpClientParameters.get("soTimeout")) @AT@ 2319 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[ftpClientParameters.get("soTimeout"), "10"] @TO@ MethodName:assertEquals:["10", ftpClientParameters.get("soTimeout")] @AT@ 2319 @LENGTH@ 56
---------MOV MethodInvocation@@ftpClientParameters.get("soTimeout") @TO@ SimpleName@@MethodName:assertEquals:[ftpClientParameters.get("soTimeout"), "10"] @AT@ 2332 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:log.debug("Setting security property [" + key + "] to: "+ loginConfigUrl) @TO@ MethodInvocation:log.debug(LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl)) @AT@ 8237 @LENGTH@ 75
---UPD MethodInvocation@@log.debug("Setting security property [" + key + "] to: "+ loginConfigUrl) @TO@ log.debug(LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl)) @AT@ 8237 @LENGTH@ 74
------UPD SimpleName@@MethodName:debug:["Setting security property [" + key + "] to: "+ loginConfigUrl] @TO@ MethodName:format:["Setting security property [%s] to: %s", key, loginConfigUrl] @AT@ 8241 @LENGTH@ 70
------INS SimpleName@@MethodName:debug:[LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl)] @TO@ MethodInvocation@@log.debug("Setting security property [" + key + "] to: "+ loginConfigUrl) @AT@ 8282 @LENGTH@ 86
---------INS MethodInvocation@@LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl)] @AT@ 8288 @LENGTH@ 79
------------MOV SimpleName@@MethodName:debug:["Setting security property [" + key + "] to: "+ loginConfigUrl] @TO@ MethodInvocation@@LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl) @AT@ 8241 @LENGTH@ 70
---------------DEL InfixExpression@@"Setting security property [" + key + "] to: "+ loginConfigUrl @AT@ 8247 @LENGTH@ 63
------------------DEL StringLiteral@@"Setting security property [" @AT@ 8247 @LENGTH@ 29
------------------DEL Operator@@+ @AT@ 8276 @LENGTH@ 1
------------------DEL SimpleName@@key @AT@ 8279 @LENGTH@ 3
------------------DEL StringLiteral@@"] to: " @AT@ 8285 @LENGTH@ 8
------------------DEL SimpleName@@loginConfigUrl @AT@ 8296 @LENGTH@ 14
---------------INS StringLiteral@@"Setting security property [%s] to: %s" @TO@ SimpleName@@MethodName:debug:["Setting security property [" + key + "] to: "+ loginConfigUrl] @AT@ 8306 @LENGTH@ 39
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:debug:["Setting security property [" + key + "] to: "+ loginConfigUrl] @AT@ 8347 @LENGTH@ 3
---------------INS SimpleName@@loginConfigUrl @TO@ SimpleName@@MethodName:debug:["Setting security property [" + key + "] to: "+ loginConfigUrl] @AT@ 8352 @LENGTH@ 14
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Setting security property [%s] to: %s",key,loginConfigUrl) @AT@ 8288 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----") @TO@ MethodInvocation:Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, please check that the header begins with -----" + X509_PEM_HEADER + "-----") @AT@ 3894 @LENGTH@ 211
---UPD MethodInvocation@@Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----") @TO@ Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, please check that the header begins with -----" + X509_PEM_HEADER + "-----") @AT@ 3894 @LENGTH@ 210
------UPD SimpleName@@MethodName:isTrue:[!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER), "Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----"] @TO@ MethodName:isTrue:[!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER), "Key is not in PEM-encoded X.509 format, please check that the header begins with -----" + X509_PEM_HEADER + "-----"] @AT@ 3901 @LENGTH@ 203
---------UPD InfixExpression@@"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----" @TO@ "Key is not in PEM-encoded X.509 format, please check that the header begins with -----" + X509_PEM_HEADER + "-----" @AT@ 3975 @LENGTH@ 128
------------DEL InfixExpression@@"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" @AT@ 3975 @LENGTH@ 93
---------------DEL StringLiteral@@"Key is not in PEM-encoded X.509 format, " @AT@ 3975 @LENGTH@ 42
---------------DEL Operator@@+ @AT@ 4017 @LENGTH@ 1
------------MOV StringLiteral@@"please check that the header begins with -----" @TO@ InfixExpression@@"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----" @AT@ 4020 @LENGTH@ 48


UPD Block@@ThenBody:{  Neo4jPersistentEntity<?> previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType());  Statement relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity);  neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run();} @TO@ ThenBody:{  Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription);  neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run();} @AT@ 20654 @LENGTH@ 563
---DEL VariableDeclarationStatement@@Neo4jPersistentEntity<?> previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()); @AT@ 20660 @LENGTH@ 156
------DEL ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 20660 @LENGTH@ 24
---------DEL SimpleType@@Neo4jPersistentEntity @AT@ 20660 @LENGTH@ 21
---------DEL WildcardType@@? @AT@ 20682 @LENGTH@ 1
------DEL VariableDeclarationFragment@@previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()) @AT@ 20685 @LENGTH@ 130
---------DEL SimpleName@@previouslyRelatedPersistentEntity @AT@ 20685 @LENGTH@ 33
---------DEL MethodInvocation@@neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()) @AT@ 20721 @LENGTH@ 94
------------DEL SimpleName@@Name:neo4jMappingContext @AT@ 20721 @LENGTH@ 19
------------DEL SimpleName@@MethodName:getPersistentEntity:[relationshipContext.getAssociationTargetType()] @AT@ 20748 @LENGTH@ 67
---------------DEL MethodInvocation@@relationshipContext.getAssociationTargetType() @AT@ 20768 @LENGTH@ 46
------------------DEL SimpleName@@Name:relationshipContext @AT@ 20768 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getAssociationTargetType:[] @AT@ 20788 @LENGTH@ 26
---UPD VariableDeclarationStatement@@Statement relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity); @TO@ Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription); @AT@ 20822 @LENGTH@ 171
------UPD VariableDeclarationFragment@@relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity) @TO@ relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription) @AT@ 20832 @LENGTH@ 160
---------UPD MethodInvocation@@cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity) @TO@ cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription) @AT@ 20858 @LENGTH@ 134
------------UPD SimpleName@@MethodName:createRelationshipRemoveQuery:[neo4jPersistentEntity, relationshipDescription, previouslyRelatedPersistentEntity] @TO@ MethodName:prepareDeleteOf:[neo4jPersistentEntity, relationshipDescription] @AT@ 20874 @LENGTH@ 118
---------------DEL SimpleName@@previouslyRelatedPersistentEntity @AT@ 20958 @LENGTH@ 33
---UPD ExpressionStatement@@MethodInvocation:neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run() @TO@ MethodInvocation:neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run() @AT@ 20999 @LENGTH@ 213
------UPD MethodInvocation@@neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run() @TO@ neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run() @AT@ 20999 @LENGTH@ 212
---------UPD MethodInvocation@@MethodName:bind:[convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)] @TO@ MethodName:bind:[convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)] @AT@ 20999 @LENGTH@ 162
------------UPD MethodInvocation@@convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId) @TO@ convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId) @AT@ 21086 @LENGTH@ 74
---------------UPD SimpleName@@MethodName:convertIdValues:[previouslyRelatedPersistentEntity.getIdProperty(), fromId] @TO@ MethodName:convertIdValues:[neo4jPersistentEntity.getIdProperty(), fromId] @AT@ 21086 @LENGTH@ 74
------------------UPD MethodInvocation@@previouslyRelatedPersistentEntity.getIdProperty() @TO@ neo4jPersistentEntity.getIdProperty() @AT@ 21102 @LENGTH@ 49
---------------------UPD SimpleName@@Name:previouslyRelatedPersistentEntity @TO@ Name:neo4jPersistentEntity @AT@ 21102 @LENGTH@ 33


UPD FieldDeclaration@@public, static, final, String, [CODEC_101_MULTIPLE_OF_3="124"] @TO@ public, static, final, String, [CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3="124"] @AT@ 1228 @LENGTH@ 59
---UPD VariableDeclarationFragment@@CODEC_101_MULTIPLE_OF_3="124" @TO@ CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3="124" @AT@ 1255 @LENGTH@ 31
------UPD SimpleName@@CODEC_101_MULTIPLE_OF_3 @TO@ CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3 @AT@ 1255 @LENGTH@ 23


UPD TypeDeclaration@@[@JdkService(HealthCheckRegistry.FACTORY), public]DefaultHealthCheckRegistry, ServiceSupport[HealthCheckRegistry] @TO@ [@JdkService(HealthCheckRegistry.FACTORY), @DeferredContextBinding, public]DefaultHealthCheckRegistry, ServiceSupport[HealthCheckRegistry] @AT@ 1550 @LENGTH@ 7668
---INS MarkerAnnotation@@@DeferredContextBinding @TO@ TypeDeclaration@@[@JdkService(HealthCheckRegistry.FACTORY), public]DefaultHealthCheckRegistry, ServiceSupport[HealthCheckRegistry] @AT@ 1639 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @TO@ TypeDeclaration@@[public]TestBytesBytesMultiHashMap,  @AT@ 2048 @LENGTH@ 218
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2048 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2055 @LENGTH@ 4
---INS SimpleName@@MethodName:testExpandAndRehashToTarget @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2060 @LENGTH@ 27
---INS VariableDeclarationStatement@@BytesBytesMultiHashMap map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE); @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2096 @LENGTH@ 88
------INS SimpleType@@BytesBytesMultiHashMap @TO@ VariableDeclarationStatement@@BytesBytesMultiHashMap map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE); @AT@ 2096 @LENGTH@ 22
------INS VariableDeclarationFragment@@map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE) @TO@ VariableDeclarationStatement@@BytesBytesMultiHashMap map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE); @AT@ 2119 @LENGTH@ 64
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE) @AT@ 2119 @LENGTH@ 3
---------INS ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @TO@ VariableDeclarationFragment@@map=new BytesBytesMultiHashMap(CAPACITY,LOAD_FACTOR,WB_SIZE) @AT@ 2125 @LENGTH@ 58
------------INS New@@new @TO@ ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @AT@ 2125 @LENGTH@ 3
------------INS SimpleType@@BytesBytesMultiHashMap @TO@ ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @AT@ 2129 @LENGTH@ 22
------------INS SimpleName@@CAPACITY @TO@ ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @AT@ 2152 @LENGTH@ 8
------------INS SimpleName@@LOAD_FACTOR @TO@ ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @AT@ 2162 @LENGTH@ 11
------------INS SimpleName@@WB_SIZE @TO@ ClassInstanceCreation@@BytesBytesMultiHashMap[CAPACITY, LOAD_FACTOR, WB_SIZE] @AT@ 2175 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:map.expandAndRehashToTarget(24) @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2189 @LENGTH@ 32
------INS MethodInvocation@@map.expandAndRehashToTarget(24) @TO@ ExpressionStatement@@MethodInvocation:map.expandAndRehashToTarget(24) @AT@ 2189 @LENGTH@ 31
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.expandAndRehashToTarget(24) @AT@ 2189 @LENGTH@ 3
---------INS SimpleName@@MethodName:expandAndRehashToTarget:[24] @TO@ MethodInvocation@@map.expandAndRehashToTarget(24) @AT@ 2193 @LENGTH@ 27
------------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:expandAndRehashToTarget:[24] @AT@ 2217 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertEquals(32,map.getCapacity()) @TO@ MethodDeclaration@@public, void, MethodName:testExpandAndRehashToTarget,  @AT@ 2226 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(32,map.getCapacity()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(32,map.getCapacity()) @AT@ 2226 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[32, map.getCapacity()] @TO@ MethodInvocation@@assertEquals(32,map.getCapacity()) @AT@ 2226 @LENGTH@ 35
------------INS NumberLiteral@@32 @TO@ SimpleName@@MethodName:assertEquals:[32, map.getCapacity()] @AT@ 2239 @LENGTH@ 2
------------INS MethodInvocation@@map.getCapacity() @TO@ SimpleName@@MethodName:assertEquals:[32, map.getCapacity()] @AT@ 2243 @LENGTH@ 17
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.getCapacity() @AT@ 2243 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getCapacity:[] @TO@ MethodInvocation@@map.getCapacity() @AT@ 2247 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:setCacheXZAvailability(true) @TO@ MethodInvocation:setCacheXZAvailablity(true) @AT@ 2048 @LENGTH@ 29
---UPD MethodInvocation@@setCacheXZAvailability(true) @TO@ setCacheXZAvailablity(true) @AT@ 2048 @LENGTH@ 28
------UPD SimpleName@@MethodName:setCacheXZAvailability:[true] @TO@ MethodName:setCacheXZAvailablity:[true] @AT@ 2048 @LENGTH@ 28


UPD ExpressionStatement@@Assignment:newRefsCount=(Long.bitCount(newRefsCount) == 1) ? estimateNewRowCount : nextHighestPowerOfTwo(newRefsCount) @TO@ Assignment:newRefsCount=(Long.bitCount(newRefsCount) == 1) ? newRefsCount : nextHighestPowerOfTwo(newRefsCount) @AT@ 23768 @LENGTH@ 120
---UPD Assignment@@newRefsCount=(Long.bitCount(newRefsCount) == 1) ? estimateNewRowCount : nextHighestPowerOfTwo(newRefsCount) @TO@ newRefsCount=(Long.bitCount(newRefsCount) == 1) ? newRefsCount : nextHighestPowerOfTwo(newRefsCount) @AT@ 23768 @LENGTH@ 119
------UPD ConditionalExpression@@(Long.bitCount(newRefsCount) == 1) ? estimateNewRowCount : nextHighestPowerOfTwo(newRefsCount) @TO@ (Long.bitCount(newRefsCount) == 1) ? newRefsCount : nextHighestPowerOfTwo(newRefsCount) @AT@ 23793 @LENGTH@ 94
---------UPD SimpleName@@estimateNewRowCount @TO@ newRefsCount @AT@ 23830 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("breadcrumbId"),"ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5") @TO@ MethodInvocation:assertEquals("ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5",exchange.getIn().getHeader("breadcrumbId")) @AT@ 2945 @LENGTH@ 111
---UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("breadcrumbId"),"ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5") @TO@ assertEquals("ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5",exchange.getIn().getHeader("breadcrumbId")) @AT@ 2945 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("breadcrumbId"), "ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5"] @TO@ MethodName:assertEquals:["ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5", exchange.getIn().getHeader("breadcrumbId")] @AT@ 2945 @LENGTH@ 110
---------MOV MethodInvocation@@exchange.getIn().getHeader("breadcrumbId") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("breadcrumbId"), "ID-Ralfs-MacBook-Pro-local-50523-1423553069254-0-5"] @AT@ 2958 @LENGTH@ 42


DEL MethodDeclaration@@public, String, MethodName:getAmazonHost,  @AT@ 1301 @LENGTH@ 117
---DEL Modifier@@public @AT@ 1301 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1308 @LENGTH@ 6
---DEL SimpleName@@MethodName:getAmazonHost @AT@ 1315 @LENGTH@ 13
---DEL VariableDeclarationStatement@@final int snsPort=4575; @AT@ 1341 @LENGTH@ 25
------DEL Modifier@@final @AT@ 1341 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 1347 @LENGTH@ 3
------DEL VariableDeclarationFragment@@snsPort=4575 @AT@ 1351 @LENGTH@ 14
---------DEL SimpleName@@snsPort @AT@ 1351 @LENGTH@ 7
---------DEL NumberLiteral@@4575 @AT@ 1361 @LENGTH@ 4
---DEL ReturnStatement@@SuperMethodInvocation:super.getAmazonHost(snsPort) @AT@ 1376 @LENGTH@ 36
------DEL SuperMethodInvocation@@super.getAmazonHost(snsPort) @AT@ 1383 @LENGTH@ 28
---------DEL SimpleName@@MethodName:getAmazonHost:[snsPort] @AT@ 1389 @LENGTH@ 13
---------DEL SimpleName@@snsPort @AT@ 1403 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:testInOnly").inOnly("mock:result") @TO@ MethodInvocation:from("direct:testInOnly").to(ExchangePattern.InOnly,"mock:result") @AT@ 5519 @LENGTH@ 48
---UPD MethodInvocation@@from("direct:testInOnly").inOnly("mock:result") @TO@ from("direct:testInOnly").to(ExchangePattern.InOnly,"mock:result") @AT@ 5519 @LENGTH@ 47
------UPD SimpleName@@MethodName:inOnly:["mock:result"] @TO@ MethodName:to:[ExchangePattern.InOnly, "mock:result"] @AT@ 5545 @LENGTH@ 21
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ SimpleName@@MethodName:inOnly:["mock:result"] @AT@ 5568 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 5568 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 5584 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(agent.getMBeanServer().getDefaultDomain(),"org.apache.camel.test") @TO@ MethodInvocation:assertEquals("org.apache.camel.test",agent.getMBeanServer().getDefaultDomain()) @AT@ 1829 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(agent.getMBeanServer().getDefaultDomain(),"org.apache.camel.test") @TO@ assertEquals("org.apache.camel.test",agent.getMBeanServer().getDefaultDomain()) @AT@ 1829 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[agent.getMBeanServer().getDefaultDomain(), "org.apache.camel.test"] @TO@ MethodName:assertEquals:["org.apache.camel.test", agent.getMBeanServer().getDefaultDomain()] @AT@ 1829 @LENGTH@ 80
---------INS StringLiteral@@"org.apache.camel.test" @TO@ SimpleName@@MethodName:assertEquals:[agent.getMBeanServer().getDefaultDomain(), "org.apache.camel.test"] @AT@ 1842 @LENGTH@ 23
---------DEL StringLiteral@@"org.apache.camel.test" @AT@ 1885 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @TO@ TypeDeclaration@@[public]RunIdIncrementerTests,  @AT@ 1717 @LENGTH@ 308
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1717 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1724 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetNextWhenRunIdIsString @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1729 @LENGTH@ 28
---INS VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters(); @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1775 @LENGTH@ 107
------INS SimpleType@@JobParameters @TO@ VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters(); @AT@ 1775 @LENGTH@ 13
------INS VariableDeclarationFragment@@parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters() @TO@ VariableDeclarationStatement@@JobParameters parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters(); @AT@ 1789 @LENGTH@ 92
---------INS SimpleName@@parameters @TO@ VariableDeclarationFragment@@parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters() @AT@ 1789 @LENGTH@ 10
---------INS MethodInvocation@@new JobParametersBuilder().addString("run.id","5").toJobParameters() @TO@ VariableDeclarationFragment@@parameters=new JobParametersBuilder().addString("run.id","5").toJobParameters() @AT@ 1802 @LENGTH@ 79
------------INS MethodInvocation@@MethodName:addString:["run.id", "5"] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","5").toJobParameters() @AT@ 1802 @LENGTH@ 56
---------------INS StringLiteral@@"run.id" @TO@ MethodInvocation@@MethodName:addString:["run.id", "5"] @AT@ 1844 @LENGTH@ 8
---------------INS StringLiteral@@"5" @TO@ MethodInvocation@@MethodName:addString:["run.id", "5"] @AT@ 1854 @LENGTH@ 3
------------INS ClassInstanceCreation@@JobParametersBuilder[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","5").toJobParameters() @AT@ 1802 @LENGTH@ 26
---------------INS New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 1802 @LENGTH@ 3
---------------INS SimpleType@@JobParametersBuilder @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 1806 @LENGTH@ 20
------------INS SimpleName@@MethodName:toJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","5").toJobParameters() @AT@ 1864 @LENGTH@ 17
---INS VariableDeclarationStatement@@JobParameters next=this.incrementer.getNext(parameters); @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1896 @LENGTH@ 58
------INS SimpleType@@JobParameters @TO@ VariableDeclarationStatement@@JobParameters next=this.incrementer.getNext(parameters); @AT@ 1896 @LENGTH@ 13
------INS VariableDeclarationFragment@@next=this.incrementer.getNext(parameters) @TO@ VariableDeclarationStatement@@JobParameters next=this.incrementer.getNext(parameters); @AT@ 1910 @LENGTH@ 43
---------INS SimpleName@@next @TO@ VariableDeclarationFragment@@next=this.incrementer.getNext(parameters) @AT@ 1910 @LENGTH@ 4
---------INS MethodInvocation@@this.incrementer.getNext(parameters) @TO@ VariableDeclarationFragment@@next=this.incrementer.getNext(parameters) @AT@ 1917 @LENGTH@ 36
------------INS FieldAccess@@this.incrementer @TO@ MethodInvocation@@this.incrementer.getNext(parameters) @AT@ 1917 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.incrementer @AT@ 1917 @LENGTH@ 4
---------------INS SimpleName@@incrementer @TO@ FieldAccess@@this.incrementer @AT@ 1922 @LENGTH@ 11
------------INS SimpleName@@MethodName:getNext:[parameters] @TO@ MethodInvocation@@this.incrementer.getNext(parameters) @AT@ 1934 @LENGTH@ 19
---------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getNext:[parameters] @AT@ 1942 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertEquals(Long.valueOf(6),next.getLong("run.id")) @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsString,  @AT@ 1968 @LENGTH@ 54
------INS MethodInvocation@@assertEquals(Long.valueOf(6),next.getLong("run.id")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(Long.valueOf(6),next.getLong("run.id")) @AT@ 1968 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertEquals:[Long.valueOf(6), next.getLong("run.id")] @TO@ MethodInvocation@@assertEquals(Long.valueOf(6),next.getLong("run.id")) @AT@ 1968 @LENGTH@ 53
------------INS MethodInvocation@@Long.valueOf(6) @TO@ SimpleName@@MethodName:assertEquals:[Long.valueOf(6), next.getLong("run.id")] @AT@ 1981 @LENGTH@ 15
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(6) @AT@ 1981 @LENGTH@ 4
---------------INS SimpleName@@MethodName:valueOf:[6] @TO@ MethodInvocation@@Long.valueOf(6) @AT@ 1986 @LENGTH@ 10
------------------INS NumberLiteral@@6 @TO@ SimpleName@@MethodName:valueOf:[6] @AT@ 1994 @LENGTH@ 1
------------INS MethodInvocation@@next.getLong("run.id") @TO@ SimpleName@@MethodName:assertEquals:[Long.valueOf(6), next.getLong("run.id")] @AT@ 1998 @LENGTH@ 22
---------------INS SimpleName@@Name:next @TO@ MethodInvocation@@next.getLong("run.id") @AT@ 1998 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getLong:["run.id"] @TO@ MethodInvocation@@next.getLong("run.id") @AT@ 2003 @LENGTH@ 17
------------------INS StringLiteral@@"run.id" @TO@ SimpleName@@MethodName:getLong:["run.id"] @AT@ 2011 @LENGTH@ 8


UPD IfStatement@@if (passo != null) {  String password=LdapUtils.convertPasswordToString(passo);  setPassword(password);} @TO@ if (password != null) {  setPassword(LdapUtils.convertPasswordToString(password));} @AT@ 2820 @LENGTH@ 116
---UPD InfixExpression@@passo != null @TO@ password != null @AT@ 2824 @LENGTH@ 13
------UPD SimpleName@@passo @TO@ password @AT@ 2824 @LENGTH@ 5
---UPD Block@@ThenBody:{  String password=LdapUtils.convertPasswordToString(passo);  setPassword(password);} @TO@ ThenBody:{  setPassword(LdapUtils.convertPasswordToString(password));} @AT@ 2839 @LENGTH@ 97
------DEL VariableDeclarationStatement@@String password=LdapUtils.convertPasswordToString(passo); @AT@ 2845 @LENGTH@ 59
---------DEL SimpleType@@String @AT@ 2845 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@password=LdapUtils.convertPasswordToString(passo) @AT@ 2852 @LENGTH@ 51
------------DEL SimpleName@@password @AT@ 2852 @LENGTH@ 8
------------DEL MethodInvocation@@LdapUtils.convertPasswordToString(passo) @AT@ 2863 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:setPassword(LdapUtils.convertPasswordToString(password)) @TO@ Block@@ThenBody:{  String password=LdapUtils.convertPasswordToString(passo);  setPassword(password);} @AT@ 2849 @LENGTH@ 57
---------INS MethodInvocation@@setPassword(LdapUtils.convertPasswordToString(password)) @TO@ ExpressionStatement@@MethodInvocation:setPassword(LdapUtils.convertPasswordToString(password)) @AT@ 2849 @LENGTH@ 56
------------INS SimpleName@@MethodName:setPassword:[LdapUtils.convertPasswordToString(password)] @TO@ MethodInvocation@@setPassword(LdapUtils.convertPasswordToString(password)) @AT@ 2849 @LENGTH@ 56
---------------INS MethodInvocation@@LdapUtils.convertPasswordToString(password) @TO@ SimpleName@@MethodName:setPassword:[LdapUtils.convertPasswordToString(password)] @AT@ 2861 @LENGTH@ 43
------------------MOV SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.convertPasswordToString(password) @AT@ 2863 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:convertPasswordToString:[passo] @TO@ MethodInvocation@@LdapUtils.convertPasswordToString(password) @AT@ 2873 @LENGTH@ 30
------DEL ExpressionStatement@@MethodInvocation:setPassword(password) @AT@ 2909 @LENGTH@ 22
---------DEL MethodInvocation@@setPassword(password) @AT@ 2909 @LENGTH@ 21
------------DEL SimpleName@@MethodName:setPassword:[password] @AT@ 2909 @LENGTH@ 21
---------------DEL SimpleName@@password @AT@ 2921 @LENGTH@ 8


INS IfStatement@@if (http.requestCache != null) {  codeGrantWebFilter.setRequestCache(http.requestCache.requestCache);} @TO@ MethodDeclaration@@protected, void, MethodName:configure, ServerHttpSecurity http,  @AT@ 62914 @LENGTH@ 109
---INS InfixExpression@@http.requestCache != null @TO@ IfStatement@@if (http.requestCache != null) {  codeGrantWebFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 62918 @LENGTH@ 25
------INS QualifiedName@@http.requestCache @TO@ InfixExpression@@http.requestCache != null @AT@ 62918 @LENGTH@ 17
---------INS SimpleName@@http @TO@ QualifiedName@@http.requestCache @AT@ 62918 @LENGTH@ 4
---------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache @AT@ 62923 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@http.requestCache != null @AT@ 62935 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@http.requestCache != null @AT@ 62939 @LENGTH@ 4
---INS Block@@ThenBody:{  codeGrantWebFilter.setRequestCache(http.requestCache.requestCache);} @TO@ IfStatement@@if (http.requestCache != null) {  codeGrantWebFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 62945 @LENGTH@ 78
------INS ExpressionStatement@@MethodInvocation:codeGrantWebFilter.setRequestCache(http.requestCache.requestCache) @TO@ Block@@ThenBody:{  codeGrantWebFilter.setRequestCache(http.requestCache.requestCache);} @AT@ 62951 @LENGTH@ 67
---------INS MethodInvocation@@codeGrantWebFilter.setRequestCache(http.requestCache.requestCache) @TO@ ExpressionStatement@@MethodInvocation:codeGrantWebFilter.setRequestCache(http.requestCache.requestCache) @AT@ 62951 @LENGTH@ 66
------------INS SimpleName@@Name:codeGrantWebFilter @TO@ MethodInvocation@@codeGrantWebFilter.setRequestCache(http.requestCache.requestCache) @AT@ 62951 @LENGTH@ 18
------------INS SimpleName@@MethodName:setRequestCache:[http.requestCache.requestCache] @TO@ MethodInvocation@@codeGrantWebFilter.setRequestCache(http.requestCache.requestCache) @AT@ 62970 @LENGTH@ 47
---------------INS QualifiedName@@http.requestCache.requestCache @TO@ SimpleName@@MethodName:setRequestCache:[http.requestCache.requestCache] @AT@ 62986 @LENGTH@ 30
------------------INS QualifiedName@@http.requestCache @TO@ QualifiedName@@http.requestCache.requestCache @AT@ 62986 @LENGTH@ 17
---------------------INS SimpleName@@http @TO@ QualifiedName@@http.requestCache @AT@ 62986 @LENGTH@ 4
---------------------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache @AT@ 62991 @LENGTH@ 12
------------------INS SimpleName@@requestCache @TO@ QualifiedName@@http.requestCache.requestCache @AT@ 63004 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:LOG.trace("onException {}",ex) @TO@ MethodInvocation:LOG.trace("onException {}",ex.getMessage(),ex) @AT@ 4203 @LENGTH@ 32
---UPD MethodInvocation@@LOG.trace("onException {}",ex) @TO@ LOG.trace("onException {}",ex.getMessage(),ex) @AT@ 4203 @LENGTH@ 31
------UPD SimpleName@@MethodName:trace:["onException {}", ex] @TO@ MethodName:trace:["onException {}", ex.getMessage(), ex] @AT@ 4207 @LENGTH@ 27
---------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:trace:["onException {}", ex] @AT@ 4231 @LENGTH@ 15
------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage() @AT@ 4231 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 4234 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:logger.info("Creating filter chain: " + requestMatcher + ", "+ filters) @TO@ MethodInvocation:logger.info(LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters)) @AT@ 1567 @LENGTH@ 73
---UPD MethodInvocation@@logger.info("Creating filter chain: " + requestMatcher + ", "+ filters) @TO@ logger.info(LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters)) @AT@ 1567 @LENGTH@ 72
------UPD SimpleName@@MethodName:info:["Creating filter chain: " + requestMatcher + ", "+ filters] @TO@ MethodName:format:["Creating filter chain: %s, %s", requestMatcher, filters] @AT@ 1574 @LENGTH@ 65
------INS SimpleName@@MethodName:info:[LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters)] @TO@ MethodInvocation@@logger.info("Creating filter chain: " + requestMatcher + ", "+ filters) @AT@ 1622 @LENGTH@ 81
---------INS MethodInvocation@@LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters) @TO@ SimpleName@@MethodName:info:[LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters)] @AT@ 1627 @LENGTH@ 75
------------MOV SimpleName@@MethodName:info:["Creating filter chain: " + requestMatcher + ", "+ filters] @TO@ MethodInvocation@@LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters) @AT@ 1574 @LENGTH@ 65
---------------DEL InfixExpression@@"Creating filter chain: " + requestMatcher + ", "+ filters @AT@ 1579 @LENGTH@ 59
------------------DEL StringLiteral@@"Creating filter chain: " @AT@ 1579 @LENGTH@ 25
------------------DEL Operator@@+ @AT@ 1604 @LENGTH@ 1
------------------DEL SimpleName@@requestMatcher @AT@ 1607 @LENGTH@ 14
------------------DEL StringLiteral@@", " @AT@ 1624 @LENGTH@ 4
------------------DEL SimpleName@@filters @AT@ 1631 @LENGTH@ 7
---------------INS StringLiteral@@"Creating filter chain: %s, %s" @TO@ SimpleName@@MethodName:info:["Creating filter chain: " + requestMatcher + ", "+ filters] @AT@ 1645 @LENGTH@ 31
---------------INS SimpleName@@requestMatcher @TO@ SimpleName@@MethodName:info:["Creating filter chain: " + requestMatcher + ", "+ filters] @AT@ 1678 @LENGTH@ 14
---------------INS SimpleName@@filters @TO@ SimpleName@@MethodName:info:["Creating filter chain: " + requestMatcher + ", "+ filters] @AT@ 1694 @LENGTH@ 7
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Creating filter chain: %s, %s",requestMatcher,filters) @AT@ 1627 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:mock.expectedHeaderReceived(GeoCoderConstants.CITY,"Sevilla") @TO@ MethodInvocation:mock.expectedHeaderReceived(GeoCoderConstants.REGION_NAME,"Andalucía") @AT@ 1350 @LENGTH@ 63
---UPD MethodInvocation@@mock.expectedHeaderReceived(GeoCoderConstants.CITY,"Sevilla") @TO@ mock.expectedHeaderReceived(GeoCoderConstants.REGION_NAME,"Andalucía") @AT@ 1350 @LENGTH@ 62
------UPD SimpleName@@MethodName:expectedHeaderReceived:[GeoCoderConstants.CITY, "Sevilla"] @TO@ MethodName:expectedHeaderReceived:[GeoCoderConstants.REGION_NAME, "Andalucía"] @AT@ 1355 @LENGTH@ 57
---------UPD QualifiedName@@GeoCoderConstants.CITY @TO@ GeoCoderConstants.REGION_NAME @AT@ 1378 @LENGTH@ 22
------------UPD SimpleName@@CITY @TO@ REGION_NAME @AT@ 1396 @LENGTH@ 4
---------UPD StringLiteral@@"Sevilla" @TO@ "Andalucía" @AT@ 1402 @LENGTH@ 9


UPD ReturnStatement@@LambdaExpression:result -> assertThat(result.getRequest().getSession(false)).is(new Condition<HttpSession>(sessionPredicate,"sessionPredicate failed")) @TO@ LambdaExpression:result -> assertThat(result.getRequest().getSession(false)).is(new Condition<>(sessionPredicate,"sessionPredicate failed")) @AT@ 8241 @LENGTH@ 148
---UPD LambdaExpression@@result -> assertThat(result.getRequest().getSession(false)).is(new Condition<HttpSession>(sessionPredicate,"sessionPredicate failed")) @TO@ result -> assertThat(result.getRequest().getSession(false)).is(new Condition<>(sessionPredicate,"sessionPredicate failed")) @AT@ 8248 @LENGTH@ 140
------UPD MethodInvocation@@assertThat(result.getRequest().getSession(false)).is(new Condition<HttpSession>(sessionPredicate,"sessionPredicate failed")) @TO@ assertThat(result.getRequest().getSession(false)).is(new Condition<>(sessionPredicate,"sessionPredicate failed")) @AT@ 8258 @LENGTH@ 130
---------UPD SimpleName@@MethodName:is:[new Condition<HttpSession>(sessionPredicate,"sessionPredicate failed")] @TO@ MethodName:is:[new Condition<>(sessionPredicate,"sessionPredicate failed")] @AT@ 8313 @LENGTH@ 75
------------UPD ClassInstanceCreation@@Condition<HttpSession>[sessionPredicate, "sessionPredicate failed"] @TO@ Condition<>[sessionPredicate, "sessionPredicate failed"] @AT@ 8316 @LENGTH@ 71
---------------UPD ParameterizedType@@Condition<HttpSession> @TO@ Condition<> @AT@ 8320 @LENGTH@ 22
------------------DEL SimpleType@@HttpSession @AT@ 8330 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(reply) @TO@ MethodInvocation:exchange.getMessage().setBody(reply) @AT@ 4126 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(reply) @TO@ exchange.getMessage().setBody(reply) @AT@ 4126 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4126 @LENGTH@ 17


UPD IfStatement@@if (ObjectHelper.isNotEmpty(getConfiguration().getDestinationBucketPrefix())) {  builder.append(getConfiguration().getDestinationBucketSuffix());} @TO@ if (ObjectHelper.isNotEmpty(getConfiguration().getDestinationBucketSuffix())) {  builder.append(getConfiguration().getDestinationBucketSuffix());} @AT@ 12220 @LENGTH@ 182
---UPD MethodInvocation@@ObjectHelper.isNotEmpty(getConfiguration().getDestinationBucketPrefix()) @TO@ ObjectHelper.isNotEmpty(getConfiguration().getDestinationBucketSuffix()) @AT@ 12224 @LENGTH@ 72
------UPD SimpleName@@MethodName:isNotEmpty:[getConfiguration().getDestinationBucketPrefix()] @TO@ MethodName:isNotEmpty:[getConfiguration().getDestinationBucketSuffix()] @AT@ 12237 @LENGTH@ 59
---------UPD MethodInvocation@@getConfiguration().getDestinationBucketPrefix() @TO@ getConfiguration().getDestinationBucketSuffix() @AT@ 12248 @LENGTH@ 47
------------UPD SimpleName@@MethodName:getDestinationBucketPrefix:[] @TO@ MethodName:getDestinationBucketSuffix:[] @AT@ 12267 @LENGTH@ 28


INS VariableDeclarationStatement@@Object executionContextUserSupport=getField(reader,"executionContextUserSupport"); @TO@ MethodDeclaration@@public, void, MethodName:testConfiguration, Exception,  @AT@ 3840 @LENGTH@ 85
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object executionContextUserSupport=getField(reader,"executionContextUserSupport"); @AT@ 3840 @LENGTH@ 6
---INS VariableDeclarationFragment@@executionContextUserSupport=getField(reader,"executionContextUserSupport") @TO@ VariableDeclarationStatement@@Object executionContextUserSupport=getField(reader,"executionContextUserSupport"); @AT@ 3847 @LENGTH@ 77
------INS SimpleName@@executionContextUserSupport @TO@ VariableDeclarationFragment@@executionContextUserSupport=getField(reader,"executionContextUserSupport") @AT@ 3847 @LENGTH@ 27
------INS MethodInvocation@@getField(reader,"executionContextUserSupport") @TO@ VariableDeclarationFragment@@executionContextUserSupport=getField(reader,"executionContextUserSupport") @AT@ 3877 @LENGTH@ 47
---------INS SimpleName@@MethodName:getField:[reader, "executionContextUserSupport"] @TO@ MethodInvocation@@getField(reader,"executionContextUserSupport") @AT@ 3877 @LENGTH@ 47
------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:getField:[reader, "executionContextUserSupport"] @AT@ 3886 @LENGTH@ 6
------------INS StringLiteral@@"executionContextUserSupport" @TO@ SimpleName@@MethodName:getField:[reader, "executionContextUserSupport"] @AT@ 3894 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertEquals(withReg - afterDestroy,1) @TO@ MethodInvocation:assertEquals(1,withReg - afterDestroy) @AT@ 2028 @LENGTH@ 40
---UPD MethodInvocation@@assertEquals(withReg - afterDestroy,1) @TO@ assertEquals(1,withReg - afterDestroy) @AT@ 2028 @LENGTH@ 39
------UPD SimpleName@@MethodName:assertEquals:[withReg - afterDestroy, 1] @TO@ MethodName:assertEquals:[1, withReg - afterDestroy] @AT@ 2028 @LENGTH@ 39
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[withReg - afterDestroy, 1] @AT@ 2041 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2065 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @TO@ MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @AT@ 3679 @LENGTH@ 369
---UPD MethodInvocation@@from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @TO@ from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @AT@ 3679 @LENGTH@ 368
------UPD MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @TO@ MethodName:to:[ExchangePattern.InOut, "sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @AT@ 3679 @LENGTH@ 279
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @AT@ 3857 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3857 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3873 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertNotNull(response != null) @TO@ MethodInvocation:assertNotNull(response) @AT@ 3925 @LENGTH@ 32
---UPD MethodInvocation@@assertNotNull(response != null) @TO@ assertNotNull(response) @AT@ 3925 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertNotNull:[response != null] @TO@ MethodName:assertNotNull:[response] @AT@ 3925 @LENGTH@ 31
---------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertNotNull:[response != null] @AT@ 3931 @LENGTH@ 8
---------DEL InfixExpression@@response != null @AT@ 3939 @LENGTH@ 16
------------DEL SimpleName@@response @AT@ 3939 @LENGTH@ 8
------------DEL Operator@@!= @AT@ 3947 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3951 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.trace("onConnectionFailed {}",ex) @TO@ MethodInvocation:LOG.trace("onConnectionFailed {}",ex.getMessage(),ex) @AT@ 4422 @LENGTH@ 39
---UPD MethodInvocation@@LOG.trace("onConnectionFailed {}",ex) @TO@ LOG.trace("onConnectionFailed {}",ex.getMessage(),ex) @AT@ 4422 @LENGTH@ 38
------UPD SimpleName@@MethodName:trace:["onConnectionFailed {}", ex] @TO@ MethodName:trace:["onConnectionFailed {}", ex.getMessage(), ex] @AT@ 4426 @LENGTH@ 34
---------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:trace:["onConnectionFailed {}", ex] @AT@ 4474 @LENGTH@ 15
------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage() @AT@ 4474 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 4477 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getBody(),true) @TO@ MethodInvocation:assertEquals(true,resultExchange.getIn().getBody()) @AT@ 2172 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getBody(),true) @TO@ assertEquals(true,resultExchange.getIn().getBody()) @AT@ 2172 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getBody(), true] @TO@ MethodName:assertEquals:[true, resultExchange.getIn().getBody()] @AT@ 2172 @LENGTH@ 52
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getBody(), true] @AT@ 2185 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2219 @LENGTH@ 4


UPD VariableDeclarationStatement@@boolean ret=false; @TO@ boolean ret; @AT@ 18929 @LENGTH@ 20
---UPD VariableDeclarationFragment@@ret=false @TO@ ret @AT@ 18937 @LENGTH@ 11
------DEL BooleanLiteral@@false @AT@ 18943 @LENGTH@ 5


UPD IfStatement@@if (!requestMatchers.isEmpty()) {  BeanMetadataElement requestMatcher;  if (StringUtils.hasText(this.requestMatcherRef)) {    requestMatcher=new RuntimeBeanReference(this.requestMatcherRef);  } else {    requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class);  }  BeanDefinitionBuilder and=BeanDefinitionBuilder.rootBeanDefinition(AndRequestMatcher.class);  BeanDefinitionBuilder negated=BeanDefinitionBuilder.rootBeanDefinition(NegatedRequestMatcher.class);  BeanDefinitionBuilder or=BeanDefinitionBuilder.rootBeanDefinition(OrRequestMatcher.class);  or.addConstructorArgValue(requestMatchers);  negated.addConstructorArgValue(or.getBeanDefinition());  List<BeanMetadataElement> ands=new ManagedList<>();  ands.add(requestMatcher);  ands.add(negated.getBeanDefinition());  and.addConstructorArgValue(ands);  this.csrfFilter.getPropertyValues().add("requireCsrfProtectionMatcher",and.getBeanDefinition());} @TO@ if (!requestMatchers.isEmpty()) {  BeanMetadataElement requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef);  BeanDefinitionBuilder and=BeanDefinitionBuilder.rootBeanDefinition(AndRequestMatcher.class);  BeanDefinitionBuilder negated=BeanDefinitionBuilder.rootBeanDefinition(NegatedRequestMatcher.class);  BeanDefinitionBuilder or=BeanDefinitionBuilder.rootBeanDefinition(OrRequestMatcher.class);  or.addConstructorArgValue(requestMatchers);  negated.addConstructorArgValue(or.getBeanDefinition());  List<BeanMetadataElement> ands=new ManagedList<>();  ands.add(requestMatcher);  ands.add(negated.getBeanDefinition());  and.addConstructorArgValue(ands);  this.csrfFilter.getPropertyValues().add("requireCsrfProtectionMatcher",and.getBeanDefinition());} @AT@ 8297 @LENGTH@ 972
---UPD Block@@ThenBody:{  BeanMetadataElement requestMatcher;  if (StringUtils.hasText(this.requestMatcherRef)) {    requestMatcher=new RuntimeBeanReference(this.requestMatcherRef);  } else {    requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class);  }  BeanDefinitionBuilder and=BeanDefinitionBuilder.rootBeanDefinition(AndRequestMatcher.class);  BeanDefinitionBuilder negated=BeanDefinitionBuilder.rootBeanDefinition(NegatedRequestMatcher.class);  BeanDefinitionBuilder or=BeanDefinitionBuilder.rootBeanDefinition(OrRequestMatcher.class);  or.addConstructorArgValue(requestMatchers);  negated.addConstructorArgValue(or.getBeanDefinition());  List<BeanMetadataElement> ands=new ManagedList<>();  ands.add(requestMatcher);  ands.add(negated.getBeanDefinition());  and.addConstructorArgValue(ands);  this.csrfFilter.getPropertyValues().add("requireCsrfProtectionMatcher",and.getBeanDefinition());} @TO@ ThenBody:{  BeanMetadataElement requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef);  BeanDefinitionBuilder and=BeanDefinitionBuilder.rootBeanDefinition(AndRequestMatcher.class);  BeanDefinitionBuilder negated=BeanDefinitionBuilder.rootBeanDefinition(NegatedRequestMatcher.class);  BeanDefinitionBuilder or=BeanDefinitionBuilder.rootBeanDefinition(OrRequestMatcher.class);  or.addConstructorArgValue(requestMatchers);  negated.addConstructorArgValue(or.getBeanDefinition());  List<BeanMetadataElement> ands=new ManagedList<>();  ands.add(requestMatcher);  ands.add(negated.getBeanDefinition());  and.addConstructorArgValue(ands);  this.csrfFilter.getPropertyValues().add("requireCsrfProtectionMatcher",and.getBeanDefinition());} @AT@ 8329 @LENGTH@ 940
------INS VariableDeclarationStatement@@BeanMetadataElement requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef); @TO@ Block@@ThenBody:{  BeanMetadataElement requestMatcher;  if (StringUtils.hasText(this.requestMatcherRef)) {    requestMatcher=new RuntimeBeanReference(this.requestMatcherRef);  } else {    requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class);  }  BeanDefinitionBuilder and=BeanDefinitionBuilder.rootBeanDefinition(AndRequestMatcher.class);  BeanDefinitionBuilder negated=BeanDefinitionBuilder.rootBeanDefinition(NegatedRequestMatcher.class);  BeanDefinitionBuilder or=BeanDefinitionBuilder.rootBeanDefinition(OrRequestMatcher.class);  or.addConstructorArgValue(requestMatchers);  negated.addConstructorArgValue(or.getBeanDefinition());  List<BeanMetadataElement> ands=new ManagedList<>();  ands.add(requestMatcher);  ands.add(negated.getBeanDefinition());  and.addConstructorArgValue(ands);  this.csrfFilter.getPropertyValues().add("requireCsrfProtectionMatcher",and.getBeanDefinition());} @AT@ 8326 @LENGTH@ 204
---------MOV SimpleType@@BeanMetadataElement @TO@ VariableDeclarationStatement@@BeanMetadataElement requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef); @AT@ 8334 @LENGTH@ 19
---------INS VariableDeclarationFragment@@requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @TO@ VariableDeclarationStatement@@BeanMetadataElement requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef); @AT@ 8346 @LENGTH@ 183
------------MOV SimpleName@@requestMatcher @TO@ VariableDeclarationFragment@@requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8354 @LENGTH@ 14
------------INS ConditionalExpression@@(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @TO@ VariableDeclarationFragment@@requestMatcher=(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8363 @LENGTH@ 166
---------------INS ParenthesizedExpression@@(!StringUtils.hasText(this.requestMatcherRef)) @TO@ ConditionalExpression@@(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8363 @LENGTH@ 46
------------------INS PrefixExpression@@!StringUtils.hasText(this.requestMatcherRef) @TO@ ParenthesizedExpression@@(!StringUtils.hasText(this.requestMatcherRef)) @AT@ 8364 @LENGTH@ 44
---------------------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(this.requestMatcherRef) @AT@ 8364 @LENGTH@ 1
---------------------MOV MethodInvocation@@StringUtils.hasText(this.requestMatcherRef) @TO@ PrefixExpression@@!StringUtils.hasText(this.requestMatcherRef) @AT@ 8377 @LENGTH@ 43
---------------INS ClassInstanceCreation@@RootBeanDefinition[DefaultRequiresCsrfMatcher.class] @TO@ ConditionalExpression@@(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8417 @LENGTH@ 56
------------------MOV New@@new @TO@ ClassInstanceCreation@@RootBeanDefinition[DefaultRequiresCsrfMatcher.class] @AT@ 8531 @LENGTH@ 3
------------------MOV SimpleType@@RootBeanDefinition @TO@ ClassInstanceCreation@@RootBeanDefinition[DefaultRequiresCsrfMatcher.class] @AT@ 8535 @LENGTH@ 18
------------------MOV TypeLiteral@@DefaultRequiresCsrfMatcher.class @TO@ ClassInstanceCreation@@RootBeanDefinition[DefaultRequiresCsrfMatcher.class] @AT@ 8554 @LENGTH@ 32
---------------MOV ClassInstanceCreation@@RuntimeBeanReference[this.requestMatcherRef] @TO@ ConditionalExpression@@(!StringUtils.hasText(this.requestMatcherRef)) ? new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) : new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8445 @LENGTH@ 48
------DEL VariableDeclarationStatement@@BeanMetadataElement requestMatcher; @AT@ 8334 @LENGTH@ 35
---------DEL VariableDeclarationFragment@@requestMatcher @AT@ 8354 @LENGTH@ 14
------DEL IfStatement@@if (StringUtils.hasText(this.requestMatcherRef)) {  requestMatcher=new RuntimeBeanReference(this.requestMatcherRef);} else {  requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class);} @AT@ 8373 @LENGTH@ 220
---------DEL Block@@ThenBody:{  requestMatcher=new RuntimeBeanReference(this.requestMatcherRef);} @AT@ 8422 @LENGTH@ 77
------------DEL ExpressionStatement@@Assignment:requestMatcher=new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8428 @LENGTH@ 66
---------------DEL Assignment@@requestMatcher=new RuntimeBeanReference(this.requestMatcherRef) @AT@ 8428 @LENGTH@ 65
------------------DEL SimpleName@@requestMatcher @AT@ 8428 @LENGTH@ 14
------------------DEL Operator@@= @AT@ 8442 @LENGTH@ 1
---------DEL Block@@ElseBody:{  requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class);} @AT@ 8508 @LENGTH@ 85
------------DEL ExpressionStatement@@Assignment:requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) @AT@ 8514 @LENGTH@ 74
---------------DEL Assignment@@requestMatcher=new RootBeanDefinition(DefaultRequiresCsrfMatcher.class) @AT@ 8514 @LENGTH@ 73
------------------DEL SimpleName@@requestMatcher @AT@ 8514 @LENGTH@ 14
------------------DEL Operator@@= @AT@ 8528 @LENGTH@ 1
------------------DEL ClassInstanceCreation@@RootBeanDefinition[DefaultRequiresCsrfMatcher.class] @AT@ 8531 @LENGTH@ 56


UPD IfStatement@@if (JAVA8 == null) {  JAVA8=getJavaMajorVersion() == 8;  if (JAVA8) {    throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");  }} @TO@ if (java8 == null) {  java8=getJavaMajorVersion() == 8;  if (java8) {    throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");  }} @AT@ 3626 @LENGTH@ 224
---UPD InfixExpression@@JAVA8 == null @TO@ java8 == null @AT@ 3630 @LENGTH@ 13
------UPD SimpleName@@JAVA8 @TO@ java8 @AT@ 3630 @LENGTH@ 5
---UPD Block@@ThenBody:{  JAVA8=getJavaMajorVersion() == 8;  if (JAVA8) {    throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");  }} @TO@ ThenBody:{  java8=getJavaMajorVersion() == 8;  if (java8) {    throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");  }} @AT@ 3645 @LENGTH@ 205
------UPD ExpressionStatement@@Assignment:JAVA8=getJavaMajorVersion() == 8 @TO@ Assignment:java8=getJavaMajorVersion() == 8 @AT@ 3659 @LENGTH@ 35
---------UPD Assignment@@JAVA8=getJavaMajorVersion() == 8 @TO@ java8=getJavaMajorVersion() == 8 @AT@ 3659 @LENGTH@ 34
------------UPD SimpleName@@JAVA8 @TO@ java8 @AT@ 3659 @LENGTH@ 5
------UPD IfStatement@@if (JAVA8) {  throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");} @TO@ if (java8) {  throw new UnsupportedOperationException("Java 8 is not supported. Use Java 11 or higher");} @AT@ 3707 @LENGTH@ 133
---------UPD SimpleName@@JAVA8 @TO@ java8 @AT@ 3711 @LENGTH@ 5


INS MethodDeclaration@@Optional<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @TO@ TypeDeclaration@@[public]PersonRepository, [Neo4jRepository<PersonWithAllConstructor,Long>] @AT@ 10668 @LENGTH@ 37
---INS ParameterizedType@@Optional<DtoPersonProjection> @TO@ MethodDeclaration@@Optional<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 10638 @LENGTH@ 29
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<DtoPersonProjection> @AT@ 10638 @LENGTH@ 8
------INS SimpleType@@DtoPersonProjection @TO@ ParameterizedType@@Optional<DtoPersonProjection> @AT@ 10647 @LENGTH@ 19
---INS SimpleName@@MethodName:findOneByFirstName @TO@ MethodDeclaration@@Optional<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 10668 @LENGTH@ 18
---INS SingleVariableDeclaration@@String firstName @TO@ MethodDeclaration@@Optional<DtoPersonProjection>, MethodName:findOneByFirstName, String firstName,  @AT@ 10687 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String firstName @AT@ 10687 @LENGTH@ 6
------INS SimpleName@@firstName @TO@ SingleVariableDeclaration@@String firstName @AT@ 10694 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10").process(exchange -> {
  String threadName=Thread.currentThread().getName();
synchronized (msgsPerThread) {
    AtomicInteger count=msgsPerThread.get(threadName);
    if (count == null) {
      count=new AtomicInteger(0);
      msgsPerThread.put(threadName,count);
    }
    count.incrementAndGet();
  }
}
).to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10").process(exchange -> {
  String threadName=Thread.currentThread().getName();
synchronized (msgsPerThread) {
    AtomicInteger count=msgsPerThread.get(threadName);
    if (count == null) {
      count=new AtomicInteger(0);
      msgsPerThread.put(threadName,count);
    }
    count.incrementAndGet();
  }
}
).to("mock:result") @AT@ 3937 @LENGTH@ 784
---UPD MethodInvocation@@from("direct:start").inOut("jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10").process(exchange -> {
  String threadName=Thread.currentThread().getName();
synchronized (msgsPerThread) {
    AtomicInteger count=msgsPerThread.get(threadName);
    if (count == null) {
      count=new AtomicInteger(0);
      msgsPerThread.put(threadName,count);
    }
    count.incrementAndGet();
  }
}
).to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10").process(exchange -> {
  String threadName=Thread.currentThread().getName();
synchronized (msgsPerThread) {
    AtomicInteger count=msgsPerThread.get(threadName);
    if (count == null) {
      count=new AtomicInteger(0);
      msgsPerThread.put(threadName,count);
    }
    count.incrementAndGet();
  }
}
).to("mock:result") @AT@ 3937 @LENGTH@ 783
------UPD MethodInvocation@@MethodName:inOut:["jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10"] @TO@ MethodName:to:[ExchangePattern.InOut, "jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10"] @AT@ 3937 @LENGTH@ 151
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["jms:queue:foo?replyToConcurrentConsumers=10&replyToMaxConcurrentConsumers=20&recoveryInterval=10"] @AT@ 4002 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4002 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4018 @LENGTH@ 5


UPD ForStatement@@for (Iterator<?> dependencies=project.getDependencies().iterator(); dependencies.hasNext(); ) {  Dependency dependency=(Dependency)dependencies.next();  String groupId=dependency.getGroupId();  String artifactId=dependency.getArtifactId();  VersionRange versionRange;  try {    versionRange=VersionRange.createFromVersionSpec(dependency.getVersion());  } catch (  InvalidVersionSpecificationException e) {    throw new MojoExecutionException("unable to parse version",e);  }  String type=dependency.getType();  if (type == null) {    type="jar";  }  String classifier=dependency.getClassifier();  boolean optional=dependency.isOptional();  String scope=dependency.getScope();  if (scope == null) {    scope=Artifact.SCOPE_COMPILE;  }  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @TO@ for (Iterator<?> dependencies=project.getDependencies().iterator(); dependencies.hasNext(); ) {  Dependency dependency=(Dependency)dependencies.next();  String groupId=dependency.getGroupId();  String artifactId=dependency.getArtifactId();  VersionRange versionRange;  try {    versionRange=VersionRange.createFromVersionSpec(dependency.getVersion());  } catch (  InvalidVersionSpecificationException e) {    throw new MojoExecutionException("unable to parse version",e);  }  String type=dependency.getType();  if (type == null) {    type="jar";  }  String classifier=dependency.getClassifier();  boolean optional=dependency.isOptional();  String scope=dependency.getScope();  if (scope == null) {    scope=Artifact.SCOPE_COMPILE;  }  if (this.artifactFactory != null) {    Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);    if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {      art.setFile(new File(dependency.getSystemPath()));    }    List<String> exclusions=new ArrayList<>();    for (    Exclusion exclusion : dependency.getExclusions()) {      exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());    }    ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);    art.setDependencyFilter(newFilter);    artifacts.add(art);  }} @AT@ 9976 @LENGTH@ 1694
---INS IfStatement@@if (this.artifactFactory != null) {  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @TO@ ForStatement@@for (Iterator<?> dependencies=project.getDependencies().iterator(); dependencies.hasNext(); ) {  Dependency dependency=(Dependency)dependencies.next();  String groupId=dependency.getGroupId();  String artifactId=dependency.getArtifactId();  VersionRange versionRange;  try {    versionRange=VersionRange.createFromVersionSpec(dependency.getVersion());  } catch (  InvalidVersionSpecificationException e) {    throw new MojoExecutionException("unable to parse version",e);  }  String type=dependency.getType();  if (type == null) {    type="jar";  }  String classifier=dependency.getClassifier();  boolean optional=dependency.isOptional();  String scope=dependency.getScope();  if (scope == null) {    scope=Artifact.SCOPE_COMPILE;  }  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 10963 @LENGTH@ 807
------INS InfixExpression@@this.artifactFactory != null @TO@ IfStatement@@if (this.artifactFactory != null) {  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 10967 @LENGTH@ 28
---------INS FieldAccess@@this.artifactFactory @TO@ InfixExpression@@this.artifactFactory != null @AT@ 10967 @LENGTH@ 20
------------INS ThisExpression@@this @TO@ FieldAccess@@this.artifactFactory @AT@ 10967 @LENGTH@ 4
------------INS SimpleName@@artifactFactory @TO@ FieldAccess@@this.artifactFactory @AT@ 10972 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@this.artifactFactory != null @AT@ 10987 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.artifactFactory != null @AT@ 10991 @LENGTH@ 4
------INS Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @TO@ IfStatement@@if (this.artifactFactory != null) {  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 10997 @LENGTH@ 773
---------MOV VariableDeclarationStatement@@Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional); @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 10963 @LENGTH@ 157
---------MOV IfStatement@@if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {  art.setFile(new File(dependency.getSystemPath()));} @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11134 @LENGTH@ 133
---------MOV VariableDeclarationStatement@@List<String> exclusions=new ArrayList<>(); @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11281 @LENGTH@ 44
---------MOV EnhancedForStatement@@for (Exclusion exclusion : dependency.getExclusions()) {  exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());} @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11338 @LENGTH@ 160
---------MOV VariableDeclarationStatement@@ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions); @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11512 @LENGTH@ 66
---------MOV ExpressionStatement@@MethodInvocation:art.setDependencyFilter(newFilter) @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11592 @LENGTH@ 35
---------MOV ExpressionStatement@@MethodInvocation:artifacts.add(art) @TO@ Block@@ThenBody:{  Artifact art=this.artifactFactory.createDependencyArtifact(groupId,artifactId,versionRange,type,classifier,scope,null,optional);  if (scope.equalsIgnoreCase(Artifact.SCOPE_SYSTEM)) {    art.setFile(new File(dependency.getSystemPath()));  }  List<String> exclusions=new ArrayList<>();  for (  Exclusion exclusion : dependency.getExclusions()) {    exclusions.add(exclusion.getGroupId() + ":" + exclusion.getArtifactId());  }  ArtifactFilter newFilter=new ExcludesArtifactFilter(exclusions);  art.setDependencyFilter(newFilter);  artifacts.add(art);} @AT@ 11641 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:from("direct:listKeys").to(listKeys) @TO@ MethodInvocation:from("direct:listKeys").to(listKeys).to("mock:result") @AT@ 2942 @LENGTH@ 37
---UPD MethodInvocation@@from("direct:listKeys").to(listKeys) @TO@ from("direct:listKeys").to(listKeys).to("mock:result") @AT@ 2942 @LENGTH@ 36
------INS MethodInvocation@@MethodName:to:[listKeys] @TO@ MethodInvocation@@from("direct:listKeys").to(listKeys) @AT@ 2820 @LENGTH@ 36
---------INS SimpleName@@listKeys @TO@ MethodInvocation@@MethodName:to:[listKeys] @AT@ 2847 @LENGTH@ 8
------INS SimpleName@@MethodName:to:["mock:result"] @TO@ MethodInvocation@@from("direct:listKeys").to(listKeys) @AT@ 2857 @LENGTH@ 17
---------INS StringLiteral@@"mock:result" @TO@ SimpleName@@MethodName:to:["mock:result"] @AT@ 2860 @LENGTH@ 13
------DEL SimpleName@@MethodName:to:[listKeys] @AT@ 2966 @LENGTH@ 12
---------DEL SimpleName@@listKeys @AT@ 2969 @LENGTH@ 8


INS MethodDeclaration@@void, MethodName:shouldParseNestedArrays,  @TO@ TypeDeclaration@@ParameterBindingJsonReaderUnitTests,  @AT@ 13597 @LENGTH@ 321
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:shouldParseNestedArrays,  @AT@ 13592 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldParseNestedArrays @TO@ MethodDeclaration@@void, MethodName:shouldParseNestedArrays,  @AT@ 13597 @LENGTH@ 23
---INS VariableDeclarationStatement@@Document target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D); @TO@ MethodDeclaration@@void, MethodName:shouldParseNestedArrays,  @AT@ 13628 @LENGTH@ 136
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D); @AT@ 13628 @LENGTH@ 8
------INS VariableDeclarationFragment@@target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D) @TO@ VariableDeclarationStatement@@Document target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D); @AT@ 13637 @LENGTH@ 126
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D) @AT@ 13637 @LENGTH@ 6
---------INS MethodInvocation@@parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D) @TO@ VariableDeclarationFragment@@target=parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D) @AT@ 13646 @LENGTH@ 117
------------INS SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }", 1.948516D, 0.004D] @TO@ MethodInvocation@@parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }",1.948516D,0.004D) @AT@ 13646 @LENGTH@ 117
---------------INS StringLiteral@@"{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }" @TO@ SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }", 1.948516D, 0.004D] @AT@ 13652 @LENGTH@ 87
---------------INS NumberLiteral@@1.948516D @TO@ SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }", 1.948516D, 0.004D] @AT@ 13745 @LENGTH@ 9
---------------INS NumberLiteral@@0.004D @TO@ SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ ?0, 48.799029 ] , ?1 ] } } }", 1.948516D, 0.004D] @AT@ 13756 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")) @TO@ MethodDeclaration@@void, MethodName:shouldParseNestedArrays,  @AT@ 13767 @LENGTH@ 148
------INS MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")) @AT@ 13767 @LENGTH@ 147
---------INS MethodInvocation@@MethodName:assertThat:[target] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")) @AT@ 13767 @LENGTH@ 18
------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:assertThat:[target] @AT@ 13778 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")) @AT@ 13786 @LENGTH@ 128
------------INS MethodInvocation@@Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }")] @AT@ 13796 @LENGTH@ 117
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }") @AT@ 13796 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }"] @TO@ MethodInvocation@@Document.parse("{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }") @AT@ 13810 @LENGTH@ 103
------------------INS StringLiteral@@"{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }" @TO@ SimpleName@@MethodName:parse:["{ 'stores.location' : { $geoWithin: { $centerSphere: [ [ 1.948516, 48.799029 ] , 0.004 ] } } }"] @AT@ 13816 @LENGTH@ 96


INS MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @TO@ TypeDeclaration@@[public, final]AuthorizedClientServiceOAuth2AuthorizedClientManager, [OAuth2AuthorizedClientManager] @AT@ 7404 @LENGTH@ 561
---MOV VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes((attributes) -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 6484 @LENGTH@ 341
---INS Modifier@@private @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7404 @LENGTH@ 7
---INS SimpleType@@OAuth2AuthorizationContext @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7412 @LENGTH@ 26
---INS SimpleName@@MethodName:buildAuthorizationContext @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7439 @LENGTH@ 25
---INS SingleVariableDeclaration@@OAuth2AuthorizeRequest authorizeRequest @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7465 @LENGTH@ 39
------INS SimpleType@@OAuth2AuthorizeRequest @TO@ SingleVariableDeclaration@@OAuth2AuthorizeRequest authorizeRequest @AT@ 7465 @LENGTH@ 22
------INS SimpleName@@authorizeRequest @TO@ SingleVariableDeclaration@@OAuth2AuthorizeRequest authorizeRequest @AT@ 7488 @LENGTH@ 16
---INS SingleVariableDeclaration@@Authentication principal @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7509 @LENGTH@ 24
------INS SimpleType@@Authentication @TO@ SingleVariableDeclaration@@Authentication principal @AT@ 7509 @LENGTH@ 14
------INS SimpleName@@principal @TO@ SingleVariableDeclaration@@Authentication principal @AT@ 7524 @LENGTH@ 9
---INS SingleVariableDeclaration@@OAuth2AuthorizationContext.Builder contextBuilder @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7535 @LENGTH@ 49
------INS SimpleType@@OAuth2AuthorizationContext.Builder @TO@ SingleVariableDeclaration@@OAuth2AuthorizationContext.Builder contextBuilder @AT@ 7535 @LENGTH@ 34
------INS SimpleName@@contextBuilder @TO@ SingleVariableDeclaration@@OAuth2AuthorizationContext.Builder contextBuilder @AT@ 7570 @LENGTH@ 14
---INS ReturnStatement@@SimpleName:authorizationContext @TO@ MethodDeclaration@@private, OAuth2AuthorizationContext, MethodName:buildAuthorizationContext, OAuth2AuthorizeRequest authorizeRequest, Authentication principal, OAuth2AuthorizationContext.Builder contextBuilder,  @AT@ 7934 @LENGTH@ 28
------INS SimpleName@@authorizationContext @TO@ ReturnStatement@@SimpleName:authorizationContext @AT@ 7941 @LENGTH@ 20


UPD TypeDeclaration@@[@UriEndpoint(scheme="as2",firstVersion="2.22.0",title="AS2",syntax="as2:apiName/methodName",apiSyntax="apiName/methodName",category={Category.FILE}), @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle,greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler"), public]AS2Endpoint, AbstractApiEndpoint<AS2ApiName,AS2Configuration> @TO@ [@UriEndpoint(scheme="as2",firstVersion="2.22.0",title="AS2",syntax="as2:apiName/methodName",apiSyntax="apiName/methodName",category={Category.FILE}), @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle" + ",greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler"), public]AS2Endpoint, AbstractApiEndpoint<AS2ApiName,AS2Configuration> @AT@ 2444 @LENGTH@ 8010
---UPD NormalAnnotation@@@Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle,greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler") @TO@ @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle" + ",greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler") @AT@ 2638 @LENGTH@ 297


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Bye World") @TO@ MethodInvocation:exchange.getMessage().setBody("Bye World") @AT@ 2270 @LENGTH@ 39
---UPD MethodInvocation@@exchange.getOut().setBody("Bye World") @TO@ exchange.getMessage().setBody("Bye World") @AT@ 2270 @LENGTH@ 38
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2270 @LENGTH@ 17


UPD MethodDeclaration@@public, Statement, MethodName:createRelationshipRemoveQuery, Neo4jPersistentEntity<?> neo4jPersistentEntity, RelationshipDescription relationshipDescription, Neo4jPersistentEntity relatedNode,  @TO@ public, Statement, MethodName:prepareDeleteOf, Neo4jPersistentEntity<?> neo4jPersistentEntity, RelationshipDescription relationshipDescription,  @AT@ 13715 @LENGTH@ 1359
---UPD SimpleName@@MethodName:createRelationshipRemoveQuery @TO@ MethodName:prepareDeleteOf @AT@ 13732 @LENGTH@ 29
---DEL SingleVariableDeclaration@@Neo4jPersistentEntity relatedNode @AT@ 13862 @LENGTH@ 33
------DEL SimpleType@@Neo4jPersistentEntity @AT@ 13862 @LENGTH@ 21
------DEL SimpleName@@relatedNode @AT@ 13884 @LENGTH@ 11
---INS VariableDeclarationStatement@@NodeDescription<?> target=relationshipDescription.getTarget(); @TO@ MethodDeclaration@@public, Statement, MethodName:createRelationshipRemoveQuery, Neo4jPersistentEntity<?> neo4jPersistentEntity, RelationshipDescription relationshipDescription, Neo4jPersistentEntity relatedNode,  @AT@ 14082 @LENGTH@ 64
------INS ParameterizedType@@NodeDescription<?> @TO@ VariableDeclarationStatement@@NodeDescription<?> target=relationshipDescription.getTarget(); @AT@ 14082 @LENGTH@ 18
---------INS SimpleType@@NodeDescription @TO@ ParameterizedType@@NodeDescription<?> @AT@ 14082 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@NodeDescription<?> @AT@ 14098 @LENGTH@ 1
------INS VariableDeclarationFragment@@target=relationshipDescription.getTarget() @TO@ VariableDeclarationStatement@@NodeDescription<?> target=relationshipDescription.getTarget(); @AT@ 14101 @LENGTH@ 44
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=relationshipDescription.getTarget() @AT@ 14101 @LENGTH@ 6
---------INS MethodInvocation@@relationshipDescription.getTarget() @TO@ VariableDeclarationFragment@@target=relationshipDescription.getTarget() @AT@ 14110 @LENGTH@ 35
------------INS SimpleName@@Name:relationshipDescription @TO@ MethodInvocation@@relationshipDescription.getTarget() @AT@ 14110 @LENGTH@ 23
------------INS SimpleName@@MethodName:getTarget:[] @TO@ MethodInvocation@@relationshipDescription.getTarget() @AT@ 14134 @LENGTH@ 11
---UPD VariableDeclarationStatement@@final Node endNode=node(relatedNode.getPrimaryLabel(),relatedNode.getAdditionalLabels()); @TO@ Node endNode=node(target.getPrimaryLabel(),target.getAdditionalLabels()); @AT@ 14125 @LENGTH@ 92
------DEL Modifier@@final @AT@ 14125 @LENGTH@ 5
------UPD VariableDeclarationFragment@@endNode=node(relatedNode.getPrimaryLabel(),relatedNode.getAdditionalLabels()) @TO@ endNode=node(target.getPrimaryLabel(),target.getAdditionalLabels()) @AT@ 14136 @LENGTH@ 80
---------UPD MethodInvocation@@node(relatedNode.getPrimaryLabel(),relatedNode.getAdditionalLabels()) @TO@ node(target.getPrimaryLabel(),target.getAdditionalLabels()) @AT@ 14146 @LENGTH@ 70
------------UPD SimpleName@@MethodName:node:[relatedNode.getPrimaryLabel(), relatedNode.getAdditionalLabels()] @TO@ MethodName:node:[target.getPrimaryLabel(), target.getAdditionalLabels()] @AT@ 14146 @LENGTH@ 70
---------------UPD MethodInvocation@@relatedNode.getPrimaryLabel() @TO@ target.getPrimaryLabel() @AT@ 14151 @LENGTH@ 29
------------------UPD SimpleName@@Name:relatedNode @TO@ Name:target @AT@ 14151 @LENGTH@ 11
---------------UPD MethodInvocation@@relatedNode.getAdditionalLabels() @TO@ target.getAdditionalLabels() @AT@ 14182 @LENGTH@ 33
------------------UPD SimpleName@@Name:relatedNode @TO@ Name:target @AT@ 14182 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2003 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2003 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2003 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2014 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2021 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:System.setProperty("server-port",new Integer(serverPort).toString()) @TO@ MethodInvocation:System.setProperty("server-port",Integer.valueOf(serverPort).toString()) @AT@ 1952 @LENGTH@ 70
---UPD MethodInvocation@@System.setProperty("server-port",new Integer(serverPort).toString()) @TO@ System.setProperty("server-port",Integer.valueOf(serverPort).toString()) @AT@ 1952 @LENGTH@ 69
------UPD SimpleName@@MethodName:setProperty:["server-port", new Integer(serverPort).toString()] @TO@ MethodName:setProperty:["server-port", Integer.valueOf(serverPort).toString()] @AT@ 1959 @LENGTH@ 62
---------UPD MethodInvocation@@new Integer(serverPort).toString() @TO@ Integer.valueOf(serverPort).toString() @AT@ 1986 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:valueOf:[serverPort] @TO@ MethodInvocation@@new Integer(serverPort).toString() @AT@ 1986 @LENGTH@ 27
---------------INS SimpleName@@serverPort @TO@ MethodInvocation@@MethodName:valueOf:[serverPort] @AT@ 2002 @LENGTH@ 10
------------DEL ClassInstanceCreation@@Integer[serverPort] @AT@ 1986 @LENGTH@ 23
---------------DEL New@@new @AT@ 1986 @LENGTH@ 3
---------------DEL SimpleType@@Integer @AT@ 1990 @LENGTH@ 7
---------------DEL SimpleName@@serverPort @AT@ 1998 @LENGTH@ 10
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(serverPort).toString() @AT@ 1986 @LENGTH@ 7


UPD TryStatement@@try {  Object proceed=context.proceed();  countdown.countDown();  return proceed;} catch (Exception e) {  throw e;} finally {  StartupCountdown.restore(frame);} @TO@ try {  Object proceed=context.proceed();  countdown.countDown();  return proceed;}  finally {  StartupCountdown.restore(frame);} @AT@ 787 @LENGTH@ 237
---DEL CatchClause@@catch (Exception e) {  throw e;} @AT@ 892 @LENGTH@ 77
------DEL SingleVariableDeclaration@@Exception e @AT@ 899 @LENGTH@ 11
---------DEL SimpleType@@Exception @AT@ 899 @LENGTH@ 9
---------DEL SimpleName@@e @AT@ 909 @LENGTH@ 1
------DEL ThrowStatement@@SimpleName:e @AT@ 955 @LENGTH@ 8
---------DEL SimpleName@@e @AT@ 961 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:Mono.zip(defaultedRegistrationId,defaultedAuthentication,defaultedExchange).map((t3) -> OAuth2AuthorizeRequest.withClientRegistrationId(t3.getT1()).principal(t3.getT2()).attribute(ServerWebExchange.class.getName(),t3.getT3()).build()) @TO@ MethodInvocation:Mono.zip(defaultedRegistrationId,defaultedAuthentication,defaultedExchange).map((zipped) -> OAuth2AuthorizeRequest.withClientRegistrationId(zipped.getT1()).principal(zipped.getT2()).attribute(ServerWebExchange.class.getName(),zipped.getT3()).build()) @AT@ 5953 @LENGTH@ 257
---UPD MethodInvocation@@Mono.zip(defaultedRegistrationId,defaultedAuthentication,defaultedExchange).map((t3) -> OAuth2AuthorizeRequest.withClientRegistrationId(t3.getT1()).principal(t3.getT2()).attribute(ServerWebExchange.class.getName(),t3.getT3()).build()) @TO@ Mono.zip(defaultedRegistrationId,defaultedAuthentication,defaultedExchange).map((zipped) -> OAuth2AuthorizeRequest.withClientRegistrationId(zipped.getT1()).principal(zipped.getT2()).attribute(ServerWebExchange.class.getName(),zipped.getT3()).build()) @AT@ 5960 @LENGTH@ 249
------UPD SimpleName@@MethodName:map:[(t3) -> OAuth2AuthorizeRequest.withClientRegistrationId(t3.getT1()).principal(t3.getT2()).attribute(ServerWebExchange.class.getName(),t3.getT3()).build()] @TO@ MethodName:map:[(zipped) -> OAuth2AuthorizeRequest.withClientRegistrationId(zipped.getT1()).principal(zipped.getT2()).attribute(ServerWebExchange.class.getName(),zipped.getT3()).build()] @AT@ 6043 @LENGTH@ 166
---------UPD LambdaExpression@@(t3) -> OAuth2AuthorizeRequest.withClientRegistrationId(t3.getT1()).principal(t3.getT2()).attribute(ServerWebExchange.class.getName(),t3.getT3()).build() @TO@ (zipped) -> OAuth2AuthorizeRequest.withClientRegistrationId(zipped.getT1()).principal(zipped.getT2()).attribute(ServerWebExchange.class.getName(),zipped.getT3()).build() @AT@ 6047 @LENGTH@ 161
------------UPD VariableDeclarationFragment@@t3 @TO@ zipped @AT@ 6048 @LENGTH@ 2
---------------UPD SimpleName@@t3 @TO@ zipped @AT@ 6048 @LENGTH@ 2
------------UPD MethodInvocation@@OAuth2AuthorizeRequest.withClientRegistrationId(t3.getT1()).principal(t3.getT2()).attribute(ServerWebExchange.class.getName(),t3.getT3()).build() @TO@ OAuth2AuthorizeRequest.withClientRegistrationId(zipped.getT1()).principal(zipped.getT2()).attribute(ServerWebExchange.class.getName(),zipped.getT3()).build() @AT@ 6055 @LENGTH@ 153
---------------UPD MethodInvocation@@MethodName:attribute:[ServerWebExchange.class.getName(), t3.getT3()] @TO@ MethodName:attribute:[ServerWebExchange.class.getName(), zipped.getT3()] @AT@ 6055 @LENGTH@ 145
------------------UPD MethodInvocation@@t3.getT3() @TO@ zipped.getT3() @AT@ 6189 @LENGTH@ 10
---------------------UPD SimpleName@@Name:t3 @TO@ Name:zipped @AT@ 6189 @LENGTH@ 2
---------------UPD MethodInvocation@@MethodName:principal:[t3.getT2()] @TO@ MethodName:principal:[zipped.getT2()] @AT@ 6055 @LENGTH@ 81
------------------UPD MethodInvocation@@t3.getT2() @TO@ zipped.getT2() @AT@ 6125 @LENGTH@ 10
---------------------UPD SimpleName@@Name:t3 @TO@ Name:zipped @AT@ 6125 @LENGTH@ 2
---------------UPD MethodInvocation@@MethodName:withClientRegistrationId:[t3.getT1()] @TO@ MethodName:withClientRegistrationId:[zipped.getT1()] @AT@ 6055 @LENGTH@ 59
------------------UPD MethodInvocation@@t3.getT1() @TO@ zipped.getT1() @AT@ 6103 @LENGTH@ 10
---------------------UPD SimpleName@@Name:t3 @TO@ Name:zipped @AT@ 6103 @LENGTH@ 2


UPD TryStatement@@try {  fsi.getAccessDecisionManager().decide(token,loginRequest,attributes);} catch (AccessDeniedException ex) {  this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")");}catch (Exception ex) {  this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.",ex);} @TO@ try {  fsi.getAccessDecisionManager().decide(token,loginRequest,attributes);} catch (AccessDeniedException ex) {  this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")");}catch (Exception ex) {  this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances.",ex);} @AT@ 8379 @LENGTH@ 834
---UPD CatchClause@@catch (AccessDeniedException ex) {  this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")");} @TO@ catch (AccessDeniedException ex) {  this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")");} @AT@ 8466 @LENGTH@ 328
------UPD ExpressionStatement@@MethodInvocation:this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")") @TO@ MethodInvocation:this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")") @AT@ 8504 @LENGTH@ 286
---------UPD MethodInvocation@@this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")") @TO@ this.logger.warn("Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")") @AT@ 8504 @LENGTH@ 285
------------UPD SimpleName@@MethodName:warn:["Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")"] @TO@ MethodName:warn:["Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")"] @AT@ 8522 @LENGTH@ 267
---------------UPD InfixExpression@@"Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " + ex + ")" @TO@ "Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " + ex + ")" @AT@ 8527 @LENGTH@ 261
------------------UPD InfixExpression@@"Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " + "an error. Please check your configuration allows unauthenticated access to the configured " + "login page. (Simulated access was rejected: " @TO@ "Anonymous access to the login page doesn't appear to be enabled. " + "This is almost certainly an error. Please check your configuration allows unauthenticated " + "access to the configured login page. (Simulated access was rejected: " @AT@ 8527 @LENGTH@ 250
---------------------UPD StringLiteral@@"Anonymous access to the login page doesn't appear to be enabled. This is almost certainly " @TO@ "Anonymous access to the login page doesn't appear to be enabled. " @AT@ 8527 @LENGTH@ 92
---------------------UPD StringLiteral@@"an error. Please check your configuration allows unauthenticated access to the configured " @TO@ "This is almost certainly an error. Please check your configuration allows unauthenticated " @AT@ 8629 @LENGTH@ 92
---------------------UPD StringLiteral@@"login page. (Simulated access was rejected: " @TO@ "access to the configured login page. (Simulated access was rejected: " @AT@ 8731 @LENGTH@ 46
---UPD CatchClause@@catch (Exception ex) {  this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.",ex);} @TO@ catch (Exception ex) {  this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances.",ex);} @AT@ 8797 @LENGTH@ 416
------UPD ExpressionStatement@@MethodInvocation:this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.",ex) @TO@ MethodInvocation:this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances.",ex) @AT@ 9021 @LENGTH@ 188
---------UPD MethodInvocation@@this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.",ex) @TO@ this.logger.info("Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances.",ex) @AT@ 9021 @LENGTH@ 187
------------UPD SimpleName@@MethodName:info:["Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.", ex] @TO@ MethodName:info:["Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances.", ex] @AT@ 9033 @LENGTH@ 175
---------------INS InfixExpression@@"Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances." @TO@ SimpleName@@MethodName:info:["Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances.", ex] @AT@ 9013 @LENGTH@ 164
------------------INS StringLiteral@@"Unable to check access to the login page to determine if anonymous access is allowed. " @TO@ InfixExpression@@"Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances." @AT@ 9013 @LENGTH@ 88
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances." @AT@ 9101 @LENGTH@ 1
------------------INS StringLiteral@@"This might be an error, but can happen under normal circumstances." @TO@ InfixExpression@@"Unable to check access to the login page to determine if anonymous access is allowed. " + "This might be an error, but can happen under normal circumstances." @AT@ 9109 @LENGTH@ 68
---------------DEL StringLiteral@@"Unable to check access to the login page to determine if anonymous access is allowed. This might be an error, but can happen under normal circumstances." @AT@ 9044 @LENGTH@ 154


MOV ExpressionStatement@@MethodInvocation:reader.setName(this.name) @TO@ MethodDeclaration@@public, StaxEventItemReader<T>, MethodName:build,  @AT@ 7065 @LENGTH@ 26


MOV MethodDeclaration@@public, static, SignatureAlgorithm, MethodName:from, String name,  @TO@ EnumDeclaration@@[public]SignatureAlgorithm, [JwsAlgorithm] @AT@ 2511 @LENGTH@ 182


UPD ExpressionStatement@@MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_WIFE,TypeOfRelative.HAS_DAUGHTER);
  relatives.remove(TypeOfRelative.HAS_WIFE);
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put(TypeOfRelative.HAS_SON,d);
  ReflectionTestUtils.setField(relatives.get(TypeOfRelative.HAS_DAUGHTER),"firstName","C2");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  clubs.remove(TypeOfClub.FOOTBALL);
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put(TypeOfClub.BASEBALL,clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_DAUGHTER,TypeOfRelative.HAS_SON);
  assertThat(relatives.get(TypeOfRelative.HAS_DAUGHTER).getFirstName()).isEqualTo("C2");
  assertThat(relatives.get(TypeOfRelative.HAS_SON).getFirstName()).isEqualTo("D");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys(TypeOfClub.BASEBALL);
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @TO@ MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_WIFE,TypeOfRelative.HAS_DAUGHTER);
  relatives.remove(TypeOfRelative.HAS_WIFE);
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put(TypeOfRelative.HAS_SON,d);
  ReflectionTestUtils.setField(relatives.get(TypeOfRelative.HAS_DAUGHTER),"firstName","C2");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  clubs.remove(TypeOfClub.FOOTBALL);
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put(TypeOfClub.BASEBALL,clubRelationship);
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_DAUGHTER,TypeOfRelative.HAS_SON);
  assertThat(relatives.get(TypeOfRelative.HAS_DAUGHTER).getFirstName()).isEqualTo("C2");
  assertThat(relatives.get(TypeOfRelative.HAS_SON).getFirstName()).isEqualTo("D");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys(TypeOfClub.BASEBALL);
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 5046 @LENGTH@ 1719
---UPD MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_WIFE,TypeOfRelative.HAS_DAUGHTER);
  relatives.remove(TypeOfRelative.HAS_WIFE);
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put(TypeOfRelative.HAS_SON,d);
  ReflectionTestUtils.setField(relatives.get(TypeOfRelative.HAS_DAUGHTER),"firstName","C2");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  clubs.remove(TypeOfClub.FOOTBALL);
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put(TypeOfClub.BASEBALL,clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_DAUGHTER,TypeOfRelative.HAS_SON);
  assertThat(relatives.get(TypeOfRelative.HAS_DAUGHTER).getFirstName()).isEqualTo("C2");
  assertThat(relatives.get(TypeOfRelative.HAS_SON).getFirstName()).isEqualTo("D");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys(TypeOfClub.BASEBALL);
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @TO@ repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_WIFE,TypeOfRelative.HAS_DAUGHTER);
  relatives.remove(TypeOfRelative.HAS_WIFE);
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put(TypeOfRelative.HAS_SON,d);
  ReflectionTestUtils.setField(relatives.get(TypeOfRelative.HAS_DAUGHTER),"firstName","C2");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  clubs.remove(TypeOfClub.FOOTBALL);
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put(TypeOfClub.BASEBALL,clubRelationship);
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_DAUGHTER,TypeOfRelative.HAS_SON);
  assertThat(relatives.get(TypeOfRelative.HAS_DAUGHTER).getFirstName()).isEqualTo("C2");
  assertThat(relatives.get(TypeOfRelative.HAS_SON).getFirstName()).isEqualTo("D");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys(TypeOfClub.BASEBALL);
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 5046 @LENGTH@ 1718
------INS MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @TO@ MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_WIFE,TypeOfRelative.HAS_DAUGHTER);
  relatives.remove(TypeOfRelative.HAS_WIFE);
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put(TypeOfRelative.HAS_SON,d);
  ReflectionTestUtils.setField(relatives.get(TypeOfRelative.HAS_DAUGHTER),"firstName","C2");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  clubs.remove(TypeOfClub.FOOTBALL);
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put(TypeOfClub.BASEBALL,clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfRelative,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys(TypeOfRelative.HAS_DAUGHTER,TypeOfRelative.HAS_SON);
  assertThat(relatives.get(TypeOfRelative.HAS_DAUGHTER).getFirstName()).isEqualTo("C2");
  assertThat(relatives.get(TypeOfRelative.HAS_SON).getFirstName()).isEqualTo("D");
  Map<TypeOfClub,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys(TypeOfClub.BASEBALL);
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get(TypeOfClub.BASEBALL)).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 5064 @LENGTH@ 988
---------INS LambdaExpression@@p -> repository.findById(p.getId()) @TO@ MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @AT@ 6016 @LENGTH@ 35
------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 6016 @LENGTH@ 1
---------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 6016 @LENGTH@ 1
------------INS MethodInvocation@@repository.findById(p.getId()) @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 6021 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 6021 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findById:[p.getId()] @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 6032 @LENGTH@ 19
------------------INS MethodInvocation@@p.getId() @TO@ SimpleName@@MethodName:findById:[p.getId()] @AT@ 6041 @LENGTH@ 9
---------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getId() @AT@ 6041 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@p.getId() @AT@ 6043 @LENGTH@ 7


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2510 @LENGTH@ 635
---DEL Modifier@@public @AT@ 2510 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2517 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2522 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2573 @LENGTH@ 9
---DEL VariableDeclarationStatement@@LambdaClient awsLambdaClient=new AmazonLambdaClientMock(); @AT@ 2594 @LENGTH@ 60
------DEL SimpleType@@LambdaClient @AT@ 2594 @LENGTH@ 12
------DEL VariableDeclarationFragment@@awsLambdaClient=new AmazonLambdaClientMock() @AT@ 2607 @LENGTH@ 46
---------DEL SimpleName@@awsLambdaClient @AT@ 2607 @LENGTH@ 15
---------DEL ClassInstanceCreation@@AmazonLambdaClientMock[] @AT@ 2625 @LENGTH@ 28
------------DEL New@@new @AT@ 2625 @LENGTH@ 3
------------DEL SimpleType@@AmazonLambdaClientMock @AT@ 2629 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("awsLambdaClient",awsLambdaClient) @AT@ 2663 @LENGTH@ 63
------DEL MethodInvocation@@context.getRegistry().bind("awsLambdaClient",awsLambdaClient) @AT@ 2663 @LENGTH@ 62
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2663 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2663 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["awsLambdaClient", awsLambdaClient] @AT@ 2685 @LENGTH@ 40
------------DEL StringLiteral@@"awsLambdaClient" @AT@ 2690 @LENGTH@ 17
------------DEL SimpleName@@awsLambdaClient @AT@ 2709 @LENGTH@ 15
---DEL VariableDeclarationStatement@@Lambda2Component component=context.getComponent("aws2-lambda",Lambda2Component.class); @AT@ 2735 @LENGTH@ 89
------DEL SimpleType@@Lambda2Component @AT@ 2735 @LENGTH@ 16
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-lambda",Lambda2Component.class) @AT@ 2752 @LENGTH@ 71
---------DEL SimpleName@@component @AT@ 2752 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-lambda",Lambda2Component.class) @AT@ 2764 @LENGTH@ 59
------------DEL SimpleName@@Name:context @AT@ 2764 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-lambda", Lambda2Component.class] @AT@ 2772 @LENGTH@ 51
---------------DEL StringLiteral@@"aws2-lambda" @AT@ 2785 @LENGTH@ 13
---------------DEL TypeLiteral@@Lambda2Component.class @AT@ 2800 @LENGTH@ 22
---DEL VariableDeclarationStatement@@Lambda2Endpoint endpoint=(Lambda2Endpoint)component.createEndpoint("aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2833 @LENGTH@ 215
------DEL SimpleType@@Lambda2Endpoint @AT@ 2833 @LENGTH@ 15
------DEL VariableDeclarationFragment@@endpoint=(Lambda2Endpoint)component.createEndpoint("aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2849 @LENGTH@ 198
---------DEL SimpleName@@endpoint @AT@ 2849 @LENGTH@ 8
---------DEL CastExpression@@(Lambda2Endpoint)component.createEndpoint("aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2860 @LENGTH@ 187
------------DEL SimpleType@@Lambda2Endpoint @AT@ 2861 @LENGTH@ 15
------------DEL MethodInvocation@@component.createEndpoint("aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2878 @LENGTH@ 169
---------------DEL SimpleName@@Name:component @AT@ 2878 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2905 @LENGTH@ 142
------------------DEL StringLiteral@@"aws2-lambda://myFunction?operation=getFunction&accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2945 @LENGTH@ 101
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(awsLambdaClient,endpoint.getConfiguration().getAwsLambdaClient()) @AT@ 3058 @LENGTH@ 81
------DEL MethodInvocation@@assertNotSame(awsLambdaClient,endpoint.getConfiguration().getAwsLambdaClient()) @AT@ 3058 @LENGTH@ 80
---------DEL SimpleName@@MethodName:assertNotSame:[awsLambdaClient, endpoint.getConfiguration().getAwsLambdaClient()] @AT@ 3058 @LENGTH@ 80
------------DEL SimpleName@@awsLambdaClient @AT@ 3072 @LENGTH@ 15
------------DEL MethodInvocation@@endpoint.getConfiguration().getAwsLambdaClient() @AT@ 3089 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 3089 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 3089 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAwsLambdaClient:[] @AT@ 3117 @LENGTH@ 20


UPD Block@@ThenBody:{  LOG.debug("Converting metrics to thrift metrics {} ",metrics.size());  int totalMetricsSize=metrics.size();  List<ReplicationMetrics> replicationMetricsList=new ArrayList<>(totalMetricsSize);  for (int index=0; index < totalMetricsSize; index++) {    ReplicationMetric metric=metrics.removeFirst();    ReplicationMetrics persistentMetric=new ReplicationMetrics();    persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());    persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());    persistentMetric.setPolicy(metric.getPolicy());    ObjectMapper mapper=new ObjectMapper();    persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));    persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));    replicationMetricsList.add(persistentMetric);  }  metricList.setReplicationMetricList(replicationMetricsList);  Retry<Void> retriable=new Retry<Void>(Exception.class){    @Override public Void execute() throws Exception {      if (metricList.getReplicationMetricListSize() > 0) {        LOG.debug("Persisting metrics to DB {} ",metricList.getReplicationMetricListSize());        Hive.get(conf).getMSC().addReplicationMetrics(metricList);      }      return null;    }  };  retriable.run();} @TO@ ThenBody:{  LOG.debug("Converting metrics to thrift metrics {} ",metrics.size());  int totalMetricsSize=metrics.size();  List<ReplicationMetrics> replicationMetricsList=new ArrayList<>(totalMetricsSize);  ObjectMapper mapper=new ObjectMapper();  for (int index=0; index < totalMetricsSize; index++) {    ReplicationMetric metric=metrics.removeFirst();    ReplicationMetrics persistentMetric=new ReplicationMetrics();    persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());    persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());    persistentMetric.setPolicy(metric.getPolicy());    persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));    persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));    LOG.debug("Metric to be persisted {} ",persistentMetric);    replicationMetricsList.add(persistentMetric);  }  metricList.setReplicationMetricList(replicationMetricsList);  Retry<Void> retriable=new Retry<Void>(Exception.class){    @Override public Void execute() throws Exception {      if (metricList.getReplicationMetricListSize() > 0) {        LOG.debug("Persisting metrics to DB {} ",metricList.getReplicationMetricListSize());        Hive.get(conf).getMSC().addReplicationMetrics(metricList);      }      return null;    }  };  retriable.run();} @AT@ 3728 @LENGTH@ 1597
---UPD ForStatement@@for (int index=0; index < totalMetricsSize; index++) {  ReplicationMetric metric=metrics.removeFirst();  ReplicationMetrics persistentMetric=new ReplicationMetrics();  persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());  persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());  persistentMetric.setPolicy(metric.getPolicy());  ObjectMapper mapper=new ObjectMapper();  persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));  persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));  replicationMetricsList.add(persistentMetric);} @TO@ for (int index=0; index < totalMetricsSize; index++) {  ReplicationMetric metric=metrics.removeFirst();  ReplicationMetrics persistentMetric=new ReplicationMetrics();  persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());  persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());  persistentMetric.setPolicy(metric.getPolicy());  persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));  persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));  LOG.debug("Metric to be persisted {} ",persistentMetric);  replicationMetricsList.add(persistentMetric);} @AT@ 3965 @LENGTH@ 726
------INS ExpressionStatement@@MethodInvocation:LOG.debug("Metric to be persisted {} ",persistentMetric) @TO@ ForStatement@@for (int index=0; index < totalMetricsSize; index++) {  ReplicationMetric metric=metrics.removeFirst();  ReplicationMetrics persistentMetric=new ReplicationMetrics();  persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());  persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());  persistentMetric.setPolicy(metric.getPolicy());  ObjectMapper mapper=new ObjectMapper();  persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));  persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));  replicationMetricsList.add(persistentMetric);} @AT@ 4632 @LENGTH@ 58
---------INS MethodInvocation@@LOG.debug("Metric to be persisted {} ",persistentMetric) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Metric to be persisted {} ",persistentMetric) @AT@ 4632 @LENGTH@ 57
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Metric to be persisted {} ",persistentMetric) @AT@ 4632 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Metric to be persisted {} ", persistentMetric] @TO@ MethodInvocation@@LOG.debug("Metric to be persisted {} ",persistentMetric) @AT@ 4636 @LENGTH@ 53
---------------INS StringLiteral@@"Metric to be persisted {} " @TO@ SimpleName@@MethodName:debug:["Metric to be persisted {} ", persistentMetric] @AT@ 4642 @LENGTH@ 28
---------------INS SimpleName@@persistentMetric @TO@ SimpleName@@MethodName:debug:["Metric to be persisted {} ", persistentMetric] @AT@ 4672 @LENGTH@ 16
---MOV VariableDeclarationStatement@@ObjectMapper mapper=new ObjectMapper(); @TO@ Block@@ThenBody:{  LOG.debug("Converting metrics to thrift metrics {} ",metrics.size());  int totalMetricsSize=metrics.size();  List<ReplicationMetrics> replicationMetricsList=new ArrayList<>(totalMetricsSize);  for (int index=0; index < totalMetricsSize; index++) {    ReplicationMetric metric=metrics.removeFirst();    ReplicationMetrics persistentMetric=new ReplicationMetrics();    persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());    persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());    persistentMetric.setPolicy(metric.getPolicy());    ObjectMapper mapper=new ObjectMapper();    persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));    persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));    replicationMetricsList.add(persistentMetric);  }  metricList.setReplicationMetricList(replicationMetricsList);  Retry<Void> retriable=new Retry<Void>(Exception.class){    @Override public Void execute() throws Exception {      if (metricList.getReplicationMetricListSize() > 0) {        LOG.debug("Persisting metrics to DB {} ",metricList.getReplicationMetricListSize());        Hive.get(conf).getMSC().addReplicationMetrics(metricList);      }      return null;    }  };  retriable.run();} @AT@ 4398 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("seda:fork","Test Message: " + i,"seqnum",new Long(i)) @TO@ MethodInvocation:template.sendBodyAndHeader("seda:fork","Test Message: " + i,"seqnum",Long.valueOf(i)) @AT@ 2485 @LENGTH@ 85
---UPD MethodInvocation@@template.sendBodyAndHeader("seda:fork","Test Message: " + i,"seqnum",new Long(i)) @TO@ template.sendBodyAndHeader("seda:fork","Test Message: " + i,"seqnum",Long.valueOf(i)) @AT@ 2485 @LENGTH@ 84
------UPD SimpleName@@MethodName:sendBodyAndHeader:["seda:fork", "Test Message: " + i, "seqnum", new Long(i)] @TO@ MethodName:sendBodyAndHeader:["seda:fork", "Test Message: " + i, "seqnum", Long.valueOf(i)] @AT@ 2494 @LENGTH@ 75
---------INS MethodInvocation@@Long.valueOf(i) @TO@ SimpleName@@MethodName:sendBodyAndHeader:["seda:fork", "Test Message: " + i, "seqnum", new Long(i)] @AT@ 2557 @LENGTH@ 15
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(i) @AT@ 2557 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[i] @TO@ MethodInvocation@@Long.valueOf(i) @AT@ 2562 @LENGTH@ 10
---------------INS SimpleName@@i @TO@ SimpleName@@MethodName:valueOf:[i] @AT@ 2570 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Long[i] @AT@ 2557 @LENGTH@ 11
------------DEL New@@new @AT@ 2557 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 2561 @LENGTH@ 4
------------DEL SimpleName@@i @AT@ 2566 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:assertThat((Object)principal.getAttribute("scope")).isNotNull().isInstanceOf(JSONArray.class) @AT@ 11331 @LENGTH@ 95
---DEL MethodInvocation@@assertThat((Object)principal.getAttribute("scope")).isNotNull().isInstanceOf(JSONArray.class) @AT@ 11331 @LENGTH@ 94
------DEL MethodInvocation@@MethodName:isNotNull:[] @AT@ 11331 @LENGTH@ 64
------DEL MethodInvocation@@MethodName:assertThat:[(Object)principal.getAttribute("scope")] @AT@ 11331 @LENGTH@ 52
---------DEL CastExpression@@(Object)principal.getAttribute("scope") @AT@ 11342 @LENGTH@ 40
------------DEL SimpleType@@Object @AT@ 11343 @LENGTH@ 6
------------DEL MethodInvocation@@principal.getAttribute("scope") @AT@ 11351 @LENGTH@ 31
---------------DEL SimpleName@@Name:principal @AT@ 11351 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getAttribute:["scope"] @AT@ 11361 @LENGTH@ 21
------------------DEL StringLiteral@@"scope" @AT@ 11374 @LENGTH@ 7
------DEL SimpleName@@MethodName:isInstanceOf:[JSONArray.class] @AT@ 11396 @LENGTH@ 29
---------DEL TypeLiteral@@JSONArray.class @AT@ 11409 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals(entry.getValue(),span.getAttributes().get(entry.getKey())) @TO@ MethodInvocation:assertEquals(entry.getValue(),span.getAttributes().get(entry.getKey()).getStringValue()) @AT@ 6617 @LENGTH@ 73
---UPD MethodInvocation@@assertEquals(entry.getValue(),span.getAttributes().get(entry.getKey())) @TO@ assertEquals(entry.getValue(),span.getAttributes().get(entry.getKey()).getStringValue()) @AT@ 6617 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertEquals:[entry.getValue(), span.getAttributes().get(entry.getKey())] @TO@ MethodName:assertEquals:[entry.getValue(), span.getAttributes().get(entry.getKey()).getStringValue()] @AT@ 6617 @LENGTH@ 72
---------UPD MethodInvocation@@span.getAttributes().get(entry.getKey()) @TO@ span.getAttributes().get(entry.getKey()).getStringValue() @AT@ 6648 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:get:[entry.getKey()] @TO@ MethodInvocation@@span.getAttributes().get(entry.getKey()) @AT@ 6648 @LENGTH@ 40
---------------INS MethodInvocation@@entry.getKey() @TO@ MethodInvocation@@MethodName:get:[entry.getKey()] @AT@ 6673 @LENGTH@ 14
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 6673 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 6679 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:get:[entry.getKey()] @TO@ MethodInvocation@@span.getAttributes().get(entry.getKey()) @AT@ 6648 @LENGTH@ 40
---------------INS MethodInvocation@@entry.getKey() @TO@ MethodInvocation@@MethodName:get:[entry.getKey()] @AT@ 6673 @LENGTH@ 14
------------------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 6673 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 6679 @LENGTH@ 8
------------DEL SimpleName@@MethodName:get:[entry.getKey()] @AT@ 6669 @LENGTH@ 19
---------------DEL MethodInvocation@@entry.getKey() @AT@ 6673 @LENGTH@ 14
------------INS SimpleName@@MethodName:getStringValue:[] @TO@ MethodInvocation@@span.getAttributes().get(entry.getKey()) @AT@ 6689 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar").to("mock:result") @AT@ 2542 @LENGTH@ 135
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar").to("mock:result") @AT@ 2542 @LENGTH@ 134
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=queue:bar"] @AT@ 2542 @LENGTH@ 91
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar"] @AT@ 2632 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2632 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2648 @LENGTH@ 5


UPD TypeDeclaration@@[public]MockOpenIDConsumer, [OpenIDConsumer] @TO@ [@Deprecated, public]MockOpenIDConsumer, [OpenIDConsumer] @AT@ 1071 @LENGTH@ 1166
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]MockOpenIDConsumer, [OpenIDConsumer] @AT@ 1071 @LENGTH@ 11


DEL IfStatement@@if (deploymentUnit.getParent() == null) {  deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,new StartupCountdown(startupBeansCount));} else {  final StartupCountdown countdown=deploymentUnit.getParent().getAttachment(Attachments.STARTUP_COUNTDOWN);  deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,countdown);  countdown.countUp(startupBeansCount);} @AT@ 3196 @LENGTH@ 480
---DEL InfixExpression@@deploymentUnit.getParent() == null @AT@ 3200 @LENGTH@ 34
------DEL MethodInvocation@@deploymentUnit.getParent() @AT@ 3200 @LENGTH@ 26
---------DEL SimpleName@@Name:deploymentUnit @AT@ 3200 @LENGTH@ 14
---------DEL SimpleName@@MethodName:getParent:[] @AT@ 3215 @LENGTH@ 11
------DEL Operator@@== @AT@ 3226 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3230 @LENGTH@ 4
---DEL Block@@ThenBody:{  deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,new StartupCountdown(startupBeansCount));} @AT@ 3236 @LENGTH@ 125
------DEL ExpressionStatement@@MethodInvocation:deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,new StartupCountdown(startupBeansCount)) @AT@ 3250 @LENGTH@ 101
---------DEL MethodInvocation@@deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,new StartupCountdown(startupBeansCount)) @AT@ 3250 @LENGTH@ 100
------------DEL SimpleName@@Name:deploymentUnit @AT@ 3250 @LENGTH@ 14
------------DEL SimpleName@@MethodName:putAttachment:[Attachments.STARTUP_COUNTDOWN, new StartupCountdown(startupBeansCount)] @AT@ 3265 @LENGTH@ 85
---------------DEL QualifiedName@@Attachments.STARTUP_COUNTDOWN @AT@ 3279 @LENGTH@ 29
------------------DEL SimpleName@@Attachments @AT@ 3279 @LENGTH@ 11
------------------DEL SimpleName@@STARTUP_COUNTDOWN @AT@ 3291 @LENGTH@ 17
---------------DEL ClassInstanceCreation@@StartupCountdown[startupBeansCount] @AT@ 3310 @LENGTH@ 39
------------------DEL New@@new @AT@ 3310 @LENGTH@ 3
------------------DEL SimpleType@@StartupCountdown @AT@ 3314 @LENGTH@ 16
------------------DEL SimpleName@@startupBeansCount @AT@ 3331 @LENGTH@ 17
---DEL Block@@ElseBody:{  final StartupCountdown countdown=deploymentUnit.getParent().getAttachment(Attachments.STARTUP_COUNTDOWN);  deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,countdown);  countdown.countUp(startupBeansCount);} @AT@ 3367 @LENGTH@ 309
------DEL VariableDeclarationStatement@@final StartupCountdown countdown=deploymentUnit.getParent().getAttachment(Attachments.STARTUP_COUNTDOWN); @AT@ 3381 @LENGTH@ 107
---------DEL Modifier@@final @AT@ 3381 @LENGTH@ 5
---------DEL SimpleType@@StartupCountdown @AT@ 3387 @LENGTH@ 16
---------DEL VariableDeclarationFragment@@countdown=deploymentUnit.getParent().getAttachment(Attachments.STARTUP_COUNTDOWN) @AT@ 3404 @LENGTH@ 83
------------DEL SimpleName@@countdown @AT@ 3404 @LENGTH@ 9
------------DEL MethodInvocation@@deploymentUnit.getParent().getAttachment(Attachments.STARTUP_COUNTDOWN) @AT@ 3416 @LENGTH@ 71
---------------DEL MethodInvocation@@MethodName:getParent:[] @AT@ 3416 @LENGTH@ 26
---------------DEL SimpleName@@Name:deploymentUnit @AT@ 3416 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getAttachment:[Attachments.STARTUP_COUNTDOWN] @AT@ 3443 @LENGTH@ 44
------------------DEL QualifiedName@@Attachments.STARTUP_COUNTDOWN @AT@ 3457 @LENGTH@ 29
---------------------DEL SimpleName@@Attachments @AT@ 3457 @LENGTH@ 11
---------------------DEL SimpleName@@STARTUP_COUNTDOWN @AT@ 3469 @LENGTH@ 17
------DEL ExpressionStatement@@MethodInvocation:deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,countdown) @AT@ 3545 @LENGTH@ 71
---------DEL MethodInvocation@@deploymentUnit.putAttachment(Attachments.STARTUP_COUNTDOWN,countdown) @AT@ 3545 @LENGTH@ 70
------------DEL SimpleName@@Name:deploymentUnit @AT@ 3545 @LENGTH@ 14
------------DEL SimpleName@@MethodName:putAttachment:[Attachments.STARTUP_COUNTDOWN, countdown] @AT@ 3560 @LENGTH@ 55
---------------DEL QualifiedName@@Attachments.STARTUP_COUNTDOWN @AT@ 3574 @LENGTH@ 29
------------------DEL SimpleName@@Attachments @AT@ 3574 @LENGTH@ 11
------------------DEL SimpleName@@STARTUP_COUNTDOWN @AT@ 3586 @LENGTH@ 17
---------------DEL SimpleName@@countdown @AT@ 3605 @LENGTH@ 9
------DEL ExpressionStatement@@MethodInvocation:countdown.countUp(startupBeansCount) @AT@ 3629 @LENGTH@ 37
---------DEL MethodInvocation@@countdown.countUp(startupBeansCount) @AT@ 3629 @LENGTH@ 36
------------DEL SimpleName@@Name:countdown @AT@ 3629 @LENGTH@ 9
------------DEL SimpleName@@MethodName:countUp:[startupBeansCount] @AT@ 3639 @LENGTH@ 26
---------------DEL SimpleName@@startupBeansCount @AT@ 3647 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(ids[1],"run1") @TO@ MethodInvocation:assertEquals("run1",ids[1]) @AT@ 6329 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(ids[1],"run1") @TO@ assertEquals("run1",ids[1]) @AT@ 6329 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[ids[1], "run1"] @TO@ MethodName:assertEquals:["run1", ids[1]] @AT@ 6329 @LENGTH@ 28
---------INS StringLiteral@@"run1" @TO@ SimpleName@@MethodName:assertEquals:[ids[1], "run1"] @AT@ 6342 @LENGTH@ 6
---------DEL StringLiteral@@"run1" @AT@ 6350 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:Assert.state(this.securityBuilder != null,"securityBuilder cannot be null") @TO@ MethodDeclaration@@protected, final, B, MethodName:getBuilder,  @AT@ 2227 @LENGTH@ 77
---INS MethodInvocation@@Assert.state(this.securityBuilder != null,"securityBuilder cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(this.securityBuilder != null,"securityBuilder cannot be null") @AT@ 2227 @LENGTH@ 76
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(this.securityBuilder != null,"securityBuilder cannot be null") @AT@ 2227 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[this.securityBuilder != null, "securityBuilder cannot be null"] @TO@ MethodInvocation@@Assert.state(this.securityBuilder != null,"securityBuilder cannot be null") @AT@ 2234 @LENGTH@ 69
---------INS InfixExpression@@this.securityBuilder != null @TO@ SimpleName@@MethodName:state:[this.securityBuilder != null, "securityBuilder cannot be null"] @AT@ 2240 @LENGTH@ 28
------------MOV FieldAccess@@this.securityBuilder @TO@ InfixExpression@@this.securityBuilder != null @AT@ 2191 @LENGTH@ 20
------------MOV Operator@@== @TO@ InfixExpression@@this.securityBuilder != null @AT@ 2211 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@this.securityBuilder != null @AT@ 2215 @LENGTH@ 4
---------INS StringLiteral@@"securityBuilder cannot be null" @TO@ SimpleName@@MethodName:state:[this.securityBuilder != null, "securityBuilder cannot be null"] @AT@ 2270 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:doUnsubscribe(true,new byte[0]) @TO@ MethodInvocation:doUnsubscribe(true) @AT@ 2451 @LENGTH@ 33
---UPD MethodInvocation@@doUnsubscribe(true,new byte[0]) @TO@ doUnsubscribe(true) @AT@ 2451 @LENGTH@ 32
------UPD SimpleName@@MethodName:doUnsubscribe:[true, new byte[0]] @TO@ MethodName:doUnsubscribe:[true] @AT@ 2451 @LENGTH@ 32
---------DEL ArrayCreation@@new byte[0] @AT@ 2471 @LENGTH@ 11
------------DEL ArrayType@@byte[] @AT@ 2475 @LENGTH@ 7
---------------DEL PrimitiveType@@byte @AT@ 2475 @LENGTH@ 4
------------DEL NumberLiteral@@0 @AT@ 2480 @LENGTH@ 1


INS TryStatement@@try {  this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class));} catch (NoSuchBeanDefinitionException e) {} @TO@ MethodDeclaration@@public, void, MethodName:setApplicationContext, ApplicationContext applicationContext, BeansException,  @AT@ 14613 @LENGTH@ 163
---INS ExpressionStatement@@MethodInvocation:this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class)) @TO@ TryStatement@@try {  this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class));} catch (NoSuchBeanDefinitionException e) {} @AT@ 14622 @LENGTH@ 107
------INS MethodInvocation@@this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class)) @TO@ ExpressionStatement@@MethodInvocation:this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class)) @AT@ 14622 @LENGTH@ 106
---------INS FieldAccess@@this.defaultWebSecurityExpressionHandler @TO@ MethodInvocation@@this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class)) @AT@ 14622 @LENGTH@ 40
------------INS ThisExpression@@this @TO@ FieldAccess@@this.defaultWebSecurityExpressionHandler @AT@ 14622 @LENGTH@ 4
------------INS SimpleName@@defaultWebSecurityExpressionHandler @TO@ FieldAccess@@this.defaultWebSecurityExpressionHandler @AT@ 14627 @LENGTH@ 35
---------INS SimpleName@@MethodName:setRoleHierarchy:[applicationContext.getBean(RoleHierarchy.class)] @TO@ MethodInvocation@@this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class)) @AT@ 14663 @LENGTH@ 65
------------INS MethodInvocation@@applicationContext.getBean(RoleHierarchy.class) @TO@ SimpleName@@MethodName:setRoleHierarchy:[applicationContext.getBean(RoleHierarchy.class)] @AT@ 14680 @LENGTH@ 47
---------------INS SimpleName@@Name:applicationContext @TO@ MethodInvocation@@applicationContext.getBean(RoleHierarchy.class) @AT@ 14680 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getBean:[RoleHierarchy.class] @TO@ MethodInvocation@@applicationContext.getBean(RoleHierarchy.class) @AT@ 14699 @LENGTH@ 28
------------------INS TypeLiteral@@RoleHierarchy.class @TO@ SimpleName@@MethodName:getBean:[RoleHierarchy.class] @AT@ 14707 @LENGTH@ 19
---INS CatchClause@@catch (NoSuchBeanDefinitionException e) {} @TO@ TryStatement@@try {  this.defaultWebSecurityExpressionHandler.setRoleHierarchy(applicationContext.getBean(RoleHierarchy.class));} catch (NoSuchBeanDefinitionException e) {} @AT@ 14734 @LENGTH@ 42
------INS SingleVariableDeclaration@@NoSuchBeanDefinitionException e @TO@ CatchClause@@catch (NoSuchBeanDefinitionException e) {} @AT@ 14741 @LENGTH@ 31
---------INS SimpleType@@NoSuchBeanDefinitionException @TO@ SingleVariableDeclaration@@NoSuchBeanDefinitionException e @AT@ 14741 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NoSuchBeanDefinitionException e @AT@ 14771 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").setHeader("foo",constant("bar")).convertBodyTo(Integer.class).to("bean:order").inOnly("seda:foo").transform(constant("OK")) @TO@ MethodInvocation:from("direct:start").setHeader("foo",constant("bar")).convertBodyTo(Integer.class).to("bean:order").to(ExchangePattern.InOnly,"seda:foo").transform(constant("OK")) @AT@ 2012 @LENGTH@ 171
---UPD MethodInvocation@@from("direct:start").setHeader("foo",constant("bar")).convertBodyTo(Integer.class).to("bean:order").inOnly("seda:foo").transform(constant("OK")) @TO@ from("direct:start").setHeader("foo",constant("bar")).convertBodyTo(Integer.class).to("bean:order").to(ExchangePattern.InOnly,"seda:foo").transform(constant("OK")) @AT@ 2012 @LENGTH@ 170
------UPD MethodInvocation@@MethodName:inOnly:["seda:foo"] @TO@ MethodName:to:[ExchangePattern.InOnly, "seda:foo"] @AT@ 2012 @LENGTH@ 144
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:["seda:foo"] @AT@ 2182 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2182 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2198 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(0),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted all 3 rows") @TO@ MethodInvocation:assertEquals(Integer.valueOf(0),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted all 3 rows") @AT@ 3277 @LENGTH@ 156
---UPD MethodInvocation@@assertEquals(new Integer(0),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted all 3 rows") @TO@ assertEquals(Integer.valueOf(0),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted all 3 rows") @AT@ 3277 @LENGTH@ 155
------UPD SimpleName@@MethodName:assertEquals:[new Integer(0), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted all 3 rows"] @TO@ MethodName:assertEquals:[Integer.valueOf(0), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted all 3 rows"] @AT@ 3277 @LENGTH@ 155
---------INS MethodInvocation@@Integer.valueOf(0) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(0), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted all 3 rows"] @AT@ 3290 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(0) @AT@ 3290 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[0] @TO@ MethodInvocation@@Integer.valueOf(0) @AT@ 3298 @LENGTH@ 10
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:valueOf:[0] @AT@ 3306 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[0] @AT@ 3290 @LENGTH@ 14
------------DEL New@@new @AT@ 3290 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 3294 @LENGTH@ 7
------------DEL NumberLiteral@@0 @AT@ 3302 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:responseGenerator?transferExchange=true").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:responseGenerator?transferExchange=true").to("mock:result") @AT@ 5202 @LENGTH@ 147
---UPD MethodInvocation@@from("direct:start").inOut("activemq:responseGenerator?transferExchange=true").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:responseGenerator?transferExchange=true").to("mock:result") @AT@ 5202 @LENGTH@ 146
------UPD MethodInvocation@@MethodName:inOut:["activemq:responseGenerator?transferExchange=true"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:responseGenerator?transferExchange=true"] @AT@ 5202 @LENGTH@ 103
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:responseGenerator?transferExchange=true"] @AT@ 5292 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 5292 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 5308 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(gitDir.exists(),true) @TO@ MethodInvocation:assertEquals(true,gitDir.exists()) @AT@ 2043 @LENGTH@ 36
---UPD MethodInvocation@@assertEquals(gitDir.exists(),true) @TO@ assertEquals(true,gitDir.exists()) @AT@ 2043 @LENGTH@ 35
------UPD SimpleName@@MethodName:assertEquals:[gitDir.exists(), true] @TO@ MethodName:assertEquals:[true, gitDir.exists()] @AT@ 2043 @LENGTH@ 35
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[gitDir.exists(), true] @AT@ 2056 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2073 @LENGTH@ 4


UPD TypeDeclaration@@[public]OpenIDAuthenticationProvider, [AuthenticationProvider, InitializingBean] @TO@ [@Deprecated, public]OpenIDAuthenticationProvider, [AuthenticationProvider, InitializingBean] @AT@ 2775 @LENGTH@ 3755
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAuthenticationProvider, [AuthenticationProvider, InitializingBean] @AT@ 2775 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 3096 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 3096 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 3096 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 3107 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3114 @LENGTH@ 21


MOV ExpressionStatement@@MethodInvocation:logger.debug("Pre-authenticated entry point called. Rejecting access") @TO@ MethodDeclaration@@public, void, MethodName:commence, HttpServletRequest request, HttpServletResponse response, AuthenticationException arg2, IOException,  @AT@ 2229 @LENGTH@ 71


UPD ReturnStatement@@ClassInstanceCreation:new RepositoryComposition(metadata,RepositoryFragments.empty(),MethodLookups.direct(),PASSTHRU_ARG_CONVERTER) @TO@ ClassInstanceCreation:new RepositoryComposition(metadata,RepositoryFragments.empty(),MethodLookups.forRepositoryTypes(metadata),PASSTHRU_ARG_CONVERTER) @AT@ 5544 @LENGTH@ 124
---UPD ClassInstanceCreation@@RepositoryComposition[metadata, RepositoryFragments.empty(), MethodLookups.direct(), PASSTHRU_ARG_CONVERTER] @TO@ RepositoryComposition[metadata, RepositoryFragments.empty(), MethodLookups.forRepositoryTypes(metadata), PASSTHRU_ARG_CONVERTER] @AT@ 5551 @LENGTH@ 116
------UPD MethodInvocation@@MethodLookups.direct() @TO@ MethodLookups.forRepositoryTypes(metadata) @AT@ 5616 @LENGTH@ 22
---------UPD SimpleName@@MethodName:direct:[] @TO@ MethodName:forRepositoryTypes:[metadata] @AT@ 5630 @LENGTH@ 8
------------INS SimpleName@@metadata @TO@ SimpleName@@MethodName:direct:[] @AT@ 5649 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:this.conversionService.addConverter(this) @TO@ MethodDeclaration@@public, voidMethodName:DomainClassConverter, T conversionService,  @AT@ 2711 @LENGTH@ 42
---INS MethodInvocation@@this.conversionService.addConverter(this) @TO@ ExpressionStatement@@MethodInvocation:this.conversionService.addConverter(this) @AT@ 2711 @LENGTH@ 41
------INS FieldAccess@@this.conversionService @TO@ MethodInvocation@@this.conversionService.addConverter(this) @AT@ 2711 @LENGTH@ 22
---------INS ThisExpression@@this @TO@ FieldAccess@@this.conversionService @AT@ 2711 @LENGTH@ 4
---------INS SimpleName@@conversionService @TO@ FieldAccess@@this.conversionService @AT@ 2716 @LENGTH@ 17
------INS SimpleName@@MethodName:addConverter:[this] @TO@ MethodInvocation@@this.conversionService.addConverter(this) @AT@ 2734 @LENGTH@ 18
---------INS ThisExpression@@this @TO@ SimpleName@@MethodName:addConverter:[this] @AT@ 2747 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EE_STARTUP_COUNTDOWN,new EEStartupCountdownProcessor()) @TO@ MethodDeclaration@@protected, void, MethodName:execute, DeploymentProcessorTarget processorTarget,  @AT@ 17626 @LENGTH@ 161
---INS MethodInvocation@@processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EE_STARTUP_COUNTDOWN,new EEStartupCountdownProcessor()) @TO@ ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EE_STARTUP_COUNTDOWN,new EEStartupCountdownProcessor()) @AT@ 17626 @LENGTH@ 160
------INS SimpleName@@Name:processorTarget @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EE_STARTUP_COUNTDOWN,new EEStartupCountdownProcessor()) @AT@ 17626 @LENGTH@ 15
------INS SimpleName@@MethodName:addDeploymentProcessor:[EeExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_EE_STARTUP_COUNTDOWN, new EEStartupCountdownProcessor()] @TO@ MethodInvocation@@processorTarget.addDeploymentProcessor(EeExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EE_STARTUP_COUNTDOWN,new EEStartupCountdownProcessor()) @AT@ 17642 @LENGTH@ 144
---------INS QualifiedName@@EeExtension.SUBSYSTEM_NAME @TO@ SimpleName@@MethodName:addDeploymentProcessor:[EeExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_EE_STARTUP_COUNTDOWN, new EEStartupCountdownProcessor()] @AT@ 17665 @LENGTH@ 26
------------INS SimpleName@@EeExtension @TO@ QualifiedName@@EeExtension.SUBSYSTEM_NAME @AT@ 17665 @LENGTH@ 11
------------INS SimpleName@@SUBSYSTEM_NAME @TO@ QualifiedName@@EeExtension.SUBSYSTEM_NAME @AT@ 17677 @LENGTH@ 14
---------INS QualifiedName@@Phase.POST_MODULE @TO@ SimpleName@@MethodName:addDeploymentProcessor:[EeExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_EE_STARTUP_COUNTDOWN, new EEStartupCountdownProcessor()] @AT@ 17693 @LENGTH@ 17
------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 17693 @LENGTH@ 5
------------INS SimpleName@@POST_MODULE @TO@ QualifiedName@@Phase.POST_MODULE @AT@ 17699 @LENGTH@ 11
---------INS QualifiedName@@Phase.POST_MODULE_EE_STARTUP_COUNTDOWN @TO@ SimpleName@@MethodName:addDeploymentProcessor:[EeExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_EE_STARTUP_COUNTDOWN, new EEStartupCountdownProcessor()] @AT@ 17712 @LENGTH@ 38
------------INS SimpleName@@Phase @TO@ QualifiedName@@Phase.POST_MODULE_EE_STARTUP_COUNTDOWN @AT@ 17712 @LENGTH@ 5
------------INS SimpleName@@POST_MODULE_EE_STARTUP_COUNTDOWN @TO@ QualifiedName@@Phase.POST_MODULE_EE_STARTUP_COUNTDOWN @AT@ 17718 @LENGTH@ 32
---------INS ClassInstanceCreation@@EEStartupCountdownProcessor[] @TO@ SimpleName@@MethodName:addDeploymentProcessor:[EeExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_EE_STARTUP_COUNTDOWN, new EEStartupCountdownProcessor()] @AT@ 17752 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@EEStartupCountdownProcessor[] @AT@ 17752 @LENGTH@ 3
------------INS SimpleType@@EEStartupCountdownProcessor @TO@ ClassInstanceCreation@@EEStartupCountdownProcessor[] @AT@ 17756 @LENGTH@ 27


UPD VariableDeclarationStatement@@final Reader reader=new TestNullReader(100,true,false); @TO@ @SuppressWarnings("resource") final Reader reader=new TestNullReader(100,true,false); @AT@ 4133 @LENGTH@ 59


INS MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @TO@ TypeDeclaration@@[@Nested]FindWithRelationships, ReactiveIntegrationTestBase @AT@ 33413 @LENGTH@ 646
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33408 @LENGTH@ 4
---INS SimpleName@@MethodName:findEntityWithSelfReferencesInBothDirections @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33413 @LENGTH@ 44
---INS SingleVariableDeclaration@@@Autowired ReactivePetRepository repository @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33458 @LENGTH@ 43
------INS SimpleType@@ReactivePetRepository @TO@ SingleVariableDeclaration@@@Autowired ReactivePetRepository repository @AT@ 33469 @LENGTH@ 21
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired ReactivePetRepository repository @AT@ 33491 @LENGTH@ 10
---INS VariableDeclarationStatement@@long petId; @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33509 @LENGTH@ 11
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long petId; @AT@ 33509 @LENGTH@ 4
------INS VariableDeclarationFragment@@petId @TO@ VariableDeclarationStatement@@long petId; @AT@ 33514 @LENGTH@ 5
---------INS SimpleName@@petId @TO@ VariableDeclarationFragment@@petId @AT@ 33514 @LENGTH@ 5
---INS TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33525 @LENGTH@ 243
------INS VariableDeclarationExpression@@Session session=createSession() @TO@ TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @AT@ 33530 @LENGTH@ 33
---------INS SimpleType@@Session @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 33530 @LENGTH@ 7
---------INS VariableDeclarationFragment@@session=createSession() @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 33538 @LENGTH@ 25
------------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 33538 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:createSession:[] @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 33548 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ TryStatement@@try (Session session=createSession()){  petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong();}  @AT@ 33571 @LENGTH@ 192
---------INS Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ ExpressionStatement@@Assignment:petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33571 @LENGTH@ 191
------------INS SimpleName@@petId @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33571 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33576 @LENGTH@ 1
------------INS MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @TO@ Assignment@@petId=session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33579 @LENGTH@ 183
---------------INS MethodInvocation@@MethodName:get:["id"] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33579 @LENGTH@ 174
------------------INS StringLiteral@@"id" @TO@ MethodInvocation@@MethodName:get:["id"] @AT@ 33748 @LENGTH@ 4
---------------INS MethodInvocation@@MethodName:single:[] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33579 @LENGTH@ 164
---------------INS MethodInvocation@@MethodName:run:["CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id"] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33579 @LENGTH@ 155
------------------INS InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @TO@ MethodInvocation@@MethodName:run:["CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id"] @AT@ 33591 @LENGTH@ 142
---------------------INS StringLiteral@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 33591 @LENGTH@ 68
---------------------INS Operator@@+ @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 33659 @LENGTH@ 1
---------------------INS StringLiteral@@"-[:Has]->(luna2:Pet{name:'Luna'})" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 33667 @LENGTH@ 35
---------------------INS StringLiteral@@"RETURN id(luna) as id" @TO@ InfixExpression@@"CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id" @AT@ 33710 @LENGTH@ 23
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33579 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asLong:[] @TO@ MethodInvocation@@session.run("CREATE (luna:Pet{name:'Luna'})-[:Has]->(daphne:Pet{name:'Daphne'})" + "-[:Has]->(luna2:Pet{name:'Luna'})" + "RETURN id(luna) as id").single().get("id").asLong() @AT@ 33754 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:findEntityWithSelfReferencesInBothDirections, @Autowired ReactivePetRepository repository,  @AT@ 33773 @LENGTH@ 282
------INS MethodInvocation@@StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @AT@ 33773 @LENGTH@ 281
---------INS MethodInvocation@@MethodName:assertNext:[loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
] @TO@ MethodInvocation@@StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @AT@ 33773 @LENGTH@ 259
------------INS LambdaExpression@@loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
 @TO@ MethodInvocation@@MethodName:assertNext:[loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
] @AT@ 33837 @LENGTH@ 194
---------------INS VariableDeclarationFragment@@loadedPet @TO@ LambdaExpression@@loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
 @AT@ 33837 @LENGTH@ 9
------------------INS SimpleName@@loadedPet @TO@ VariableDeclarationFragment@@loadedPet @AT@ 33837 @LENGTH@ 9
---------------INS ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @TO@ LambdaExpression@@loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
 @AT@ 33857 @LENGTH@ 72
------------------INS MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @TO@ ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 33857 @LENGTH@ 71
---------------------INS MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getName()] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 33857 @LENGTH@ 51
------------------------INS MethodInvocation@@loadedPet.getFriends().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getName()] @AT@ 33868 @LENGTH@ 39
---------------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 33868 @LENGTH@ 29
------------------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 33895 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 33868 @LENGTH@ 22
---------------------------INS SimpleName@@Name:loadedPet @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 33868 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getName() @AT@ 33898 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:isEqualTo:["Daphne"] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne") @AT@ 33909 @LENGTH@ 19
------------------------INS StringLiteral@@"Daphne" @TO@ SimpleName@@MethodName:isEqualTo:["Daphne"] @AT@ 33919 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @TO@ LambdaExpression@@loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
 @AT@ 33935 @LENGTH@ 90
------------------INS MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @TO@ ExpressionStatement@@MethodInvocation:assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 33935 @LENGTH@ 89
---------------------INS MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getFriends().get(0).getName()] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 33935 @LENGTH@ 71
------------------------INS MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @TO@ MethodInvocation@@MethodName:assertThat:[loadedPet.getFriends().get(0).getFriends().get(0).getName()] @AT@ 33946 @LENGTH@ 59
---------------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33946 @LENGTH@ 49
------------------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 33993 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33946 @LENGTH@ 42
---------------------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33946 @LENGTH@ 29
------------------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 33973 @LENGTH@ 1
---------------------------INS MethodInvocation@@MethodName:getFriends:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33946 @LENGTH@ 22
---------------------------INS SimpleName@@Name:loadedPet @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33946 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@loadedPet.getFriends().get(0).getFriends().get(0).getName() @AT@ 33996 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:isEqualTo:["Luna"] @TO@ MethodInvocation@@assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna") @AT@ 34007 @LENGTH@ 17
------------------------INS StringLiteral@@"Luna" @TO@ SimpleName@@MethodName:isEqualTo:["Luna"] @AT@ 34017 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:create:[repository.findById(petId)] @TO@ MethodInvocation@@StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @AT@ 33773 @LENGTH@ 47
------------INS MethodInvocation@@repository.findById(petId) @TO@ MethodInvocation@@MethodName:create:[repository.findById(petId)] @AT@ 33793 @LENGTH@ 26
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(petId) @AT@ 33793 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findById:[petId] @TO@ MethodInvocation@@repository.findById(petId) @AT@ 33804 @LENGTH@ 15
------------------INS SimpleName@@petId @TO@ SimpleName@@MethodName:findById:[petId] @AT@ 33813 @LENGTH@ 5
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @AT@ 33773 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(repository.findById(petId)).assertNext(loadedPet -> {
  assertThat(loadedPet.getFriends().get(0).getName()).isEqualTo("Daphne");
  assertThat(loadedPet.getFriends().get(0).getFriends().get(0).getName()).isEqualTo("Luna");
}
).verifyComplete() @AT@ 34038 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:this.saveRequestMatcher.matches(exchange).filter(MatchResult::isMatch).flatMap((m) -> exchange.getSession()).map(WebSession::getAttributes).doOnNext((attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to WebSession: '" + requestPath + "'");
  }
}
).then() @TO@ MethodInvocation:this.saveRequestMatcher.matches(exchange).filter(MatchResult::isMatch).flatMap((m) -> exchange.getSession()).map(WebSession::getAttributes).doOnNext((attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath));
}
).then() @AT@ 2821 @LENGTH@ 424
---UPD MethodInvocation@@this.saveRequestMatcher.matches(exchange).filter(MatchResult::isMatch).flatMap((m) -> exchange.getSession()).map(WebSession::getAttributes).doOnNext((attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to WebSession: '" + requestPath + "'");
  }
}
).then() @TO@ this.saveRequestMatcher.matches(exchange).filter(MatchResult::isMatch).flatMap((m) -> exchange.getSession()).map(WebSession::getAttributes).doOnNext((attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath));
}
).then() @AT@ 2828 @LENGTH@ 416
------UPD MethodInvocation@@MethodName:doOnNext:[(attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to WebSession: '" + requestPath + "'");
  }
}
] @TO@ MethodName:doOnNext:[(attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath));
}
] @AT@ 2828 @LENGTH@ 409
---------UPD LambdaExpression@@(attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to WebSession: '" + requestPath + "'");
  }
}
 @TO@ (attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath));
}
 @AT@ 2982 @LENGTH@ 254
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Request added to WebSession: '" + requestPath + "'");} @AT@ 3119 @LENGTH@ 111
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 3123 @LENGTH@ 23
------------------DEL SimpleName@@Name:logger @AT@ 3123 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3130 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Request added to WebSession: '" + requestPath + "'");} @AT@ 3148 @LENGTH@ 82
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Request added to WebSession: '" + requestPath + "'") @AT@ 3156 @LENGTH@ 67
------------INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath)) @TO@ LambdaExpression@@(attrs) -> {
  String requestPath=pathInApplication(exchange.getRequest());
  attrs.put(this.sessionAttrName,requestPath);
  if (logger.isDebugEnabled()) {
    logger.debug("Request added to WebSession: '" + requestPath + "'");
  }
}
 @AT@ 3167 @LENGTH@ 82
---------------MOV MethodInvocation@@logger.debug("Request added to WebSession: '" + requestPath + "'") @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Request added to WebSession: '%s'",requestPath)) @AT@ 3156 @LENGTH@ 66
------------------UPD SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @TO@ MethodName:format:["Request added to WebSession: '%s'", requestPath] @AT@ 3163 @LENGTH@ 59
------------------INS SimpleName@@MethodName:debug:[LogMessage.format("Request added to WebSession: '%s'",requestPath)] @TO@ MethodInvocation@@logger.debug("Request added to WebSession: '" + requestPath + "'") @AT@ 3174 @LENGTH@ 74
---------------------INS MethodInvocation@@LogMessage.format("Request added to WebSession: '%s'",requestPath) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Request added to WebSession: '%s'",requestPath)] @AT@ 3180 @LENGTH@ 67
------------------------MOV SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @TO@ MethodInvocation@@LogMessage.format("Request added to WebSession: '%s'",requestPath) @AT@ 3163 @LENGTH@ 59
---------------------------DEL InfixExpression@@"Request added to WebSession: '" + requestPath + "'" @AT@ 3169 @LENGTH@ 52
------------------------------DEL StringLiteral@@"Request added to WebSession: '" @AT@ 3169 @LENGTH@ 32
------------------------------DEL Operator@@+ @AT@ 3201 @LENGTH@ 1
------------------------------DEL SimpleName@@requestPath @AT@ 3204 @LENGTH@ 11
------------------------------DEL StringLiteral@@"'" @AT@ 3218 @LENGTH@ 3
---------------------------INS StringLiteral@@"Request added to WebSession: '%s'" @TO@ SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @AT@ 3198 @LENGTH@ 35
---------------------------INS SimpleName@@requestPath @TO@ SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @AT@ 3235 @LENGTH@ 11
------------------------MOV SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @TO@ MethodInvocation@@LogMessage.format("Request added to WebSession: '%s'",requestPath) @AT@ 3163 @LENGTH@ 59
---------------------------DEL InfixExpression@@"Request added to WebSession: '" + requestPath + "'" @AT@ 3169 @LENGTH@ 52
------------------------------DEL StringLiteral@@"Request added to WebSession: '" @AT@ 3169 @LENGTH@ 32
------------------------------DEL Operator@@+ @AT@ 3201 @LENGTH@ 1
------------------------------DEL SimpleName@@requestPath @AT@ 3204 @LENGTH@ 11
------------------------------DEL StringLiteral@@"'" @AT@ 3218 @LENGTH@ 3
---------------------------INS StringLiteral@@"Request added to WebSession: '%s'" @TO@ SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @AT@ 3198 @LENGTH@ 35
---------------------------INS SimpleName@@requestPath @TO@ SimpleName@@MethodName:debug:["Request added to WebSession: '" + requestPath + "'"] @AT@ 3235 @LENGTH@ 11
------------------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Request added to WebSession: '%s'",requestPath) @AT@ 3180 @LENGTH@ 10


UPD IfStatement@@if (authorities instanceof String) {  if (StringUtils.hasText((String)authorities)) {    return Arrays.asList(((String)authorities).split(" "));  } else {    return Collections.emptyList();  }} else if (authorities instanceof Collection) {  return (Collection<String>)authorities;} @TO@ if (authorities instanceof String) {  if (StringUtils.hasText((String)authorities)) {    return Arrays.asList(((String)authorities).split(" "));  }  return Collections.emptyList();} @AT@ 3631 @LENGTH@ 305
---UPD Block@@ThenBody:{  if (StringUtils.hasText((String)authorities)) {    return Arrays.asList(((String)authorities).split(" "));  } else {    return Collections.emptyList();  }} @TO@ ThenBody:{  if (StringUtils.hasText((String)authorities)) {    return Arrays.asList(((String)authorities).split(" "));  }  return Collections.emptyList();} @AT@ 3666 @LENGTH@ 174
------UPD IfStatement@@if (StringUtils.hasText((String)authorities)) {  return Arrays.asList(((String)authorities).split(" "));} else {  return Collections.emptyList();} @TO@ if (StringUtils.hasText((String)authorities)) {  return Arrays.asList(((String)authorities).split(" "));} @AT@ 3671 @LENGTH@ 165
---------DEL Block@@ElseBody:{  return Collections.emptyList();} @AT@ 3794 @LENGTH@ 42
------MOV ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  if (StringUtils.hasText((String)authorities)) {    return Arrays.asList(((String)authorities).split(" "));  } else {    return Collections.emptyList();  }} @AT@ 3800 @LENGTH@ 31
---DEL Block@@ElseBody:if (authorities instanceof Collection) {  return (Collection<String>)authorities;} @AT@ 3848 @LENGTH@ 88


MOV MethodDeclaration@@private, void, MethodName:checkIfValidList, List<?> listToCheck,  @TO@ TypeDeclaration@@[public]AfterInvocationProviderManager, [AfterInvocationManager, InitializingBean] @AT@ 2301 @LENGTH@ 208
---DEL IfStatement@@if ((listToCheck == null) || (listToCheck.size() == 0)) {  throw new IllegalArgumentException("A list of AfterInvocationProviders is required");} @AT@ 2356 @LENGTH@ 150
------DEL InfixExpression@@(listToCheck == null) || (listToCheck.size() == 0) @AT@ 2360 @LENGTH@ 50
---------DEL ParenthesizedExpression@@(listToCheck == null) @AT@ 2360 @LENGTH@ 21
------------DEL InfixExpression@@listToCheck == null @AT@ 2361 @LENGTH@ 19
---------------DEL SimpleName@@listToCheck @AT@ 2361 @LENGTH@ 11
---------------DEL Operator@@== @AT@ 2372 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2376 @LENGTH@ 4
---------DEL Operator@@|| @AT@ 2381 @LENGTH@ 2
---------DEL ParenthesizedExpression@@(listToCheck.size() == 0) @AT@ 2385 @LENGTH@ 25
------------DEL InfixExpression@@listToCheck.size() == 0 @AT@ 2386 @LENGTH@ 23
---------------DEL MethodInvocation@@listToCheck.size() @AT@ 2386 @LENGTH@ 18
---------------DEL Operator@@== @AT@ 2404 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 2408 @LENGTH@ 1
------DEL Block@@ThenBody:{  throw new IllegalArgumentException("A list of AfterInvocationProviders is required");} @AT@ 2412 @LENGTH@ 94
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("A list of AfterInvocationProviders is required") @AT@ 2417 @LENGTH@ 85
------------DEL ClassInstanceCreation@@IllegalArgumentException["A list of AfterInvocationProviders is required"] @AT@ 2423 @LENGTH@ 78
---------------DEL New@@new @AT@ 2423 @LENGTH@ 3
---------------DEL SimpleType@@IllegalArgumentException @AT@ 2427 @LENGTH@ 24
---------------DEL StringLiteral@@"A list of AfterInvocationProviders is required" @AT@ 2452 @LENGTH@ 48
---INS ExpressionStatement@@MethodInvocation:Assert.isTrue(!CollectionUtils.isEmpty(listToCheck),"A list of AfterInvocationProviders is required") @TO@ MethodDeclaration@@private, void, MethodName:checkIfValidList, List<?> listToCheck,  @AT@ 3326 @LENGTH@ 103
------INS MethodInvocation@@Assert.isTrue(!CollectionUtils.isEmpty(listToCheck),"A list of AfterInvocationProviders is required") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(!CollectionUtils.isEmpty(listToCheck),"A list of AfterInvocationProviders is required") @AT@ 3326 @LENGTH@ 102
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(!CollectionUtils.isEmpty(listToCheck),"A list of AfterInvocationProviders is required") @AT@ 3326 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[!CollectionUtils.isEmpty(listToCheck), "A list of AfterInvocationProviders is required"] @TO@ MethodInvocation@@Assert.isTrue(!CollectionUtils.isEmpty(listToCheck),"A list of AfterInvocationProviders is required") @AT@ 3333 @LENGTH@ 95
------------INS PrefixExpression@@!CollectionUtils.isEmpty(listToCheck) @TO@ SimpleName@@MethodName:isTrue:[!CollectionUtils.isEmpty(listToCheck), "A list of AfterInvocationProviders is required"] @AT@ 3340 @LENGTH@ 37
---------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(listToCheck) @AT@ 3340 @LENGTH@ 1
---------------INS MethodInvocation@@CollectionUtils.isEmpty(listToCheck) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(listToCheck) @AT@ 3341 @LENGTH@ 36
------------------MOV SimpleName@@Name:listToCheck @TO@ MethodInvocation@@CollectionUtils.isEmpty(listToCheck) @AT@ 2386 @LENGTH@ 11
------------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@CollectionUtils.isEmpty(listToCheck) @AT@ 2398 @LENGTH@ 6
---------------------INS SimpleName@@listToCheck @TO@ SimpleName@@MethodName:size:[] @AT@ 3365 @LENGTH@ 11
------------INS StringLiteral@@"A list of AfterInvocationProviders is required" @TO@ SimpleName@@MethodName:isTrue:[!CollectionUtils.isEmpty(listToCheck), "A list of AfterInvocationProviders is required"] @AT@ 3379 @LENGTH@ 48


INS MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @TO@ TypeDeclaration@@[public]OpenSamlRelyingPartyRegistrationBuilderHttpMessageConverter, [HttpMessageConverter<RelyingPartyRegistration.Builder>] @AT@ 8026 @LENGTH@ 513
---INS Modifier@@private @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8026 @LENGTH@ 7
---INS ParameterizedType@@List<Saml2X509Credential> @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8034 @LENGTH@ 25
------INS SimpleType@@List @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 8034 @LENGTH@ 4
------INS SimpleType@@Saml2X509Credential @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 8039 @LENGTH@ 19
---INS SimpleName@@MethodName:getEncryption @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8060 @LENGTH@ 13
---INS SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8074 @LENGTH@ 33
------INS SimpleType@@IDPSSODescriptor @TO@ SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @AT@ 8074 @LENGTH@ 16
------INS SimpleName@@idpssoDescriptor @TO@ SingleVariableDeclaration@@IDPSSODescriptor idpssoDescriptor @AT@ 8091 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<Saml2X509Credential> encryption=new ArrayList<>(); @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8113 @LENGTH@ 57
------INS ParameterizedType@@List<Saml2X509Credential> @TO@ VariableDeclarationStatement@@List<Saml2X509Credential> encryption=new ArrayList<>(); @AT@ 8113 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 8113 @LENGTH@ 4
---------INS SimpleType@@Saml2X509Credential @TO@ ParameterizedType@@List<Saml2X509Credential> @AT@ 8118 @LENGTH@ 19
------INS VariableDeclarationFragment@@encryption=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<Saml2X509Credential> encryption=new ArrayList<>(); @AT@ 8139 @LENGTH@ 30
---------INS SimpleName@@encryption @TO@ VariableDeclarationFragment@@encryption=new ArrayList<>() @AT@ 8139 @LENGTH@ 10
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@encryption=new ArrayList<>() @AT@ 8152 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8152 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8156 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 8156 @LENGTH@ 9
---INS EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      encryption.add(Saml2X509Credential.encryption(certificate));    }  }} @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8173 @LENGTH@ 342
------INS SingleVariableDeclaration@@KeyDescriptor keyDescriptor @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      encryption.add(Saml2X509Credential.encryption(certificate));    }  }} @AT@ 8178 @LENGTH@ 27
---------INS SimpleType@@KeyDescriptor @TO@ SingleVariableDeclaration@@KeyDescriptor keyDescriptor @AT@ 8178 @LENGTH@ 13
---------INS SimpleName@@keyDescriptor @TO@ SingleVariableDeclaration@@KeyDescriptor keyDescriptor @AT@ 8192 @LENGTH@ 13
------INS MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      encryption.add(Saml2X509Credential.encryption(certificate));    }  }} @AT@ 8208 @LENGTH@ 36
---------INS SimpleName@@Name:idpssoDescriptor @TO@ MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @AT@ 8208 @LENGTH@ 16
---------INS SimpleName@@MethodName:getKeyDescriptors:[] @TO@ MethodInvocation@@idpssoDescriptor.getKeyDescriptors() @AT@ 8225 @LENGTH@ 19
------INS IfStatement@@if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @TO@ EnhancedForStatement@@for (KeyDescriptor keyDescriptor : idpssoDescriptor.getKeyDescriptors()) {  if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {    List<X509Certificate> certificates=certificates(keyDescriptor);    for (    X509Certificate certificate : certificates) {      encryption.add(Saml2X509Credential.encryption(certificate));    }  }} @AT@ 8251 @LENGTH@ 260
---------INS MethodInvocation@@keyDescriptor.getUse().equals(UsageType.ENCRYPTION) @TO@ IfStatement@@if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @AT@ 8255 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:getUse:[] @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.ENCRYPTION) @AT@ 8255 @LENGTH@ 22
------------INS SimpleName@@Name:keyDescriptor @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.ENCRYPTION) @AT@ 8255 @LENGTH@ 13
------------INS SimpleName@@MethodName:equals:[UsageType.ENCRYPTION] @TO@ MethodInvocation@@keyDescriptor.getUse().equals(UsageType.ENCRYPTION) @AT@ 8278 @LENGTH@ 28
---------------INS QualifiedName@@UsageType.ENCRYPTION @TO@ SimpleName@@MethodName:equals:[UsageType.ENCRYPTION] @AT@ 8285 @LENGTH@ 20
------------------INS SimpleName@@UsageType @TO@ QualifiedName@@UsageType.ENCRYPTION @AT@ 8285 @LENGTH@ 9
------------------INS SimpleName@@ENCRYPTION @TO@ QualifiedName@@UsageType.ENCRYPTION @AT@ 8295 @LENGTH@ 10
---------INS Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @TO@ IfStatement@@if (keyDescriptor.getUse().equals(UsageType.ENCRYPTION)) {  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @AT@ 8308 @LENGTH@ 203
------------INS VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @TO@ Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @AT@ 8314 @LENGTH@ 65
---------------INS ParameterizedType@@List<X509Certificate> @TO@ VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @AT@ 8314 @LENGTH@ 21
------------------INS SimpleType@@List @TO@ ParameterizedType@@List<X509Certificate> @AT@ 8314 @LENGTH@ 4
------------------INS SimpleType@@X509Certificate @TO@ ParameterizedType@@List<X509Certificate> @AT@ 8319 @LENGTH@ 15
---------------INS VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @TO@ VariableDeclarationStatement@@List<X509Certificate> certificates=certificates(keyDescriptor); @AT@ 8336 @LENGTH@ 42
------------------INS SimpleName@@certificates @TO@ VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @AT@ 8336 @LENGTH@ 12
------------------INS MethodInvocation@@certificates(keyDescriptor) @TO@ VariableDeclarationFragment@@certificates=certificates(keyDescriptor) @AT@ 8351 @LENGTH@ 27
---------------------INS SimpleName@@MethodName:certificates:[keyDescriptor] @TO@ MethodInvocation@@certificates(keyDescriptor) @AT@ 8351 @LENGTH@ 27
------------------------INS SimpleName@@keyDescriptor @TO@ SimpleName@@MethodName:certificates:[keyDescriptor] @AT@ 8364 @LENGTH@ 13
------------INS EnhancedForStatement@@for (X509Certificate certificate : certificates) {  encryption.add(Saml2X509Credential.encryption(certificate));} @TO@ Block@@ThenBody:{  List<X509Certificate> certificates=certificates(keyDescriptor);  for (  X509Certificate certificate : certificates) {    encryption.add(Saml2X509Credential.encryption(certificate));  }} @AT@ 8384 @LENGTH@ 122
---------------INS SingleVariableDeclaration@@X509Certificate certificate @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  encryption.add(Saml2X509Credential.encryption(certificate));} @AT@ 8389 @LENGTH@ 27
------------------INS SimpleType@@X509Certificate @TO@ SingleVariableDeclaration@@X509Certificate certificate @AT@ 8389 @LENGTH@ 15
------------------INS SimpleName@@certificate @TO@ SingleVariableDeclaration@@X509Certificate certificate @AT@ 8405 @LENGTH@ 11
---------------INS SimpleName@@certificates @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  encryption.add(Saml2X509Credential.encryption(certificate));} @AT@ 8419 @LENGTH@ 12
---------------INS ExpressionStatement@@MethodInvocation:encryption.add(Saml2X509Credential.encryption(certificate)) @TO@ EnhancedForStatement@@for (X509Certificate certificate : certificates) {  encryption.add(Saml2X509Credential.encryption(certificate));} @AT@ 8440 @LENGTH@ 60
------------------INS MethodInvocation@@encryption.add(Saml2X509Credential.encryption(certificate)) @TO@ ExpressionStatement@@MethodInvocation:encryption.add(Saml2X509Credential.encryption(certificate)) @AT@ 8440 @LENGTH@ 59
---------------------INS SimpleName@@Name:encryption @TO@ MethodInvocation@@encryption.add(Saml2X509Credential.encryption(certificate)) @AT@ 8440 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:add:[Saml2X509Credential.encryption(certificate)] @TO@ MethodInvocation@@encryption.add(Saml2X509Credential.encryption(certificate)) @AT@ 8451 @LENGTH@ 48
------------------------INS MethodInvocation@@Saml2X509Credential.encryption(certificate) @TO@ SimpleName@@MethodName:add:[Saml2X509Credential.encryption(certificate)] @AT@ 8455 @LENGTH@ 43
---------------------------INS SimpleName@@Name:Saml2X509Credential @TO@ MethodInvocation@@Saml2X509Credential.encryption(certificate) @AT@ 8455 @LENGTH@ 19
---------------------------INS SimpleName@@MethodName:encryption:[certificate] @TO@ MethodInvocation@@Saml2X509Credential.encryption(certificate) @AT@ 8475 @LENGTH@ 23
------------------------------INS SimpleName@@certificate @TO@ SimpleName@@MethodName:encryption:[certificate] @AT@ 8486 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:encryption @TO@ MethodDeclaration@@private, List<Saml2X509Credential>, MethodName:getEncryption, IDPSSODescriptor idpssoDescriptor,  @AT@ 8518 @LENGTH@ 18
------INS SimpleName@@encryption @TO@ ReturnStatement@@SimpleName:encryption @AT@ 8525 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertFalse(out.hasOut()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2737 @LENGTH@ 26
---UPD MethodInvocation@@assertFalse(out.hasOut()) @TO@ assertEquals("Hello World",out.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2737 @LENGTH@ 25
------UPD SimpleName@@MethodName:assertFalse:[out.hasOut()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody(), "There shouldn't be an out message"] @AT@ 2737 @LENGTH@ 25
---------UPD MethodInvocation@@out.hasOut() @TO@ out.getMessage().getBody() @AT@ 2749 @LENGTH@ 12
------------UPD SimpleName@@MethodName:hasOut:[] @TO@ MethodName:getBody:[] @AT@ 2753 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@out.hasOut() @AT@ 2931 @LENGTH@ 16
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertFalse:[out.hasOut()] @AT@ 2916 @LENGTH@ 13
---------INS StringLiteral@@"There shouldn't be an out message" @TO@ SimpleName@@MethodName:assertFalse:[out.hasOut()] @AT@ 2959 @LENGTH@ 35


UPD ReturnStatement@@MethodInvocation:this.context.map((c) -> (T)c.getAuthentication()) @TO@ MethodInvocation:this.context.map((context) -> (T)context.getAuthentication()) @AT@ 1514 @LENGTH@ 58
---UPD MethodInvocation@@this.context.map((c) -> (T)c.getAuthentication()) @TO@ this.context.map((context) -> (T)context.getAuthentication()) @AT@ 1521 @LENGTH@ 50
------UPD SimpleName@@MethodName:map:[(c) -> (T)c.getAuthentication()] @TO@ MethodName:map:[(context) -> (T)context.getAuthentication()] @AT@ 1534 @LENGTH@ 37
---------UPD LambdaExpression@@(c) -> (T)c.getAuthentication() @TO@ (context) -> (T)context.getAuthentication() @AT@ 1538 @LENGTH@ 32
------------UPD VariableDeclarationFragment@@c @TO@ context @AT@ 1539 @LENGTH@ 1
---------------UPD SimpleName@@c @TO@ context @AT@ 1539 @LENGTH@ 1
------------UPD CastExpression@@(T)c.getAuthentication() @TO@ (T)context.getAuthentication() @AT@ 1545 @LENGTH@ 25
---------------UPD MethodInvocation@@c.getAuthentication() @TO@ context.getAuthentication() @AT@ 1549 @LENGTH@ 21
------------------UPD SimpleName@@Name:c @TO@ Name:context @AT@ 1549 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ MethodInvocation:assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2164 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2164 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @TO@ MethodName:assertEquals:[false, exchange.isFailed(), "The request should be handled sucessfully"] @AT@ 2164 @LENGTH@ 85
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @AT@ 2177 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 2198 @LENGTH@ 5


UPD VariableDeclarationStatement@@final InputStream input=new TestNullInputStream(100,true,false); @TO@ @SuppressWarnings("resource") final InputStream input=new TestNullInputStream(100,true,false); @AT@ 4412 @LENGTH@ 68


INS ExpressionStatement@@MethodInvocation:Assert.state(!(hasConfigurers && hasFilterChain),"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.") @TO@ MethodDeclaration@@public, Filter, MethodName:springSecurityFilterChain, Exception,  @AT@ 4629 @LENGTH@ 148
---INS MethodInvocation@@Assert.state(!(hasConfigurers && hasFilterChain),"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(!(hasConfigurers && hasFilterChain),"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.") @AT@ 4629 @LENGTH@ 147
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(!(hasConfigurers && hasFilterChain),"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.") @AT@ 4629 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[!(hasConfigurers && hasFilterChain), "Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one."] @TO@ MethodInvocation@@Assert.state(!(hasConfigurers && hasFilterChain),"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one.") @AT@ 4636 @LENGTH@ 140
---------INS PrefixExpression@@!(hasConfigurers && hasFilterChain) @TO@ SimpleName@@MethodName:state:[!(hasConfigurers && hasFilterChain), "Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one."] @AT@ 4642 @LENGTH@ 35
------------INS Operator@@! @TO@ PrefixExpression@@!(hasConfigurers && hasFilterChain) @AT@ 4642 @LENGTH@ 1
------------INS ParenthesizedExpression@@(hasConfigurers && hasFilterChain) @TO@ PrefixExpression@@!(hasConfigurers && hasFilterChain) @AT@ 4643 @LENGTH@ 34
---------------INS InfixExpression@@hasConfigurers && hasFilterChain @TO@ ParenthesizedExpression@@(hasConfigurers && hasFilterChain) @AT@ 4644 @LENGTH@ 32
------------------MOV SimpleName@@hasConfigurers @TO@ InfixExpression@@hasConfigurers && hasFilterChain @AT@ 4593 @LENGTH@ 14
------------------MOV Operator@@&& @TO@ InfixExpression@@hasConfigurers && hasFilterChain @AT@ 4607 @LENGTH@ 2
------------------MOV SimpleName@@hasFilterChain @TO@ InfixExpression@@hasConfigurers && hasFilterChain @AT@ 4611 @LENGTH@ 14
---------INS StringLiteral@@"Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one." @TO@ SimpleName@@MethodName:state:[!(hasConfigurers && hasFilterChain), "Found WebSecurityConfigurerAdapter as well as SecurityFilterChain. Please select just one."] @AT@ 4683 @LENGTH@ 92


UPD ExpressionStatement@@MethodInvocation:assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ MethodInvocation:assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 2500 @LENGTH@ 140
---UPD MethodInvocation@@assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 2500 @LENGTH@ 139
------UPD SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @TO@ MethodName:assertEquals:["http://cxf.component.camel.apache.org/", el.getNamespaceURI(), "Get the wrong namespace URI"] @AT@ 2500 @LENGTH@ 139
---------INS StringLiteral@@"http://cxf.component.camel.apache.org/" @TO@ SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @AT@ 2513 @LENGTH@ 40
---------DEL StringLiteral@@"http://cxf.component.camel.apache.org/" @AT@ 2535 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:template.send("direct:createKey",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
) @TO@ MethodInvocation:template.send("direct:getSessonToken",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
) @AT@ 1676 @LENGTH@ 258
---UPD MethodInvocation@@template.send("direct:createKey",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
) @TO@ template.send("direct:getSessonToken",new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
) @AT@ 1676 @LENGTH@ 257
------UPD SimpleName@@MethodName:send:["direct:createKey", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
] @TO@ MethodName:send:["direct:getSessonToken", new Processor(){
  @Override public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(STS2Constants.OPERATION,"getSessionToken");
  }
}
] @AT@ 1685 @LENGTH@ 248
---------UPD StringLiteral@@"direct:createKey" @TO@ "direct:getSessonToken" @AT@ 1690 @LENGTH@ 18


UPD IfStatement@@if (owner.equals(this.nodeDescription)) {  expression=Cypher.property(Constants.NAME_OF_ROOT_NODE,leafProperty.getPropertyName());} else {  PropertyPathWrapper propertyPathWrapper=propertyPathWrappers.stream().filter(rp -> rp.getPropertyPath().equals(path)).findFirst().get();  String cypherElementName;  if (owner.isRelationshipPropertiesEntity()) {    cypherElementName=propertyPathWrapper.getRelationshipName();  } else {    cypherElementName=propertyPathWrapper.getNodeName();  }  expression=Cypher.property(cypherElementName,leafProperty.getPropertyName());} @TO@ if (owner.equals(this.nodeDescription) && path.getLength() == 1) {  expression=Cypher.property(Constants.NAME_OF_ROOT_NODE,leafProperty.getPropertyName());} else {  PropertyPathWrapper propertyPathWrapper=propertyPathWrappers.stream().filter(rp -> rp.getPropertyPath().equals(path)).findFirst().get();  String cypherElementName;  if (owner.isRelationshipPropertiesEntity()) {    cypherElementName=propertyPathWrapper.getRelationshipName();  } else {    cypherElementName=propertyPathWrapper.getNodeName();  }  expression=Cypher.property(cypherElementName,leafProperty.getPropertyName());} @AT@ 22214 @LENGTH@ 677
---INS InfixExpression@@owner.equals(this.nodeDescription) && path.getLength() == 1 @TO@ IfStatement@@if (owner.equals(this.nodeDescription)) {  expression=Cypher.property(Constants.NAME_OF_ROOT_NODE,leafProperty.getPropertyName());} else {  PropertyPathWrapper propertyPathWrapper=propertyPathWrappers.stream().filter(rp -> rp.getPropertyPath().equals(path)).findFirst().get();  String cypherElementName;  if (owner.isRelationshipPropertiesEntity()) {    cypherElementName=propertyPathWrapper.getRelationshipName();  } else {    cypherElementName=propertyPathWrapper.getNodeName();  }  expression=Cypher.property(cypherElementName,leafProperty.getPropertyName());} @AT@ 22218 @LENGTH@ 59
------MOV MethodInvocation@@owner.equals(this.nodeDescription) @TO@ InfixExpression@@owner.equals(this.nodeDescription) && path.getLength() == 1 @AT@ 22218 @LENGTH@ 34
------INS Operator@@&& @TO@ InfixExpression@@owner.equals(this.nodeDescription) && path.getLength() == 1 @AT@ 22252 @LENGTH@ 2
------INS InfixExpression@@path.getLength() == 1 @TO@ InfixExpression@@owner.equals(this.nodeDescription) && path.getLength() == 1 @AT@ 22256 @LENGTH@ 21
---------INS MethodInvocation@@path.getLength() @TO@ InfixExpression@@path.getLength() == 1 @AT@ 22256 @LENGTH@ 16
------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.getLength() @AT@ 22256 @LENGTH@ 4
------------INS SimpleName@@MethodName:getLength:[] @TO@ MethodInvocation@@path.getLength() @AT@ 22261 @LENGTH@ 11
---------INS Operator@@== @TO@ InfixExpression@@path.getLength() == 1 @AT@ 22272 @LENGTH@ 2
---------INS NumberLiteral@@1 @TO@ InfixExpression@@path.getLength() == 1 @AT@ 22276 @LENGTH@ 1


MOV ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(ex.getMessage(),ex) @TO@ MethodDeclaration@@private, AuthenticationException, MethodName:onError, JwtException ex,  @AT@ 3370 @LENGTH@ 63


UPD ExpressionStatement@@MethodInvocation:this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target) @TO@ MethodInvocation:this.logger.warn(LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target)) @AT@ 1385 @LENGTH@ 123
---UPD MethodInvocation@@this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target) @TO@ this.logger.warn(LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target)) @AT@ 1385 @LENGTH@ 122
------UPD SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @TO@ MethodName:format:["Denying user %s permission '%s' on object %s", authentication.getName(), permission, target] @AT@ 1397 @LENGTH@ 110
------INS SimpleName@@MethodName:warn:[LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target)] @TO@ MethodInvocation@@this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target) @AT@ 1445 @LENGTH@ 121
---------INS MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target) @TO@ SimpleName@@MethodName:warn:[LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target)] @AT@ 1450 @LENGTH@ 115
------------MOV SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @TO@ MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target) @AT@ 1397 @LENGTH@ 110
---------------DEL InfixExpression@@"Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target @AT@ 1407 @LENGTH@ 99
------------------DEL StringLiteral@@"Denying user " @AT@ 1407 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 1422 @LENGTH@ 1
------------------DEL MethodInvocation@@authentication.getName() @AT@ 1425 @LENGTH@ 24
------------------DEL StringLiteral@@" permission '" @AT@ 1452 @LENGTH@ 15
------------------DEL SimpleName@@permission @AT@ 1470 @LENGTH@ 10
------------------DEL StringLiteral@@"' on object " @AT@ 1483 @LENGTH@ 14
------------------DEL SimpleName@@target @AT@ 1500 @LENGTH@ 6
---------------INS StringLiteral@@"Denying user %s permission '%s' on object %s" @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @AT@ 1468 @LENGTH@ 46
---------------INS MethodInvocation@@authentication.getName() @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @AT@ 1516 @LENGTH@ 24
------------------MOV SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 1425 @LENGTH@ 14
------------------MOV SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 1425 @LENGTH@ 14
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 1440 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 1440 @LENGTH@ 9
---------------INS SimpleName@@permission @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @AT@ 1546 @LENGTH@ 10
---------------INS SimpleName@@target @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object "+ target] @AT@ 1558 @LENGTH@ 6
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object %s",authentication.getName(),permission,target) @AT@ 1450 @LENGTH@ 10


UPD IfStatement@@if (this == o) return true; @TO@ if (this == o) {  return true;} @AT@ 7239 @LENGTH@ 30
---UPD Block@@ThenBody:return true; @TO@ ThenBody:{  return true;} @AT@ 7257 @LENGTH@ 12


INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication)) @TO@ MethodDeclaration@@private, Mono<Void>, MethodName:logout, WebFilterExchange webFilterExchange, Authentication authentication,  @AT@ 3220 @LENGTH@ 112
---MOV MethodInvocation@@logger.debug("Logging out user '" + authentication + "' and transferring to logout destination") @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication)) @AT@ 3206 @LENGTH@ 96
------UPD SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @TO@ MethodName:format:["Logging out user '%s' and transferring to logout destination", authentication] @AT@ 3213 @LENGTH@ 89
------INS SimpleName@@MethodName:debug:[LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication)] @TO@ MethodInvocation@@logger.debug("Logging out user '" + authentication + "' and transferring to logout destination") @AT@ 3227 @LENGTH@ 104
---------INS MethodInvocation@@LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication)] @AT@ 3233 @LENGTH@ 97
------------MOV SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @TO@ MethodInvocation@@LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication) @AT@ 3213 @LENGTH@ 89
---------------DEL InfixExpression@@"Logging out user '" + authentication + "' and transferring to logout destination" @AT@ 3219 @LENGTH@ 82
------------------DEL StringLiteral@@"Logging out user '" @AT@ 3219 @LENGTH@ 20
------------------DEL Operator@@+ @AT@ 3239 @LENGTH@ 1
------------------DEL SimpleName@@authentication @AT@ 3242 @LENGTH@ 14
------------------DEL StringLiteral@@"' and transferring to logout destination" @AT@ 3259 @LENGTH@ 42
---------------INS StringLiteral@@"Logging out user '%s' and transferring to logout destination" @TO@ SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @AT@ 3251 @LENGTH@ 62
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @AT@ 3315 @LENGTH@ 14
------------MOV SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @TO@ MethodInvocation@@LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication) @AT@ 3213 @LENGTH@ 89
---------------DEL InfixExpression@@"Logging out user '" + authentication + "' and transferring to logout destination" @AT@ 3219 @LENGTH@ 82
------------------DEL StringLiteral@@"Logging out user '" @AT@ 3219 @LENGTH@ 20
------------------DEL Operator@@+ @AT@ 3239 @LENGTH@ 1
------------------DEL SimpleName@@authentication @AT@ 3242 @LENGTH@ 14
------------------DEL StringLiteral@@"' and transferring to logout destination" @AT@ 3259 @LENGTH@ 42
---------------INS StringLiteral@@"Logging out user '%s' and transferring to logout destination" @TO@ SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @AT@ 3251 @LENGTH@ 62
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:debug:["Logging out user '" + authentication + "' and transferring to logout destination"] @AT@ 3315 @LENGTH@ 14
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Logging out user '%s' and transferring to logout destination",authentication) @AT@ 3233 @LENGTH@ 10


UPD EnhancedForStatement@@for (String prop : SERVER_PROPS) {  if (prop.equals(propName)) {    assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value);  } else {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));  }} @TO@ for (String prop : SERVER_PROPS) {  String overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value;  if (prop.equals(propName)) {    assertPath(propName,overriddenDir);  } else {    if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {      assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));    } else {      assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));    }  }} @AT@ 38688 @LENGTH@ 436
---UPD IfStatement@@if (prop.equals(propName)) {  assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value);} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @TO@ if (prop.equals(propName)) {  assertPath(propName,overriddenDir);} else {  if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));  } else {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));  }} @AT@ 38738 @LENGTH@ 372
------UPD Block@@ThenBody:{  assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value);} @TO@ ThenBody:{  assertPath(propName,overriddenDir);} @AT@ 38765 @LENGTH@ 125
---------UPD ExpressionStatement@@MethodInvocation:assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value) @TO@ MethodInvocation:assertPath(propName,overriddenDir) @AT@ 38787 @LENGTH@ 85
------------UPD MethodInvocation@@assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value) @TO@ assertPath(propName,overriddenDir) @AT@ 38787 @LENGTH@ 84
---------------UPD SimpleName@@MethodName:assertPath:[propName, ROOT + File.separator + newStandalone+ File.separator+ value] @TO@ MethodName:assertPath:[propName, overriddenDir] @AT@ 38787 @LENGTH@ 84
------------------INS SimpleName@@overriddenDir @TO@ SimpleName@@MethodName:assertPath:[propName, ROOT + File.separator + newStandalone+ File.separator+ value] @AT@ 38911 @LENGTH@ 13
------INS Block@@ElseBody:{  if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));  } else {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));  }} @TO@ IfStatement@@if (prop.equals(propName)) {  assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value);} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @AT@ 38950 @LENGTH@ 621
---------INS IfStatement@@if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @TO@ Block@@ElseBody:{  if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));  } else {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));  }} @AT@ 39187 @LENGTH@ 366
------------MOV Block@@ElseBody:{  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @TO@ IfStatement@@if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @AT@ 38896 @LENGTH@ 214
------------INS InfixExpression@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR) @TO@ IfStatement@@if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @AT@ 39191 @LENGTH@ 78
---------------INS MethodInvocation@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) @TO@ InfixExpression@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR) @AT@ 39191 @LENGTH@ 36
------------------INS SimpleName@@Name:prop @TO@ MethodInvocation@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) @AT@ 39191 @LENGTH@ 4
------------------INS SimpleName@@MethodName:equals:[JBOSS_SERVER_DEPLOY_DIR] @TO@ MethodInvocation@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) @AT@ 39196 @LENGTH@ 31
---------------------INS SimpleName@@JBOSS_SERVER_DEPLOY_DIR @TO@ SimpleName@@MethodName:equals:[JBOSS_SERVER_DEPLOY_DIR] @AT@ 39203 @LENGTH@ 23
---------------INS Operator@@&& @TO@ InfixExpression@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR) @AT@ 39227 @LENGTH@ 2
---------------INS MethodInvocation@@propName.equals(JBOSS_SERVER_DATA_DIR) @TO@ InfixExpression@@prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR) @AT@ 39231 @LENGTH@ 38
------------------INS SimpleName@@Name:propName @TO@ MethodInvocation@@propName.equals(JBOSS_SERVER_DATA_DIR) @AT@ 39231 @LENGTH@ 8
------------------INS SimpleName@@MethodName:equals:[JBOSS_SERVER_DATA_DIR] @TO@ MethodInvocation@@propName.equals(JBOSS_SERVER_DATA_DIR) @AT@ 39240 @LENGTH@ 29
---------------------INS SimpleName@@JBOSS_SERVER_DATA_DIR @TO@ SimpleName@@MethodName:equals:[JBOSS_SERVER_DATA_DIR] @AT@ 39247 @LENGTH@ 21
------------INS Block@@ThenBody:{  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} @TO@ IfStatement@@if (prop.equals(JBOSS_SERVER_DEPLOY_DIR) && propName.equals(JBOSS_SERVER_DATA_DIR)) {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} else {  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));} @AT@ 39271 @LENGTH@ 139
---------------INS ExpressionStatement@@MethodInvocation:assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)) @TO@ Block@@ThenBody:{  assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir));} @AT@ 39297 @LENGTH@ 91
------------------INS MethodInvocation@@assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)) @AT@ 39297 @LENGTH@ 90
---------------------INS SimpleName@@MethodName:assertTrue:[WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)] @TO@ MethodInvocation@@assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)) @AT@ 39297 @LENGTH@ 90
------------------------INS MethodInvocation@@WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir) @TO@ SimpleName@@MethodName:assertTrue:[WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir)] @AT@ 39308 @LENGTH@ 78
---------------------------INS MethodInvocation@@MethodName:getPropertyPrivileged:[prop, ""] @TO@ MethodInvocation@@WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir) @AT@ 39308 @LENGTH@ 54
------------------------------INS SimpleName@@prop @TO@ MethodInvocation@@MethodName:getPropertyPrivileged:[prop, ""] @AT@ 39353 @LENGTH@ 4
------------------------------INS StringLiteral@@"" @TO@ MethodInvocation@@MethodName:getPropertyPrivileged:[prop, ""] @AT@ 39359 @LENGTH@ 2
---------------------------INS SimpleName@@Name:WildFlySecurityManager @TO@ MethodInvocation@@WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir) @AT@ 39308 @LENGTH@ 22
---------------------------INS SimpleName@@MethodName:contains:[overriddenDir] @TO@ MethodInvocation@@WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(overriddenDir) @AT@ 39363 @LENGTH@ 23
------------------------------INS SimpleName@@overriddenDir @TO@ SimpleName@@MethodName:contains:[overriddenDir] @AT@ 39372 @LENGTH@ 13
---INS VariableDeclarationStatement@@String overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value; @TO@ EnhancedForStatement@@for (String prop : SERVER_PROPS) {  if (prop.equals(propName)) {    assertPath(propName,ROOT + File.separator + newStandalone+ File.separator+ value);  } else {    assertTrue(WildFlySecurityManager.getPropertyPrivileged(prop,"").contains(currBaseDir));  }} @AT@ 38738 @LENGTH@ 86
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value; @AT@ 38738 @LENGTH@ 6
------INS VariableDeclarationFragment@@overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value @TO@ VariableDeclarationStatement@@String overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value; @AT@ 38745 @LENGTH@ 78
---------INS SimpleName@@overriddenDir @TO@ VariableDeclarationFragment@@overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value @AT@ 38745 @LENGTH@ 13
---------MOV InfixExpression@@ROOT + File.separator + newStandalone+ File.separator+ value @TO@ VariableDeclarationFragment@@overriddenDir=ROOT + File.separator + newStandalone+ File.separator+ value @AT@ 38808 @LENGTH@ 62


UPD IfStatement@@if (this.securityInterceptor.isRejectPublicInvocations()) {  return false;} @TO@ if (attrs == null) {  return !this.securityInterceptor.isRejectPublicInvocations();} @AT@ 2511 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 1948 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1948 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1955 @LENGTH@ 21


UPD FieldDeclaration@@private, static, final, String, [WINDOW_FUNC_PREFIX="@_"] @TO@ public, static, final, String, [WINDOW_FUNC_PREFIX="@_"] @AT@ 3356 @LENGTH@ 54
---UPD Modifier@@private @TO@ public @AT@ 3356 @LENGTH@ 7


UPD VariableDeclarationStatement@@Ses2Component component=new Ses2Component(context); @TO@ Ses2Component component=context.getComponent("aws2-ses",Ses2Component.class); @AT@ 1373 @LENGTH@ 53
---UPD VariableDeclarationFragment@@component=new Ses2Component(context) @TO@ component=context.getComponent("aws2-ses",Ses2Component.class) @AT@ 1387 @LENGTH@ 38
------INS MethodInvocation@@context.getComponent("aws2-ses",Ses2Component.class) @TO@ VariableDeclarationFragment@@component=new Ses2Component(context) @AT@ 1399 @LENGTH@ 53
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getComponent("aws2-ses",Ses2Component.class) @AT@ 1399 @LENGTH@ 7
---------INS SimpleName@@MethodName:getComponent:["aws2-ses", Ses2Component.class] @TO@ MethodInvocation@@context.getComponent("aws2-ses",Ses2Component.class) @AT@ 1407 @LENGTH@ 45
------------INS StringLiteral@@"aws2-ses" @TO@ SimpleName@@MethodName:getComponent:["aws2-ses", Ses2Component.class] @AT@ 1420 @LENGTH@ 10
------------INS TypeLiteral@@Ses2Component.class @TO@ SimpleName@@MethodName:getComponent:["aws2-ses", Ses2Component.class] @AT@ 1432 @LENGTH@ 19
------DEL ClassInstanceCreation@@Ses2Component[context] @AT@ 1399 @LENGTH@ 26
---------DEL New@@new @AT@ 1399 @LENGTH@ 3
---------DEL SimpleType@@Ses2Component @AT@ 1403 @LENGTH@ 13
---------DEL SimpleName@@context @AT@ 1417 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:setValue(new Integer(text)) @TO@ MethodInvocation:setValue(Integer.valueOf(text)) @AT@ 2651 @LENGTH@ 28
---UPD MethodInvocation@@setValue(new Integer(text)) @TO@ setValue(Integer.valueOf(text)) @AT@ 2651 @LENGTH@ 27
------UPD SimpleName@@MethodName:setValue:[new Integer(text)] @TO@ MethodName:setValue:[Integer.valueOf(text)] @AT@ 2651 @LENGTH@ 27
---------INS MethodInvocation@@Integer.valueOf(text) @TO@ SimpleName@@MethodName:setValue:[new Integer(text)] @AT@ 2660 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(text) @AT@ 2660 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[text] @TO@ MethodInvocation@@Integer.valueOf(text) @AT@ 2668 @LENGTH@ 13
---------------INS SimpleName@@text @TO@ SimpleName@@MethodName:valueOf:[text] @AT@ 2676 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Integer[text] @AT@ 2660 @LENGTH@ 17
------------DEL New@@new @AT@ 2660 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2664 @LENGTH@ 7
------------DEL SimpleName@@text @AT@ 2672 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1986 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1986 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 1986 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1997 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2013 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(result) @TO@ MethodInvocation:exchange.getMessage().setBody(result) @AT@ 2359 @LENGTH@ 34
---UPD MethodInvocation@@exchange.getOut().setBody(result) @TO@ exchange.getMessage().setBody(result) @AT@ 2359 @LENGTH@ 33
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2359 @LENGTH@ 17


UPD TryStatement@@try {  ByteArrayOutputStream out=new ByteArrayOutputStream();  InflaterOutputStream iout=new InflaterOutputStream(out,new Inflater(true));  iout.write(b);  iout.finish();  return new String(out.toByteArray(),StandardCharsets.UTF_8);} catch (IOException ex) {  throw new Saml2Exception("Unable to inflate string",ex);} @TO@ try {  ByteArrayOutputStream out=new ByteArrayOutputStream();  InflaterOutputStream inflaterOutputStream=new InflaterOutputStream(out,new Inflater(true));  inflaterOutputStream.write(b);  inflaterOutputStream.finish();  return new String(out.toByteArray(),StandardCharsets.UTF_8);} catch (IOException ex) {  throw new Saml2Exception("Unable to inflate string",ex);} @AT@ 1794 @LENGTH@ 344
---UPD VariableDeclarationStatement@@InflaterOutputStream iout=new InflaterOutputStream(out,new Inflater(true)); @TO@ InflaterOutputStream inflaterOutputStream=new InflaterOutputStream(out,new Inflater(true)); @AT@ 1863 @LENGTH@ 78
------UPD VariableDeclarationFragment@@iout=new InflaterOutputStream(out,new Inflater(true)) @TO@ inflaterOutputStream=new InflaterOutputStream(out,new Inflater(true)) @AT@ 1884 @LENGTH@ 56
---------UPD SimpleName@@iout @TO@ inflaterOutputStream @AT@ 1884 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:iout.write(b) @TO@ MethodInvocation:inflaterOutputStream.write(b) @AT@ 1945 @LENGTH@ 14
------UPD MethodInvocation@@iout.write(b) @TO@ inflaterOutputStream.write(b) @AT@ 1945 @LENGTH@ 13
---------UPD SimpleName@@Name:iout @TO@ Name:inflaterOutputStream @AT@ 1945 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:iout.finish() @TO@ MethodInvocation:inflaterOutputStream.finish() @AT@ 1963 @LENGTH@ 14
------UPD MethodInvocation@@iout.finish() @TO@ inflaterOutputStream.finish() @AT@ 1963 @LENGTH@ 13
---------UPD SimpleName@@Name:iout @TO@ Name:inflaterOutputStream @AT@ 1963 @LENGTH@ 4


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverFalse, Exception,  @AT@ 2075 @LENGTH@ 540
---DEL Modifier@@public @AT@ 2075 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2082 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverFalse @AT@ 2087 @LENGTH@ 35
---DEL SimpleType@@Exception @AT@ 2132 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonMQClientMock awsMQClient=new AmazonMQClientMock(); @AT@ 2153 @LENGTH@ 58
------DEL SimpleType@@AmazonMQClientMock @AT@ 2153 @LENGTH@ 18
------DEL VariableDeclarationFragment@@awsMQClient=new AmazonMQClientMock() @AT@ 2172 @LENGTH@ 38
---------DEL SimpleName@@awsMQClient @AT@ 2172 @LENGTH@ 11
---------DEL ClassInstanceCreation@@AmazonMQClientMock[] @AT@ 2186 @LENGTH@ 24
------------DEL New@@new @AT@ 2186 @LENGTH@ 3
------------DEL SimpleType@@AmazonMQClientMock @AT@ 2190 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("awsMQClient",awsMQClient) @AT@ 2220 @LENGTH@ 55
------DEL MethodInvocation@@context.getRegistry().bind("awsMQClient",awsMQClient) @AT@ 2220 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2220 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2220 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["awsMQClient", awsMQClient] @AT@ 2242 @LENGTH@ 32
------------DEL StringLiteral@@"awsMQClient" @AT@ 2247 @LENGTH@ 13
------------DEL SimpleName@@awsMQClient @AT@ 2262 @LENGTH@ 11
---DEL VariableDeclarationStatement@@MQ2Component component=context.getComponent("aws2-mq",MQ2Component.class); @AT@ 2284 @LENGTH@ 77
------DEL SimpleType@@MQ2Component @AT@ 2284 @LENGTH@ 12
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-mq",MQ2Component.class) @AT@ 2297 @LENGTH@ 63
---------DEL SimpleName@@component @AT@ 2297 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-mq",MQ2Component.class) @AT@ 2309 @LENGTH@ 51
------------DEL SimpleName@@Name:context @AT@ 2309 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-mq", MQ2Component.class] @AT@ 2317 @LENGTH@ 43
---------------DEL StringLiteral@@"aws2-mq" @AT@ 2330 @LENGTH@ 9
---------------DEL TypeLiteral@@MQ2Component.class @AT@ 2341 @LENGTH@ 18
---DEL VariableDeclarationStatement@@MQ2Endpoint endpoint=(MQ2Endpoint)component.createEndpoint("aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2370 @LENGTH@ 153
------DEL SimpleType@@MQ2Endpoint @AT@ 2370 @LENGTH@ 11
------DEL VariableDeclarationFragment@@endpoint=(MQ2Endpoint)component.createEndpoint("aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2382 @LENGTH@ 140
---------DEL SimpleName@@endpoint @AT@ 2382 @LENGTH@ 8
---------DEL CastExpression@@(MQ2Endpoint)component.createEndpoint("aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2393 @LENGTH@ 129
------------DEL SimpleType@@MQ2Endpoint @AT@ 2394 @LENGTH@ 11
------------DEL MethodInvocation@@component.createEndpoint("aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2407 @LENGTH@ 115
---------------DEL SimpleName@@Name:component @AT@ 2407 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2434 @LENGTH@ 88
------------------DEL StringLiteral@@"aws2-mq://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2449 @LENGTH@ 72
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(awsMQClient,endpoint.getConfiguration().getAmazonMqClient()) @AT@ 2533 @LENGTH@ 76
------DEL MethodInvocation@@assertNotSame(awsMQClient,endpoint.getConfiguration().getAmazonMqClient()) @AT@ 2533 @LENGTH@ 75
---------DEL SimpleName@@MethodName:assertNotSame:[awsMQClient, endpoint.getConfiguration().getAmazonMqClient()] @AT@ 2533 @LENGTH@ 75
------------DEL SimpleName@@awsMQClient @AT@ 2547 @LENGTH@ 11
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonMqClient() @AT@ 2560 @LENGTH@ 47
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2560 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2560 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonMqClient:[] @AT@ 2588 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime(),"Should process one file") @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime(),"Should process one file") @AT@ 2641 @LENGTH@ 68
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime(),"Should process one file") @TO@ assertTrue(notify.matchesWaitTime(),"Should process one file") @AT@ 2641 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime(), "Should process one file"] @TO@ MethodName:assertTrue:[notify.matchesWaitTime(), "Should process one file"] @AT@ 2641 @LENGTH@ 67
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2652 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2659 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2137 @LENGTH@ 144
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2137 @LENGTH@ 143
------UPD MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, rabbitMQEndpoint] @AT@ 2137 @LENGTH@ 92
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @AT@ 2274 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2274 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2290 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:parameter != null && parameter.trim().startsWith("#") @TO@ InfixExpression:parameter != null && parameter.trim().startsWith("#") && parameter.trim().length() > 1 @AT@ 9660 @LENGTH@ 61
---INS InfixExpression@@parameter != null && parameter.trim().startsWith("#") && parameter.trim().length() > 1 @TO@ ReturnStatement@@InfixExpression:parameter != null && parameter.trim().startsWith("#") @AT@ 9667 @LENGTH@ 86
------MOV InfixExpression@@parameter != null && parameter.trim().startsWith("#") @TO@ InfixExpression@@parameter != null && parameter.trim().startsWith("#") && parameter.trim().length() > 1 @AT@ 9667 @LENGTH@ 53
------INS Operator@@&& @TO@ InfixExpression@@parameter != null && parameter.trim().startsWith("#") && parameter.trim().length() > 1 @AT@ 9720 @LENGTH@ 2
------INS InfixExpression@@parameter.trim().length() > 1 @TO@ InfixExpression@@parameter != null && parameter.trim().startsWith("#") && parameter.trim().length() > 1 @AT@ 9724 @LENGTH@ 29
---------INS MethodInvocation@@parameter.trim().length() @TO@ InfixExpression@@parameter.trim().length() > 1 @AT@ 9724 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:trim:[] @TO@ MethodInvocation@@parameter.trim().length() @AT@ 9724 @LENGTH@ 16
------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.trim().length() @AT@ 9724 @LENGTH@ 9
------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@parameter.trim().length() @AT@ 9741 @LENGTH@ 8
---------INS Operator@@> @TO@ InfixExpression@@parameter.trim().length() > 1 @AT@ 9749 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@parameter.trim().length() > 1 @AT@ 9752 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2007 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2007 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2023 @LENGTH@ 21


UPD VariableDeclarationStatement@@Long id=new Long(pullRequestId); @TO@ Long id=Long.valueOf(pullRequestId); @AT@ 2095 @LENGTH@ 34
---UPD VariableDeclarationFragment@@id=new Long(pullRequestId) @TO@ id=Long.valueOf(pullRequestId) @AT@ 2100 @LENGTH@ 28
------INS MethodInvocation@@Long.valueOf(pullRequestId) @TO@ VariableDeclarationFragment@@id=new Long(pullRequestId) @AT@ 2105 @LENGTH@ 27
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(pullRequestId) @AT@ 2105 @LENGTH@ 4
---------INS SimpleName@@MethodName:valueOf:[pullRequestId] @TO@ MethodInvocation@@Long.valueOf(pullRequestId) @AT@ 2110 @LENGTH@ 22
------------INS SimpleName@@pullRequestId @TO@ SimpleName@@MethodName:valueOf:[pullRequestId] @AT@ 2118 @LENGTH@ 13
------DEL ClassInstanceCreation@@Long[pullRequestId] @AT@ 2105 @LENGTH@ 23
---------DEL New@@new @AT@ 2105 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 2109 @LENGTH@ 4
---------DEL SimpleName@@pullRequestId @AT@ 2114 @LENGTH@ 13


UPD VariableDeclarationStatement@@Advice advice=new MethodInterceptor(){
  @Override public Object invoke(  MethodInvocation invocation) throws Throwable {
    if (ConnectionWrapper.this.channels.get() == null) {
      return invocation.proceed();
    }
 else {
      return null;
    }
  }
}
; @TO@ Advice advice=(MethodInterceptor)invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
; @AT@ 4737 @LENGTH@ 280
---UPD VariableDeclarationFragment@@advice=new MethodInterceptor(){
  @Override public Object invoke(  MethodInvocation invocation) throws Throwable {
    if (ConnectionWrapper.this.channels.get() == null) {
      return invocation.proceed();
    }
 else {
      return null;
    }
  }
}
 @TO@ advice=(MethodInterceptor)invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @AT@ 4744 @LENGTH@ 272
------INS CastExpression@@(MethodInterceptor)invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @TO@ VariableDeclarationFragment@@advice=new MethodInterceptor(){
  @Override public Object invoke(  MethodInvocation invocation) throws Throwable {
    if (ConnectionWrapper.this.channels.get() == null) {
      return invocation.proceed();
    }
 else {
      return null;
    }
  }
}
 @AT@ 4729 @LENGTH@ 186
---------INS SimpleType@@MethodInterceptor @TO@ CastExpression@@(MethodInterceptor)invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @AT@ 4730 @LENGTH@ 17
---------INS LambdaExpression@@invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @TO@ CastExpression@@(MethodInterceptor)invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @AT@ 4749 @LENGTH@ 166
------------INS VariableDeclarationFragment@@invocation @TO@ LambdaExpression@@invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @AT@ 4749 @LENGTH@ 10
---------------INS SimpleName@@invocation @TO@ VariableDeclarationFragment@@invocation @AT@ 4749 @LENGTH@ 10
---------------INS SimpleName@@invocation @TO@ VariableDeclarationFragment@@invocation @AT@ 4749 @LENGTH@ 10
------------MOV IfStatement@@if (ConnectionWrapper.this.channels.get() == null) {  return invocation.proceed();} else {  return null;} @TO@ LambdaExpression@@invocation -> {
  if (ConnectionWrapper.this.channels.get() == null) {
    return invocation.proceed();
  }
 else {
    return null;
  }
}
 @AT@ 4872 @LENGTH@ 132
------DEL ClassInstanceCreation@@MethodInterceptor[] @AT@ 4753 @LENGTH@ 263
---------DEL New@@new @AT@ 4753 @LENGTH@ 3
---------DEL SimpleType@@MethodInterceptor @AT@ 4757 @LENGTH@ 17
---------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 4777 @LENGTH@ 239
------------DEL MethodDeclaration@@public, Object, MethodName:invoke, MethodInvocation invocation, Throwable,  @AT@ 4798 @LENGTH@ 212
---------------DEL Modifier@@public @AT@ 4798 @LENGTH@ 6
---------------DEL SimpleType@@Object @AT@ 4805 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:invoke @AT@ 4812 @LENGTH@ 6
---------------DEL SingleVariableDeclaration@@MethodInvocation invocation @AT@ 4819 @LENGTH@ 27
------------------DEL SimpleType@@MethodInvocation @AT@ 4819 @LENGTH@ 16
------------------DEL SimpleName@@invocation @AT@ 4836 @LENGTH@ 10
---------------DEL SimpleType@@Throwable @AT@ 4855 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2511 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2511 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2527 @LENGTH@ 21


UPD VariableDeclarationStatement@@CsrfToken token=(CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),NativeWebRequest.SCOPE_REQUEST); @TO@ CsrfToken token=(CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),RequestAttributes.SCOPE_REQUEST); @AT@ 2464 @LENGTH@ 117
---UPD VariableDeclarationFragment@@token=(CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),NativeWebRequest.SCOPE_REQUEST) @TO@ token=(CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),RequestAttributes.SCOPE_REQUEST) @AT@ 2474 @LENGTH@ 106
------UPD CastExpression@@(CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),NativeWebRequest.SCOPE_REQUEST) @TO@ (CsrfToken)webRequest.getAttribute(CsrfToken.class.getName(),RequestAttributes.SCOPE_REQUEST) @AT@ 2482 @LENGTH@ 98
---------UPD MethodInvocation@@webRequest.getAttribute(CsrfToken.class.getName(),NativeWebRequest.SCOPE_REQUEST) @TO@ webRequest.getAttribute(CsrfToken.class.getName(),RequestAttributes.SCOPE_REQUEST) @AT@ 2494 @LENGTH@ 86
------------UPD SimpleName@@MethodName:getAttribute:[CsrfToken.class.getName(), NativeWebRequest.SCOPE_REQUEST] @TO@ MethodName:getAttribute:[CsrfToken.class.getName(), RequestAttributes.SCOPE_REQUEST] @AT@ 2505 @LENGTH@ 75
---------------UPD QualifiedName@@NativeWebRequest.SCOPE_REQUEST @TO@ RequestAttributes.SCOPE_REQUEST @AT@ 2549 @LENGTH@ 30
------------------UPD SimpleName@@NativeWebRequest @TO@ RequestAttributes @AT@ 2549 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @TO@ TypeDeclaration@@[@ProfileValueSourceConfiguration(RedisTestProfileValueSource.class), public, abstract]AbstractConnectionIntegrationTests,  @AT@ 95420 @LENGTH@ 286
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95420 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95427 @LENGTH@ 4
---INS SimpleName@@MethodName:geoDistNotExisting @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95432 @LENGTH@ 18
---INS VariableDeclarationStatement@@String key="geo-" + UUID.randomUUID(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95458 @LENGTH@ 40
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String key="geo-" + UUID.randomUUID(); @AT@ 95458 @LENGTH@ 6
------INS VariableDeclarationFragment@@key="geo-" + UUID.randomUUID() @TO@ VariableDeclarationStatement@@String key="geo-" + UUID.randomUUID(); @AT@ 95465 @LENGTH@ 32
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key="geo-" + UUID.randomUUID() @AT@ 95465 @LENGTH@ 3
---------INS InfixExpression@@"geo-" + UUID.randomUUID() @TO@ VariableDeclarationFragment@@key="geo-" + UUID.randomUUID() @AT@ 95471 @LENGTH@ 26
------------INS StringLiteral@@"geo-" @TO@ InfixExpression@@"geo-" + UUID.randomUUID() @AT@ 95471 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@"geo-" + UUID.randomUUID() @AT@ 95477 @LENGTH@ 1
------------INS MethodInvocation@@UUID.randomUUID() @TO@ InfixExpression@@"geo-" + UUID.randomUUID() @AT@ 95480 @LENGTH@ 17
---------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 95480 @LENGTH@ 4
---------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 95485 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))) @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95501 @LENGTH@ 68
------INS MethodInvocation@@actual.add(connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))) @AT@ 95501 @LENGTH@ 67
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))) @AT@ 95501 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))] @TO@ MethodInvocation@@actual.add(connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))) @AT@ 95508 @LENGTH@ 60
------------INS MethodInvocation@@connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA)) @TO@ SimpleName@@MethodName:add:[connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA))] @AT@ 95512 @LENGTH@ 55
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA)) @AT@ 95512 @LENGTH@ 10
---------------INS SimpleName@@MethodName:geoAdd:[key, Arrays.asList(PALERMO,CATANIA)] @TO@ MethodInvocation@@connection.geoAdd(key,Arrays.asList(PALERMO,CATANIA)) @AT@ 95523 @LENGTH@ 44
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:geoAdd:[key, Arrays.asList(PALERMO,CATANIA)] @AT@ 95530 @LENGTH@ 3
------------------INS MethodInvocation@@Arrays.asList(PALERMO,CATANIA) @TO@ SimpleName@@MethodName:geoAdd:[key, Arrays.asList(PALERMO,CATANIA)] @AT@ 95535 @LENGTH@ 31
---------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(PALERMO,CATANIA) @AT@ 95535 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:asList:[PALERMO, CATANIA] @TO@ MethodInvocation@@Arrays.asList(PALERMO,CATANIA) @AT@ 95542 @LENGTH@ 24
------------------------INS SimpleName@@PALERMO @TO@ SimpleName@@MethodName:asList:[PALERMO, CATANIA] @AT@ 95549 @LENGTH@ 7
------------------------INS SimpleName@@CATANIA @TO@ SimpleName@@MethodName:asList:[PALERMO, CATANIA] @AT@ 95558 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:actual.add(connection.geoDist(key,"Spring","Data")) @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95572 @LENGTH@ 54
------INS MethodInvocation@@actual.add(connection.geoDist(key,"Spring","Data")) @TO@ ExpressionStatement@@MethodInvocation:actual.add(connection.geoDist(key,"Spring","Data")) @AT@ 95572 @LENGTH@ 53
---------INS SimpleName@@Name:actual @TO@ MethodInvocation@@actual.add(connection.geoDist(key,"Spring","Data")) @AT@ 95572 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[connection.geoDist(key,"Spring","Data")] @TO@ MethodInvocation@@actual.add(connection.geoDist(key,"Spring","Data")) @AT@ 95579 @LENGTH@ 46
------------INS MethodInvocation@@connection.geoDist(key,"Spring","Data") @TO@ SimpleName@@MethodName:add:[connection.geoDist(key,"Spring","Data")] @AT@ 95583 @LENGTH@ 41
---------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.geoDist(key,"Spring","Data") @AT@ 95583 @LENGTH@ 10
---------------INS SimpleName@@MethodName:geoDist:[key, "Spring", "Data"] @TO@ MethodInvocation@@connection.geoDist(key,"Spring","Data") @AT@ 95594 @LENGTH@ 30
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:geoDist:[key, "Spring", "Data"] @AT@ 95602 @LENGTH@ 3
------------------INS StringLiteral@@"Spring" @TO@ SimpleName@@MethodName:geoDist:[key, "Spring", "Data"] @AT@ 95607 @LENGTH@ 8
------------------INS StringLiteral@@"Data" @TO@ SimpleName@@MethodName:geoDist:[key, "Spring", "Data"] @AT@ 95617 @LENGTH@ 6
---INS VariableDeclarationStatement@@List<Object> result=getResults(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95630 @LENGTH@ 35
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> result=getResults(); @AT@ 95630 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 95630 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 95635 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=getResults() @TO@ VariableDeclarationStatement@@List<Object> result=getResults(); @AT@ 95643 @LENGTH@ 21
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=getResults() @AT@ 95643 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:getResults:[] @TO@ VariableDeclarationFragment@@result=getResults() @AT@ 95652 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(result.get(1)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:geoDistNotExisting,  @AT@ 95668 @LENGTH@ 35
------INS MethodInvocation@@assertThat(result.get(1)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.get(1)).isNull() @AT@ 95668 @LENGTH@ 34
---------INS MethodInvocation@@MethodName:assertThat:[result.get(1)] @TO@ MethodInvocation@@assertThat(result.get(1)).isNull() @AT@ 95668 @LENGTH@ 25
------------INS MethodInvocation@@result.get(1) @TO@ MethodInvocation@@MethodName:assertThat:[result.get(1)] @AT@ 95679 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(1) @AT@ 95679 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[1] @TO@ MethodInvocation@@result.get(1) @AT@ 95686 @LENGTH@ 6
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:get:[1] @AT@ 95690 @LENGTH@ 1
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(result.get(1)).isNull() @AT@ 95694 @LENGTH@ 8


INS IfStatement@@if (singleConsumer instanceof String) {  queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer));} @TO@ MethodDeclaration@@private, void, MethodName:formatSpecialQueueArguments, Map<String,Object> queueArgs,  @AT@ 4343 @LENGTH@ 183
---INS InstanceofExpression@@singleConsumer instanceof String @TO@ IfStatement@@if (singleConsumer instanceof String) {  queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer));} @AT@ 4347 @LENGTH@ 32
------INS SimpleName@@singleConsumer @TO@ InstanceofExpression@@singleConsumer instanceof String @AT@ 4347 @LENGTH@ 14
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@singleConsumer instanceof String @AT@ 4362 @LENGTH@ 10
------INS SimpleType@@String @TO@ InstanceofExpression@@singleConsumer instanceof String @AT@ 4373 @LENGTH@ 6
---INS Block@@ThenBody:{  queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer));} @TO@ IfStatement@@if (singleConsumer instanceof String) {  queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer));} @AT@ 4381 @LENGTH@ 145
------INS ExpressionStatement@@MethodInvocation:queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer)) @TO@ Block@@ThenBody:{  queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer));} @AT@ 4395 @LENGTH@ 121
---------INS MethodInvocation@@queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer)) @TO@ ExpressionStatement@@MethodInvocation:queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer)) @AT@ 4395 @LENGTH@ 120
------------INS SimpleName@@Name:queueArgs @TO@ MethodInvocation@@queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer)) @AT@ 4395 @LENGTH@ 9
------------INS SimpleName@@MethodName:put:[RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY, Boolean.parseBoolean((String)singleConsumer)] @TO@ MethodInvocation@@queueArgs.put(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY,Boolean.parseBoolean((String)singleConsumer)) @AT@ 4405 @LENGTH@ 110
---------------INS QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @TO@ SimpleName@@MethodName:put:[RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY, Boolean.parseBoolean((String)singleConsumer)] @AT@ 4409 @LENGTH@ 59
------------------INS SimpleName@@RabbitMQConstants @TO@ QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @AT@ 4409 @LENGTH@ 17
------------------INS SimpleName@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @TO@ QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @AT@ 4427 @LENGTH@ 41
---------------INS MethodInvocation@@Boolean.parseBoolean((String)singleConsumer) @TO@ SimpleName@@MethodName:put:[RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY, Boolean.parseBoolean((String)singleConsumer)] @AT@ 4470 @LENGTH@ 44
------------------INS SimpleName@@Name:Boolean @TO@ MethodInvocation@@Boolean.parseBoolean((String)singleConsumer) @AT@ 4470 @LENGTH@ 7
------------------INS SimpleName@@MethodName:parseBoolean:[(String)singleConsumer] @TO@ MethodInvocation@@Boolean.parseBoolean((String)singleConsumer) @AT@ 4478 @LENGTH@ 36
---------------------INS CastExpression@@(String)singleConsumer @TO@ SimpleName@@MethodName:parseBoolean:[(String)singleConsumer] @AT@ 4491 @LENGTH@ 22
------------------------INS SimpleType@@String @TO@ CastExpression@@(String)singleConsumer @AT@ 4492 @LENGTH@ 6
------------------------INS SimpleName@@singleConsumer @TO@ CastExpression@@(String)singleConsumer @AT@ 4499 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2857 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2857 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2864 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from(rabbitMQEndpoint).onException(Exception.class).handled(false).end().id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated unhandled exception")) @TO@ MethodInvocation:from(rabbitMQEndpoint).onException(Exception.class).handled(false).end().id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated unhandled exception")) @AT@ 2299 @LENGTH@ 262
---UPD MethodInvocation@@from(rabbitMQEndpoint).onException(Exception.class).handled(false).end().id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated unhandled exception")) @TO@ from(rabbitMQEndpoint).onException(Exception.class).handled(false).end().id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated unhandled exception")) @AT@ 2299 @LENGTH@ 261
------UPD MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, consumingMockEndpoint] @AT@ 2299 @LENGTH@ 173
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @AT@ 2532 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2532 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2548 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsInvalidString,  @TO@ TypeDeclaration@@[public]RunIdIncrementerTests,  @AT@ 2078 @LENGTH@ 165
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsInvalidString,  @AT@ 2078 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsInvalidString,  @AT@ 2085 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetNextWhenRunIdIsInvalidString @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsInvalidString,  @AT@ 2090 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:this.incrementer.getNext(new JobParametersBuilder().addString("run.id","foo").toJobParameters()) @TO@ MethodDeclaration@@public, void, MethodName:testGetNextWhenRunIdIsInvalidString,  @AT@ 2132 @LENGTH@ 108
------INS MethodInvocation@@this.incrementer.getNext(new JobParametersBuilder().addString("run.id","foo").toJobParameters()) @TO@ ExpressionStatement@@MethodInvocation:this.incrementer.getNext(new JobParametersBuilder().addString("run.id","foo").toJobParameters()) @AT@ 2132 @LENGTH@ 107
---------INS FieldAccess@@this.incrementer @TO@ MethodInvocation@@this.incrementer.getNext(new JobParametersBuilder().addString("run.id","foo").toJobParameters()) @AT@ 2132 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.incrementer @AT@ 2132 @LENGTH@ 4
------------INS SimpleName@@incrementer @TO@ FieldAccess@@this.incrementer @AT@ 2137 @LENGTH@ 11
---------INS SimpleName@@MethodName:getNext:[new JobParametersBuilder().addString("run.id","foo").toJobParameters()] @TO@ MethodInvocation@@this.incrementer.getNext(new JobParametersBuilder().addString("run.id","foo").toJobParameters()) @AT@ 2149 @LENGTH@ 90
------------INS MethodInvocation@@new JobParametersBuilder().addString("run.id","foo").toJobParameters() @TO@ SimpleName@@MethodName:getNext:[new JobParametersBuilder().addString("run.id","foo").toJobParameters()] @AT@ 2157 @LENGTH@ 81
---------------INS MethodInvocation@@MethodName:addString:["run.id", "foo"] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","foo").toJobParameters() @AT@ 2157 @LENGTH@ 58
------------------INS StringLiteral@@"run.id" @TO@ MethodInvocation@@MethodName:addString:["run.id", "foo"] @AT@ 2199 @LENGTH@ 8
------------------INS StringLiteral@@"foo" @TO@ MethodInvocation@@MethodName:addString:["run.id", "foo"] @AT@ 2209 @LENGTH@ 5
---------------INS ClassInstanceCreation@@JobParametersBuilder[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","foo").toJobParameters() @AT@ 2157 @LENGTH@ 26
------------------INS New@@new @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 2157 @LENGTH@ 3
------------------INS SimpleType@@JobParametersBuilder @TO@ ClassInstanceCreation@@JobParametersBuilder[] @AT@ 2161 @LENGTH@ 20
---------------INS SimpleName@@MethodName:toJobParameters:[] @TO@ MethodInvocation@@new JobParametersBuilder().addString("run.id","foo").toJobParameters() @AT@ 2221 @LENGTH@ 17


UPD TypeDeclaration@@[private, final, static]ConnectionWrapper, SimpleConnection @TO@ [private, static, final]ConnectionWrapper, SimpleConnection @AT@ 4108 @LENGTH@ 3147
---DEL Modifier@@static @AT@ 4122 @LENGTH@ 6
---INS Modifier@@static @TO@ TypeDeclaration@@[private, final, static]ConnectionWrapper, SimpleConnection @AT@ 4127 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.hasLength(uri) @TO@ MethodInvocation:Assert.hasLength(uri,"The URI string should not be empty or null") @AT@ 1901 @LENGTH@ 22
---UPD MethodInvocation@@Assert.hasLength(uri) @TO@ Assert.hasLength(uri,"The URI string should not be empty or null") @AT@ 1901 @LENGTH@ 21
------UPD SimpleName@@MethodName:hasLength:[uri] @TO@ MethodName:hasLength:[uri, "The URI string should not be empty or null"] @AT@ 1908 @LENGTH@ 14
---------INS StringLiteral@@"The URI string should not be empty or null" @TO@ SimpleName@@MethodName:hasLength:[uri] @AT@ 1923 @LENGTH@ 44


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(responsePayload) @TO@ MethodInvocation:exchange.getMessage().setBody(responsePayload) @AT@ 5374 @LENGTH@ 43
---UPD MethodInvocation@@exchange.getOut().setBody(responsePayload) @TO@ exchange.getMessage().setBody(responsePayload) @AT@ 5374 @LENGTH@ 42
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 5374 @LENGTH@ 17


UPD MethodDeclaration@@private, voidMethodName:NestedRelationshipContext, Neo4jPersistentProperty inverse, Object value, RelationshipDescription relationship, Class<?> associationTargetType, boolean inverseValueIsEmpty,  @TO@ private, voidMethodName:NestedRelationshipContext, Neo4jPersistentProperty inverse, @Nullable Object value, RelationshipDescription relationship, Class<?> associationTargetType, boolean inverseValueIsEmpty,  @AT@ 1724 @LENGTH@ 374
---UPD SingleVariableDeclaration@@Object value @TO@ @Nullable Object value @AT@ 1791 @LENGTH@ 12


UPD VariableDeclarationStatement@@Object[] result=exchange.getOut().getBody(Object[].class); @TO@ Object[] result=exchange.getMessage().getBody(Object[].class); @AT@ 2508 @LENGTH@ 60
---UPD VariableDeclarationFragment@@result=exchange.getOut().getBody(Object[].class) @TO@ result=exchange.getMessage().getBody(Object[].class) @AT@ 2517 @LENGTH@ 50
------UPD MethodInvocation@@exchange.getOut().getBody(Object[].class) @TO@ exchange.getMessage().getBody(Object[].class) @AT@ 2526 @LENGTH@ 41
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2526 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ MethodInvocation:assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 2515 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 2515 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @TO@ MethodName:assertEquals:["John", response.getName(), "Get a wrong customer name"] @AT@ 2515 @LENGTH@ 69
---------INS StringLiteral@@"John" @TO@ SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @AT@ 2528 @LENGTH@ 6
---------DEL StringLiteral@@"John" @AT@ 2548 @LENGTH@ 6


UPD MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ public, boolean, MethodName:equals, Object obj,  @AT@ 1858 @LENGTH@ 306
---UPD SingleVariableDeclaration@@Object o @TO@ Object obj @AT@ 1880 @LENGTH@ 8
------UPD SimpleName@@o @TO@ obj @AT@ 1887 @LENGTH@ 1
---UPD IfStatement@@if (this == o) {  return true;} @TO@ if (this == obj) {  return true;} @AT@ 1894 @LENGTH@ 36
------UPD InfixExpression@@this == o @TO@ this == obj @AT@ 1898 @LENGTH@ 9
---------UPD SimpleName@@o @TO@ obj @AT@ 1906 @LENGTH@ 1
---UPD IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @TO@ if (obj == null || getClass() != obj.getClass()) {  return false;} @AT@ 1933 @LENGTH@ 67
------UPD InfixExpression@@o == null || getClass() != o.getClass() @TO@ obj == null || getClass() != obj.getClass() @AT@ 1937 @LENGTH@ 39
---------UPD InfixExpression@@o == null @TO@ obj == null @AT@ 1937 @LENGTH@ 9
------------UPD SimpleName@@o @TO@ obj @AT@ 1937 @LENGTH@ 1
---------UPD InfixExpression@@getClass() != o.getClass() @TO@ getClass() != obj.getClass() @AT@ 1950 @LENGTH@ 26
------------UPD MethodInvocation@@o.getClass() @TO@ obj.getClass() @AT@ 1964 @LENGTH@ 12
---------------UPD SimpleName@@Name:o @TO@ Name:obj @AT@ 1964 @LENGTH@ 1
---UPD VariableDeclarationStatement@@Header header=(Header)o; @TO@ Header other=(Header)obj; @AT@ 2004 @LENGTH@ 27
------UPD VariableDeclarationFragment@@header=(Header)o @TO@ other=(Header)obj @AT@ 2011 @LENGTH@ 19
---------UPD SimpleName@@header @TO@ other @AT@ 2011 @LENGTH@ 6
---------UPD CastExpression@@(Header)o @TO@ (Header)obj @AT@ 2020 @LENGTH@ 10
------------UPD SimpleName@@o @TO@ obj @AT@ 2029 @LENGTH@ 1
---UPD IfStatement@@if (!this.headerName.equals(header.headerName)) {  return false;} @TO@ if (!this.headerName.equals(other.headerName)) {  return false;} @AT@ 2035 @LENGTH@ 70
------UPD PrefixExpression@@!this.headerName.equals(header.headerName) @TO@ !this.headerName.equals(other.headerName) @AT@ 2039 @LENGTH@ 42
---------UPD MethodInvocation@@this.headerName.equals(header.headerName) @TO@ this.headerName.equals(other.headerName) @AT@ 2040 @LENGTH@ 41
------------UPD SimpleName@@MethodName:equals:[header.headerName] @TO@ MethodName:equals:[other.headerName] @AT@ 2056 @LENGTH@ 25
---------------UPD QualifiedName@@header.headerName @TO@ other.headerName @AT@ 2063 @LENGTH@ 17
------------------UPD SimpleName@@header @TO@ other @AT@ 2063 @LENGTH@ 6
---UPD ReturnStatement@@MethodInvocation:this.headerValues.equals(header.headerValues) @TO@ MethodInvocation:this.headerValues.equals(other.headerValues) @AT@ 2108 @LENGTH@ 53
------UPD MethodInvocation@@this.headerValues.equals(header.headerValues) @TO@ this.headerValues.equals(other.headerValues) @AT@ 2115 @LENGTH@ 45
---------UPD SimpleName@@MethodName:equals:[header.headerValues] @TO@ MethodName:equals:[other.headerValues] @AT@ 2133 @LENGTH@ 27
------------UPD QualifiedName@@header.headerValues @TO@ other.headerValues @AT@ 2140 @LENGTH@ 19
---------------UPD SimpleName@@header @TO@ other @AT@ 2140 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:doc.append("items",items.size() == 1 ? items.iterator().next() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())) @TO@ MethodInvocation:doc.append("items",items.size() == 1 ? items.iterator().next().toDocument() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())) @AT@ 40438 @LENGTH@ 151
---UPD MethodInvocation@@doc.append("items",items.size() == 1 ? items.iterator().next() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())) @TO@ doc.append("items",items.size() == 1 ? items.iterator().next().toDocument() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())) @AT@ 40438 @LENGTH@ 150
------UPD SimpleName@@MethodName:append:["items", items.size() == 1 ? items.iterator().next() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())] @TO@ MethodName:append:["items", items.size() == 1 ? items.iterator().next().toDocument() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList())] @AT@ 40442 @LENGTH@ 146
---------UPD ConditionalExpression@@items.size() == 1 ? items.iterator().next() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList()) @TO@ items.size() == 1 ? items.iterator().next().toDocument() : items.stream().map(JsonSchemaObject::toDocument).collect(Collectors.toList()) @AT@ 40458 @LENGTH@ 129
------------UPD MethodInvocation@@items.iterator().next() @TO@ items.iterator().next().toDocument() @AT@ 40478 @LENGTH@ 23
---------------UPD SimpleName@@MethodName:next:[] @TO@ MethodName:toDocument:[] @AT@ 40495 @LENGTH@ 6
---------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@items.iterator().next() @AT@ 40504 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:LOG.warn("DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.",uri,value,e) @TO@ MethodInvocation:LOG.warn("DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.",uri,value,e.getMessage(),e) @AT@ 11550 @LENGTH@ 107
---UPD MethodInvocation@@LOG.warn("DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.",uri,value,e) @TO@ LOG.warn("DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.",uri,value,e.getMessage(),e) @AT@ 11550 @LENGTH@ 106
------UPD SimpleName@@MethodName:warn:["DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.", uri, value, e] @TO@ MethodName:warn:["DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.", uri, value, e.getMessage(), e] @AT@ 11554 @LENGTH@ 102
---------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:warn:["DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.", uri, value, e] @AT@ 11698 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 11698 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 11700 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:System.out.printf("** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s",OpenSslNativeJna.VERSION,OpenSslJna.initialisationError().getMessage()) @TO@ MethodInvocation:System.out.printf("** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s%n",OpenSslNativeJna.VERSION,OpenSslJna.initialisationError().getMessage()) @AT@ 1101 @LENGTH@ 175
---UPD MethodInvocation@@System.out.printf("** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s",OpenSslNativeJna.VERSION,OpenSslJna.initialisationError().getMessage()) @TO@ System.out.printf("** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s%n",OpenSslNativeJna.VERSION,OpenSslJna.initialisationError().getMessage()) @AT@ 1101 @LENGTH@ 174
------UPD SimpleName@@MethodName:printf:["** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s", OpenSslNativeJna.VERSION, OpenSslJna.initialisationError().getMessage()] @TO@ MethodName:printf:["** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s%n", OpenSslNativeJna.VERSION, OpenSslJna.initialisationError().getMessage()] @AT@ 1112 @LENGTH@ 163
---------UPD StringLiteral@@"** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s" @TO@ "** WARN: Could not enable JNA; detected lib VERSION 0x%x: %s%n" @AT@ 1119 @LENGTH@ 62


DEL FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(MethodSecurityEvaluationContext.class)] @AT@ 1602 @LENGTH@ 91
---DEL Modifier@@private @AT@ 1602 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1610 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1617 @LENGTH@ 5
---DEL SimpleType@@Log @AT@ 1623 @LENGTH@ 3
---DEL VariableDeclarationFragment@@logger=LogFactory.getLog(MethodSecurityEvaluationContext.class) @AT@ 1627 @LENGTH@ 65
------DEL SimpleName@@logger @AT@ 1627 @LENGTH@ 6
------DEL MethodInvocation@@LogFactory.getLog(MethodSecurityEvaluationContext.class) @AT@ 1636 @LENGTH@ 56
---------DEL SimpleName@@Name:LogFactory @AT@ 1636 @LENGTH@ 10
---------DEL SimpleName@@MethodName:getLog:[MethodSecurityEvaluationContext.class] @AT@ 1647 @LENGTH@ 45
------------DEL TypeLiteral@@MethodSecurityEvaluationContext.class @AT@ 1654 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Bye World") @TO@ MethodInvocation:exchange.getMessage().setBody("Bye World") @AT@ 3708 @LENGTH@ 39
---UPD MethodInvocation@@exchange.getOut().setBody("Bye World") @TO@ exchange.getMessage().setBody("Bye World") @AT@ 3708 @LENGTH@ 38
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3708 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals("os=" + System.getProperty("os.name"),result) @TO@ MethodInvocation:assertEquals("os=" + System.getProperty("os.name"),result.replaceAll("%20"," ")) @AT@ 1566 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals("os=" + System.getProperty("os.name"),result) @TO@ assertEquals("os=" + System.getProperty("os.name"),result.replaceAll("%20"," ")) @AT@ 1566 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:["os=" + System.getProperty("os.name"), result] @TO@ MethodName:assertEquals:["os=" + System.getProperty("os.name"), result.replaceAll("%20"," ")] @AT@ 1566 @LENGTH@ 59
---------DEL SimpleName@@result @AT@ 1618 @LENGTH@ 6
---------INS MethodInvocation@@result.replaceAll("%20"," ") @TO@ SimpleName@@MethodName:assertEquals:["os=" + System.getProperty("os.name"), result] @AT@ 1641 @LENGTH@ 29
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.replaceAll("%20"," ") @AT@ 1641 @LENGTH@ 6
------------INS SimpleName@@MethodName:replaceAll:["%20", " "] @TO@ MethodInvocation@@result.replaceAll("%20"," ") @AT@ 1648 @LENGTH@ 22
---------------INS StringLiteral@@"%20" @TO@ SimpleName@@MethodName:replaceAll:["%20", " "] @AT@ 1659 @LENGTH@ 5
---------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:replaceAll:["%20", " "] @AT@ 1666 @LENGTH@ 3


DEL IfStatement@@if (this.method == null) {  throw new IllegalArgumentException("Could not obtain target method from JoinPoint: '" + jp + "'");} @AT@ 1905 @LENGTH@ 132
---DEL InfixExpression@@this.method == null @AT@ 1909 @LENGTH@ 19
------DEL FieldAccess@@this.method @AT@ 1909 @LENGTH@ 11
------DEL Operator@@== @AT@ 1920 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 1924 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Could not obtain target method from JoinPoint: '" + jp + "'");} @AT@ 1930 @LENGTH@ 107
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Could not obtain target method from JoinPoint: '" + jp + "'") @AT@ 1935 @LENGTH@ 98
---------DEL ClassInstanceCreation@@IllegalArgumentException["Could not obtain target method from JoinPoint: '" + jp + "'"] @AT@ 1941 @LENGTH@ 91
------------DEL New@@new @AT@ 1941 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 1945 @LENGTH@ 24
------------DEL InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 1970 @LENGTH@ 61


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map((r) -> r.getVariables()).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))).next().switchIfEmpty(Mono.fromCallable(() -> new AuthorizationDecision(false))) @TO@ MethodInvocation:Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))).next().switchIfEmpty(Mono.fromCallable(() -> new AuthorizationDecision(false))) @AT@ 2192 @LENGTH@ 423
---UPD MethodInvocation@@Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map((r) -> r.getVariables()).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))).next().switchIfEmpty(Mono.fromCallable(() -> new AuthorizationDecision(false))) @TO@ Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))).next().switchIfEmpty(Mono.fromCallable(() -> new AuthorizationDecision(false))) @AT@ 2199 @LENGTH@ 415
------UPD MethodInvocation@@MethodName:concatMap:[(mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map((r) -> r.getVariables()).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))] @TO@ MethodName:concatMap:[(mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables)))] @AT@ 2199 @LENGTH@ 330
---------UPD LambdaExpression@@(mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map((r) -> r.getVariables()).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables))) @TO@ (mapping) -> mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables))) @AT@ 2247 @LENGTH@ 281
------------UPD MethodInvocation@@mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map((r) -> r.getVariables()).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables))) @TO@ mapping.getMatcher().matches(exchange).filter(PayloadExchangeMatcher.MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> mapping.getEntry().check(authentication,new PayloadExchangeAuthorizationContext(exchange,variables))) @AT@ 2260 @LENGTH@ 268
---------------UPD MethodInvocation@@MethodName:map:[(r) -> r.getVariables()] @TO@ MethodName:map:[MatchResult::getVariables] @AT@ 2260 @LENGTH@ 126
------------------DEL LambdaExpression@@(r) -> r.getVariables() @AT@ 2362 @LENGTH@ 23
---------------------DEL VariableDeclarationFragment@@r @AT@ 2363 @LENGTH@ 1
------------------------DEL SimpleName@@r @AT@ 2363 @LENGTH@ 1
---------------------DEL MethodInvocation@@r.getVariables() @AT@ 2369 @LENGTH@ 16
------------------------DEL SimpleName@@Name:r @AT@ 2369 @LENGTH@ 1
------------------------DEL SimpleName@@MethodName:getVariables:[] @AT@ 2371 @LENGTH@ 14


MOV MethodDeclaration@@public, void, MethodName:deleteAll, Iterable<? extends T> entities,  @TO@ TypeDeclaration@@[@Repository, @Transactional(readOnly=true), @API(status=API.Status.STABLE,since="6.0"), public]SimpleNeo4jRepository, [PagingAndSortingRepository<T,ID>] @AT@ 5505 @LENGTH@ 284


UPD ExpressionStatement@@MethodInvocation:assertEquals(null,out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2620 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(null,out.getOut().getBody()) @TO@ assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2620 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody()] @AT@ 2620 @LENGTH@ 42
---------DEL NullLiteral@@null @AT@ 2633 @LENGTH@ 4
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 2639 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2639 @LENGTH@ 12
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @AT@ 2698 @LENGTH@ 13


INS FieldDeclaration@@static, final, String, [DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config"] @TO@ TypeDeclaration@@Constants,  @AT@ 1038 @LENGTH@ 76
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, String, [DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config"] @AT@ 1038 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, String, [DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config"] @AT@ 1045 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@static, final, String, [DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config"] @AT@ 1051 @LENGTH@ 6
---INS VariableDeclarationFragment@@DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config" @TO@ FieldDeclaration@@static, final, String, [DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config"] @AT@ 1058 @LENGTH@ 55
------INS SimpleName@@DISPLAY_GALLEON_CONFIG_ARG @TO@ VariableDeclarationFragment@@DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config" @AT@ 1058 @LENGTH@ 26
------INS StringLiteral@@"--display-galleon-config" @TO@ VariableDeclarationFragment@@DISPLAY_GALLEON_CONFIG_ARG="--display-galleon-config" @AT@ 1087 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertEquals(value,POST_MESSAGE,"The response message is wrong") @TO@ MethodInvocation:assertEquals(POST_MESSAGE,value,"The response message is wrong") @AT@ 11245 @LENGTH@ 67
---UPD MethodInvocation@@assertEquals(value,POST_MESSAGE,"The response message is wrong") @TO@ assertEquals(POST_MESSAGE,value,"The response message is wrong") @AT@ 11245 @LENGTH@ 66
------UPD SimpleName@@MethodName:assertEquals:[value, POST_MESSAGE, "The response message is wrong"] @TO@ MethodName:assertEquals:[POST_MESSAGE, value, "The response message is wrong"] @AT@ 11245 @LENGTH@ 66
---------INS SimpleName@@POST_MESSAGE @TO@ SimpleName@@MethodName:assertEquals:[value, POST_MESSAGE, "The response message is wrong"] @AT@ 11258 @LENGTH@ 12
---------DEL SimpleName@@POST_MESSAGE @AT@ 11265 @LENGTH@ 12


UPD IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 7272 @LENGTH@ 61
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 7320 @LENGTH@ 13


MOV ReturnStatement@@ClassInstanceCreation:new String(Hex.encode(digest)) @TO@ MethodDeclaration@@private, String, MethodName:encode, byte[] digest,  @AT@ 4599 @LENGTH@ 38


INS ExpressionStatement@@MethodInvocation:addPropertyIfAbsent(SERVER_DATA_DIR,dataDir) @TO@ MethodDeclaration@@void, MethodName:configureProperties,  @AT@ 2181 @LENGTH@ 46
---INS MethodInvocation@@addPropertyIfAbsent(SERVER_DATA_DIR,dataDir) @TO@ ExpressionStatement@@MethodInvocation:addPropertyIfAbsent(SERVER_DATA_DIR,dataDir) @AT@ 2181 @LENGTH@ 45
------INS SimpleName@@MethodName:addPropertyIfAbsent:[SERVER_DATA_DIR, dataDir] @TO@ MethodInvocation@@addPropertyIfAbsent(SERVER_DATA_DIR,dataDir) @AT@ 2181 @LENGTH@ 45
---------INS SimpleName@@SERVER_DATA_DIR @TO@ SimpleName@@MethodName:addPropertyIfAbsent:[SERVER_DATA_DIR, dataDir] @AT@ 2201 @LENGTH@ 15
---------INS SimpleName@@dataDir @TO@ SimpleName@@MethodName:addPropertyIfAbsent:[SERVER_DATA_DIR, dataDir] @AT@ 2218 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:auth.jdbcAuthentication().dataSource(this.dataSource).userCache(new CustomUserCache()).usersByUsernameQuery("select principal,credentials,true from users where principal = ?").authoritiesByUsernameQuery("select principal,role from roles where principal = ?").groupAuthoritiesByUsername(JdbcUserDetailsManager.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY).rolePrefix("ROLE_") @TO@ MethodInvocation:auth.jdbcAuthentication().dataSource(this.dataSource).userCache(new CustomUserCache()).usersByUsernameQuery("select principal,credentials,true from users where principal = ?").authoritiesByUsernameQuery("select principal,role from roles where principal = ?").groupAuthoritiesByUsername(JdbcDaoImpl.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY).rolePrefix("ROLE_") @AT@ 3662 @LENGTH@ 677
---UPD MethodInvocation@@auth.jdbcAuthentication().dataSource(this.dataSource).userCache(new CustomUserCache()).usersByUsernameQuery("select principal,credentials,true from users where principal = ?").authoritiesByUsernameQuery("select principal,role from roles where principal = ?").groupAuthoritiesByUsername(JdbcUserDetailsManager.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY).rolePrefix("ROLE_") @TO@ auth.jdbcAuthentication().dataSource(this.dataSource).userCache(new CustomUserCache()).usersByUsernameQuery("select principal,credentials,true from users where principal = ?").authoritiesByUsernameQuery("select principal,role from roles where principal = ?").groupAuthoritiesByUsername(JdbcDaoImpl.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY).rolePrefix("ROLE_") @AT@ 3662 @LENGTH@ 676
------UPD MethodInvocation@@MethodName:groupAuthoritiesByUsername:[JdbcUserDetailsManager.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY] @TO@ MethodName:groupAuthoritiesByUsername:[JdbcDaoImpl.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY] @AT@ 3662 @LENGTH@ 614
---------UPD QualifiedName@@JdbcUserDetailsManager.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY @TO@ JdbcDaoImpl.DEF_GROUP_AUTHORITIES_BY_USERNAME_QUERY @AT@ 4213 @LENGTH@ 62
------------UPD SimpleName@@JdbcUserDetailsManager @TO@ JdbcDaoImpl @AT@ 4213 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:this.shutdownStrategy=new DefaultMainShutdownStrategy() @TO@ Assignment:this.shutdownStrategy=new DefaultMainShutdownStrategy(this) @AT@ 1817 @LENGTH@ 58
---UPD Assignment@@this.shutdownStrategy=new DefaultMainShutdownStrategy() @TO@ this.shutdownStrategy=new DefaultMainShutdownStrategy(this) @AT@ 1817 @LENGTH@ 57
------UPD ClassInstanceCreation@@DefaultMainShutdownStrategy[] @TO@ DefaultMainShutdownStrategy[this] @AT@ 1841 @LENGTH@ 33
---------INS ThisExpression@@this @TO@ ClassInstanceCreation@@DefaultMainShutdownStrategy[] @AT@ 1873 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:Thread.sleep(10000) @AT@ 1895 @LENGTH@ 50
---UPD MethodInvocation@@Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ Thread.sleep(10000) @AT@ 1895 @LENGTH@ 49
------UPD SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @TO@ MethodName:sleep:[10000] @AT@ 1902 @LENGTH@ 42
---------DEL MethodInvocation@@runFrequency(TimeUnit.MILLISECONDS) @AT@ 1908 @LENGTH@ 35
------------DEL SimpleName@@MethodName:runFrequency:[TimeUnit.MILLISECONDS] @AT@ 1908 @LENGTH@ 35
---------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 1921 @LENGTH@ 21
------------------DEL SimpleName@@TimeUnit @AT@ 1921 @LENGTH@ 8
------------------DEL SimpleName@@MILLISECONDS @AT@ 1930 @LENGTH@ 12
---------INS NumberLiteral@@10000 @TO@ SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @AT@ 1908 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas)) @TO@ MethodDeclaration@@private, Collection<? extends GrantedAuthority>, MethodName:getWebSphereGroupsBasedGrantedAuthorities,  @AT@ 3104 @LENGTH@ 126
---MOV MethodInvocation@@this.logger.debug("WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas)) @AT@ 3095 @LENGTH@ 104
------UPD SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @TO@ MethodName:format:["WebSphere groups: %s mapped to Granted Authorities: %s", webSphereGroups, userGas] @AT@ 3107 @LENGTH@ 92
------INS SimpleName@@MethodName:debug:[LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas)] @TO@ MethodInvocation@@this.logger.debug("WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas) @AT@ 3116 @LENGTH@ 113
---------INS MethodInvocation@@LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas)] @AT@ 3127 @LENGTH@ 101
------------MOV SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @TO@ MethodInvocation@@LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas) @AT@ 3107 @LENGTH@ 92
---------------DEL InfixExpression@@"WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas @AT@ 3113 @LENGTH@ 85
------------------DEL StringLiteral@@"WebSphere groups: " @AT@ 3113 @LENGTH@ 20
------------------DEL Operator@@+ @AT@ 3133 @LENGTH@ 1
------------------DEL SimpleName@@webSphereGroups @AT@ 3136 @LENGTH@ 15
------------------DEL StringLiteral@@" mapped to Granted Authorities: " @AT@ 3154 @LENGTH@ 34
------------------DEL SimpleName@@userGas @AT@ 3191 @LENGTH@ 7
---------------INS StringLiteral@@"WebSphere groups: %s mapped to Granted Authorities: %s" @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3145 @LENGTH@ 56
---------------INS SimpleName@@webSphereGroups @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3203 @LENGTH@ 15
---------------INS SimpleName@@userGas @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3220 @LENGTH@ 7
------------MOV SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @TO@ MethodInvocation@@LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas) @AT@ 3107 @LENGTH@ 92
---------------DEL InfixExpression@@"WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas @AT@ 3113 @LENGTH@ 85
------------------DEL StringLiteral@@"WebSphere groups: " @AT@ 3113 @LENGTH@ 20
------------------DEL Operator@@+ @AT@ 3133 @LENGTH@ 1
------------------DEL SimpleName@@webSphereGroups @AT@ 3136 @LENGTH@ 15
------------------DEL StringLiteral@@" mapped to Granted Authorities: " @AT@ 3154 @LENGTH@ 34
------------------DEL SimpleName@@userGas @AT@ 3191 @LENGTH@ 7
---------------INS StringLiteral@@"WebSphere groups: %s mapped to Granted Authorities: %s" @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3145 @LENGTH@ 56
---------------INS SimpleName@@webSphereGroups @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3203 @LENGTH@ 15
---------------INS SimpleName@@userGas @TO@ SimpleName@@MethodName:debug:["WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas] @AT@ 3220 @LENGTH@ 7
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("WebSphere groups: %s mapped to Granted Authorities: %s",webSphereGroups,userGas) @AT@ 3127 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(xml) @TO@ MethodInvocation:exchange.getMessage().setBody(xml) @AT@ 4042 @LENGTH@ 31
---UPD MethodInvocation@@exchange.getOut().setBody(xml) @TO@ exchange.getMessage().setBody(xml) @AT@ 4042 @LENGTH@ 30
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4042 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:put(ConfVars.HIVE_IN_TEST.varname,"true") @TO@ MethodInvocation:put(ConfVars.HIVE_IN_TEST_REPL.varname,"true") @AT@ 3340 @LENGTH@ 43
---UPD MethodInvocation@@put(ConfVars.HIVE_IN_TEST.varname,"true") @TO@ put(ConfVars.HIVE_IN_TEST_REPL.varname,"true") @AT@ 3340 @LENGTH@ 42
------UPD SimpleName@@MethodName:put:[ConfVars.HIVE_IN_TEST.varname, "true"] @TO@ MethodName:put:[ConfVars.HIVE_IN_TEST_REPL.varname, "true"] @AT@ 3340 @LENGTH@ 42
---------UPD QualifiedName@@ConfVars.HIVE_IN_TEST.varname @TO@ ConfVars.HIVE_IN_TEST_REPL.varname @AT@ 3344 @LENGTH@ 29
------------UPD QualifiedName@@ConfVars.HIVE_IN_TEST @TO@ ConfVars.HIVE_IN_TEST_REPL @AT@ 3344 @LENGTH@ 21
---------------UPD SimpleName@@HIVE_IN_TEST @TO@ HIVE_IN_TEST_REPL @AT@ 3353 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2102 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2102 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2118 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process?timeout=100") @TO@ MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process?timeout=100") @AT@ 1270 @LENGTH@ 183
---UPD MethodInvocation@@from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process?timeout=100") @TO@ from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process?timeout=100") @AT@ 1270 @LENGTH@ 182
------UPD SimpleName@@MethodName:inOut:["seda:process?timeout=100"] @TO@ MethodName:to:[ExchangePattern.InOut, "seda:process?timeout=100"] @AT@ 1419 @LENGTH@ 33
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:["seda:process?timeout=100"] @AT@ 1463 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1463 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1479 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:this.authenticationManagerResolver.resolve(exchange).flatMap((authenticationManager) -> authenticationManager.authenticate(token)).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,new WebFilterExchange(exchange,chain))).doOnError(AuthenticationException.class,(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication failed: " + e.getMessage());
  }
}
) @TO@ MethodInvocation:this.authenticationManagerResolver.resolve(exchange).flatMap((authenticationManager) -> authenticationManager.authenticate(token)).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,new WebFilterExchange(exchange,chain))).doOnError(AuthenticationException.class,(ex) -> logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage()))) @AT@ 5670 @LENGTH@ 560
---UPD MethodInvocation@@this.authenticationManagerResolver.resolve(exchange).flatMap((authenticationManager) -> authenticationManager.authenticate(token)).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,new WebFilterExchange(exchange,chain))).doOnError(AuthenticationException.class,(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication failed: " + e.getMessage());
  }
}
) @TO@ this.authenticationManagerResolver.resolve(exchange).flatMap((authenticationManager) -> authenticationManager.authenticate(token)).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,new WebFilterExchange(exchange,chain))).doOnError(AuthenticationException.class,(ex) -> logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage()))) @AT@ 5677 @LENGTH@ 552
------UPD SimpleName@@MethodName:doOnError:[AuthenticationException.class, (e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication failed: " + e.getMessage());
  }
}
] @TO@ MethodName:doOnError:[AuthenticationException.class, (ex) -> logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage()))] @AT@ 6066 @LENGTH@ 163
---------UPD LambdaExpression@@(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication failed: " + e.getMessage());
  }
}
 @TO@ (ex) -> logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage())) @AT@ 6107 @LENGTH@ 121
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 6108 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 6108 @LENGTH@ 1
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Authentication failed: " + e.getMessage());} @AT@ 6121 @LENGTH@ 101
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 6125 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 6132 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("Authentication failed: " + e.getMessage());} @AT@ 6150 @LENGTH@ 72
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Authentication failed: " + e.getMessage()) @AT@ 6158 @LENGTH@ 57
---------------------DEL MethodInvocation@@logger.debug("Authentication failed: " + e.getMessage()) @AT@ 6158 @LENGTH@ 56
------------INS MethodInvocation@@logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage())) @TO@ LambdaExpression@@(e) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Authentication failed: " + e.getMessage());
  }
}
 @AT@ 6171 @LENGTH@ 77
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage())) @AT@ 6125 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:[LogMessage.format("Authentication failed: %s",ex.getMessage())] @TO@ MethodInvocation@@logger.debug(LogMessage.format("Authentication failed: %s",ex.getMessage())) @AT@ 6178 @LENGTH@ 70
------------------INS MethodInvocation@@LogMessage.format("Authentication failed: %s",ex.getMessage()) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Authentication failed: %s",ex.getMessage())] @AT@ 6184 @LENGTH@ 63
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@LogMessage.format("Authentication failed: %s",ex.getMessage()) @AT@ 6158 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["Authentication failed: " + e.getMessage()] @TO@ MethodInvocation@@LogMessage.format("Authentication failed: %s",ex.getMessage()) @AT@ 6165 @LENGTH@ 49
------------------------DEL InfixExpression@@"Authentication failed: " + e.getMessage() @AT@ 6171 @LENGTH@ 42
---------------------------DEL StringLiteral@@"Authentication failed: " @AT@ 6171 @LENGTH@ 25
---------------------------DEL Operator@@+ @AT@ 6196 @LENGTH@ 1
---------------------------DEL MethodInvocation@@e.getMessage() @AT@ 6199 @LENGTH@ 14
------------------------INS StringLiteral@@"Authentication failed: %s" @TO@ SimpleName@@MethodName:debug:["Authentication failed: " + e.getMessage()] @AT@ 6202 @LENGTH@ 27
------------------------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:debug:["Authentication failed: " + e.getMessage()] @AT@ 6231 @LENGTH@ 15
---------------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@ex.getMessage() @AT@ 6199 @LENGTH@ 1
---------------------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@ex.getMessage() @AT@ 6199 @LENGTH@ 1
---------------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 6201 @LENGTH@ 12
---------------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 6201 @LENGTH@ 12


UPD TryStatement@@try {  BrotliUtils.setCacheBrotliAvailability(false);  assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE,BrotliUtils.getCachedBrotliAvailability());  BrotliUtils.setCacheBrotliAvailability(true);  assertEquals(BrotliUtils.CachedAvailability.CACHED_AVAILABLE,BrotliUtils.getCachedBrotliAvailability());}  finally {  BrotliUtils.setCacheBrotliAvailability(true);} @TO@ try {  BrotliUtils.setCacheBrotliAvailablity(false);  assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE,BrotliUtils.getCachedBrotliAvailability());  BrotliUtils.setCacheBrotliAvailablity(true);  assertEquals(BrotliUtils.CachedAvailability.CACHED_AVAILABLE,BrotliUtils.getCachedBrotliAvailability());}  finally {  BrotliUtils.setCacheBrotliAvailablity(true);} @AT@ 3084 @LENGTH@ 440
---UPD ExpressionStatement@@MethodInvocation:BrotliUtils.setCacheBrotliAvailability(false) @TO@ MethodInvocation:BrotliUtils.setCacheBrotliAvailablity(false) @AT@ 3102 @LENGTH@ 46
------UPD MethodInvocation@@BrotliUtils.setCacheBrotliAvailability(false) @TO@ BrotliUtils.setCacheBrotliAvailablity(false) @AT@ 3102 @LENGTH@ 45
---------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[false] @TO@ MethodName:setCacheBrotliAvailablity:[false] @AT@ 3114 @LENGTH@ 33
---UPD ExpressionStatement@@MethodInvocation:BrotliUtils.setCacheBrotliAvailability(true) @TO@ MethodInvocation:BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 3273 @LENGTH@ 45
------UPD MethodInvocation@@BrotliUtils.setCacheBrotliAvailability(true) @TO@ BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 3273 @LENGTH@ 44
---------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[true] @TO@ MethodName:setCacheBrotliAvailablity:[true] @AT@ 3285 @LENGTH@ 32
---UPD Block@@FinallyBody:{  BrotliUtils.setCacheBrotliAvailability(true);} @TO@ FinallyBody:{  BrotliUtils.setCacheBrotliAvailablity(true);} @AT@ 3455 @LENGTH@ 69
------UPD ExpressionStatement@@MethodInvocation:BrotliUtils.setCacheBrotliAvailability(true) @TO@ MethodInvocation:BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 3469 @LENGTH@ 45
---------UPD MethodInvocation@@BrotliUtils.setCacheBrotliAvailability(true) @TO@ BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 3469 @LENGTH@ 44
------------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[true] @TO@ MethodName:setCacheBrotliAvailablity:[true] @AT@ 3481 @LENGTH@ 32


INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()),requestRejectedException) @TO@ MethodDeclaration@@public, void, MethodName:handle, HttpServletRequest request, HttpServletResponse response, RequestRejectedException requestRejectedException, IOException,  @AT@ 1881 @LENGTH@ 133
---MOV MethodInvocation@@logger.debug("Rejecting request due to: " + requestRejectedException.getMessage(),requestRejectedException) @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()),requestRejectedException) @AT@ 1866 @LENGTH@ 113
------UPD SimpleName@@MethodName:debug:["Rejecting request due to: " + requestRejectedException.getMessage(), requestRejectedException] @TO@ MethodName:debug:[LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()), requestRejectedException] @AT@ 1873 @LENGTH@ 106
---------DEL InfixExpression@@"Rejecting request due to: " + requestRejectedException.getMessage() @AT@ 1879 @LENGTH@ 68
------------DEL StringLiteral@@"Rejecting request due to: " @AT@ 1879 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1907 @LENGTH@ 1
------------DEL MethodInvocation@@requestRejectedException.getMessage() @AT@ 1910 @LENGTH@ 37
---------INS MethodInvocation@@LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()) @TO@ SimpleName@@MethodName:debug:["Rejecting request due to: " + requestRejectedException.getMessage(), requestRejectedException] @AT@ 1894 @LENGTH@ 88
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()) @AT@ 1894 @LENGTH@ 10
------------INS SimpleName@@MethodName:format:["Rejecting request due to: %s", requestRejectedException.getMessage()] @TO@ MethodInvocation@@LogMessage.format("Rejecting request due to: %s",requestRejectedException.getMessage()) @AT@ 1905 @LENGTH@ 77
---------------INS StringLiteral@@"Rejecting request due to: %s" @TO@ SimpleName@@MethodName:format:["Rejecting request due to: %s", requestRejectedException.getMessage()] @AT@ 1912 @LENGTH@ 30
---------------INS MethodInvocation@@requestRejectedException.getMessage() @TO@ SimpleName@@MethodName:format:["Rejecting request due to: %s", requestRejectedException.getMessage()] @AT@ 1944 @LENGTH@ 37
------------------MOV SimpleName@@Name:requestRejectedException @TO@ MethodInvocation@@requestRejectedException.getMessage() @AT@ 1910 @LENGTH@ 24
------------------MOV SimpleName@@Name:requestRejectedException @TO@ MethodInvocation@@requestRejectedException.getMessage() @AT@ 1910 @LENGTH@ 24
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@requestRejectedException.getMessage() @AT@ 1935 @LENGTH@ 12
------------------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@requestRejectedException.getMessage() @AT@ 1935 @LENGTH@ 12


UPD TypeDeclaration@@[public]AxFetchListFactory,  @TO@ [@Deprecated, public]AxFetchListFactory,  @AT@ 1378 @LENGTH@ 330
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AxFetchListFactory,  @AT@ 1378 @LENGTH@ 11


UPD VariableDeclarationStatement@@Object passo=ctx.getObjectAttribute("userPassword"); @TO@ Object password=ctx.getObjectAttribute("userPassword"); @AT@ 2761 @LENGTH@ 54
---UPD VariableDeclarationFragment@@passo=ctx.getObjectAttribute("userPassword") @TO@ password=ctx.getObjectAttribute("userPassword") @AT@ 2768 @LENGTH@ 46
------UPD SimpleName@@passo @TO@ password @AT@ 2768 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:constructor_File_nullFile, IOException,  @TO@ public, void, MethodName:constructor_File_nullFile,  @AT@ 6861 @LENGTH@ 298
---DEL SimpleType@@IOException @AT@ 6908 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2392 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2392 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2408 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ MethodInvocation:assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 6574 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 6574 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @TO@ MethodName:assertEquals:["true", bool.toString(), "We should get the echo boolean result from router"] @AT@ 6574 @LENGTH@ 90
---------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @AT@ 6587 @LENGTH@ 6
---------DEL StringLiteral@@"true" @AT@ 6604 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:request.setParameter(MockRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ MethodInvocation:request.setParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 13138 @LENGTH@ 71
---UPD MethodInvocation@@request.setParameter(MockRememberMeServices.DEFAULT_PARAMETER,"true") @TO@ request.setParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"true") @AT@ 13138 @LENGTH@ 70
------UPD SimpleName@@MethodName:setParameter:[MockRememberMeServices.DEFAULT_PARAMETER, "true"] @TO@ MethodName:setParameter:[AbstractRememberMeServices.DEFAULT_PARAMETER, "true"] @AT@ 13146 @LENGTH@ 62
---------UPD QualifiedName@@MockRememberMeServices.DEFAULT_PARAMETER @TO@ AbstractRememberMeServices.DEFAULT_PARAMETER @AT@ 13159 @LENGTH@ 40
------------UPD SimpleName@@MockRememberMeServices @TO@ AbstractRememberMeServices @AT@ 13159 @LENGTH@ 22


MOV EnumDeclaration@@[@Deprecated, public]Saml2X509CredentialType,  @TO@ TypeDeclaration@@[@Deprecated, public]Saml2X509Credential,  @AT@ 1545 @LENGTH@ 104


INS MethodDeclaration@@private, voidMethodName:AuthorityUtils,  @TO@ TypeDeclaration@@[public, abstract]AuthorityUtils,  @AT@ 1262 @LENGTH@ 29
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:AuthorityUtils,  @AT@ 1262 @LENGTH@ 7
---INS SimpleName@@MethodName:AuthorityUtils @TO@ MethodDeclaration@@private, voidMethodName:AuthorityUtils,  @AT@ 1270 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2128 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2128 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2144 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(result.getPriority(),"custom2:GOLD") @TO@ MethodInvocation:assertEquals("custom2:GOLD",result.getPriority()) @AT@ 2282 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals(result.getPriority(),"custom2:GOLD") @TO@ assertEquals("custom2:GOLD",result.getPriority()) @AT@ 2282 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:[result.getPriority(), "custom2:GOLD"] @TO@ MethodName:assertEquals:["custom2:GOLD", result.getPriority()] @AT@ 2282 @LENGTH@ 50
---------INS StringLiteral@@"custom2:GOLD" @TO@ SimpleName@@MethodName:assertEquals:[result.getPriority(), "custom2:GOLD"] @AT@ 2295 @LENGTH@ 14
---------DEL StringLiteral@@"custom2:GOLD" @AT@ 2317 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:from("seda:start").delay(50).inOut("activemq:queue:bar").to("mock:result") @TO@ MethodInvocation:from("seda:start").delay(50).to(ExchangePattern.InOut,"activemq:queue:bar").to("mock:result") @AT@ 3255 @LENGTH@ 240
---UPD MethodInvocation@@from("seda:start").delay(50).inOut("activemq:queue:bar").to("mock:result") @TO@ from("seda:start").delay(50).to(ExchangePattern.InOut,"activemq:queue:bar").to("mock:result") @AT@ 3255 @LENGTH@ 239
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:bar"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:bar"] @AT@ 3255 @LENGTH@ 196
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:bar"] @AT@ 3468 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3468 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3484 @LENGTH@ 5


UPD VariableDeclarationStatement@@org.apache.camel.Message out=exchange.getOut(); @TO@ org.apache.camel.Message out=exchange.getMessage(); @AT@ 6277 @LENGTH@ 49
---UPD VariableDeclarationFragment@@out=exchange.getOut() @TO@ out=exchange.getMessage() @AT@ 6302 @LENGTH@ 23
------UPD MethodInvocation@@exchange.getOut() @TO@ exchange.getMessage() @AT@ 6308 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 6317 @LENGTH@ 8


UPD MethodDeclaration@@public, TryDefinition, MethodName:doCatch, Class<? extends Throwable>... exceptionType,  @TO@ public, final, TryDefinition, MethodName:doCatch, Class<? extends Throwable>... exceptionType,  @AT@ 2813 @LENGTH@ 314
---INS Modifier@@final @TO@ MethodDeclaration@@public, TryDefinition, MethodName:doCatch, Class<? extends Throwable>... exceptionType,  @AT@ 2837 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> new JwtClaimValidator<String>(null,test)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThatThrownBy(() -> new JwtClaimValidator<>(null,test)).isInstanceOf(IllegalArgumentException.class) @AT@ 1878 @LENGTH@ 118
---UPD MethodInvocation@@assertThatThrownBy(() -> new JwtClaimValidator<String>(null,test)).isInstanceOf(IllegalArgumentException.class) @TO@ assertThatThrownBy(() -> new JwtClaimValidator<>(null,test)).isInstanceOf(IllegalArgumentException.class) @AT@ 1878 @LENGTH@ 117
------UPD MethodInvocation@@MethodName:assertThatThrownBy:[() -> new JwtClaimValidator<String>(null,test)] @TO@ MethodName:assertThatThrownBy:[() -> new JwtClaimValidator<>(null,test)] @AT@ 1878 @LENGTH@ 67
---------UPD LambdaExpression@@() -> new JwtClaimValidator<String>(null,test) @TO@ () -> new JwtClaimValidator<>(null,test) @AT@ 1897 @LENGTH@ 47
------------UPD ClassInstanceCreation@@JwtClaimValidator<String>[null, test] @TO@ JwtClaimValidator<>[null, test] @AT@ 1903 @LENGTH@ 41
---------------UPD ParameterizedType@@JwtClaimValidator<String> @TO@ JwtClaimValidator<> @AT@ 1907 @LENGTH@ 25
------------------DEL SimpleType@@String @AT@ 1925 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:Assert.state(this.unmappedMatchers == null,() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @TO@ MethodDeclaration@@final, LinkedHashMap<RequestMatcher,Collection<ConfigAttribute>>, MethodName:createRequestMap,  @AT@ 4054 @LENGTH@ 204
---INS MethodInvocation@@Assert.state(this.unmappedMatchers == null,() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(this.unmappedMatchers == null,() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @AT@ 4054 @LENGTH@ 203
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(this.unmappedMatchers == null,() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @AT@ 4054 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[this.unmappedMatchers == null, () -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')"] @TO@ MethodInvocation@@Assert.state(this.unmappedMatchers == null,() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @AT@ 4061 @LENGTH@ 196
---------INS InfixExpression@@this.unmappedMatchers == null @TO@ SimpleName@@MethodName:state:[this.unmappedMatchers == null, () -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')"] @AT@ 4067 @LENGTH@ 29
------------MOV FieldAccess@@this.unmappedMatchers @TO@ InfixExpression@@this.unmappedMatchers == null @AT@ 4018 @LENGTH@ 21
------------MOV Operator@@!= @TO@ InfixExpression@@this.unmappedMatchers == null @AT@ 4039 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@this.unmappedMatchers == null @AT@ 4043 @LENGTH@ 4
---------INS LambdaExpression@@() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')" @TO@ SimpleName@@MethodName:state:[this.unmappedMatchers == null, () -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')"] @AT@ 4098 @LENGTH@ 158
------------MOV InfixExpression@@"An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')" @TO@ LambdaExpression@@() -> "An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')" @AT@ 4086 @LENGTH@ 153


MOV FieldDeclaration@@private, static, final, int, [DEFAULT_KEY_LENGTH=8] @TO@ TypeDeclaration@@[final]SecureRandomBytesKeyGenerator, [BytesKeyGenerator] @AT@ 1625 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2366 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2366 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2382 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:doPUnsubscribe(true,new byte[0]) @TO@ MethodInvocation:doPUnsubscribe(true) @AT@ 2527 @LENGTH@ 34
---UPD MethodInvocation@@doPUnsubscribe(true,new byte[0]) @TO@ doPUnsubscribe(true) @AT@ 2527 @LENGTH@ 33
------UPD SimpleName@@MethodName:doPUnsubscribe:[true, new byte[0]] @TO@ MethodName:doPUnsubscribe:[true] @AT@ 2527 @LENGTH@ 33
---------DEL ArrayCreation@@new byte[0] @AT@ 2548 @LENGTH@ 11
------------DEL ArrayType@@byte[] @AT@ 2552 @LENGTH@ 7
---------------DEL PrimitiveType@@byte @AT@ 2552 @LENGTH@ 4
------------DEL NumberLiteral@@0 @AT@ 2557 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Hello " + me) @TO@ MethodInvocation:exchange.getMessage().setBody("Hello " + me) @AT@ 3018 @LENGTH@ 41
---UPD MethodInvocation@@exchange.getOut().setBody("Hello " + me) @TO@ exchange.getMessage().setBody("Hello " + me) @AT@ 3018 @LENGTH@ 40
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3018 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(2),res) @TO@ MethodInvocation:assertEquals(Integer.valueOf(2),res) @AT@ 7860 @LENGTH@ 34
---UPD MethodInvocation@@assertEquals(new Integer(2),res) @TO@ assertEquals(Integer.valueOf(2),res) @AT@ 7860 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertEquals:[new Integer(2), res] @TO@ MethodName:assertEquals:[Integer.valueOf(2), res] @AT@ 7860 @LENGTH@ 33
---------INS MethodInvocation@@Integer.valueOf(2) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(2), res] @AT@ 7873 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(2) @AT@ 7873 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[2] @TO@ MethodInvocation@@Integer.valueOf(2) @AT@ 7881 @LENGTH@ 10
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:valueOf:[2] @AT@ 7889 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[2] @AT@ 7873 @LENGTH@ 14
------------DEL New@@new @AT@ 7873 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 7877 @LENGTH@ 7
------------DEL NumberLiteral@@2 @AT@ 7885 @LENGTH@ 1


UPD IfStatement@@if (ex instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(ex.getMessage(),ex);} else {  return new AuthenticationServiceException(ex.getMessage(),ex);} @TO@ if (ex instanceof BadOpaqueTokenException) {  return new InvalidBearerTokenException(ex.getMessage(),ex);} @AT@ 4387 @LENGTH@ 192
---DEL Block@@ElseBody:{  return new AuthenticationServiceException(ex.getMessage(),ex);} @AT@ 4507 @LENGTH@ 72


UPD TypeDeclaration@@[public]TeeWriterTest,  @TO@ [@SuppressWarnings("resource"), public]TeeWriterTest,  @AT@ 1355 @LENGTH@ 16336
---INS SingleMemberAnnotation@@@SuppressWarnings("resource") @TO@ TypeDeclaration@@[public]TeeWriterTest,  @AT@ 1414 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ MethodInvocation:assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 2377 @LENGTH@ 140
---UPD MethodInvocation@@assertEquals(el.getNamespaceURI(),"http://cxf.component.camel.apache.org/","Get the wrong namespace URI") @TO@ assertEquals("http://cxf.component.camel.apache.org/",el.getNamespaceURI(),"Get the wrong namespace URI") @AT@ 2377 @LENGTH@ 139
------UPD SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @TO@ MethodName:assertEquals:["http://cxf.component.camel.apache.org/", el.getNamespaceURI(), "Get the wrong namespace URI"] @AT@ 2377 @LENGTH@ 139
---------INS StringLiteral@@"http://cxf.component.camel.apache.org/" @TO@ SimpleName@@MethodName:assertEquals:[el.getNamespaceURI(), "http://cxf.component.camel.apache.org/", "Get the wrong namespace URI"] @AT@ 2390 @LENGTH@ 40
---------DEL StringLiteral@@"http://cxf.component.camel.apache.org/" @AT@ 2412 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2999 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2999 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2999 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 3010 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3017 @LENGTH@ 21


UPD Block@@ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @TO@ ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  }  return null;} @AT@ 5650 @LENGTH@ 191
---UPD IfStatement@@if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} else {  return null;} @TO@ if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} @AT@ 5656 @LENGTH@ 181
------DEL Block@@ElseBody:{  return null;} @AT@ 5814 @LENGTH@ 23
---------DEL ReturnStatement@@NullLiteral:null @AT@ 5820 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 5827 @LENGTH@ 4
---INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @AT@ 5805 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5812 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2137 @LENGTH@ 144
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2137 @LENGTH@ 143
------UPD MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, rabbitMQEndpoint] @AT@ 2137 @LENGTH@ 92
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @AT@ 2249 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2249 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2265 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(resource1Classes.size(),1,"Get a wrong size of resouceClasses") @TO@ MethodInvocation:assertEquals(1,resource1Classes.size(),"Get a wrong size of resouceClasses") @AT@ 1752 @LENGTH@ 79
---UPD MethodInvocation@@assertEquals(resource1Classes.size(),1,"Get a wrong size of resouceClasses") @TO@ assertEquals(1,resource1Classes.size(),"Get a wrong size of resouceClasses") @AT@ 1752 @LENGTH@ 78
------UPD SimpleName@@MethodName:assertEquals:[resource1Classes.size(), 1, "Get a wrong size of resouceClasses"] @TO@ MethodName:assertEquals:[1, resource1Classes.size(), "Get a wrong size of resouceClasses"] @AT@ 1752 @LENGTH@ 78
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[resource1Classes.size(), 1, "Get a wrong size of resouceClasses"] @AT@ 1765 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 1790 @LENGTH@ 1


UPD IfStatement@@if (createPartition.type() == Partition.class) {  PartitionFactory partitionFactory=dsf.getPartitionFactory();  partition=partitionFactory.createPartition(schemaManager,service.getDnFactory(),createPartition.name(),createPartition.suffix(),createPartition.cacheSize(),new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()));  partition.setCacheService(service.getCacheService());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    partitionFactory.addIndex(partition,createIndex.attribute(),createIndex.cacheSize());  }  partition.initialize();} else {  Class<?>[] partypes=new Class[]{SchemaManager.class,DnFactory.class};  Constructor<?> constructor=createPartition.type().getConstructor(partypes);  partition=(Partition)constructor.newInstance(new Object[]{schemaManager,service.getDnFactory()});  partition.setId(createPartition.name());  partition.setSuffixDn(new Dn(schemaManager,createPartition.suffix()));  if (partition instanceof AbstractBTreePartition) {    AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;    btreePartition.setCacheService(service.getCacheService());    btreePartition.setCacheSize(createPartition.cacheSize());    btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());    CreateIndex[] indexes=createPartition.indexes();    for (    CreateIndex createIndex : indexes) {      if (createIndex.type() == JdbmIndex.class) {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else       if (createIndex.type() == MavibotIndex.class) {        MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      }    }  }} @TO@ if (createPartition.type() == Partition.class) {  PartitionFactory partitionFactory=dsf.getPartitionFactory();  partition=partitionFactory.createPartition(schemaManager,service.getDnFactory(),createPartition.name(),createPartition.suffix(),createPartition.cacheSize(),new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()));  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    partitionFactory.addIndex(partition,createIndex.attribute(),createIndex.cacheSize());  }  partition.initialize();} else {  Class<?>[] partypes=new Class[]{SchemaManager.class,DnFactory.class};  Constructor<?> constructor=createPartition.type().getConstructor(partypes);  partition=(Partition)constructor.newInstance(new Object[]{schemaManager,service.getDnFactory()});  partition.setId(createPartition.name());  partition.setSuffixDn(new Dn(schemaManager,createPartition.suffix()));  if (partition instanceof AbstractBTreePartition) {    AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;    btreePartition.setCacheSize(createPartition.cacheSize());    btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());    CreateIndex[] indexes=createPartition.indexes();    for (    CreateIndex createIndex : indexes) {      if (createIndex.type() == JdbmIndex.class) {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else       if (createIndex.type() == MavibotIndex.class) {        MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      }    }  }} @AT@ 8387 @LENGTH@ 3537
---UPD Block@@ThenBody:{  PartitionFactory partitionFactory=dsf.getPartitionFactory();  partition=partitionFactory.createPartition(schemaManager,service.getDnFactory(),createPartition.name(),createPartition.suffix(),createPartition.cacheSize(),new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()));  partition.setCacheService(service.getCacheService());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    partitionFactory.addIndex(partition,createIndex.attribute(),createIndex.cacheSize());  }  partition.initialize();} @TO@ ThenBody:{  PartitionFactory partitionFactory=dsf.getPartitionFactory();  partition=partitionFactory.createPartition(schemaManager,service.getDnFactory(),createPartition.name(),createPartition.suffix(),createPartition.cacheSize(),new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()));  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    partitionFactory.addIndex(partition,createIndex.attribute(),createIndex.cacheSize());  }  partition.initialize();} @AT@ 8434 @LENGTH@ 1086
------DEL ExpressionStatement@@MethodInvocation:partition.setCacheService(service.getCacheService()) @AT@ 9131 @LENGTH@ 53
---------DEL MethodInvocation@@partition.setCacheService(service.getCacheService()) @AT@ 9131 @LENGTH@ 52
------------DEL SimpleName@@Name:partition @AT@ 9131 @LENGTH@ 9
------------DEL SimpleName@@MethodName:setCacheService:[service.getCacheService()] @AT@ 9141 @LENGTH@ 42
---------------DEL MethodInvocation@@service.getCacheService() @AT@ 9157 @LENGTH@ 25
------------------DEL SimpleName@@Name:service @AT@ 9157 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getCacheService:[] @AT@ 9165 @LENGTH@ 17
---UPD Block@@ElseBody:{  Class<?>[] partypes=new Class[]{SchemaManager.class,DnFactory.class};  Constructor<?> constructor=createPartition.type().getConstructor(partypes);  partition=(Partition)constructor.newInstance(new Object[]{schemaManager,service.getDnFactory()});  partition.setId(createPartition.name());  partition.setSuffixDn(new Dn(schemaManager,createPartition.suffix()));  if (partition instanceof AbstractBTreePartition) {    AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;    btreePartition.setCacheService(service.getCacheService());    btreePartition.setCacheSize(createPartition.cacheSize());    btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());    CreateIndex[] indexes=createPartition.indexes();    for (    CreateIndex createIndex : indexes) {      if (createIndex.type() == JdbmIndex.class) {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else       if (createIndex.type() == MavibotIndex.class) {        MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      }    }  }} @TO@ ElseBody:{  Class<?>[] partypes=new Class[]{SchemaManager.class,DnFactory.class};  Constructor<?> constructor=createPartition.type().getConstructor(partypes);  partition=(Partition)constructor.newInstance(new Object[]{schemaManager,service.getDnFactory()});  partition.setId(createPartition.name());  partition.setSuffixDn(new Dn(schemaManager,createPartition.suffix()));  if (partition instanceof AbstractBTreePartition) {    AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;    btreePartition.setCacheSize(createPartition.cacheSize());    btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());    CreateIndex[] indexes=createPartition.indexes();    for (    CreateIndex createIndex : indexes) {      if (createIndex.type() == JdbmIndex.class) {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else       if (createIndex.type() == MavibotIndex.class) {        MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      } else {        JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);        btreePartition.addIndexedAttributes(index);      }    }  }} @AT@ 9526 @LENGTH@ 2398
------UPD IfStatement@@if (partition instanceof AbstractBTreePartition) {  AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;  btreePartition.setCacheService(service.getCacheService());  btreePartition.setCacheSize(createPartition.cacheSize());  btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    if (createIndex.type() == JdbmIndex.class) {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else     if (createIndex.type() == MavibotIndex.class) {      MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    }  }} @TO@ if (partition instanceof AbstractBTreePartition) {  AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;  btreePartition.setCacheSize(createPartition.cacheSize());  btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    if (createIndex.type() == JdbmIndex.class) {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else     if (createIndex.type() == MavibotIndex.class) {      MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    }  }} @AT@ 10152 @LENGTH@ 1758
---------UPD Block@@ThenBody:{  AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;  btreePartition.setCacheService(service.getCacheService());  btreePartition.setCacheSize(createPartition.cacheSize());  btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    if (createIndex.type() == JdbmIndex.class) {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else     if (createIndex.type() == MavibotIndex.class) {      MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    }  }} @TO@ ThenBody:{  AbstractBTreePartition btreePartition=(AbstractBTreePartition)partition;  btreePartition.setCacheSize(createPartition.cacheSize());  btreePartition.setPartitionPath(new File(service.getInstanceLayout().getPartitionsDirectory(),createPartition.name()).toURI());  CreateIndex[] indexes=createPartition.indexes();  for (  CreateIndex createIndex : indexes) {    if (createIndex.type() == JdbmIndex.class) {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else     if (createIndex.type() == MavibotIndex.class) {      MavibotIndex index=new MavibotIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    } else {      JdbmIndex index=new JdbmIndex(createIndex.attribute(),false);      btreePartition.addIndexedAttributes(index);    }  }} @AT@ 10201 @LENGTH@ 1709
------------DEL ExpressionStatement@@MethodInvocation:btreePartition.setCacheService(service.getCacheService()) @AT@ 10319 @LENGTH@ 58
---------------DEL MethodInvocation@@btreePartition.setCacheService(service.getCacheService()) @AT@ 10319 @LENGTH@ 57
------------------DEL SimpleName@@Name:btreePartition @AT@ 10319 @LENGTH@ 14
------------------DEL SimpleName@@MethodName:setCacheService:[service.getCacheService()] @AT@ 10334 @LENGTH@ 42
---------------------DEL MethodInvocation@@service.getCacheService() @AT@ 10350 @LENGTH@ 25
------------------------DEL SimpleName@@Name:service @AT@ 10350 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getCacheService:[] @AT@ 10358 @LENGTH@ 17


UPD VariableDeclarationStatement@@org.apache.camel.Message out=exchange.getOut(); @TO@ org.apache.camel.Message out=exchange.getMessage(); @AT@ 4241 @LENGTH@ 49
---UPD VariableDeclarationFragment@@out=exchange.getOut() @TO@ out=exchange.getMessage() @AT@ 4266 @LENGTH@ 23
------UPD MethodInvocation@@exchange.getOut() @TO@ exchange.getMessage() @AT@ 4272 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4281 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:setCacheBrotliAvailability(true) @TO@ MethodInvocation:setCacheBrotliAvailablity(true) @AT@ 1364 @LENGTH@ 33
---UPD MethodInvocation@@setCacheBrotliAvailability(true) @TO@ setCacheBrotliAvailablity(true) @AT@ 1364 @LENGTH@ 32
------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[true] @TO@ MethodName:setCacheBrotliAvailablity:[true] @AT@ 1364 @LENGTH@ 32


UPD VariableDeclarationStatement@@final DeploymentUnit depUnit=config.getDeploymentUnit(); @TO@ final DeploymentUnit depUnit=config.getDeploymentUnit().getValue(); @AT@ 2390 @LENGTH@ 58
---UPD VariableDeclarationFragment@@depUnit=config.getDeploymentUnit() @TO@ depUnit=config.getDeploymentUnit().getValue() @AT@ 2411 @LENGTH@ 36
------UPD MethodInvocation@@config.getDeploymentUnit() @TO@ config.getDeploymentUnit().getValue() @AT@ 2421 @LENGTH@ 26
---------INS MethodInvocation@@MethodName:getDeploymentUnit:[] @TO@ MethodInvocation@@config.getDeploymentUnit() @AT@ 2421 @LENGTH@ 26
---------UPD SimpleName@@MethodName:getDeploymentUnit:[] @TO@ MethodName:getValue:[] @AT@ 2428 @LENGTH@ 19


UPD TypeDeclaration@@[@Component("crypto-cms"), public]CryptoCmsComponent, DefaultComponent @TO@ [@Deprecated, @Component("crypto-cms"), public]CryptoCmsComponent, DefaultComponent @AT@ 2191 @LENGTH@ 6012
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Component("crypto-cms"), public]CryptoCmsComponent, DefaultComponent @AT@ 2191 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:setInFilterPattern("CamelRabbitmq*") @TO@ MethodInvocation:setInFilterPattern("CamelRabbitmq.*") @AT@ 1221 @LENGTH@ 37
---UPD MethodInvocation@@setInFilterPattern("CamelRabbitmq*") @TO@ setInFilterPattern("CamelRabbitmq.*") @AT@ 1221 @LENGTH@ 36
------UPD SimpleName@@MethodName:setInFilterPattern:["CamelRabbitmq*"] @TO@ MethodName:setInFilterPattern:["CamelRabbitmq.*"] @AT@ 1221 @LENGTH@ 36
---------UPD StringLiteral@@"CamelRabbitmq*" @TO@ "CamelRabbitmq.*" @AT@ 1240 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:exchange.getSession().filter((s) -> s.getAttributes().containsKey(this.sessionAttributeName)).map((s) -> s.getAttribute(this.sessionAttributeName)) @TO@ MethodInvocation:exchange.getSession().filter((session) -> session.getAttributes().containsKey(this.sessionAttributeName)).map((session) -> session.getAttribute(this.sessionAttributeName)) @AT@ 2431 @LENGTH@ 160
---UPD MethodInvocation@@exchange.getSession().filter((s) -> s.getAttributes().containsKey(this.sessionAttributeName)).map((s) -> s.getAttribute(this.sessionAttributeName)) @TO@ exchange.getSession().filter((session) -> session.getAttributes().containsKey(this.sessionAttributeName)).map((session) -> session.getAttribute(this.sessionAttributeName)) @AT@ 2438 @LENGTH@ 152
------UPD MethodInvocation@@MethodName:filter:[(s) -> s.getAttributes().containsKey(this.sessionAttributeName)] @TO@ MethodName:filter:[(session) -> session.getAttributes().containsKey(this.sessionAttributeName)] @AT@ 2438 @LENGTH@ 93
---------UPD LambdaExpression@@(s) -> s.getAttributes().containsKey(this.sessionAttributeName) @TO@ (session) -> session.getAttributes().containsKey(this.sessionAttributeName) @AT@ 2467 @LENGTH@ 63
------------UPD VariableDeclarationFragment@@s @TO@ session @AT@ 2468 @LENGTH@ 1
---------------UPD SimpleName@@s @TO@ session @AT@ 2468 @LENGTH@ 1
------------UPD MethodInvocation@@s.getAttributes().containsKey(this.sessionAttributeName) @TO@ session.getAttributes().containsKey(this.sessionAttributeName) @AT@ 2474 @LENGTH@ 56
---------------UPD SimpleName@@Name:s @TO@ Name:session @AT@ 2474 @LENGTH@ 1
------UPD SimpleName@@MethodName:map:[(s) -> s.getAttribute(this.sessionAttributeName)] @TO@ MethodName:map:[(session) -> session.getAttribute(this.sessionAttributeName)] @AT@ 2537 @LENGTH@ 53
---------UPD LambdaExpression@@(s) -> s.getAttribute(this.sessionAttributeName) @TO@ (session) -> session.getAttribute(this.sessionAttributeName) @AT@ 2541 @LENGTH@ 48
------------UPD VariableDeclarationFragment@@s @TO@ session @AT@ 2542 @LENGTH@ 1
---------------UPD SimpleName@@s @TO@ session @AT@ 2542 @LENGTH@ 1
------------UPD MethodInvocation@@s.getAttribute(this.sessionAttributeName) @TO@ session.getAttribute(this.sessionAttributeName) @AT@ 2548 @LENGTH@ 41
---------------UPD SimpleName@@Name:s @TO@ Name:session @AT@ 2548 @LENGTH@ 1


UPD VariableDeclarationStatement@@final byte[] codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3); @TO@ final byte[] codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3); @AT@ 3295 @LENGTH@ 89
---UPD VariableDeclarationFragment@@codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3) @TO@ codec101=StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3) @AT@ 3308 @LENGTH@ 75
------UPD MethodInvocation@@StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3) @TO@ StringUtils.getBytesUtf8(Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3) @AT@ 3319 @LENGTH@ 64
---------UPD SimpleName@@MethodName:getBytesUtf8:[Base64TestData.CODEC_101_MULTIPLE_OF_3] @TO@ MethodName:getBytesUtf8:[Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3] @AT@ 3331 @LENGTH@ 52
------------UPD QualifiedName@@Base64TestData.CODEC_101_MULTIPLE_OF_3 @TO@ Base64TestData.CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3 @AT@ 3344 @LENGTH@ 38
---------------UPD SimpleName@@CODEC_101_MULTIPLE_OF_3 @TO@ CODEC_101_INPUT_LENGTH_IS_MULTIPLE_OF_3 @AT@ 3359 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(SdbConstants.MAX_NUMBER_OF_DOMAINS,new Integer(5)) @TO@ MethodInvocation:exchange.getIn().setHeader(SdbConstants.MAX_NUMBER_OF_DOMAINS,Integer.valueOf(5)) @AT@ 5945 @LENGTH@ 79
---UPD MethodInvocation@@exchange.getIn().setHeader(SdbConstants.MAX_NUMBER_OF_DOMAINS,new Integer(5)) @TO@ exchange.getIn().setHeader(SdbConstants.MAX_NUMBER_OF_DOMAINS,Integer.valueOf(5)) @AT@ 5945 @LENGTH@ 78
------UPD SimpleName@@MethodName:setHeader:[SdbConstants.MAX_NUMBER_OF_DOMAINS, new Integer(5)] @TO@ MethodName:setHeader:[SdbConstants.MAX_NUMBER_OF_DOMAINS, Integer.valueOf(5)] @AT@ 5962 @LENGTH@ 61
---------INS MethodInvocation@@Integer.valueOf(5) @TO@ SimpleName@@MethodName:setHeader:[SdbConstants.MAX_NUMBER_OF_DOMAINS, new Integer(5)] @AT@ 6008 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(5) @AT@ 6008 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[5] @TO@ MethodInvocation@@Integer.valueOf(5) @AT@ 6016 @LENGTH@ 10
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:valueOf:[5] @AT@ 6024 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[5] @AT@ 6008 @LENGTH@ 14
------------DEL New@@new @AT@ 6008 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 6012 @LENGTH@ 7
------------DEL NumberLiteral@@5 @AT@ 6020 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("direct:foo").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"direct:foo").to("mock:result") @AT@ 1749 @LENGTH@ 59
---UPD MethodInvocation@@from("direct:start").inOut("direct:foo").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"direct:foo").to("mock:result") @AT@ 1749 @LENGTH@ 58
------UPD MethodInvocation@@MethodName:inOut:["direct:foo"] @TO@ MethodName:to:[ExchangePattern.InOut, "direct:foo"] @AT@ 1749 @LENGTH@ 40
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["direct:foo"] @AT@ 1773 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1773 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1789 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ MethodInvocation:assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2149 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2149 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @TO@ MethodName:assertEquals:[false, exchange.isFailed(), "The request should be handled sucessfully"] @AT@ 2149 @LENGTH@ 85
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @AT@ 2162 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 2183 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(reply.hasOut()) @TO@ MethodInvocation:assertNotEquals("foo",reply.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2361 @LENGTH@ 27
---UPD MethodInvocation@@assertTrue(reply.hasOut()) @TO@ assertNotEquals("foo",reply.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2361 @LENGTH@ 26
------UPD SimpleName@@MethodName:assertTrue:[reply.hasOut()] @TO@ MethodName:assertNotEquals:["foo", reply.getMessage().getBody(), "There shouldn't be an out message"] @AT@ 2361 @LENGTH@ 26
---------UPD MethodInvocation@@reply.hasOut() @TO@ reply.getMessage().getBody() @AT@ 2372 @LENGTH@ 14
------------UPD SimpleName@@MethodName:hasOut:[] @TO@ MethodName:getBody:[] @AT@ 2378 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@reply.hasOut() @AT@ 2389 @LENGTH@ 18
---------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:assertTrue:[reply.hasOut()] @AT@ 2382 @LENGTH@ 5
---------INS StringLiteral@@"There shouldn't be an out message" @TO@ SimpleName@@MethodName:assertTrue:[reply.hasOut()] @AT@ 2419 @LENGTH@ 35


UPD VariableDeclarationStatement@@Map<String,Object> camelHeaders=exchange.getOut().getHeaders(); @TO@ Map<String,Object> camelHeaders=exchange.getMessage().getHeaders(); @AT@ 12575 @LENGTH@ 66
---UPD VariableDeclarationFragment@@camelHeaders=exchange.getOut().getHeaders() @TO@ camelHeaders=exchange.getMessage().getHeaders() @AT@ 12595 @LENGTH@ 45
------UPD MethodInvocation@@exchange.getOut().getHeaders() @TO@ exchange.getMessage().getHeaders() @AT@ 12610 @LENGTH@ 30
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 12610 @LENGTH@ 17


UPD MethodDeclaration@@private, Collection<ConfigAttribute>, MethodName:processAnnotation, Annotation a,  @TO@ private, Collection<ConfigAttribute>, MethodName:processAnnotation, Annotation annotation,  @AT@ 2996 @LENGTH@ 168
---UPD SingleVariableDeclaration@@Annotation a @TO@ Annotation annotation @AT@ 3050 @LENGTH@ 12
------UPD SimpleName@@a @TO@ annotation @AT@ 3061 @LENGTH@ 1
---DEL IfStatement@@if (a == null) {  return null;} @AT@ 3068 @LENGTH@ 36
------DEL InfixExpression@@a == null @AT@ 3072 @LENGTH@ 9
------DEL Block@@ThenBody:{  return null;} @AT@ 3083 @LENGTH@ 21
---------DEL ReturnStatement@@NullLiteral:null @AT@ 3088 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 3095 @LENGTH@ 4
---INS ReturnStatement@@ConditionalExpression:(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @TO@ MethodDeclaration@@private, Collection<ConfigAttribute>, MethodName:processAnnotation, Annotation a,  @AT@ 3077 @LENGTH@ 92
------INS ConditionalExpression@@(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @TO@ ReturnStatement@@ConditionalExpression:(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @AT@ 3084 @LENGTH@ 84
---------INS ParenthesizedExpression@@(annotation != null) @TO@ ConditionalExpression@@(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @AT@ 3084 @LENGTH@ 20
------------INS InfixExpression@@annotation != null @TO@ ParenthesizedExpression@@(annotation != null) @AT@ 3085 @LENGTH@ 18
---------------MOV SimpleName@@a @TO@ InfixExpression@@annotation != null @AT@ 3072 @LENGTH@ 1
---------------MOV Operator@@== @TO@ InfixExpression@@annotation != null @AT@ 3073 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@annotation != null @AT@ 3077 @LENGTH@ 4
---------INS MethodInvocation@@this.annotationExtractor.extractAttributes(annotation) @TO@ ConditionalExpression@@(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @AT@ 3107 @LENGTH@ 54
------------MOV FieldAccess@@this.annotationExtractor @TO@ MethodInvocation@@this.annotationExtractor.extractAttributes(annotation) @AT@ 3115 @LENGTH@ 24
------------MOV SimpleName@@MethodName:extractAttributes:[a] @TO@ MethodInvocation@@this.annotationExtractor.extractAttributes(annotation) @AT@ 3140 @LENGTH@ 20
---------INS NullLiteral@@null @TO@ ConditionalExpression@@(annotation != null) ? this.annotationExtractor.extractAttributes(annotation) : null @AT@ 3164 @LENGTH@ 4
---DEL ReturnStatement@@MethodInvocation:this.annotationExtractor.extractAttributes(a) @AT@ 3108 @LENGTH@ 53
------DEL MethodInvocation@@this.annotationExtractor.extractAttributes(a) @AT@ 3115 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:AssertionsForClassTypes.assertThatCode(() -> decoder.decode(this.rsa256).block()).isInstanceOf(BadJwtException.class).hasRootCauseMessage("Required JOSE header \"typ\" (type) parameter is missing") @TO@ MethodInvocation:assertThatCode(() -> decoder.decode(this.rsa256).block()).isInstanceOf(BadJwtException.class).hasRootCauseMessage("Required JOSE header \"typ\" (type) parameter is missing") @AT@ 17885 @LENGTH@ 208
---UPD MethodInvocation@@AssertionsForClassTypes.assertThatCode(() -> decoder.decode(this.rsa256).block()).isInstanceOf(BadJwtException.class).hasRootCauseMessage("Required JOSE header \"typ\" (type) parameter is missing") @TO@ assertThatCode(() -> decoder.decode(this.rsa256).block()).isInstanceOf(BadJwtException.class).hasRootCauseMessage("Required JOSE header \"typ\" (type) parameter is missing") @AT@ 17885 @LENGTH@ 207
------DEL SimpleName@@Name:AssertionsForClassTypes @AT@ 17885 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertEquals(response,"<ok/>","The response should be ok") @TO@ MethodInvocation:assertEquals("<ok/>",response,"The response should be ok") @AT@ 1606 @LENGTH@ 61
---UPD MethodInvocation@@assertEquals(response,"<ok/>","The response should be ok") @TO@ assertEquals("<ok/>",response,"The response should be ok") @AT@ 1606 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @TO@ MethodName:assertEquals:["<ok/>", response, "The response should be ok"] @AT@ 1606 @LENGTH@ 60
---------INS StringLiteral@@"<ok/>" @TO@ SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @AT@ 1619 @LENGTH@ 7
---------DEL StringLiteral@@"<ok/>" @AT@ 1629 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @TO@ MethodInvocation:assertEquals(Integer.valueOf(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @AT@ 2407 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals(new Integer(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @TO@ assertEquals(Integer.valueOf(4),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)) @AT@ 2407 @LENGTH@ 105
------UPD SimpleName@@MethodName:assertEquals:[new Integer(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @TO@ MethodName:assertEquals:[Integer.valueOf(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @AT@ 2407 @LENGTH@ 105
---------INS MethodInvocation@@Integer.valueOf(4) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(4), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class)] @AT@ 2420 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(4) @AT@ 2420 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[4] @TO@ MethodInvocation@@Integer.valueOf(4) @AT@ 2428 @LENGTH@ 10
---------------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:valueOf:[4] @AT@ 2436 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[4] @AT@ 2420 @LENGTH@ 14
------------DEL New@@new @AT@ 2420 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2424 @LENGTH@ 7
------------DEL NumberLiteral@@4 @AT@ 2432 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2114 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2114 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2130 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertThat(voter.vote(auth,new Object(),SecurityConfig.createList("ROLE_B"))).isEqualTo(RoleHierarchyVoter.ACCESS_GRANTED) @TO@ MethodInvocation:assertThat(voter.vote(auth,new Object(),SecurityConfig.createList("ROLE_B"))).isEqualTo(AccessDecisionVoter.ACCESS_GRANTED) @AT@ 1409 @LENGTH@ 130
---UPD MethodInvocation@@assertThat(voter.vote(auth,new Object(),SecurityConfig.createList("ROLE_B"))).isEqualTo(RoleHierarchyVoter.ACCESS_GRANTED) @TO@ assertThat(voter.vote(auth,new Object(),SecurityConfig.createList("ROLE_B"))).isEqualTo(AccessDecisionVoter.ACCESS_GRANTED) @AT@ 1409 @LENGTH@ 129
------UPD SimpleName@@MethodName:isEqualTo:[RoleHierarchyVoter.ACCESS_GRANTED] @TO@ MethodName:isEqualTo:[AccessDecisionVoter.ACCESS_GRANTED] @AT@ 1494 @LENGTH@ 44
---------UPD QualifiedName@@RoleHierarchyVoter.ACCESS_GRANTED @TO@ AccessDecisionVoter.ACCESS_GRANTED @AT@ 1504 @LENGTH@ 33
------------UPD SimpleName@@RoleHierarchyVoter @TO@ AccessDecisionVoter @AT@ 1504 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:attachments.add(new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,new Long(attachedFile.length()).intValue(),null,null,null)) @TO@ MethodInvocation:attachments.add(new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,Long.valueOf(attachedFile.length()).intValue(),null,null,null)) @AT@ 4265 @LENGTH@ 198
---UPD MethodInvocation@@attachments.add(new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,new Long(attachedFile.length()).intValue(),null,null,null)) @TO@ attachments.add(new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,Long.valueOf(attachedFile.length()).intValue(),null,null,null)) @AT@ 4265 @LENGTH@ 197
------UPD SimpleName@@MethodName:add:[new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,new Long(attachedFile.length()).intValue(),null,null,null)] @TO@ MethodName:add:[new Attachment(issue.getAttachmentsUri(),attachedFile.getName(),null,null,Long.valueOf(attachedFile.length()).intValue(),null,null,null)] @AT@ 4277 @LENGTH@ 185
---------UPD ClassInstanceCreation@@Attachment[issue.getAttachmentsUri(), attachedFile.getName(), null, null, new Long(attachedFile.length()).intValue(), null, null, null] @TO@ Attachment[issue.getAttachmentsUri(), attachedFile.getName(), null, null, Long.valueOf(attachedFile.length()).intValue(), null, null, null] @AT@ 4281 @LENGTH@ 180
------------UPD MethodInvocation@@new Long(attachedFile.length()).intValue() @TO@ Long.valueOf(attachedFile.length()).intValue() @AT@ 4400 @LENGTH@ 42
---------------INS MethodInvocation@@MethodName:valueOf:[attachedFile.length()] @TO@ MethodInvocation@@new Long(attachedFile.length()).intValue() @AT@ 4400 @LENGTH@ 35
------------------INS MethodInvocation@@attachedFile.length() @TO@ MethodInvocation@@MethodName:valueOf:[attachedFile.length()] @AT@ 4413 @LENGTH@ 21
---------------------MOV SimpleName@@Name:attachedFile @TO@ MethodInvocation@@attachedFile.length() @AT@ 4409 @LENGTH@ 12
---------------------MOV SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@attachedFile.length() @AT@ 4422 @LENGTH@ 8
---------------DEL ClassInstanceCreation@@Long[attachedFile.length()] @AT@ 4400 @LENGTH@ 31
------------------DEL New@@new @AT@ 4400 @LENGTH@ 3
------------------DEL SimpleType@@Long @AT@ 4404 @LENGTH@ 4
------------------DEL MethodInvocation@@attachedFile.length() @AT@ 4409 @LENGTH@ 21
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@new Long(attachedFile.length()).intValue() @AT@ 4400 @LENGTH@ 4


MOV ReturnStatement@@ClassInstanceCreation:new String(Hex.encode(digest)) @TO@ MethodDeclaration@@private, String, MethodName:encode, byte[] digest,  @AT@ 4288 @LENGTH@ 38


DEL VariableDeclarationStatement@@final boolean debug=this.logger.isDebugEnabled(); @AT@ 4506 @LENGTH@ 51
---DEL Modifier@@final @AT@ 4506 @LENGTH@ 5
---DEL PrimitiveType@@boolean @AT@ 4512 @LENGTH@ 7
---DEL VariableDeclarationFragment@@debug=this.logger.isDebugEnabled() @AT@ 4520 @LENGTH@ 36
------DEL SimpleName@@debug @AT@ 4520 @LENGTH@ 5
------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 4528 @LENGTH@ 28
---------DEL FieldAccess@@this.logger @AT@ 4528 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 4528 @LENGTH@ 4
------------DEL SimpleName@@logger @AT@ 4533 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 4540 @LENGTH@ 16


INS IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @TO@ MethodDeclaration@@private, Object, MethodName:readWithInputStream, JsonPath path, Exchange exchange, IOException,  @AT@ 8618 @LENGTH@ 86
---INS InstanceofExpression@@json instanceof StreamCache @TO@ IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @AT@ 8622 @LENGTH@ 27
------INS SimpleName@@json @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 8622 @LENGTH@ 4
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 8627 @LENGTH@ 10
------INS SimpleType@@StreamCache @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 8638 @LENGTH@ 11
---INS Block@@ThenBody:{  ((StreamCache)json).reset();} @TO@ IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @AT@ 8651 @LENGTH@ 53
------INS ExpressionStatement@@MethodInvocation:((StreamCache)json).reset() @TO@ Block@@ThenBody:{  ((StreamCache)json).reset();} @AT@ 8665 @LENGTH@ 29
---------INS MethodInvocation@@((StreamCache)json).reset() @TO@ ExpressionStatement@@MethodInvocation:((StreamCache)json).reset() @AT@ 8665 @LENGTH@ 28
------------INS ParenthesizedExpression@@((StreamCache)json) @TO@ MethodInvocation@@((StreamCache)json).reset() @AT@ 8665 @LENGTH@ 20
---------------INS CastExpression@@(StreamCache)json @TO@ ParenthesizedExpression@@((StreamCache)json) @AT@ 8666 @LENGTH@ 18
------------------INS SimpleType@@StreamCache @TO@ CastExpression@@(StreamCache)json @AT@ 8667 @LENGTH@ 11
------------------INS SimpleName@@json @TO@ CastExpression@@(StreamCache)json @AT@ 8680 @LENGTH@ 4
------------INS SimpleName@@MethodName:reset:[] @TO@ MethodInvocation@@((StreamCache)json).reset() @AT@ 8686 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2709 @LENGTH@ 513
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2721 @LENGTH@ 40


UPD ReturnStatement@@SimpleName:DISABLED @TO@ ClassInstanceCreation:new CoroutineAdapterInformation(false,false,false,declaredMethod.getParameterCount(),baseClassMethod.getParameterCount()) @AT@ 12438 @LENGTH@ 16
---INS ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @TO@ ReturnStatement@@SimpleName:DISABLED @AT@ 12327 @LENGTH@ 132
------INS New@@new @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12327 @LENGTH@ 3
------INS SimpleType@@CoroutineAdapterInformation @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12331 @LENGTH@ 27
------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12359 @LENGTH@ 5
------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12366 @LENGTH@ 5
------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12373 @LENGTH@ 5
------INS MethodInvocation@@declaredMethod.getParameterCount() @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12380 @LENGTH@ 34
---------INS SimpleName@@Name:declaredMethod @TO@ MethodInvocation@@declaredMethod.getParameterCount() @AT@ 12380 @LENGTH@ 14
---------INS SimpleName@@MethodName:getParameterCount:[] @TO@ MethodInvocation@@declaredMethod.getParameterCount() @AT@ 12395 @LENGTH@ 19
------INS MethodInvocation@@baseClassMethod.getParameterCount() @TO@ ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, declaredMethod.getParameterCount(), baseClassMethod.getParameterCount()] @AT@ 12423 @LENGTH@ 35
---------INS SimpleName@@Name:baseClassMethod @TO@ MethodInvocation@@baseClassMethod.getParameterCount() @AT@ 12423 @LENGTH@ 15
---------INS SimpleName@@MethodName:getParameterCount:[] @TO@ MethodInvocation@@baseClassMethod.getParameterCount() @AT@ 12439 @LENGTH@ 19
---DEL SimpleName@@DISABLED @AT@ 12445 @LENGTH@ 8


UPD VariableDeclarationStatement@@long timeout=exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0,long.class) : 0; @TO@ long timeout=exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0L,long.class) : 0L; @AT@ 39714 @LENGTH@ 111
---UPD VariableDeclarationFragment@@timeout=exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0,long.class) : 0 @TO@ timeout=exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0L,long.class) : 0L @AT@ 39719 @LENGTH@ 105
------UPD ConditionalExpression@@exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0,long.class) : 0 @TO@ exchange.hasProperties() ? exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0L,long.class) : 0L @AT@ 39729 @LENGTH@ 95
---------UPD MethodInvocation@@exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0,long.class) @TO@ exchange.getProperty(Exchange.AGGREGATED_TIMEOUT,0L,long.class) @AT@ 39756 @LENGTH@ 64
------------UPD SimpleName@@MethodName:getProperty:[Exchange.AGGREGATED_TIMEOUT, 0, long.class] @TO@ MethodName:getProperty:[Exchange.AGGREGATED_TIMEOUT, 0L, long.class] @AT@ 39765 @LENGTH@ 55
---------------UPD NumberLiteral@@0 @TO@ 0L @AT@ 39806 @LENGTH@ 1
---------UPD NumberLiteral@@0 @TO@ 0L @AT@ 39823 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:new GenericContainer(CONTAINER_IMAGE).withNetworkAliases(CONTAINER_NAME).withEnv("SERVICES","kms").withExposedPorts(4566).waitingFor(Wait.forListeningPort()).waitingFor(Wait.forLogMessageContaining("Ready.",1)) @TO@ MethodInvocation:new GenericContainer(CONTAINER_IMAGE).withNetworkAliases(CONTAINER_NAME).withEnv("SERVICES","lambda").withExposedPorts(4566).waitingFor(Wait.forListeningPort()).waitingFor(Wait.forLogMessageContaining("Ready.",1)) @AT@ 1906 @LENGTH@ 305
---UPD MethodInvocation@@new GenericContainer(CONTAINER_IMAGE).withNetworkAliases(CONTAINER_NAME).withEnv("SERVICES","kms").withExposedPorts(4566).waitingFor(Wait.forListeningPort()).waitingFor(Wait.forLogMessageContaining("Ready.",1)) @TO@ new GenericContainer(CONTAINER_IMAGE).withNetworkAliases(CONTAINER_NAME).withEnv("SERVICES","lambda").withExposedPorts(4566).waitingFor(Wait.forListeningPort()).waitingFor(Wait.forLogMessageContaining("Ready.",1)) @AT@ 1913 @LENGTH@ 297
------UPD MethodInvocation@@MethodName:withEnv:["SERVICES", "kms"] @TO@ MethodName:withEnv:["SERVICES", "lambda"] @AT@ 1913 @LENGTH@ 133
---------UPD StringLiteral@@"kms" @TO@ "lambda" @AT@ 2040 @LENGTH@ 5


UPD CatchClause@@catch (AuthenticationException authEx) {  throw new RemoteAuthenticationException(authEx.getMessage());} @TO@ catch (AuthenticationException ex) {  throw new RemoteAuthenticationException(ex.getMessage());} @AT@ 2027 @LENGTH@ 109
---UPD SingleVariableDeclaration@@AuthenticationException authEx @TO@ AuthenticationException ex @AT@ 2034 @LENGTH@ 30
------UPD SimpleName@@authEx @TO@ ex @AT@ 2058 @LENGTH@ 6
---UPD ThrowStatement@@ClassInstanceCreation:new RemoteAuthenticationException(authEx.getMessage()) @TO@ ClassInstanceCreation:new RemoteAuthenticationException(ex.getMessage()) @AT@ 2071 @LENGTH@ 61
------UPD ClassInstanceCreation@@RemoteAuthenticationException[authEx.getMessage()] @TO@ RemoteAuthenticationException[ex.getMessage()] @AT@ 2077 @LENGTH@ 54
---------UPD MethodInvocation@@authEx.getMessage() @TO@ ex.getMessage() @AT@ 2111 @LENGTH@ 19
------------UPD SimpleName@@Name:authEx @TO@ Name:ex @AT@ 2111 @LENGTH@ 6


UPD IfStatement@@if (method instanceof String) {  return (String)method;} @TO@ if (method instanceof String) {  return (String)method;} else if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1425 @LENGTH@ 77
---INS Block@@ElseBody:if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ IfStatement@@if (method instanceof String) {  return (String)method;} @AT@ 1508 @LENGTH@ 228
------INS IfStatement@@if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ Block@@ElseBody:if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1508 @LENGTH@ 228
---------INS InstanceofExpression@@method instanceof Enum @TO@ IfStatement@@if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1512 @LENGTH@ 22
------------INS SimpleName@@method @TO@ InstanceofExpression@@method instanceof Enum @AT@ 1512 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@method instanceof Enum @AT@ 1519 @LENGTH@ 10
------------INS SimpleType@@Enum @TO@ InstanceofExpression@@method instanceof Enum @AT@ 1530 @LENGTH@ 4
---------INS Block@@ThenBody:{  return ((Enum<?>)method).name();} @TO@ IfStatement@@if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1536 @LENGTH@ 57
------------INS ReturnStatement@@MethodInvocation:((Enum<?>)method).name() @TO@ Block@@ThenBody:{  return ((Enum<?>)method).name();} @AT@ 1550 @LENGTH@ 33
---------------INS MethodInvocation@@((Enum<?>)method).name() @TO@ ReturnStatement@@MethodInvocation:((Enum<?>)method).name() @AT@ 1557 @LENGTH@ 25
------------------INS ParenthesizedExpression@@((Enum<?>)method) @TO@ MethodInvocation@@((Enum<?>)method).name() @AT@ 1557 @LENGTH@ 18
---------------------INS CastExpression@@(Enum<?>)method @TO@ ParenthesizedExpression@@((Enum<?>)method) @AT@ 1558 @LENGTH@ 16
------------------------INS ParameterizedType@@Enum<?> @TO@ CastExpression@@(Enum<?>)method @AT@ 1559 @LENGTH@ 7
---------------------------INS SimpleType@@Enum @TO@ ParameterizedType@@Enum<?> @AT@ 1559 @LENGTH@ 4
---------------------------INS WildcardType@@? @TO@ ParameterizedType@@Enum<?> @AT@ 1564 @LENGTH@ 1
------------------------INS SimpleName@@method @TO@ CastExpression@@(Enum<?>)method @AT@ 1568 @LENGTH@ 6
------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@((Enum<?>)method).name() @AT@ 1576 @LENGTH@ 6
---------INS Block@@ElseBody:if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ IfStatement@@if (method instanceof Enum) {  return ((Enum<?>)method).name();} else if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1599 @LENGTH@ 137
------------INS IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ Block@@ElseBody:if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1599 @LENGTH@ 137
---------------INS InfixExpression@@method != null @TO@ IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1603 @LENGTH@ 14
------------------INS SimpleName@@method @TO@ InfixExpression@@method != null @AT@ 1603 @LENGTH@ 6
------------------INS Operator@@!= @TO@ InfixExpression@@method != null @AT@ 1609 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@method != null @AT@ 1613 @LENGTH@ 4
---------------INS Block@@ThenBody:{  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1619 @LENGTH@ 117
------------------INS ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @TO@ Block@@ThenBody:{  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1633 @LENGTH@ 93
---------------------INS MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @TO@ ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 85
------------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 40
------------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 21
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1681 @LENGTH@ 44
---------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1694 @LENGTH@ 12
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1708 @LENGTH@ 8
---------------------------INS SimpleName@@method @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1718 @LENGTH@ 6
------------INS IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ Block@@ElseBody:if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1599 @LENGTH@ 137
---------------INS InfixExpression@@method != null @TO@ IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1603 @LENGTH@ 14
------------------INS SimpleName@@method @TO@ InfixExpression@@method != null @AT@ 1603 @LENGTH@ 6
------------------INS Operator@@!= @TO@ InfixExpression@@method != null @AT@ 1609 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@method != null @AT@ 1613 @LENGTH@ 4
---------------INS Block@@ThenBody:{  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @TO@ IfStatement@@if (method != null) {  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1619 @LENGTH@ 117
------------------INS ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @TO@ Block@@ThenBody:{  return exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method);} @AT@ 1633 @LENGTH@ 93
---------------------INS MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @TO@ ReturnStatement@@MethodInvocation:exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 85
------------------------INS MethodInvocation@@MethodName:getTypeConverter:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 40
------------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 21
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1640 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @TO@ MethodInvocation@@exchange.getContext().getTypeConverter().tryConvertTo(String.class,exchange,method) @AT@ 1681 @LENGTH@ 44
---------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1694 @LENGTH@ 12
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1708 @LENGTH@ 8
---------------------------INS SimpleName@@method @TO@ SimpleName@@MethodName:tryConvertTo:[String.class, exchange, method] @AT@ 1718 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertArrayEquals(bytes,MtomTestHelper.REQ_PHOTO_DATA) @TO@ MethodInvocation:assertArrayEquals(MtomTestHelper.REQ_PHOTO_DATA,bytes) @AT@ 5773 @LENGTH@ 56
---UPD MethodInvocation@@assertArrayEquals(bytes,MtomTestHelper.REQ_PHOTO_DATA) @TO@ assertArrayEquals(MtomTestHelper.REQ_PHOTO_DATA,bytes) @AT@ 5773 @LENGTH@ 55
------UPD SimpleName@@MethodName:assertArrayEquals:[bytes, MtomTestHelper.REQ_PHOTO_DATA] @TO@ MethodName:assertArrayEquals:[MtomTestHelper.REQ_PHOTO_DATA, bytes] @AT@ 5773 @LENGTH@ 55
---------DEL SimpleName@@bytes @AT@ 5791 @LENGTH@ 5
---------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:assertArrayEquals:[bytes, MtomTestHelper.REQ_PHOTO_DATA] @AT@ 5822 @LENGTH@ 5


UPD FieldDeclaration@@private, Map<String,Object>, [attributes] @TO@ private, final, Map<String,Object>, [attributes] @AT@ 1594 @LENGTH@ 39
---INS Modifier@@final @TO@ FieldDeclaration@@private, Map<String,Object>, [attributes] @AT@ 1602 @LENGTH@ 5


INS TypeDeclaration@@EntityWithRelationshipPropertiesPathRepository, [Neo4jRepository<EntityWithRelationshipPropertiesPath,Long>] @TO@ TypeDeclaration@@[@ExtendWith(Neo4jExtension.class), @SpringJUnitConfig, @DirtiesContext]RepositoryIT,  @AT@ 140637 @LENGTH@ 120
---INS SimpleName@@ClassName:EntityWithRelationshipPropertiesPathRepository @TO@ TypeDeclaration@@EntityWithRelationshipPropertiesPathRepository, [Neo4jRepository<EntityWithRelationshipPropertiesPath,Long>] @AT@ 140637 @LENGTH@ 46
---INS ParameterizedType@@Neo4jRepository<EntityWithRelationshipPropertiesPath,Long> @TO@ TypeDeclaration@@EntityWithRelationshipPropertiesPathRepository, [Neo4jRepository<EntityWithRelationshipPropertiesPath,Long>] @AT@ 140695 @LENGTH@ 59
------INS SimpleType@@Neo4jRepository @TO@ ParameterizedType@@Neo4jRepository<EntityWithRelationshipPropertiesPath,Long> @AT@ 140695 @LENGTH@ 15
------INS SimpleType@@EntityWithRelationshipPropertiesPath @TO@ ParameterizedType@@Neo4jRepository<EntityWithRelationshipPropertiesPath,Long> @AT@ 140711 @LENGTH@ 36
------INS SimpleType@@Long @TO@ ParameterizedType@@Neo4jRepository<EntityWithRelationshipPropertiesPath,Long> @AT@ 140749 @LENGTH@ 4


UPD TypeDeclaration@@[public]RegexBasedAxFetchListFactory, [AxFetchListFactory] @TO@ [@Deprecated, public]RegexBasedAxFetchListFactory, [AxFetchListFactory] @AT@ 1160 @LENGTH@ 1053
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RegexBasedAxFetchListFactory, [AxFetchListFactory] @AT@ 1160 @LENGTH@ 11


UPD MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @TO@ private, ObjectIdentity, MethodName:mapObjectIdentityRow, ResultSet rs, SQLException,  @AT@ 3856 @LENGTH@ 582
---UPD Modifier@@public @TO@ private @AT@ 3856 @LENGTH@ 6
---DEL ParameterizedType@@List<ObjectIdentity> @AT@ 3863 @LENGTH@ 20
------DEL SimpleType@@List @AT@ 3863 @LENGTH@ 4
------DEL SimpleType@@ObjectIdentity @AT@ 3868 @LENGTH@ 14
---UPD SimpleName@@MethodName:findChildren @TO@ MethodName:mapObjectIdentityRow @AT@ 3884 @LENGTH@ 12
---UPD SingleVariableDeclaration@@ObjectIdentity parentIdentity @TO@ ResultSet rs @AT@ 3897 @LENGTH@ 29
------UPD SimpleType@@ObjectIdentity @TO@ ResultSet @AT@ 3897 @LENGTH@ 14
------UPD SimpleName@@parentIdentity @TO@ rs @AT@ 3912 @LENGTH@ 14
---DEL VariableDeclarationStatement@@List<ObjectIdentity> objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> {
  String javaType=rs.getString("class");
  Serializable identifier=(Serializable)rs.getObject("obj_id");
  identifier=this.aclClassIdUtils.identifierFrom(identifier,rs);
  return new ObjectIdentityImpl(javaType,identifier);
}
); @AT@ 4023 @LENGTH@ 345
------DEL ParameterizedType@@List<ObjectIdentity> @AT@ 4023 @LENGTH@ 20
---------DEL SimpleType@@List @AT@ 4023 @LENGTH@ 4
---------DEL SimpleType@@ObjectIdentity @AT@ 4028 @LENGTH@ 14
------DEL VariableDeclarationFragment@@objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> {
  String javaType=rs.getString("class");
  Serializable identifier=(Serializable)rs.getObject("obj_id");
  identifier=this.aclClassIdUtils.identifierFrom(identifier,rs);
  return new ObjectIdentityImpl(javaType,identifier);
}
) @AT@ 4044 @LENGTH@ 323
---------DEL SimpleName@@objects @AT@ 4044 @LENGTH@ 7
---------DEL MethodInvocation@@this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> {
  String javaType=rs.getString("class");
  Serializable identifier=(Serializable)rs.getObject("obj_id");
  identifier=this.aclClassIdUtils.identifierFrom(identifier,rs);
  return new ObjectIdentityImpl(javaType,identifier);
}
) @AT@ 4054 @LENGTH@ 313
------------DEL FieldAccess@@this.jdbcOperations @AT@ 4054 @LENGTH@ 19
---------------DEL ThisExpression@@this @AT@ 4054 @LENGTH@ 4
---------------DEL SimpleName@@jdbcOperations @AT@ 4059 @LENGTH@ 14
------------DEL SimpleName@@MethodName:query:[this.findChildrenSql, args, (rs,rowNum) -> {
  String javaType=rs.getString("class");
  Serializable identifier=(Serializable)rs.getObject("obj_id");
  identifier=this.aclClassIdUtils.identifierFrom(identifier,rs);
  return new ObjectIdentityImpl(javaType,identifier);
}
] @AT@ 4074 @LENGTH@ 293
---------------DEL FieldAccess@@this.findChildrenSql @AT@ 4080 @LENGTH@ 20
------------------DEL ThisExpression@@this @AT@ 4080 @LENGTH@ 4
------------------DEL SimpleName@@findChildrenSql @AT@ 4085 @LENGTH@ 15
---------------DEL SimpleName@@args @AT@ 4102 @LENGTH@ 4
---------------DEL LambdaExpression@@(rs,rowNum) -> {
  String javaType=rs.getString("class");
  Serializable identifier=(Serializable)rs.getObject("obj_id");
  identifier=this.aclClassIdUtils.identifierFrom(identifier,rs);
  return new ObjectIdentityImpl(javaType,identifier);
}
 @AT@ 4108 @LENGTH@ 258
------------------DEL VariableDeclarationFragment@@rs @AT@ 4109 @LENGTH@ 2
---------------------DEL SimpleName@@rs @AT@ 4109 @LENGTH@ 2
------------------DEL VariableDeclarationFragment@@rowNum @AT@ 4113 @LENGTH@ 6
---------------------DEL SimpleName@@rowNum @AT@ 4113 @LENGTH@ 6
---MOV VariableDeclarationStatement@@String javaType=rs.getString("class"); @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4129 @LENGTH@ 40
---MOV VariableDeclarationStatement@@Serializable identifier=(Serializable)rs.getObject("obj_id"); @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4173 @LENGTH@ 64
---MOV ExpressionStatement@@Assignment:identifier=this.aclClassIdUtils.identifierFrom(identifier,rs) @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4241 @LENGTH@ 65
---INS SimpleType@@ObjectIdentity @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4273 @LENGTH@ 14
---MOV ReturnStatement@@ClassInstanceCreation:new ObjectIdentityImpl(javaType,identifier) @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4310 @LENGTH@ 52
---INS SimpleType@@SQLException @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4330 @LENGTH@ 12
---DEL IfStatement@@if (objects.isEmpty()) {  return null;} @AT@ 4372 @LENGTH@ 44
------DEL MethodInvocation@@objects.isEmpty() @AT@ 4376 @LENGTH@ 17
---------DEL SimpleName@@Name:objects @AT@ 4376 @LENGTH@ 7
---------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 4384 @LENGTH@ 9
------DEL Block@@ThenBody:{  return null;} @AT@ 4395 @LENGTH@ 21
---------DEL ReturnStatement@@NullLiteral:null @AT@ 4400 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 4407 @LENGTH@ 4
---DEL ReturnStatement@@SimpleName:objects @AT@ 4420 @LENGTH@ 15
------DEL SimpleName@@objects @AT@ 4427 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(result) @TO@ MethodInvocation:exchange.getMessage().setBody(result) @AT@ 1524 @LENGTH@ 34
---UPD MethodInvocation@@exchange.getOut().setBody(result) @TO@ exchange.getMessage().setBody(result) @AT@ 1524 @LENGTH@ 33
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1524 @LENGTH@ 17


UPD EnhancedForStatement@@for (SignerInfo signer : config.getSigner()) {  LOG.debug("Signer info: {}",signer);  X509Certificate signerCert=signer.getCertificate(exchange);  if (signerCert == null) {    throw new CryptoCmsException("Certificate missing in the singer information " + signer);  }  PrivateKey key=signer.getPrivateKey(exchange);  if (key == null) {    throw new CryptoCmsException("Private key missing in the singer information " + signer);  }  ContentSigner contentSigner;  try {    contentSigner=new JcaContentSignerBuilder(signer.getSignatureAlgorithm(exchange)).setProvider(BouncyCastleProvider.PROVIDER_NAME).build(key);  } catch (  OperatorCreationException e) {    throw new CryptoCmsInvalidKeyException("The private key of the signer information  '" + signer + "' does not fit to the specified signature algorithm '"+ signer.getSignatureAlgorithm(exchange)+ "': "+ e.getMessage(),e);  }  JcaSignerInfoGeneratorBuilder signerBuilder=new JcaSignerInfoGeneratorBuilder(new JcaDigestCalculatorProviderBuilder().setProvider(BouncyCastleProvider.PROVIDER_NAME).build());  signerBuilder.setSignedAttributeGenerator(signer.getSignedAttributeGenerator(exchange)).setUnsignedAttributeGenerator(signer.getUnsignedAttributeGenerator(exchange));  gen.addSignerInfoGenerator(signerBuilder.build(contentSigner,signerCert));  List<Certificate> certificateList=new ArrayList<>();  for (  Certificate cert : signer.getCertificateChain(exchange)) {    if (!certificateList.contains(cert)) {      certificateList.add(cert);      gen.addCertificate(new X509CertificateHolder(cert.getEncoded()));      LOG.debug("Certificate added to Signed Data certificate list: {}",cert);    }  }} @TO@ for (SignerInfo signer : config.getSignerList()) {  LOG.debug("Signer info: {}",signer);  X509Certificate signerCert=signer.getCertificate(exchange);  if (signerCert == null) {    throw new CryptoCmsException("Certificate missing in the singer information " + signer);  }  PrivateKey key=signer.getPrivateKey(exchange);  if (key == null) {    throw new CryptoCmsException("Private key missing in the singer information " + signer);  }  ContentSigner contentSigner;  try {    contentSigner=new JcaContentSignerBuilder(signer.getSignatureAlgorithm(exchange)).setProvider(BouncyCastleProvider.PROVIDER_NAME).build(key);  } catch (  OperatorCreationException e) {    throw new CryptoCmsInvalidKeyException("The private key of the signer information  '" + signer + "' does not fit to the specified signature algorithm '"+ signer.getSignatureAlgorithm(exchange)+ "': "+ e.getMessage(),e);  }  JcaSignerInfoGeneratorBuilder signerBuilder=new JcaSignerInfoGeneratorBuilder(new JcaDigestCalculatorProviderBuilder().setProvider(BouncyCastleProvider.PROVIDER_NAME).build());  signerBuilder.setSignedAttributeGenerator(signer.getSignedAttributeGenerator(exchange)).setUnsignedAttributeGenerator(signer.getUnsignedAttributeGenerator(exchange));  gen.addSignerInfoGenerator(signerBuilder.build(contentSigner,signerCert));  List<Certificate> certificateList=new ArrayList<>();  for (  Certificate cert : signer.getCertificateChain(exchange)) {    if (!certificateList.contains(cert)) {      certificateList.add(cert);      gen.addCertificate(new X509CertificateHolder(cert.getEncoded()));      LOG.debug("Certificate added to Signed Data certificate list: {}",cert);    }  }} @AT@ 3400 @LENGTH@ 2312
---UPD MethodInvocation@@config.getSigner() @TO@ config.getSignerList() @AT@ 3425 @LENGTH@ 18
------UPD SimpleName@@MethodName:getSigner:[] @TO@ MethodName:getSignerList:[] @AT@ 3432 @LENGTH@ 11


UPD IfStatement@@if (StringUtils.hasText(value)) {  return value;} else {  return defaultValue;} @TO@ if (StringUtils.hasText(value)) {  return value;} @AT@ 20747 @LENGTH@ 91
---DEL Block@@ElseBody:{  return defaultValue;} @AT@ 20809 @LENGTH@ 29
------DEL ReturnStatement@@SimpleName:defaultValue @AT@ 20814 @LENGTH@ 20
---------DEL SimpleName@@defaultValue @AT@ 20821 @LENGTH@ 12


UPD IfStatement@@if (split.hasBase()) {  AcidOutputFormat.Options acidIOOptions=AcidUtils.parseBaseOrDeltaBucketFilename(split.getPath(),conf);  if (acidIOOptions.getBucketId() < 0) {    LOG.warn("Can't determine bucket ID for " + split.getPath() + "; ignoring");  }  bucket=acidIOOptions.getBucketId();  if (split.isOriginal()) {    mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath());  }} else {  bucket=(int)split.getStart();  assert false : "We should never have a split w/o base in acid 2.0 for full acid: " + split.getPath();} @TO@ if (split.hasBase()) {  AcidOutputFormat.Options acidIOOptions=AcidUtils.parseBaseOrDeltaBucketFilename(split.getPath(),conf);  if (acidIOOptions.getBucketId() < 0) {    LOG.warn("Can't determine bucket ID for " + split.getPath() + "; ignoring");  }  bucket=acidIOOptions.getBucketId();} else {  bucket=(int)split.getStart();  assert false : "We should never have a split w/o base in acid 2.0 for full acid: " + split.getPath();} @AT@ 88641 @LENGTH@ 620
---UPD Block@@ThenBody:{  AcidOutputFormat.Options acidIOOptions=AcidUtils.parseBaseOrDeltaBucketFilename(split.getPath(),conf);  if (acidIOOptions.getBucketId() < 0) {    LOG.warn("Can't determine bucket ID for " + split.getPath() + "; ignoring");  }  bucket=acidIOOptions.getBucketId();  if (split.isOriginal()) {    mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath());  }} @TO@ ThenBody:{  AcidOutputFormat.Options acidIOOptions=AcidUtils.parseBaseOrDeltaBucketFilename(split.getPath(),conf);  if (acidIOOptions.getBucketId() < 0) {    LOG.warn("Can't determine bucket ID for " + split.getPath() + "; ignoring");  }  bucket=acidIOOptions.getBucketId();} @AT@ 88662 @LENGTH@ 439
------DEL IfStatement@@if (split.isOriginal()) {  mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath());} @AT@ 88971 @LENGTH@ 124
---------DEL MethodInvocation@@split.isOriginal() @AT@ 88974 @LENGTH@ 18
------------DEL SimpleName@@Name:split @AT@ 88974 @LENGTH@ 5
------------DEL SimpleName@@MethodName:isOriginal:[] @AT@ 88980 @LENGTH@ 12
---------DEL Block@@ThenBody:{  mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath());} @AT@ 88994 @LENGTH@ 101
------------DEL ExpressionStatement@@MethodInvocation:mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath()) @AT@ 89004 @LENGTH@ 83
---------------DEL MethodInvocation@@mergerOptions.copyIndex(acidIOOptions.getCopyNumber()).bucketPath(split.getPath()) @AT@ 89004 @LENGTH@ 82
------------------DEL MethodInvocation@@MethodName:copyIndex:[acidIOOptions.getCopyNumber()] @AT@ 89004 @LENGTH@ 54
---------------------DEL MethodInvocation@@acidIOOptions.getCopyNumber() @AT@ 89028 @LENGTH@ 29
------------------------DEL SimpleName@@Name:acidIOOptions @AT@ 89028 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:getCopyNumber:[] @AT@ 89042 @LENGTH@ 15
------------------DEL SimpleName@@Name:mergerOptions @AT@ 89004 @LENGTH@ 13
------------------DEL SimpleName@@MethodName:bucketPath:[split.getPath()] @AT@ 89059 @LENGTH@ 27
---------------------DEL MethodInvocation@@split.getPath() @AT@ 89070 @LENGTH@ 15
------------------------DEL SimpleName@@Name:split @AT@ 89070 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 89076 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:verify(template).bulkOps(any(),anyString()) @TO@ MethodInvocation:verify(template).bulkOps(any(),eq("collection")) @AT@ 3575 @LENGTH@ 45
---UPD MethodInvocation@@verify(template).bulkOps(any(),anyString()) @TO@ verify(template).bulkOps(any(),eq("collection")) @AT@ 3575 @LENGTH@ 44
------UPD SimpleName@@MethodName:bulkOps:[any(), anyString()] @TO@ MethodName:bulkOps:[any(), eq("collection")] @AT@ 3592 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:anyString:[] @TO@ eq("collection") @AT@ 3607 @LENGTH@ 11
------------INS SimpleName@@MethodName:eq:["collection"] @TO@ MethodInvocation@@MethodName:anyString:[] @AT@ 3685 @LENGTH@ 16
---------------INS StringLiteral@@"collection" @TO@ SimpleName@@MethodName:eq:["collection"] @AT@ 3688 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1549 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1549 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1565 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(SoroushBotWS.getReceivedMessages().size(),0,"message did not send") @TO@ MethodInvocation:assertEquals(0,SoroushBotWS.getReceivedMessages().size(),"message did not send") @AT@ 3047 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals(SoroushBotWS.getReceivedMessages().size(),0,"message did not send") @TO@ assertEquals(0,SoroushBotWS.getReceivedMessages().size(),"message did not send") @AT@ 3047 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:[SoroushBotWS.getReceivedMessages().size(), 0, "message did not send"] @TO@ MethodName:assertEquals:[0, SoroushBotWS.getReceivedMessages().size(), "message did not send"] @AT@ 3047 @LENGTH@ 82
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[SoroushBotWS.getReceivedMessages().size(), 0, "message did not send"] @AT@ 3060 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3103 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Double(0.05),endpoint.getConfiguration().getKerberosRenewJitter()) @TO@ MethodInvocation:assertEquals(Double.valueOf(0.05),endpoint.getConfiguration().getKerberosRenewJitter()) @AT@ 8953 @LENGTH@ 85
---UPD MethodInvocation@@assertEquals(new Double(0.05),endpoint.getConfiguration().getKerberosRenewJitter()) @TO@ assertEquals(Double.valueOf(0.05),endpoint.getConfiguration().getKerberosRenewJitter()) @AT@ 8953 @LENGTH@ 84
------UPD SimpleName@@MethodName:assertEquals:[new Double(0.05), endpoint.getConfiguration().getKerberosRenewJitter()] @TO@ MethodName:assertEquals:[Double.valueOf(0.05), endpoint.getConfiguration().getKerberosRenewJitter()] @AT@ 8953 @LENGTH@ 84
---------INS MethodInvocation@@Double.valueOf(0.05) @TO@ SimpleName@@MethodName:assertEquals:[new Double(0.05), endpoint.getConfiguration().getKerberosRenewJitter()] @AT@ 8966 @LENGTH@ 20
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.valueOf(0.05) @AT@ 8966 @LENGTH@ 6
------------INS SimpleName@@MethodName:valueOf:[0.05] @TO@ MethodInvocation@@Double.valueOf(0.05) @AT@ 8973 @LENGTH@ 13
---------------INS NumberLiteral@@0.05 @TO@ SimpleName@@MethodName:valueOf:[0.05] @AT@ 8981 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Double[0.05] @AT@ 8966 @LENGTH@ 16
------------DEL New@@new @AT@ 8966 @LENGTH@ 3
------------DEL SimpleType@@Double @AT@ 8970 @LENGTH@ 6
------------DEL NumberLiteral@@0.05 @AT@ 8977 @LENGTH@ 4


INS MethodDeclaration@@DeploymentUnitProcessingException, MethodName:missingClassInAnnotation, String anCls, String resCls,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYEJB",length=4), public]EjbLogger, [BasicLogger] @AT@ 149893 @LENGTH@ 54
---INS SimpleType@@DeploymentUnitProcessingException @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:missingClassInAnnotation, String anCls, String resCls,  @AT@ 149859 @LENGTH@ 33
---INS SimpleName@@MethodName:missingClassInAnnotation @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:missingClassInAnnotation, String anCls, String resCls,  @AT@ 149893 @LENGTH@ 24
---INS SingleVariableDeclaration@@String anCls @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:missingClassInAnnotation, String anCls, String resCls,  @AT@ 149918 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String anCls @AT@ 149918 @LENGTH@ 6
------INS SimpleName@@anCls @TO@ SingleVariableDeclaration@@String anCls @AT@ 149925 @LENGTH@ 5
---INS SingleVariableDeclaration@@String resCls @TO@ MethodDeclaration@@DeploymentUnitProcessingException, MethodName:missingClassInAnnotation, String anCls, String resCls,  @AT@ 149932 @LENGTH@ 13
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String resCls @AT@ 149932 @LENGTH@ 6
------INS SimpleName@@resCls @TO@ SingleVariableDeclaration@@String resCls @AT@ 149939 @LENGTH@ 6


UPD VariableDeclarationStatement@@Object object=HttpHelper.deserializeJavaObjectFromStream(response.getInputStream()); @TO@ Object object=HttpHelper.deserializeJavaObjectFromStream(response.getInputStream(),null); @AT@ 1803 @LENGTH@ 86
---UPD VariableDeclarationFragment@@object=HttpHelper.deserializeJavaObjectFromStream(response.getInputStream()) @TO@ object=HttpHelper.deserializeJavaObjectFromStream(response.getInputStream(),null) @AT@ 1810 @LENGTH@ 78
------UPD MethodInvocation@@HttpHelper.deserializeJavaObjectFromStream(response.getInputStream()) @TO@ HttpHelper.deserializeJavaObjectFromStream(response.getInputStream(),null) @AT@ 1819 @LENGTH@ 69
---------UPD SimpleName@@MethodName:deserializeJavaObjectFromStream:[response.getInputStream()] @TO@ MethodName:deserializeJavaObjectFromStream:[response.getInputStream(), null] @AT@ 1830 @LENGTH@ 58
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:deserializeJavaObjectFromStream:[response.getInputStream()] @AT@ 1889 @LENGTH@ 4


UPD TryStatement@@try {  LZMAUtils.setCacheLZMAAvailability(false);  assertEquals(LZMAUtils.CachedAvailability.DONT_CACHE,LZMAUtils.getCachedLZMAAvailability());  LZMAUtils.setCacheLZMAAvailability(true);  assertEquals(LZMAUtils.CachedAvailability.CACHED_AVAILABLE,LZMAUtils.getCachedLZMAAvailability());}  finally {  LZMAUtils.setCacheLZMAAvailability(true);} @TO@ try {  LZMAUtils.setCacheLZMAAvailablity(false);  assertEquals(LZMAUtils.CachedAvailability.DONT_CACHE,LZMAUtils.getCachedLZMAAvailability());  LZMAUtils.setCacheLZMAAvailablity(true);  assertEquals(LZMAUtils.CachedAvailability.CACHED_AVAILABLE,LZMAUtils.getCachedLZMAAvailability());}  finally {  LZMAUtils.setCacheLZMAAvailablity(true);} @AT@ 3730 @LENGTH@ 416
---UPD ExpressionStatement@@MethodInvocation:LZMAUtils.setCacheLZMAAvailability(false) @TO@ MethodInvocation:LZMAUtils.setCacheLZMAAvailablity(false) @AT@ 3748 @LENGTH@ 42
------UPD MethodInvocation@@LZMAUtils.setCacheLZMAAvailability(false) @TO@ LZMAUtils.setCacheLZMAAvailablity(false) @AT@ 3748 @LENGTH@ 41
---------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[false] @TO@ MethodName:setCacheLZMAAvailablity:[false] @AT@ 3758 @LENGTH@ 31
---UPD ExpressionStatement@@MethodInvocation:LZMAUtils.setCacheLZMAAvailability(true) @TO@ MethodInvocation:LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 3909 @LENGTH@ 41
------UPD MethodInvocation@@LZMAUtils.setCacheLZMAAvailability(true) @TO@ LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 3909 @LENGTH@ 40
---------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[true] @TO@ MethodName:setCacheLZMAAvailablity:[true] @AT@ 3919 @LENGTH@ 30
---UPD Block@@FinallyBody:{  LZMAUtils.setCacheLZMAAvailability(true);} @TO@ FinallyBody:{  LZMAUtils.setCacheLZMAAvailablity(true);} @AT@ 4081 @LENGTH@ 65
------UPD ExpressionStatement@@MethodInvocation:LZMAUtils.setCacheLZMAAvailability(true) @TO@ MethodInvocation:LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 4095 @LENGTH@ 41
---------UPD MethodInvocation@@LZMAUtils.setCacheLZMAAvailability(true) @TO@ LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 4095 @LENGTH@ 40
------------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[true] @TO@ MethodName:setCacheLZMAAvailablity:[true] @AT@ 4105 @LENGTH@ 30


UPD CatchClause@@catch (javax.jms.IllegalStateException ex) {  if (keepAliveDelay < 0) {    throw ex;  }  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0) {    Thread.sleep(keepAliveDelay);  }} @TO@ catch (Exception ex) {  if (keepAliveDelay < 0) {    throw ex;  }  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0) {    Thread.sleep(keepAliveDelay);  }} @AT@ 14522 @LENGTH@ 796
---UPD SingleVariableDeclaration@@javax.jms.IllegalStateException ex @TO@ Exception ex @AT@ 14529 @LENGTH@ 34
------UPD SimpleType@@javax.jms.IllegalStateException @TO@ Exception @AT@ 14529 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:assumeNotNull(loginConfig.getKeystore()) @TO@ MethodInvocation:assumeTrue(loginConfig.getKeystore() != null) @AT@ 1748 @LENGTH@ 41
---UPD MethodInvocation@@assumeNotNull(loginConfig.getKeystore()) @TO@ assumeTrue(loginConfig.getKeystore() != null) @AT@ 1748 @LENGTH@ 40
------UPD SimpleName@@MethodName:assumeNotNull:[loginConfig.getKeystore()] @TO@ MethodName:assumeTrue:[loginConfig.getKeystore() != null] @AT@ 1748 @LENGTH@ 40
---------DEL MethodInvocation@@loginConfig.getKeystore() @AT@ 1762 @LENGTH@ 25
---------INS InfixExpression@@loginConfig.getKeystore() != null @TO@ SimpleName@@MethodName:assumeNotNull:[loginConfig.getKeystore()] @AT@ 1764 @LENGTH@ 33
------------INS MethodInvocation@@loginConfig.getKeystore() @TO@ InfixExpression@@loginConfig.getKeystore() != null @AT@ 1764 @LENGTH@ 25
---------------MOV SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getKeystore() @AT@ 1762 @LENGTH@ 11
---------------MOV SimpleName@@Name:loginConfig @TO@ MethodInvocation@@loginConfig.getKeystore() @AT@ 1762 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:getKeystore:[] @TO@ MethodInvocation@@loginConfig.getKeystore() @AT@ 1774 @LENGTH@ 13
------------INS Operator@@!= @TO@ InfixExpression@@loginConfig.getKeystore() != null @AT@ 1789 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@loginConfig.getKeystore() != null @AT@ 1793 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("direct:tweets").inOut("twitter-timeline://user?" + getUriTokens()).to("mock:result") @TO@ MethodInvocation:from("direct:tweets").to(ExchangePattern.InOut,"twitter-timeline://user?" + getUriTokens()).to("mock:result") @AT@ 3058 @LENGTH@ 587
---UPD MethodInvocation@@from("direct:tweets").inOut("twitter-timeline://user?" + getUriTokens()).to("mock:result") @TO@ from("direct:tweets").to(ExchangePattern.InOut,"twitter-timeline://user?" + getUriTokens()).to("mock:result") @AT@ 3058 @LENGTH@ 586
------UPD MethodInvocation@@MethodName:inOut:["twitter-timeline://user?" + getUriTokens()] @TO@ MethodName:to:[ExchangePattern.InOut, "twitter-timeline://user?" + getUriTokens()] @AT@ 3058 @LENGTH@ 208
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["twitter-timeline://user?" + getUriTokens()] @AT@ 3260 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3260 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3276 @LENGTH@ 5


UPD VariableDeclarationStatement@@SimpleQueryHints hints=Jpa21Utils.getFetchGraphHint(em,method.getEntityGraph(),getQueryMethod().getEntityInformation().getJavaType()); @TO@ QueryHints hints=Jpa21Utils.getFetchGraphHint(em,method.getEntityGraph(),getQueryMethod().getEntityInformation().getJavaType()); @AT@ 7562 @LENGTH@ 143
---UPD SimpleType@@SimpleQueryHints @TO@ QueryHints @AT@ 7562 @LENGTH@ 16


MOV ReturnStatement@@ClassInstanceCreation:new AuthenticationServiceException(ex.getMessage(),ex) @TO@ MethodDeclaration@@private, AuthenticationException, MethodName:onError, OAuth2IntrospectionException ex,  @AT@ 4512 @LENGTH@ 63


UPD TypeDeclaration@@[@CamelSpringTest, @ContextConfiguration(classes=BeanJavaConfigTest.ContextConfig.class), public]BeanJavaConfigTest, AbstractJUnit4SpringContextTests @TO@ [@CamelSpringTest, @ContextConfiguration(classes=BeanJavaConfigTest.ContextConfig.class), public]BeanJavaConfigTest,  @AT@ 1506 @LENGTH@ 1358
---DEL SimpleType@@AbstractJUnit4SpringContextTests @AT@ 1635 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @TO@ MethodInvocation:assertThat((Object)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @AT@ 3754 @LENGTH@ 135
---UPD MethodInvocation@@assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @TO@ assertThat((Object)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @AT@ 3754 @LENGTH@ 134
------UPD MethodInvocation@@MethodName:assertThat:[(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)] @TO@ MethodName:assertThat:[(Object)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)] @AT@ 3754 @LENGTH@ 122
---------UPD CastExpression@@(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @TO@ (Object)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @AT@ 3765 @LENGTH@ 110
------------UPD SimpleType@@OAuth2AuthorizedClient @TO@ Object @AT@ 3766 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertEquals(cause.getMessage(),"No bean could be found in the registry of type: PlatformTransactionManager") @TO@ MethodInvocation:assertEquals("No bean could be found in the registry of type: PlatformTransactionManager",cause.getMessage()) @AT@ 1803 @LENGTH@ 111
---UPD MethodInvocation@@assertEquals(cause.getMessage(),"No bean could be found in the registry of type: PlatformTransactionManager") @TO@ assertEquals("No bean could be found in the registry of type: PlatformTransactionManager",cause.getMessage()) @AT@ 1803 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertEquals:[cause.getMessage(), "No bean could be found in the registry of type: PlatformTransactionManager"] @TO@ MethodName:assertEquals:["No bean could be found in the registry of type: PlatformTransactionManager", cause.getMessage()] @AT@ 1803 @LENGTH@ 110
---------INS StringLiteral@@"No bean could be found in the registry of type: PlatformTransactionManager" @TO@ SimpleName@@MethodName:assertEquals:[cause.getMessage(), "No bean could be found in the registry of type: PlatformTransactionManager"] @AT@ 1816 @LENGTH@ 76
---------DEL StringLiteral@@"No bean could be found in the registry of type: PlatformTransactionManager" @AT@ 1836 @LENGTH@ 76


UPD IfStatement@@if (!namespaces.contains(namespace)) {  pulsarAdmin.namespaces().createNamespace(namespace,clusters);} @TO@ if (!namespaces.contains(tenant + "/" + namespace)) {  pulsarAdmin.namespaces().createNamespace(tenant + "/" + namespace,clusters);} @AT@ 2387 @LENGTH@ 123
---UPD PrefixExpression@@!namespaces.contains(namespace) @TO@ !namespaces.contains(tenant + "/" + namespace) @AT@ 2391 @LENGTH@ 31
------UPD MethodInvocation@@namespaces.contains(namespace) @TO@ namespaces.contains(tenant + "/" + namespace) @AT@ 2392 @LENGTH@ 30
---------UPD SimpleName@@MethodName:contains:[namespace] @TO@ MethodName:contains:[tenant + "/" + namespace] @AT@ 2403 @LENGTH@ 19
------------INS InfixExpression@@tenant + "/" + namespace @TO@ SimpleName@@MethodName:contains:[namespace] @AT@ 2412 @LENGTH@ 24
---------------INS SimpleName@@tenant @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2412 @LENGTH@ 6
---------------INS Operator@@+ @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2418 @LENGTH@ 1
---------------INS StringLiteral@@"/" @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2421 @LENGTH@ 3
---------------INS SimpleName@@namespace @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2427 @LENGTH@ 9
------------DEL SimpleName@@namespace @AT@ 2412 @LENGTH@ 9
---UPD Block@@ThenBody:{  pulsarAdmin.namespaces().createNamespace(namespace,clusters);} @TO@ ThenBody:{  pulsarAdmin.namespaces().createNamespace(tenant + "/" + namespace,clusters);} @AT@ 2424 @LENGTH@ 86
------UPD ExpressionStatement@@MethodInvocation:pulsarAdmin.namespaces().createNamespace(namespace,clusters) @TO@ MethodInvocation:pulsarAdmin.namespaces().createNamespace(tenant + "/" + namespace,clusters) @AT@ 2438 @LENGTH@ 62
---------UPD MethodInvocation@@pulsarAdmin.namespaces().createNamespace(namespace,clusters) @TO@ pulsarAdmin.namespaces().createNamespace(tenant + "/" + namespace,clusters) @AT@ 2438 @LENGTH@ 61
------------UPD SimpleName@@MethodName:createNamespace:[namespace, clusters] @TO@ MethodName:createNamespace:[tenant + "/" + namespace, clusters] @AT@ 2463 @LENGTH@ 36
---------------DEL SimpleName@@namespace @AT@ 2479 @LENGTH@ 9
---------------INS InfixExpression@@tenant + "/" + namespace @TO@ SimpleName@@MethodName:createNamespace:[namespace, clusters] @AT@ 2494 @LENGTH@ 24
------------------INS SimpleName@@tenant @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2494 @LENGTH@ 6
------------------INS Operator@@+ @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2500 @LENGTH@ 1
------------------INS StringLiteral@@"/" @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2503 @LENGTH@ 3
------------------INS SimpleName@@namespace @TO@ InfixExpression@@tenant + "/" + namespace @AT@ 2509 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2094 @LENGTH@ 553
---DEL Modifier@@public @AT@ 2094 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2101 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2106 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2157 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonIAMClientMock clientMock=new AmazonIAMClientMock(); @AT@ 2178 @LENGTH@ 59
------DEL SimpleType@@AmazonIAMClientMock @AT@ 2178 @LENGTH@ 19
------DEL VariableDeclarationFragment@@clientMock=new AmazonIAMClientMock() @AT@ 2198 @LENGTH@ 38
---------DEL SimpleName@@clientMock @AT@ 2198 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AmazonIAMClientMock[] @AT@ 2211 @LENGTH@ 25
------------DEL New@@new @AT@ 2211 @LENGTH@ 3
------------DEL SimpleType@@AmazonIAMClientMock @AT@ 2215 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("amazonIamClient",clientMock) @AT@ 2246 @LENGTH@ 58
------DEL MethodInvocation@@context.getRegistry().bind("amazonIamClient",clientMock) @AT@ 2246 @LENGTH@ 57
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2246 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2246 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["amazonIamClient", clientMock] @AT@ 2268 @LENGTH@ 35
------------DEL StringLiteral@@"amazonIamClient" @AT@ 2273 @LENGTH@ 17
------------DEL SimpleName@@clientMock @AT@ 2292 @LENGTH@ 10
---DEL VariableDeclarationStatement@@IAM2Component component=context.getComponent("aws2-iam",IAM2Component.class); @AT@ 2313 @LENGTH@ 80
------DEL SimpleType@@IAM2Component @AT@ 2313 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-iam",IAM2Component.class) @AT@ 2327 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2327 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-iam",IAM2Component.class) @AT@ 2339 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2339 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-iam", IAM2Component.class] @AT@ 2347 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-iam" @AT@ 2360 @LENGTH@ 10
---------------DEL TypeLiteral@@IAM2Component.class @AT@ 2372 @LENGTH@ 19
---DEL VariableDeclarationStatement@@IAM2Endpoint endpoint=(IAM2Endpoint)component.createEndpoint("aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2402 @LENGTH@ 159
------DEL SimpleType@@IAM2Endpoint @AT@ 2402 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(IAM2Endpoint)component.createEndpoint("aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2415 @LENGTH@ 145
---------DEL SimpleName@@endpoint @AT@ 2415 @LENGTH@ 8
---------DEL CastExpression@@(IAM2Endpoint)component.createEndpoint("aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2426 @LENGTH@ 134
------------DEL SimpleType@@IAM2Endpoint @AT@ 2427 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2441 @LENGTH@ 119
---------------DEL SimpleName@@Name:component @AT@ 2441 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2468 @LENGTH@ 92
------------------DEL StringLiteral@@"aws2-iam://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2483 @LENGTH@ 76
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(clientMock,endpoint.getConfiguration().getIamClient()) @AT@ 2571 @LENGTH@ 70
------DEL MethodInvocation@@assertNotSame(clientMock,endpoint.getConfiguration().getIamClient()) @AT@ 2571 @LENGTH@ 69
---------DEL SimpleName@@MethodName:assertNotSame:[clientMock, endpoint.getConfiguration().getIamClient()] @AT@ 2571 @LENGTH@ 69
------------DEL SimpleName@@clientMock @AT@ 2585 @LENGTH@ 10
------------DEL MethodInvocation@@endpoint.getConfiguration().getIamClient() @AT@ 2597 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2597 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2597 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getIamClient:[] @AT@ 2625 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:event.matchesMockWaitTime() @TO@ MethodInvocation:event.matchesWaitTime() @AT@ 1918 @LENGTH@ 28
---UPD MethodInvocation@@event.matchesMockWaitTime() @TO@ event.matchesWaitTime() @AT@ 1918 @LENGTH@ 27
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1924 @LENGTH@ 21


UPD IfStatement@@if (this.saveState) {  Assert.state(StringUtils.hasText(this.name),"A name is required when saveState is set to true.");} else {  reader.setName(this.name);} @TO@ if (this.saveState) {  Assert.state(StringUtils.hasText(this.name),"A name is required when saveState is set to true.");} @AT@ 6925 @LENGTH@ 170
---DEL Block@@ElseBody:{  reader.setName(this.name);} @AT@ 7060 @LENGTH@ 35


UPD FieldDeclaration@@private, static, Boolean, [JAVA8] @TO@ private, static, Boolean, [java8] @AT@ 1429 @LENGTH@ 29
---UPD VariableDeclarationFragment@@JAVA8 @TO@ java8 @AT@ 1452 @LENGTH@ 5
------UPD SimpleName@@JAVA8 @TO@ java8 @AT@ 1452 @LENGTH@ 5


UPD ReturnStatement@@StringLiteral:"Property converted by HighPriorityStringConverter2" @TO@ ConditionalExpression:!value.isEmpty() ? "Property converted by HighPriorityStringConverter2" : null @AT@ 1436 @LENGTH@ 60
---INS ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter2" : null @TO@ ReturnStatement@@StringLiteral:"Property converted by HighPriorityStringConverter2" @AT@ 1443 @LENGTH@ 78
------INS PrefixExpression@@!value.isEmpty() @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter2" : null @AT@ 1443 @LENGTH@ 16
---------INS Operator@@! @TO@ PrefixExpression@@!value.isEmpty() @AT@ 1443 @LENGTH@ 1
---------INS MethodInvocation@@value.isEmpty() @TO@ PrefixExpression@@!value.isEmpty() @AT@ 1444 @LENGTH@ 15
------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.isEmpty() @AT@ 1444 @LENGTH@ 5
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@value.isEmpty() @AT@ 1450 @LENGTH@ 9
------INS StringLiteral@@"Property converted by HighPriorityStringConverter2" @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter2" : null @AT@ 1462 @LENGTH@ 52
------INS NullLiteral@@null @TO@ ConditionalExpression@@!value.isEmpty() ? "Property converted by HighPriorityStringConverter2" : null @AT@ 1517 @LENGTH@ 4
---DEL StringLiteral@@"Property converted by HighPriorityStringConverter2" @AT@ 1443 @LENGTH@ 52


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 3161 @LENGTH@ 581
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 3173 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ MethodInvocation:assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2018 @LENGTH@ 86
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),false,"The request should be handled sucessfully") @TO@ assertEquals(false,exchange.isFailed(),"The request should be handled sucessfully") @AT@ 2018 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @TO@ MethodName:assertEquals:[false, exchange.isFailed(), "The request should be handled sucessfully"] @AT@ 2018 @LENGTH@ 85
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), false, "The request should be handled sucessfully"] @AT@ 2031 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 2052 @LENGTH@ 5


UPD FieldDeclaration@@private, URI, [introspectionUri] @TO@ private, final, URI, [introspectionUri] @AT@ 2199 @LENGTH@ 29
---INS Modifier@@final @TO@ FieldDeclaration@@private, URI, [introspectionUri] @AT@ 2207 @LENGTH@ 5


UPD VariableDeclarationStatement@@final LogoutConfigurer<B> logoutConfigurer=getBuilder().getConfigurer(LogoutConfigurer.class); @TO@ LogoutConfigurer<B> logoutConfigurer=getBuilder().getConfigurer(LogoutConfigurer.class); @AT@ 14872 @LENGTH@ 96
---DEL Modifier@@final @AT@ 14872 @LENGTH@ 5


MOV MethodDeclaration@@private, voidMethodName:NoOpPasswordEncoder,  @TO@ TypeDeclaration@@[@Deprecated, public, final]NoOpPasswordEncoder, [PasswordEncoder] @AT@ 1898 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:when(session.connectAndBind("localhost",new Integer(2775),expectedBindParameters)).thenReturn("1") @TO@ MethodInvocation:when(session.connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters)).thenReturn("1") @AT@ 2671 @LENGTH@ 118
---UPD MethodInvocation@@when(session.connectAndBind("localhost",new Integer(2775),expectedBindParameters)).thenReturn("1") @TO@ when(session.connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters)).thenReturn("1") @AT@ 2671 @LENGTH@ 117
------UPD MethodInvocation@@MethodName:when:[session.connectAndBind("localhost",new Integer(2775),expectedBindParameters)] @TO@ MethodName:when:[session.connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters)] @AT@ 2671 @LENGTH@ 84
---------UPD MethodInvocation@@session.connectAndBind("localhost",new Integer(2775),expectedBindParameters) @TO@ session.connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters) @AT@ 2676 @LENGTH@ 78
------------UPD SimpleName@@MethodName:connectAndBind:["localhost", new Integer(2775), expectedBindParameters] @TO@ MethodName:connectAndBind:["localhost", Integer.valueOf(2775), expectedBindParameters] @AT@ 2684 @LENGTH@ 70
---------------INS MethodInvocation@@Integer.valueOf(2775) @TO@ SimpleName@@MethodName:connectAndBind:["localhost", new Integer(2775), expectedBindParameters] @AT@ 2712 @LENGTH@ 21
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(2775) @AT@ 2712 @LENGTH@ 7
------------------INS SimpleName@@MethodName:valueOf:[2775] @TO@ MethodInvocation@@Integer.valueOf(2775) @AT@ 2720 @LENGTH@ 13
---------------------INS NumberLiteral@@2775 @TO@ SimpleName@@MethodName:valueOf:[2775] @AT@ 2728 @LENGTH@ 4
---------------DEL ClassInstanceCreation@@Integer[2775] @AT@ 2712 @LENGTH@ 17
------------------DEL New@@new @AT@ 2712 @LENGTH@ 3
------------------DEL SimpleType@@Integer @AT@ 2716 @LENGTH@ 7
------------------DEL NumberLiteral@@2775 @AT@ 2724 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ MethodInvocation:assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 2509 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 2509 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @TO@ MethodName:assertEquals:["123", String.valueOf(response.getId()), "Get a wrong customer id"] @AT@ 2509 @LENGTH@ 80
---------MOV MethodInvocation@@String.valueOf(response.getId()) @TO@ SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @AT@ 2522 @LENGTH@ 32


UPD VariableDeclarationStatement@@io.lettuce.core.Range<String> lettuceRange=RangeConverter.toRange(range); @TO@ io.lettuce.core.Range<String> lettuceRange=RangeConverter.toRange(range,Function.identity()); @AT@ 22992 @LENGTH@ 75
---UPD VariableDeclarationFragment@@lettuceRange=RangeConverter.toRange(range) @TO@ lettuceRange=RangeConverter.toRange(range,Function.identity()) @AT@ 23022 @LENGTH@ 44
------UPD MethodInvocation@@RangeConverter.toRange(range) @TO@ RangeConverter.toRange(range,Function.identity()) @AT@ 23037 @LENGTH@ 29
---------UPD SimpleName@@MethodName:toRange:[range] @TO@ MethodName:toRange:[range, Function.identity()] @AT@ 23052 @LENGTH@ 14
------------INS MethodInvocation@@Function.identity() @TO@ SimpleName@@MethodName:toRange:[range] @AT@ 23091 @LENGTH@ 19
---------------INS SimpleName@@Name:Function @TO@ MethodInvocation@@Function.identity() @AT@ 23091 @LENGTH@ 8
---------------INS SimpleName@@MethodName:identity:[] @TO@ MethodInvocation@@Function.identity() @AT@ 23100 @LENGTH@ 10


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]CopyDirectoryVisitor, CountingPathVisitor @AT@ 3753 @LENGTH@ 267
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3753 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3760 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3764 @LENGTH@ 8
---INS VariableDeclarationStatement@@final int prime=31; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3785 @LENGTH@ 21
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 3785 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 3791 @LENGTH@ 3
------INS VariableDeclarationFragment@@prime=31 @TO@ VariableDeclarationStatement@@final int prime=31; @AT@ 3795 @LENGTH@ 10
---------INS SimpleName@@prime @TO@ VariableDeclarationFragment@@prime=31 @AT@ 3795 @LENGTH@ 5
---------INS NumberLiteral@@31 @TO@ VariableDeclarationFragment@@prime=31 @AT@ 3803 @LENGTH@ 2
---INS VariableDeclarationStatement@@int result=super.hashCode(); @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3815 @LENGTH@ 30
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=super.hashCode(); @AT@ 3815 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=super.hashCode() @TO@ VariableDeclarationStatement@@int result=super.hashCode(); @AT@ 3819 @LENGTH@ 25
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=super.hashCode() @AT@ 3819 @LENGTH@ 6
---------INS SuperMethodInvocation@@super.hashCode() @TO@ VariableDeclarationFragment@@result=super.hashCode() @AT@ 3828 @LENGTH@ 16
------------INS SimpleName@@MethodName:hashCode:[] @TO@ SuperMethodInvocation@@super.hashCode() @AT@ 3834 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:result=prime * result + Arrays.hashCode(copyOptions) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3854 @LENGTH@ 55
------INS Assignment@@result=prime * result + Arrays.hashCode(copyOptions) @TO@ ExpressionStatement@@Assignment:result=prime * result + Arrays.hashCode(copyOptions) @AT@ 3854 @LENGTH@ 54
---------INS SimpleName@@result @TO@ Assignment@@result=prime * result + Arrays.hashCode(copyOptions) @AT@ 3854 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=prime * result + Arrays.hashCode(copyOptions) @AT@ 3860 @LENGTH@ 1
---------INS InfixExpression@@prime * result + Arrays.hashCode(copyOptions) @TO@ Assignment@@result=prime * result + Arrays.hashCode(copyOptions) @AT@ 3863 @LENGTH@ 45
------------INS InfixExpression@@prime * result @TO@ InfixExpression@@prime * result + Arrays.hashCode(copyOptions) @AT@ 3863 @LENGTH@ 14
---------------INS SimpleName@@prime @TO@ InfixExpression@@prime * result @AT@ 3863 @LENGTH@ 5
---------------INS Operator@@* @TO@ InfixExpression@@prime * result @AT@ 3868 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@prime * result @AT@ 3871 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@prime * result + Arrays.hashCode(copyOptions) @AT@ 3877 @LENGTH@ 1
------------INS MethodInvocation@@Arrays.hashCode(copyOptions) @TO@ InfixExpression@@prime * result + Arrays.hashCode(copyOptions) @AT@ 3880 @LENGTH@ 28
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.hashCode(copyOptions) @AT@ 3880 @LENGTH@ 6
---------------INS SimpleName@@MethodName:hashCode:[copyOptions] @TO@ MethodInvocation@@Arrays.hashCode(copyOptions) @AT@ 3887 @LENGTH@ 21
------------------INS SimpleName@@copyOptions @TO@ SimpleName@@MethodName:hashCode:[copyOptions] @AT@ 3896 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 3918 @LENGTH@ 73
------INS Assignment@@result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @TO@ ExpressionStatement@@Assignment:result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3918 @LENGTH@ 72
---------INS SimpleName@@result @TO@ Assignment@@result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3918 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3924 @LENGTH@ 1
---------INS InfixExpression@@prime * result + Objects.hash(sourceDirectory,targetDirectory) @TO@ Assignment@@result=prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3927 @LENGTH@ 63
------------INS InfixExpression@@prime * result @TO@ InfixExpression@@prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3927 @LENGTH@ 14
---------------INS SimpleName@@prime @TO@ InfixExpression@@prime * result @AT@ 3927 @LENGTH@ 5
---------------INS Operator@@* @TO@ InfixExpression@@prime * result @AT@ 3932 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@prime * result @AT@ 3935 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3941 @LENGTH@ 1
------------INS MethodInvocation@@Objects.hash(sourceDirectory,targetDirectory) @TO@ InfixExpression@@prime * result + Objects.hash(sourceDirectory,targetDirectory) @AT@ 3944 @LENGTH@ 46
---------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.hash(sourceDirectory,targetDirectory) @AT@ 3944 @LENGTH@ 7
---------------INS SimpleName@@MethodName:hash:[sourceDirectory, targetDirectory] @TO@ MethodInvocation@@Objects.hash(sourceDirectory,targetDirectory) @AT@ 3952 @LENGTH@ 38
------------------INS SimpleName@@sourceDirectory @TO@ SimpleName@@MethodName:hash:[sourceDirectory, targetDirectory] @AT@ 3957 @LENGTH@ 15
------------------INS SimpleName@@targetDirectory @TO@ SimpleName@@MethodName:hash:[sourceDirectory, targetDirectory] @AT@ 3974 @LENGTH@ 15
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 4000 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 4007 @LENGTH@ 6


MOV MethodDeclaration@@public, static, TemplatedRouteBuilder, MethodName:builder, CamelContext camelContext, String routeTemplateId,  @TO@ TypeDeclaration@@[public, final]TemplatedRouteBuilder,  @AT@ 1745 @LENGTH@ 175


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(new Object[]{response}) @TO@ MethodInvocation:exchange.getMessage().setBody(new Object[]{response}) @AT@ 2802 @LENGTH@ 53
---UPD MethodInvocation@@exchange.getOut().setBody(new Object[]{response}) @TO@ exchange.getMessage().setBody(new Object[]{response}) @AT@ 2802 @LENGTH@ 52
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2802 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2483 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2483 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2499 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(file.getFileName().toString()),file) @TO@ MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @AT@ 7315 @LENGTH@ 70
---UPD MethodInvocation@@toFileVisitResult(accept(file.getFileName().toString()),file) @TO@ toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @AT@ 7322 @LENGTH@ 62
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(file.getFileName().toString()), file] @TO@ MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null)), file] @AT@ 7322 @LENGTH@ 62
---------UPD MethodInvocation@@accept(file.getFileName().toString()) @TO@ accept(Objects.toString(file.getFileName(),null)) @AT@ 7340 @LENGTH@ 37
------------UPD SimpleName@@MethodName:accept:[file.getFileName().toString()] @TO@ MethodName:accept:[Objects.toString(file.getFileName(),null)] @AT@ 7340 @LENGTH@ 37
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 7347 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:accept:[file.getFileName().toString()] @AT@ 7373 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7373 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7381 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7410 @LENGTH@ 4
------------UPD SimpleName@@MethodName:accept:[file.getFileName().toString()] @TO@ MethodName:accept:[Objects.toString(file.getFileName(),null)] @AT@ 7340 @LENGTH@ 37
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 7347 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:accept:[file.getFileName().toString()] @AT@ 7373 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7373 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7381 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7347 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7347 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7366 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7410 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(service.getGreetName(),"Greet","We should call the service") @TO@ MethodInvocation:assertEquals("Greet",service.getGreetName(),"We should call the service") @AT@ 1664 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals(service.getGreetName(),"Greet","We should call the service") @TO@ assertEquals("Greet",service.getGreetName(),"We should call the service") @AT@ 1664 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:[service.getGreetName(), "Greet", "We should call the service"] @TO@ MethodName:assertEquals:["Greet", service.getGreetName(), "We should call the service"] @AT@ 1664 @LENGTH@ 75
---------INS StringLiteral@@"Greet" @TO@ SimpleName@@MethodName:assertEquals:[service.getGreetName(), "Greet", "We should call the service"] @AT@ 1677 @LENGTH@ 7
---------DEL StringLiteral@@"Greet" @AT@ 1701 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:test").setBody(constant("1,2,3,4,5")).inOut("activemq:queue:test1?requestTimeout=2000").split().tokenize(",").parallelProcessing().inOut("activemq:queue:test2?requestTimeout=2000").to("mock:received").end().setBody(constant("Fully done")).log("Finished") @TO@ MethodInvocation:from("direct:test").setBody(constant("1,2,3,4,5")).to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=2000").split().tokenize(",").parallelProcessing().to(ExchangePattern.InOut,"activemq:queue:test2?requestTimeout=2000").to("mock:received").end().setBody(constant("Fully done")).log("Finished") @AT@ 2318 @LENGTH@ 468
---UPD MethodInvocation@@from("direct:test").setBody(constant("1,2,3,4,5")).inOut("activemq:queue:test1?requestTimeout=2000").split().tokenize(",").parallelProcessing().inOut("activemq:queue:test2?requestTimeout=2000").to("mock:received").end().setBody(constant("Fully done")).log("Finished") @TO@ from("direct:test").setBody(constant("1,2,3,4,5")).to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=2000").split().tokenize(",").parallelProcessing().to(ExchangePattern.InOut,"activemq:queue:test2?requestTimeout=2000").to("mock:received").end().setBody(constant("Fully done")).log("Finished") @AT@ 2318 @LENGTH@ 467
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:test2?requestTimeout=2000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:test2?requestTimeout=2000"] @AT@ 2318 @LENGTH@ 293
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:test2?requestTimeout=2000"] @AT@ 2626 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2626 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2642 @LENGTH@ 5
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=2000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:test1?requestTimeout=2000"] @AT@ 2318 @LENGTH@ 150
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=2000"] @AT@ 2463 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2463 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2479 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)).next().defaultIfEmpty(new AuthorizationDecision(false)) @TO@ MethodInvocation:Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)).next().defaultIfEmpty(new AuthorizationDecision(false)) @AT@ 2065 @LENGTH@ 562
---UPD MethodInvocation@@Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)).next().defaultIfEmpty(new AuthorizationDecision(false)) @TO@ Flux.fromIterable(this.mappings).concatMap((mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)).next().defaultIfEmpty(new AuthorizationDecision(false)) @AT@ 2072 @LENGTH@ 554
------UPD MethodInvocation@@MethodName:concatMap:[(mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)] @TO@ MethodName:concatMap:[(mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
)] @AT@ 2072 @LENGTH@ 498
---------UPD LambdaExpression@@(mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
) @TO@ (mapping) -> mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
) @AT@ 2115 @LENGTH@ 454
------------UPD MethodInvocation@@mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
) @TO@ mapping.getMatcher().matches(exchange).filter(MatchResult::isMatch).map(MatchResult::getVariables).flatMap((variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
) @AT@ 2128 @LENGTH@ 441
---------------UPD SimpleName@@MethodName:flatMap:[(variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
] @TO@ MethodName:flatMap:[(variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
] @AT@ 2232 @LENGTH@ 337
------------------UPD LambdaExpression@@(variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
 @TO@ (variables) -> {
  logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()));
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
 @AT@ 2240 @LENGTH@ 328
---------------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());} @AT@ 2262 @LENGTH@ 199
------------------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2266 @LENGTH@ 23
---------------------------DEL SimpleName@@Name:logger @AT@ 2266 @LENGTH@ 6
---------------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2273 @LENGTH@ 16
------------------------DEL Block@@ThenBody:{  logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());} @AT@ 2291 @LENGTH@ 170
---------------------MOV ExpressionStatement@@MethodInvocation:logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @TO@ LambdaExpression@@(variables) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry());
  }
  return mapping.getEntry().check(authentication,new AuthorizationContext(exchange,variables));
}
 @AT@ 2299 @LENGTH@ 155
------------------------UPD MethodInvocation@@logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @TO@ LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @AT@ 2299 @LENGTH@ 154
------------------------INS MethodInvocation@@logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @AT@ 2310 @LENGTH@ 170
---------------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())) @AT@ 2310 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:debug:[LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())] @TO@ MethodInvocation@@logger.debug(LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())) @AT@ 2317 @LENGTH@ 163
------------------------------MOV MethodInvocation@@logger.debug("Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()) @TO@ SimpleName@@MethodName:debug:[LogMessage.of(() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry())] @AT@ 2299 @LENGTH@ 154
---------------------------------UPD SimpleName@@Name:logger @TO@ Name:LogMessage @AT@ 2299 @LENGTH@ 6
---------------------------------UPD SimpleName@@MethodName:debug:["Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()] @TO@ MethodName:of:[() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()] @AT@ 2306 @LENGTH@ 147
------------------------------------INS LambdaExpression@@() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry() @TO@ SimpleName@@MethodName:debug:["Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry()] @AT@ 2337 @LENGTH@ 141
---------------------------------------MOV InfixExpression@@"Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry() @TO@ LambdaExpression@@() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry() @AT@ 2321 @LENGTH@ 131
---------------------------------------MOV InfixExpression@@"Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry() @TO@ LambdaExpression@@() -> "Checking authorization on '" + exchange.getRequest().getPath().pathWithinApplication() + "' using "+ mapping.getEntry() @AT@ 2321 @LENGTH@ 131


INS MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @TO@ TypeDeclaration@@[final]ProtectPointcutPostProcessor, [BeanPostProcessor] @AT@ 5640 @LENGTH@ 183
---MOV TryStatement@@try {  methods=bean.getClass().getMethods();} catch (Exception ex) {  throw new IllegalStateException(ex.getMessage());} @TO@ MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @AT@ 5070 @LENGTH@ 139
------DEL ExpressionStatement@@Assignment:methods=bean.getClass().getMethods() @AT@ 5080 @LENGTH@ 39
---------DEL Assignment@@methods=bean.getClass().getMethods() @AT@ 5080 @LENGTH@ 38
------------DEL SimpleName@@methods @AT@ 5080 @LENGTH@ 7
------------DEL Operator@@= @AT@ 5087 @LENGTH@ 1
------------DEL MethodInvocation@@bean.getClass().getMethods() @AT@ 5090 @LENGTH@ 28
------INS ReturnStatement@@MethodInvocation:bean.getClass().getMethods() @TO@ TryStatement@@try {  methods=bean.getClass().getMethods();} catch (Exception ex) {  throw new IllegalStateException(ex.getMessage());} @AT@ 5698 @LENGTH@ 36
---------INS MethodInvocation@@bean.getClass().getMethods() @TO@ ReturnStatement@@MethodInvocation:bean.getClass().getMethods() @AT@ 5705 @LENGTH@ 28
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5090 @LENGTH@ 15
------------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5090 @LENGTH@ 15
------------MOV SimpleName@@Name:bean @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5090 @LENGTH@ 4
------------MOV SimpleName@@Name:bean @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5090 @LENGTH@ 4
------------MOV SimpleName@@MethodName:getMethods:[] @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5106 @LENGTH@ 12
------------MOV SimpleName@@MethodName:getMethods:[] @TO@ MethodInvocation@@bean.getClass().getMethods() @AT@ 5106 @LENGTH@ 12
---INS Modifier@@private @TO@ MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @AT@ 5640 @LENGTH@ 7
---INS ArrayType@@Method[] @TO@ MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @AT@ 5648 @LENGTH@ 8
------INS SimpleType@@Method @TO@ ArrayType@@Method[] @AT@ 5648 @LENGTH@ 6
---INS SimpleName@@MethodName:getBeanMethods @TO@ MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @AT@ 5657 @LENGTH@ 14
---INS SingleVariableDeclaration@@Object bean @TO@ MethodDeclaration@@private, Method[], MethodName:getBeanMethods, Object bean,  @AT@ 5672 @LENGTH@ 11
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object bean @AT@ 5672 @LENGTH@ 6
------INS SimpleName@@bean @TO@ SingleVariableDeclaration@@Object bean @AT@ 5679 @LENGTH@ 4


MOV ReturnStatement@@MethodInvocation:this.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId,principal,request) @TO@ MethodDeclaration@@public, T, T extends OAuth2AuthorizedClient, MethodName:loadAuthorizedClient, String clientRegistrationId, Authentication principal, HttpServletRequest request,  @AT@ 3731 @LENGTH@ 116


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 1748 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 1748 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 1748 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1759 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1766 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),1) @TO@ MethodInvocation:assertEquals(1,parse.size()) @AT@ 2461 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(parse.size(),1) @TO@ assertEquals(1,parse.size()) @AT@ 2461 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[parse.size(), 1] @TO@ MethodName:assertEquals:[1, parse.size()] @AT@ 2461 @LENGTH@ 29
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 1] @AT@ 2474 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2488 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?negotiationType=SSL&sslParameters=#sslParams&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?negotiationType=SSL&sslParameters=#sslParams&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 6170 @LENGTH@ 687
---UPD MethodInvocation@@from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?negotiationType=SSL&sslParameters=#sslParams&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?negotiationType=SSL&sslParameters=#sslParams&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 6170 @LENGTH@ 686
------UPD MethodInvocation@@MethodName:setBody:[simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @TO@ MethodName:setBody:[simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @AT@ 6170 @LENGTH@ 477
---------UPD MethodInvocation@@simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @TO@ simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @AT@ 6579 @LENGTH@ 67
------------UPD SimpleName@@MethodName:simple:[new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @TO@ MethodName:simple:[Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @AT@ 6579 @LENGTH@ 67
---------------UPD MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @TO@ Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 6586 @LENGTH@ 59
------------------INS MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 6586 @LENGTH@ 52
---------------------INS InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @TO@ MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 6602 @LENGTH@ 35
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 6598 @LENGTH@ 16
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 6598 @LENGTH@ 16
------------------------MOV Operator@@* @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 6614 @LENGTH@ 1
------------------------MOV SimpleName@@THRIFT_TEST_NUM2 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 6617 @LENGTH@ 16
------------------DEL ClassInstanceCreation@@Integer[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 6586 @LENGTH@ 48
---------------------DEL New@@new @AT@ 6586 @LENGTH@ 3
---------------------DEL SimpleType@@Integer @AT@ 6590 @LENGTH@ 7
---------------------DEL InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 6598 @LENGTH@ 35
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 6586 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new BeanDefinitionStoreException("No id supplied and another " + "bean is already registered as " + BeanIds.USER_DETAILS_SERVICE) @TO@ ClassInstanceCreation:new BeanDefinitionStoreException("No id supplied and another bean is already registered as " + BeanIds.USER_DETAILS_SERVICE) @AT@ 3799 @LENGTH@ 142
---UPD ClassInstanceCreation@@BeanDefinitionStoreException["No id supplied and another " + "bean is already registered as " + BeanIds.USER_DETAILS_SERVICE] @TO@ BeanDefinitionStoreException["No id supplied and another bean is already registered as " + BeanIds.USER_DETAILS_SERVICE] @AT@ 3805 @LENGTH@ 135
------UPD InfixExpression@@"No id supplied and another " + "bean is already registered as " + BeanIds.USER_DETAILS_SERVICE @TO@ "No id supplied and another bean is already registered as " + BeanIds.USER_DETAILS_SERVICE @AT@ 3844 @LENGTH@ 95
---------UPD StringLiteral@@"No id supplied and another " @TO@ "No id supplied and another bean is already registered as " @AT@ 3844 @LENGTH@ 29
---------DEL StringLiteral@@"bean is already registered as " @AT@ 3876 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:assertEquals(producer.getBindingMode().name(),"json") @TO@ MethodInvocation:assertEquals("json",producer.getBindingMode().name()) @AT@ 2863 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals(producer.getBindingMode().name(),"json") @TO@ assertEquals("json",producer.getBindingMode().name()) @AT@ 2863 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:[producer.getBindingMode().name(), "json"] @TO@ MethodName:assertEquals:["json", producer.getBindingMode().name()] @AT@ 2863 @LENGTH@ 54
---------INS StringLiteral@@"json" @TO@ SimpleName@@MethodName:assertEquals:[producer.getBindingMode().name(), "json"] @AT@ 2876 @LENGTH@ 6
---------DEL StringLiteral@@"json" @AT@ 2910 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ MethodInvocation:assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 2201 @LENGTH@ 64
---UPD MethodInvocation@@assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 2201 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @TO@ MethodName:assertEquals:[1, elements.size(), "Get the wrong elements size"] @AT@ 2201 @LENGTH@ 63
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @AT@ 2214 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2231 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(ids[0],"123") @TO@ MethodInvocation:assertEquals("123",ids[0]) @AT@ 6292 @LENGTH@ 28
---UPD MethodInvocation@@assertEquals(ids[0],"123") @TO@ assertEquals("123",ids[0]) @AT@ 6292 @LENGTH@ 27
------UPD SimpleName@@MethodName:assertEquals:[ids[0], "123"] @TO@ MethodName:assertEquals:["123", ids[0]] @AT@ 6292 @LENGTH@ 27
---------INS StringLiteral@@"123" @TO@ SimpleName@@MethodName:assertEquals:[ids[0], "123"] @AT@ 6305 @LENGTH@ 5
---------DEL StringLiteral@@"123" @AT@ 6313 @LENGTH@ 5


DEL MethodDeclaration@@public, String, MethodName:getAmazonHost,  @AT@ 1250 @LENGTH@ 171
---DEL Modifier@@public @AT@ 1250 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1257 @LENGTH@ 6
---DEL SimpleName@@MethodName:getAmazonHost @AT@ 1264 @LENGTH@ 13
---DEL VariableDeclarationStatement@@final int s3Port=4572; @AT@ 1290 @LENGTH@ 24
------DEL Modifier@@final @AT@ 1290 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 1296 @LENGTH@ 3
------DEL VariableDeclarationFragment@@s3Port=4572 @AT@ 1300 @LENGTH@ 13
---------DEL SimpleName@@s3Port @AT@ 1300 @LENGTH@ 6
---------DEL NumberLiteral@@4572 @AT@ 1309 @LENGTH@ 4
---DEL ReturnStatement@@InfixExpression:getContainer().getContainerIpAddress() + ":" + getContainer().getMappedPort(s3Port) @AT@ 1324 @LENGTH@ 91
------DEL InfixExpression@@getContainer().getContainerIpAddress() + ":" + getContainer().getMappedPort(s3Port) @AT@ 1331 @LENGTH@ 83
---------DEL MethodInvocation@@getContainer().getContainerIpAddress() @AT@ 1331 @LENGTH@ 38
------------DEL MethodInvocation@@MethodName:getContainer:[] @AT@ 1331 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getContainerIpAddress:[] @AT@ 1346 @LENGTH@ 23
---------DEL Operator@@+ @AT@ 1369 @LENGTH@ 1
---------DEL StringLiteral@@":" @AT@ 1372 @LENGTH@ 3
---------DEL MethodInvocation@@getContainer().getMappedPort(s3Port) @AT@ 1378 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getContainer:[] @AT@ 1378 @LENGTH@ 14
------------DEL SimpleName@@MethodName:getMappedPort:[s3Port] @AT@ 1393 @LENGTH@ 21
---------------DEL SimpleName@@s3Port @AT@ 1407 @LENGTH@ 6


UPD MethodDeclaration@@public, static, SimpleQueryHints, MethodName:getFetchGraphHint, EntityManager em, @Nullable JpaEntityGraph entityGraph, Class<?> entityType,  @TO@ public, static, QueryHints, MethodName:getFetchGraphHint, EntityManager em, @Nullable JpaEntityGraph entityGraph, Class<?> entityType,  @AT@ 2106 @LENGTH@ 428
---UPD SimpleType@@SimpleQueryHints @TO@ QueryHints @AT@ 2120 @LENGTH@ 16
---UPD VariableDeclarationStatement@@SimpleQueryHints result=new SimpleQueryHints(); @TO@ MutableQueryHints result=new MutableQueryHints(); @AT@ 2240 @LENGTH@ 49
------UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2240 @LENGTH@ 16
------UPD VariableDeclarationFragment@@result=new SimpleQueryHints() @TO@ result=new MutableQueryHints() @AT@ 2257 @LENGTH@ 31
---------UPD ClassInstanceCreation@@SimpleQueryHints[] @TO@ MutableQueryHints[] @AT@ 2266 @LENGTH@ 22
------------UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2270 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:errorHandler(transactionErrorHandler()) @TO@ MethodInvocation:errorHandler(new TransactionErrorHandlerBuilder()) @AT@ 3106 @LENGTH@ 40
---UPD MethodInvocation@@errorHandler(transactionErrorHandler()) @TO@ errorHandler(new TransactionErrorHandlerBuilder()) @AT@ 3106 @LENGTH@ 39
------UPD SimpleName@@MethodName:errorHandler:[transactionErrorHandler()] @TO@ MethodName:errorHandler:[new TransactionErrorHandlerBuilder()] @AT@ 3106 @LENGTH@ 39
---------DEL MethodInvocation@@MethodName:transactionErrorHandler:[] @AT@ 3119 @LENGTH@ 25
---------INS ClassInstanceCreation@@TransactionErrorHandlerBuilder[] @TO@ SimpleName@@MethodName:errorHandler:[transactionErrorHandler()] @AT@ 3175 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@TransactionErrorHandlerBuilder[] @AT@ 3175 @LENGTH@ 3
------------INS SimpleType@@TransactionErrorHandlerBuilder @TO@ ClassInstanceCreation@@TransactionErrorHandlerBuilder[] @AT@ 3179 @LENGTH@ 30


UPD ForStatement@@for (int i=0; i < list.size(); i++) {  ParameterSource ps=list.get(i);  String name=ps.getName();  String type=ps.getType().getQualifiedNameWithGenerics();  if (type.startsWith("java.lang.")) {    type=type.substring(10);  }  sb.append(type).append(" ").append(name);  if (i < list.size() - 1) {    sb.append(", ");  }  docs.put(name,getJavadocValue(params,name));} @TO@ for (int i=0; i < list.size(); i++) {  ParameterSource ps=list.get(i);  String name=ps.getName();  String type=ps.getType().getQualifiedNameWithGenerics();  if (Character.isUpperCase(type.charAt(0))) {    type=clazz.getPackage() + "." + type;  }  if (type.startsWith("java.lang.")) {    type=type.substring(10);  }  sb.append(type).append(" ").append(name);  if (i < list.size() - 1) {    sb.append(", ");  }  docs.put(name,getJavadocValue(params,name));} @AT@ 2933 @LENGTH@ 669
---INS IfStatement@@if (Character.isUpperCase(type.charAt(0))) {  type=clazz.getPackage() + "." + type;} @TO@ ForStatement@@for (int i=0; i < list.size(); i++) {  ParameterSource ps=list.get(i);  String name=ps.getName();  String type=ps.getType().getQualifiedNameWithGenerics();  if (type.startsWith("java.lang.")) {    type=type.substring(10);  }  sb.append(type).append(" ").append(name);  if (i < list.size() - 1) {    sb.append(", ");  }  docs.put(name,getJavadocValue(params,name));} @AT@ 3174 @LENGTH@ 205
------INS MethodInvocation@@Character.isUpperCase(type.charAt(0)) @TO@ IfStatement@@if (Character.isUpperCase(type.charAt(0))) {  type=clazz.getPackage() + "." + type;} @AT@ 3178 @LENGTH@ 37
---------INS SimpleName@@Name:Character @TO@ MethodInvocation@@Character.isUpperCase(type.charAt(0)) @AT@ 3178 @LENGTH@ 9
---------INS SimpleName@@MethodName:isUpperCase:[type.charAt(0)] @TO@ MethodInvocation@@Character.isUpperCase(type.charAt(0)) @AT@ 3188 @LENGTH@ 27
------------INS MethodInvocation@@type.charAt(0) @TO@ SimpleName@@MethodName:isUpperCase:[type.charAt(0)] @AT@ 3200 @LENGTH@ 14
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.charAt(0) @AT@ 3200 @LENGTH@ 4
---------------INS SimpleName@@MethodName:charAt:[0] @TO@ MethodInvocation@@type.charAt(0) @AT@ 3205 @LENGTH@ 9
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:charAt:[0] @AT@ 3212 @LENGTH@ 1
------INS Block@@ThenBody:{  type=clazz.getPackage() + "." + type;} @TO@ IfStatement@@if (Character.isUpperCase(type.charAt(0))) {  type=clazz.getPackage() + "." + type;} @AT@ 3217 @LENGTH@ 162
---------INS ExpressionStatement@@Assignment:type=clazz.getPackage() + "." + type @TO@ Block@@ThenBody:{  type=clazz.getPackage() + "." + type;} @AT@ 3318 @LENGTH@ 39
------------INS Assignment@@type=clazz.getPackage() + "." + type @TO@ ExpressionStatement@@Assignment:type=clazz.getPackage() + "." + type @AT@ 3318 @LENGTH@ 38
---------------INS SimpleName@@type @TO@ Assignment@@type=clazz.getPackage() + "." + type @AT@ 3318 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@type=clazz.getPackage() + "." + type @AT@ 3322 @LENGTH@ 1
---------------INS InfixExpression@@clazz.getPackage() + "." + type @TO@ Assignment@@type=clazz.getPackage() + "." + type @AT@ 3325 @LENGTH@ 31
------------------INS MethodInvocation@@clazz.getPackage() @TO@ InfixExpression@@clazz.getPackage() + "." + type @AT@ 3325 @LENGTH@ 18
---------------------INS SimpleName@@Name:clazz @TO@ MethodInvocation@@clazz.getPackage() @AT@ 3325 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getPackage:[] @TO@ MethodInvocation@@clazz.getPackage() @AT@ 3331 @LENGTH@ 12
------------------INS Operator@@+ @TO@ InfixExpression@@clazz.getPackage() + "." + type @AT@ 3343 @LENGTH@ 1
------------------INS StringLiteral@@"." @TO@ InfixExpression@@clazz.getPackage() + "." + type @AT@ 3346 @LENGTH@ 3
------------------INS SimpleName@@type @TO@ InfixExpression@@clazz.getPackage() + "." + type @AT@ 3352 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:should_cycle_bytes, IOException,  @TO@ public, void, MethodName:shouldCycleBytes, IOException,  @AT@ 1149 @LENGTH@ 217
---UPD SimpleName@@MethodName:should_cycle_bytes @TO@ MethodName:shouldCycleBytes @AT@ 1161 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertEquals("This is my message text.",exchange.getOut().getBody()) @TO@ MethodInvocation:assertEquals("This is my message text.",exchange.getMessage().getBody()) @AT@ 3596 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals("This is my message text.",exchange.getOut().getBody()) @TO@ assertEquals("This is my message text.",exchange.getMessage().getBody()) @AT@ 3596 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:["This is my message text.", exchange.getOut().getBody()] @TO@ MethodName:assertEquals:["This is my message text.", exchange.getMessage().getBody()] @AT@ 3596 @LENGTH@ 69
---------UPD MethodInvocation@@exchange.getOut().getBody() @TO@ exchange.getMessage().getBody() @AT@ 3637 @LENGTH@ 27
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3637 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:LOG.warn("TransformerFactory doesn't support the feature {} with value {}, due to {}.",javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING,"true",e) @TO@ MethodInvocation:LOG.warn("TransformerFactory doesn't support the feature {} with value {}, due to {}.",javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING,"true",e.getMessage(),e) @AT@ 7720 @LENGTH@ 169
---UPD MethodInvocation@@LOG.warn("TransformerFactory doesn't support the feature {} with value {}, due to {}.",javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING,"true",e) @TO@ LOG.warn("TransformerFactory doesn't support the feature {} with value {}, due to {}.",javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING,"true",e.getMessage(),e) @AT@ 7720 @LENGTH@ 168
------UPD SimpleName@@MethodName:warn:["TransformerFactory doesn't support the feature {} with value {}, due to {}.", javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e] @TO@ MethodName:warn:["TransformerFactory doesn't support the feature {} with value {}, due to {}.", javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e.getMessage(), e] @AT@ 7724 @LENGTH@ 164
---------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:warn:["TransformerFactory doesn't support the feature {} with value {}, due to {}.", javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e] @AT@ 7886 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 7886 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 7888 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @TO@ TypeDeclaration@@[public]RabbitTemplateTests,  @AT@ 25046 @LENGTH@ 459
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25046 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25053 @LENGTH@ 4
---INS SimpleName@@MethodName:testReturnsFallback @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25058 @LENGTH@ 19
---INS VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(); @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25084 @LENGTH@ 47
------INS SimpleType@@RabbitTemplate @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(); @AT@ 25084 @LENGTH@ 14
------INS VariableDeclarationFragment@@template=new RabbitTemplate() @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(); @AT@ 25099 @LENGTH@ 31
---------INS SimpleName@@template @TO@ VariableDeclarationFragment@@template=new RabbitTemplate() @AT@ 25099 @LENGTH@ 8
---------INS ClassInstanceCreation@@RabbitTemplate[] @TO@ VariableDeclarationFragment@@template=new RabbitTemplate() @AT@ 25110 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@RabbitTemplate[] @AT@ 25110 @LENGTH@ 3
------------INS SimpleType@@RabbitTemplate @TO@ ClassInstanceCreation@@RabbitTemplate[] @AT@ 25114 @LENGTH@ 14
---INS VariableDeclarationStatement@@AtomicBoolean called=new AtomicBoolean(); @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25134 @LENGTH@ 43
------INS SimpleType@@AtomicBoolean @TO@ VariableDeclarationStatement@@AtomicBoolean called=new AtomicBoolean(); @AT@ 25134 @LENGTH@ 13
------INS VariableDeclarationFragment@@called=new AtomicBoolean() @TO@ VariableDeclarationStatement@@AtomicBoolean called=new AtomicBoolean(); @AT@ 25148 @LENGTH@ 28
---------INS SimpleName@@called @TO@ VariableDeclarationFragment@@called=new AtomicBoolean() @AT@ 25148 @LENGTH@ 6
---------INS ClassInstanceCreation@@AtomicBoolean[] @TO@ VariableDeclarationFragment@@called=new AtomicBoolean() @AT@ 25157 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@AtomicBoolean[] @AT@ 25157 @LENGTH@ 3
------------INS SimpleType@@AtomicBoolean @TO@ ClassInstanceCreation@@AtomicBoolean[] @AT@ 25161 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:template.setReturnCallback((message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
) @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25180 @LENGTH@ 112
------INS MethodInvocation@@template.setReturnCallback((message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
) @TO@ ExpressionStatement@@MethodInvocation:template.setReturnCallback((message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
) @AT@ 25180 @LENGTH@ 111
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.setReturnCallback((message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
) @AT@ 25180 @LENGTH@ 8
---------INS SimpleName@@MethodName:setReturnCallback:[(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
] @TO@ MethodInvocation@@template.setReturnCallback((message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
) @AT@ 25189 @LENGTH@ 102
------------INS LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @TO@ SimpleName@@MethodName:setReturnCallback:[(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
] @AT@ 25207 @LENGTH@ 83
---------------INS VariableDeclarationFragment@@message @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25208 @LENGTH@ 7
------------------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message @AT@ 25208 @LENGTH@ 7
---------------INS VariableDeclarationFragment@@replyCode @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25217 @LENGTH@ 9
------------------INS SimpleName@@replyCode @TO@ VariableDeclarationFragment@@replyCode @AT@ 25217 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@replyText @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25228 @LENGTH@ 9
------------------INS SimpleName@@replyText @TO@ VariableDeclarationFragment@@replyText @AT@ 25228 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@exchange @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25239 @LENGTH@ 8
------------------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange @AT@ 25239 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@routingKey @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25249 @LENGTH@ 10
------------------INS SimpleName@@routingKey @TO@ VariableDeclarationFragment@@routingKey @AT@ 25249 @LENGTH@ 10
---------------INS ExpressionStatement@@MethodInvocation:called.set(true) @TO@ LambdaExpression@@(message,replyCode,replyText,exchange,routingKey) -> {
  called.set(true);
}
 @AT@ 25269 @LENGTH@ 17
------------------INS MethodInvocation@@called.set(true) @TO@ ExpressionStatement@@MethodInvocation:called.set(true) @AT@ 25269 @LENGTH@ 16
---------------------INS SimpleName@@Name:called @TO@ MethodInvocation@@called.set(true) @AT@ 25269 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@called.set(true) @AT@ 25276 @LENGTH@ 9
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 25280 @LENGTH@ 4
---INS VariableDeclarationStatement@@ReturnsCallback cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class); @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25295 @LENGTH@ 100
------INS SimpleType@@ReturnsCallback @TO@ VariableDeclarationStatement@@ReturnsCallback cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class); @AT@ 25295 @LENGTH@ 15
------INS VariableDeclarationFragment@@cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @TO@ VariableDeclarationStatement@@ReturnsCallback cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class); @AT@ 25311 @LENGTH@ 83
---------INS SimpleName@@cb @TO@ VariableDeclarationFragment@@cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @AT@ 25311 @LENGTH@ 2
---------INS MethodInvocation@@TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @TO@ VariableDeclarationFragment@@cb=TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @AT@ 25316 @LENGTH@ 78
------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @AT@ 25316 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPropertyValue:[template, "returnsCallback", ReturnsCallback.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(template,"returnsCallback",ReturnsCallback.class) @AT@ 25326 @LENGTH@ 68
---------------INS SimpleName@@template @TO@ SimpleName@@MethodName:getPropertyValue:[template, "returnsCallback", ReturnsCallback.class] @AT@ 25343 @LENGTH@ 8
---------------INS StringLiteral@@"returnsCallback" @TO@ SimpleName@@MethodName:getPropertyValue:[template, "returnsCallback", ReturnsCallback.class] @AT@ 25353 @LENGTH@ 17
---------------INS TypeLiteral@@ReturnsCallback.class @TO@ SimpleName@@MethodName:getPropertyValue:[template, "returnsCallback", ReturnsCallback.class] @AT@ 25372 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:cb.returnedMessage(new ReturnedMessage(null,0,null,null,null)) @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25398 @LENGTH@ 67
------INS MethodInvocation@@cb.returnedMessage(new ReturnedMessage(null,0,null,null,null)) @TO@ ExpressionStatement@@MethodInvocation:cb.returnedMessage(new ReturnedMessage(null,0,null,null,null)) @AT@ 25398 @LENGTH@ 66
---------INS SimpleName@@Name:cb @TO@ MethodInvocation@@cb.returnedMessage(new ReturnedMessage(null,0,null,null,null)) @AT@ 25398 @LENGTH@ 2
---------INS SimpleName@@MethodName:returnedMessage:[new ReturnedMessage(null,0,null,null,null)] @TO@ MethodInvocation@@cb.returnedMessage(new ReturnedMessage(null,0,null,null,null)) @AT@ 25401 @LENGTH@ 63
------------INS ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @TO@ SimpleName@@MethodName:returnedMessage:[new ReturnedMessage(null,0,null,null,null)] @AT@ 25417 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25417 @LENGTH@ 3
---------------INS SimpleType@@ReturnedMessage @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25421 @LENGTH@ 15
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25437 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25443 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25446 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25452 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@ReturnedMessage[null, 0, null, null, null] @AT@ 25458 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(called.get()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:testReturnsFallback,  @AT@ 25468 @LENGTH@ 34
------INS MethodInvocation@@assertThat(called.get()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(called.get()).isTrue() @AT@ 25468 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:assertThat:[called.get()] @TO@ MethodInvocation@@assertThat(called.get()).isTrue() @AT@ 25468 @LENGTH@ 24
------------INS MethodInvocation@@called.get() @TO@ MethodInvocation@@MethodName:assertThat:[called.get()] @AT@ 25479 @LENGTH@ 12
---------------INS SimpleName@@Name:called @TO@ MethodInvocation@@called.get() @AT@ 25479 @LENGTH@ 6
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@called.get() @AT@ 25486 @LENGTH@ 5
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(called.get()).isTrue() @AT@ 25493 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2146 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2146 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2162 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(e.assertExchangeReceived(0).getIn().getBody(String.class),"James,Guillaume,Hiram,Rob,Roman") @TO@ MethodInvocation:assertEquals("James,Guillaume,Hiram,Rob,Roman",e.assertExchangeReceived(0).getIn().getBody(String.class)) @AT@ 2136 @LENGTH@ 107
---UPD MethodInvocation@@assertEquals(e.assertExchangeReceived(0).getIn().getBody(String.class),"James,Guillaume,Hiram,Rob,Roman") @TO@ assertEquals("James,Guillaume,Hiram,Rob,Roman",e.assertExchangeReceived(0).getIn().getBody(String.class)) @AT@ 2136 @LENGTH@ 106
------UPD SimpleName@@MethodName:assertEquals:[e.assertExchangeReceived(0).getIn().getBody(String.class), "James,Guillaume,Hiram,Rob,Roman"] @TO@ MethodName:assertEquals:["James,Guillaume,Hiram,Rob,Roman", e.assertExchangeReceived(0).getIn().getBody(String.class)] @AT@ 2136 @LENGTH@ 106
---------MOV MethodInvocation@@e.assertExchangeReceived(0).getIn().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:[e.assertExchangeReceived(0).getIn().getBody(String.class), "James,Guillaume,Hiram,Rob,Roman"] @AT@ 2149 @LENGTH@ 57


UPD VariableDeclarationStatement@@Long timeout=new Long(1); @TO@ Long timeout=Long.valueOf(1); @AT@ 2306 @LENGTH@ 27
---UPD VariableDeclarationFragment@@timeout=new Long(1) @TO@ timeout=Long.valueOf(1) @AT@ 2311 @LENGTH@ 21
------INS MethodInvocation@@Long.valueOf(1) @TO@ VariableDeclarationFragment@@timeout=new Long(1) @AT@ 2321 @LENGTH@ 15
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 2321 @LENGTH@ 4
---------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 2326 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 2334 @LENGTH@ 1
------DEL ClassInstanceCreation@@Long[1] @AT@ 2321 @LENGTH@ 11
---------DEL New@@new @AT@ 2321 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 2325 @LENGTH@ 4
---------DEL NumberLiteral@@1 @AT@ 2330 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 3094 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 3094 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 3094 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 3105 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3112 @LENGTH@ 21


UPD ExpressionStatement@@Assignment:uri="zendesk:getTopicsByUser?userId=123&unknown=true" @TO@ Assignment:uri="zendesk:GET_TOPICS_BY_USER?userId=123&unknown=true" @AT@ 47458 @LENGTH@ 56
---UPD Assignment@@uri="zendesk:getTopicsByUser?userId=123&unknown=true" @TO@ uri="zendesk:GET_TOPICS_BY_USER?userId=123&unknown=true" @AT@ 47458 @LENGTH@ 55
------UPD StringLiteral@@"zendesk:getTopicsByUser?userId=123&unknown=true" @TO@ "zendesk:GET_TOPICS_BY_USER?userId=123&unknown=true" @AT@ 47464 @LENGTH@ 49


UPD IfStatement@@if (token.getKeyHash() == this.key.hashCode()) {  return authentication;} else {  throw new BadCredentialsException(this.messages.getMessage("RunAsImplAuthenticationProvider.incorrectKey","The presented RunAsUserToken does not contain the expected key"));} @TO@ if (token.getKeyHash() != this.key.hashCode()) {  throw new BadCredentialsException(this.messages.getMessage("RunAsImplAuthenticationProvider.incorrectKey","The presented RunAsUserToken does not contain the expected key"));} @AT@ 2382 @LENGTH@ 274
---UPD InfixExpression@@token.getKeyHash() == this.key.hashCode() @TO@ token.getKeyHash() != this.key.hashCode() @AT@ 2386 @LENGTH@ 41
------UPD Operator@@== @TO@ != @AT@ 2404 @LENGTH@ 2
---DEL Block@@ThenBody:{  return authentication;} @AT@ 2429 @LENGTH@ 31
------DEL ReturnStatement@@SimpleName:authentication @AT@ 2434 @LENGTH@ 22
---------DEL SimpleName@@authentication @AT@ 2441 @LENGTH@ 14
---UPD Block@@ElseBody:{  throw new BadCredentialsException(this.messages.getMessage("RunAsImplAuthenticationProvider.incorrectKey","The presented RunAsUserToken does not contain the expected key"));} @TO@ ThenBody:{  throw new BadCredentialsException(this.messages.getMessage("RunAsImplAuthenticationProvider.incorrectKey","The presented RunAsUserToken does not contain the expected key"));} @AT@ 2468 @LENGTH@ 188


UPD TryStatement@@try {  LZMAUtils.setCacheLZMAAvailability(false);  assertEquals(LZMAUtils.CachedAvailability.DONT_CACHE,LZMAUtils.getCachedLZMAAvailability());  assertTrue(LZMAUtils.isLZMACompressionAvailable());}  finally {  LZMAUtils.setCacheLZMAAvailability(true);} @TO@ try {  LZMAUtils.setCacheLZMAAvailablity(false);  assertEquals(LZMAUtils.CachedAvailability.DONT_CACHE,LZMAUtils.getCachedLZMAAvailability());  assertTrue(LZMAUtils.isLZMACompressionAvailable());}  finally {  LZMAUtils.setCacheLZMAAvailablity(true);} @AT@ 3326 @LENGTH@ 314
---UPD ExpressionStatement@@MethodInvocation:LZMAUtils.setCacheLZMAAvailability(false) @TO@ MethodInvocation:LZMAUtils.setCacheLZMAAvailablity(false) @AT@ 3344 @LENGTH@ 42
------UPD MethodInvocation@@LZMAUtils.setCacheLZMAAvailability(false) @TO@ LZMAUtils.setCacheLZMAAvailablity(false) @AT@ 3344 @LENGTH@ 41
---------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[false] @TO@ MethodName:setCacheLZMAAvailablity:[false] @AT@ 3354 @LENGTH@ 31
---UPD Block@@FinallyBody:{  LZMAUtils.setCacheLZMAAvailability(true);} @TO@ FinallyBody:{  LZMAUtils.setCacheLZMAAvailablity(true);} @AT@ 3575 @LENGTH@ 65
------UPD ExpressionStatement@@MethodInvocation:LZMAUtils.setCacheLZMAAvailability(true) @TO@ MethodInvocation:LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 3589 @LENGTH@ 41
---------UPD MethodInvocation@@LZMAUtils.setCacheLZMAAvailability(true) @TO@ LZMAUtils.setCacheLZMAAvailablity(true) @AT@ 3589 @LENGTH@ 40
------------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[true] @TO@ MethodName:setCacheLZMAAvailablity:[true] @AT@ 3599 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1711 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1711 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1727 @LENGTH@ 21


UPD ReturnStatement@@ParenthesizedExpression:(new IpAddressMatcher(ipAddress).matches(this.request)) @TO@ MethodInvocation:matcher.matches(this.request) @AT@ 1759 @LENGTH@ 63
---DEL ParenthesizedExpression@@(new IpAddressMatcher(ipAddress).matches(this.request)) @AT@ 1766 @LENGTH@ 55
---MOV MethodInvocation@@new IpAddressMatcher(ipAddress).matches(this.request) @TO@ ReturnStatement@@ParenthesizedExpression:(new IpAddressMatcher(ipAddress).matches(this.request)) @AT@ 1767 @LENGTH@ 53
------INS SimpleName@@Name:matcher @TO@ MethodInvocation@@new IpAddressMatcher(ipAddress).matches(this.request) @AT@ 1754 @LENGTH@ 7
------DEL ClassInstanceCreation@@IpAddressMatcher[ipAddress] @AT@ 1767 @LENGTH@ 31
---------DEL New@@new @AT@ 1767 @LENGTH@ 3
---------DEL SimpleType@@IpAddressMatcher @AT@ 1771 @LENGTH@ 16
---------DEL SimpleName@@ipAddress @AT@ 1788 @LENGTH@ 9


UPD ReturnStatement@@CastExpression:(T)mapper.convertValue(nodeValue,valueTypeReference) @TO@ MethodInvocation:mapper.convertValue(nodeValue,valueTypeReference) @AT@ 1782 @LENGTH@ 62
---DEL CastExpression@@(T)mapper.convertValue(nodeValue,valueTypeReference) @AT@ 1789 @LENGTH@ 54
------DEL SimpleType@@T @AT@ 1790 @LENGTH@ 1
---MOV MethodInvocation@@mapper.convertValue(nodeValue,valueTypeReference) @TO@ ReturnStatement@@CastExpression:(T)mapper.convertValue(nodeValue,valueTypeReference) @AT@ 1793 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:from("direct:testInOut").inOut("mock:result") @TO@ MethodInvocation:from("direct:testInOut").to(ExchangePattern.InOut,"mock:result") @AT@ 5404 @LENGTH@ 46
---UPD MethodInvocation@@from("direct:testInOut").inOut("mock:result") @TO@ from("direct:testInOut").to(ExchangePattern.InOut,"mock:result") @AT@ 5404 @LENGTH@ 45
------UPD SimpleName@@MethodName:inOut:["mock:result"] @TO@ MethodName:to:[ExchangePattern.InOut, "mock:result"] @AT@ 5429 @LENGTH@ 20
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:["mock:result"] @AT@ 5432 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 5432 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 5448 @LENGTH@ 5


DEL IfStatement@@if (this.unmappedMatchers != null) {  throw new IllegalStateException("An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')");} @AT@ 4014 @LENGTH@ 231
---DEL InfixExpression@@this.unmappedMatchers != null @AT@ 4018 @LENGTH@ 29
---DEL Block@@ThenBody:{  throw new IllegalStateException("An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')");} @AT@ 4049 @LENGTH@ 196
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')") @AT@ 4054 @LENGTH@ 187
---------DEL ClassInstanceCreation@@IllegalStateException["An incomplete mapping was found for " + this.unmappedMatchers + ". Try completing it with something like requestUrls().<something>.hasRole('USER')"] @AT@ 4060 @LENGTH@ 180
------------DEL New@@new @AT@ 4060 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 4064 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:run, final Runnable runnable, Exception,  @TO@ public, void, MethodName:run, final Runnable runnable, Throwable,  @AT@ 1004 @LENGTH@ 260
---UPD SimpleType@@Exception @TO@ Throwable @AT@ 1052 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:runnable.run() @TO@ MethodDeclaration@@public, void, MethodName:run, final Runnable runnable, Exception,  @AT@ 1267 @LENGTH@ 15
------INS MethodInvocation@@runnable.run() @TO@ ExpressionStatement@@MethodInvocation:runnable.run() @AT@ 1267 @LENGTH@ 14
---------INS SimpleName@@Name:runnable @TO@ MethodInvocation@@runnable.run() @AT@ 1267 @LENGTH@ 8
---------INS SimpleName@@MethodName:run:[] @TO@ MethodInvocation@@runnable.run() @AT@ 1276 @LENGTH@ 5


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") GCMBlockCipher blockCipher=new GCMBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()); @TO@ GCMBlockCipher blockCipher=new GCMBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()); @AT@ 1789 @LENGTH@ 136


MOV EnumDeclaration@@[public]Saml2X509CredentialType,  @TO@ TypeDeclaration@@[public, final]Saml2X509Credential,  @AT@ 1279 @LENGTH@ 91


UPD TypeDeclaration@@[public]NullAxFetchListFactory, [AxFetchListFactory] @TO@ [@Deprecated, public]NullAxFetchListFactory, [AxFetchListFactory] @AT@ 1074 @LENGTH@ 179
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]NullAxFetchListFactory, [AxFetchListFactory] @AT@ 1074 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("param:para1para2",exchange.getOut().getBody(String.class),"Get a wrong response.") @TO@ MethodInvocation:assertEquals("param:para1para2",exchange.getMessage().getBody(String.class),"Get a wrong response.") @AT@ 4084 @LENGTH@ 99
---UPD MethodInvocation@@assertEquals("param:para1para2",exchange.getOut().getBody(String.class),"Get a wrong response.") @TO@ assertEquals("param:para1para2",exchange.getMessage().getBody(String.class),"Get a wrong response.") @AT@ 4084 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:["param:para1para2", exchange.getOut().getBody(String.class), "Get a wrong response."] @TO@ MethodName:assertEquals:["param:para1para2", exchange.getMessage().getBody(String.class), "Get a wrong response."] @AT@ 4084 @LENGTH@ 98
---------UPD MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ exchange.getMessage().getBody(String.class) @AT@ 4117 @LENGTH@ 39
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4117 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @TO@ MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @AT@ 2918 @LENGTH@ 369
---UPD MethodInvocation@@from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @TO@ from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log.1?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response").to("log:" + TEST_DESTINATION_NAME + ".out.log.1?showBody=true") @AT@ 2918 @LENGTH@ 368
------UPD MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @TO@ MethodName:to:[ExchangePattern.InOut, "sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @AT@ 2918 @LENGTH@ 279
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response"] @AT@ 3096 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3096 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3112 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Bye Bye World") @TO@ MethodInvocation:exchange.getMessage().setBody("Bye Bye World") @AT@ 9748 @LENGTH@ 43
---UPD MethodInvocation@@exchange.getOut().setBody("Bye Bye World") @TO@ exchange.getMessage().setBody("Bye Bye World") @AT@ 9748 @LENGTH@ 42
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 9748 @LENGTH@ 17


DEL MethodDeclaration@@private, void, MethodName:checkAndSetRegistryClient, Ses2Configuration configuration, Ses2Endpoint endpoint,  @AT@ 2899 @LENGTH@ 814
---DEL Modifier@@private @AT@ 2899 @LENGTH@ 7
---DEL PrimitiveType@@void @AT@ 2907 @LENGTH@ 4
---DEL SimpleName@@MethodName:checkAndSetRegistryClient @AT@ 2912 @LENGTH@ 25
---DEL SingleVariableDeclaration@@Ses2Configuration configuration @AT@ 2938 @LENGTH@ 31
------DEL SimpleType@@Ses2Configuration @AT@ 2938 @LENGTH@ 17
------DEL SimpleName@@configuration @AT@ 2956 @LENGTH@ 13
---DEL SingleVariableDeclaration@@Ses2Endpoint endpoint @AT@ 2971 @LENGTH@ 21
------DEL SimpleType@@Ses2Endpoint @AT@ 2971 @LENGTH@ 12
------DEL SimpleName@@endpoint @AT@ 2984 @LENGTH@ 8
---DEL IfStatement@@if (ObjectHelper.isEmpty(endpoint.getConfiguration().getAmazonSESClient())) {  LOG.debug("Looking for an SesClient instance in the registry");  Set<SesClient> clients=getCamelContext().getRegistry().findByType(SesClient.class);  if (clients.size() == 1) {    LOG.debug("Found exactly one SesClient instance in the registry");    configuration.setAmazonSESClient(clients.stream().findFirst().get());  } else {    LOG.debug("No SesClient instance in the registry");  }} else {  LOG.debug("SesClient instance is already set at endpoint level: skipping the check in the registry");} @AT@ 3004 @LENGTH@ 703
------DEL MethodInvocation@@ObjectHelper.isEmpty(endpoint.getConfiguration().getAmazonSESClient()) @AT@ 3008 @LENGTH@ 70
---------DEL SimpleName@@Name:ObjectHelper @AT@ 3008 @LENGTH@ 12
---------DEL SimpleName@@MethodName:isEmpty:[endpoint.getConfiguration().getAmazonSESClient()] @AT@ 3021 @LENGTH@ 57
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonSESClient() @AT@ 3029 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 3029 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 3029 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonSESClient:[] @AT@ 3057 @LENGTH@ 20
------DEL Block@@ThenBody:{  LOG.debug("Looking for an SesClient instance in the registry");  Set<SesClient> clients=getCamelContext().getRegistry().findByType(SesClient.class);  if (clients.size() == 1) {    LOG.debug("Found exactly one SesClient instance in the registry");    configuration.setAmazonSESClient(clients.stream().findFirst().get());  } else {    LOG.debug("No SesClient instance in the registry");  }} @AT@ 3080 @LENGTH@ 496
---------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Looking for an SesClient instance in the registry") @AT@ 3094 @LENGTH@ 63
------------DEL MethodInvocation@@LOG.debug("Looking for an SesClient instance in the registry") @AT@ 3094 @LENGTH@ 62
---------------DEL SimpleName@@Name:LOG @AT@ 3094 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:debug:["Looking for an SesClient instance in the registry"] @AT@ 3098 @LENGTH@ 58
------------------DEL StringLiteral@@"Looking for an SesClient instance in the registry" @AT@ 3104 @LENGTH@ 51
---------DEL VariableDeclarationStatement@@Set<SesClient> clients=getCamelContext().getRegistry().findByType(SesClient.class); @AT@ 3170 @LENGTH@ 85
------------DEL ParameterizedType@@Set<SesClient> @AT@ 3170 @LENGTH@ 14
---------------DEL SimpleType@@Set @AT@ 3170 @LENGTH@ 3
---------------DEL SimpleType@@SesClient @AT@ 3174 @LENGTH@ 9
------------DEL VariableDeclarationFragment@@clients=getCamelContext().getRegistry().findByType(SesClient.class) @AT@ 3185 @LENGTH@ 69
---------------DEL SimpleName@@clients @AT@ 3185 @LENGTH@ 7
---------------DEL MethodInvocation@@getCamelContext().getRegistry().findByType(SesClient.class) @AT@ 3195 @LENGTH@ 59
------------------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 3195 @LENGTH@ 31
------------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 3195 @LENGTH@ 17
------------------DEL SimpleName@@MethodName:findByType:[SesClient.class] @AT@ 3227 @LENGTH@ 27
---------------------DEL TypeLiteral@@SesClient.class @AT@ 3238 @LENGTH@ 15
---------DEL IfStatement@@if (clients.size() == 1) {  LOG.debug("Found exactly one SesClient instance in the registry");  configuration.setAmazonSESClient(clients.stream().findFirst().get());} else {  LOG.debug("No SesClient instance in the registry");} @AT@ 3268 @LENGTH@ 298
------------DEL InfixExpression@@clients.size() == 1 @AT@ 3272 @LENGTH@ 19
---------------DEL MethodInvocation@@clients.size() @AT@ 3272 @LENGTH@ 14
------------------DEL SimpleName@@Name:clients @AT@ 3272 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:size:[] @AT@ 3280 @LENGTH@ 6
---------------DEL Operator@@== @AT@ 3286 @LENGTH@ 2
---------------DEL NumberLiteral@@1 @AT@ 3290 @LENGTH@ 1
------------DEL Block@@ThenBody:{  LOG.debug("Found exactly one SesClient instance in the registry");  configuration.setAmazonSESClient(clients.stream().findFirst().get());} @AT@ 3293 @LENGTH@ 184
---------------DEL ExpressionStatement@@MethodInvocation:LOG.debug("Found exactly one SesClient instance in the registry") @AT@ 3311 @LENGTH@ 66
------------------DEL MethodInvocation@@LOG.debug("Found exactly one SesClient instance in the registry") @AT@ 3311 @LENGTH@ 65
---------------------DEL SimpleName@@Name:LOG @AT@ 3311 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:debug:["Found exactly one SesClient instance in the registry"] @AT@ 3315 @LENGTH@ 61
------------------------DEL StringLiteral@@"Found exactly one SesClient instance in the registry" @AT@ 3321 @LENGTH@ 54
---------------DEL ExpressionStatement@@MethodInvocation:configuration.setAmazonSESClient(clients.stream().findFirst().get()) @AT@ 3394 @LENGTH@ 69
------------------DEL MethodInvocation@@configuration.setAmazonSESClient(clients.stream().findFirst().get()) @AT@ 3394 @LENGTH@ 68
---------------------DEL SimpleName@@Name:configuration @AT@ 3394 @LENGTH@ 13
---------------------DEL SimpleName@@MethodName:setAmazonSESClient:[clients.stream().findFirst().get()] @AT@ 3408 @LENGTH@ 54
------------------------DEL MethodInvocation@@clients.stream().findFirst().get() @AT@ 3427 @LENGTH@ 34
---------------------------DEL MethodInvocation@@MethodName:findFirst:[] @AT@ 3427 @LENGTH@ 28
---------------------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 3427 @LENGTH@ 16
---------------------------DEL SimpleName@@Name:clients @AT@ 3427 @LENGTH@ 7
---------------------------DEL SimpleName@@MethodName:get:[] @AT@ 3456 @LENGTH@ 5
------------DEL Block@@ElseBody:{  LOG.debug("No SesClient instance in the registry");} @AT@ 3483 @LENGTH@ 83
---------------DEL ExpressionStatement@@MethodInvocation:LOG.debug("No SesClient instance in the registry") @AT@ 3501 @LENGTH@ 51
------------------DEL MethodInvocation@@LOG.debug("No SesClient instance in the registry") @AT@ 3501 @LENGTH@ 50
---------------------DEL SimpleName@@Name:LOG @AT@ 3501 @LENGTH@ 3
---------------------DEL SimpleName@@MethodName:debug:["No SesClient instance in the registry"] @AT@ 3505 @LENGTH@ 46
------------------------DEL StringLiteral@@"No SesClient instance in the registry" @AT@ 3511 @LENGTH@ 39
------DEL Block@@ElseBody:{  LOG.debug("SesClient instance is already set at endpoint level: skipping the check in the registry");} @AT@ 3582 @LENGTH@ 125
---------DEL ExpressionStatement@@MethodInvocation:LOG.debug("SesClient instance is already set at endpoint level: skipping the check in the registry") @AT@ 3596 @LENGTH@ 101
------------DEL MethodInvocation@@LOG.debug("SesClient instance is already set at endpoint level: skipping the check in the registry") @AT@ 3596 @LENGTH@ 100
---------------DEL SimpleName@@Name:LOG @AT@ 3596 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:debug:["SesClient instance is already set at endpoint level: skipping the check in the registry"] @AT@ 3600 @LENGTH@ 96
------------------DEL StringLiteral@@"SesClient instance is already set at endpoint level: skipping the check in the registry" @AT@ 3606 @LENGTH@ 89


DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Rejecting request due to: " + requestRejectedException.getMessage(),requestRejectedException);} @AT@ 1832 @LENGTH@ 152
---DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 1836 @LENGTH@ 23
------DEL SimpleName@@Name:logger @AT@ 1836 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1843 @LENGTH@ 16
---DEL Block@@ThenBody:{  logger.debug("Rejecting request due to: " + requestRejectedException.getMessage(),requestRejectedException);} @AT@ 1861 @LENGTH@ 123
------DEL ExpressionStatement@@MethodInvocation:logger.debug("Rejecting request due to: " + requestRejectedException.getMessage(),requestRejectedException) @AT@ 1866 @LENGTH@ 114


UPD TryStatement@@try {  SecretKeyFactory.getInstance(algorithmName);} catch (NoSuchAlgorithmException ex) {  throw new IllegalArgumentException("Invalid algorithm '" + algorithmName + "'.",ex);} @TO@ try {  SecretKeyFactory.getInstance(algorithmName);  this.algorithm=algorithmName;} catch (NoSuchAlgorithmException ex) {  throw new IllegalArgumentException("Invalid algorithm '" + algorithmName + "'.",ex);} @AT@ 4107 @LENGTH@ 190
---MOV ExpressionStatement@@Assignment:this.algorithm=algorithmName @TO@ TryStatement@@try {  SecretKeyFactory.getInstance(algorithmName);} catch (NoSuchAlgorithmException ex) {  throw new IllegalArgumentException("Invalid algorithm '" + algorithmName + "'.",ex);} @AT@ 4300 @LENGTH@ 31


UPD MethodDeclaration@@public, ConnectionFactory, MethodName:connectionFactory,  @TO@ public, ConnectionFactory, MethodName:connectionFactory, IOException,  @AT@ 3044 @LENGTH@ 400
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, ConnectionFactory, MethodName:connectionFactory,  @AT@ 3263 @LENGTH@ 11
---INS VariableDeclarationStatement@@AMQP.Queue.DeclareOk declareOk=mock(AMQP.Queue.DeclareOk.class); @TO@ MethodDeclaration@@public, ConnectionFactory, MethodName:connectionFactory,  @AT@ 3435 @LENGTH@ 66
------INS SimpleType@@AMQP.Queue.DeclareOk @TO@ VariableDeclarationStatement@@AMQP.Queue.DeclareOk declareOk=mock(AMQP.Queue.DeclareOk.class); @AT@ 3435 @LENGTH@ 20
------INS VariableDeclarationFragment@@declareOk=mock(AMQP.Queue.DeclareOk.class) @TO@ VariableDeclarationStatement@@AMQP.Queue.DeclareOk declareOk=mock(AMQP.Queue.DeclareOk.class); @AT@ 3456 @LENGTH@ 44
---------INS SimpleName@@declareOk @TO@ VariableDeclarationFragment@@declareOk=mock(AMQP.Queue.DeclareOk.class) @AT@ 3456 @LENGTH@ 9
---------INS MethodInvocation@@mock(AMQP.Queue.DeclareOk.class) @TO@ VariableDeclarationFragment@@declareOk=mock(AMQP.Queue.DeclareOk.class) @AT@ 3468 @LENGTH@ 32
------------INS SimpleName@@MethodName:mock:[AMQP.Queue.DeclareOk.class] @TO@ MethodInvocation@@mock(AMQP.Queue.DeclareOk.class) @AT@ 3468 @LENGTH@ 32
---------------INS TypeLiteral@@AMQP.Queue.DeclareOk.class @TO@ SimpleName@@MethodName:mock:[AMQP.Queue.DeclareOk.class] @AT@ 3473 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:given(channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())).willReturn(declareOk) @TO@ MethodDeclaration@@public, ConnectionFactory, MethodName:connectionFactory,  @AT@ 3681 @LENGTH@ 121
------INS MethodInvocation@@given(channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())).willReturn(declareOk) @TO@ ExpressionStatement@@MethodInvocation:given(channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())).willReturn(declareOk) @AT@ 3681 @LENGTH@ 120
---------INS MethodInvocation@@MethodName:given:[channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())] @TO@ MethodInvocation@@given(channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())).willReturn(declareOk) @AT@ 3681 @LENGTH@ 92
------------INS MethodInvocation@@channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap()) @TO@ MethodInvocation@@MethodName:given:[channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())] @AT@ 3687 @LENGTH@ 85
---------------INS SimpleName@@Name:channel @TO@ MethodInvocation@@channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap()) @AT@ 3687 @LENGTH@ 7
---------------INS SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @TO@ MethodInvocation@@channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap()) @AT@ 3695 @LENGTH@ 77
------------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 3708 @LENGTH@ 11
------------------INS MethodInvocation@@MethodName:anyBoolean:[] @TO@ SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 3721 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:anyBoolean:[] @TO@ SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 3735 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:anyBoolean:[] @TO@ SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 3749 @LENGTH@ 12
------------------INS MethodInvocation@@MethodName:anyMap:[] @TO@ SimpleName@@MethodName:queueDeclare:[anyString(), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 3763 @LENGTH@ 8
---------INS SimpleName@@MethodName:willReturn:[declareOk] @TO@ MethodInvocation@@given(channel.queueDeclare(anyString(),anyBoolean(),anyBoolean(),anyBoolean(),anyMap())).willReturn(declareOk) @AT@ 3780 @LENGTH@ 21
------------INS SimpleName@@declareOk @TO@ SimpleName@@MethodName:willReturn:[declareOk] @AT@ 3791 @LENGTH@ 9


UPD FieldDeclaration@@private, List<Object>, [list=new ArrayList<Object>()] @TO@ private, List<Object>, [list=new ArrayList<>()] @AT@ 1628 @LENGTH@ 52
---UPD VariableDeclarationFragment@@list=new ArrayList<Object>() @TO@ list=new ArrayList<>() @AT@ 1649 @LENGTH@ 30
------UPD ClassInstanceCreation@@ArrayList<Object>[] @TO@ ArrayList<>[] @AT@ 1656 @LENGTH@ 23
---------UPD ParameterizedType@@ArrayList<Object> @TO@ ArrayList<> @AT@ 1660 @LENGTH@ 17
------------DEL SimpleType@@Object @AT@ 1670 @LENGTH@ 6


UPD Block@@ThenBody:{  Neo4jPersistentEntity<?> previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType());  Statement relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity);  relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then());} @TO@ ThenBody:{  Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription);  relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then());} @AT@ 21402 @LENGTH@ 655
---DEL VariableDeclarationStatement@@Neo4jPersistentEntity<?> previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()); @AT@ 21409 @LENGTH@ 157
------DEL ParameterizedType@@Neo4jPersistentEntity<?> @AT@ 21409 @LENGTH@ 24
---------DEL SimpleType@@Neo4jPersistentEntity @AT@ 21409 @LENGTH@ 21
---------DEL WildcardType@@? @AT@ 21431 @LENGTH@ 1
------DEL VariableDeclarationFragment@@previouslyRelatedPersistentEntity=neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()) @AT@ 21434 @LENGTH@ 131
---------DEL SimpleName@@previouslyRelatedPersistentEntity @AT@ 21434 @LENGTH@ 33
---------DEL MethodInvocation@@neo4jMappingContext.getPersistentEntity(relationshipContext.getAssociationTargetType()) @AT@ 21470 @LENGTH@ 95
------------DEL SimpleName@@Name:neo4jMappingContext @AT@ 21470 @LENGTH@ 19
------------DEL SimpleName@@MethodName:getPersistentEntity:[relationshipContext.getAssociationTargetType()] @AT@ 21498 @LENGTH@ 67
---------------DEL MethodInvocation@@relationshipContext.getAssociationTargetType() @AT@ 21518 @LENGTH@ 46
------------------DEL SimpleName@@Name:relationshipContext @AT@ 21518 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getAssociationTargetType:[] @AT@ 21538 @LENGTH@ 26
---UPD VariableDeclarationStatement@@Statement relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity); @TO@ Statement relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription); @AT@ 21573 @LENGTH@ 172
------UPD VariableDeclarationFragment@@relationshipRemoveQuery=cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity) @TO@ relationshipRemoveQuery=cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription) @AT@ 21583 @LENGTH@ 161
---------UPD MethodInvocation@@cypherGenerator.createRelationshipRemoveQuery(neo4jPersistentEntity,relationshipDescription,previouslyRelatedPersistentEntity) @TO@ cypherGenerator.prepareDeleteOf(neo4jPersistentEntity,relationshipDescription) @AT@ 21609 @LENGTH@ 135
------------UPD SimpleName@@MethodName:createRelationshipRemoveQuery:[neo4jPersistentEntity, relationshipDescription, previouslyRelatedPersistentEntity] @TO@ MethodName:prepareDeleteOf:[neo4jPersistentEntity, relationshipDescription] @AT@ 21625 @LENGTH@ 119
---------------DEL SimpleName@@previouslyRelatedPersistentEntity @AT@ 21710 @LENGTH@ 33
---UPD ExpressionStatement@@MethodInvocation:relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()) @TO@ MethodInvocation:relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()) @AT@ 21751 @LENGTH@ 300
------UPD MethodInvocation@@relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()) @TO@ relationshipCreationMonos.add(neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()) @AT@ 21751 @LENGTH@ 299
---------UPD SimpleName@@MethodName:add:[neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()] @TO@ MethodName:add:[neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then()] @AT@ 21777 @LENGTH@ 273
------------UPD MethodInvocation@@neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then() @TO@ neo4jClient.query(renderer.render(relationshipRemoveQuery)).in(inDatabase).bind(convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)).to(Constants.FROM_ID_PARAMETER_NAME).run().checkpoint("delete relationships").then() @AT@ 21789 @LENGTH@ 260
---------------UPD MethodInvocation@@MethodName:bind:[convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId)] @TO@ MethodName:bind:[convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId)] @AT@ 21789 @LENGTH@ 165
------------------UPD MethodInvocation@@convertIdValues(previouslyRelatedPersistentEntity.getIdProperty(),fromId) @TO@ convertIdValues(neo4jPersistentEntity.getIdProperty(),fromId) @AT@ 21879 @LENGTH@ 74
---------------------UPD SimpleName@@MethodName:convertIdValues:[previouslyRelatedPersistentEntity.getIdProperty(), fromId] @TO@ MethodName:convertIdValues:[neo4jPersistentEntity.getIdProperty(), fromId] @AT@ 21879 @LENGTH@ 74
------------------------UPD MethodInvocation@@previouslyRelatedPersistentEntity.getIdProperty() @TO@ neo4jPersistentEntity.getIdProperty() @AT@ 21895 @LENGTH@ 49
---------------------------UPD SimpleName@@Name:previouslyRelatedPersistentEntity @TO@ Name:neo4jPersistentEntity @AT@ 21895 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement,  @TO@ TypeDeclaration@@[public]JsonSchemaObjectUnitTests,  @AT@ 11205 @LENGTH@ 262
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement,  @AT@ 11205 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement,  @AT@ 11212 @LENGTH@ 4
---INS SimpleName@@MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement @TO@ MethodDeclaration@@public, void, MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement,  @AT@ 11217 @LENGTH@ 69
---INS ExpressionStatement@@MethodInvocation:assertThat(array().items(Collections.singletonList(string())).toDocument()).isEqualTo(new Document("type","array").append("items",new Document("type","string"))) @TO@ MethodDeclaration@@public, void, MethodName:arrayObjectShouldRenderItemsCorrectlyAsObjectIfContainsOnlyOneElement,  @AT@ 11294 @LENGTH@ 170
------INS MethodInvocation@@assertThat(array().items(Collections.singletonList(string())).toDocument()).isEqualTo(new Document("type","array").append("items",new Document("type","string"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(array().items(Collections.singletonList(string())).toDocument()).isEqualTo(new Document("type","array").append("items",new Document("type","string"))) @AT@ 11294 @LENGTH@ 169
---------INS MethodInvocation@@MethodName:assertThat:[array().items(Collections.singletonList(string())).toDocument()] @TO@ MethodInvocation@@assertThat(array().items(Collections.singletonList(string())).toDocument()).isEqualTo(new Document("type","array").append("items",new Document("type","string"))) @AT@ 11294 @LENGTH@ 75
------------INS MethodInvocation@@array().items(Collections.singletonList(string())).toDocument() @TO@ MethodInvocation@@MethodName:assertThat:[array().items(Collections.singletonList(string())).toDocument()] @AT@ 11305 @LENGTH@ 63
---------------INS MethodInvocation@@MethodName:items:[Collections.singletonList(string())] @TO@ MethodInvocation@@array().items(Collections.singletonList(string())).toDocument() @AT@ 11305 @LENGTH@ 50
------------------INS MethodInvocation@@Collections.singletonList(string()) @TO@ MethodInvocation@@MethodName:items:[Collections.singletonList(string())] @AT@ 11319 @LENGTH@ 35
---------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonList(string()) @AT@ 11319 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:singletonList:[string()] @TO@ MethodInvocation@@Collections.singletonList(string()) @AT@ 11331 @LENGTH@ 23
------------------------INS MethodInvocation@@MethodName:string:[] @TO@ SimpleName@@MethodName:singletonList:[string()] @AT@ 11345 @LENGTH@ 8
---------------INS MethodInvocation@@MethodName:array:[] @TO@ MethodInvocation@@array().items(Collections.singletonList(string())).toDocument() @AT@ 11305 @LENGTH@ 7
---------------INS SimpleName@@MethodName:toDocument:[] @TO@ MethodInvocation@@array().items(Collections.singletonList(string())).toDocument() @AT@ 11356 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEqualTo:[new Document("type","array").append("items",new Document("type","string"))] @TO@ MethodInvocation@@assertThat(array().items(Collections.singletonList(string())).toDocument()).isEqualTo(new Document("type","array").append("items",new Document("type","string"))) @AT@ 11370 @LENGTH@ 93
------------INS MethodInvocation@@new Document("type","array").append("items",new Document("type","string")) @TO@ SimpleName@@MethodName:isEqualTo:[new Document("type","array").append("items",new Document("type","string"))] @AT@ 11380 @LENGTH@ 82
---------------INS ClassInstanceCreation@@Document["type", "array"] @TO@ MethodInvocation@@new Document("type","array").append("items",new Document("type","string")) @AT@ 11380 @LENGTH@ 29
------------------INS New@@new @TO@ ClassInstanceCreation@@Document["type", "array"] @AT@ 11380 @LENGTH@ 3
------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["type", "array"] @AT@ 11384 @LENGTH@ 8
------------------INS StringLiteral@@"type" @TO@ ClassInstanceCreation@@Document["type", "array"] @AT@ 11393 @LENGTH@ 6
------------------INS StringLiteral@@"array" @TO@ ClassInstanceCreation@@Document["type", "array"] @AT@ 11401 @LENGTH@ 7
---------------INS SimpleName@@MethodName:append:["items", new Document("type","string")] @TO@ MethodInvocation@@new Document("type","array").append("items",new Document("type","string")) @AT@ 11415 @LENGTH@ 47
------------------INS StringLiteral@@"items" @TO@ SimpleName@@MethodName:append:["items", new Document("type","string")] @AT@ 11422 @LENGTH@ 7
------------------INS ClassInstanceCreation@@Document["type", "string"] @TO@ SimpleName@@MethodName:append:["items", new Document("type","string")] @AT@ 11431 @LENGTH@ 30
---------------------INS New@@new @TO@ ClassInstanceCreation@@Document["type", "string"] @AT@ 11431 @LENGTH@ 3
---------------------INS SimpleType@@Document @TO@ ClassInstanceCreation@@Document["type", "string"] @AT@ 11435 @LENGTH@ 8
---------------------INS StringLiteral@@"type" @TO@ ClassInstanceCreation@@Document["type", "string"] @AT@ 11444 @LENGTH@ 6
---------------------INS StringLiteral@@"string" @TO@ ClassInstanceCreation@@Document["type", "string"] @AT@ 11452 @LENGTH@ 8


UPD EnhancedForStatement@@for (Annotation a : annotations) {  if (a instanceof DenyAll) {    attributes.add(Jsr250SecurityConfig.DENY_ALL_ATTRIBUTE);    return attributes;  }  if (a instanceof PermitAll) {    attributes.add(Jsr250SecurityConfig.PERMIT_ALL_ATTRIBUTE);    return attributes;  }  if (a instanceof RolesAllowed) {    RolesAllowed ra=(RolesAllowed)a;    for (    String allowed : ra.value()) {      String defaultedAllowed=getRoleWithDefaultPrefix(allowed);      attributes.add(new Jsr250SecurityConfig(defaultedAllowed));    }    return attributes;  }} @TO@ for (Annotation annotation : annotations) {  if (annotation instanceof DenyAll) {    attributes.add(Jsr250SecurityConfig.DENY_ALL_ATTRIBUTE);    return attributes;  }  if (annotation instanceof PermitAll) {    attributes.add(Jsr250SecurityConfig.PERMIT_ALL_ATTRIBUTE);    return attributes;  }  if (annotation instanceof RolesAllowed) {    RolesAllowed ra=(RolesAllowed)annotation;    for (    String allowed : ra.value()) {      String defaultedAllowed=getRoleWithDefaultPrefix(allowed);      attributes.add(new Jsr250SecurityConfig(defaultedAllowed));    }    return attributes;  }} @AT@ 2635 @LENGTH@ 564
---UPD SingleVariableDeclaration@@Annotation a @TO@ Annotation annotation @AT@ 2640 @LENGTH@ 12
------UPD SimpleName@@a @TO@ annotation @AT@ 2651 @LENGTH@ 1
---UPD IfStatement@@if (a instanceof DenyAll) {  attributes.add(Jsr250SecurityConfig.DENY_ALL_ATTRIBUTE);  return attributes;} @TO@ if (annotation instanceof DenyAll) {  attributes.add(Jsr250SecurityConfig.DENY_ALL_ATTRIBUTE);  return attributes;} @AT@ 2673 @LENGTH@ 116
------UPD InstanceofExpression@@a instanceof DenyAll @TO@ annotation instanceof DenyAll @AT@ 2677 @LENGTH@ 20
---------UPD SimpleName@@a @TO@ annotation @AT@ 2677 @LENGTH@ 1
---UPD IfStatement@@if (a instanceof PermitAll) {  attributes.add(Jsr250SecurityConfig.PERMIT_ALL_ATTRIBUTE);  return attributes;} @TO@ if (annotation instanceof PermitAll) {  attributes.add(Jsr250SecurityConfig.PERMIT_ALL_ATTRIBUTE);  return attributes;} @AT@ 2793 @LENGTH@ 120
------UPD InstanceofExpression@@a instanceof PermitAll @TO@ annotation instanceof PermitAll @AT@ 2797 @LENGTH@ 22
---------UPD SimpleName@@a @TO@ annotation @AT@ 2797 @LENGTH@ 1
---UPD IfStatement@@if (a instanceof RolesAllowed) {  RolesAllowed ra=(RolesAllowed)a;  for (  String allowed : ra.value()) {    String defaultedAllowed=getRoleWithDefaultPrefix(allowed);    attributes.add(new Jsr250SecurityConfig(defaultedAllowed));  }  return attributes;} @TO@ if (annotation instanceof RolesAllowed) {  RolesAllowed ra=(RolesAllowed)annotation;  for (  String allowed : ra.value()) {    String defaultedAllowed=getRoleWithDefaultPrefix(allowed);    attributes.add(new Jsr250SecurityConfig(defaultedAllowed));  }  return attributes;} @AT@ 2917 @LENGTH@ 278
------UPD InstanceofExpression@@a instanceof RolesAllowed @TO@ annotation instanceof RolesAllowed @AT@ 2921 @LENGTH@ 25
---------UPD SimpleName@@a @TO@ annotation @AT@ 2921 @LENGTH@ 1
------UPD Block@@ThenBody:{  RolesAllowed ra=(RolesAllowed)a;  for (  String allowed : ra.value()) {    String defaultedAllowed=getRoleWithDefaultPrefix(allowed);    attributes.add(new Jsr250SecurityConfig(defaultedAllowed));  }  return attributes;} @TO@ ThenBody:{  RolesAllowed ra=(RolesAllowed)annotation;  for (  String allowed : ra.value()) {    String defaultedAllowed=getRoleWithDefaultPrefix(allowed);    attributes.add(new Jsr250SecurityConfig(defaultedAllowed));  }  return attributes;} @AT@ 2948 @LENGTH@ 247
---------UPD VariableDeclarationStatement@@RolesAllowed ra=(RolesAllowed)a; @TO@ RolesAllowed ra=(RolesAllowed)annotation; @AT@ 2954 @LENGTH@ 35
------------UPD VariableDeclarationFragment@@ra=(RolesAllowed)a @TO@ ra=(RolesAllowed)annotation @AT@ 2967 @LENGTH@ 21
---------------UPD CastExpression@@(RolesAllowed)a @TO@ (RolesAllowed)annotation @AT@ 2972 @LENGTH@ 16
------------------UPD SimpleName@@a @TO@ annotation @AT@ 2987 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from(rabbitMQEndpoint).onException(Exception.class).handled(true).end().id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated handled exception")) @TO@ MethodInvocation:from(rabbitMQEndpoint).onException(Exception.class).handled(true).end().id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated handled exception")) @AT@ 2299 @LENGTH@ 259
---UPD MethodInvocation@@from(rabbitMQEndpoint).onException(Exception.class).handled(true).end().id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated handled exception")) @TO@ from(rabbitMQEndpoint).onException(Exception.class).handled(true).end().id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated handled exception")) @AT@ 2299 @LENGTH@ 258
------UPD MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, consumingMockEndpoint] @AT@ 2299 @LENGTH@ 172
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @AT@ 2506 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2506 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2522 @LENGTH@ 6


MOV MethodDeclaration@@boolean, MethodName:matches, Message<? extends T> message,  @TO@ TypeDeclaration@@[public]MessageMatcher,  @AT@ 1072 @LENGTH@ 38


MOV FieldDeclaration@@protected, boolean, [encoding] @TO@ TypeDeclaration@@[public, abstract]Tracer, ServiceSupport[RoutePolicyFactory, StaticService, CamelContextAware] @AT@ 3248 @LENGTH@ 27


UPD IfStatement@@if (adapter != null) {  LOG.trace("Attempting to use JacksonJsonAdapter: {}",adapter);  Map map=adapter.readValue(json,exchange);  if (map != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("JacksonJsonAdapter converted object from: {} to: java.util.Map",ObjectHelper.classCanonicalName(json));    }    return path.read(map,configuration);  }} @TO@ if (adapter != null) {  LOG.trace("Attempting to use JacksonJsonAdapter: {}",adapter);  Map map=adapter.readValue(json,exchange);  if (json instanceof StreamCache) {    ((StreamCache)json).reset();  }  if (map != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("JacksonJsonAdapter converted object from: {} to: java.util.Map",ObjectHelper.classCanonicalName(json));    }    return path.read(map,configuration);  }} @AT@ 9666 @LENGTH@ 462
---UPD Block@@ThenBody:{  LOG.trace("Attempting to use JacksonJsonAdapter: {}",adapter);  Map map=adapter.readValue(json,exchange);  if (map != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("JacksonJsonAdapter converted object from: {} to: java.util.Map",ObjectHelper.classCanonicalName(json));    }    return path.read(map,configuration);  }} @TO@ ThenBody:{  LOG.trace("Attempting to use JacksonJsonAdapter: {}",adapter);  Map map=adapter.readValue(json,exchange);  if (json instanceof StreamCache) {    ((StreamCache)json).reset();  }  if (map != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("JacksonJsonAdapter converted object from: {} to: java.util.Map",ObjectHelper.classCanonicalName(json));    }    return path.read(map,configuration);  }} @AT@ 9687 @LENGTH@ 441
------INS IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @TO@ Block@@ThenBody:{  LOG.trace("Attempting to use JacksonJsonAdapter: {}",adapter);  Map map=adapter.readValue(json,exchange);  if (map != null) {    if (LOG.isDebugEnabled()) {      LOG.debug("JacksonJsonAdapter converted object from: {} to: java.util.Map",ObjectHelper.classCanonicalName(json));    }    return path.read(map,configuration);  }} @AT@ 9969 @LENGTH@ 94
---------INS InstanceofExpression@@json instanceof StreamCache @TO@ IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @AT@ 9973 @LENGTH@ 27
------------INS SimpleName@@json @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 9973 @LENGTH@ 4
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 9978 @LENGTH@ 10
------------INS SimpleType@@StreamCache @TO@ InstanceofExpression@@json instanceof StreamCache @AT@ 9989 @LENGTH@ 11
---------INS Block@@ThenBody:{  ((StreamCache)json).reset();} @TO@ IfStatement@@if (json instanceof StreamCache) {  ((StreamCache)json).reset();} @AT@ 10002 @LENGTH@ 61
------------INS ExpressionStatement@@MethodInvocation:((StreamCache)json).reset() @TO@ Block@@ThenBody:{  ((StreamCache)json).reset();} @AT@ 10020 @LENGTH@ 29
---------------INS MethodInvocation@@((StreamCache)json).reset() @TO@ ExpressionStatement@@MethodInvocation:((StreamCache)json).reset() @AT@ 10020 @LENGTH@ 28
------------------INS ParenthesizedExpression@@((StreamCache)json) @TO@ MethodInvocation@@((StreamCache)json).reset() @AT@ 10020 @LENGTH@ 20
---------------------INS CastExpression@@(StreamCache)json @TO@ ParenthesizedExpression@@((StreamCache)json) @AT@ 10021 @LENGTH@ 18
------------------------INS SimpleType@@StreamCache @TO@ CastExpression@@(StreamCache)json @AT@ 10022 @LENGTH@ 11
------------------------INS SimpleName@@json @TO@ CastExpression@@(StreamCache)json @AT@ 10035 @LENGTH@ 4
------------------INS SimpleName@@MethodName:reset:[] @TO@ MethodInvocation@@((StreamCache)json).reset() @AT@ 10041 @LENGTH@ 7


UPD IfStatement@@if (o == null || getClass() != o.getClass()) return false; @TO@ if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 6418 @LENGTH@ 61
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 6466 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @TO@ TypeDeclaration@@[public]CharacterFilterReaderTest,  @AT@ 3237 @LENGTH@ 374
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3237 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3244 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadUsingReader @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3249 @LENGTH@ 19
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3278 @LENGTH@ 11
---INS VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3300 @LENGTH@ 57
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 3300 @LENGTH@ 5
------INS SimpleType@@StringReader @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 3306 @LENGTH@ 12
------INS VariableDeclarationFragment@@input=new StringReader("ababcabcd") @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 3319 @LENGTH@ 37
---------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input=new StringReader("ababcabcd") @AT@ 3319 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringReader["ababcabcd"] @TO@ VariableDeclarationFragment@@input=new StringReader("ababcabcd") @AT@ 3327 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 3327 @LENGTH@ 3
------------INS SimpleType@@StringReader @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 3331 @LENGTH@ 12
------------INS StringLiteral@@"ababcabcd" @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 3344 @LENGTH@ 11
---INS TryStatement@@try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  IOUtils.copy(reader,output);  assertEquals("aacacd",output.toString());}  @TO@ MethodDeclaration@@public, void, MethodName:testReadUsingReader, IOException,  @AT@ 3366 @LENGTH@ 239
------INS VariableDeclarationExpression@@StringBuilderWriter output=new StringBuilderWriter() @TO@ TryStatement@@try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  IOUtils.copy(reader,output);  assertEquals("aacacd",output.toString());}  @AT@ 3371 @LENGTH@ 54
---------INS SimpleType@@StringBuilderWriter @TO@ VariableDeclarationExpression@@StringBuilderWriter output=new StringBuilderWriter() @AT@ 3371 @LENGTH@ 19
---------INS VariableDeclarationFragment@@output=new StringBuilderWriter() @TO@ VariableDeclarationExpression@@StringBuilderWriter output=new StringBuilderWriter() @AT@ 3391 @LENGTH@ 34
------------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=new StringBuilderWriter() @AT@ 3391 @LENGTH@ 6
------------INS ClassInstanceCreation@@StringBuilderWriter[] @TO@ VariableDeclarationFragment@@output=new StringBuilderWriter() @AT@ 3400 @LENGTH@ 25
---------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilderWriter[] @AT@ 3400 @LENGTH@ 3
---------------INS SimpleType@@StringBuilderWriter @TO@ ClassInstanceCreation@@StringBuilderWriter[] @AT@ 3404 @LENGTH@ 19
------INS VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @TO@ TryStatement@@try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  IOUtils.copy(reader,output);  assertEquals("aacacd",output.toString());}  @AT@ 3427 @LENGTH@ 68
---------INS SimpleType@@CharacterFilterReader @TO@ VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @AT@ 3427 @LENGTH@ 21
---------INS VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @TO@ VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @AT@ 3449 @LENGTH@ 46
------------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @AT@ 3449 @LENGTH@ 6
------------INS ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @TO@ VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @AT@ 3458 @LENGTH@ 37
---------------INS New@@new @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 3458 @LENGTH@ 3
---------------INS SimpleType@@CharacterFilterReader @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 3462 @LENGTH@ 21
---------------INS SimpleName@@input @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 3484 @LENGTH@ 5
---------------INS CharacterLiteral@@'b' @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 3491 @LENGTH@ 3
------INS ExpressionStatement@@MethodInvocation:IOUtils.copy(reader,output) @TO@ TryStatement@@try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  IOUtils.copy(reader,output);  assertEquals("aacacd",output.toString());}  @AT@ 3511 @LENGTH@ 29
---------INS MethodInvocation@@IOUtils.copy(reader,output) @TO@ ExpressionStatement@@MethodInvocation:IOUtils.copy(reader,output) @AT@ 3511 @LENGTH@ 28
------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.copy(reader,output) @AT@ 3511 @LENGTH@ 7
------------INS SimpleName@@MethodName:copy:[reader, output] @TO@ MethodInvocation@@IOUtils.copy(reader,output) @AT@ 3519 @LENGTH@ 20
---------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:copy:[reader, output] @AT@ 3524 @LENGTH@ 6
---------------INS SimpleName@@output @TO@ SimpleName@@MethodName:copy:[reader, output] @AT@ 3532 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertEquals("aacacd",output.toString()) @TO@ TryStatement@@try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  IOUtils.copy(reader,output);  assertEquals("aacacd",output.toString());}  @AT@ 3553 @LENGTH@ 42
---------INS MethodInvocation@@assertEquals("aacacd",output.toString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("aacacd",output.toString()) @AT@ 3553 @LENGTH@ 41
------------INS SimpleName@@MethodName:assertEquals:["aacacd", output.toString()] @TO@ MethodInvocation@@assertEquals("aacacd",output.toString()) @AT@ 3553 @LENGTH@ 41
---------------INS StringLiteral@@"aacacd" @TO@ SimpleName@@MethodName:assertEquals:["aacacd", output.toString()] @AT@ 3566 @LENGTH@ 8
---------------INS MethodInvocation@@output.toString() @TO@ SimpleName@@MethodName:assertEquals:["aacacd", output.toString()] @AT@ 3576 @LENGTH@ 17
------------------INS SimpleName@@Name:output @TO@ MethodInvocation@@output.toString() @AT@ 3576 @LENGTH@ 6
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@output.toString() @AT@ 3583 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:((ThreadChannelConnectionFactory)getPublisherConnectionFactory()).setSimplePublisherConfirms(simplePublisherConfirms) @TO@ MethodInvocation:((PooledChannelConnectionFactory)getPublisherConnectionFactory()).setSimplePublisherConfirms(simplePublisherConfirms) @AT@ 4338 @LENGTH@ 124
---UPD MethodInvocation@@((ThreadChannelConnectionFactory)getPublisherConnectionFactory()).setSimplePublisherConfirms(simplePublisherConfirms) @TO@ ((PooledChannelConnectionFactory)getPublisherConnectionFactory()).setSimplePublisherConfirms(simplePublisherConfirms) @AT@ 4338 @LENGTH@ 123
------UPD ParenthesizedExpression@@((ThreadChannelConnectionFactory)getPublisherConnectionFactory()) @TO@ ((PooledChannelConnectionFactory)getPublisherConnectionFactory()) @AT@ 4338 @LENGTH@ 66
---------UPD CastExpression@@(ThreadChannelConnectionFactory)getPublisherConnectionFactory() @TO@ (PooledChannelConnectionFactory)getPublisherConnectionFactory() @AT@ 4339 @LENGTH@ 64
------------UPD SimpleType@@ThreadChannelConnectionFactory @TO@ PooledChannelConnectionFactory @AT@ 4340 @LENGTH@ 30


INS MethodDeclaration@@public, void, MethodName:testToString,  @TO@ TypeDeclaration@@[public]StreamReadOptionsUnitTests,  @AT@ 1262 @LENGTH@ 173
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 1262 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 1269 @LENGTH@ 4
---INS SimpleName@@MethodName:testToString @TO@ MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 1274 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(StreamReadOptions.empty().toString()).isEqualTo("StreamReadOptions{block=null, count=null, noack=false, blocking=false}") @TO@ MethodDeclaration@@public, void, MethodName:testToString,  @AT@ 1294 @LENGTH@ 138
------INS MethodInvocation@@assertThat(StreamReadOptions.empty().toString()).isEqualTo("StreamReadOptions{block=null, count=null, noack=false, blocking=false}") @TO@ ExpressionStatement@@MethodInvocation:assertThat(StreamReadOptions.empty().toString()).isEqualTo("StreamReadOptions{block=null, count=null, noack=false, blocking=false}") @AT@ 1294 @LENGTH@ 137
---------INS MethodInvocation@@MethodName:assertThat:[StreamReadOptions.empty().toString()] @TO@ MethodInvocation@@assertThat(StreamReadOptions.empty().toString()).isEqualTo("StreamReadOptions{block=null, count=null, noack=false, blocking=false}") @AT@ 1294 @LENGTH@ 48
------------INS MethodInvocation@@StreamReadOptions.empty().toString() @TO@ MethodInvocation@@MethodName:assertThat:[StreamReadOptions.empty().toString()] @AT@ 1305 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:empty:[] @TO@ MethodInvocation@@StreamReadOptions.empty().toString() @AT@ 1305 @LENGTH@ 25
---------------INS SimpleName@@Name:StreamReadOptions @TO@ MethodInvocation@@StreamReadOptions.empty().toString() @AT@ 1305 @LENGTH@ 17
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@StreamReadOptions.empty().toString() @AT@ 1331 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["StreamReadOptions{block=null, count=null, noack=false, blocking=false}"] @TO@ MethodInvocation@@assertThat(StreamReadOptions.empty().toString()).isEqualTo("StreamReadOptions{block=null, count=null, noack=false, blocking=false}") @AT@ 1348 @LENGTH@ 83
------------INS StringLiteral@@"StreamReadOptions{block=null, count=null, noack=false, blocking=false}" @TO@ SimpleName@@MethodName:isEqualTo:["StreamReadOptions{block=null, count=null, noack=false, blocking=false}"] @AT@ 1358 @LENGTH@ 72


UPD ExpressionStatement@@MethodInvocation:assertNotEquals(outDate,"2018-02-26T19:12:18Z") @TO@ MethodInvocation:assertNotEquals("2018-02-26T19:12:18Z",outDate) @AT@ 1959 @LENGTH@ 49
---UPD MethodInvocation@@assertNotEquals(outDate,"2018-02-26T19:12:18Z") @TO@ assertNotEquals("2018-02-26T19:12:18Z",outDate) @AT@ 1959 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertNotEquals:[outDate, "2018-02-26T19:12:18Z"] @TO@ MethodName:assertNotEquals:["2018-02-26T19:12:18Z", outDate] @AT@ 1959 @LENGTH@ 48
---------INS StringLiteral@@"2018-02-26T19:12:18Z" @TO@ SimpleName@@MethodName:assertNotEquals:[outDate, "2018-02-26T19:12:18Z"] @AT@ 1975 @LENGTH@ 22
---------DEL StringLiteral@@"2018-02-26T19:12:18Z" @AT@ 1984 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:Hive.get().reloadFunctions() @TO@ MethodInvocation:Hive.get(false).reloadFunctions() @AT@ 1413 @LENGTH@ 29
---UPD MethodInvocation@@Hive.get().reloadFunctions() @TO@ Hive.get(false).reloadFunctions() @AT@ 1413 @LENGTH@ 28
------UPD MethodInvocation@@MethodName:get:[] @TO@ MethodName:get:[false] @AT@ 1413 @LENGTH@ 10
---------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:get:[] @AT@ 1422 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2090 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2090 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2097 @LENGTH@ 21


UPD TryStatement@@try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS));  int deleteCnt=ms.deleteScheduledExecutions(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @TO@ try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  LOG.debug("Cleaning up older Metrics");  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS));  int deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @AT@ 1997 @LENGTH@ 590
---INS ExpressionStatement@@MethodInvocation:LOG.debug("Cleaning up older Metrics") @TO@ TryStatement@@try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS));  int deleteCnt=ms.deleteScheduledExecutions(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @AT@ 2114 @LENGTH@ 39
------INS MethodInvocation@@LOG.debug("Cleaning up older Metrics") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Cleaning up older Metrics") @AT@ 2114 @LENGTH@ 38
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Cleaning up older Metrics") @AT@ 2114 @LENGTH@ 3
---------INS SimpleName@@MethodName:debug:["Cleaning up older Metrics"] @TO@ MethodInvocation@@LOG.debug("Cleaning up older Metrics") @AT@ 2118 @LENGTH@ 34
------------INS StringLiteral@@"Cleaning up older Metrics" @TO@ SimpleName@@MethodName:debug:["Cleaning up older Metrics"] @AT@ 2124 @LENGTH@ 27
---UPD VariableDeclarationStatement@@int deleteCnt=ms.deleteScheduledExecutions(maxRetainSecs); @TO@ int deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs); @AT@ 2322 @LENGTH@ 60
------UPD VariableDeclarationFragment@@deleteCnt=ms.deleteScheduledExecutions(maxRetainSecs) @TO@ deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs) @AT@ 2326 @LENGTH@ 55
---------UPD MethodInvocation@@ms.deleteScheduledExecutions(maxRetainSecs) @TO@ ms.deleteReplicationMetrics(maxRetainSecs) @AT@ 2338 @LENGTH@ 43
------------UPD SimpleName@@MethodName:deleteScheduledExecutions:[maxRetainSecs] @TO@ MethodName:deleteReplicationMetrics:[maxRetainSecs] @AT@ 2341 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getMessage().getBody(Account.class).getEmail(),"camel@apache.org") @TO@ MethodInvocation:assertEquals("camel@apache.org",exchange.getMessage().getBody(Account.class).getEmail()) @AT@ 2621 @LENGTH@ 90
---UPD MethodInvocation@@assertEquals(exchange.getMessage().getBody(Account.class).getEmail(),"camel@apache.org") @TO@ assertEquals("camel@apache.org",exchange.getMessage().getBody(Account.class).getEmail()) @AT@ 2621 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(Account.class).getEmail(), "camel@apache.org"] @TO@ MethodName:assertEquals:["camel@apache.org", exchange.getMessage().getBody(Account.class).getEmail()] @AT@ 2621 @LENGTH@ 89
---------MOV MethodInvocation@@exchange.getMessage().getBody(Account.class).getEmail() @TO@ SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(Account.class).getEmail(), "camel@apache.org"] @AT@ 2634 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:driver.getConf().setVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE,"mr") @TO@ MethodInvocation:conf.setVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE,"mr") @AT@ 1061 @LENGTH@ 71
---UPD MethodInvocation@@driver.getConf().setVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE,"mr") @TO@ conf.setVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE,"mr") @AT@ 1061 @LENGTH@ 70
------DEL MethodInvocation@@MethodName:getConf:[] @AT@ 1061 @LENGTH@ 16
------UPD SimpleName@@Name:driver @TO@ Name:conf @AT@ 1061 @LENGTH@ 6


INS VariableDeclarationStatement@@IpAddressMatcher matcher=new IpAddressMatcher(ipAddress); @TO@ MethodDeclaration@@public, boolean, MethodName:hasIpAddress, String ipAddress,  @AT@ 1685 @LENGTH@ 59
---INS SimpleType@@IpAddressMatcher @TO@ VariableDeclarationStatement@@IpAddressMatcher matcher=new IpAddressMatcher(ipAddress); @AT@ 1685 @LENGTH@ 16
---INS VariableDeclarationFragment@@matcher=new IpAddressMatcher(ipAddress) @TO@ VariableDeclarationStatement@@IpAddressMatcher matcher=new IpAddressMatcher(ipAddress); @AT@ 1702 @LENGTH@ 41
------INS SimpleName@@matcher @TO@ VariableDeclarationFragment@@matcher=new IpAddressMatcher(ipAddress) @AT@ 1702 @LENGTH@ 7
------INS ClassInstanceCreation@@IpAddressMatcher[ipAddress] @TO@ VariableDeclarationFragment@@matcher=new IpAddressMatcher(ipAddress) @AT@ 1712 @LENGTH@ 31
---------INS New@@new @TO@ ClassInstanceCreation@@IpAddressMatcher[ipAddress] @AT@ 1712 @LENGTH@ 3
---------INS SimpleType@@IpAddressMatcher @TO@ ClassInstanceCreation@@IpAddressMatcher[ipAddress] @AT@ 1716 @LENGTH@ 16
---------INS SimpleName@@ipAddress @TO@ ClassInstanceCreation@@IpAddressMatcher[ipAddress] @AT@ 1733 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2388 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2388 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2404 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:zRangeByLex(key,range,null) @TO@ MethodInvocation:zRangeByLex(key,range,Limit.unlimited()) @AT@ 113612 @LENGTH@ 37
---UPD MethodInvocation@@zRangeByLex(key,range,null) @TO@ zRangeByLex(key,range,Limit.unlimited()) @AT@ 113619 @LENGTH@ 29
------UPD SimpleName@@MethodName:zRangeByLex:[key, range, null] @TO@ MethodName:zRangeByLex:[key, range, Limit.unlimited()] @AT@ 113619 @LENGTH@ 29
---------DEL NullLiteral@@null @AT@ 113643 @LENGTH@ 4
---------INS MethodInvocation@@Limit.unlimited() @TO@ SimpleName@@MethodName:zRangeByLex:[key, range, null] @AT@ 113669 @LENGTH@ 17
------------INS SimpleName@@Name:Limit @TO@ MethodInvocation@@Limit.unlimited() @AT@ 113669 @LENGTH@ 5
------------INS SimpleName@@MethodName:unlimited:[] @TO@ MethodInvocation@@Limit.unlimited() @AT@ 113675 @LENGTH@ 11


UPD EnhancedForStatement@@for (String module : EXPORTED_MODULES) {  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false));} @TO@ for (String module : EXPORTED_MODULES) {  ModuleDependency modDep=new ModuleDependency(moduleLoader,module,false,true,true,false);  if (module.contains("opentracing-interceptors")) {    modDep.addImportFilter(s -> s.equals("META-INF"),true);  }  moduleSpecification.addSystemDependency(modDep);} @AT@ 4934 @LENGTH@ 173
---DEL ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false)) @AT@ 4987 @LENGTH@ 110
------DEL MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false)) @AT@ 4987 @LENGTH@ 109
---------DEL SimpleName@@Name:moduleSpecification @AT@ 4987 @LENGTH@ 19
---------DEL SimpleName@@MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,module,false,true,true,false)] @AT@ 5007 @LENGTH@ 89
------------DEL ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5027 @LENGTH@ 68
---INS VariableDeclarationStatement@@ModuleDependency modDep=new ModuleDependency(moduleLoader,module,false,true,true,false); @TO@ EnhancedForStatement@@for (String module : EXPORTED_MODULES) {  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false));} @AT@ 4987 @LENGTH@ 95
------INS SimpleType@@ModuleDependency @TO@ VariableDeclarationStatement@@ModuleDependency modDep=new ModuleDependency(moduleLoader,module,false,true,true,false); @AT@ 4987 @LENGTH@ 16
------INS VariableDeclarationFragment@@modDep=new ModuleDependency(moduleLoader,module,false,true,true,false) @TO@ VariableDeclarationStatement@@ModuleDependency modDep=new ModuleDependency(moduleLoader,module,false,true,true,false); @AT@ 5004 @LENGTH@ 77
---------INS SimpleName@@modDep @TO@ VariableDeclarationFragment@@modDep=new ModuleDependency(moduleLoader,module,false,true,true,false) @AT@ 5004 @LENGTH@ 6
---------INS ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @TO@ VariableDeclarationFragment@@modDep=new ModuleDependency(moduleLoader,module,false,true,true,false) @AT@ 5013 @LENGTH@ 68
------------MOV New@@new @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5027 @LENGTH@ 3
------------MOV SimpleType@@ModuleDependency @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5031 @LENGTH@ 16
------------MOV SimpleName@@moduleLoader @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5048 @LENGTH@ 12
------------MOV SimpleName@@module @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5062 @LENGTH@ 6
------------MOV BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5070 @LENGTH@ 5
------------MOV BooleanLiteral@@true @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5077 @LENGTH@ 4
------------MOV BooleanLiteral@@true @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5083 @LENGTH@ 4
------------MOV BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, module, false, true, true, false] @AT@ 5089 @LENGTH@ 5
---INS IfStatement@@if (module.contains("opentracing-interceptors")) {  modDep.addImportFilter(s -> s.equals("META-INF"),true);} @TO@ EnhancedForStatement@@for (String module : EXPORTED_MODULES) {  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false));} @AT@ 5212 @LENGTH@ 137
------INS MethodInvocation@@module.contains("opentracing-interceptors") @TO@ IfStatement@@if (module.contains("opentracing-interceptors")) {  modDep.addImportFilter(s -> s.equals("META-INF"),true);} @AT@ 5216 @LENGTH@ 43
---------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.contains("opentracing-interceptors") @AT@ 5216 @LENGTH@ 6
---------INS SimpleName@@MethodName:contains:["opentracing-interceptors"] @TO@ MethodInvocation@@module.contains("opentracing-interceptors") @AT@ 5223 @LENGTH@ 36
------------INS StringLiteral@@"opentracing-interceptors" @TO@ SimpleName@@MethodName:contains:["opentracing-interceptors"] @AT@ 5232 @LENGTH@ 26
------INS Block@@ThenBody:{  modDep.addImportFilter(s -> s.equals("META-INF"),true);} @TO@ IfStatement@@if (module.contains("opentracing-interceptors")) {  modDep.addImportFilter(s -> s.equals("META-INF"),true);} @AT@ 5261 @LENGTH@ 88
---------INS ExpressionStatement@@MethodInvocation:modDep.addImportFilter(s -> s.equals("META-INF"),true) @TO@ Block@@ThenBody:{  modDep.addImportFilter(s -> s.equals("META-INF"),true);} @AT@ 5279 @LENGTH@ 56
------------INS MethodInvocation@@modDep.addImportFilter(s -> s.equals("META-INF"),true) @TO@ ExpressionStatement@@MethodInvocation:modDep.addImportFilter(s -> s.equals("META-INF"),true) @AT@ 5279 @LENGTH@ 55
---------------INS SimpleName@@Name:modDep @TO@ MethodInvocation@@modDep.addImportFilter(s -> s.equals("META-INF"),true) @AT@ 5279 @LENGTH@ 6
---------------INS SimpleName@@MethodName:addImportFilter:[s -> s.equals("META-INF"), true] @TO@ MethodInvocation@@modDep.addImportFilter(s -> s.equals("META-INF"),true) @AT@ 5286 @LENGTH@ 48
------------------INS LambdaExpression@@s -> s.equals("META-INF") @TO@ SimpleName@@MethodName:addImportFilter:[s -> s.equals("META-INF"), true] @AT@ 5302 @LENGTH@ 25
---------------------INS VariableDeclarationFragment@@s @TO@ LambdaExpression@@s -> s.equals("META-INF") @AT@ 5302 @LENGTH@ 1
------------------------INS SimpleName@@s @TO@ VariableDeclarationFragment@@s @AT@ 5302 @LENGTH@ 1
---------------------INS MethodInvocation@@s.equals("META-INF") @TO@ LambdaExpression@@s -> s.equals("META-INF") @AT@ 5307 @LENGTH@ 20
------------------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.equals("META-INF") @AT@ 5307 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:equals:["META-INF"] @TO@ MethodInvocation@@s.equals("META-INF") @AT@ 5309 @LENGTH@ 18
---------------------------INS StringLiteral@@"META-INF" @TO@ SimpleName@@MethodName:equals:["META-INF"] @AT@ 5316 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addImportFilter:[s -> s.equals("META-INF"), true] @AT@ 5329 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(modDep) @TO@ EnhancedForStatement@@for (String module : EXPORTED_MODULES) {  moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,module,false,true,true,false));} @AT@ 5362 @LENGTH@ 48
------INS MethodInvocation@@moduleSpecification.addSystemDependency(modDep) @TO@ ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(modDep) @AT@ 5362 @LENGTH@ 47
---------INS SimpleName@@Name:moduleSpecification @TO@ MethodInvocation@@moduleSpecification.addSystemDependency(modDep) @AT@ 5362 @LENGTH@ 19
---------INS SimpleName@@MethodName:addSystemDependency:[modDep] @TO@ MethodInvocation@@moduleSpecification.addSystemDependency(modDep) @AT@ 5382 @LENGTH@ 27
------------INS SimpleName@@modDep @TO@ SimpleName@@MethodName:addSystemDependency:[modDep] @AT@ 5402 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").setHeader("routeHeader",simple("routeHeader")).inOut(rabbitMQEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").setHeader("routeHeader",simple("routeHeader")).to(ExchangePattern.InOut,rabbitMQEndpoint) @AT@ 4120 @LENGTH@ 142
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").setHeader("routeHeader",simple("routeHeader")).inOut(rabbitMQEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").setHeader("routeHeader",simple("routeHeader")).to(ExchangePattern.InOut,rabbitMQEndpoint) @AT@ 4120 @LENGTH@ 141
------UPD SimpleName@@MethodName:inOut:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOut, rabbitMQEndpoint] @AT@ 4238 @LENGTH@ 23
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:[rabbitMQEndpoint] @AT@ 4282 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4282 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4298 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2005 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2005 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2021 @LENGTH@ 21


UPD VariableDeclarationStatement@@io.lettuce.core.Range<String> range=RangeConverter.toRangeWithDefault(options.getRange(),"-","+"); @TO@ io.lettuce.core.Range<String> range=RangeConverter.toRangeWithDefault(options.getRange(),"-","+",Function.identity()); @AT@ 15298 @LENGTH@ 102
---UPD VariableDeclarationFragment@@range=RangeConverter.toRangeWithDefault(options.getRange(),"-","+") @TO@ range=RangeConverter.toRangeWithDefault(options.getRange(),"-","+",Function.identity()) @AT@ 15328 @LENGTH@ 71
------UPD MethodInvocation@@RangeConverter.toRangeWithDefault(options.getRange(),"-","+") @TO@ RangeConverter.toRangeWithDefault(options.getRange(),"-","+",Function.identity()) @AT@ 15336 @LENGTH@ 63
---------UPD SimpleName@@MethodName:toRangeWithDefault:[options.getRange(), "-", "+"] @TO@ MethodName:toRangeWithDefault:[options.getRange(), "-", "+", Function.identity()] @AT@ 15351 @LENGTH@ 48
------------INS MethodInvocation@@Function.identity() @TO@ SimpleName@@MethodName:toRangeWithDefault:[options.getRange(), "-", "+"] @AT@ 15400 @LENGTH@ 19
---------------INS SimpleName@@Name:Function @TO@ MethodInvocation@@Function.identity() @AT@ 15400 @LENGTH@ 8
---------------INS SimpleName@@MethodName:identity:[] @TO@ MethodInvocation@@Function.identity() @AT@ 15409 @LENGTH@ 10


INS MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @TO@ TypeDeclaration@@[@Nested]RelationshipProperties, IntegrationTestBase @AT@ 57737 @LENGTH@ 817
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 57732 @LENGTH@ 4
---INS SimpleName@@MethodName:findAndMapMultipleLevelRelationshipProperties @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 57737 @LENGTH@ 45
---INS SingleVariableDeclaration@@@Autowired EntityWithRelationshipPropertiesPathRepository repository @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 57788 @LENGTH@ 68
------INS SimpleType@@EntityWithRelationshipPropertiesPathRepository @TO@ SingleVariableDeclaration@@@Autowired EntityWithRelationshipPropertiesPathRepository repository @AT@ 57799 @LENGTH@ 46
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired EntityWithRelationshipPropertiesPathRepository repository @AT@ 57846 @LENGTH@ 10
---INS VariableDeclarationStatement@@long eId; @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 57864 @LENGTH@ 9
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long eId; @AT@ 57864 @LENGTH@ 4
------INS VariableDeclarationFragment@@eId @TO@ VariableDeclarationStatement@@long eId; @AT@ 57869 @LENGTH@ 3
---------INS SimpleName@@eId @TO@ VariableDeclarationFragment@@eId @AT@ 57869 @LENGTH@ 3
---INS TryStatement@@try (Session session=createSession()){  eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong();}  @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 57878 @LENGTH@ 249
------INS VariableDeclarationExpression@@Session session=createSession() @TO@ TryStatement@@try (Session session=createSession()){  eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong();}  @AT@ 57883 @LENGTH@ 33
---------INS SimpleType@@Session @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 57883 @LENGTH@ 7
---------INS VariableDeclarationFragment@@session=createSession() @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 57891 @LENGTH@ 25
------------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 57891 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:createSession:[] @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 57901 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @TO@ TryStatement@@try (Session session=createSession()){  eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong();}  @AT@ 57924 @LENGTH@ 198
---------INS Assignment@@eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @TO@ ExpressionStatement@@Assignment:eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57924 @LENGTH@ 197
------------INS SimpleName@@eId @TO@ Assignment@@eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57924 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57927 @LENGTH@ 1
------------INS MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @TO@ Assignment@@eId=session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57930 @LENGTH@ 191
---------------INS MethodInvocation@@MethodName:get:["eId"] @TO@ MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57930 @LENGTH@ 182
------------------INS StringLiteral@@"eId" @TO@ MethodInvocation@@MethodName:get:["eId"] @AT@ 58106 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:single:[] @TO@ MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57930 @LENGTH@ 171
---------------INS MethodInvocation@@MethodName:run:["CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId"] @TO@ MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57930 @LENGTH@ 162
------------------INS InfixExpression@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId" @TO@ MethodInvocation@@MethodName:run:["CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId"] @AT@ 57942 @LENGTH@ 149
---------------------INS StringLiteral@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" @TO@ InfixExpression@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId" @AT@ 57942 @LENGTH@ 78
---------------------INS Operator@@+ @TO@ InfixExpression@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId" @AT@ 58020 @LENGTH@ 1
---------------------INS StringLiteral@@"-[:RelationshipB]->(:EntityB)" @TO@ InfixExpression@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId" @AT@ 58029 @LENGTH@ 31
---------------------INS StringLiteral@@" RETURN id(n) as eId" @TO@ InfixExpression@@"CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId" @AT@ 58069 @LENGTH@ 22
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 57930 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asLong:[] @TO@ MethodInvocation@@session.run("CREATE (n:EntityWithRelationshipPropertiesPath)-[:RelationshipA]->(:EntityA)" + "-[:RelationshipB]->(:EntityB)" + " RETURN id(n) as eId").single().get("eId").asLong() @AT@ 58113 @LENGTH@ 8
---INS VariableDeclarationStatement@@EntityWithRelationshipPropertiesPath entity=repository.findById(eId).get(); @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58132 @LENGTH@ 77
------INS SimpleType@@EntityWithRelationshipPropertiesPath @TO@ VariableDeclarationStatement@@EntityWithRelationshipPropertiesPath entity=repository.findById(eId).get(); @AT@ 58132 @LENGTH@ 36
------INS VariableDeclarationFragment@@entity=repository.findById(eId).get() @TO@ VariableDeclarationStatement@@EntityWithRelationshipPropertiesPath entity=repository.findById(eId).get(); @AT@ 58169 @LENGTH@ 39
---------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=repository.findById(eId).get() @AT@ 58169 @LENGTH@ 6
---------INS MethodInvocation@@repository.findById(eId).get() @TO@ VariableDeclarationFragment@@entity=repository.findById(eId).get() @AT@ 58178 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:findById:[eId] @TO@ MethodInvocation@@repository.findById(eId).get() @AT@ 58178 @LENGTH@ 24
---------------INS SimpleName@@eId @TO@ MethodInvocation@@MethodName:findById:[eId] @AT@ 58198 @LENGTH@ 3
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(eId).get() @AT@ 58178 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@repository.findById(eId).get() @AT@ 58203 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(entity).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58213 @LENGTH@ 31
------INS MethodInvocation@@assertThat(entity).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity).isNotNull() @AT@ 58213 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThat:[entity] @TO@ MethodInvocation@@assertThat(entity).isNotNull() @AT@ 58213 @LENGTH@ 18
------------INS SimpleName@@entity @TO@ MethodInvocation@@MethodName:assertThat:[entity] @AT@ 58224 @LENGTH@ 6
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entity).isNotNull() @AT@ 58232 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA()).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58248 @LENGTH@ 50
------INS MethodInvocation@@assertThat(entity.getRelationshipA()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA()).isNotNull() @AT@ 58248 @LENGTH@ 49
---------INS MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA()] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA()).isNotNull() @AT@ 58248 @LENGTH@ 37
------------INS MethodInvocation@@entity.getRelationshipA() @TO@ MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA()] @AT@ 58259 @LENGTH@ 25
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getRelationshipA() @AT@ 58259 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getRelationshipA:[] @TO@ MethodInvocation@@entity.getRelationshipA() @AT@ 58266 @LENGTH@ 18
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA()).isNotNull() @AT@ 58286 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA()).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58302 @LENGTH@ 63
------INS MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA()).isNotNull() @AT@ 58302 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA()] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA()).isNotNull() @AT@ 58302 @LENGTH@ 50
------------INS MethodInvocation@@entity.getRelationshipA().getEntityA() @TO@ MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA()] @AT@ 58313 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getRelationshipA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA() @AT@ 58313 @LENGTH@ 25
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA() @AT@ 58313 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getEntityA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA() @AT@ 58339 @LENGTH@ 12
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA()).isNotNull() @AT@ 58353 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA().getRelationshipB()).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58369 @LENGTH@ 82
------INS MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA().getRelationshipB()).isNotNull() @AT@ 58369 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA().getRelationshipB()] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB()).isNotNull() @AT@ 58369 @LENGTH@ 69
------------INS MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB() @TO@ MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA().getRelationshipB()] @AT@ 58380 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:getEntityA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB() @AT@ 58380 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getRelationshipA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB() @AT@ 58380 @LENGTH@ 25
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB() @AT@ 58380 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getRelationshipB:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB() @AT@ 58419 @LENGTH@ 18
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB()).isNotNull() @AT@ 58439 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelRelationshipProperties, @Autowired EntityWithRelationshipPropertiesPathRepository repository,  @AT@ 58455 @LENGTH@ 95
------INS MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()).isNotNull() @AT@ 58455 @LENGTH@ 94
---------INS MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()).isNotNull() @AT@ 58455 @LENGTH@ 82
------------INS MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @TO@ MethodInvocation@@MethodName:assertThat:[entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()] @AT@ 58466 @LENGTH@ 70
---------------INS MethodInvocation@@MethodName:getRelationshipB:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @AT@ 58466 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:getEntityA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @AT@ 58466 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getRelationshipA:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @AT@ 58466 @LENGTH@ 25
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @AT@ 58466 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getEntityB:[] @TO@ MethodInvocation@@entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB() @AT@ 58524 @LENGTH@ 12
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entity.getRelationshipA().getEntityA().getRelationshipB().getEntityB()).isNotNull() @AT@ 58538 @LENGTH@ 11


UPD EnhancedForStatement@@for (String cookieName : cookiesToClear) {  Function<HttpServletRequest,Cookie> f=(request) -> {    Cookie cookie=new Cookie(cookieName,null);    String cookiePath=request.getContextPath() + "/";    cookie.setPath(cookiePath);    cookie.setMaxAge(0);    cookie.setSecure(request.isSecure());    return cookie;  };  cookieList.add(f);} @TO@ for (String cookieName : cookiesToClear) {  cookieList.add((request) -> {    Cookie cookie=new Cookie(cookieName,null);    String cookiePath=request.getContextPath() + "/";    cookie.setPath(cookiePath);    cookie.setMaxAge(0);    cookie.setSecure(request.isSecure());    return cookie;  });} @AT@ 1587 @LENGTH@ 357
---DEL VariableDeclarationStatement@@Function<HttpServletRequest,Cookie> f=(request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
; @AT@ 1633 @LENGTH@ 285
------DEL ParameterizedType@@Function<HttpServletRequest,Cookie> @AT@ 1633 @LENGTH@ 36
---------DEL SimpleType@@Function @AT@ 1633 @LENGTH@ 8
---------DEL SimpleType@@HttpServletRequest @AT@ 1642 @LENGTH@ 18
---------DEL SimpleType@@Cookie @AT@ 1662 @LENGTH@ 6
------DEL VariableDeclarationFragment@@f=(request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
 @AT@ 1670 @LENGTH@ 247
---------DEL SimpleName@@f @AT@ 1670 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:cookieList.add(f) @TO@ MethodInvocation:cookieList.add((request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
) @AT@ 1922 @LENGTH@ 18
------UPD MethodInvocation@@cookieList.add(f) @TO@ cookieList.add((request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
) @AT@ 1922 @LENGTH@ 17
---------UPD SimpleName@@MethodName:add:[f] @TO@ MethodName:add:[(request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
] @AT@ 1933 @LENGTH@ 6
------------MOV LambdaExpression@@(request) -> {
  Cookie cookie=new Cookie(cookieName,null);
  String cookiePath=request.getContextPath() + "/";
  cookie.setPath(cookiePath);
  cookie.setMaxAge(0);
  cookie.setSecure(request.isSecure());
  return cookie;
}
 @TO@ SimpleName@@MethodName:add:[f] @AT@ 1674 @LENGTH@ 243
------------DEL SimpleName@@f @AT@ 1937 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bye World",out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Bye World",out.getMessage().getBody()) @AT@ 1787 @LENGTH@ 50
---UPD MethodInvocation@@assertEquals("Bye World",out.getOut().getBody()) @TO@ assertEquals("Bye World",out.getMessage().getBody()) @AT@ 1787 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertEquals:["Bye World", out.getOut().getBody()] @TO@ MethodName:assertEquals:["Bye World", out.getMessage().getBody()] @AT@ 1787 @LENGTH@ 49
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 1813 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1813 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").onException(AlreadyClosedException.class,ConnectException.class).maximumRedeliveries(10).redeliveryDelay(500L).end().log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").onException(AlreadyClosedException.class,ConnectException.class).maximumRedeliveries(10).redeliveryDelay(500L).end().log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2984 @LENGTH@ 287
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").onException(AlreadyClosedException.class,ConnectException.class).maximumRedeliveries(10).redeliveryDelay(500L).end().log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").onException(AlreadyClosedException.class,ConnectException.class).maximumRedeliveries(10).redeliveryDelay(500L).end().log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 2984 @LENGTH@ 286
------UPD MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, rabbitMQEndpoint] @AT@ 2984 @LENGTH@ 260
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @AT@ 3264 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3264 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3280 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.isFailed(),true,"We should get a fault here") @TO@ MethodInvocation:assertEquals(true,exchange.isFailed(),"We should get a fault here") @AT@ 2444 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(exchange.isFailed(),true,"We should get a fault here") @TO@ assertEquals(true,exchange.isFailed(),"We should get a fault here") @AT@ 2444 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[exchange.isFailed(), true, "We should get a fault here"] @TO@ MethodName:assertEquals:[true, exchange.isFailed(), "We should get a fault here"] @AT@ 2444 @LENGTH@ 69
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertEquals:[exchange.isFailed(), true, "We should get a fault here"] @AT@ 2457 @LENGTH@ 4
---------DEL BooleanLiteral@@true @AT@ 2478 @LENGTH@ 4


UPD TryStatement@@try {  return getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId);} catch (EmptyResultDataAccessException zeroResults) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);  }}catch (IncorrectResultSizeDataAccessException moreThanOne) {  this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique");}catch (DataAccessException ex) {  this.logger.error("Failed to load token for series " + seriesId,ex);} @TO@ try {  return getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId);} catch (EmptyResultDataAccessException ex) {  this.logger.debug(LogMessage.format("Querying token for series '%s' returned no results.",seriesId),ex);}catch (IncorrectResultSizeDataAccessException ex) {  this.logger.error(LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId));}catch (DataAccessException ex) {  this.logger.error("Failed to load token for series " + seriesId,ex);} @AT@ 3411 @LENGTH@ 743
---UPD ReturnStatement@@MethodInvocation:getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId) @TO@ ClassInstanceCreation:new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)) @AT@ 3420 @LENGTH@ 209
---INS ReturnStatement@@MethodInvocation:getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId) @TO@ TryStatement@@try {  return getJdbcTemplate().queryForObject(this.tokensBySeriesSql,(rs,rowNum) -> new PersistentRememberMeToken(rs.getString(1),rs.getString(2),rs.getString(3),rs.getTimestamp(4)),seriesId);} catch (EmptyResultDataAccessException zeroResults) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);  }}catch (IncorrectResultSizeDataAccessException moreThanOne) {  this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique");}catch (DataAccessException ex) {  this.logger.error("Failed to load token for series " + seriesId,ex);} @AT@ 3525 @LENGTH@ 103
------INS MethodInvocation@@getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId) @TO@ ReturnStatement@@MethodInvocation:getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId) @AT@ 3532 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:getJdbcTemplate:[] @TO@ MethodInvocation@@getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId) @AT@ 3532 @LENGTH@ 17
---------INS SimpleName@@MethodName:queryForObject:[this.tokensBySeriesSql, this::createRememberMeToken, seriesId] @TO@ MethodInvocation@@getJdbcTemplate().queryForObject(this.tokensBySeriesSql,this::createRememberMeToken,seriesId) @AT@ 3550 @LENGTH@ 77
------------INS FieldAccess@@this.tokensBySeriesSql @TO@ SimpleName@@MethodName:queryForObject:[this.tokensBySeriesSql, this::createRememberMeToken, seriesId] @AT@ 3565 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokensBySeriesSql @AT@ 3565 @LENGTH@ 4
---------------INS SimpleName@@tokensBySeriesSql @TO@ FieldAccess@@this.tokensBySeriesSql @AT@ 3570 @LENGTH@ 17
------------INS SimpleName@@seriesId @TO@ SimpleName@@MethodName:queryForObject:[this.tokensBySeriesSql, this::createRememberMeToken, seriesId] @AT@ 3618 @LENGTH@ 8
---UPD CatchClause@@catch (EmptyResultDataAccessException zeroResults) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);  }} @TO@ catch (EmptyResultDataAccessException ex) {  this.logger.debug(LogMessage.format("Querying token for series '%s' returned no results.",seriesId),ex);} @AT@ 3636 @LENGTH@ 205
------UPD SingleVariableDeclaration@@EmptyResultDataAccessException zeroResults @TO@ EmptyResultDataAccessException ex @AT@ 3643 @LENGTH@ 42
---------UPD SimpleName@@zeroResults @TO@ ex @AT@ 3674 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Querying token for series '%s' returned no results.",seriesId),ex) @TO@ CatchClause@@catch (EmptyResultDataAccessException zeroResults) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);  }} @AT@ 3682 @LENGTH@ 106
---------MOV MethodInvocation@@this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Querying token for series '%s' returned no results.",seriesId),ex) @AT@ 3732 @LENGTH@ 99
------DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);} @AT@ 3692 @LENGTH@ 145
---------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 3696 @LENGTH@ 28
------------DEL FieldAccess@@this.logger @AT@ 3696 @LENGTH@ 11
---------------DEL ThisExpression@@this @AT@ 3696 @LENGTH@ 4
---------------DEL SimpleName@@logger @AT@ 3701 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3708 @LENGTH@ 16
---------DEL Block@@ThenBody:{  this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults);} @AT@ 3726 @LENGTH@ 111
------------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("Querying token for series '" + seriesId + "' returned no results.",zeroResults) @AT@ 3732 @LENGTH@ 100
---UPD CatchClause@@catch (IncorrectResultSizeDataAccessException moreThanOne) {  this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique");} @TO@ catch (IncorrectResultSizeDataAccessException ex) {  this.logger.error(LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId));} @AT@ 3844 @LENGTH@ 198
------UPD SingleVariableDeclaration@@IncorrectResultSizeDataAccessException moreThanOne @TO@ IncorrectResultSizeDataAccessException ex @AT@ 3851 @LENGTH@ 50
---------UPD SimpleName@@moreThanOne @TO@ ex @AT@ 3890 @LENGTH@ 11
------UPD ExpressionStatement@@MethodInvocation:this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique") @TO@ MethodInvocation:this.logger.error(LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId)) @AT@ 3908 @LENGTH@ 130
---------UPD MethodInvocation@@this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique") @TO@ this.logger.error(LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId)) @AT@ 3908 @LENGTH@ 129
------------INS SimpleName@@MethodName:error:[LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId)] @TO@ MethodInvocation@@this.logger.error("Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique") @AT@ 3862 @LENGTH@ 138
---------------INS MethodInvocation@@LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId) @TO@ SimpleName@@MethodName:error:[LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId)] @AT@ 3868 @LENGTH@ 131
------------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId) @AT@ 3868 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:error:["Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique"] @TO@ MethodInvocation@@LogMessage.format("Querying token for series '%s' returned more than one value. Series" + " should be unique",seriesId) @AT@ 3920 @LENGTH@ 117
---------------------INS SimpleName@@seriesId @TO@ SimpleName@@MethodName:error:["Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique"] @AT@ 3990 @LENGTH@ 8
------------UPD SimpleName@@MethodName:error:["Querying token for series '" + seriesId + "' returned more than one value. Series"+ " should be unique"] @TO@ MethodName:format:["Querying token for series '%s' returned more than one value. Series" + " should be unique", seriesId] @AT@ 3920 @LENGTH@ 117


UPD ExpressionStatement@@Assignment:this.route=new ServiceSupplierDependency<>(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName))) @TO@ Assignment:this.route=new ServiceSupplierDependency<>(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName)) @AT@ 2522 @LENGTH@ 140
---UPD Assignment@@this.route=new ServiceSupplierDependency<>(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName))) @TO@ this.route=new ServiceSupplierDependency<>(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName)) @AT@ 2522 @LENGTH@ 139
------UPD ClassInstanceCreation@@ServiceSupplierDependency<>[ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName))] @TO@ ServiceSupplierDependency<>[ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName)] @AT@ 2535 @LENGTH@ 126
---------UPD MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @TO@ ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.getName()).append(serverName) @AT@ 2567 @LENGTH@ 93
------------INS MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.getName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @AT@ 2576 @LENGTH@ 83
---------------INS MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @TO@ MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.getName()] @AT@ 2612 @LENGTH@ 46
------------------MOV QualifiedName@@Name:WebDeploymentRequirement.LOCAL_ROUTE @TO@ MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @AT@ 2603 @LENGTH@ 36
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.getName() @AT@ 2649 @LENGTH@ 9
------------DEL SimpleName@@MethodName:parseServiceName:[WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)] @AT@ 2586 @LENGTH@ 74
---------------DEL MethodInvocation@@WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName) @AT@ 2603 @LENGTH@ 56
------------MOV SimpleName@@MethodName:resolve:[serverName] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.LOCAL_ROUTE.resolve(serverName)) @AT@ 2640 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ MethodInvocation:assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 2425 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 2425 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @TO@ MethodName:assertEquals:["123", String.valueOf(response.getId()), "Get a wrong customer id"] @AT@ 2425 @LENGTH@ 80
---------MOV MethodInvocation@@String.valueOf(response.getId()) @TO@ SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @AT@ 2438 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2857 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2857 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2864 @LENGTH@ 21


DEL IfStatement@@if (corsFilter == null) {  throw new IllegalStateException("Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.");} @AT@ 2598 @LENGTH@ 188
---DEL InfixExpression@@corsFilter == null @AT@ 2602 @LENGTH@ 18
---DEL Block@@ThenBody:{  throw new IllegalStateException("Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.");} @AT@ 2622 @LENGTH@ 164
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean.") @AT@ 2627 @LENGTH@ 155
---------DEL ClassInstanceCreation@@IllegalStateException["Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean."] @AT@ 2633 @LENGTH@ 148
------------DEL New@@new @AT@ 2633 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 2637 @LENGTH@ 21
------------DEL InfixExpression@@"Please configure either a " + CORS_FILTER_BEAN_NAME + " bean or a "+ CORS_CONFIGURATION_SOURCE_BEAN_NAME+ "bean." @AT@ 2659 @LENGTH@ 121


UPD IfStatement@@if (!currEntry.isSparse()) {  skipped=IOUtils.skip(inputStream,numToSkip);} else {  skipped=skipSparse(numToSkip);} @TO@ if (!currEntry.isSparse()) {  skipped=IOUtils.skip(inputStream,numToSkip);  skipped=getActuallySkipped(availableOfInputStream,skipped,numToSkip);} else {  skipped=skipSparse(numToSkip);} @AT@ 10026 @LENGTH@ 160
---UPD Block@@ThenBody:{  skipped=IOUtils.skip(inputStream,numToSkip);} @TO@ ThenBody:{  skipped=IOUtils.skip(inputStream,numToSkip);  skipped=getActuallySkipped(availableOfInputStream,skipped,numToSkip);} @AT@ 10053 @LENGTH@ 71
------MOV ExpressionStatement@@Assignment:skipped=getActuallySkipped(availableOfInputStream,skipped,numToSkip) @TO@ Block@@ThenBody:{  skipped=IOUtils.skip(inputStream,numToSkip);} @AT@ 10196 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(responsePayload) @TO@ MethodInvocation:exchange.getMessage().setBody(responsePayload) @AT@ 2325 @LENGTH@ 43
---UPD MethodInvocation@@exchange.getOut().setBody(responsePayload) @TO@ exchange.getMessage().setBody(responsePayload) @AT@ 2325 @LENGTH@ 42
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2325 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertNotNull(calculateResponse,"instanceId = " + instanceId) @TO@ MethodInvocation:LOG.debug("instanceId = {}",instanceId) @AT@ 5506 @LENGTH@ 63
---UPD MethodInvocation@@assertNotNull(calculateResponse,"instanceId = " + instanceId) @TO@ LOG.debug("instanceId = {}",instanceId) @AT@ 5506 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertNotNull:[calculateResponse, "instanceId = " + instanceId] @TO@ MethodName:debug:["instanceId = {}", instanceId] @AT@ 5506 @LENGTH@ 62
---------DEL SimpleName@@calculateResponse @AT@ 5520 @LENGTH@ 17
---------INS StringLiteral@@"instanceId = {}" @TO@ SimpleName@@MethodName:assertNotNull:[calculateResponse, "instanceId = " + instanceId] @AT@ 5523 @LENGTH@ 17
---------DEL InfixExpression@@"instanceId = " + instanceId @AT@ 5539 @LENGTH@ 28
------------DEL StringLiteral@@"instanceId = " @AT@ 5539 @LENGTH@ 15
------------DEL Operator@@+ @AT@ 5554 @LENGTH@ 1
------------DEL SimpleName@@instanceId @AT@ 5557 @LENGTH@ 10
---------INS SimpleName@@instanceId @TO@ SimpleName@@MethodName:assertNotNull:[calculateResponse, "instanceId = " + instanceId] @AT@ 5542 @LENGTH@ 10
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@assertNotNull(calculateResponse,"instanceId = " + instanceId) @AT@ 5513 @LENGTH@ 3


UPD TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  return distanceConverter.convert(connection.getJedis().geodist(key,member1,member2,geoUnit));} catch (Exception ex) {  throw convertJedisAccessException(ex);} @TO@ try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  Double distance=connection.getJedis().geodist(key,member1,member2,geoUnit);  return distance != null ? distanceConverter.convert(distance) : null;} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 6213 @LENGTH@ 557
---UPD ReturnStatement@@MethodInvocation:distanceConverter.convert(connection.getJedis().geodist(key,member1,member2,geoUnit)) @TO@ ConditionalExpression:distance != null ? distanceConverter.convert(distance) : null @AT@ 6601 @LENGTH@ 96
------DEL MethodInvocation@@distanceConverter.convert(connection.getJedis().geodist(key,member1,member2,geoUnit)) @AT@ 6608 @LENGTH@ 88
------INS ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @TO@ ReturnStatement@@MethodInvocation:distanceConverter.convert(connection.getJedis().geodist(key,member1,member2,geoUnit)) @AT@ 6749 @LENGTH@ 61
---------INS InfixExpression@@distance != null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 6749 @LENGTH@ 16
------------INS SimpleName@@distance @TO@ InfixExpression@@distance != null @AT@ 6749 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@distance != null @AT@ 6757 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@distance != null @AT@ 6761 @LENGTH@ 4
---------INS MethodInvocation@@distanceConverter.convert(distance) @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 6768 @LENGTH@ 35
------------MOV SimpleName@@Name:distanceConverter @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 6608 @LENGTH@ 17
------------MOV SimpleName@@MethodName:convert:[connection.getJedis().geodist(key,member1,member2,geoUnit)] @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 6626 @LENGTH@ 70
---------------INS SimpleName@@distance @TO@ SimpleName@@MethodName:convert:[connection.getJedis().geodist(key,member1,member2,geoUnit)] @AT@ 6794 @LENGTH@ 8
---------INS NullLiteral@@null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 6806 @LENGTH@ 4
---INS VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2,geoUnit); @TO@ TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newJedisResult(connection.getRequiredPipeline().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newJedisResult(connection.getRequiredTransaction().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  return distanceConverter.convert(connection.getJedis().geodist(key,member1,member2,geoUnit));} catch (Exception ex) {  throw convertJedisAccessException(ex);} @AT@ 6658 @LENGTH@ 80
------INS SimpleType@@Double @TO@ VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2,geoUnit); @AT@ 6658 @LENGTH@ 6
------INS VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2,geoUnit) @TO@ VariableDeclarationStatement@@Double distance=connection.getJedis().geodist(key,member1,member2,geoUnit); @AT@ 6665 @LENGTH@ 72
---------MOV MethodInvocation@@connection.getJedis().geodist(key,member1,member2,geoUnit) @TO@ VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2,geoUnit) @AT@ 6634 @LENGTH@ 61
---------INS SimpleName@@distance @TO@ VariableDeclarationFragment@@distance=connection.getJedis().geodist(key,member1,member2,geoUnit) @AT@ 6665 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals(5,readOpsDelta) @TO@ MethodInvocation:assertEquals(4,readOpsDelta) @AT@ 160683 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(5,readOpsDelta) @TO@ assertEquals(4,readOpsDelta) @AT@ 160683 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[5, readOpsDelta] @TO@ MethodName:assertEquals:[4, readOpsDelta] @AT@ 160683 @LENGTH@ 29
---------UPD NumberLiteral@@5 @TO@ 4 @AT@ 160696 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault) @TO@ MethodInvocation:exchange.getMessage().setBody(fault) @AT@ 2420 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(fault) @TO@ exchange.getMessage().setBody(fault) @AT@ 2420 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2420 @LENGTH@ 17


MOV MethodDeclaration@@private, voidMethodName:ReactiveJwtDecoders,  @TO@ TypeDeclaration@@[public, final]ReactiveJwtDecoders,  @AT@ 5247 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)) @TO@ MethodInvocation:resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),StandardCharsets.UTF_8)) @AT@ 4552 @LENGTH@ 104
---UPD MethodInvocation@@resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)) @TO@ resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),StandardCharsets.UTF_8)) @AT@ 4552 @LENGTH@ 103
------UPD SimpleName@@MethodName:write:[FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)] @TO@ MethodName:write:[FileUtils.readFileToString(new File("src/test/data/feed.atom"),StandardCharsets.UTF_8)] @AT@ 4569 @LENGTH@ 86
---------UPD MethodInvocation@@FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8) @TO@ FileUtils.readFileToString(new File("src/test/data/feed.atom"),StandardCharsets.UTF_8) @AT@ 4575 @LENGTH@ 79
------------UPD SimpleName@@MethodName:readFileToString:[new File("src/test/data/feed.atom"), Charsets.UTF_8] @TO@ MethodName:readFileToString:[new File("src/test/data/feed.atom"), StandardCharsets.UTF_8] @AT@ 4585 @LENGTH@ 69
---------------UPD QualifiedName@@Charsets.UTF_8 @TO@ StandardCharsets.UTF_8 @AT@ 4639 @LENGTH@ 14
------------------UPD SimpleName@@Charsets @TO@ StandardCharsets @AT@ 4639 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(new Object[]{null,personId,ssn,name}) @TO@ MethodInvocation:exchange.getMessage().setBody(new Object[]{null,personId,ssn,name}) @AT@ 2924 @LENGTH@ 70
---UPD MethodInvocation@@exchange.getOut().setBody(new Object[]{null,personId,ssn,name}) @TO@ exchange.getMessage().setBody(new Object[]{null,personId,ssn,name}) @AT@ 2924 @LENGTH@ 69
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2924 @LENGTH@ 17


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2127 @LENGTH@ 583
---DEL Modifier@@public @AT@ 2127 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2134 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2139 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2190 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonAthenaClientMock clientMock=new AmazonAthenaClientMock(); @AT@ 2210 @LENGTH@ 65
------DEL SimpleType@@AmazonAthenaClientMock @AT@ 2210 @LENGTH@ 22
------DEL VariableDeclarationFragment@@clientMock=new AmazonAthenaClientMock() @AT@ 2233 @LENGTH@ 41
---------DEL SimpleName@@clientMock @AT@ 2233 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AmazonAthenaClientMock[] @AT@ 2246 @LENGTH@ 28
------------DEL New@@new @AT@ 2246 @LENGTH@ 3
------------DEL SimpleType@@AmazonAthenaClientMock @AT@ 2250 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("amazonAthenaClient",clientMock) @AT@ 2284 @LENGTH@ 61
------DEL MethodInvocation@@context.getRegistry().bind("amazonAthenaClient",clientMock) @AT@ 2284 @LENGTH@ 60
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2284 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2284 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["amazonAthenaClient", clientMock] @AT@ 2306 @LENGTH@ 38
------------DEL StringLiteral@@"amazonAthenaClient" @AT@ 2311 @LENGTH@ 20
------------DEL SimpleName@@clientMock @AT@ 2333 @LENGTH@ 10
---DEL VariableDeclarationStatement@@Athena2Component component=context.getComponent("aws2-athena",Athena2Component.class); @AT@ 2354 @LENGTH@ 89
------DEL SimpleType@@Athena2Component @AT@ 2354 @LENGTH@ 16
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-athena",Athena2Component.class) @AT@ 2371 @LENGTH@ 71
---------DEL SimpleName@@component @AT@ 2371 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-athena",Athena2Component.class) @AT@ 2383 @LENGTH@ 59
------------DEL SimpleName@@Name:context @AT@ 2383 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-athena", Athena2Component.class] @AT@ 2391 @LENGTH@ 51
---------------DEL StringLiteral@@"aws2-athena" @AT@ 2404 @LENGTH@ 13
---------------DEL TypeLiteral@@Athena2Component.class @AT@ 2419 @LENGTH@ 22
---DEL VariableDeclarationStatement@@Athena2Endpoint endpoint=(Athena2Endpoint)component.createEndpoint("aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2452 @LENGTH@ 163
------DEL SimpleType@@Athena2Endpoint @AT@ 2452 @LENGTH@ 15
------DEL VariableDeclarationFragment@@endpoint=(Athena2Endpoint)component.createEndpoint("aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2468 @LENGTH@ 146
---------DEL SimpleName@@endpoint @AT@ 2468 @LENGTH@ 8
---------DEL CastExpression@@(Athena2Endpoint)component.createEndpoint("aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2479 @LENGTH@ 135
------------DEL SimpleType@@Athena2Endpoint @AT@ 2480 @LENGTH@ 15
------------DEL MethodInvocation@@component.createEndpoint("aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2497 @LENGTH@ 117
---------------DEL SimpleName@@Name:component @AT@ 2497 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2524 @LENGTH@ 90
------------------DEL StringLiteral@@"aws2-athena://label?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2539 @LENGTH@ 74
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(clientMock,endpoint.getConfiguration().getAmazonAthenaClient()) @AT@ 2625 @LENGTH@ 79
------DEL MethodInvocation@@assertNotSame(clientMock,endpoint.getConfiguration().getAmazonAthenaClient()) @AT@ 2625 @LENGTH@ 78
---------DEL SimpleName@@MethodName:assertNotSame:[clientMock, endpoint.getConfiguration().getAmazonAthenaClient()] @AT@ 2625 @LENGTH@ 78
------------DEL SimpleName@@clientMock @AT@ 2639 @LENGTH@ 10
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonAthenaClient() @AT@ 2651 @LENGTH@ 51
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2651 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2651 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonAthenaClient:[] @AT@ 2679 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}",ex) @TO@ MethodInvocation:LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}",ex.getMessage(),ex) @AT@ 7453 @LENGTH@ 81
---UPD MethodInvocation@@LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}",ex) @TO@ LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}",ex.getMessage(),ex) @AT@ 7453 @LENGTH@ 80
------UPD SimpleName@@MethodName:debug:["Cannot use StaxStreamReader to unmarshal the message, due to {}", ex] @TO@ MethodName:debug:["Cannot use StaxStreamReader to unmarshal the message, due to {}", ex.getMessage(), ex] @AT@ 7457 @LENGTH@ 76
---------INS MethodInvocation@@ex.getMessage() @TO@ SimpleName@@MethodName:debug:["Cannot use StaxStreamReader to unmarshal the message, due to {}", ex] @AT@ 7530 @LENGTH@ 15
------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getMessage() @AT@ 7530 @LENGTH@ 2
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@ex.getMessage() @AT@ 7533 @LENGTH@ 12


INS IfStatement@@if (name.equals("dagsubmit")) {  return new ReExecutionDagSubmitPlugin();} @TO@ MethodDeclaration@@private, static, IReExecutionPlugin, MethodName:buildReExecPlugin, String name, RuntimeException,  @AT@ 2937 @LENGTH@ 84
---INS MethodInvocation@@name.equals("dagsubmit") @TO@ IfStatement@@if (name.equals("dagsubmit")) {  return new ReExecutionDagSubmitPlugin();} @AT@ 2941 @LENGTH@ 24
------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.equals("dagsubmit") @AT@ 2941 @LENGTH@ 4
------INS SimpleName@@MethodName:equals:["dagsubmit"] @TO@ MethodInvocation@@name.equals("dagsubmit") @AT@ 2946 @LENGTH@ 19
---------INS StringLiteral@@"dagsubmit" @TO@ SimpleName@@MethodName:equals:["dagsubmit"] @AT@ 2953 @LENGTH@ 11
---INS Block@@ThenBody:{  return new ReExecutionDagSubmitPlugin();} @TO@ IfStatement@@if (name.equals("dagsubmit")) {  return new ReExecutionDagSubmitPlugin();} @AT@ 2967 @LENGTH@ 54
------INS ReturnStatement@@ClassInstanceCreation:new ReExecutionDagSubmitPlugin() @TO@ Block@@ThenBody:{  return new ReExecutionDagSubmitPlugin();} @AT@ 2975 @LENGTH@ 40
---------INS ClassInstanceCreation@@ReExecutionDagSubmitPlugin[] @TO@ ReturnStatement@@ClassInstanceCreation:new ReExecutionDagSubmitPlugin() @AT@ 2982 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@ReExecutionDagSubmitPlugin[] @AT@ 2982 @LENGTH@ 3
------------INS SimpleType@@ReExecutionDagSubmitPlugin @TO@ ClassInstanceCreation@@ReExecutionDagSubmitPlugin[] @AT@ 2986 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo").to("mock:result") @AT@ 2528 @LENGTH@ 117
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo").to("mock:result") @AT@ 2528 @LENGTH@ 116
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo"] @AT@ 2528 @LENGTH@ 73
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo"] @AT@ 2618 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2618 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2634 @LENGTH@ 5


UPD VariableDeclarationStatement@@final HiveDecimalWritable writable=((DecimalColumnVector)hiveVector).vector[i]; @TO@ final HiveDecimalWritable writable=((DecimalColumnVector)hiveVector).vector[j]; @AT@ 41054 @LENGTH@ 82
---UPD VariableDeclarationFragment@@writable=((DecimalColumnVector)hiveVector).vector[i] @TO@ writable=((DecimalColumnVector)hiveVector).vector[j] @AT@ 41080 @LENGTH@ 55
------UPD ArrayAccess@@((DecimalColumnVector)hiveVector).vector[i] @TO@ ((DecimalColumnVector)hiveVector).vector[j] @AT@ 41091 @LENGTH@ 44
---------UPD SimpleName@@i @TO@ j @AT@ 41133 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ MethodInvocation:assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2462 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2462 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @TO@ MethodName:assertEquals:["11192828ahsh2723", resultExchange.getIn().getHeader(S3Constants.VERSION_ID)] @AT@ 2462 @LENGTH@ 90
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.VERSION_ID) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @AT@ 2475 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().copyFrom(exchange.getIn()) @TO@ MethodInvocation:exchange.getMessage().copyFrom(exchange.getIn()) @AT@ 1670 @LENGTH@ 45
---UPD MethodInvocation@@exchange.getOut().copyFrom(exchange.getIn()) @TO@ exchange.getMessage().copyFrom(exchange.getIn()) @AT@ 1670 @LENGTH@ 44
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1670 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 3189 @LENGTH@ 144
---UPD MethodInvocation@@from("direct:rabbitMQ").id("producingRoute").log("Sending message").inOnly(rabbitMQEndpoint).to(producingMockEndpoint) @TO@ from("direct:rabbitMQ").id("producingRoute").log("Sending message").to(ExchangePattern.InOnly,rabbitMQEndpoint).to(producingMockEndpoint) @AT@ 3189 @LENGTH@ 143
------UPD MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, rabbitMQEndpoint] @AT@ 3189 @LENGTH@ 92
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[rabbitMQEndpoint] @AT@ 3301 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3301 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3317 @LENGTH@ 6


UPD Block@@ThenBody:{  String nonceHash;  try {    nonceHash=createHash(requestNonce);  } catch (  NoSuchAlgorithmException ex) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }  String nonceHashClaim=idToken.getNonce();  if (nonceHashClaim == null || !nonceHashClaim.equals(nonceHash)) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @TO@ ThenBody:{  String nonceHash=getNonceHash(requestNonce);  String nonceHashClaim=idToken.getNonce();  if (nonceHashClaim == null || !nonceHashClaim.equals(nonceHash)) {    OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);    throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());  }} @AT@ 11647 @LENGTH@ 560
---UPD VariableDeclarationStatement@@String nonceHash; @TO@ String nonceHash=getNonceHash(requestNonce); @AT@ 11652 @LENGTH@ 17
------UPD VariableDeclarationFragment@@nonceHash @TO@ nonceHash=getNonceHash(requestNonce) @AT@ 11659 @LENGTH@ 9
---------INS MethodInvocation@@getNonceHash(requestNonce) @TO@ VariableDeclarationFragment@@nonceHash @AT@ 11662 @LENGTH@ 26
------------INS SimpleName@@MethodName:getNonceHash:[requestNonce] @TO@ MethodInvocation@@getNonceHash(requestNonce) @AT@ 11662 @LENGTH@ 26
---------------INS SimpleName@@requestNonce @TO@ SimpleName@@MethodName:getNonceHash:[requestNonce] @AT@ 11675 @LENGTH@ 12
---UPD TryStatement@@try {  nonceHash=createHash(requestNonce);} catch (NoSuchAlgorithmException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @TO@ try {  return createHash(requestNonce);} catch (NoSuchAlgorithmException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_NONCE_ERROR_CODE);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString());} @AT@ 11673 @LENGTH@ 253


UPD ReturnStatement@@MethodInvocation:this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ MethodInvocation:this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 11458 @LENGTH@ 558
---UPD MethodInvocation@@this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap((authentication) -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 11465 @LENGTH@ 550
------UPD MethodInvocation@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, (e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @TO@ MethodName:onErrorMap:[OAuth2AuthorizationException.class, (ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())] @AT@ 11465 @LENGTH@ 185
---------UPD LambdaExpression@@(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @TO@ (ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString()) @AT@ 11570 @LENGTH@ 79
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 11571 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 11571 @LENGTH@ 1
------------UPD ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @TO@ OAuth2AuthenticationException[ex.getError(), ex.getError().toString()] @AT@ 11577 @LENGTH@ 72
---------------UPD MethodInvocation@@e.getError() @TO@ ex.getError() @AT@ 11611 @LENGTH@ 12
------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 11611 @LENGTH@ 1
---------------UPD MethodInvocation@@e.getError().toString() @TO@ ex.getError().toString() @AT@ 11625 @LENGTH@ 23
------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 11625 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap((matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @TO@ MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap((matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @AT@ 10636 @LENGTH@ 628
---UPD MethodInvocation@@this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap((matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @TO@ this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap((matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @AT@ 10643 @LENGTH@ 620
------UPD MethodInvocation@@MethodName:flatMap:[(matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))] @TO@ MethodName:flatMap:[(matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString()))] @AT@ 10643 @LENGTH@ 330
---------UPD LambdaExpression@@(matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())) @TO@ (matchResult) -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())) @AT@ 10768 @LENGTH@ 204
------------UPD MethodInvocation@@this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())) @TO@ this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())) @AT@ 10785 @LENGTH@ 187
---------------UPD SimpleName@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, (e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @TO@ MethodName:onErrorMap:[OAuth2AuthorizationException.class, (ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString())] @AT@ 10832 @LENGTH@ 140
------------------UPD LambdaExpression@@(e) -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @TO@ (ex) -> new OAuth2AuthenticationException(ex.getError(),ex.getError().toString()) @AT@ 10892 @LENGTH@ 79
---------------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 10893 @LENGTH@ 1
------------------------UPD SimpleName@@e @TO@ ex @AT@ 10893 @LENGTH@ 1
---------------------UPD ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @TO@ OAuth2AuthenticationException[ex.getError(), ex.getError().toString()] @AT@ 10899 @LENGTH@ 72
------------------------UPD MethodInvocation@@e.getError() @TO@ ex.getError() @AT@ 10933 @LENGTH@ 12
---------------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 10933 @LENGTH@ 1
------------------------UPD MethodInvocation@@e.getError().toString() @TO@ ex.getError().toString() @AT@ 10947 @LENGTH@ 23
---------------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 10947 @LENGTH@ 1


UPD FieldDeclaration@@public, static, DefaultExceptionPolicyStrategy, [INSTANCE=new DefaultExceptionPolicyStrategy()] @TO@ public, static, final, DefaultExceptionPolicyStrategy, [INSTANCE=new DefaultExceptionPolicyStrategy()] @AT@ 2846 @LENGTH@ 93
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, DefaultExceptionPolicyStrategy, [INSTANCE=new DefaultExceptionPolicyStrategy()] @AT@ 2860 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @TO@ TypeDeclaration@@[public]TestHiveAuthorizerCheckInvocation,  @AT@ 9568 @LENGTH@ 794
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9568 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9575 @LENGTH@ 4
---INS SimpleName@@MethodName:testWindowingFunction @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9580 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9611 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:reset(mockedAuthorizer) @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9628 @LENGTH@ 24
------INS MethodInvocation@@reset(mockedAuthorizer) @TO@ ExpressionStatement@@MethodInvocation:reset(mockedAuthorizer) @AT@ 9628 @LENGTH@ 23
---------INS SimpleName@@MethodName:reset:[mockedAuthorizer] @TO@ MethodInvocation@@reset(mockedAuthorizer) @AT@ 9628 @LENGTH@ 23
------------INS SimpleName@@mockedAuthorizer @TO@ SimpleName@@MethodName:reset:[mockedAuthorizer] @AT@ 9634 @LENGTH@ 16
---INS VariableDeclarationStatement@@int status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true); @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9657 @LENGTH@ 106
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true); @AT@ 9657 @LENGTH@ 3
------INS VariableDeclarationFragment@@status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @TO@ VariableDeclarationStatement@@int status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true); @AT@ 9661 @LENGTH@ 101
---------INS SimpleName@@status @TO@ VariableDeclarationFragment@@status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @AT@ 9661 @LENGTH@ 6
---------INS MethodInvocation@@driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @TO@ VariableDeclarationFragment@@status=driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @AT@ 9670 @LENGTH@ 92
------------INS SimpleName@@Name:driver @TO@ MethodInvocation@@driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @AT@ 9670 @LENGTH@ 6
------------INS SimpleName@@MethodName:compile:["select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName, true] @TO@ MethodInvocation@@driver.compile("select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName,true) @AT@ 9677 @LENGTH@ 85
---------------INS InfixExpression@@"select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName @TO@ SimpleName@@MethodName:compile:["select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName, true] @AT@ 9685 @LENGTH@ 70
------------------INS StringLiteral@@"select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " @TO@ InfixExpression@@"select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName @AT@ 9685 @LENGTH@ 58
------------------INS Operator@@+ @TO@ InfixExpression@@"select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName @AT@ 9743 @LENGTH@ 1
------------------INS SimpleName@@tableName @TO@ InfixExpression@@"select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName @AT@ 9746 @LENGTH@ 9
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:compile:["select AVG(`i`) OVER (PARTITION BY `city`) AS iavg FROM " + tableName, true] @AT@ 9757 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals(0,status) @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9768 @LENGTH@ 24
------INS MethodInvocation@@assertEquals(0,status) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(0,status) @AT@ 9768 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertEquals:[0, status] @TO@ MethodInvocation@@assertEquals(0,status) @AT@ 9768 @LENGTH@ 23
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[0, status] @AT@ 9781 @LENGTH@ 1
------------INS SimpleName@@status @TO@ SimpleName@@MethodName:assertEquals:[0, status] @AT@ 9784 @LENGTH@ 6
---INS VariableDeclarationStatement@@List<HivePrivilegeObject> inputs=getHivePrivilegeObjectInputs().getLeft(); @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9798 @LENGTH@ 76
------INS ParameterizedType@@List<HivePrivilegeObject> @TO@ VariableDeclarationStatement@@List<HivePrivilegeObject> inputs=getHivePrivilegeObjectInputs().getLeft(); @AT@ 9798 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<HivePrivilegeObject> @AT@ 9798 @LENGTH@ 4
---------INS SimpleType@@HivePrivilegeObject @TO@ ParameterizedType@@List<HivePrivilegeObject> @AT@ 9803 @LENGTH@ 19
------INS VariableDeclarationFragment@@inputs=getHivePrivilegeObjectInputs().getLeft() @TO@ VariableDeclarationStatement@@List<HivePrivilegeObject> inputs=getHivePrivilegeObjectInputs().getLeft(); @AT@ 9824 @LENGTH@ 49
---------INS SimpleName@@inputs @TO@ VariableDeclarationFragment@@inputs=getHivePrivilegeObjectInputs().getLeft() @AT@ 9824 @LENGTH@ 6
---------INS MethodInvocation@@getHivePrivilegeObjectInputs().getLeft() @TO@ VariableDeclarationFragment@@inputs=getHivePrivilegeObjectInputs().getLeft() @AT@ 9833 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:getHivePrivilegeObjectInputs:[] @TO@ MethodInvocation@@getHivePrivilegeObjectInputs().getLeft() @AT@ 9833 @LENGTH@ 30
------------INS SimpleName@@MethodName:getLeft:[] @TO@ MethodInvocation@@getHivePrivilegeObjectInputs().getLeft() @AT@ 9864 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:checkSingleTableInput(inputs) @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9879 @LENGTH@ 30
------INS MethodInvocation@@checkSingleTableInput(inputs) @TO@ ExpressionStatement@@MethodInvocation:checkSingleTableInput(inputs) @AT@ 9879 @LENGTH@ 29
---------INS SimpleName@@MethodName:checkSingleTableInput:[inputs] @TO@ MethodInvocation@@checkSingleTableInput(inputs) @AT@ 9879 @LENGTH@ 29
------------INS SimpleName@@inputs @TO@ SimpleName@@MethodName:checkSingleTableInput:[inputs] @AT@ 9901 @LENGTH@ 6
---INS VariableDeclarationStatement@@HivePrivilegeObject tableObj=inputs.get(0); @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 9914 @LENGTH@ 45
------INS SimpleType@@HivePrivilegeObject @TO@ VariableDeclarationStatement@@HivePrivilegeObject tableObj=inputs.get(0); @AT@ 9914 @LENGTH@ 19
------INS VariableDeclarationFragment@@tableObj=inputs.get(0) @TO@ VariableDeclarationStatement@@HivePrivilegeObject tableObj=inputs.get(0); @AT@ 9934 @LENGTH@ 24
---------INS SimpleName@@tableObj @TO@ VariableDeclarationFragment@@tableObj=inputs.get(0) @AT@ 9934 @LENGTH@ 8
---------INS MethodInvocation@@inputs.get(0) @TO@ VariableDeclarationFragment@@tableObj=inputs.get(0) @AT@ 9945 @LENGTH@ 13
------------INS SimpleName@@Name:inputs @TO@ MethodInvocation@@inputs.get(0) @AT@ 9945 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@inputs.get(0) @AT@ 9952 @LENGTH@ 6
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 9956 @LENGTH@ 1
---INS EnhancedForStatement@@for (HivePrivilegeObject obj : inputs) {  assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX));} @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 10063 @LENGTH@ 122
------INS SingleVariableDeclaration@@HivePrivilegeObject obj @TO@ EnhancedForStatement@@for (HivePrivilegeObject obj : inputs) {  assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX));} @AT@ 10068 @LENGTH@ 23
---------INS SimpleType@@HivePrivilegeObject @TO@ SingleVariableDeclaration@@HivePrivilegeObject obj @AT@ 10068 @LENGTH@ 19
---------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@HivePrivilegeObject obj @AT@ 10088 @LENGTH@ 3
------INS SimpleName@@inputs @TO@ EnhancedForStatement@@for (HivePrivilegeObject obj : inputs) {  assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX));} @AT@ 10094 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)) @TO@ EnhancedForStatement@@for (HivePrivilegeObject obj : inputs) {  assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX));} @AT@ 10110 @LENGTH@ 69
---------INS MethodInvocation@@assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)) @AT@ 10110 @LENGTH@ 68
------------INS SimpleName@@MethodName:assertTrue:[!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)] @TO@ MethodInvocation@@assertTrue(!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)) @AT@ 10110 @LENGTH@ 68
---------------INS PrefixExpression@@!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @TO@ SimpleName@@MethodName:assertTrue:[!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX)] @AT@ 10121 @LENGTH@ 56
------------------INS Operator@@! @TO@ PrefixExpression@@!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 10121 @LENGTH@ 1
------------------INS MethodInvocation@@obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @TO@ PrefixExpression@@!obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 10122 @LENGTH@ 55
---------------------INS MethodInvocation@@MethodName:getDbname:[] @TO@ MethodInvocation@@obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 10122 @LENGTH@ 15
---------------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 10122 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:startsWith:[Registry.WINDOW_FUNC_PREFIX] @TO@ MethodInvocation@@obj.getDbname().startsWith(Registry.WINDOW_FUNC_PREFIX) @AT@ 10138 @LENGTH@ 39
------------------------INS QualifiedName@@Registry.WINDOW_FUNC_PREFIX @TO@ SimpleName@@MethodName:startsWith:[Registry.WINDOW_FUNC_PREFIX] @AT@ 10149 @LENGTH@ 27
---------------------------INS SimpleName@@Registry @TO@ QualifiedName@@Registry.WINDOW_FUNC_PREFIX @AT@ 10149 @LENGTH@ 8
---------------------------INS SimpleName@@WINDOW_FUNC_PREFIX @TO@ QualifiedName@@Registry.WINDOW_FUNC_PREFIX @AT@ 10158 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertEquals("no of columns used",2,tableObj.getColumns().size()) @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 10190 @LENGTH@ 68
------INS MethodInvocation@@assertEquals("no of columns used",2,tableObj.getColumns().size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("no of columns used",2,tableObj.getColumns().size()) @AT@ 10190 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertEquals:["no of columns used", 2, tableObj.getColumns().size()] @TO@ MethodInvocation@@assertEquals("no of columns used",2,tableObj.getColumns().size()) @AT@ 10190 @LENGTH@ 67
------------INS StringLiteral@@"no of columns used" @TO@ SimpleName@@MethodName:assertEquals:["no of columns used", 2, tableObj.getColumns().size()] @AT@ 10203 @LENGTH@ 20
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:["no of columns used", 2, tableObj.getColumns().size()] @AT@ 10225 @LENGTH@ 1
------------INS MethodInvocation@@tableObj.getColumns().size() @TO@ SimpleName@@MethodName:assertEquals:["no of columns used", 2, tableObj.getColumns().size()] @AT@ 10228 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:getColumns:[] @TO@ MethodInvocation@@tableObj.getColumns().size() @AT@ 10228 @LENGTH@ 21
---------------INS SimpleName@@Name:tableObj @TO@ MethodInvocation@@tableObj.getColumns().size() @AT@ 10228 @LENGTH@ 8
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@tableObj.getColumns().size() @AT@ 10250 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("Columns used",Arrays.asList("city","i"),getSortedList(tableObj.getColumns())) @TO@ MethodDeclaration@@public, void, MethodName:testWindowingFunction, Exception,  @AT@ 10263 @LENGTH@ 95
------INS MethodInvocation@@assertEquals("Columns used",Arrays.asList("city","i"),getSortedList(tableObj.getColumns())) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Columns used",Arrays.asList("city","i"),getSortedList(tableObj.getColumns())) @AT@ 10263 @LENGTH@ 94
---------INS SimpleName@@MethodName:assertEquals:["Columns used", Arrays.asList("city","i"), getSortedList(tableObj.getColumns())] @TO@ MethodInvocation@@assertEquals("Columns used",Arrays.asList("city","i"),getSortedList(tableObj.getColumns())) @AT@ 10263 @LENGTH@ 94
------------INS StringLiteral@@"Columns used" @TO@ SimpleName@@MethodName:assertEquals:["Columns used", Arrays.asList("city","i"), getSortedList(tableObj.getColumns())] @AT@ 10276 @LENGTH@ 14
------------INS MethodInvocation@@Arrays.asList("city","i") @TO@ SimpleName@@MethodName:assertEquals:["Columns used", Arrays.asList("city","i"), getSortedList(tableObj.getColumns())] @AT@ 10292 @LENGTH@ 26
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("city","i") @AT@ 10292 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["city", "i"] @TO@ MethodInvocation@@Arrays.asList("city","i") @AT@ 10299 @LENGTH@ 19
------------------INS StringLiteral@@"city" @TO@ SimpleName@@MethodName:asList:["city", "i"] @AT@ 10306 @LENGTH@ 6
------------------INS StringLiteral@@"i" @TO@ SimpleName@@MethodName:asList:["city", "i"] @AT@ 10314 @LENGTH@ 3
------------INS MethodInvocation@@getSortedList(tableObj.getColumns()) @TO@ SimpleName@@MethodName:assertEquals:["Columns used", Arrays.asList("city","i"), getSortedList(tableObj.getColumns())] @AT@ 10320 @LENGTH@ 36
---------------INS SimpleName@@MethodName:getSortedList:[tableObj.getColumns()] @TO@ MethodInvocation@@getSortedList(tableObj.getColumns()) @AT@ 10320 @LENGTH@ 36
------------------INS MethodInvocation@@tableObj.getColumns() @TO@ SimpleName@@MethodName:getSortedList:[tableObj.getColumns()] @AT@ 10334 @LENGTH@ 21
---------------------INS SimpleName@@Name:tableObj @TO@ MethodInvocation@@tableObj.getColumns() @AT@ 10334 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getColumns:[] @TO@ MethodInvocation@@tableObj.getColumns() @AT@ 10343 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(bean.getBody(),"SomeBody","body") @TO@ MethodInvocation:assertEquals("SomeBody",bean.getBody(),"body") @AT@ 2137 @LENGTH@ 49
---UPD MethodInvocation@@assertEquals(bean.getBody(),"SomeBody","body") @TO@ assertEquals("SomeBody",bean.getBody(),"body") @AT@ 2137 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertEquals:[bean.getBody(), "SomeBody", "body"] @TO@ MethodName:assertEquals:["SomeBody", bean.getBody(), "body"] @AT@ 2137 @LENGTH@ 48
---------INS StringLiteral@@"SomeBody" @TO@ SimpleName@@MethodName:assertEquals:[bean.getBody(), "SomeBody", "body"] @AT@ 2150 @LENGTH@ 10
---------DEL StringLiteral@@"SomeBody" @AT@ 2166 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(documentString) @TO@ MethodInvocation:exchange.getMessage().setBody(documentString) @AT@ 2936 @LENGTH@ 42
---UPD MethodInvocation@@exchange.getOut().setBody(documentString) @TO@ exchange.getMessage().setBody(documentString) @AT@ 2936 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2936 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ MethodInvocation:assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 2599 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 2599 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @TO@ MethodName:assertEquals:["John", response.getName(), "Get a wrong customer name"] @AT@ 2599 @LENGTH@ 69
---------INS StringLiteral@@"John" @TO@ SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @AT@ 2612 @LENGTH@ 6
---------DEL StringLiteral@@"John" @AT@ 2632 @LENGTH@ 6


UPD MethodDeclaration@@public, static, void, MethodName:setCacheZstdAvailability, final boolean doCache,  @TO@ public, static, void, MethodName:setCacheZstdAvailablity, final boolean doCache,  @AT@ 2946 @LENGTH@ 468
---UPD SimpleName@@MethodName:setCacheZstdAvailability @TO@ MethodName:setCacheZstdAvailablity @AT@ 2965 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:from("file://target/data/renameissue?noop=false&initialDelay=0&delay=10").setProperty("PartitionID").simple("${file:name}").convertBodyTo(String.class).inOut("direct:source").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    log.info("The exchange's IN body as String is {}",exchange.getIn().getBody(String.class));
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file://target/data/renameissue?noop=false&initialDelay=0&delay=10").setProperty("PartitionID").simple("${file:name}").convertBodyTo(String.class).to(ExchangePattern.InOut,"direct:source").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    log.info("The exchange's IN body as String is {}",exchange.getIn().getBody(String.class));
  }
}
).to("mock:result") @AT@ 1989 @LENGTH@ 536
---UPD MethodInvocation@@from("file://target/data/renameissue?noop=false&initialDelay=0&delay=10").setProperty("PartitionID").simple("${file:name}").convertBodyTo(String.class).inOut("direct:source").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    log.info("The exchange's IN body as String is {}",exchange.getIn().getBody(String.class));
  }
}
).to("mock:result") @TO@ from("file://target/data/renameissue?noop=false&initialDelay=0&delay=10").setProperty("PartitionID").simple("${file:name}").convertBodyTo(String.class).to(ExchangePattern.InOut,"direct:source").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    log.info("The exchange's IN body as String is {}",exchange.getIn().getBody(String.class));
  }
}
).to("mock:result") @AT@ 1989 @LENGTH@ 535
------UPD MethodInvocation@@MethodName:inOut:["direct:source"] @TO@ MethodName:to:[ExchangePattern.InOut, "direct:source"] @AT@ 1989 @LENGTH@ 224
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["direct:source"] @AT@ 2235 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2235 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2251 @LENGTH@ 5


UPD FieldDeclaration@@private, Integer, [count=new Integer(1)] @TO@ private, Integer, [count=Integer.valueOf(1)] @AT@ 1124 @LENGTH@ 39
---UPD VariableDeclarationFragment@@count=new Integer(1) @TO@ count=Integer.valueOf(1) @AT@ 1140 @LENGTH@ 22
------DEL ClassInstanceCreation@@Integer[1] @AT@ 1148 @LENGTH@ 14
---------DEL New@@new @AT@ 1148 @LENGTH@ 3
---------DEL SimpleType@@Integer @AT@ 1152 @LENGTH@ 7
---------DEL NumberLiteral@@1 @AT@ 1160 @LENGTH@ 1
------INS MethodInvocation@@Integer.valueOf(1) @TO@ VariableDeclarationFragment@@count=new Integer(1) @AT@ 1152 @LENGTH@ 18
---------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 1152 @LENGTH@ 7
---------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 1160 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 1168 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:privateChat=chatManager.chatWith(JidCreate.entityBareFrom(endpoint.getChatId())) @TO@ Assignment:privateChat=chatManager.chatWith(JidCreate.entityBareFrom(endpoint.resolveParticipant(connection))) @AT@ 4026 @LENGTH@ 83
---UPD Assignment@@privateChat=chatManager.chatWith(JidCreate.entityBareFrom(endpoint.getChatId())) @TO@ privateChat=chatManager.chatWith(JidCreate.entityBareFrom(endpoint.resolveParticipant(connection))) @AT@ 4026 @LENGTH@ 82
------UPD MethodInvocation@@chatManager.chatWith(JidCreate.entityBareFrom(endpoint.getChatId())) @TO@ chatManager.chatWith(JidCreate.entityBareFrom(endpoint.resolveParticipant(connection))) @AT@ 4040 @LENGTH@ 68
---------UPD SimpleName@@MethodName:chatWith:[JidCreate.entityBareFrom(endpoint.getChatId())] @TO@ MethodName:chatWith:[JidCreate.entityBareFrom(endpoint.resolveParticipant(connection))] @AT@ 4052 @LENGTH@ 56
------------UPD MethodInvocation@@JidCreate.entityBareFrom(endpoint.getChatId()) @TO@ JidCreate.entityBareFrom(endpoint.resolveParticipant(connection)) @AT@ 4061 @LENGTH@ 46
---------------UPD SimpleName@@MethodName:entityBareFrom:[endpoint.getChatId()] @TO@ MethodName:entityBareFrom:[endpoint.resolveParticipant(connection)] @AT@ 4071 @LENGTH@ 36
------------------UPD MethodInvocation@@endpoint.getChatId() @TO@ endpoint.resolveParticipant(connection) @AT@ 4086 @LENGTH@ 20
---------------------UPD SimpleName@@MethodName:getChatId:[] @TO@ MethodName:resolveParticipant:[connection] @AT@ 4095 @LENGTH@ 11
------------------------INS SimpleName@@connection @TO@ SimpleName@@MethodName:getChatId:[] @AT@ 4114 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(2),twitterEndpoint.getProperties().getNumberOfPages()) @TO@ MethodInvocation:assertEquals(Integer.valueOf(2),twitterEndpoint.getProperties().getNumberOfPages()) @AT@ 2781 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(new Integer(2),twitterEndpoint.getProperties().getNumberOfPages()) @TO@ assertEquals(Integer.valueOf(2),twitterEndpoint.getProperties().getNumberOfPages()) @AT@ 2781 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[new Integer(2), twitterEndpoint.getProperties().getNumberOfPages()] @TO@ MethodName:assertEquals:[Integer.valueOf(2), twitterEndpoint.getProperties().getNumberOfPages()] @AT@ 2781 @LENGTH@ 80
---------DEL ClassInstanceCreation@@Integer[2] @AT@ 2794 @LENGTH@ 14
------------DEL New@@new @AT@ 2794 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2798 @LENGTH@ 7
------------DEL NumberLiteral@@2 @AT@ 2806 @LENGTH@ 1
---------INS MethodInvocation@@Integer.valueOf(2) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(2), twitterEndpoint.getProperties().getNumberOfPages()] @AT@ 2798 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(2) @AT@ 2798 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[2] @TO@ MethodInvocation@@Integer.valueOf(2) @AT@ 2806 @LENGTH@ 10
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:valueOf:[2] @AT@ 2814 @LENGTH@ 1


UPD Block@@SyncBody:{  if (this.processedBeans.contains(beanName)) {    return bean;  }  Method[] methods;  try {    methods=bean.getClass().getMethods();  } catch (  Exception ex) {    throw new IllegalStateException(ex.getMessage());  }  for (  Method method : methods) {    for (    PointcutExpression expression : this.pointCutExpressions) {      if (attemptMatch(bean.getClass(),method,expression,beanName)) {        break;      }    }  }  this.processedBeans.add(beanName);} @TO@ SyncBody:{  if (this.processedBeans.contains(beanName)) {    return bean;  }  Method[] methods=getBeanMethods(bean);  for (  Method method : methods) {    for (    PointcutExpression expression : this.pointCutExpressions) {      if (attemptMatch(bean.getClass(),method,expression,beanName)) {        break;      }    }  }  this.processedBeans.add(beanName);} @AT@ 4889 @LENGTH@ 855
---UPD VariableDeclarationStatement@@Method[] methods; @TO@ Method[] methods=getBeanMethods(bean); @AT@ 5049 @LENGTH@ 17
------UPD VariableDeclarationFragment@@methods @TO@ methods=getBeanMethods(bean) @AT@ 5058 @LENGTH@ 7
---------INS MethodInvocation@@getBeanMethods(bean) @TO@ VariableDeclarationFragment@@methods @AT@ 5065 @LENGTH@ 20
------------INS SimpleName@@MethodName:getBeanMethods:[bean] @TO@ MethodInvocation@@getBeanMethods(bean) @AT@ 5065 @LENGTH@ 20
---------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:getBeanMethods:[bean] @AT@ 5080 @LENGTH@ 4
---UPD TryStatement@@try {  methods=bean.getClass().getMethods();} catch (Exception ex) {  throw new IllegalStateException(ex.getMessage());} @TO@ try {  return bean.getClass().getMethods();} catch (Exception ex) {  throw new IllegalStateException(ex.getMessage());} @AT@ 5070 @LENGTH@ 139


INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("PreAuthenticated J2EE principal: %s",principal)) @TO@ MethodDeclaration@@protected, Object, MethodName:getPreAuthenticatedPrincipal, HttpServletRequest httpRequest,  @AT@ 1503 @LENGTH@ 87
---MOV MethodInvocation@@this.logger.debug("PreAuthenticated J2EE principal: " + principal) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("PreAuthenticated J2EE principal: %s",principal)) @AT@ 1494 @LENGTH@ 66
------UPD SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @TO@ MethodName:format:["PreAuthenticated J2EE principal: %s", principal] @AT@ 1506 @LENGTH@ 54
------INS SimpleName@@MethodName:debug:[LogMessage.format("PreAuthenticated J2EE principal: %s",principal)] @TO@ MethodInvocation@@this.logger.debug("PreAuthenticated J2EE principal: " + principal) @AT@ 1515 @LENGTH@ 74
---------INS MethodInvocation@@LogMessage.format("PreAuthenticated J2EE principal: %s",principal) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("PreAuthenticated J2EE principal: %s",principal)] @AT@ 1521 @LENGTH@ 67
------------MOV SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated J2EE principal: %s",principal) @AT@ 1506 @LENGTH@ 54
---------------DEL InfixExpression@@"PreAuthenticated J2EE principal: " + principal @AT@ 1512 @LENGTH@ 47
------------------DEL StringLiteral@@"PreAuthenticated J2EE principal: " @AT@ 1512 @LENGTH@ 35
------------------DEL Operator@@+ @AT@ 1547 @LENGTH@ 1
------------------DEL SimpleName@@principal @AT@ 1550 @LENGTH@ 9
---------------INS StringLiteral@@"PreAuthenticated J2EE principal: %s" @TO@ SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @AT@ 1539 @LENGTH@ 37
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @AT@ 1578 @LENGTH@ 9
------------MOV SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated J2EE principal: %s",principal) @AT@ 1506 @LENGTH@ 54
---------------DEL InfixExpression@@"PreAuthenticated J2EE principal: " + principal @AT@ 1512 @LENGTH@ 47
------------------DEL StringLiteral@@"PreAuthenticated J2EE principal: " @AT@ 1512 @LENGTH@ 35
------------------DEL Operator@@+ @AT@ 1547 @LENGTH@ 1
------------------DEL SimpleName@@principal @AT@ 1550 @LENGTH@ 9
---------------INS StringLiteral@@"PreAuthenticated J2EE principal: %s" @TO@ SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @AT@ 1539 @LENGTH@ 37
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:debug:["PreAuthenticated J2EE principal: " + principal] @AT@ 1578 @LENGTH@ 9
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated J2EE principal: %s",principal) @AT@ 1521 @LENGTH@ 10


UPD FieldDeclaration@@private, static, final, Double, [VALUE=new Long(System.currentTimeMillis()).doubleValue()] @TO@ private, static, final, Double, [VALUE=Long.valueOf(System.currentTimeMillis()).doubleValue()] @AT@ 1714 @LENGTH@ 87
---UPD VariableDeclarationFragment@@VALUE=new Long(System.currentTimeMillis()).doubleValue() @TO@ VALUE=Long.valueOf(System.currentTimeMillis()).doubleValue() @AT@ 1742 @LENGTH@ 58
------UPD MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @TO@ Long.valueOf(System.currentTimeMillis()).doubleValue() @AT@ 1750 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:valueOf:[System.currentTimeMillis()] @TO@ MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @AT@ 1750 @LENGTH@ 40
------------INS MethodInvocation@@System.currentTimeMillis() @TO@ MethodInvocation@@MethodName:valueOf:[System.currentTimeMillis()] @AT@ 1763 @LENGTH@ 26
---------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1759 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1766 @LENGTH@ 19
---------DEL ClassInstanceCreation@@Long[System.currentTimeMillis()] @AT@ 1750 @LENGTH@ 36
------------DEL New@@new @AT@ 1750 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 1754 @LENGTH@ 4
------------DEL MethodInvocation@@System.currentTimeMillis() @AT@ 1759 @LENGTH@ 26
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @AT@ 1750 @LENGTH@ 4


UPD ExpressionStatement@@ClassInstanceCreation:new OrMessageMatcher<>((MessageMatcher<Object>[])new MessageMatcher[0]) @TO@ ClassInstanceCreation:new OrMessageMatcher<>(new MessageMatcher[0]) @AT@ 1721 @LENGTH@ 73
---UPD ClassInstanceCreation@@OrMessageMatcher<>[(MessageMatcher<Object>[])new MessageMatcher[0]] @TO@ OrMessageMatcher<>[new MessageMatcher[0]] @AT@ 1721 @LENGTH@ 72
------DEL CastExpression@@(MessageMatcher<Object>[])new MessageMatcher[0] @AT@ 1744 @LENGTH@ 48
---------DEL ArrayType@@MessageMatcher<Object>[] @AT@ 1745 @LENGTH@ 24
------------DEL ParameterizedType@@MessageMatcher<Object> @AT@ 1745 @LENGTH@ 22
---------------DEL SimpleType@@MessageMatcher @AT@ 1745 @LENGTH@ 14
---------------DEL SimpleType@@Object @AT@ 1760 @LENGTH@ 6
------MOV ArrayCreation@@new MessageMatcher[0] @TO@ ClassInstanceCreation@@OrMessageMatcher<>[(MessageMatcher<Object>[])new MessageMatcher[0]] @AT@ 1771 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:this.requireCsrfProtectionMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).filter((matchResult) -> !exchange.getAttributes().containsKey(CsrfToken.class.getName())).flatMap((m) -> validateToken(exchange)).flatMap((m) -> continueFilterChain(exchange,chain)).switchIfEmpty(continueFilterChain(exchange,chain).then(Mono.empty())).onErrorResume(CsrfException.class,(e) -> this.accessDeniedHandler.handle(exchange,e)) @TO@ MethodInvocation:this.requireCsrfProtectionMatcher.matches(exchange).filter(MatchResult::isMatch).filter((matchResult) -> !exchange.getAttributes().containsKey(CsrfToken.class.getName())).flatMap((m) -> validateToken(exchange)).flatMap((m) -> continueFilterChain(exchange,chain)).switchIfEmpty(continueFilterChain(exchange,chain).then(Mono.empty())).onErrorResume(CsrfException.class,(ex) -> this.accessDeniedHandler.handle(exchange,ex)) @AT@ 4870 @LENGTH@ 468
---UPD MethodInvocation@@this.requireCsrfProtectionMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).filter((matchResult) -> !exchange.getAttributes().containsKey(CsrfToken.class.getName())).flatMap((m) -> validateToken(exchange)).flatMap((m) -> continueFilterChain(exchange,chain)).switchIfEmpty(continueFilterChain(exchange,chain).then(Mono.empty())).onErrorResume(CsrfException.class,(e) -> this.accessDeniedHandler.handle(exchange,e)) @TO@ this.requireCsrfProtectionMatcher.matches(exchange).filter(MatchResult::isMatch).filter((matchResult) -> !exchange.getAttributes().containsKey(CsrfToken.class.getName())).flatMap((m) -> validateToken(exchange)).flatMap((m) -> continueFilterChain(exchange,chain)).switchIfEmpty(continueFilterChain(exchange,chain).then(Mono.empty())).onErrorResume(CsrfException.class,(ex) -> this.accessDeniedHandler.handle(exchange,ex)) @AT@ 4877 @LENGTH@ 460
------UPD MethodInvocation@@MethodName:filter:[(matchResult) -> matchResult.isMatch()] @TO@ MethodName:filter:[MatchResult::isMatch] @AT@ 4877 @LENGTH@ 98
---------DEL LambdaExpression@@(matchResult) -> matchResult.isMatch() @AT@ 4936 @LENGTH@ 38
------------DEL VariableDeclarationFragment@@matchResult @AT@ 4937 @LENGTH@ 11
---------------DEL SimpleName@@matchResult @AT@ 4937 @LENGTH@ 11
------------DEL MethodInvocation@@matchResult.isMatch() @AT@ 4953 @LENGTH@ 21
---------------DEL SimpleName@@Name:matchResult @AT@ 4953 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:isMatch:[] @AT@ 4965 @LENGTH@ 9
------UPD SimpleName@@MethodName:onErrorResume:[CsrfException.class, (e) -> this.accessDeniedHandler.handle(exchange,e)] @TO@ MethodName:onErrorResume:[CsrfException.class, (ex) -> this.accessDeniedHandler.handle(exchange,ex)] @AT@ 5250 @LENGTH@ 87
---------UPD LambdaExpression@@(e) -> this.accessDeniedHandler.handle(exchange,e) @TO@ (ex) -> this.accessDeniedHandler.handle(exchange,ex) @AT@ 5285 @LENGTH@ 51
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 5286 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 5286 @LENGTH@ 1
------------UPD MethodInvocation@@this.accessDeniedHandler.handle(exchange,e) @TO@ this.accessDeniedHandler.handle(exchange,ex) @AT@ 5292 @LENGTH@ 44
---------------UPD SimpleName@@MethodName:handle:[exchange, e] @TO@ MethodName:handle:[exchange, ex] @AT@ 5317 @LENGTH@ 19
------------------UPD SimpleName@@e @TO@ ex @AT@ 5334 @LENGTH@ 1


DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas);} @AT@ 3056 @LENGTH@ 148
---DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 3060 @LENGTH@ 28
------DEL FieldAccess@@this.logger @AT@ 3060 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 3060 @LENGTH@ 4
---------DEL SimpleName@@logger @AT@ 3065 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3072 @LENGTH@ 16
---DEL Block@@ThenBody:{  this.logger.debug("WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas);} @AT@ 3090 @LENGTH@ 114
------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("WebSphere groups: " + webSphereGroups + " mapped to Granted Authorities: "+ userGas) @AT@ 3095 @LENGTH@ 105


UPD EnhancedForStatement@@for (String query : compactionQueries) {  LOG.info("Running {} compaction via query: {}",compactionInfo.isMajorCompaction() ? "major" : "minor",query);  DriverUtils.runOnDriver(conf,user,sessionState,query,writeIds,compactorTxnId);} @TO@ for (String query : compactionQueries) {  LOG.info("Running {} compaction via query: {}",compactionInfo.isMajorCompaction() ? "major" : "minor",query);  if (!compactionInfo.isMajorCompaction()) {    conf.set("hive.optimize.bucketingsorting","false");    conf.set("hive.vectorized.execution.enabled","false");  }  DriverUtils.runOnDriver(conf,user,sessionState,query,writeIds,compactorTxnId);} @AT@ 5657 @LENGTH@ 260
---INS IfStatement@@if (!compactionInfo.isMajorCompaction()) {  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @TO@ EnhancedForStatement@@for (String query : compactionQueries) {  LOG.info("Running {} compaction via query: {}",compactionInfo.isMajorCompaction() ? "major" : "minor",query);  DriverUtils.runOnDriver(conf,user,sessionState,query,writeIds,compactorTxnId);} @AT@ 5826 @LENGTH@ 1189
------INS PrefixExpression@@!compactionInfo.isMajorCompaction() @TO@ IfStatement@@if (!compactionInfo.isMajorCompaction()) {  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @AT@ 5830 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!compactionInfo.isMajorCompaction() @AT@ 5830 @LENGTH@ 1
---------INS MethodInvocation@@compactionInfo.isMajorCompaction() @TO@ PrefixExpression@@!compactionInfo.isMajorCompaction() @AT@ 5831 @LENGTH@ 34
------------INS SimpleName@@Name:compactionInfo @TO@ MethodInvocation@@compactionInfo.isMajorCompaction() @AT@ 5831 @LENGTH@ 14
------------INS SimpleName@@MethodName:isMajorCompaction:[] @TO@ MethodInvocation@@compactionInfo.isMajorCompaction() @AT@ 5846 @LENGTH@ 19
------INS Block@@ThenBody:{  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @TO@ IfStatement@@if (!compactionInfo.isMajorCompaction()) {  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @AT@ 5867 @LENGTH@ 1148
---------INS ExpressionStatement@@MethodInvocation:conf.set("hive.optimize.bucketingsorting","false") @TO@ Block@@ThenBody:{  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @AT@ 6887 @LENGTH@ 52
------------INS MethodInvocation@@conf.set("hive.optimize.bucketingsorting","false") @TO@ ExpressionStatement@@MethodInvocation:conf.set("hive.optimize.bucketingsorting","false") @AT@ 6887 @LENGTH@ 51
---------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set("hive.optimize.bucketingsorting","false") @AT@ 6887 @LENGTH@ 4
---------------INS SimpleName@@MethodName:set:["hive.optimize.bucketingsorting", "false"] @TO@ MethodInvocation@@conf.set("hive.optimize.bucketingsorting","false") @AT@ 6892 @LENGTH@ 46
------------------INS StringLiteral@@"hive.optimize.bucketingsorting" @TO@ SimpleName@@MethodName:set:["hive.optimize.bucketingsorting", "false"] @AT@ 6896 @LENGTH@ 32
------------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:set:["hive.optimize.bucketingsorting", "false"] @AT@ 6930 @LENGTH@ 7
---------INS ExpressionStatement@@MethodInvocation:conf.set("hive.vectorized.execution.enabled","false") @TO@ Block@@ThenBody:{  conf.set("hive.optimize.bucketingsorting","false");  conf.set("hive.vectorized.execution.enabled","false");} @AT@ 6950 @LENGTH@ 55
------------INS MethodInvocation@@conf.set("hive.vectorized.execution.enabled","false") @TO@ ExpressionStatement@@MethodInvocation:conf.set("hive.vectorized.execution.enabled","false") @AT@ 6950 @LENGTH@ 54
---------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.set("hive.vectorized.execution.enabled","false") @AT@ 6950 @LENGTH@ 4
---------------INS SimpleName@@MethodName:set:["hive.vectorized.execution.enabled", "false"] @TO@ MethodInvocation@@conf.set("hive.vectorized.execution.enabled","false") @AT@ 6955 @LENGTH@ 49
------------------INS StringLiteral@@"hive.vectorized.execution.enabled" @TO@ SimpleName@@MethodName:set:["hive.vectorized.execution.enabled", "false"] @AT@ 6959 @LENGTH@ 35
------------------INS StringLiteral@@"false" @TO@ SimpleName@@MethodName:set:["hive.vectorized.execution.enabled", "false"] @AT@ 6996 @LENGTH@ 7


UPD MethodDeclaration@@public, static, void, MethodName:setCacheBrotliAvailability, final boolean doCache,  @TO@ public, static, void, MethodName:setCacheBrotliAvailablity, final boolean doCache,  @AT@ 2566 @LENGTH@ 482
---UPD SimpleName@@MethodName:setCacheBrotliAvailability @TO@ MethodName:setCacheBrotliAvailablity @AT@ 2585 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)) @TO@ MethodDeclaration@@public, void, MethodName:writeHeaders, HttpServletRequest request, HttpServletResponse response,  @AT@ 2911 @LENGTH@ 154
---INS MethodInvocation@@this.logger.debug(LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)) @AT@ 2911 @LENGTH@ 153
------INS FieldAccess@@this.logger @TO@ MethodInvocation@@this.logger.debug(LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)) @AT@ 2911 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.logger @AT@ 2911 @LENGTH@ 4
---------INS SimpleName@@logger @TO@ FieldAccess@@this.logger @AT@ 2916 @LENGTH@ 6
------INS SimpleName@@MethodName:debug:[LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)] @TO@ MethodInvocation@@this.logger.debug(LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)) @AT@ 2923 @LENGTH@ 141
---------INS MethodInvocation@@LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher)] @AT@ 2934 @LENGTH@ 129
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher) @AT@ 2934 @LENGTH@ 10
------------INS SimpleName@@MethodName:format:["Not injecting Clear-Site-Data header since it did not match the requestMatcher %s", this.requestMatcher] @TO@ MethodInvocation@@LogMessage.format("Not injecting Clear-Site-Data header since it did not match the requestMatcher %s",this.requestMatcher) @AT@ 2945 @LENGTH@ 118
---------------INS StringLiteral@@"Not injecting Clear-Site-Data header since it did not match the requestMatcher %s" @TO@ SimpleName@@MethodName:format:["Not injecting Clear-Site-Data header since it did not match the requestMatcher %s", this.requestMatcher] @AT@ 2952 @LENGTH@ 83
---------------INS FieldAccess@@this.requestMatcher @TO@ SimpleName@@MethodName:format:["Not injecting Clear-Site-Data header since it did not match the requestMatcher %s", this.requestMatcher] @AT@ 3043 @LENGTH@ 19
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.requestMatcher @AT@ 3043 @LENGTH@ 4
------------------INS SimpleName@@requestMatcher @TO@ FieldAccess@@this.requestMatcher @AT@ 3048 @LENGTH@ 14


DEL MethodDeclaration@@public, String, MethodName:getAmazonHost,  @AT@ 1254 @LENGTH@ 117
---DEL Modifier@@public @AT@ 1254 @LENGTH@ 6
---DEL SimpleType@@String @AT@ 1261 @LENGTH@ 6
---DEL SimpleName@@MethodName:getAmazonHost @AT@ 1268 @LENGTH@ 13
---DEL VariableDeclarationStatement@@final int sqsPort=4576; @AT@ 1294 @LENGTH@ 25
------DEL Modifier@@final @AT@ 1294 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 1300 @LENGTH@ 3
------DEL VariableDeclarationFragment@@sqsPort=4576 @AT@ 1304 @LENGTH@ 14
---------DEL SimpleName@@sqsPort @AT@ 1304 @LENGTH@ 7
---------DEL NumberLiteral@@4576 @AT@ 1314 @LENGTH@ 4
---DEL ReturnStatement@@SuperMethodInvocation:super.getAmazonHost(sqsPort) @AT@ 1329 @LENGTH@ 36
------DEL SuperMethodInvocation@@super.getAmazonHost(sqsPort) @AT@ 1336 @LENGTH@ 28
---------DEL SimpleName@@MethodName:getAmazonHost:[sqsPort] @AT@ 1342 @LENGTH@ 13
---------DEL SimpleName@@sqsPort @AT@ 1356 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertNotNull(exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)) @TO@ MethodInvocation:assertNotNull(exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)) @AT@ 3675 @LENGTH@ 71
---UPD MethodInvocation@@assertNotNull(exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)) @TO@ assertNotNull(exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)) @AT@ 3675 @LENGTH@ 70
------UPD SimpleName@@MethodName:assertNotNull:[exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)] @TO@ MethodName:assertNotNull:[exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)] @AT@ 3675 @LENGTH@ 70
---------UPD MethodInvocation@@exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID) @TO@ exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID) @AT@ 3689 @LENGTH@ 55
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3689 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:inbox").to("mock:inbox").inOnly("activemq:topic:order").bean("orderService","handleOrder") @TO@ MethodInvocation:from("activemq:queue:inbox").to("mock:inbox").to(ExchangePattern.InOnly,"activemq:topic:order").bean("orderService","handleOrder") @AT@ 2882 @LENGTH@ 137
---UPD MethodInvocation@@from("activemq:queue:inbox").to("mock:inbox").inOnly("activemq:topic:order").bean("orderService","handleOrder") @TO@ from("activemq:queue:inbox").to("mock:inbox").to(ExchangePattern.InOnly,"activemq:topic:order").bean("orderService","handleOrder") @AT@ 2882 @LENGTH@ 136
------UPD MethodInvocation@@MethodName:inOnly:["activemq:topic:order"] @TO@ MethodName:to:[ExchangePattern.InOnly, "activemq:topic:order"] @AT@ 2882 @LENGTH@ 76
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:["activemq:topic:order"] @AT@ 2931 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2931 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2947 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(cause.getMessage(),"File already exist: exist/hello.txt. Cannot write new file.") @TO@ MethodInvocation:assertEquals("File already exist: exist/hello.txt. Cannot write new file.",cause.getMessage()) @AT@ 2551 @LENGTH@ 96
---UPD MethodInvocation@@assertEquals(cause.getMessage(),"File already exist: exist/hello.txt. Cannot write new file.") @TO@ assertEquals("File already exist: exist/hello.txt. Cannot write new file.",cause.getMessage()) @AT@ 2551 @LENGTH@ 95
------UPD SimpleName@@MethodName:assertEquals:[cause.getMessage(), "File already exist: exist/hello.txt. Cannot write new file."] @TO@ MethodName:assertEquals:["File already exist: exist/hello.txt. Cannot write new file.", cause.getMessage()] @AT@ 2551 @LENGTH@ 95
---------INS StringLiteral@@"File already exist: exist/hello.txt. Cannot write new file." @TO@ SimpleName@@MethodName:assertEquals:[cause.getMessage(), "File already exist: exist/hello.txt. Cannot write new file."] @AT@ 2564 @LENGTH@ 61
---------DEL StringLiteral@@"File already exist: exist/hello.txt. Cannot write new file." @AT@ 2584 @LENGTH@ 61


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2292 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2292 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2292 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2303 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2310 @LENGTH@ 21


INS MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @TO@ TypeDeclaration@@[public]DefaultServerOAuth2AuthorizationRequestResolver, [ServerOAuth2AuthorizationRequestResolver] @AT@ 6975 @LENGTH@ 820
---INS Modifier@@private @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 6975 @LENGTH@ 7
---INS SimpleType@@OAuth2AuthorizationRequest @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 6983 @LENGTH@ 26
---INS SimpleName@@MethodName:authorizationRequest @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7010 @LENGTH@ 20
---INS SingleVariableDeclaration@@ServerWebExchange exchange @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7031 @LENGTH@ 26
------INS SimpleType@@ServerWebExchange @TO@ SingleVariableDeclaration@@ServerWebExchange exchange @AT@ 7031 @LENGTH@ 17
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@ServerWebExchange exchange @AT@ 7049 @LENGTH@ 8
---INS SingleVariableDeclaration@@ClientRegistration clientRegistration @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7062 @LENGTH@ 37
------INS SimpleType@@ClientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 7062 @LENGTH@ 18
------INS SimpleName@@clientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration clientRegistration @AT@ 7081 @LENGTH@ 18
---MOV VariableDeclarationStatement@@String redirectUriStr=expandRedirectUri(exchange.getRequest(),clientRegistration); @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7105 @LENGTH@ 85
---MOV VariableDeclarationStatement@@Map<String,Object> attributes=new HashMap<>(); @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7194 @LENGTH@ 49
---MOV ExpressionStatement@@MethodInvocation:attributes.put(OAuth2ParameterNames.REGISTRATION_ID,clientRegistration.getRegistrationId()) @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7246 @LENGTH@ 93
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=getBuilder(clientRegistration,attributes); @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7341 @LENGTH@ 88
------INS SimpleType@@OAuth2AuthorizationRequest.Builder @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=getBuilder(clientRegistration,attributes); @AT@ 7341 @LENGTH@ 34
------INS VariableDeclarationFragment@@builder=getBuilder(clientRegistration,attributes) @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=getBuilder(clientRegistration,attributes); @AT@ 7376 @LENGTH@ 52
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=getBuilder(clientRegistration,attributes) @AT@ 7376 @LENGTH@ 7
---------INS MethodInvocation@@getBuilder(clientRegistration,attributes) @TO@ VariableDeclarationFragment@@builder=getBuilder(clientRegistration,attributes) @AT@ 7386 @LENGTH@ 42
------------INS SimpleName@@MethodName:getBuilder:[clientRegistration, attributes] @TO@ MethodInvocation@@getBuilder(clientRegistration,attributes) @AT@ 7386 @LENGTH@ 42
---------------INS SimpleName@@clientRegistration @TO@ SimpleName@@MethodName:getBuilder:[clientRegistration, attributes] @AT@ 7397 @LENGTH@ 18
---------------INS SimpleName@@attributes @TO@ SimpleName@@MethodName:getBuilder:[clientRegistration, attributes] @AT@ 7417 @LENGTH@ 10
---MOV ExpressionStatement@@MethodInvocation:builder.clientId(clientRegistration.getClientId()).authorizationUri(clientRegistration.getProviderDetails().getAuthorizationUri()).redirectUri(redirectUriStr).scopes(clientRegistration.getScopes()).state(this.stateGenerator.generateKey()).attributes(attributes) @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 8660 @LENGTH@ 277
---MOV ExpressionStatement@@MethodInvocation:this.authorizationRequestCustomizer.accept(builder) @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 8941 @LENGTH@ 52
---MOV ReturnStatement@@MethodInvocation:builder.build() @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 8997 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertThat(cacheProperties.getProperty("idleChannelsNotTx")).isEqualTo("2") @TO@ MethodInvocation:await().until(() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
) @AT@ 4776 @LENGTH@ 76
---UPD MethodInvocation@@assertThat(cacheProperties.getProperty("idleChannelsNotTx")).isEqualTo("2") @TO@ await().until(() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
) @AT@ 4776 @LENGTH@ 75
------DEL MethodInvocation@@MethodName:assertThat:[cacheProperties.getProperty("idleChannelsNotTx")] @AT@ 4776 @LENGTH@ 60
---------DEL MethodInvocation@@cacheProperties.getProperty("idleChannelsNotTx") @AT@ 4787 @LENGTH@ 48
------DEL SimpleName@@MethodName:isEqualTo:["2"] @AT@ 4837 @LENGTH@ 14
---------DEL StringLiteral@@"2" @AT@ 4847 @LENGTH@ 3
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@assertThat(cacheProperties.getProperty("idleChannelsNotTx")).isEqualTo("2") @AT@ 4909 @LENGTH@ 7
------INS SimpleName@@MethodName:until:[() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
] @TO@ MethodInvocation@@assertThat(cacheProperties.getProperty("idleChannelsNotTx")).isEqualTo("2") @AT@ 4917 @LENGTH@ 138
---------INS LambdaExpression@@() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
 @TO@ SimpleName@@MethodName:until:[() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
] @AT@ 4923 @LENGTH@ 131
------------INS VariableDeclarationStatement@@Properties props=cf.getCacheProperties(); @TO@ LambdaExpression@@() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
 @AT@ 4934 @LENGTH@ 43
---------------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties props=cf.getCacheProperties(); @AT@ 4934 @LENGTH@ 10
---------------INS VariableDeclarationFragment@@props=cf.getCacheProperties() @TO@ VariableDeclarationStatement@@Properties props=cf.getCacheProperties(); @AT@ 4945 @LENGTH@ 31
------------------INS SimpleName@@props @TO@ VariableDeclarationFragment@@props=cf.getCacheProperties() @AT@ 4945 @LENGTH@ 5
------------------INS MethodInvocation@@cf.getCacheProperties() @TO@ VariableDeclarationFragment@@props=cf.getCacheProperties() @AT@ 4953 @LENGTH@ 23
---------------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getCacheProperties() @AT@ 4953 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:getCacheProperties:[] @TO@ MethodInvocation@@cf.getCacheProperties() @AT@ 4956 @LENGTH@ 20
------------INS ReturnStatement@@InfixExpression:Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @TO@ LambdaExpression@@() -> {
  Properties props=cf.getCacheProperties();
  return Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2;
}
 @AT@ 4981 @LENGTH@ 69
---------------INS InfixExpression@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @TO@ ReturnStatement@@InfixExpression:Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @AT@ 4988 @LENGTH@ 61
------------------INS MethodInvocation@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) @TO@ InfixExpression@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @AT@ 4988 @LENGTH@ 56
---------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) @AT@ 4988 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:parseInt:[props.getProperty("idleChannelsNotTx")] @TO@ MethodInvocation@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) @AT@ 4996 @LENGTH@ 48
------------------------INS MethodInvocation@@props.getProperty("idleChannelsNotTx") @TO@ SimpleName@@MethodName:parseInt:[props.getProperty("idleChannelsNotTx")] @AT@ 5005 @LENGTH@ 38
---------------------------MOV SimpleName@@Name:cacheProperties @TO@ MethodInvocation@@props.getProperty("idleChannelsNotTx") @AT@ 4787 @LENGTH@ 15
---------------------------MOV SimpleName@@MethodName:getProperty:["idleChannelsNotTx"] @TO@ MethodInvocation@@props.getProperty("idleChannelsNotTx") @AT@ 4803 @LENGTH@ 32
------------------INS Operator@@== @TO@ InfixExpression@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @AT@ 5044 @LENGTH@ 2
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@Integer.parseInt(props.getProperty("idleChannelsNotTx")) == 2 @AT@ 5048 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1981 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1981 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 1981 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1992 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2008 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2646 @LENGTH@ 104
---UPD MethodInvocation@@LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2646 @LENGTH@ 103
------UPD SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @TO@ MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception.getMessage(), exception] @AT@ 2653 @LENGTH@ 96
---------INS MethodInvocation@@exception.getMessage() @TO@ SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @AT@ 2763 @LENGTH@ 22
------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getMessage() @AT@ 2763 @LENGTH@ 9
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exception.getMessage() @AT@ 2773 @LENGTH@ 12


DEL IfStatement@@if (hasCrlf(name) || hasCrlf(value)) {  throw new IllegalArgumentException("Invalid characters (CR/LF) in header " + name);} @AT@ 2175 @LENGTH@ 129
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Invalid characters (CR/LF) in header " + name);} @AT@ 2212 @LENGTH@ 92
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Invalid characters (CR/LF) in header " + name) @AT@ 2217 @LENGTH@ 83
---------DEL ClassInstanceCreation@@IllegalArgumentException["Invalid characters (CR/LF) in header " + name] @AT@ 2223 @LENGTH@ 76
------------DEL New@@new @AT@ 2223 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 2227 @LENGTH@ 24
------------DEL InfixExpression@@"Invalid characters (CR/LF) in header " + name @AT@ 2252 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertEquals("Test test Commit",ex1.getMessage().getBody(RevCommit.class).getShortMessage()) @TO@ MethodInvocation:assertEquals("Test test Commit",ex1.getMessage().getBody(String.class)) @AT@ 2866 @LENGTH@ 94
---UPD MethodInvocation@@assertEquals("Test test Commit",ex1.getMessage().getBody(RevCommit.class).getShortMessage()) @TO@ assertEquals("Test test Commit",ex1.getMessage().getBody(String.class)) @AT@ 2866 @LENGTH@ 93
------UPD SimpleName@@MethodName:assertEquals:["Test test Commit", ex1.getMessage().getBody(RevCommit.class).getShortMessage()] @TO@ MethodName:assertEquals:["Test test Commit", ex1.getMessage().getBody(String.class)] @AT@ 2866 @LENGTH@ 93
---------UPD MethodInvocation@@ex1.getMessage().getBody(RevCommit.class).getShortMessage() @TO@ ex1.getMessage().getBody(String.class) @AT@ 2899 @LENGTH@ 59
------------DEL MethodInvocation@@MethodName:getBody:[RevCommit.class] @AT@ 2899 @LENGTH@ 41
---------------DEL TypeLiteral@@RevCommit.class @AT@ 2924 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getShortMessage:[] @TO@ MethodName:getBody:[String.class] @AT@ 2941 @LENGTH@ 17
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getShortMessage:[] @AT@ 2903 @LENGTH@ 12
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getShortMessage:[] @AT@ 2903 @LENGTH@ 12


UPD IfStatement@@if (this == o) return true; @TO@ if (this == o) {  return true;} @AT@ 6385 @LENGTH@ 30
---UPD Block@@ThenBody:return true; @TO@ ThenBody:{  return true;} @AT@ 6403 @LENGTH@ 12


UPD EnhancedForStatement@@for (MessageMatcher<T> matcher : getMessageMatchers()) {  if (this.LOGGER.isDebugEnabled()) {    this.LOGGER.debug("Trying to match using " + matcher);  }  if (!matcher.matches(message)) {    this.LOGGER.debug("Did not match");    return false;  }} @TO@ for (MessageMatcher<T> matcher : getMessageMatchers()) {  this.logger.debug(LogMessage.format("Trying to match using %s",matcher));  if (!matcher.matches(message)) {    this.logger.debug("Did not match");    return false;  }} @AT@ 1477 @LENGTH@ 262
---DEL IfStatement@@if (this.LOGGER.isDebugEnabled()) {  this.LOGGER.debug("Trying to match using " + matcher);} @AT@ 1537 @LENGTH@ 99
------DEL MethodInvocation@@this.LOGGER.isDebugEnabled() @AT@ 1541 @LENGTH@ 28
---------DEL FieldAccess@@this.LOGGER @AT@ 1541 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 1541 @LENGTH@ 4
------------DEL SimpleName@@LOGGER @AT@ 1546 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1553 @LENGTH@ 16
------DEL Block@@ThenBody:{  this.LOGGER.debug("Trying to match using " + matcher);} @AT@ 1571 @LENGTH@ 65
---------DEL ExpressionStatement@@MethodInvocation:this.LOGGER.debug("Trying to match using " + matcher) @AT@ 1577 @LENGTH@ 54
---INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Trying to match using %s",matcher)) @TO@ EnhancedForStatement@@for (MessageMatcher<T> matcher : getMessageMatchers()) {  if (this.LOGGER.isDebugEnabled()) {    this.LOGGER.debug("Trying to match using " + matcher);  }  if (!matcher.matches(message)) {    this.LOGGER.debug("Did not match");    return false;  }} @AT@ 1585 @LENGTH@ 74
------MOV MethodInvocation@@this.LOGGER.debug("Trying to match using " + matcher) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1577 @LENGTH@ 53
---------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1577 @LENGTH@ 11
------------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1582 @LENGTH@ 6
---------UPD SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodName:format:["Trying to match using %s", matcher] @AT@ 1589 @LENGTH@ 41
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @TO@ MethodInvocation@@this.LOGGER.debug("Trying to match using " + matcher) @AT@ 1597 @LENGTH@ 61
------------INS MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @AT@ 1603 @LENGTH@ 54
---------------MOV SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1589 @LENGTH@ 41
------------------DEL InfixExpression@@"Trying to match using " + matcher @AT@ 1595 @LENGTH@ 34
---------------------DEL StringLiteral@@"Trying to match using " @AT@ 1595 @LENGTH@ 24
---------------------DEL Operator@@+ @AT@ 1619 @LENGTH@ 1
---------------------DEL SimpleName@@matcher @AT@ 1622 @LENGTH@ 7
------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1621 @LENGTH@ 26
------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1649 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1589 @LENGTH@ 41
------------------DEL InfixExpression@@"Trying to match using " + matcher @AT@ 1595 @LENGTH@ 34
---------------------DEL StringLiteral@@"Trying to match using " @AT@ 1595 @LENGTH@ 24
---------------------DEL Operator@@+ @AT@ 1619 @LENGTH@ 1
---------------------DEL SimpleName@@matcher @AT@ 1622 @LENGTH@ 7
------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1621 @LENGTH@ 26
------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1649 @LENGTH@ 7
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1603 @LENGTH@ 10
---UPD IfStatement@@if (!matcher.matches(message)) {  this.LOGGER.debug("Did not match");  return false;} @TO@ if (!matcher.matches(message)) {  this.logger.debug("Did not match");  return false;} @AT@ 1640 @LENGTH@ 95
------UPD Block@@ThenBody:{  this.LOGGER.debug("Did not match");  return false;} @TO@ ThenBody:{  this.logger.debug("Did not match");  return false;} @AT@ 1671 @LENGTH@ 64
---------UPD ExpressionStatement@@MethodInvocation:this.LOGGER.debug("Did not match") @TO@ MethodInvocation:this.logger.debug("Did not match") @AT@ 1677 @LENGTH@ 35
------------UPD MethodInvocation@@this.LOGGER.debug("Did not match") @TO@ this.logger.debug("Did not match") @AT@ 1677 @LENGTH@ 34
---------------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1677 @LENGTH@ 11
------------------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1682 @LENGTH@ 6


UPD VariableDeclarationStatement@@FormLoginTests.DefaultLoginPage loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(this.github.getClientName()).and(); @TO@ FormLoginTests.DefaultLoginPage loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(OAuth2LoginTests.github.getClientName()).and(); @AT@ 8339 @LENGTH@ 247
---UPD VariableDeclarationFragment@@loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(this.github.getClientName()).and() @TO@ loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(OAuth2LoginTests.github.getClientName()).and() @AT@ 8371 @LENGTH@ 214
------UPD MethodInvocation@@FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(this.github.getClientName()).and() @TO@ FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt().assertLoginFormNotPresent().oauth2Login().assertClientRegistrationByName(OAuth2LoginTests.github.getClientName()).and() @AT@ 8383 @LENGTH@ 202
---------UPD MethodInvocation@@MethodName:assertClientRegistrationByName:[this.github.getClientName()] @TO@ MethodName:assertClientRegistrationByName:[OAuth2LoginTests.github.getClientName()] @AT@ 8383 @LENGTH@ 196
------------UPD MethodInvocation@@this.github.getClientName() @TO@ OAuth2LoginTests.github.getClientName() @AT@ 8551 @LENGTH@ 27
---------------INS QualifiedName@@Name:OAuth2LoginTests.github @TO@ MethodInvocation@@this.github.getClientName() @AT@ 8551 @LENGTH@ 23
---------------DEL FieldAccess@@this.github @AT@ 8551 @LENGTH@ 11
------------------DEL ThisExpression@@this @AT@ 8551 @LENGTH@ 4
------------------DEL SimpleName@@github @AT@ 8556 @LENGTH@ 6


UPD Block@@ThenBody:{  this.micrometerHolder=new MicrometerHolder(this.applicationContext,getListenerId(),this.micrometerTags);} @TO@ ThenBody:{  String id=getListenerId();  if (id == null) {    id="no_id_or_beanName";  }  this.micrometerHolder=new MicrometerHolder(this.applicationContext,id,this.micrometerTags);} @AT@ 40246 @LENGTH@ 125
---UPD ExpressionStatement@@Assignment:this.micrometerHolder=new MicrometerHolder(this.applicationContext,getListenerId(),this.micrometerTags) @TO@ Assignment:this.micrometerHolder=new MicrometerHolder(this.applicationContext,id,this.micrometerTags) @AT@ 40252 @LENGTH@ 114
------UPD Assignment@@this.micrometerHolder=new MicrometerHolder(this.applicationContext,getListenerId(),this.micrometerTags) @TO@ this.micrometerHolder=new MicrometerHolder(this.applicationContext,id,this.micrometerTags) @AT@ 40252 @LENGTH@ 113
---------UPD ClassInstanceCreation@@MicrometerHolder[this.applicationContext, getListenerId(), this.micrometerTags] @TO@ MicrometerHolder[this.applicationContext, id, this.micrometerTags] @AT@ 40276 @LENGTH@ 89
------------DEL MethodInvocation@@MethodName:getListenerId:[] @AT@ 40322 @LENGTH@ 15
------------INS SimpleName@@id @TO@ ClassInstanceCreation@@MicrometerHolder[this.applicationContext, getListenerId(), this.micrometerTags] @AT@ 40414 @LENGTH@ 2
---INS VariableDeclarationStatement@@String id=getListenerId(); @TO@ Block@@ThenBody:{  this.micrometerHolder=new MicrometerHolder(this.applicationContext,getListenerId(),this.micrometerTags);} @AT@ 40252 @LENGTH@ 28
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id=getListenerId(); @AT@ 40252 @LENGTH@ 6
------INS VariableDeclarationFragment@@id=getListenerId() @TO@ VariableDeclarationStatement@@String id=getListenerId(); @AT@ 40259 @LENGTH@ 20
---------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id=getListenerId() @AT@ 40259 @LENGTH@ 2
---------INS MethodInvocation@@MethodName:getListenerId:[] @TO@ VariableDeclarationFragment@@id=getListenerId() @AT@ 40264 @LENGTH@ 15
---INS IfStatement@@if (id == null) {  id="no_id_or_beanName";} @TO@ Block@@ThenBody:{  this.micrometerHolder=new MicrometerHolder(this.applicationContext,getListenerId(),this.micrometerTags);} @AT@ 40285 @LENGTH@ 54
------INS InfixExpression@@id == null @TO@ IfStatement@@if (id == null) {  id="no_id_or_beanName";} @AT@ 40289 @LENGTH@ 10
---------INS SimpleName@@id @TO@ InfixExpression@@id == null @AT@ 40289 @LENGTH@ 2
---------INS Operator@@== @TO@ InfixExpression@@id == null @AT@ 40291 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@id == null @AT@ 40295 @LENGTH@ 4
------INS Block@@ThenBody:{  id="no_id_or_beanName";} @TO@ IfStatement@@if (id == null) {  id="no_id_or_beanName";} @AT@ 40301 @LENGTH@ 38
---------INS ExpressionStatement@@Assignment:id="no_id_or_beanName" @TO@ Block@@ThenBody:{  id="no_id_or_beanName";} @AT@ 40308 @LENGTH@ 25
------------INS Assignment@@id="no_id_or_beanName" @TO@ ExpressionStatement@@Assignment:id="no_id_or_beanName" @AT@ 40308 @LENGTH@ 24
---------------INS SimpleName@@id @TO@ Assignment@@id="no_id_or_beanName" @AT@ 40308 @LENGTH@ 2
---------------INS Operator@@= @TO@ Assignment@@id="no_id_or_beanName" @AT@ 40310 @LENGTH@ 1
---------------INS StringLiteral@@"no_id_or_beanName" @TO@ Assignment@@id="no_id_or_beanName" @AT@ 40313 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertNotSame(foo,"Should not able able to complete all pending messages","stopABCDE") @TO@ MethodInvocation:assertNotSame("Should not able able to complete all pending messages",foo,"stopABCDE") @AT@ 1875 @LENGTH@ 89
---UPD MethodInvocation@@assertNotSame(foo,"Should not able able to complete all pending messages","stopABCDE") @TO@ assertNotSame("Should not able able to complete all pending messages",foo,"stopABCDE") @AT@ 1875 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertNotSame:[foo, "Should not able able to complete all pending messages", "stopABCDE"] @TO@ MethodName:assertNotSame:["Should not able able to complete all pending messages", foo, "stopABCDE"] @AT@ 1875 @LENGTH@ 88
---------INS StringLiteral@@"Should not able able to complete all pending messages" @TO@ SimpleName@@MethodName:assertNotSame:[foo, "Should not able able to complete all pending messages", "stopABCDE"] @AT@ 1889 @LENGTH@ 55
---------DEL StringLiteral@@"Should not able able to complete all pending messages" @AT@ 1894 @LENGTH@ 55


UPD TypeDeclaration@@[public]RequestVariablesExtractor,  @TO@ [@Deprecated, public]RequestVariablesExtractor,  @AT@ 992 @LENGTH@ 342
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RequestVariablesExtractor,  @AT@ 992 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:run, final Runnable runnable, Exception,  @TO@ public, void, MethodName:run, final Runnable runnable, Throwable,  @AT@ 1012 @LENGTH@ 265
---UPD SimpleType@@Exception @TO@ Throwable @AT@ 1060 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:runWithTransaction(runnable,false) @TO@ MethodDeclaration@@public, void, MethodName:run, final Runnable runnable, Exception,  @AT@ 1280 @LENGTH@ 36
------INS MethodInvocation@@runWithTransaction(runnable,false) @TO@ ExpressionStatement@@MethodInvocation:runWithTransaction(runnable,false) @AT@ 1280 @LENGTH@ 35
---------INS SimpleName@@MethodName:runWithTransaction:[runnable, false] @TO@ MethodInvocation@@runWithTransaction(runnable,false) @AT@ 1280 @LENGTH@ 35
------------INS SimpleName@@runnable @TO@ SimpleName@@MethodName:runWithTransaction:[runnable, false] @AT@ 1299 @LENGTH@ 8
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:runWithTransaction:[runnable, false] @AT@ 1309 @LENGTH@ 5


UPD CatchClause@@catch (OpenIDConsumerException oice) {  throw new AuthenticationServiceException("Consumer error",oice);} @TO@ catch (OpenIDConsumerException ex) {  throw new AuthenticationServiceException("Consumer error",ex);} @AT@ 6084 @LENGTH@ 111
---UPD SingleVariableDeclaration@@OpenIDConsumerException oice @TO@ OpenIDConsumerException ex @AT@ 6091 @LENGTH@ 28
------UPD SimpleName@@oice @TO@ ex @AT@ 6115 @LENGTH@ 4
---UPD ThrowStatement@@ClassInstanceCreation:new AuthenticationServiceException("Consumer error",oice) @TO@ ClassInstanceCreation:new AuthenticationServiceException("Consumer error",ex) @AT@ 6126 @LENGTH@ 65
------UPD ClassInstanceCreation@@AuthenticationServiceException["Consumer error", oice] @TO@ AuthenticationServiceException["Consumer error", ex] @AT@ 6132 @LENGTH@ 58
---------UPD SimpleName@@oice @TO@ ex @AT@ 6185 @LENGTH@ 4


DEL FieldDeclaration@@private, static, CoroutineAdapterInformation, [DISABLED=new CoroutineAdapterInformation(false,false,false,0,0)] @AT@ 11223 @LENGTH@ 113
---DEL Modifier@@private @AT@ 11223 @LENGTH@ 7
---DEL Modifier@@static @AT@ 11231 @LENGTH@ 6
---DEL SimpleType@@CoroutineAdapterInformation @AT@ 11238 @LENGTH@ 27
---DEL VariableDeclarationFragment@@DISABLED=new CoroutineAdapterInformation(false,false,false,0,0) @AT@ 11266 @LENGTH@ 69
------DEL SimpleName@@DISABLED @AT@ 11266 @LENGTH@ 8
------DEL ClassInstanceCreation@@CoroutineAdapterInformation[false, false, false, 0, 0] @AT@ 11277 @LENGTH@ 58
---------DEL New@@new @AT@ 11277 @LENGTH@ 3
---------DEL SimpleType@@CoroutineAdapterInformation @AT@ 11281 @LENGTH@ 27
---------DEL BooleanLiteral@@false @AT@ 11309 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 11316 @LENGTH@ 5
---------DEL BooleanLiteral@@false @AT@ 11323 @LENGTH@ 5
---------DEL NumberLiteral@@0 @AT@ 11330 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 11333 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:verify(session).connectAndBind("localhost",new Integer(2775),expectedBindParameters) @TO@ MethodInvocation:verify(session).connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters) @AT@ 3068 @LENGTH@ 87
---UPD MethodInvocation@@verify(session).connectAndBind("localhost",new Integer(2775),expectedBindParameters) @TO@ verify(session).connectAndBind("localhost",Integer.valueOf(2775),expectedBindParameters) @AT@ 3068 @LENGTH@ 86
------UPD SimpleName@@MethodName:connectAndBind:["localhost", new Integer(2775), expectedBindParameters] @TO@ MethodName:connectAndBind:["localhost", Integer.valueOf(2775), expectedBindParameters] @AT@ 3084 @LENGTH@ 70
---------DEL ClassInstanceCreation@@Integer[2775] @AT@ 3112 @LENGTH@ 17
------------DEL New@@new @AT@ 3112 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 3116 @LENGTH@ 7
------------DEL NumberLiteral@@2775 @AT@ 3124 @LENGTH@ 4
---------INS MethodInvocation@@Integer.valueOf(2775) @TO@ SimpleName@@MethodName:connectAndBind:["localhost", new Integer(2775), expectedBindParameters] @AT@ 3116 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(2775) @AT@ 3116 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[2775] @TO@ MethodInvocation@@Integer.valueOf(2775) @AT@ 3124 @LENGTH@ 13
---------------INS NumberLiteral@@2775 @TO@ SimpleName@@MethodName:valueOf:[2775] @AT@ 3132 @LENGTH@ 4


UPD EnhancedForStatement@@for (TopicPartition partition : partitions) {  String offsetKey=serializeOffsetKey(partition);  Long offset=lastProcessedOffset.get(offsetKey);  if (offset == null) {    offset=-1L;  }  LOG.debug("Saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  commitOffset(offsetRepository,partition,offset,true);  lastProcessedOffset.remove(offsetKey);} @TO@ for (TopicPartition partition : partitions) {  String offsetKey=serializeOffsetKey(partition);  Long offset=lastProcessedOffset.get(offsetKey);  if (offset == null) {    offset=-1L;  }  LOG.debug("Saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  try {    commitOffset(offsetRepository,partition,offset,true);  } catch (  java.lang.Exception e) {    LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);    throw e;  } finally {    lastProcessedOffset.remove(offsetKey);  }} @AT@ 22763 @LENGTH@ 536
---INS TryStatement@@try {  commitOffset(offsetRepository,partition,offset,true);} catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} finally {  lastProcessedOffset.remove(offsetKey);} @TO@ EnhancedForStatement@@for (TopicPartition partition : partitions) {  String offsetKey=serializeOffsetKey(partition);  Long offset=lastProcessedOffset.get(offsetKey);  if (offset == null) {    offset=-1L;  }  LOG.debug("Saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  commitOffset(offsetRepository,partition,offset,true);  lastProcessedOffset.remove(offsetKey);} @AT@ 23174 @LENGTH@ 403
------MOV ExpressionStatement@@MethodInvocation:commitOffset(offsetRepository,partition,offset,true) @TO@ TryStatement@@try {  commitOffset(offsetRepository,partition,offset,true);} catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} finally {  lastProcessedOffset.remove(offsetKey);} @AT@ 23174 @LENGTH@ 56
------INS CatchClause@@catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} @TO@ TryStatement@@try {  commitOffset(offsetRepository,partition,offset,true);} catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} finally {  lastProcessedOffset.remove(offsetKey);} @AT@ 23275 @LENGTH@ 215
---------INS SingleVariableDeclaration@@java.lang.Exception e @TO@ CatchClause@@catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} @AT@ 23282 @LENGTH@ 21
------------INS SimpleType@@java.lang.Exception @TO@ SingleVariableDeclaration@@java.lang.Exception e @AT@ 23282 @LENGTH@ 19
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@java.lang.Exception e @AT@ 23302 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset) @TO@ CatchClause@@catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} @AT@ 23327 @LENGTH@ 116
------------INS MethodInvocation@@LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset) @AT@ 23327 @LENGTH@ 115
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset) @AT@ 23327 @LENGTH@ 3
---------------INS SimpleName@@MethodName:error:["Error saving offset repository state {} from offsetKey {} with offset: {}", threadId, offsetKey, offset] @TO@ MethodInvocation@@LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset) @AT@ 23331 @LENGTH@ 111
------------------INS StringLiteral@@"Error saving offset repository state {} from offsetKey {} with offset: {}" @TO@ SimpleName@@MethodName:error:["Error saving offset repository state {} from offsetKey {} with offset: {}", threadId, offsetKey, offset] @AT@ 23337 @LENGTH@ 75
------------------INS SimpleName@@threadId @TO@ SimpleName@@MethodName:error:["Error saving offset repository state {} from offsetKey {} with offset: {}", threadId, offsetKey, offset] @AT@ 23414 @LENGTH@ 8
------------------INS SimpleName@@offsetKey @TO@ SimpleName@@MethodName:error:["Error saving offset repository state {} from offsetKey {} with offset: {}", threadId, offsetKey, offset] @AT@ 23424 @LENGTH@ 9
------------------INS SimpleName@@offset @TO@ SimpleName@@MethodName:error:["Error saving offset repository state {} from offsetKey {} with offset: {}", threadId, offsetKey, offset] @AT@ 23435 @LENGTH@ 6
---------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} @AT@ 23464 @LENGTH@ 8
------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 23470 @LENGTH@ 1
------INS Block@@FinallyBody:{  lastProcessedOffset.remove(offsetKey);} @TO@ TryStatement@@try {  commitOffset(offsetRepository,partition,offset,true);} catch (java.lang.Exception e) {  LOG.error("Error saving offset repository state {} from offsetKey {} with offset: {}",threadId,offsetKey,offset);  throw e;} finally {  lastProcessedOffset.remove(offsetKey);} @AT@ 23499 @LENGTH@ 78
---------MOV ExpressionStatement@@MethodInvocation:lastProcessedOffset.remove(offsetKey) @TO@ Block@@FinallyBody:{  lastProcessedOffset.remove(offsetKey);} @AT@ 23247 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:LOG.error("Camel Resteasy Proxy Client Exception: {}",e) @TO@ MethodInvocation:LOG.error("Camel Resteasy Proxy Client Exception: {}",e.getMessage(),e) @AT@ 9297 @LENGTH@ 58
---UPD MethodInvocation@@LOG.error("Camel Resteasy Proxy Client Exception: {}",e) @TO@ LOG.error("Camel Resteasy Proxy Client Exception: {}",e.getMessage(),e) @AT@ 9297 @LENGTH@ 57
------UPD SimpleName@@MethodName:error:["Camel Resteasy Proxy Client Exception: {}", e] @TO@ MethodName:error:["Camel Resteasy Proxy Client Exception: {}", e.getMessage(), e] @AT@ 9301 @LENGTH@ 53
---------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:error:["Camel Resteasy Proxy Client Exception: {}", e] @AT@ 9352 @LENGTH@ 14
------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 9352 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 9354 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(findById).consumeNextWith((s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")).verifyComplete() @TO@ MethodInvocation:StepVerifier.create(findById).consumeNextWith((s) -> assertThat(s).isEqualTo("result")).verifyComplete() @AT@ 13561 @LENGTH@ 134
---UPD MethodInvocation@@StepVerifier.create(findById).consumeNextWith((s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")).verifyComplete() @TO@ StepVerifier.create(findById).consumeNextWith((s) -> assertThat(s).isEqualTo("result")).verifyComplete() @AT@ 13561 @LENGTH@ 133
------UPD MethodInvocation@@MethodName:consumeNextWith:[(s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")] @TO@ MethodName:consumeNextWith:[(s) -> assertThat(s).isEqualTo("result")] @AT@ 13561 @LENGTH@ 111
---------UPD LambdaExpression@@(s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result") @TO@ (s) -> assertThat(s).isEqualTo("result") @AT@ 13607 @LENGTH@ 64
------------UPD MethodInvocation@@AssertionsForClassTypes.assertThat(s).isEqualTo("result") @TO@ assertThat(s).isEqualTo("result") @AT@ 13614 @LENGTH@ 57
---------------DEL SimpleName@@Name:AssertionsForClassTypes @AT@ 13614 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2233 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 2233 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 2233 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2244 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2260 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2187 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2187 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2194 @LENGTH@ 21


UPD ReturnStatement@@MethodInvocation:check(authentication,object).filter((d) -> d.isGranted()).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap((d) -> Mono.empty()) @TO@ MethodInvocation:check(authentication,object).filter(AuthorizationDecision::isGranted).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap((decision) -> Mono.empty()) @AT@ 1827 @LENGTH@ 193
---UPD MethodInvocation@@check(authentication,object).filter((d) -> d.isGranted()).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap((d) -> Mono.empty()) @TO@ check(authentication,object).filter(AuthorizationDecision::isGranted).switchIfEmpty(Mono.defer(() -> Mono.error(new AccessDeniedException("Access Denied")))).flatMap((decision) -> Mono.empty()) @AT@ 1834 @LENGTH@ 185
------UPD MethodInvocation@@MethodName:filter:[(d) -> d.isGranted()] @TO@ MethodName:filter:[AuthorizationDecision::isGranted] @AT@ 1834 @LENGTH@ 58
---------DEL LambdaExpression@@(d) -> d.isGranted() @AT@ 1871 @LENGTH@ 20
------------DEL VariableDeclarationFragment@@d @AT@ 1872 @LENGTH@ 1
---------------DEL SimpleName@@d @AT@ 1872 @LENGTH@ 1
------------DEL MethodInvocation@@d.isGranted() @AT@ 1878 @LENGTH@ 13
---------------DEL SimpleName@@Name:d @AT@ 1878 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:isGranted:[] @AT@ 1880 @LENGTH@ 11
------UPD SimpleName@@MethodName:flatMap:[(d) -> Mono.empty()] @TO@ MethodName:flatMap:[(decision) -> Mono.empty()] @AT@ 1991 @LENGTH@ 28
---------UPD LambdaExpression@@(d) -> Mono.empty() @TO@ (decision) -> Mono.empty() @AT@ 1999 @LENGTH@ 19
------------UPD VariableDeclarationFragment@@d @TO@ decision @AT@ 2000 @LENGTH@ 1
---------------UPD SimpleName@@d @TO@ decision @AT@ 2000 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2479 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2479 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2495 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(s.getEphemeralOwner(),0) @TO@ MethodInvocation:assertEquals(0,s.getEphemeralOwner()) @AT@ 6225 @LENGTH@ 39
---UPD MethodInvocation@@assertEquals(s.getEphemeralOwner(),0) @TO@ assertEquals(0,s.getEphemeralOwner()) @AT@ 6225 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertEquals:[s.getEphemeralOwner(), 0] @TO@ MethodName:assertEquals:[0, s.getEphemeralOwner()] @AT@ 6225 @LENGTH@ 38
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[s.getEphemeralOwner(), 0] @AT@ 6238 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 6261 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 4820 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 4820 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 4820 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 4831 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 4847 @LENGTH@ 21


MOV IfStatement@@if (authorities instanceof Collection) {  return (Collection<String>)authorities;} @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAuthorities, Jwt jwt,  @AT@ 3848 @LENGTH@ 88


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]LatchCountDownAndCallRealMethodAnswer, ForwardsInvocations @AT@ 1330 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1330 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1338 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1345 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1351 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1356 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1356 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1375 @LENGTH@ 2


UPD IfStatement@@if (this.requestMatcher.matches(request)) {  if (!response.containsHeader(CLEAR_SITE_DATA_HEADER)) {    response.setHeader(CLEAR_SITE_DATA_HEADER,this.headerValue);  }} else if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher);} @TO@ if (this.requestMatcher.matches(request)) {  if (!response.containsHeader(CLEAR_SITE_DATA_HEADER)) {    response.setHeader(CLEAR_SITE_DATA_HEADER,this.headerValue);  }} @AT@ 2683 @LENGTH@ 361
---DEL Block@@ElseBody:if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher);} @AT@ 2868 @LENGTH@ 176
------DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher);} @AT@ 2868 @LENGTH@ 176
---------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 2872 @LENGTH@ 28
------------DEL FieldAccess@@this.logger @AT@ 2872 @LENGTH@ 11
---------------DEL ThisExpression@@this @AT@ 2872 @LENGTH@ 4
---------------DEL SimpleName@@logger @AT@ 2877 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2884 @LENGTH@ 16
---------DEL Block@@ThenBody:{  this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher);} @AT@ 2902 @LENGTH@ 142
------------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher) @AT@ 2907 @LENGTH@ 133
---------------DEL MethodInvocation@@this.logger.debug("Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher) @AT@ 2907 @LENGTH@ 132
------------------DEL FieldAccess@@this.logger @AT@ 2907 @LENGTH@ 11
---------------------DEL ThisExpression@@this @AT@ 2907 @LENGTH@ 4
---------------------DEL SimpleName@@logger @AT@ 2912 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:debug:["Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher] @AT@ 2919 @LENGTH@ 120
---------------------DEL InfixExpression@@"Not injecting Clear-Site-Data header since it did not match the " + "requestMatcher " + this.requestMatcher @AT@ 2925 @LENGTH@ 113
------------------------DEL StringLiteral@@"Not injecting Clear-Site-Data header since it did not match the " @AT@ 2925 @LENGTH@ 66
------------------------DEL Operator@@+ @AT@ 2991 @LENGTH@ 1
------------------------DEL StringLiteral@@"requestMatcher " @AT@ 2994 @LENGTH@ 17
------------------------DEL FieldAccess@@this.requestMatcher @AT@ 3019 @LENGTH@ 19
---------------------------DEL ThisExpression@@this @AT@ 3019 @LENGTH@ 4
---------------------------DEL SimpleName@@requestMatcher @AT@ 3024 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:this.matcher.matches(exchange).flatMap((m) -> m.isMatch() ? MatchResult.notMatch() : MatchResult.match()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("matches = " + it.isMatch());
  }
}
) @TO@ MethodInvocation:this.matcher.matches(exchange).flatMap(this::negate).doOnNext((matchResult) -> logger.debug(LogMessage.format("matches = %s",matchResult.isMatch()))) @AT@ 1616 @LENGTH@ 236
---UPD MethodInvocation@@this.matcher.matches(exchange).flatMap((m) -> m.isMatch() ? MatchResult.notMatch() : MatchResult.match()).doOnNext((it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("matches = " + it.isMatch());
  }
}
) @TO@ this.matcher.matches(exchange).flatMap(this::negate).doOnNext((matchResult) -> logger.debug(LogMessage.format("matches = %s",matchResult.isMatch()))) @AT@ 1623 @LENGTH@ 228
------UPD MethodInvocation@@MethodName:flatMap:[(m) -> m.isMatch() ? MatchResult.notMatch() : MatchResult.match()] @TO@ MethodName:flatMap:[this::negate] @AT@ 1623 @LENGTH@ 105
---------DEL LambdaExpression@@(m) -> m.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1662 @LENGTH@ 65
------------DEL VariableDeclarationFragment@@m @AT@ 1663 @LENGTH@ 1
---------------DEL SimpleName@@m @AT@ 1663 @LENGTH@ 1
------------DEL ConditionalExpression@@m.isMatch() ? MatchResult.notMatch() : MatchResult.match() @AT@ 1669 @LENGTH@ 58
---------------DEL MethodInvocation@@m.isMatch() @AT@ 1669 @LENGTH@ 11
------------------DEL SimpleName@@Name:m @AT@ 1669 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:isMatch:[] @AT@ 1671 @LENGTH@ 9
---------------DEL MethodInvocation@@MatchResult.notMatch() @AT@ 1683 @LENGTH@ 22
------------------DEL SimpleName@@Name:MatchResult @AT@ 1683 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:notMatch:[] @AT@ 1695 @LENGTH@ 10
---------------DEL MethodInvocation@@MatchResult.match() @AT@ 1708 @LENGTH@ 19
------------------DEL SimpleName@@Name:MatchResult @AT@ 1708 @LENGTH@ 11
------------------DEL SimpleName@@MethodName:match:[] @AT@ 1720 @LENGTH@ 7
------UPD SimpleName@@MethodName:doOnNext:[(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("matches = " + it.isMatch());
  }
}
] @TO@ MethodName:doOnNext:[(matchResult) -> logger.debug(LogMessage.format("matches = %s",matchResult.isMatch()))] @AT@ 1734 @LENGTH@ 117
---------UPD LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("matches = " + it.isMatch());
  }
}
 @TO@ (matchResult) -> logger.debug(LogMessage.format("matches = %s",matchResult.isMatch())) @AT@ 1743 @LENGTH@ 107
------------UPD VariableDeclarationFragment@@it @TO@ matchResult @AT@ 1744 @LENGTH@ 2
---------------UPD SimpleName@@it @TO@ matchResult @AT@ 1744 @LENGTH@ 2
------------INS MethodInvocation@@logger.debug(LogMessage.format("matches = %s",matchResult.isMatch())) @TO@ LambdaExpression@@(it) -> {
  if (logger.isDebugEnabled()) {
    logger.debug("matches = " + it.isMatch());
  }
}
 @AT@ 1755 @LENGTH@ 70
---------------INS SimpleName@@MethodName:debug:[LogMessage.format("matches = %s",matchResult.isMatch())] @TO@ MethodInvocation@@logger.debug(LogMessage.format("matches = %s",matchResult.isMatch())) @AT@ 1762 @LENGTH@ 63
------------------INS MethodInvocation@@LogMessage.format("matches = %s",matchResult.isMatch()) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("matches = %s",matchResult.isMatch())] @AT@ 1768 @LENGTH@ 56
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@LogMessage.format("matches = %s",matchResult.isMatch()) @AT@ 1795 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["matches = " + it.isMatch()] @TO@ MethodInvocation@@LogMessage.format("matches = %s",matchResult.isMatch()) @AT@ 1802 @LENGTH@ 34
------------------------INS StringLiteral@@"matches = %s" @TO@ SimpleName@@MethodName:debug:["matches = " + it.isMatch()] @AT@ 1786 @LENGTH@ 14
------------------------INS MethodInvocation@@matchResult.isMatch() @TO@ SimpleName@@MethodName:debug:["matches = " + it.isMatch()] @AT@ 1802 @LENGTH@ 21
---------------------------MOV SimpleName@@Name:it @TO@ MethodInvocation@@matchResult.isMatch() @AT@ 1823 @LENGTH@ 2
---------------------------MOV SimpleName@@MethodName:isMatch:[] @TO@ MethodInvocation@@matchResult.isMatch() @AT@ 1826 @LENGTH@ 9
---------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug(LogMessage.format("matches = %s",matchResult.isMatch())) @AT@ 1762 @LENGTH@ 6
------------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("matches = " + it.isMatch());} @AT@ 1758 @LENGTH@ 86
---------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 1762 @LENGTH@ 23
------------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1769 @LENGTH@ 16
---------------DEL Block@@ThenBody:{  logger.debug("matches = " + it.isMatch());} @AT@ 1787 @LENGTH@ 57
------------------DEL ExpressionStatement@@MethodInvocation:logger.debug("matches = " + it.isMatch()) @AT@ 1795 @LENGTH@ 42
---------------------DEL MethodInvocation@@logger.debug("matches = " + it.isMatch()) @AT@ 1795 @LENGTH@ 41


UPD VariableDeclarationStatement@@Collection<ConfigAttribute> attrs=Arrays.<ConfigAttribute>asList(new SecurityConfig(attribute)); @TO@ Collection<ConfigAttribute> attrs=Arrays.asList(new SecurityConfig(attribute)); @AT@ 5727 @LENGTH@ 98
---UPD VariableDeclarationFragment@@attrs=Arrays.<ConfigAttribute>asList(new SecurityConfig(attribute)) @TO@ attrs=Arrays.asList(new SecurityConfig(attribute)) @AT@ 5755 @LENGTH@ 69
------UPD MethodInvocation@@Arrays.<ConfigAttribute>asList(new SecurityConfig(attribute)) @TO@ Arrays.asList(new SecurityConfig(attribute)) @AT@ 5763 @LENGTH@ 61


INS VariableDeclarationStatement@@String sourceLabel=relationshipDescription.getSource().getPrimaryLabel(); @TO@ MethodDeclaration@@private, Optional<Object>, MethodName:createInstanceOfRelationships, Neo4jPersistentProperty persistentProperty, MapAccessor values, MapAccessor allValues, KnownObjects knownObjects, Collection<RelationshipDescription> relationshipDescriptions, Set<Path.Segment> processedSegments,  @AT@ 15636 @LENGTH@ 75
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String sourceLabel=relationshipDescription.getSource().getPrimaryLabel(); @AT@ 15636 @LENGTH@ 6
---INS VariableDeclarationFragment@@sourceLabel=relationshipDescription.getSource().getPrimaryLabel() @TO@ VariableDeclarationStatement@@String sourceLabel=relationshipDescription.getSource().getPrimaryLabel(); @AT@ 15643 @LENGTH@ 67
------INS SimpleName@@sourceLabel @TO@ VariableDeclarationFragment@@sourceLabel=relationshipDescription.getSource().getPrimaryLabel() @AT@ 15643 @LENGTH@ 11
------INS MethodInvocation@@relationshipDescription.getSource().getPrimaryLabel() @TO@ VariableDeclarationFragment@@sourceLabel=relationshipDescription.getSource().getPrimaryLabel() @AT@ 15657 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:getSource:[] @TO@ MethodInvocation@@relationshipDescription.getSource().getPrimaryLabel() @AT@ 15657 @LENGTH@ 35
---------INS SimpleName@@Name:relationshipDescription @TO@ MethodInvocation@@relationshipDescription.getSource().getPrimaryLabel() @AT@ 15657 @LENGTH@ 23
---------INS SimpleName@@MethodName:getPrimaryLabel:[] @TO@ MethodInvocation@@relationshipDescription.getSource().getPrimaryLabel() @AT@ 15693 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2198 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2198 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2214 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("ping")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("zip")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("alltypes")).setBody(simple(new Integer(THRIFT_TEST_NUM1).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("ping")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("zip")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("alltypes")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 9141 @LENGTH@ 955
---UPD MethodInvocation@@from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("ping")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("zip")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("alltypes")).setBody(simple(new Integer(THRIFT_TEST_NUM1).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator").to("mock:thrift-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("ping")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("zip")).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("alltypes")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 9141 @LENGTH@ 954
------UPD MethodInvocation@@MethodName:setBody:[simple(new Integer(THRIFT_TEST_NUM1).toString())] @TO@ MethodName:setBody:[simple(Integer.valueOf(THRIFT_TEST_NUM1).toString())] @AT@ 9141 @LENGTH@ 755
---------UPD MethodInvocation@@simple(new Integer(THRIFT_TEST_NUM1).toString()) @TO@ simple(Integer.valueOf(THRIFT_TEST_NUM1).toString()) @AT@ 9847 @LENGTH@ 48
------------UPD SimpleName@@MethodName:simple:[new Integer(THRIFT_TEST_NUM1).toString()] @TO@ MethodName:simple:[Integer.valueOf(THRIFT_TEST_NUM1).toString()] @AT@ 9847 @LENGTH@ 48
---------------UPD MethodInvocation@@new Integer(THRIFT_TEST_NUM1).toString() @TO@ Integer.valueOf(THRIFT_TEST_NUM1).toString() @AT@ 9854 @LENGTH@ 40
------------------DEL ClassInstanceCreation@@Integer[THRIFT_TEST_NUM1] @AT@ 9854 @LENGTH@ 29
---------------------DEL New@@new @AT@ 9854 @LENGTH@ 3
---------------------DEL SimpleType@@Integer @AT@ 9858 @LENGTH@ 7
---------------------DEL SimpleName@@THRIFT_TEST_NUM1 @AT@ 9866 @LENGTH@ 16
------------------INS MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1] @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1).toString() @AT@ 9858 @LENGTH@ 33
---------------------INS SimpleName@@THRIFT_TEST_NUM1 @TO@ MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1] @AT@ 9874 @LENGTH@ 16
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1).toString() @AT@ 9858 @LENGTH@ 7
------UPD MethodInvocation@@MethodName:setBody:[simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @TO@ MethodName:setBody:[simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @AT@ 9141 @LENGTH@ 372
---------UPD MethodInvocation@@simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @TO@ simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @AT@ 9445 @LENGTH@ 67
------------UPD SimpleName@@MethodName:simple:[new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @TO@ MethodName:simple:[Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @AT@ 9445 @LENGTH@ 67
---------------UPD MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @TO@ Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 9452 @LENGTH@ 59
------------------INS MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 9452 @LENGTH@ 52
---------------------INS InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @TO@ MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 9468 @LENGTH@ 35
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 9464 @LENGTH@ 16
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 9464 @LENGTH@ 16
------------------------MOV Operator@@* @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 9480 @LENGTH@ 1
------------------------MOV SimpleName@@THRIFT_TEST_NUM2 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 9483 @LENGTH@ 16
------------------DEL ClassInstanceCreation@@Integer[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 9452 @LENGTH@ 48
---------------------DEL New@@new @AT@ 9452 @LENGTH@ 3
---------------------DEL SimpleType@@Integer @AT@ 9456 @LENGTH@ 7
---------------------DEL InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 9464 @LENGTH@ 35
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 9452 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(uri,"mock://result") @TO@ MethodInvocation:assertEquals("mock://result",uri) @AT@ 1788 @LENGTH@ 35
---UPD MethodInvocation@@assertEquals(uri,"mock://result") @TO@ assertEquals("mock://result",uri) @AT@ 1788 @LENGTH@ 34
------UPD SimpleName@@MethodName:assertEquals:[uri, "mock://result"] @TO@ MethodName:assertEquals:["mock://result", uri] @AT@ 1788 @LENGTH@ 34
---------INS StringLiteral@@"mock://result" @TO@ SimpleName@@MethodName:assertEquals:[uri, "mock://result"] @AT@ 1801 @LENGTH@ 15
---------DEL StringLiteral@@"mock://result" @AT@ 1806 @LENGTH@ 15


DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("matches = " + result);} @AT@ 1792 @LENGTH@ 84
---DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 1796 @LENGTH@ 28
------DEL FieldAccess@@this.logger @AT@ 1796 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1796 @LENGTH@ 4
---------DEL SimpleName@@logger @AT@ 1801 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1808 @LENGTH@ 16
---DEL Block@@ThenBody:{  this.logger.debug("matches = " + result);} @AT@ 1826 @LENGTH@ 50
------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("matches = " + result) @AT@ 1831 @LENGTH@ 41


INS MethodDeclaration@@public, Integer, MethodName:getSince,  @TO@ TypeDeclaration@@[@RelationshipProperties, public]LikesHobbyRelationship,  @AT@ 2302 @LENGTH@ 46
---INS Modifier@@public @TO@ MethodDeclaration@@public, Integer, MethodName:getSince,  @AT@ 2302 @LENGTH@ 6
---INS SimpleType@@Integer @TO@ MethodDeclaration@@public, Integer, MethodName:getSince,  @AT@ 2309 @LENGTH@ 7
---INS SimpleName@@MethodName:getSince @TO@ MethodDeclaration@@public, Integer, MethodName:getSince,  @AT@ 2317 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:since @TO@ MethodDeclaration@@public, Integer, MethodName:getSince,  @AT@ 2332 @LENGTH@ 13
------INS SimpleName@@since @TO@ ReturnStatement@@SimpleName:since @AT@ 2339 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_CLEANUP_FREQUENCY,TimeUnit.DAYS) @TO@ MethodInvocation:MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_CLEANUP_FREQUENCY,unit) @AT@ 1686 @LENGTH@ 102
---UPD MethodInvocation@@MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_CLEANUP_FREQUENCY,TimeUnit.DAYS) @TO@ MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_CLEANUP_FREQUENCY,unit) @AT@ 1693 @LENGTH@ 94
------UPD SimpleName@@MethodName:getTimeVar:[conf, ConfVars.REPL_METRICS_CLEANUP_FREQUENCY, TimeUnit.DAYS] @TO@ MethodName:getTimeVar:[conf, ConfVars.REPL_METRICS_CLEANUP_FREQUENCY, unit] @AT@ 1707 @LENGTH@ 80
---------INS SimpleName@@unit @TO@ SimpleName@@MethodName:getTimeVar:[conf, ConfVars.REPL_METRICS_CLEANUP_FREQUENCY, TimeUnit.DAYS] @AT@ 1650 @LENGTH@ 4
---------DEL QualifiedName@@TimeUnit.DAYS @AT@ 1773 @LENGTH@ 13
------------DEL SimpleName@@TimeUnit @AT@ 1773 @LENGTH@ 8
------------DEL SimpleName@@DAYS @AT@ 1782 @LENGTH@ 4


UPD VariableDeclarationStatement@@final Charset passCodeCharset=Charsets.UTF_8; @TO@ final Charset passCodeCharset=StandardCharsets.UTF_8; @AT@ 5052 @LENGTH@ 47
---UPD VariableDeclarationFragment@@passCodeCharset=Charsets.UTF_8 @TO@ passCodeCharset=StandardCharsets.UTF_8 @AT@ 5066 @LENGTH@ 32
------UPD QualifiedName@@Charsets.UTF_8 @TO@ StandardCharsets.UTF_8 @AT@ 5084 @LENGTH@ 14
---------UPD SimpleName@@Charsets @TO@ StandardCharsets @AT@ 5084 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals(fileCount,AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,"Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files") @TO@ MethodInvocation:assertEquals(AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount,"Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files") @AT@ 3274 @LENGTH@ 203
---UPD MethodInvocation@@assertEquals(fileCount,AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,"Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files") @TO@ assertEquals(AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES,fileCount,"Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files") @AT@ 3274 @LENGTH@ 202
------UPD SimpleName@@MethodName:assertEquals:[fileCount, AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, "Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files"] @TO@ MethodName:assertEquals:[AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, fileCount, "Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files"] @AT@ 3274 @LENGTH@ 202
---------DEL SimpleName@@fileCount @AT@ 3287 @LENGTH@ 9
---------INS SimpleName@@fileCount @TO@ SimpleName@@MethodName:assertEquals:[fileCount, AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES, "Tar file should contains " + AggregationStrategyWithPreservationTest.EXPECTED_NO_FILES + " files"] @AT@ 3346 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(out,"OK") @TO@ MethodInvocation:assertEquals("OK",out) @AT@ 2329 @LENGTH@ 24
---UPD MethodInvocation@@assertEquals(out,"OK") @TO@ assertEquals("OK",out) @AT@ 2329 @LENGTH@ 23
------UPD SimpleName@@MethodName:assertEquals:[out, "OK"] @TO@ MethodName:assertEquals:["OK", out] @AT@ 2329 @LENGTH@ 23
---------INS StringLiteral@@"OK" @TO@ SimpleName@@MethodName:assertEquals:[out, "OK"] @AT@ 2342 @LENGTH@ 4
---------DEL StringLiteral@@"OK" @AT@ 2347 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(50),twitterEndpoint.getProperties().getCount()) @TO@ MethodInvocation:assertEquals(Integer.valueOf(50),twitterEndpoint.getProperties().getCount()) @AT@ 2698 @LENGTH@ 74
---UPD MethodInvocation@@assertEquals(new Integer(50),twitterEndpoint.getProperties().getCount()) @TO@ assertEquals(Integer.valueOf(50),twitterEndpoint.getProperties().getCount()) @AT@ 2698 @LENGTH@ 73
------UPD SimpleName@@MethodName:assertEquals:[new Integer(50), twitterEndpoint.getProperties().getCount()] @TO@ MethodName:assertEquals:[Integer.valueOf(50), twitterEndpoint.getProperties().getCount()] @AT@ 2698 @LENGTH@ 73
---------INS MethodInvocation@@Integer.valueOf(50) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(50), twitterEndpoint.getProperties().getCount()] @AT@ 2711 @LENGTH@ 19
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(50) @AT@ 2711 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[50] @TO@ MethodInvocation@@Integer.valueOf(50) @AT@ 2719 @LENGTH@ 11
---------------INS NumberLiteral@@50 @TO@ SimpleName@@MethodName:valueOf:[50] @AT@ 2727 @LENGTH@ 2
---------DEL ClassInstanceCreation@@Integer[50] @AT@ 2711 @LENGTH@ 15
------------DEL New@@new @AT@ 2711 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2715 @LENGTH@ 7
------------DEL NumberLiteral@@50 @AT@ 2723 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OAuth2AuthorizationCodeGrantWebFilterTests,  @AT@ 4563 @LENGTH@ 198
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 4563 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 4570 @LENGTH@ 4
---INS SimpleName@@MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 4575 @LENGTH@ 70
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @TO@ MethodDeclaration@@public, void, MethodName:setRequestCacheWhenRequestCacheIsNullThenThrowIllegalArgumentException,  @AT@ 4652 @LENGTH@ 106
------INS MethodInvocation@@assertThatCode(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4652 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.filter.setRequestCache(null)] @TO@ MethodInvocation@@assertThatCode(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4652 @LENGTH@ 55
------------INS LambdaExpression@@() -> this.filter.setRequestCache(null) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.filter.setRequestCache(null)] @AT@ 4667 @LENGTH@ 39
---------------INS MethodInvocation@@this.filter.setRequestCache(null) @TO@ LambdaExpression@@() -> this.filter.setRequestCache(null) @AT@ 4673 @LENGTH@ 33
------------------INS FieldAccess@@this.filter @TO@ MethodInvocation@@this.filter.setRequestCache(null) @AT@ 4673 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.filter @AT@ 4673 @LENGTH@ 4
---------------------INS SimpleName@@filter @TO@ FieldAccess@@this.filter @AT@ 4678 @LENGTH@ 6
------------------INS SimpleName@@MethodName:setRequestCache:[null] @TO@ MethodInvocation@@this.filter.setRequestCache(null) @AT@ 4685 @LENGTH@ 21
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setRequestCache:[null] @AT@ 4701 @LENGTH@ 4
---------INS SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.filter.setRequestCache(null)).isInstanceOf(IllegalArgumentException.class) @AT@ 4713 @LENGTH@ 44
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 4726 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:assertEquals(MessageHelper.getContentType(exchange.getOut()),"image/jpeg","Get a wrong content-type") @TO@ MethodInvocation:assertEquals("image/jpeg",MessageHelper.getContentType(exchange.getOut()),"Get a wrong content-type") @AT@ 1784 @LENGTH@ 104
---UPD MethodInvocation@@assertEquals(MessageHelper.getContentType(exchange.getOut()),"image/jpeg","Get a wrong content-type") @TO@ assertEquals("image/jpeg",MessageHelper.getContentType(exchange.getOut()),"Get a wrong content-type") @AT@ 1784 @LENGTH@ 103
------UPD SimpleName@@MethodName:assertEquals:[MessageHelper.getContentType(exchange.getOut()), "image/jpeg", "Get a wrong content-type"] @TO@ MethodName:assertEquals:["image/jpeg", MessageHelper.getContentType(exchange.getOut()), "Get a wrong content-type"] @AT@ 1784 @LENGTH@ 103
---------MOV MethodInvocation@@MessageHelper.getContentType(exchange.getOut()) @TO@ SimpleName@@MethodName:assertEquals:[MessageHelper.getContentType(exchange.getOut()), "image/jpeg", "Get a wrong content-type"] @AT@ 1797 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:this.LOGGER.debug("No matches found") @TO@ MethodInvocation:this.logger.debug("No matches found") @AT@ 1731 @LENGTH@ 38
---UPD MethodInvocation@@this.LOGGER.debug("No matches found") @TO@ this.logger.debug("No matches found") @AT@ 1731 @LENGTH@ 37
------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1731 @LENGTH@ 11
---------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1736 @LENGTH@ 6


UPD VariableDeclarationStatement@@String headerName=!this.reportOnly ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER; @TO@ String headerName=(!this.reportOnly) ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER; @AT@ 4348 @LENGTH@ 119
---UPD VariableDeclarationFragment@@headerName=!this.reportOnly ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER @TO@ headerName=(!this.reportOnly) ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER @AT@ 4355 @LENGTH@ 111
------UPD ConditionalExpression@@!this.reportOnly ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER @TO@ (!this.reportOnly) ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER @AT@ 4368 @LENGTH@ 98
---------INS ParenthesizedExpression@@(!this.reportOnly) @TO@ ConditionalExpression@@!this.reportOnly ? CONTENT_SECURITY_POLICY_HEADER : CONTENT_SECURITY_POLICY_REPORT_ONLY_HEADER @AT@ 4368 @LENGTH@ 18
------------MOV PrefixExpression@@!this.reportOnly @TO@ ParenthesizedExpression@@(!this.reportOnly) @AT@ 4368 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process") @TO@ MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process") @AT@ 2669 @LENGTH@ 171
---UPD MethodInvocation@@from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process") @TO@ from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process") @AT@ 2669 @LENGTH@ 170
------UPD SimpleName@@MethodName:inOut:["seda:process"] @TO@ MethodName:to:[ExchangePattern.InOut, "seda:process"] @AT@ 2818 @LENGTH@ 21
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:["seda:process"] @AT@ 2862 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2862 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2878 @LENGTH@ 5


UPD ReturnStatement@@ConditionalExpression:allowed ? ACCESS_GRANTED : ACCESS_DENIED @TO@ ConditionalExpression:this.preAdvice.before(authentication,method,preAttr) ? ACCESS_GRANTED : ACCESS_DENIED @AT@ 2723 @LENGTH@ 48
---UPD ConditionalExpression@@allowed ? ACCESS_GRANTED : ACCESS_DENIED @TO@ this.preAdvice.before(authentication,method,preAttr) ? ACCESS_GRANTED : ACCESS_DENIED @AT@ 2730 @LENGTH@ 40
------MOV MethodInvocation@@this.preAdvice.before(authentication,method,preAttr) @TO@ ConditionalExpression@@allowed ? ACCESS_GRANTED : ACCESS_DENIED @AT@ 2664 @LENGTH@ 54
------DEL SimpleName@@allowed @AT@ 2730 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]TestRoutes, SpringRouteBuilder @TO@ [public, static]TestRoutes, RouteBuilder @AT@ 3538 @LENGTH@ 1308
---UPD SimpleType@@SpringRouteBuilder @TO@ RouteBuilder @AT@ 3577 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2164 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2164 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2180 @LENGTH@ 21


UPD TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  return distanceConverter.convert(getConnection().geodist(key,member1,member2,geoUnit));} catch (Exception ex) {  throw convertLettuceAccessException(ex);} @TO@ try {  if (isPipelined()) {    pipeline(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  Double distance=getConnection().geodist(key,member1,member2,geoUnit);  return distance != null ? distanceConverter.convert(distance) : null;} catch (Exception ex) {  throw convertLettuceAccessException(ex);} @AT@ 5408 @LENGTH@ 528
---UPD ReturnStatement@@MethodInvocation:distanceConverter.convert(getConnection().geodist(key,member1,member2,geoUnit)) @TO@ ConditionalExpression:distance != null ? distanceConverter.convert(distance) : null @AT@ 5771 @LENGTH@ 90
------DEL MethodInvocation@@distanceConverter.convert(getConnection().geodist(key,member1,member2,geoUnit)) @AT@ 5778 @LENGTH@ 82
------INS ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @TO@ ReturnStatement@@MethodInvocation:distanceConverter.convert(getConnection().geodist(key,member1,member2,geoUnit)) @AT@ 5857 @LENGTH@ 61
---------INS InfixExpression@@distance != null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5857 @LENGTH@ 16
------------INS SimpleName@@distance @TO@ InfixExpression@@distance != null @AT@ 5857 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@distance != null @AT@ 5865 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@distance != null @AT@ 5869 @LENGTH@ 4
---------INS MethodInvocation@@distanceConverter.convert(distance) @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5876 @LENGTH@ 35
------------MOV SimpleName@@Name:distanceConverter @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 5778 @LENGTH@ 17
------------MOV SimpleName@@MethodName:convert:[getConnection().geodist(key,member1,member2,geoUnit)] @TO@ MethodInvocation@@distanceConverter.convert(distance) @AT@ 5796 @LENGTH@ 64
---------------INS SimpleName@@distance @TO@ SimpleName@@MethodName:convert:[getConnection().geodist(key,member1,member2,geoUnit)] @AT@ 5902 @LENGTH@ 8
---------INS NullLiteral@@null @TO@ ConditionalExpression@@distance != null ? distanceConverter.convert(distance) : null @AT@ 5914 @LENGTH@ 4
---INS VariableDeclarationStatement@@Double distance=getConnection().geodist(key,member1,member2,geoUnit); @TO@ TryStatement@@try {  if (isPipelined()) {    pipeline(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  if (isQueueing()) {    transaction(connection.newLettuceResult(getAsyncConnection().geodist(key,member1,member2,geoUnit),distanceConverter));    return null;  }  return distanceConverter.convert(getConnection().geodist(key,member1,member2,geoUnit));} catch (Exception ex) {  throw convertLettuceAccessException(ex);} @AT@ 5772 @LENGTH@ 74
------INS SimpleType@@Double @TO@ VariableDeclarationStatement@@Double distance=getConnection().geodist(key,member1,member2,geoUnit); @AT@ 5772 @LENGTH@ 6
------INS VariableDeclarationFragment@@distance=getConnection().geodist(key,member1,member2,geoUnit) @TO@ VariableDeclarationStatement@@Double distance=getConnection().geodist(key,member1,member2,geoUnit); @AT@ 5779 @LENGTH@ 66
---------INS SimpleName@@distance @TO@ VariableDeclarationFragment@@distance=getConnection().geodist(key,member1,member2,geoUnit) @AT@ 5779 @LENGTH@ 8
---------MOV MethodInvocation@@getConnection().geodist(key,member1,member2,geoUnit) @TO@ VariableDeclarationFragment@@distance=getConnection().geodist(key,member1,member2,geoUnit) @AT@ 5804 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Response has already been committed. Unable to redirect to " + targetUrl) @TO@ MethodInvocation:this.logger.debug(LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl)) @AT@ 3552 @LENGTH@ 93
---UPD MethodInvocation@@this.logger.debug("Response has already been committed. Unable to redirect to " + targetUrl) @TO@ this.logger.debug(LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl)) @AT@ 3552 @LENGTH@ 92
------UPD SimpleName@@MethodName:debug:["Response has already been committed. Unable to redirect to " + targetUrl] @TO@ MethodName:format:["Response has already been committed. Unable to redirect to %s", targetUrl] @AT@ 3564 @LENGTH@ 80
------INS SimpleName@@MethodName:debug:[LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl)] @TO@ MethodInvocation@@this.logger.debug("Response has already been committed. Unable to redirect to " + targetUrl) @AT@ 3611 @LENGTH@ 106
---------INS MethodInvocation@@LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl)] @AT@ 3623 @LENGTH@ 93
------------MOV SimpleName@@MethodName:debug:["Response has already been committed. Unable to redirect to " + targetUrl] @TO@ MethodInvocation@@LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl) @AT@ 3564 @LENGTH@ 80
---------------DEL InfixExpression@@"Response has already been committed. Unable to redirect to " + targetUrl @AT@ 3570 @LENGTH@ 73
------------------DEL StringLiteral@@"Response has already been committed. Unable to redirect to " @AT@ 3570 @LENGTH@ 61
------------------DEL Operator@@+ @AT@ 3631 @LENGTH@ 1
------------------DEL SimpleName@@targetUrl @AT@ 3634 @LENGTH@ 9
---------------INS StringLiteral@@"Response has already been committed. Unable to redirect to %s" @TO@ SimpleName@@MethodName:debug:["Response has already been committed. Unable to redirect to " + targetUrl] @AT@ 3641 @LENGTH@ 63
---------------INS SimpleName@@targetUrl @TO@ SimpleName@@MethodName:debug:["Response has already been committed. Unable to redirect to " + targetUrl] @AT@ 3706 @LENGTH@ 9
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Response has already been committed. Unable to redirect to %s",targetUrl) @AT@ 3623 @LENGTH@ 10


UPD TypeDeclaration@@[private, static]PropertyBindingKeyComparator, [Comparator<String>] @TO@ [private, static, final]PropertyBindingKeyComparator, [Comparator<String>] @AT@ 25930 @LENGTH@ 1082
---INS Modifier@@final @TO@ TypeDeclaration@@[private, static]PropertyBindingKeyComparator, [Comparator<String>] @AT@ 25917 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("PreAuthenticated WebSphere principal: %s",principal)) @TO@ MethodDeclaration@@protected, Object, MethodName:getPreAuthenticatedPrincipal, HttpServletRequest httpRequest,  @AT@ 1938 @LENGTH@ 92
---MOV MethodInvocation@@this.logger.debug("PreAuthenticated WebSphere principal: " + principal) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("PreAuthenticated WebSphere principal: %s",principal)) @AT@ 1929 @LENGTH@ 71
------UPD SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @TO@ MethodName:format:["PreAuthenticated WebSphere principal: %s", principal] @AT@ 1941 @LENGTH@ 59
------INS SimpleName@@MethodName:debug:[LogMessage.format("PreAuthenticated WebSphere principal: %s",principal)] @TO@ MethodInvocation@@this.logger.debug("PreAuthenticated WebSphere principal: " + principal) @AT@ 1950 @LENGTH@ 79
---------INS MethodInvocation@@LogMessage.format("PreAuthenticated WebSphere principal: %s",principal) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("PreAuthenticated WebSphere principal: %s",principal)] @AT@ 1956 @LENGTH@ 72
------------MOV SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated WebSphere principal: %s",principal) @AT@ 1941 @LENGTH@ 59
---------------DEL InfixExpression@@"PreAuthenticated WebSphere principal: " + principal @AT@ 1947 @LENGTH@ 52
------------------DEL StringLiteral@@"PreAuthenticated WebSphere principal: " @AT@ 1947 @LENGTH@ 40
------------------DEL Operator@@+ @AT@ 1987 @LENGTH@ 1
------------------DEL SimpleName@@principal @AT@ 1990 @LENGTH@ 9
---------------INS StringLiteral@@"PreAuthenticated WebSphere principal: %s" @TO@ SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @AT@ 1974 @LENGTH@ 42
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @AT@ 2018 @LENGTH@ 9
------------MOV SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated WebSphere principal: %s",principal) @AT@ 1941 @LENGTH@ 59
---------------DEL InfixExpression@@"PreAuthenticated WebSphere principal: " + principal @AT@ 1947 @LENGTH@ 52
------------------DEL StringLiteral@@"PreAuthenticated WebSphere principal: " @AT@ 1947 @LENGTH@ 40
------------------DEL Operator@@+ @AT@ 1987 @LENGTH@ 1
------------------DEL SimpleName@@principal @AT@ 1990 @LENGTH@ 9
---------------INS StringLiteral@@"PreAuthenticated WebSphere principal: %s" @TO@ SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @AT@ 1974 @LENGTH@ 42
---------------INS SimpleName@@principal @TO@ SimpleName@@MethodName:debug:["PreAuthenticated WebSphere principal: " + principal] @AT@ 2018 @LENGTH@ 9
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("PreAuthenticated WebSphere principal: %s",principal) @AT@ 1956 @LENGTH@ 10


UPD VariableDeclarationStatement@@String fileName=exchange.getOut().getHeader(Exchange.FILE_NAME,String.class); @TO@ String fileName=exchange.getMessage().getHeader(Exchange.FILE_NAME,String.class); @AT@ 3452 @LENGTH@ 80
---UPD VariableDeclarationFragment@@fileName=exchange.getOut().getHeader(Exchange.FILE_NAME,String.class) @TO@ fileName=exchange.getMessage().getHeader(Exchange.FILE_NAME,String.class) @AT@ 3459 @LENGTH@ 72
------UPD MethodInvocation@@exchange.getOut().getHeader(Exchange.FILE_NAME,String.class) @TO@ exchange.getMessage().getHeader(Exchange.FILE_NAME,String.class) @AT@ 3470 @LENGTH@ 61
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3470 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(null,out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2163 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(null,out.getOut().getBody()) @TO@ assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2163 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody()] @AT@ 2163 @LENGTH@ 42
---------DEL NullLiteral@@null @AT@ 2176 @LENGTH@ 4
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 2182 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2182 @LENGTH@ 12
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @AT@ 2241 @LENGTH@ 13


UPD VariableDeclarationStatement@@Long timeout=new Long(1); @TO@ Long timeout=Long.valueOf(1); @AT@ 3973 @LENGTH@ 27
---UPD VariableDeclarationFragment@@timeout=new Long(1) @TO@ timeout=Long.valueOf(1) @AT@ 3978 @LENGTH@ 21
------DEL ClassInstanceCreation@@Long[1] @AT@ 3988 @LENGTH@ 11
---------DEL New@@new @AT@ 3988 @LENGTH@ 3
---------DEL SimpleType@@Long @AT@ 3992 @LENGTH@ 4
---------DEL NumberLiteral@@1 @AT@ 3997 @LENGTH@ 1
------INS MethodInvocation@@Long.valueOf(1) @TO@ VariableDeclarationFragment@@timeout=new Long(1) @AT@ 3992 @LENGTH@ 15
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 3992 @LENGTH@ 4
---------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 3997 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 4005 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(result,"Hello Willem","Can't get the right response") @TO@ MethodInvocation:assertEquals("Hello Willem",result,"Can't get the right response") @AT@ 1351 @LENGTH@ 69
---UPD MethodInvocation@@assertEquals(result,"Hello Willem","Can't get the right response") @TO@ assertEquals("Hello Willem",result,"Can't get the right response") @AT@ 1351 @LENGTH@ 68
------UPD SimpleName@@MethodName:assertEquals:[result, "Hello Willem", "Can't get the right response"] @TO@ MethodName:assertEquals:["Hello Willem", result, "Can't get the right response"] @AT@ 1351 @LENGTH@ 68
---------INS StringLiteral@@"Hello Willem" @TO@ SimpleName@@MethodName:assertEquals:[result, "Hello Willem", "Can't get the right response"] @AT@ 1364 @LENGTH@ 14
---------DEL StringLiteral@@"Hello Willem" @AT@ 1372 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(result.getPriority(),"GOLD") @TO@ MethodInvocation:assertEquals("GOLD",result.getPriority()) @AT@ 2232 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(result.getPriority(),"GOLD") @TO@ assertEquals("GOLD",result.getPriority()) @AT@ 2232 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[result.getPriority(), "GOLD"] @TO@ MethodName:assertEquals:["GOLD", result.getPriority()] @AT@ 2232 @LENGTH@ 42
---------INS StringLiteral@@"GOLD" @TO@ SimpleName@@MethodName:assertEquals:[result.getPriority(), "GOLD"] @AT@ 2245 @LENGTH@ 6
---------DEL StringLiteral@@"GOLD" @AT@ 2267 @LENGTH@ 6


DEL IfStatement@@if (configurer == null) {  throw new IllegalStateException("permitAll only works with HttpSecurity.authorizeRequests()");} @AT@ 1749 @LENGTH@ 127
---DEL InfixExpression@@configurer == null @AT@ 1753 @LENGTH@ 18
---DEL Block@@ThenBody:{  throw new IllegalStateException("permitAll only works with HttpSecurity.authorizeRequests()");} @AT@ 1773 @LENGTH@ 103
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("permitAll only works with HttpSecurity.authorizeRequests()") @AT@ 1778 @LENGTH@ 94
---------DEL ClassInstanceCreation@@IllegalStateException["permitAll only works with HttpSecurity.authorizeRequests()"] @AT@ 1784 @LENGTH@ 87
------------DEL New@@new @AT@ 1784 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 1788 @LENGTH@ 21
------------DEL StringLiteral@@"permitAll only works with HttpSecurity.authorizeRequests()" @AT@ 1810 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:assertEquals(bean.getFoo(),5,"converted using exchange") @TO@ MethodInvocation:assertEquals(5,bean.getFoo(),"converted using exchange") @AT@ 9208 @LENGTH@ 59
---UPD MethodInvocation@@assertEquals(bean.getFoo(),5,"converted using exchange") @TO@ assertEquals(5,bean.getFoo(),"converted using exchange") @AT@ 9208 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertEquals:[bean.getFoo(), 5, "converted using exchange"] @TO@ MethodName:assertEquals:[5, bean.getFoo(), "converted using exchange"] @AT@ 9208 @LENGTH@ 58
---------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:assertEquals:[bean.getFoo(), 5, "converted using exchange"] @AT@ 9221 @LENGTH@ 1
---------DEL NumberLiteral@@5 @AT@ 9236 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t) @TO@ MethodInvocation:LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t.getMessage(),t) @AT@ 20635 @LENGTH@ 60
---UPD MethodInvocation@@LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t) @TO@ LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t.getMessage(),t) @AT@ 20635 @LENGTH@ 59
------UPD SimpleName@@MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t] @TO@ MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t.getMessage(), t] @AT@ 20639 @LENGTH@ 55
---------INS MethodInvocation@@t.getMessage() @TO@ SimpleName@@MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t] @AT@ 20692 @LENGTH@ 14
------------INS SimpleName@@Name:t @TO@ MethodInvocation@@t.getMessage() @AT@ 20692 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@t.getMessage() @AT@ 20694 @LENGTH@ 12


DEL FieldDeclaration@@public, static, final, CamelLogger, [DEFAULT_CAMEL_LOGGER=new CamelLogger()] @AT@ 1633 @LENGTH@ 73
---DEL Modifier@@public @AT@ 1633 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1640 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1647 @LENGTH@ 5
---DEL SimpleType@@CamelLogger @AT@ 1653 @LENGTH@ 11
---DEL VariableDeclarationFragment@@DEFAULT_CAMEL_LOGGER=new CamelLogger() @AT@ 1665 @LENGTH@ 40
------DEL SimpleName@@DEFAULT_CAMEL_LOGGER @AT@ 1665 @LENGTH@ 20
------DEL ClassInstanceCreation@@CamelLogger[] @AT@ 1688 @LENGTH@ 17
---------DEL New@@new @AT@ 1688 @LENGTH@ 3
---------DEL SimpleType@@CamelLogger @AT@ 1692 @LENGTH@ 11


UPD FieldDeclaration@@private, String, [className] @TO@ private, final, String, [className] @AT@ 914 @LENGTH@ 25
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [className] @AT@ 922 @LENGTH@ 5


MOV MethodDeclaration@@private, voidMethodName:ExpressionBasedMessageSecurityMetadataSourceFactory,  @TO@ TypeDeclaration@@[public, final]ExpressionBasedMessageSecurityMetadataSourceFactory,  @AT@ 5870 @LENGTH@ 66


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowired, Exception,  @AT@ 2706 @LENGTH@ 615
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowired @AT@ 2718 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ MethodInvocation:assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 3157 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 3157 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @TO@ MethodName:assertEquals:["123", String.valueOf(response.getId()), "Get a wrong customer id"] @AT@ 3157 @LENGTH@ 80
---------MOV MethodInvocation@@String.valueOf(response.getId()) @TO@ SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @AT@ 3170 @LENGTH@ 32


UPD IfStatement@@if (this.logger.isWarnEnabled()) {  this.logger.warn("No Listener for returned message");} @TO@ if (this.logger.isDebugEnabled()) {  this.logger.debug("No Listener for returned message");} @AT@ 35396 @LENGTH@ 97
---UPD MethodInvocation@@this.logger.isWarnEnabled() @TO@ this.logger.isDebugEnabled() @AT@ 35400 @LENGTH@ 27
------UPD SimpleName@@MethodName:isWarnEnabled:[] @TO@ MethodName:isDebugEnabled:[] @AT@ 35412 @LENGTH@ 15
---UPD Block@@ThenBody:{  this.logger.warn("No Listener for returned message");} @TO@ ThenBody:{  this.logger.debug("No Listener for returned message");} @AT@ 35429 @LENGTH@ 64
------UPD ExpressionStatement@@MethodInvocation:this.logger.warn("No Listener for returned message") @TO@ MethodInvocation:this.logger.debug("No Listener for returned message") @AT@ 35435 @LENGTH@ 53
---------UPD MethodInvocation@@this.logger.warn("No Listener for returned message") @TO@ this.logger.debug("No Listener for returned message") @AT@ 35435 @LENGTH@ 52
------------UPD SimpleName@@MethodName:warn:["No Listener for returned message"] @TO@ MethodName:debug:["No Listener for returned message"] @AT@ 35447 @LENGTH@ 40


INS MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]TestRangerLoadTask,  @AT@ 16080 @LENGTH@ 1335
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16080 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16087 @LENGTH@ 4
---INS SimpleName@@MethodName:testRangerEndpointCreation @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16092 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16128 @LENGTH@ 9
---INS VariableDeclarationStatement@@RangerRestClientImpl rangerRestClient=new RangerRestClientImpl(); @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16144 @LENGTH@ 67
------INS SimpleType@@RangerRestClientImpl @TO@ VariableDeclarationStatement@@RangerRestClientImpl rangerRestClient=new RangerRestClientImpl(); @AT@ 16144 @LENGTH@ 20
------INS VariableDeclarationFragment@@rangerRestClient=new RangerRestClientImpl() @TO@ VariableDeclarationStatement@@RangerRestClientImpl rangerRestClient=new RangerRestClientImpl(); @AT@ 16165 @LENGTH@ 45
---------INS SimpleName@@rangerRestClient @TO@ VariableDeclarationFragment@@rangerRestClient=new RangerRestClientImpl() @AT@ 16165 @LENGTH@ 16
---------INS ClassInstanceCreation@@RangerRestClientImpl[] @TO@ VariableDeclarationFragment@@rangerRestClient=new RangerRestClientImpl() @AT@ 16184 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@RangerRestClientImpl[] @AT@ 16184 @LENGTH@ 3
------------INS SimpleType@@RangerRestClientImpl @TO@ ClassInstanceCreation@@RangerRestClientImpl[] @AT@ 16188 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16216 @LENGTH@ 345
------INS MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16216 @LENGTH@ 344
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16216 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")] @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16223 @LENGTH@ 337
------------INS MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @TO@ SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")] @AT@ 16234 @LENGTH@ 325
---------------INS MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080", "hive", "dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16234 @LENGTH@ 92
------------------INS StringLiteral@@"http://ranger.apache.org:6080" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080", "hive", "dbname"] @AT@ 16270 @LENGTH@ 31
------------------INS StringLiteral@@"hive" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080", "hive", "dbname"] @AT@ 16309 @LENGTH@ 6
------------------INS StringLiteral@@"dbname" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080", "hive", "dbname"] @AT@ 16317 @LENGTH@ 8
---------------INS SimpleName@@Name:rangerRestClient @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16234 @LENGTH@ 16
---------------INS SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full"] @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16327 @LENGTH@ 232
------------------INS InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @TO@ SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full"] @AT@ 16334 @LENGTH@ 224
---------------------INS StringLiteral@@"http://ranger.apache.org:6080/service/plugins/" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16334 @LENGTH@ 48
---------------------INS Operator@@+ @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16382 @LENGTH@ 1
---------------------INS StringLiteral@@"policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16391 @LENGTH@ 101
---------------------INS StringLiteral@@"&resourceMatchScope=self_or_ancestor&resourceMatch=full" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16501 @LENGTH@ 57
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16567 @LENGTH@ 346
------INS MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16567 @LENGTH@ 345
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16567 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")] @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")) @AT@ 16574 @LENGTH@ 338
------------INS MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @TO@ SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full")] @AT@ 16585 @LENGTH@ 326
---------------INS MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080/", "hive", "dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16585 @LENGTH@ 93
------------------INS StringLiteral@@"http://ranger.apache.org:6080/" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080/", "hive", "dbname"] @AT@ 16621 @LENGTH@ 32
------------------INS StringLiteral@@"hive" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080/", "hive", "dbname"] @AT@ 16661 @LENGTH@ 6
------------------INS StringLiteral@@"dbname" @TO@ MethodInvocation@@MethodName:getRangerExportUrl:["http://ranger.apache.org:6080/", "hive", "dbname"] @AT@ 16669 @LENGTH@ 8
---------------INS SimpleName@@Name:rangerRestClient @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16585 @LENGTH@ 16
---------------INS SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full"] @TO@ MethodInvocation@@rangerRestClient.getRangerExportUrl("http://ranger.apache.org:6080/","hive","dbname").equals("http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full") @AT@ 16679 @LENGTH@ 232
------------------INS InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @TO@ SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full"] @AT@ 16686 @LENGTH@ 224
---------------------INS StringLiteral@@"http://ranger.apache.org:6080/service/plugins/" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16686 @LENGTH@ 48
---------------------INS Operator@@+ @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16734 @LENGTH@ 1
---------------------INS StringLiteral@@"policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16743 @LENGTH@ 101
---------------------INS StringLiteral@@"&resourceMatchScope=self_or_ancestor&resourceMatch=full" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/" + "policies/exportJson?serviceName=hive&polResource=dbname&resource%3Adatabase=dbname&serviceType=hive" + "&resourceMatchScope=self_or_ancestor&resourceMatch=full" @AT@ 16853 @LENGTH@ 57
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 16919 @LENGTH@ 243
------INS MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 16919 @LENGTH@ 242
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 16919 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")] @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 16926 @LENGTH@ 235
------------INS MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @TO@ SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")] @AT@ 16937 @LENGTH@ 223
---------------INS MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080/", "dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 16937 @LENGTH@ 85
------------------INS StringLiteral@@"http://ranger.apache.org:6080/" @TO@ MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080/", "dbname"] @AT@ 16973 @LENGTH@ 32
------------------INS StringLiteral@@"dbname" @TO@ MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080/", "dbname"] @AT@ 17013 @LENGTH@ 8
---------------INS SimpleName@@Name:rangerRestClient @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 16937 @LENGTH@ 16
---------------INS SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080/","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 17023 @LENGTH@ 137
------------------INS InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @TO@ SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname"] @AT@ 17030 @LENGTH@ 129
---------------------INS StringLiteral@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17030 @LENGTH@ 79
---------------------INS Operator@@+ @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17109 @LENGTH@ 1
---------------------INS StringLiteral@@"?updateIfExists=true&polResource=dbname" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17118 @LENGTH@ 41
---INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @TO@ MethodDeclaration@@public, void, MethodName:testRangerEndpointCreation, Exception,  @AT@ 17168 @LENGTH@ 242
------INS MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 17168 @LENGTH@ 241
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 17168 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")] @TO@ MethodInvocation@@Assert.assertTrue(rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")) @AT@ 17175 @LENGTH@ 234
------------INS MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @TO@ SimpleName@@MethodName:assertTrue:[rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname")] @AT@ 17186 @LENGTH@ 222
---------------INS MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080", "dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 17186 @LENGTH@ 84
------------------INS StringLiteral@@"http://ranger.apache.org:6080" @TO@ MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080", "dbname"] @AT@ 17222 @LENGTH@ 31
------------------INS StringLiteral@@"dbname" @TO@ MethodInvocation@@MethodName:getRangerImportUrl:["http://ranger.apache.org:6080", "dbname"] @AT@ 17261 @LENGTH@ 8
---------------INS SimpleName@@Name:rangerRestClient @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 17186 @LENGTH@ 16
---------------INS SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname"] @TO@ MethodInvocation@@rangerRestClient.getRangerImportUrl("http://ranger.apache.org:6080","dbname").equals("http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname") @AT@ 17271 @LENGTH@ 137
------------------INS InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @TO@ SimpleName@@MethodName:equals:["http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname"] @AT@ 17278 @LENGTH@ 129
---------------------INS StringLiteral@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17278 @LENGTH@ 79
---------------------INS Operator@@+ @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17357 @LENGTH@ 1
---------------------INS StringLiteral@@"?updateIfExists=true&polResource=dbname" @TO@ InfixExpression@@"http://ranger.apache.org:6080/service/plugins/policies/importPoliciesFromFile" + "?updateIfExists=true&polResource=dbname" @AT@ 17366 @LENGTH@ 41


MOV FieldDeclaration@@protected, ExceptionPolicyStrategy, [exceptionPolicy=DefaultExceptionPolicyStrategy.INSTANCE] @TO@ TypeDeclaration@@[public, abstract]ErrorHandlerSupport, ChildServiceSupport[ErrorHandler] @AT@ 1454 @LENGTH@ 92


UPD ConstructorInvocation@@this(error,cause.getMessage(),cause); @TO@ this(error,(cause != null) ? cause.getMessage() : error.getDescription(),cause); @AT@ 2130 @LENGTH@ 39
---INS ConditionalExpression@@(cause != null) ? cause.getMessage() : error.getDescription() @TO@ ConstructorInvocation@@this(error,cause.getMessage(),cause); @AT@ 2142 @LENGTH@ 61
------INS ParenthesizedExpression@@(cause != null) @TO@ ConditionalExpression@@(cause != null) ? cause.getMessage() : error.getDescription() @AT@ 2142 @LENGTH@ 15
---------INS InfixExpression@@cause != null @TO@ ParenthesizedExpression@@(cause != null) @AT@ 2143 @LENGTH@ 13
------------INS SimpleName@@cause @TO@ InfixExpression@@cause != null @AT@ 2143 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@cause != null @AT@ 2148 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@cause != null @AT@ 2152 @LENGTH@ 4
------INS MethodInvocation@@cause.getMessage() @TO@ ConditionalExpression@@(cause != null) ? cause.getMessage() : error.getDescription() @AT@ 2160 @LENGTH@ 18
---------MOV SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 2142 @LENGTH@ 5
---------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 2148 @LENGTH@ 12
------INS MethodInvocation@@error.getDescription() @TO@ ConditionalExpression@@(cause != null) ? cause.getMessage() : error.getDescription() @AT@ 2181 @LENGTH@ 22
---------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getDescription() @AT@ 2181 @LENGTH@ 5
---------INS SimpleName@@MethodName:getDescription:[] @TO@ MethodInvocation@@error.getDescription() @AT@ 2187 @LENGTH@ 16
---DEL MethodInvocation@@cause.getMessage() @AT@ 2142 @LENGTH@ 18


INS MethodDeclaration@@private, voidMethodName:SchemaHelper,  @TO@ TypeDeclaration@@[public, final]SchemaHelper,  @AT@ 911 @LENGTH@ 30
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SchemaHelper,  @AT@ 911 @LENGTH@ 7
---INS SimpleName@@MethodName:SchemaHelper @TO@ MethodDeclaration@@private, voidMethodName:SchemaHelper,  @AT@ 919 @LENGTH@ 12


DEL VariableDeclarationStatement@@boolean allowed=this.preAdvice.before(authentication,method,preAttr); @AT@ 2646 @LENGTH@ 73
---DEL PrimitiveType@@boolean @AT@ 2646 @LENGTH@ 7
---DEL VariableDeclarationFragment@@allowed=this.preAdvice.before(authentication,method,preAttr) @AT@ 2654 @LENGTH@ 64
------DEL SimpleName@@allowed @AT@ 2654 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault) @TO@ MethodInvocation:exchange.getMessage().setBody(fault) @AT@ 2407 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(fault) @TO@ exchange.getMessage().setBody(fault) @AT@ 2407 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2407 @LENGTH@ 17


UPD TypeDeclaration@@[@TestMethodOrder(Alphanumeric.class), public]AckModeNoneTest, PubsubTestSupport @TO@ [@TestMethodOrder(MethodOrderer.MethodName.class), public]AckModeNoneTest, PubsubTestSupport @AT@ 1432 @LENGTH@ 1831
---UPD SingleMemberAnnotation@@@TestMethodOrder(Alphanumeric.class) @TO@ @TestMethodOrder(MethodOrderer.MethodName.class) @AT@ 1432 @LENGTH@ 36


MOV ReturnStatement@@ClassInstanceCreation:new CsrfAuthenticationStrategy(this.csrfTokenRepository) @TO@ MethodDeclaration@@private, SessionAuthenticationStrategy, MethodName:getSessionAuthenticationStrategy,  @AT@ 12111 @LENGTH@ 64


UPD ExpressionStatement@@MethodInvocation:assertEquals(numAttachments,"2") @TO@ MethodInvocation:assertEquals("2",numAttachments) @AT@ 2800 @LENGTH@ 34
---UPD MethodInvocation@@assertEquals(numAttachments,"2") @TO@ assertEquals("2",numAttachments) @AT@ 2800 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertEquals:[numAttachments, "2"] @TO@ MethodName:assertEquals:["2", numAttachments] @AT@ 2800 @LENGTH@ 33
---------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:assertEquals:[numAttachments, "2"] @AT@ 2813 @LENGTH@ 3
---------DEL StringLiteral@@"2" @AT@ 2829 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:authentication.filter((a) -> a.isAuthenticated()).flatMapIterable((a) -> a.getAuthorities()).map((g) -> g.getAuthority()).any((a) -> this.authorities.contains(a)).map((hasAuthority) -> new AuthorizationDecision(hasAuthority)).defaultIfEmpty(new AuthorizationDecision(false)) @TO@ MethodInvocation:authentication.filter((a) -> a.isAuthenticated()).flatMapIterable(Authentication::getAuthorities).map(GrantedAuthority::getAuthority).any(this.authorities::contains).map(AuthorizationDecision::new).defaultIfEmpty(new AuthorizationDecision(false)) @AT@ 1490 @LENGTH@ 297
---UPD MethodInvocation@@authentication.filter((a) -> a.isAuthenticated()).flatMapIterable((a) -> a.getAuthorities()).map((g) -> g.getAuthority()).any((a) -> this.authorities.contains(a)).map((hasAuthority) -> new AuthorizationDecision(hasAuthority)).defaultIfEmpty(new AuthorizationDecision(false)) @TO@ authentication.filter((a) -> a.isAuthenticated()).flatMapIterable(Authentication::getAuthorities).map(GrantedAuthority::getAuthority).any(this.authorities::contains).map(AuthorizationDecision::new).defaultIfEmpty(new AuthorizationDecision(false)) @AT@ 1497 @LENGTH@ 289
------UPD MethodInvocation@@MethodName:map:[(hasAuthority) -> new AuthorizationDecision(hasAuthority)] @TO@ MethodName:map:[AuthorizationDecision::new] @AT@ 1497 @LENGTH@ 235
---------DEL LambdaExpression@@(hasAuthority) -> new AuthorizationDecision(hasAuthority) @AT@ 1674 @LENGTH@ 57
------------DEL VariableDeclarationFragment@@hasAuthority @AT@ 1675 @LENGTH@ 12
---------------DEL SimpleName@@hasAuthority @AT@ 1675 @LENGTH@ 12
------------DEL ClassInstanceCreation@@AuthorizationDecision[hasAuthority] @AT@ 1692 @LENGTH@ 39
---------------DEL New@@new @AT@ 1692 @LENGTH@ 3
---------------DEL SimpleType@@AuthorizationDecision @AT@ 1696 @LENGTH@ 21
---------------DEL SimpleName@@hasAuthority @AT@ 1718 @LENGTH@ 12
------UPD MethodInvocation@@MethodName:any:[(a) -> this.authorities.contains(a)] @TO@ MethodName:any:[this.authorities::contains] @AT@ 1497 @LENGTH@ 167
---------DEL LambdaExpression@@(a) -> this.authorities.contains(a) @AT@ 1628 @LENGTH@ 35
------------DEL VariableDeclarationFragment@@a @AT@ 1629 @LENGTH@ 1
---------------DEL SimpleName@@a @AT@ 1629 @LENGTH@ 1
------------DEL MethodInvocation@@this.authorities.contains(a) @AT@ 1635 @LENGTH@ 28
---------------DEL FieldAccess@@this.authorities @AT@ 1635 @LENGTH@ 16
------------------DEL ThisExpression@@this @AT@ 1635 @LENGTH@ 4
------------------DEL SimpleName@@authorities @AT@ 1640 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:contains:[a] @AT@ 1652 @LENGTH@ 11
------------------DEL SimpleName@@a @AT@ 1661 @LENGTH@ 1
------UPD MethodInvocation@@MethodName:map:[(g) -> g.getAuthority()] @TO@ MethodName:map:[GrantedAuthority::getAuthority] @AT@ 1497 @LENGTH@ 126
---------DEL LambdaExpression@@(g) -> g.getAuthority() @AT@ 1599 @LENGTH@ 23
------------DEL VariableDeclarationFragment@@g @AT@ 1600 @LENGTH@ 1
---------------DEL SimpleName@@g @AT@ 1600 @LENGTH@ 1
------------DEL MethodInvocation@@g.getAuthority() @AT@ 1606 @LENGTH@ 16
---------------DEL SimpleName@@Name:g @AT@ 1606 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getAuthority:[] @AT@ 1608 @LENGTH@ 14
------UPD MethodInvocation@@MethodName:flatMapIterable:[(a) -> a.getAuthorities()] @TO@ MethodName:flatMapIterable:[Authentication::getAuthorities] @AT@ 1497 @LENGTH@ 92
---------DEL LambdaExpression@@(a) -> a.getAuthorities() @AT@ 1563 @LENGTH@ 25
------------DEL VariableDeclarationFragment@@a @AT@ 1564 @LENGTH@ 1
---------------DEL SimpleName@@a @AT@ 1564 @LENGTH@ 1
------------DEL MethodInvocation@@a.getAuthorities() @AT@ 1570 @LENGTH@ 18
---------------DEL SimpleName@@Name:a @AT@ 1570 @LENGTH@ 1
---------------DEL SimpleName@@MethodName:getAuthorities:[] @AT@ 1572 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1997 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1997 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2013 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ MethodInvocation:assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 2324 @LENGTH@ 64
---UPD MethodInvocation@@assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 2324 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @TO@ MethodName:assertEquals:[1, elements.size(), "Get the wrong elements size"] @AT@ 2324 @LENGTH@ 63
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @AT@ 2337 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2354 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:Assert.state(configurer != null,"permitAll only works with HttpSecurity.authorizeRequests()") @TO@ MethodDeclaration@@static, void, MethodName:permitAll, HttpSecurityBuilder<? extends HttpSecurityBuilder<?>> http, RequestMatcher... requestMatchers,  @AT@ 1788 @LENGTH@ 95
---INS MethodInvocation@@Assert.state(configurer != null,"permitAll only works with HttpSecurity.authorizeRequests()") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(configurer != null,"permitAll only works with HttpSecurity.authorizeRequests()") @AT@ 1788 @LENGTH@ 94
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(configurer != null,"permitAll only works with HttpSecurity.authorizeRequests()") @AT@ 1788 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[configurer != null, "permitAll only works with HttpSecurity.authorizeRequests()"] @TO@ MethodInvocation@@Assert.state(configurer != null,"permitAll only works with HttpSecurity.authorizeRequests()") @AT@ 1795 @LENGTH@ 87
---------INS InfixExpression@@configurer != null @TO@ SimpleName@@MethodName:state:[configurer != null, "permitAll only works with HttpSecurity.authorizeRequests()"] @AT@ 1801 @LENGTH@ 18
------------MOV SimpleName@@configurer @TO@ InfixExpression@@configurer != null @AT@ 1753 @LENGTH@ 10
------------MOV Operator@@== @TO@ InfixExpression@@configurer != null @AT@ 1763 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@configurer != null @AT@ 1767 @LENGTH@ 4
---------INS StringLiteral@@"permitAll only works with HttpSecurity.authorizeRequests()" @TO@ SimpleName@@MethodName:state:[configurer != null, "permitAll only works with HttpSecurity.authorizeRequests()"] @AT@ 1821 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello World",body) @TO@ MethodInvocation:assertEquals(body,"Hello World") @AT@ 1950 @LENGTH@ 34
---UPD MethodInvocation@@assertEquals("Hello World",body) @TO@ assertEquals(body,"Hello World") @AT@ 1950 @LENGTH@ 33
------UPD SimpleName@@MethodName:assertEquals:["Hello World", body] @TO@ MethodName:assertEquals:[body, "Hello World"] @AT@ 1950 @LENGTH@ 33
---------DEL SimpleName@@body @AT@ 1978 @LENGTH@ 4
---------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertEquals:["Hello World", body] @AT@ 2037 @LENGTH@ 4


DEL IfStatement@@if (result == null) {  throw new IllegalStateException("Could not coerce " + source + " into an Instant");} @AT@ 5217 @LENGTH@ 112
---DEL InfixExpression@@result == null @AT@ 5221 @LENGTH@ 14
---DEL Block@@ThenBody:{  throw new IllegalStateException("Could not coerce " + source + " into an Instant");} @AT@ 5237 @LENGTH@ 92
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Could not coerce " + source + " into an Instant") @AT@ 5242 @LENGTH@ 83
---------DEL ClassInstanceCreation@@IllegalStateException["Could not coerce " + source + " into an Instant"] @AT@ 5248 @LENGTH@ 76
------------DEL New@@new @AT@ 5248 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 5252 @LENGTH@ 21
------------DEL InfixExpression@@"Could not coerce " + source + " into an Instant" @AT@ 5274 @LENGTH@ 49


UPD ReturnStatement@@MethodInvocation:Mono.just(new OAuth2ClientCredentialsGrantRequest(clientRegistration)).flatMap(this.accessTokenResponseClient::getTokenResponse).onErrorMap(OAuth2AuthorizationException.class,(e) -> new ClientAuthorizationException(e.getError(),clientRegistration.getRegistrationId(),e)).map((tokenResponse) -> new OAuth2AuthorizedClient(clientRegistration,context.getPrincipal().getName(),tokenResponse.getAccessToken())) @TO@ MethodInvocation:Mono.just(new OAuth2ClientCredentialsGrantRequest(clientRegistration)).flatMap(this.accessTokenResponseClient::getTokenResponse).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new ClientAuthorizationException(ex.getError(),clientRegistration.getRegistrationId(),ex)).map((tokenResponse) -> new OAuth2AuthorizedClient(clientRegistration,context.getPrincipal().getName(),tokenResponse.getAccessToken())) @AT@ 3871 @LENGTH@ 453
---UPD MethodInvocation@@Mono.just(new OAuth2ClientCredentialsGrantRequest(clientRegistration)).flatMap(this.accessTokenResponseClient::getTokenResponse).onErrorMap(OAuth2AuthorizationException.class,(e) -> new ClientAuthorizationException(e.getError(),clientRegistration.getRegistrationId(),e)).map((tokenResponse) -> new OAuth2AuthorizedClient(clientRegistration,context.getPrincipal().getName(),tokenResponse.getAccessToken())) @TO@ Mono.just(new OAuth2ClientCredentialsGrantRequest(clientRegistration)).flatMap(this.accessTokenResponseClient::getTokenResponse).onErrorMap(OAuth2AuthorizationException.class,(ex) -> new ClientAuthorizationException(ex.getError(),clientRegistration.getRegistrationId(),ex)).map((tokenResponse) -> new OAuth2AuthorizedClient(clientRegistration,context.getPrincipal().getName(),tokenResponse.getAccessToken())) @AT@ 3878 @LENGTH@ 445
------UPD MethodInvocation@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, (e) -> new ClientAuthorizationException(e.getError(),clientRegistration.getRegistrationId(),e)] @TO@ MethodName:onErrorMap:[OAuth2AuthorizationException.class, (ex) -> new ClientAuthorizationException(ex.getError(),clientRegistration.getRegistrationId(),ex)] @AT@ 3878 @LENGTH@ 297
---------UPD LambdaExpression@@(e) -> new ClientAuthorizationException(e.getError(),clientRegistration.getRegistrationId(),e) @TO@ (ex) -> new ClientAuthorizationException(ex.getError(),clientRegistration.getRegistrationId(),ex) @AT@ 4070 @LENGTH@ 104
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 4071 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 4071 @LENGTH@ 1
------------UPD ClassInstanceCreation@@ClientAuthorizationException[e.getError(), clientRegistration.getRegistrationId(), e] @TO@ ClientAuthorizationException[ex.getError(), clientRegistration.getRegistrationId(), ex] @AT@ 4077 @LENGTH@ 97
---------------UPD MethodInvocation@@e.getError() @TO@ ex.getError() @AT@ 4110 @LENGTH@ 12
------------------UPD SimpleName@@Name:e @TO@ Name:ex @AT@ 4110 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 4172 @LENGTH@ 1


UPD VariableDeclarationStatement@@Record rec=Record.builder().data(SdkBytes.fromString(("Test1"),Charset.defaultCharset())).build(); @TO@ Record rec=Record.builder().data(SdkBytes.fromString("Test1",Charset.defaultCharset())).build(); @AT@ 2542 @LENGTH@ 101
---UPD VariableDeclarationFragment@@rec=Record.builder().data(SdkBytes.fromString(("Test1"),Charset.defaultCharset())).build() @TO@ rec=Record.builder().data(SdkBytes.fromString("Test1",Charset.defaultCharset())).build() @AT@ 2549 @LENGTH@ 93
------UPD MethodInvocation@@Record.builder().data(SdkBytes.fromString(("Test1"),Charset.defaultCharset())).build() @TO@ Record.builder().data(SdkBytes.fromString("Test1",Charset.defaultCharset())).build() @AT@ 2555 @LENGTH@ 87
---------UPD MethodInvocation@@MethodName:data:[SdkBytes.fromString(("Test1"),Charset.defaultCharset())] @TO@ MethodName:data:[SdkBytes.fromString("Test1",Charset.defaultCharset())] @AT@ 2555 @LENGTH@ 79
------------UPD MethodInvocation@@SdkBytes.fromString(("Test1"),Charset.defaultCharset()) @TO@ SdkBytes.fromString("Test1",Charset.defaultCharset()) @AT@ 2577 @LENGTH@ 56
---------------UPD SimpleName@@MethodName:fromString:[("Test1"), Charset.defaultCharset()] @TO@ MethodName:fromString:["Test1", Charset.defaultCharset()] @AT@ 2586 @LENGTH@ 47
------------------DEL ParenthesizedExpression@@("Test1") @AT@ 2597 @LENGTH@ 9
---------------------DEL StringLiteral@@"Test1" @AT@ 2598 @LENGTH@ 7
------------------INS StringLiteral@@"Test1" @TO@ SimpleName@@MethodName:fromString:[("Test1"), Charset.defaultCharset()] @AT@ 2602 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("refs/tags/" + tagTest,exchange.getMessage().getBody(ObjectIdRef.Unpeeled.class).getName()) @TO@ MethodInvocation:assertEquals("refs/tags/" + tagTest,exchange.getMessage().getBody(String.class)) @AT@ 5237 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals("refs/tags/" + tagTest,exchange.getMessage().getBody(ObjectIdRef.Unpeeled.class).getName()) @TO@ assertEquals("refs/tags/" + tagTest,exchange.getMessage().getBody(String.class)) @AT@ 5237 @LENGTH@ 105
------UPD SimpleName@@MethodName:assertEquals:["refs/tags/" + tagTest, exchange.getMessage().getBody(ObjectIdRef.Unpeeled.class).getName()] @TO@ MethodName:assertEquals:["refs/tags/" + tagTest, exchange.getMessage().getBody(String.class)] @AT@ 5237 @LENGTH@ 105
---------UPD MethodInvocation@@exchange.getMessage().getBody(ObjectIdRef.Unpeeled.class).getName() @TO@ exchange.getMessage().getBody(String.class) @AT@ 5274 @LENGTH@ 67
------------DEL MethodInvocation@@MethodName:getBody:[ObjectIdRef.Unpeeled.class] @AT@ 5274 @LENGTH@ 57
---------------DEL TypeLiteral@@ObjectIdRef.Unpeeled.class @AT@ 5304 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getBody:[String.class] @AT@ 5332 @LENGTH@ 9
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getName:[] @AT@ 5263 @LENGTH@ 12
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getName:[] @AT@ 5263 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:str.regionMatches(!sensitive,0,start,0,start.length()) @TO@ InfixExpression:str != null && start != null && str.regionMatches(!sensitive,0,start,0,start.length()) @AT@ 5951 @LENGTH@ 66
---INS InfixExpression@@str != null && start != null && str.regionMatches(!sensitive,0,start,0,start.length()) @TO@ ReturnStatement@@MethodInvocation:str.regionMatches(!sensitive,0,start,0,start.length()) @AT@ 5908 @LENGTH@ 90
------INS InfixExpression@@str != null && start != null @TO@ InfixExpression@@str != null && start != null && str.regionMatches(!sensitive,0,start,0,start.length()) @AT@ 5908 @LENGTH@ 28
---------INS InfixExpression@@str != null @TO@ InfixExpression@@str != null && start != null @AT@ 5908 @LENGTH@ 11
------------INS SimpleName@@str @TO@ InfixExpression@@str != null @AT@ 5908 @LENGTH@ 3
------------INS Operator@@!= @TO@ InfixExpression@@str != null @AT@ 5911 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@str != null @AT@ 5915 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@str != null && start != null @AT@ 5919 @LENGTH@ 2
---------INS InfixExpression@@start != null @TO@ InfixExpression@@str != null && start != null @AT@ 5923 @LENGTH@ 13
------------INS SimpleName@@start @TO@ InfixExpression@@start != null @AT@ 5923 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@start != null @AT@ 5928 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@start != null @AT@ 5932 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@str != null && start != null && str.regionMatches(!sensitive,0,start,0,start.length()) @AT@ 5936 @LENGTH@ 2
------MOV MethodInvocation@@str.regionMatches(!sensitive,0,start,0,start.length()) @TO@ InfixExpression@@str != null && start != null && str.regionMatches(!sensitive,0,start,0,start.length()) @AT@ 5958 @LENGTH@ 58


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(9000),endpoint.getConfiguration().getProxyPort()) @TO@ MethodInvocation:assertEquals(Integer.valueOf(9000),endpoint.getConfiguration().getProxyPort()) @AT@ 5832 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals(new Integer(9000),endpoint.getConfiguration().getProxyPort()) @TO@ assertEquals(Integer.valueOf(9000),endpoint.getConfiguration().getProxyPort()) @AT@ 5832 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:[new Integer(9000), endpoint.getConfiguration().getProxyPort()] @TO@ MethodName:assertEquals:[Integer.valueOf(9000), endpoint.getConfiguration().getProxyPort()] @AT@ 5832 @LENGTH@ 75
---------INS MethodInvocation@@Integer.valueOf(9000) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(9000), endpoint.getConfiguration().getProxyPort()] @AT@ 5845 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(9000) @AT@ 5845 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[9000] @TO@ MethodInvocation@@Integer.valueOf(9000) @AT@ 5853 @LENGTH@ 13
---------------INS NumberLiteral@@9000 @TO@ SimpleName@@MethodName:valueOf:[9000] @AT@ 5861 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Integer[9000] @AT@ 5845 @LENGTH@ 17
------------DEL New@@new @AT@ 5845 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 5849 @LENGTH@ 7
------------DEL NumberLiteral@@9000 @AT@ 5857 @LENGTH@ 4


UPD MethodDeclaration@@SimpleQueryHints, MethodName:getQueryHintsForCount,  @TO@ QueryHints, MethodName:getQueryHintsForCount,  @AT@ 1772 @LENGTH@ 24
---UPD SimpleType@@SimpleQueryHints @TO@ QueryHints @AT@ 1755 @LENGTH@ 16


UPD FieldDeclaration@@private, String, [token] @TO@ private, final, String, [token] @AT@ 1675 @LENGTH@ 21
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [token] @AT@ 1683 @LENGTH@ 5


INS IfStatement@@if (node != null) {  return toDOMDocument(node);} else {  return null;} @TO@ MethodDeclaration@@public, Document, MethodName:toDOMDocument, Source source, TransformerException, ParserConfigurationException, IOException, SAXException,  @AT@ 29650 @LENGTH@ 111
---INS InfixExpression@@node != null @TO@ IfStatement@@if (node != null) {  return toDOMDocument(node);} else {  return null;} @AT@ 29654 @LENGTH@ 12
------INS SimpleName@@node @TO@ InfixExpression@@node != null @AT@ 29654 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@node != null @AT@ 29658 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@node != null @AT@ 29662 @LENGTH@ 4
---INS Block@@ThenBody:{  return toDOMDocument(node);} @TO@ IfStatement@@if (node != null) {  return toDOMDocument(node);} else {  return null;} @AT@ 29668 @LENGTH@ 51
------MOV ReturnStatement@@MethodInvocation:toDOMDocument(node) @TO@ Block@@ThenBody:{  return toDOMDocument(node);} @AT@ 29650 @LENGTH@ 27
---INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (node != null) {  return toDOMDocument(node);} else {  return null;} @AT@ 29725 @LENGTH@ 36
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 29739 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 29746 @LENGTH@ 4


UPD VariableDeclarationStatement@@Record rec1=Record.builder().data(SdkBytes.fromString(("Test2"),Charset.defaultCharset())).build(); @TO@ Record rec1=Record.builder().data(SdkBytes.fromString("Test2",Charset.defaultCharset())).build(); @AT@ 2657 @LENGTH@ 102
---UPD VariableDeclarationFragment@@rec1=Record.builder().data(SdkBytes.fromString(("Test2"),Charset.defaultCharset())).build() @TO@ rec1=Record.builder().data(SdkBytes.fromString("Test2",Charset.defaultCharset())).build() @AT@ 2664 @LENGTH@ 94
------UPD MethodInvocation@@Record.builder().data(SdkBytes.fromString(("Test2"),Charset.defaultCharset())).build() @TO@ Record.builder().data(SdkBytes.fromString("Test2",Charset.defaultCharset())).build() @AT@ 2671 @LENGTH@ 87
---------UPD MethodInvocation@@MethodName:data:[SdkBytes.fromString(("Test2"),Charset.defaultCharset())] @TO@ MethodName:data:[SdkBytes.fromString("Test2",Charset.defaultCharset())] @AT@ 2671 @LENGTH@ 79
------------UPD MethodInvocation@@SdkBytes.fromString(("Test2"),Charset.defaultCharset()) @TO@ SdkBytes.fromString("Test2",Charset.defaultCharset()) @AT@ 2693 @LENGTH@ 56
---------------UPD SimpleName@@MethodName:fromString:[("Test2"), Charset.defaultCharset()] @TO@ MethodName:fromString:["Test2", Charset.defaultCharset()] @AT@ 2702 @LENGTH@ 47
------------------DEL ParenthesizedExpression@@("Test2") @AT@ 2713 @LENGTH@ 9
---------------------DEL StringLiteral@@"Test2" @AT@ 2714 @LENGTH@ 7
------------------INS StringLiteral@@"Test2" @TO@ SimpleName@@MethodName:fromString:[("Test2"), Charset.defaultCharset()] @AT@ 2719 @LENGTH@ 7


UPD TypeDeclaration@@[public]OpenIDConsumerException, Exception @TO@ [@Deprecated, public]OpenIDConsumerException, Exception @AT@ 1089 @LENGTH@ 219
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDConsumerException, Exception @AT@ 1089 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:responseGenerator?transferExchange=true&requestTimeout=5000").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:responseGenerator?transferExchange=true&requestTimeout=5000").to("mock:result") @AT@ 2545 @LENGTH@ 167
---UPD MethodInvocation@@from("direct:start").inOut("activemq:responseGenerator?transferExchange=true&requestTimeout=5000").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:responseGenerator?transferExchange=true&requestTimeout=5000").to("mock:result") @AT@ 2545 @LENGTH@ 166
------UPD MethodInvocation@@MethodName:inOut:["activemq:responseGenerator?transferExchange=true&requestTimeout=5000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:responseGenerator?transferExchange=true&requestTimeout=5000"] @AT@ 2545 @LENGTH@ 123
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:responseGenerator?transferExchange=true&requestTimeout=5000"] @AT@ 2635 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2635 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2651 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(parameter.get(0)) @TO@ MethodInvocation:exchange.getMessage().setBody(parameter.get(0)) @AT@ 5328 @LENGTH@ 44
---UPD MethodInvocation@@exchange.getOut().setBody(parameter.get(0)) @TO@ exchange.getMessage().setBody(parameter.get(0)) @AT@ 5328 @LENGTH@ 43
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 5328 @LENGTH@ 17


UPD VariableDeclarationStatement@@final List<SessionInformation> sessions=this.sessionRegistry.getAllSessions(authentication.getPrincipal(),false); @TO@ List<SessionInformation> sessions=this.sessionRegistry.getAllSessions(authentication.getPrincipal(),false); @AT@ 4090 @LENGTH@ 120
---DEL Modifier@@final @AT@ 4090 @LENGTH@ 5


UPD TypeDeclaration@@[static]ReplaceRootDocumentOperation, ReplaceRootOperation @TO@ [public, static]ReplaceRootDocumentOperation, ReplaceRootOperation @AT@ 5845 @LENGTH@ 2263
---INS Modifier@@public @TO@ TypeDeclaration@@[static]ReplaceRootDocumentOperation, ReplaceRootOperation @AT@ 5845 @LENGTH@ 6


UPD EnhancedForStatement@@for (AccessDecisionVoter voter : this.decisionVoters) {  if (voter.supports(attribute)) {    return true;  }} @TO@ for (AccessDecisionVoter<?> voter : this.decisionVoters) {  if (voter.supports(attribute)) {    return true;  }} @AT@ 3240 @LENGTH@ 117
---UPD SingleVariableDeclaration@@AccessDecisionVoter voter @TO@ AccessDecisionVoter<?> voter @AT@ 3245 @LENGTH@ 25
------INS ParameterizedType@@AccessDecisionVoter<?> @TO@ SingleVariableDeclaration@@AccessDecisionVoter voter @AT@ 3245 @LENGTH@ 22
---------INS SimpleType@@AccessDecisionVoter @TO@ ParameterizedType@@AccessDecisionVoter<?> @AT@ 3245 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@AccessDecisionVoter<?> @AT@ 3265 @LENGTH@ 1
------DEL SimpleType@@AccessDecisionVoter @AT@ 3245 @LENGTH@ 19


UPD MethodInvocation@@Mono.just(user).map((u) -> User.withUserDetails(u).password(newPassword).build()).doOnNext((u) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,u);
}
) @TO@ Mono.just(user).map((userDetails) -> withNewPassword(userDetails,newPassword)).doOnNext((userDetails) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,userDetails);
}
) @AT@ 2280 @LENGTH@ 175
---UPD MethodInvocation@@MethodName:map:[(u) -> User.withUserDetails(u).password(newPassword).build()] @TO@ MethodName:map:[(userDetails) -> withNewPassword(userDetails,newPassword)] @AT@ 2280 @LENGTH@ 81
------UPD LambdaExpression@@(u) -> User.withUserDetails(u).password(newPassword).build() @TO@ (userDetails) -> withNewPassword(userDetails,newPassword) @AT@ 2300 @LENGTH@ 60
---------UPD VariableDeclarationFragment@@u @TO@ userDetails @AT@ 2301 @LENGTH@ 1
------------UPD SimpleName@@u @TO@ userDetails @AT@ 2301 @LENGTH@ 1
---------UPD MethodInvocation@@User.withUserDetails(u).password(newPassword).build() @TO@ withNewPassword(userDetails,newPassword) @AT@ 2307 @LENGTH@ 53
------------DEL MethodInvocation@@MethodName:password:[newPassword] @AT@ 2307 @LENGTH@ 45
---------------DEL SimpleName@@newPassword @AT@ 2340 @LENGTH@ 11
------------DEL MethodInvocation@@MethodName:withUserDetails:[u] @AT@ 2307 @LENGTH@ 23
---------------DEL SimpleName@@u @AT@ 2328 @LENGTH@ 1
------------DEL SimpleName@@Name:User @AT@ 2307 @LENGTH@ 4
------------INS SimpleName@@MethodName:withNewPassword:[userDetails, newPassword] @TO@ MethodInvocation@@User.withUserDetails(u).password(newPassword).build() @AT@ 2317 @LENGTH@ 41
---------------INS SimpleName@@userDetails @TO@ SimpleName@@MethodName:withNewPassword:[userDetails, newPassword] @AT@ 2333 @LENGTH@ 11
---------------INS SimpleName@@newPassword @TO@ SimpleName@@MethodName:withNewPassword:[userDetails, newPassword] @AT@ 2346 @LENGTH@ 11
------------DEL SimpleName@@MethodName:build:[] @AT@ 2353 @LENGTH@ 7
---UPD SimpleName@@MethodName:doOnNext:[(u) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,u);
}
] @TO@ MethodName:doOnNext:[(userDetails) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,userDetails);
}
] @AT@ 2362 @LENGTH@ 93
------UPD LambdaExpression@@(u) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,u);
}
 @TO@ (userDetails) -> {
  String key=getKey(user.getUsername());
  this.users.put(key,userDetails);
}
 @AT@ 2371 @LENGTH@ 83
---------UPD VariableDeclarationFragment@@u @TO@ userDetails @AT@ 2372 @LENGTH@ 1
------------UPD SimpleName@@u @TO@ userDetails @AT@ 2372 @LENGTH@ 1
---------UPD ExpressionStatement@@MethodInvocation:this.users.put(key,u) @TO@ MethodInvocation:this.users.put(key,userDetails) @AT@ 2427 @LENGTH@ 23
------------UPD MethodInvocation@@this.users.put(key,u) @TO@ this.users.put(key,userDetails) @AT@ 2427 @LENGTH@ 22
---------------UPD SimpleName@@MethodName:put:[key, u] @TO@ MethodName:put:[key, userDetails] @AT@ 2438 @LENGTH@ 11
------------------UPD SimpleName@@u @TO@ userDetails @AT@ 2447 @LENGTH@ 1


INS IfStatement@@if (!clientInterceptors.isEmpty()) {  configuration.setClientInterceptors(new ArrayList<>(clientInterceptors));} @TO@ MethodDeclaration@@private, void, MethodName:checkAndSetRegistryClientInterceptors, GrpcConfiguration configuration,  @AT@ 2236 @LENGTH@ 132
---INS PrefixExpression@@!clientInterceptors.isEmpty() @TO@ IfStatement@@if (!clientInterceptors.isEmpty()) {  configuration.setClientInterceptors(new ArrayList<>(clientInterceptors));} @AT@ 2240 @LENGTH@ 29
------INS Operator@@! @TO@ PrefixExpression@@!clientInterceptors.isEmpty() @AT@ 2240 @LENGTH@ 1
------INS MethodInvocation@@clientInterceptors.isEmpty() @TO@ PrefixExpression@@!clientInterceptors.isEmpty() @AT@ 2241 @LENGTH@ 28
---------INS SimpleName@@Name:clientInterceptors @TO@ MethodInvocation@@clientInterceptors.isEmpty() @AT@ 2241 @LENGTH@ 18
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@clientInterceptors.isEmpty() @AT@ 2260 @LENGTH@ 9
---INS Block@@ThenBody:{  configuration.setClientInterceptors(new ArrayList<>(clientInterceptors));} @TO@ IfStatement@@if (!clientInterceptors.isEmpty()) {  configuration.setClientInterceptors(new ArrayList<>(clientInterceptors));} @AT@ 2271 @LENGTH@ 97
------MOV ExpressionStatement@@MethodInvocation:configuration.setClientInterceptors(new ArrayList<>(clientInterceptors)) @TO@ Block@@ThenBody:{  configuration.setClientInterceptors(new ArrayList<>(clientInterceptors));} @AT@ 2307 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(parameter.get(0)) @TO@ MethodInvocation:exchange.getMessage().setBody(parameter.get(0)) @AT@ 3380 @LENGTH@ 44
---UPD MethodInvocation@@exchange.getOut().setBody(parameter.get(0)) @TO@ exchange.getMessage().setBody(parameter.get(0)) @AT@ 3380 @LENGTH@ 43
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3380 @LENGTH@ 17


UPD IfStatement@@if (this.encodeHashAsBase64) {  return Utf8.decode(Base64.getEncoder().encode(digest));} else {  return new String(Hex.encode(digest));} @TO@ if (this.encodeHashAsBase64) {  return Utf8.decode(Base64.getEncoder().encode(digest));} @AT@ 4493 @LENGTH@ 148
---DEL Block@@ElseBody:{  return new String(Hex.encode(digest));} @AT@ 4594 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2332 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2332 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2332 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2343 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2350 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ MethodInvocation:assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 6840 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(bool.toString(),"true","We should get the echo boolean result from router") @TO@ assertEquals("true",bool.toString(),"We should get the echo boolean result from router") @AT@ 6840 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @TO@ MethodName:assertEquals:["true", bool.toString(), "We should get the echo boolean result from router"] @AT@ 6840 @LENGTH@ 90
---------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:assertEquals:[bool.toString(), "true", "We should get the echo boolean result from router"] @AT@ 6853 @LENGTH@ 6
---------DEL StringLiteral@@"true" @AT@ 6870 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(request.getProtocol(),"HTTP/1.0","Get a wong http protocol version") @TO@ MethodInvocation:assertEquals("HTTP/1.0",request.getProtocol(),"Get a wong http protocol version") @AT@ 3380 @LENGTH@ 84
---UPD MethodInvocation@@assertEquals(request.getProtocol(),"HTTP/1.0","Get a wong http protocol version") @TO@ assertEquals("HTTP/1.0",request.getProtocol(),"Get a wong http protocol version") @AT@ 3380 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertEquals:[request.getProtocol(), "HTTP/1.0", "Get a wong http protocol version"] @TO@ MethodName:assertEquals:["HTTP/1.0", request.getProtocol(), "Get a wong http protocol version"] @AT@ 3380 @LENGTH@ 83
---------INS StringLiteral@@"HTTP/1.0" @TO@ SimpleName@@MethodName:assertEquals:[request.getProtocol(), "HTTP/1.0", "Get a wong http protocol version"] @AT@ 3393 @LENGTH@ 10
---------DEL StringLiteral@@"HTTP/1.0" @AT@ 3416 @LENGTH@ 10


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") PaddedBufferedBlockCipher blockCipher=new PaddedBufferedBlockCipher(new CBCBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()),new PKCS7Padding()); @TO@ PaddedBufferedBlockCipher blockCipher=new PaddedBufferedBlockCipher(new CBCBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()),new PKCS7Padding()); @AT@ 1913 @LENGTH@ 203


INS MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @TO@ TypeDeclaration@@[@Readiness, public]CamelMicroProfileReadinessCheck, AbstractCamelMicroProfileHealthCheck @AT@ 1157 @LENGTH@ 106
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1157 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1167 @LENGTH@ 7
---INS SimpleName@@MethodName:acceptHealthCheck @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1175 @LENGTH@ 17
---INS SingleVariableDeclaration@@AbstractHealthCheck check @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1193 @LENGTH@ 25
------INS SimpleType@@AbstractHealthCheck @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1193 @LENGTH@ 19
------INS SimpleName@@check @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1213 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:check.isReadiness() @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1230 @LENGTH@ 27
------INS MethodInvocation@@check.isReadiness() @TO@ ReturnStatement@@MethodInvocation:check.isReadiness() @AT@ 1237 @LENGTH@ 19
---------INS SimpleName@@Name:check @TO@ MethodInvocation@@check.isReadiness() @AT@ 1237 @LENGTH@ 5
---------INS SimpleName@@MethodName:isReadiness:[] @TO@ MethodInvocation@@check.isReadiness() @AT@ 1243 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(outDate,"2018-02-26T19:12:18Z") @TO@ MethodInvocation:assertEquals("2018-02-26T19:12:18Z",outDate) @AT@ 1692 @LENGTH@ 46
---UPD MethodInvocation@@assertEquals(outDate,"2018-02-26T19:12:18Z") @TO@ assertEquals("2018-02-26T19:12:18Z",outDate) @AT@ 1692 @LENGTH@ 45
------UPD SimpleName@@MethodName:assertEquals:[outDate, "2018-02-26T19:12:18Z"] @TO@ MethodName:assertEquals:["2018-02-26T19:12:18Z", outDate] @AT@ 1692 @LENGTH@ 45
---------INS StringLiteral@@"2018-02-26T19:12:18Z" @TO@ SimpleName@@MethodName:assertEquals:[outDate, "2018-02-26T19:12:18Z"] @AT@ 1705 @LENGTH@ 22
---------DEL StringLiteral@@"2018-02-26T19:12:18Z" @AT@ 1714 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:assertEquals(result,"Hello Willem","Get the wrong result ") @TO@ MethodInvocation:assertEquals("Hello Willem",result,"Get the wrong result ") @AT@ 2936 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals(result,"Hello Willem","Get the wrong result ") @TO@ assertEquals("Hello Willem",result,"Get the wrong result ") @AT@ 2936 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:[result, "Hello Willem", "Get the wrong result "] @TO@ MethodName:assertEquals:["Hello Willem", result, "Get the wrong result "] @AT@ 2936 @LENGTH@ 61
---------INS StringLiteral@@"Hello Willem" @TO@ SimpleName@@MethodName:assertEquals:[result, "Hello Willem", "Get the wrong result "] @AT@ 2949 @LENGTH@ 14
---------DEL StringLiteral@@"Hello Willem" @AT@ 2957 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertNotNull(attachments.size() == 1) @TO@ MethodInvocation:assertEquals(1,attachments.size()) @AT@ 9093 @LENGTH@ 39
---UPD MethodInvocation@@assertNotNull(attachments.size() == 1) @TO@ assertEquals(1,attachments.size()) @AT@ 9093 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @TO@ MethodName:assertEquals:[1, attachments.size()] @AT@ 9093 @LENGTH@ 38
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @AT@ 9106 @LENGTH@ 1
---------DEL InfixExpression@@attachments.size() == 1 @AT@ 9107 @LENGTH@ 23
------------DEL MethodInvocation@@attachments.size() @AT@ 9107 @LENGTH@ 18
------------DEL Operator@@== @AT@ 9125 @LENGTH@ 2
------------DEL NumberLiteral@@1 @AT@ 9129 @LENGTH@ 1
---------INS MethodInvocation@@attachments.size() @TO@ SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @AT@ 9109 @LENGTH@ 18
------------MOV SimpleName@@Name:attachments @TO@ MethodInvocation@@attachments.size() @AT@ 9107 @LENGTH@ 11
------------MOV SimpleName@@Name:attachments @TO@ MethodInvocation@@attachments.size() @AT@ 9107 @LENGTH@ 11
------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@attachments.size() @AT@ 9119 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)) @TO@ MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @AT@ 10494 @LENGTH@ 317
---UPD MethodInvocation@@this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)) @TO@ this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @AT@ 10501 @LENGTH@ 309
------UPD MethodInvocation@@MethodName:flatMap:[matchResult -> this.authenticationConverter.convert(exchange)] @TO@ MethodName:flatMap:[matchResult -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()))] @AT@ 10501 @LENGTH@ 187
---------UPD LambdaExpression@@matchResult -> this.authenticationConverter.convert(exchange) @TO@ matchResult -> this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())) @AT@ 10626 @LENGTH@ 61
------------UPD MethodInvocation@@this.authenticationConverter.convert(exchange) @TO@ this.authenticationConverter.convert(exchange).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())) @AT@ 10641 @LENGTH@ 46
---------------UPD SimpleName@@MethodName:convert:[exchange] @TO@ MethodName:onErrorMap:[OAuth2AuthorizationException.class, e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @AT@ 10670 @LENGTH@ 17
------------------DEL SimpleName@@exchange @AT@ 10678 @LENGTH@ 8
------------------INS TypeLiteral@@OAuth2AuthorizationException.class @TO@ SimpleName@@MethodName:convert:[exchange] @AT@ 10871 @LENGTH@ 34
------------------INS LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @TO@ SimpleName@@MethodName:convert:[exchange] @AT@ 10907 @LENGTH@ 88
---------------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @AT@ 10907 @LENGTH@ 1
------------------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 10907 @LENGTH@ 1
---------------------INS ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @TO@ LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @AT@ 10912 @LENGTH@ 83
------------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 10912 @LENGTH@ 3
------------------------INS SimpleType@@OAuth2AuthenticationException @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 10916 @LENGTH@ 29
------------------------INS MethodInvocation@@e.getError() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 10957 @LENGTH@ 12
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getError() @AT@ 10957 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:getError:[] @TO@ MethodInvocation@@e.getError() @AT@ 10959 @LENGTH@ 10
------------------------INS MethodInvocation@@e.getError().toString() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 10971 @LENGTH@ 23
---------------------------INS MethodInvocation@@MethodName:getError:[] @TO@ MethodInvocation@@e.getError().toString() @AT@ 10971 @LENGTH@ 12
---------------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getError().toString() @AT@ 10971 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@e.getError().toString() @AT@ 10984 @LENGTH@ 10
---------------INS MethodInvocation@@MethodName:convert:[exchange] @TO@ MethodInvocation@@this.authenticationConverter.convert(exchange) @AT@ 10804 @LENGTH@ 46
------------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:convert:[exchange] @AT@ 10841 @LENGTH@ 8
------INS MethodInvocation@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @TO@ MethodInvocation@@this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)) @AT@ 10658 @LENGTH@ 461
---------MOV LambdaExpression@@token -> authenticate(exchange,chain,token) @TO@ MethodInvocation@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @AT@ 10764 @LENGTH@ 45
------UPD SimpleName@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @TO@ MethodName:onAuthenticationFailure:[new WebFilterExchange(exchange,chain), e] @AT@ 10756 @LENGTH@ 54
------INS SimpleName@@MethodName:onErrorResume:[AuthenticationException.class, e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)] @TO@ MethodInvocation@@this.requiresAuthenticationMatcher.matches(exchange).filter(ServerWebExchangeMatcher.MatchResult::isMatch).flatMap(matchResult -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap(token -> authenticate(exchange,chain,token)) @AT@ 11125 @LENGTH@ 158
---------INS TypeLiteral@@AuthenticationException.class @TO@ SimpleName@@MethodName:onErrorResume:[AuthenticationException.class, e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)] @AT@ 11139 @LENGTH@ 29
---------INS LambdaExpression@@e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @TO@ SimpleName@@MethodName:onErrorResume:[AuthenticationException.class, e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)] @AT@ 11170 @LENGTH@ 112
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @AT@ 11170 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 11170 @LENGTH@ 1
------------INS MethodInvocation@@this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @TO@ LambdaExpression@@e -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @AT@ 11175 @LENGTH@ 107
---------------MOV SimpleName@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @TO@ MethodInvocation@@this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @AT@ 10756 @LENGTH@ 54
------------------INS ClassInstanceCreation@@WebFilterExchange[exchange, chain] @TO@ SimpleName@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @AT@ 11240 @LENGTH@ 38
---------------------INS New@@new @TO@ ClassInstanceCreation@@WebFilterExchange[exchange, chain] @AT@ 11240 @LENGTH@ 3
---------------------INS SimpleType@@WebFilterExchange @TO@ ClassInstanceCreation@@WebFilterExchange[exchange, chain] @AT@ 11244 @LENGTH@ 17
---------------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@WebFilterExchange[exchange, chain] @AT@ 11262 @LENGTH@ 8
---------------------INS SimpleName@@chain @TO@ ClassInstanceCreation@@WebFilterExchange[exchange, chain] @AT@ 11272 @LENGTH@ 5
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:flatMap:[token -> authenticate(exchange,chain,token)] @AT@ 11280 @LENGTH@ 1
---------------INS FieldAccess@@this.authenticationFailureHandler @TO@ MethodInvocation@@this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @AT@ 11175 @LENGTH@ 33
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationFailureHandler @AT@ 11175 @LENGTH@ 4
------------------INS SimpleName@@authenticationFailureHandler @TO@ FieldAccess@@this.authenticationFailureHandler @AT@ 11180 @LENGTH@ 28


INS MethodDeclaration@@private, voidMethodName:Sqs2ClientFactory,  @TO@ TypeDeclaration@@[public, final]Sqs2ClientFactory,  @AT@ 1189 @LENGTH@ 35
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Sqs2ClientFactory,  @AT@ 1189 @LENGTH@ 7
---INS SimpleName@@MethodName:Sqs2ClientFactory @TO@ MethodDeclaration@@private, voidMethodName:Sqs2ClientFactory,  @AT@ 1197 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:getConverter(targetType).map(it -> it.convert(source,sourceType,targetType)).orElse(source) @TO@ MethodInvocation:getConverter(targetType).map(it -> it.convert(source,sourceType,targetType)).orElse(null) @AT@ 3383 @LENGTH@ 101
---UPD MethodInvocation@@getConverter(targetType).map(it -> it.convert(source,sourceType,targetType)).orElse(source) @TO@ getConverter(targetType).map(it -> it.convert(source,sourceType,targetType)).orElse(null) @AT@ 3390 @LENGTH@ 93
------UPD SimpleName@@MethodName:orElse:[source] @TO@ MethodName:orElse:[null] @AT@ 3469 @LENGTH@ 14
---------DEL SimpleName@@source @AT@ 3476 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:orElse:[source] @AT@ 3476 @LENGTH@ 4


MOV FieldDeclaration@@protected, final, Map<ExceptionPolicyKey,ExceptionPolicy>, [exceptionPolicies=new LinkedHashMap<>()] @TO@ TypeDeclaration@@[public, abstract]ErrorHandlerSupport, ChildServiceSupport[ErrorHandler] @AT@ 1309 @LENGTH@ 99


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2095 @LENGTH@ 553
---DEL Modifier@@public @AT@ 2095 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2102 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2107 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2158 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonEKSClientMock clientMock=new AmazonEKSClientMock(); @AT@ 2179 @LENGTH@ 59
------DEL SimpleType@@AmazonEKSClientMock @AT@ 2179 @LENGTH@ 19
------DEL VariableDeclarationFragment@@clientMock=new AmazonEKSClientMock() @AT@ 2199 @LENGTH@ 38
---------DEL SimpleName@@clientMock @AT@ 2199 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AmazonEKSClientMock[] @AT@ 2212 @LENGTH@ 25
------------DEL New@@new @AT@ 2212 @LENGTH@ 3
------------DEL SimpleType@@AmazonEKSClientMock @AT@ 2216 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("amazonEcsClient",clientMock) @AT@ 2247 @LENGTH@ 58
------DEL MethodInvocation@@context.getRegistry().bind("amazonEcsClient",clientMock) @AT@ 2247 @LENGTH@ 57
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2247 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2247 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["amazonEcsClient", clientMock] @AT@ 2269 @LENGTH@ 35
------------DEL StringLiteral@@"amazonEcsClient" @AT@ 2274 @LENGTH@ 17
------------DEL SimpleName@@clientMock @AT@ 2293 @LENGTH@ 10
---DEL VariableDeclarationStatement@@EKS2Component component=context.getComponent("aws2-eks",EKS2Component.class); @AT@ 2314 @LENGTH@ 80
------DEL SimpleType@@EKS2Component @AT@ 2314 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-eks",EKS2Component.class) @AT@ 2328 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2328 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-eks",EKS2Component.class) @AT@ 2340 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2340 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-eks", EKS2Component.class] @AT@ 2348 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-eks" @AT@ 2361 @LENGTH@ 10
---------------DEL TypeLiteral@@EKS2Component.class @AT@ 2373 @LENGTH@ 19
---DEL VariableDeclarationStatement@@EKS2Endpoint endpoint=(EKS2Endpoint)component.createEndpoint("aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2403 @LENGTH@ 159
------DEL SimpleType@@EKS2Endpoint @AT@ 2403 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(EKS2Endpoint)component.createEndpoint("aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2416 @LENGTH@ 145
---------DEL SimpleName@@endpoint @AT@ 2416 @LENGTH@ 8
---------DEL CastExpression@@(EKS2Endpoint)component.createEndpoint("aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2427 @LENGTH@ 134
------------DEL SimpleType@@EKS2Endpoint @AT@ 2428 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2442 @LENGTH@ 119
---------------DEL SimpleName@@Name:component @AT@ 2442 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2469 @LENGTH@ 92
------------------DEL StringLiteral@@"aws2-eks://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2484 @LENGTH@ 76
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(clientMock,endpoint.getConfiguration().getEksClient()) @AT@ 2572 @LENGTH@ 70
------DEL MethodInvocation@@assertNotSame(clientMock,endpoint.getConfiguration().getEksClient()) @AT@ 2572 @LENGTH@ 69
---------DEL SimpleName@@MethodName:assertNotSame:[clientMock, endpoint.getConfiguration().getEksClient()] @AT@ 2572 @LENGTH@ 69
------------DEL SimpleName@@clientMock @AT@ 2586 @LENGTH@ 10
------------DEL MethodInvocation@@endpoint.getConfiguration().getEksClient() @AT@ 2598 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2598 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2598 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getEksClient:[] @AT@ 2626 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(out.getMessage().getBody(String.class),"Bye Camel in chunks.") @TO@ MethodInvocation:assertEquals("Bye Camel in chunks.",out.getMessage().getBody(String.class)) @AT@ 2007 @LENGTH@ 77
---UPD MethodInvocation@@assertEquals(out.getMessage().getBody(String.class),"Bye Camel in chunks.") @TO@ assertEquals("Bye Camel in chunks.",out.getMessage().getBody(String.class)) @AT@ 2007 @LENGTH@ 76
------UPD SimpleName@@MethodName:assertEquals:[out.getMessage().getBody(String.class), "Bye Camel in chunks."] @TO@ MethodName:assertEquals:["Bye Camel in chunks.", out.getMessage().getBody(String.class)] @AT@ 2007 @LENGTH@ 76
---------MOV MethodInvocation@@out.getMessage().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:[out.getMessage().getBody(String.class), "Bye Camel in chunks."] @AT@ 2020 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertFalse(out.hasOut(),"Should not have OUT") @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2526 @LENGTH@ 49
---UPD MethodInvocation@@assertFalse(out.hasOut(),"Should not have OUT") @TO@ assertEquals("Hello World",out.getMessage().getBody(),"There shouldn't be an out message") @AT@ 2526 @LENGTH@ 48
------UPD SimpleName@@MethodName:assertFalse:[out.hasOut(), "Should not have OUT"] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody(), "There shouldn't be an out message"] @AT@ 2526 @LENGTH@ 48
---------UPD MethodInvocation@@out.hasOut() @TO@ out.getMessage().getBody() @AT@ 2538 @LENGTH@ 12
------------UPD SimpleName@@MethodName:hasOut:[] @TO@ MethodName:getBody:[] @AT@ 2542 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getMessage:[] @TO@ MethodInvocation@@out.hasOut() @AT@ 2781 @LENGTH@ 16
---------UPD StringLiteral@@"Should not have OUT" @TO@ "There shouldn't be an out message" @AT@ 2552 @LENGTH@ 21
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertFalse:[out.hasOut(), "Should not have OUT"] @AT@ 2766 @LENGTH@ 13


DEL IfStatement@@if (this.securityBuilder == null) {  throw new IllegalStateException("securityBuilder cannot be null");} @AT@ 2187 @LENGTH@ 109
---DEL InfixExpression@@this.securityBuilder == null @AT@ 2191 @LENGTH@ 28
---DEL Block@@ThenBody:{  throw new IllegalStateException("securityBuilder cannot be null");} @AT@ 2221 @LENGTH@ 75
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("securityBuilder cannot be null") @AT@ 2226 @LENGTH@ 66
---------DEL ClassInstanceCreation@@IllegalStateException["securityBuilder cannot be null"] @AT@ 2232 @LENGTH@ 59
------------DEL New@@new @AT@ 2232 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 2236 @LENGTH@ 21
------------DEL StringLiteral@@"securityBuilder cannot be null" @AT@ 2258 @LENGTH@ 32


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2118 @LENGTH@ 572
---DEL Modifier@@public @AT@ 2118 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2125 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2130 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2181 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonEC2ClientMock clientMock=new AmazonEC2ClientMock(); @AT@ 2202 @LENGTH@ 59
------DEL SimpleType@@AmazonEC2ClientMock @AT@ 2202 @LENGTH@ 19
------DEL VariableDeclarationFragment@@clientMock=new AmazonEC2ClientMock() @AT@ 2222 @LENGTH@ 38
---------DEL SimpleName@@clientMock @AT@ 2222 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AmazonEC2ClientMock[] @AT@ 2235 @LENGTH@ 25
------------DEL New@@new @AT@ 2235 @LENGTH@ 3
------------DEL SimpleType@@AmazonEC2ClientMock @AT@ 2239 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("amazonEc2Client",clientMock) @AT@ 2270 @LENGTH@ 58
------DEL MethodInvocation@@context.getRegistry().bind("amazonEc2Client",clientMock) @AT@ 2270 @LENGTH@ 57
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2270 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2270 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["amazonEc2Client", clientMock] @AT@ 2292 @LENGTH@ 35
------------DEL StringLiteral@@"amazonEc2Client" @AT@ 2297 @LENGTH@ 17
------------DEL SimpleName@@clientMock @AT@ 2316 @LENGTH@ 10
---DEL VariableDeclarationStatement@@AWS2EC2Component component=context.getComponent("aws2-ec2",AWS2EC2Component.class); @AT@ 2337 @LENGTH@ 86
------DEL SimpleType@@AWS2EC2Component @AT@ 2337 @LENGTH@ 16
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-ec2",AWS2EC2Component.class) @AT@ 2354 @LENGTH@ 68
---------DEL SimpleName@@component @AT@ 2354 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-ec2",AWS2EC2Component.class) @AT@ 2366 @LENGTH@ 56
------------DEL SimpleName@@Name:context @AT@ 2366 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-ec2", AWS2EC2Component.class] @AT@ 2374 @LENGTH@ 48
---------------DEL StringLiteral@@"aws2-ec2" @AT@ 2387 @LENGTH@ 10
---------------DEL TypeLiteral@@AWS2EC2Component.class @AT@ 2399 @LENGTH@ 22
---DEL VariableDeclarationStatement@@AWS2EC2Endpoint endpoint=(AWS2EC2Endpoint)component.createEndpoint("aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false"); @AT@ 2432 @LENGTH@ 166
------DEL SimpleType@@AWS2EC2Endpoint @AT@ 2432 @LENGTH@ 15
------DEL VariableDeclarationFragment@@endpoint=(AWS2EC2Endpoint)component.createEndpoint("aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false") @AT@ 2448 @LENGTH@ 149
---------DEL SimpleName@@endpoint @AT@ 2448 @LENGTH@ 8
---------DEL CastExpression@@(AWS2EC2Endpoint)component.createEndpoint("aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false") @AT@ 2459 @LENGTH@ 138
------------DEL SimpleType@@AWS2EC2Endpoint @AT@ 2460 @LENGTH@ 15
------------DEL MethodInvocation@@component.createEndpoint("aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false") @AT@ 2477 @LENGTH@ 120
---------------DEL SimpleName@@Name:component @AT@ 2477 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false"] @AT@ 2504 @LENGTH@ 93
------------------DEL StringLiteral@@"aws2-ec2://TestDomain?accessKey=xxx&secretKey=yyyy&autoDiscoverClient=false" @AT@ 2519 @LENGTH@ 77
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(clientMock,endpoint.getConfiguration().getAmazonEc2Client()) @AT@ 2608 @LENGTH@ 76
------DEL MethodInvocation@@assertNotSame(clientMock,endpoint.getConfiguration().getAmazonEc2Client()) @AT@ 2608 @LENGTH@ 75
---------DEL SimpleName@@MethodName:assertNotSame:[clientMock, endpoint.getConfiguration().getAmazonEc2Client()] @AT@ 2608 @LENGTH@ 75
------------DEL SimpleName@@clientMock @AT@ 2622 @LENGTH@ 10
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonEc2Client() @AT@ 2634 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2634 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2634 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonEc2Client:[] @AT@ 2662 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Invalidating session: " + session.getId()) @TO@ MethodInvocation:this.logger.debug(LogMessage.format("Invalidating session: %s",session.getId())) @AT@ 2389 @LENGTH@ 62
---UPD MethodInvocation@@this.logger.debug("Invalidating session: " + session.getId()) @TO@ this.logger.debug(LogMessage.format("Invalidating session: %s",session.getId())) @AT@ 2389 @LENGTH@ 61
------UPD SimpleName@@MethodName:debug:["Invalidating session: " + session.getId()] @TO@ MethodName:format:["Invalidating session: %s", session.getId()] @AT@ 2401 @LENGTH@ 49
------INS SimpleName@@MethodName:debug:[LogMessage.format("Invalidating session: %s",session.getId())] @TO@ MethodInvocation@@this.logger.debug("Invalidating session: " + session.getId()) @AT@ 2449 @LENGTH@ 69
---------INS MethodInvocation@@LogMessage.format("Invalidating session: %s",session.getId()) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Invalidating session: %s",session.getId())] @AT@ 2455 @LENGTH@ 62
------------MOV SimpleName@@MethodName:debug:["Invalidating session: " + session.getId()] @TO@ MethodInvocation@@LogMessage.format("Invalidating session: %s",session.getId()) @AT@ 2401 @LENGTH@ 49
---------------DEL InfixExpression@@"Invalidating session: " + session.getId() @AT@ 2407 @LENGTH@ 42
------------------DEL StringLiteral@@"Invalidating session: " @AT@ 2407 @LENGTH@ 24
------------------DEL Operator@@+ @AT@ 2431 @LENGTH@ 1
------------------DEL MethodInvocation@@session.getId() @AT@ 2434 @LENGTH@ 15
---------------INS StringLiteral@@"Invalidating session: %s" @TO@ SimpleName@@MethodName:debug:["Invalidating session: " + session.getId()] @AT@ 2473 @LENGTH@ 26
---------------INS MethodInvocation@@session.getId() @TO@ SimpleName@@MethodName:debug:["Invalidating session: " + session.getId()] @AT@ 2501 @LENGTH@ 15
------------------MOV SimpleName@@Name:session @TO@ MethodInvocation@@session.getId() @AT@ 2434 @LENGTH@ 7
------------------MOV SimpleName@@Name:session @TO@ MethodInvocation@@session.getId() @AT@ 2434 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@session.getId() @AT@ 2442 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@session.getId() @AT@ 2442 @LENGTH@ 7
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Invalidating session: %s",session.getId()) @AT@ 2455 @LENGTH@ 10


INS ReturnStatement@@SimpleName:defaultValue @TO@ MethodDeclaration@@private, String, MethodName:getAttribute, Element element, String name, String defaultValue,  @AT@ 20765 @LENGTH@ 20
---INS SimpleName@@defaultValue @TO@ ReturnStatement@@SimpleName:defaultValue @AT@ 20772 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(9000),endpoint.getConfiguration().getProxyPort()) @TO@ MethodInvocation:assertEquals(Integer.valueOf(9000),endpoint.getConfiguration().getProxyPort()) @AT@ 5932 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals(new Integer(9000),endpoint.getConfiguration().getProxyPort()) @TO@ assertEquals(Integer.valueOf(9000),endpoint.getConfiguration().getProxyPort()) @AT@ 5932 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:[new Integer(9000), endpoint.getConfiguration().getProxyPort()] @TO@ MethodName:assertEquals:[Integer.valueOf(9000), endpoint.getConfiguration().getProxyPort()] @AT@ 5932 @LENGTH@ 75
---------INS MethodInvocation@@Integer.valueOf(9000) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(9000), endpoint.getConfiguration().getProxyPort()] @AT@ 5945 @LENGTH@ 21
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(9000) @AT@ 5945 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[9000] @TO@ MethodInvocation@@Integer.valueOf(9000) @AT@ 5953 @LENGTH@ 13
---------------INS NumberLiteral@@9000 @TO@ SimpleName@@MethodName:valueOf:[9000] @AT@ 5961 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Integer[9000] @AT@ 5945 @LENGTH@ 17
------------DEL New@@new @AT@ 5945 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 5949 @LENGTH@ 7
------------DEL NumberLiteral@@9000 @AT@ 5957 @LENGTH@ 4


INS MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @TO@ TypeDeclaration@@[@Liveness, public]CamelMicroProfileLivenessCheck, AbstractCamelMicroProfileHealthCheck @AT@ 1154 @LENGTH@ 105
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1154 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1164 @LENGTH@ 7
---INS SimpleName@@MethodName:acceptHealthCheck @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1172 @LENGTH@ 17
---INS SingleVariableDeclaration@@AbstractHealthCheck check @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1190 @LENGTH@ 25
------INS SimpleType@@AbstractHealthCheck @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1190 @LENGTH@ 19
------INS SimpleName@@check @TO@ SingleVariableDeclaration@@AbstractHealthCheck check @AT@ 1210 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:check.isLiveness() @TO@ MethodDeclaration@@protected, boolean, MethodName:acceptHealthCheck, AbstractHealthCheck check,  @AT@ 1227 @LENGTH@ 26
------INS MethodInvocation@@check.isLiveness() @TO@ ReturnStatement@@MethodInvocation:check.isLiveness() @AT@ 1234 @LENGTH@ 18
---------INS SimpleName@@Name:check @TO@ MethodInvocation@@check.isLiveness() @AT@ 1234 @LENGTH@ 5
---------INS SimpleName@@MethodName:isLiveness:[] @TO@ MethodInvocation@@check.isLiveness() @AT@ 1240 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Bye World") @TO@ MethodInvocation:exchange.getMessage().setBody("Bye World") @AT@ 4536 @LENGTH@ 39
---UPD MethodInvocation@@exchange.getOut().setBody("Bye World") @TO@ exchange.getMessage().setBody("Bye World") @AT@ 4536 @LENGTH@ 38
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4536 @LENGTH@ 17


UPD VariableDeclarationStatement@@MockMvc traceEnabled=MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build(); @TO@ MockMvc traceEnabled=MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build(); @AT@ 9759 @LENGTH@ 256
---UPD VariableDeclarationFragment@@traceEnabled=MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @TO@ traceEnabled=MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @AT@ 9767 @LENGTH@ 247
------UPD MethodInvocation@@MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @TO@ MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @AT@ 9782 @LENGTH@ 232
---------UPD MethodInvocation@@MethodName:webAppContextSetup:[(WebApplicationContext)this.spring.getContext()] @TO@ MethodName:webAppContextSetup:[this.spring.getContext()] @AT@ 9782 @LENGTH@ 84
------------DEL CastExpression@@(WebApplicationContext)this.spring.getContext() @AT@ 9817 @LENGTH@ 48
---------------DEL SimpleType@@WebApplicationContext @AT@ 9818 @LENGTH@ 21
------------MOV MethodInvocation@@this.spring.getContext() @TO@ MethodInvocation@@MethodName:webAppContextSetup:[(WebApplicationContext)this.spring.getContext()] @AT@ 9841 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(5),endpoint.getConfiguration().getMaxNumberOfDomains()) @TO@ MethodInvocation:assertEquals(Integer.valueOf(5),endpoint.getConfiguration().getMaxNumberOfDomains()) @AT@ 5471 @LENGTH@ 82
---UPD MethodInvocation@@assertEquals(new Integer(5),endpoint.getConfiguration().getMaxNumberOfDomains()) @TO@ assertEquals(Integer.valueOf(5),endpoint.getConfiguration().getMaxNumberOfDomains()) @AT@ 5471 @LENGTH@ 81
------UPD SimpleName@@MethodName:assertEquals:[new Integer(5), endpoint.getConfiguration().getMaxNumberOfDomains()] @TO@ MethodName:assertEquals:[Integer.valueOf(5), endpoint.getConfiguration().getMaxNumberOfDomains()] @AT@ 5471 @LENGTH@ 81
---------INS MethodInvocation@@Integer.valueOf(5) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(5), endpoint.getConfiguration().getMaxNumberOfDomains()] @AT@ 5484 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(5) @AT@ 5484 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[5] @TO@ MethodInvocation@@Integer.valueOf(5) @AT@ 5492 @LENGTH@ 10
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:valueOf:[5] @AT@ 5500 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[5] @AT@ 5484 @LENGTH@ 14
------------DEL New@@new @AT@ 5484 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 5488 @LENGTH@ 7
------------DEL NumberLiteral@@5 @AT@ 5496 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ MethodInvocation:assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 3839 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(String.valueOf(response.getId()),"123","Get a wrong customer id") @TO@ assertEquals("123",String.valueOf(response.getId()),"Get a wrong customer id") @AT@ 3839 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @TO@ MethodName:assertEquals:["123", String.valueOf(response.getId()), "Get a wrong customer id"] @AT@ 3839 @LENGTH@ 80
---------MOV MethodInvocation@@String.valueOf(response.getId()) @TO@ SimpleName@@MethodName:assertEquals:[String.valueOf(response.getId()), "123", "Get a wrong customer id"] @AT@ 3852 @LENGTH@ 32


UPD ExpressionStatement@@Assignment:configuration=new Configuration() @TO@ Assignment:configuration=new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS) @AT@ 3490 @LENGTH@ 36
---UPD Assignment@@configuration=new Configuration() @TO@ configuration=new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS) @AT@ 3490 @LENGTH@ 35
------UPD ClassInstanceCreation@@Configuration[] @TO@ Configuration[Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS] @AT@ 3506 @LENGTH@ 19
---------INS QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @TO@ ClassInstanceCreation@@Configuration[] @AT@ 3524 @LENGTH@ 47
------------INS SimpleName@@Configuration @TO@ QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @AT@ 3524 @LENGTH@ 13
------------INS SimpleName@@DEFAULT_INCOMPATIBLE_IMPROVEMENTS @TO@ QualifiedName@@Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS @AT@ 3538 @LENGTH@ 33


UPD IfStatement@@if (this.sessionAuthenticationStrategy != null) {  return this.sessionAuthenticationStrategy;} else {  return new CsrfAuthenticationStrategy(this.csrfTokenRepository);} @TO@ if (this.sessionAuthenticationStrategy != null) {  return this.sessionAuthenticationStrategy;} @AT@ 11999 @LENGTH@ 180
---DEL Block@@ElseBody:{  return new CsrfAuthenticationStrategy(this.csrfTokenRepository);} @AT@ 12106 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(123),exchange.getIn().getHeader("bar",Integer.class)) @TO@ MethodInvocation:assertEquals(Integer.valueOf(123),exchange.getIn().getHeader("bar",Integer.class)) @AT@ 3899 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(new Integer(123),exchange.getIn().getHeader("bar",Integer.class)) @TO@ assertEquals(Integer.valueOf(123),exchange.getIn().getHeader("bar",Integer.class)) @AT@ 3899 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[new Integer(123), exchange.getIn().getHeader("bar",Integer.class)] @TO@ MethodName:assertEquals:[Integer.valueOf(123), exchange.getIn().getHeader("bar",Integer.class)] @AT@ 3899 @LENGTH@ 80
---------INS MethodInvocation@@Integer.valueOf(123) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(123), exchange.getIn().getHeader("bar",Integer.class)] @AT@ 3912 @LENGTH@ 20
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(123) @AT@ 3912 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[123] @TO@ MethodInvocation@@Integer.valueOf(123) @AT@ 3920 @LENGTH@ 12
---------------INS NumberLiteral@@123 @TO@ SimpleName@@MethodName:valueOf:[123] @AT@ 3928 @LENGTH@ 3
---------DEL ClassInstanceCreation@@Integer[123] @AT@ 3912 @LENGTH@ 16
------------DEL New@@new @AT@ 3912 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 3916 @LENGTH@ 7
------------DEL NumberLiteral@@123 @AT@ 3924 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo?replyTo=myReplies").to("mock:reply").process(exchange -> {
  if (counter++ < 2) {
    throw new IllegalArgumentException("Damn");
  }
}
).to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=myReplies").to("mock:reply").process(exchange -> {
  if (counter++ < 2) {
    throw new IllegalArgumentException("Damn");
  }
}
).to("mock:result") @AT@ 2534 @LENGTH@ 356
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo?replyTo=myReplies").to("mock:reply").process(exchange -> {
  if (counter++ < 2) {
    throw new IllegalArgumentException("Damn");
  }
}
).to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=myReplies").to("mock:reply").process(exchange -> {
  if (counter++ < 2) {
    throw new IllegalArgumentException("Damn");
  }
}
).to("mock:result") @AT@ 2534 @LENGTH@ 355
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=myReplies"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=myReplies"] @AT@ 2534 @LENGTH@ 66
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=myReplies"] @AT@ 2599 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2599 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2615 @LENGTH@ 5


UPD MethodDeclaration@@public, static, void, MethodName:setCacheLZMAAvailability, final boolean doCache,  @TO@ public, static, void, MethodName:setCacheLZMAAvailablity, final boolean doCache,  @AT@ 5027 @LENGTH@ 479
---UPD SimpleName@@MethodName:setCacheLZMAAvailability @TO@ MethodName:setCacheLZMAAvailablity @AT@ 5046 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.spring.configLocations(this.xml("MissingUserDetailsService")).autowire()).isInstanceOf(BeansException.class) @TO@ MethodInvocation:assertThatCode(() -> this.spring.configLocations(MiscHttpConfigTests.xml("MissingUserDetailsService")).autowire()).isInstanceOf(BeansException.class) @AT@ 22341 @LENGTH@ 140
---UPD MethodInvocation@@assertThatCode(() -> this.spring.configLocations(this.xml("MissingUserDetailsService")).autowire()).isInstanceOf(BeansException.class) @TO@ assertThatCode(() -> this.spring.configLocations(MiscHttpConfigTests.xml("MissingUserDetailsService")).autowire()).isInstanceOf(BeansException.class) @AT@ 22341 @LENGTH@ 139
------UPD MethodInvocation@@MethodName:assertThatCode:[() -> this.spring.configLocations(this.xml("MissingUserDetailsService")).autowire()] @TO@ MethodName:assertThatCode:[() -> this.spring.configLocations(MiscHttpConfigTests.xml("MissingUserDetailsService")).autowire()] @AT@ 22341 @LENGTH@ 99
---------UPD LambdaExpression@@() -> this.spring.configLocations(this.xml("MissingUserDetailsService")).autowire() @TO@ () -> this.spring.configLocations(MiscHttpConfigTests.xml("MissingUserDetailsService")).autowire() @AT@ 22356 @LENGTH@ 83
------------UPD MethodInvocation@@this.spring.configLocations(this.xml("MissingUserDetailsService")).autowire() @TO@ this.spring.configLocations(MiscHttpConfigTests.xml("MissingUserDetailsService")).autowire() @AT@ 22362 @LENGTH@ 77
---------------UPD MethodInvocation@@MethodName:configLocations:[this.xml("MissingUserDetailsService")] @TO@ MethodName:configLocations:[MiscHttpConfigTests.xml("MissingUserDetailsService")] @AT@ 22362 @LENGTH@ 66
------------------UPD MethodInvocation@@this.xml("MissingUserDetailsService") @TO@ MiscHttpConfigTests.xml("MissingUserDetailsService") @AT@ 22390 @LENGTH@ 37
---------------------DEL ThisExpression@@this @AT@ 22390 @LENGTH@ 4
---------------------INS SimpleName@@Name:MiscHttpConfigTests @TO@ MethodInvocation@@this.xml("MissingUserDetailsService") @AT@ 22395 @LENGTH@ 19


UPD ExpressionStatement@@Assignment:rec.field4=new Double(10.00) @TO@ Assignment:rec.field4=Double.valueOf(10.00) @AT@ 2972 @LENGTH@ 31
---UPD Assignment@@rec.field4=new Double(10.00) @TO@ rec.field4=Double.valueOf(10.00) @AT@ 2972 @LENGTH@ 30
------INS MethodInvocation@@Double.valueOf(10.00) @TO@ Assignment@@rec.field4=new Double(10.00) @AT@ 2985 @LENGTH@ 21
---------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.valueOf(10.00) @AT@ 2985 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[10.00] @TO@ MethodInvocation@@Double.valueOf(10.00) @AT@ 2992 @LENGTH@ 14
------------INS NumberLiteral@@10.00 @TO@ SimpleName@@MethodName:valueOf:[10.00] @AT@ 3000 @LENGTH@ 5
------DEL ClassInstanceCreation@@Double[10.00] @AT@ 2985 @LENGTH@ 17
---------DEL New@@new @AT@ 2985 @LENGTH@ 3
---------DEL SimpleType@@Double @AT@ 2989 @LENGTH@ 6
---------DEL NumberLiteral@@10.00 @AT@ 2996 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1786 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1786 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1802 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @TO@ MethodInvocation:from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @AT@ 3387 @LENGTH@ 155
---UPD MethodInvocation@@from("direct:start").inOut("activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @TO@ from("direct:start").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000").to("mock:result") @AT@ 3387 @LENGTH@ 154
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @AT@ 3387 @LENGTH@ 111
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=queue:bar&requestTimeout=2000"] @AT@ 3477 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3477 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3493 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:AssertionsForClassTypes.assertThatCode(() -> this.x509.convert(toInputStream(MALFORMED_X509_KEY))).isInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThatCode(() -> this.x509.convert(toInputStream(MALFORMED_X509_KEY))).isInstanceOf(IllegalArgumentException.class) @AT@ 5681 @LENGTH@ 149
---UPD MethodInvocation@@AssertionsForClassTypes.assertThatCode(() -> this.x509.convert(toInputStream(MALFORMED_X509_KEY))).isInstanceOf(IllegalArgumentException.class) @TO@ assertThatCode(() -> this.x509.convert(toInputStream(MALFORMED_X509_KEY))).isInstanceOf(IllegalArgumentException.class) @AT@ 5681 @LENGTH@ 148
------DEL SimpleName@@Name:AssertionsForClassTypes @AT@ 5681 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 3594 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 3594 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3610 @LENGTH@ 21


UPD Block@@ThenBody:{  Path rangerLoadRoot=new Path(new Path(work.dumpDirectory).getParent(),ReplUtils.REPL_RANGER_BASE_DIR);  LOG.info("Adding Import Ranger Metadata Task from {} ",rangerLoadRoot);  RangerLoadWork rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),work.dbNameToLoadIn,work.getMetricCollector());  Task<RangerLoadWork> rangerLoadTask=TaskFactory.get(rangerLoadWork,conf);  if (childTasks == null) {    childTasks=new ArrayList<>();  }  childTasks.add(rangerLoadTask);} @TO@ ThenBody:{  Path rangerLoadRoot=new Path(new Path(work.dumpDirectory).getParent(),ReplUtils.REPL_RANGER_BASE_DIR);  LOG.info("Adding Import Ranger Metadata Task from {} ",rangerLoadRoot);  String targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn;  RangerLoadWork rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),targetDbName,work.getMetricCollector());  Task<RangerLoadWork> rangerLoadTask=TaskFactory.get(rangerLoadWork,conf);  if (childTasks == null) {    childTasks=new ArrayList<>();  }  childTasks.add(rangerLoadTask);} @AT@ 7360 @LENGTH@ 555
---UPD VariableDeclarationStatement@@RangerLoadWork rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),work.dbNameToLoadIn,work.getMetricCollector()); @TO@ RangerLoadWork rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),targetDbName,work.getMetricCollector()); @AT@ 7559 @LENGTH@ 149
------UPD VariableDeclarationFragment@@rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),work.dbNameToLoadIn,work.getMetricCollector()) @TO@ rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),targetDbName,work.getMetricCollector()) @AT@ 7574 @LENGTH@ 133
---------UPD ClassInstanceCreation@@RangerLoadWork[rangerLoadRoot, work.getSourceDbName(), work.dbNameToLoadIn, work.getMetricCollector()] @TO@ RangerLoadWork[rangerLoadRoot, work.getSourceDbName(), targetDbName, work.getMetricCollector()] @AT@ 7591 @LENGTH@ 116
------------DEL QualifiedName@@work.dbNameToLoadIn @AT@ 7650 @LENGTH@ 19
---------------DEL SimpleName@@work @AT@ 7650 @LENGTH@ 4
---------------DEL SimpleName@@dbNameToLoadIn @AT@ 7655 @LENGTH@ 14
------------INS SimpleName@@targetDbName @TO@ ClassInstanceCreation@@RangerLoadWork[rangerLoadRoot, work.getSourceDbName(), work.dbNameToLoadIn, work.getMetricCollector()] @AT@ 7767 @LENGTH@ 12
---INS VariableDeclarationStatement@@String targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn; @TO@ Block@@ThenBody:{  Path rangerLoadRoot=new Path(new Path(work.dumpDirectory).getParent(),ReplUtils.REPL_RANGER_BASE_DIR);  LOG.info("Adding Import Ranger Metadata Task from {} ",rangerLoadRoot);  RangerLoadWork rangerLoadWork=new RangerLoadWork(rangerLoadRoot,work.getSourceDbName(),work.dbNameToLoadIn,work.getMetricCollector());  Task<RangerLoadWork> rangerLoadTask=TaskFactory.get(rangerLoadWork,conf);  if (childTasks == null) {    childTasks=new ArrayList<>();  }  childTasks.add(rangerLoadTask);} @AT@ 7559 @LENGTH@ 110
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn; @AT@ 7559 @LENGTH@ 6
------INS VariableDeclarationFragment@@targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @TO@ VariableDeclarationStatement@@String targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn; @AT@ 7566 @LENGTH@ 102
---------INS SimpleName@@targetDbName @TO@ VariableDeclarationFragment@@targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @AT@ 7566 @LENGTH@ 12
---------INS ConditionalExpression@@StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @TO@ VariableDeclarationFragment@@targetDbName=StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @AT@ 7581 @LENGTH@ 87
------------INS MethodInvocation@@StringUtils.isEmpty(work.dbNameToLoadIn) @TO@ ConditionalExpression@@StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @AT@ 7581 @LENGTH@ 40
---------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(work.dbNameToLoadIn) @AT@ 7581 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isEmpty:[work.dbNameToLoadIn] @TO@ MethodInvocation@@StringUtils.isEmpty(work.dbNameToLoadIn) @AT@ 7593 @LENGTH@ 28
------------------INS QualifiedName@@work.dbNameToLoadIn @TO@ SimpleName@@MethodName:isEmpty:[work.dbNameToLoadIn] @AT@ 7601 @LENGTH@ 19
---------------------INS SimpleName@@work @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 7601 @LENGTH@ 4
---------------------INS SimpleName@@dbNameToLoadIn @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 7606 @LENGTH@ 14
------------INS MethodInvocation@@work.getSourceDbName() @TO@ ConditionalExpression@@StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @AT@ 7624 @LENGTH@ 22
---------------INS SimpleName@@Name:work @TO@ MethodInvocation@@work.getSourceDbName() @AT@ 7624 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getSourceDbName:[] @TO@ MethodInvocation@@work.getSourceDbName() @AT@ 7629 @LENGTH@ 17
------------INS QualifiedName@@work.dbNameToLoadIn @TO@ ConditionalExpression@@StringUtils.isEmpty(work.dbNameToLoadIn) ? work.getSourceDbName() : work.dbNameToLoadIn @AT@ 7649 @LENGTH@ 19
---------------INS SimpleName@@work @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 7649 @LENGTH@ 4
---------------INS SimpleName@@dbNameToLoadIn @TO@ QualifiedName@@work.dbNameToLoadIn @AT@ 7654 @LENGTH@ 14


UPD TryStatement@@try {  if (LOG.isTraceEnabled()) {    LOG.trace("Writing response for exchangeId: {}",exchange.getExchangeId());  }  if (!response.isEmpty()) {    httpServletResponse.resetBuffer();  }  consumer.getBinding().writeResponse(exchange,httpServletResponse);} catch (IOException e) {  LOG.error("Error processing request: {}",e);  throw e;}catch (Exception e) {  LOG.error("Error processing request: {}",e);  throw new ServletException(e);} @TO@ try {  if (LOG.isTraceEnabled()) {    LOG.trace("Writing response for exchangeId: {}",exchange.getExchangeId());  }  if (!response.isEmpty()) {    httpServletResponse.resetBuffer();  }  consumer.getBinding().writeResponse(exchange,httpServletResponse);} catch (IOException e) {  LOG.error("Error processing request: {}",e.getMessage(),e);  throw e;}catch (Exception e) {  LOG.error("Error processing request: {}",e.getMessage(),e);  throw new ServletException(e);} @AT@ 12091 @LENGTH@ 782
---UPD CatchClause@@catch (IOException e) {  LOG.error("Error processing request: {}",e);  throw e;} @TO@ catch (IOException e) {  LOG.error("Error processing request: {}",e.getMessage(),e);  throw e;} @AT@ 12628 @LENGTH@ 112
------UPD ExpressionStatement@@MethodInvocation:LOG.error("Error processing request: {}",e) @TO@ MethodInvocation:LOG.error("Error processing request: {}",e.getMessage(),e) @AT@ 12664 @LENGTH@ 45
---------UPD MethodInvocation@@LOG.error("Error processing request: {}",e) @TO@ LOG.error("Error processing request: {}",e.getMessage(),e) @AT@ 12664 @LENGTH@ 44
------------UPD SimpleName@@MethodName:error:["Error processing request: {}", e] @TO@ MethodName:error:["Error processing request: {}", e.getMessage(), e] @AT@ 12668 @LENGTH@ 40
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:error:["Error processing request: {}", e] @AT@ 12722 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 12722 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 12724 @LENGTH@ 12
---UPD CatchClause@@catch (Exception e) {  LOG.error("Error processing request: {}",e);  throw new ServletException(e);} @TO@ catch (Exception e) {  LOG.error("Error processing request: {}",e.getMessage(),e);  throw new ServletException(e);} @AT@ 12741 @LENGTH@ 132
------UPD ExpressionStatement@@MethodInvocation:LOG.error("Error processing request: {}",e) @TO@ MethodInvocation:LOG.error("Error processing request: {}",e.getMessage(),e) @AT@ 12775 @LENGTH@ 45
---------UPD MethodInvocation@@LOG.error("Error processing request: {}",e) @TO@ LOG.error("Error processing request: {}",e.getMessage(),e) @AT@ 12775 @LENGTH@ 44
------------UPD SimpleName@@MethodName:error:["Error processing request: {}", e] @TO@ MethodName:error:["Error processing request: {}", e.getMessage(), e] @AT@ 12779 @LENGTH@ 40
---------------INS MethodInvocation@@e.getMessage() @TO@ SimpleName@@MethodName:error:["Error processing request: {}", e] @AT@ 12849 @LENGTH@ 14
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getMessage() @AT@ 12849 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@e.getMessage() @AT@ 12851 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertEquals(ftpClientParameters.get("soTimeout"),"10") @TO@ MethodInvocation:assertEquals("10",ftpClientParameters.get("soTimeout")) @AT@ 2037 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(ftpClientParameters.get("soTimeout"),"10") @TO@ assertEquals("10",ftpClientParameters.get("soTimeout")) @AT@ 2037 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[ftpClientParameters.get("soTimeout"), "10"] @TO@ MethodName:assertEquals:["10", ftpClientParameters.get("soTimeout")] @AT@ 2037 @LENGTH@ 56
---------MOV MethodInvocation@@ftpClientParameters.get("soTimeout") @TO@ SimpleName@@MethodName:assertEquals:[ftpClientParameters.get("soTimeout"), "10"] @AT@ 2050 @LENGTH@ 36


DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Logging out user '" + authentication + "' and transferring to logout destination");} @AT@ 3172 @LENGTH@ 135
---DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 3176 @LENGTH@ 23
------DEL SimpleName@@Name:logger @AT@ 3176 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3183 @LENGTH@ 16
---DEL Block@@ThenBody:{  logger.debug("Logging out user '" + authentication + "' and transferring to logout destination");} @AT@ 3201 @LENGTH@ 106
------DEL ExpressionStatement@@MethodInvocation:logger.debug("Logging out user '" + authentication + "' and transferring to logout destination") @AT@ 3206 @LENGTH@ 97


DEL EnhancedForStatement@@for (Map.Entry<RequestMatcher,Collection<ConfigAttribute>> entry : this.requestMap.entrySet()) {  allAttributes.addAll(entry.getValue());} @AT@ 3001 @LENGTH@ 144
---DEL SingleVariableDeclaration@@Map.Entry<RequestMatcher,Collection<ConfigAttribute>> entry @AT@ 3006 @LENGTH@ 60
------DEL ParameterizedType@@Map.Entry<RequestMatcher,Collection<ConfigAttribute>> @AT@ 3006 @LENGTH@ 54
---------DEL SimpleType@@Map.Entry @AT@ 3006 @LENGTH@ 9
---------DEL SimpleType@@RequestMatcher @AT@ 3016 @LENGTH@ 14
---------DEL ParameterizedType@@Collection<ConfigAttribute> @AT@ 3032 @LENGTH@ 27
------------DEL SimpleType@@Collection @AT@ 3032 @LENGTH@ 10
------------DEL SimpleType@@ConfigAttribute @AT@ 3043 @LENGTH@ 15
------DEL SimpleName@@entry @AT@ 3061 @LENGTH@ 5
---DEL MethodInvocation@@this.requestMap.entrySet() @AT@ 3069 @LENGTH@ 26
---DEL ExpressionStatement@@MethodInvocation:allAttributes.addAll(entry.getValue()) @AT@ 3102 @LENGTH@ 39
------DEL MethodInvocation@@allAttributes.addAll(entry.getValue()) @AT@ 3102 @LENGTH@ 38
---------DEL SimpleName@@Name:allAttributes @AT@ 3102 @LENGTH@ 13
---------DEL SimpleName@@MethodName:addAll:[entry.getValue()] @AT@ 3116 @LENGTH@ 24
------------DEL MethodInvocation@@entry.getValue() @AT@ 3123 @LENGTH@ 16
---------------DEL SimpleName@@Name:entry @AT@ 3123 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getValue:[] @AT@ 3129 @LENGTH@ 10


UPD TryStatement@@try {  String sqlStmt=sqlGenerator.addForUpdateClause("SELECT \"MT_COMMENT\" FROM \"AUX_TABLE\" WHERE \"MT_KEY1\"=" + quoteString(key) + " and \"MT_KEY2\"=0");  lockInternal();  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED,connPoolMutex);  stmt=dbConn.createStatement();  if (LOG.isDebugEnabled()) {    LOG.debug("About to execute SQL: " + sqlStmt);  }  rs=stmt.executeQuery(sqlStmt);  if (!rs.next()) {    close(rs);    try {      stmt.executeUpdate("INSERT INTO \"AUX_TABLE\" (\"MT_KEY1\", \"MT_KEY2\") VALUES(" + quoteString(key) + ", 0)");      dbConn.commit();    } catch (    SQLException ex) {      if (!isDuplicateKeyError(ex)) {        throw new RuntimeException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex),ex);      }      dbConn.rollback();    }    rs=stmt.executeQuery(sqlStmt);    if (!rs.next()) {      throw new IllegalStateException("Unable to lock " + quoteString(key) + ".  Expected row in AUX_TABLE is missing.");    }  }  Semaphore derbySemaphore=null;  if (dbProduct == DatabaseProduct.DERBY) {    derbyKey2Lock.putIfAbsent(key,new Semaphore(1));    derbySemaphore=derbyKey2Lock.get(key);    derbySemaphore.acquire();  }  LOG.debug(quoteString(key) + " locked by " + quoteString(TxnHandler.hostname));  return new LockHandleImpl(dbConn,stmt,rs,key,derbySemaphore);} catch (SQLException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  checkRetryable(dbConn,ex,"acquireLock(" + key + ")");  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex)+ "; "+ StringUtils.stringifyException(ex));}catch (InterruptedException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ ex.getMessage()+ StringUtils.stringifyException(ex));} finally {  unlockInternal();} @TO@ try {  String sqlStmt=sqlGenerator.addForUpdateClause("SELECT \"MT_COMMENT\" FROM \"AUX_TABLE\" WHERE \"MT_KEY1\"=" + quoteString(key) + " and \"MT_KEY2\"=0");  lockInternal();  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED,connPoolMutex);  stmt=dbConn.createStatement();  if (LOG.isDebugEnabled()) {    LOG.debug("About to execute SQL: " + sqlStmt);  }  rs=stmt.executeQuery(sqlStmt);  if (!rs.next()) {    close(rs);    try {      stmt.executeUpdate("INSERT INTO \"AUX_TABLE\" (\"MT_KEY1\", \"MT_KEY2\") VALUES(" + quoteString(key) + ", 0)");      dbConn.commit();    } catch (    SQLException ex) {      if (!isDuplicateKeyError(ex)) {        throw new RuntimeException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex),ex);      }      dbConn.rollback();    }    rs=stmt.executeQuery(sqlStmt);    if (!rs.next()) {      throw new IllegalStateException("Unable to lock " + quoteString(key) + ".  Expected row in AUX_TABLE is missing.");    }  }  Semaphore derbySemaphore=null;  if (dbProduct == DatabaseProduct.DERBY) {    derbyKey2Lock.putIfAbsent(key,new Semaphore(1));    derbySemaphore=derbyKey2Lock.get(key);    derbySemaphore.acquire();  }  LOG.debug(quoteString(key) + " locked by " + quoteString(TxnHandler.hostname));  needToCloseConn=false;  return new LockHandleImpl(dbConn,stmt,rs,key,derbySemaphore);} catch (SQLException ex) {  checkRetryable(dbConn,ex,"acquireLock(" + key + ")");  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex)+ "; "+ StringUtils.stringifyException(ex));}catch (InterruptedException ex) {  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ ex.getMessage()+ StringUtils.stringifyException(ex));} finally {  if (needToCloseConn) {    rollbackDBConn(dbConn);    close(rs,stmt,dbConn);  }  unlockInternal();} @AT@ 235163 @LENGTH@ 2463
---INS ExpressionStatement@@Assignment:needToCloseConn=false @TO@ TryStatement@@try {  String sqlStmt=sqlGenerator.addForUpdateClause("SELECT \"MT_COMMENT\" FROM \"AUX_TABLE\" WHERE \"MT_KEY1\"=" + quoteString(key) + " and \"MT_KEY2\"=0");  lockInternal();  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED,connPoolMutex);  stmt=dbConn.createStatement();  if (LOG.isDebugEnabled()) {    LOG.debug("About to execute SQL: " + sqlStmt);  }  rs=stmt.executeQuery(sqlStmt);  if (!rs.next()) {    close(rs);    try {      stmt.executeUpdate("INSERT INTO \"AUX_TABLE\" (\"MT_KEY1\", \"MT_KEY2\") VALUES(" + quoteString(key) + ", 0)");      dbConn.commit();    } catch (    SQLException ex) {      if (!isDuplicateKeyError(ex)) {        throw new RuntimeException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex),ex);      }      dbConn.rollback();    }    rs=stmt.executeQuery(sqlStmt);    if (!rs.next()) {      throw new IllegalStateException("Unable to lock " + quoteString(key) + ".  Expected row in AUX_TABLE is missing.");    }  }  Semaphore derbySemaphore=null;  if (dbProduct == DatabaseProduct.DERBY) {    derbyKey2Lock.putIfAbsent(key,new Semaphore(1));    derbySemaphore=derbyKey2Lock.get(key);    derbySemaphore.acquire();  }  LOG.debug(quoteString(key) + " locked by " + quoteString(TxnHandler.hostname));  return new LockHandleImpl(dbConn,stmt,rs,key,derbySemaphore);} catch (SQLException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  checkRetryable(dbConn,ex,"acquireLock(" + key + ")");  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex)+ "; "+ StringUtils.stringifyException(ex));}catch (InterruptedException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ ex.getMessage()+ StringUtils.stringifyException(ex));} finally {  unlockInternal();} @AT@ 236942 @LENGTH@ 24
------INS Assignment@@needToCloseConn=false @TO@ ExpressionStatement@@Assignment:needToCloseConn=false @AT@ 236942 @LENGTH@ 23
---------INS SimpleName@@needToCloseConn @TO@ Assignment@@needToCloseConn=false @AT@ 236942 @LENGTH@ 15
---------INS Operator@@= @TO@ Assignment@@needToCloseConn=false @AT@ 236957 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@needToCloseConn=false @AT@ 236960 @LENGTH@ 5
---UPD CatchClause@@catch (SQLException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  checkRetryable(dbConn,ex,"acquireLock(" + key + ")");  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex)+ "; "+ StringUtils.stringifyException(ex));} @TO@ catch (SQLException ex) {  checkRetryable(dbConn,ex,"acquireLock(" + key + ")");  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ getMessage(ex)+ "; "+ StringUtils.stringifyException(ex));} @AT@ 237016 @LENGTH@ 308
---UPD CatchClause@@catch (InterruptedException ex) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ ex.getMessage()+ StringUtils.stringifyException(ex));} @TO@ catch (InterruptedException ex) {  throw new MetaException("Unable to lock " + quoteString(key) + " due to: "+ ex.getMessage()+ StringUtils.stringifyException(ex));} @AT@ 237331 @LENGTH@ 245
------DEL ExpressionStatement@@MethodInvocation:rollbackDBConn(dbConn) @AT@ 237372 @LENGTH@ 23
---------DEL MethodInvocation@@rollbackDBConn(dbConn) @AT@ 237372 @LENGTH@ 22
------------DEL SimpleName@@MethodName:rollbackDBConn:[dbConn] @AT@ 237372 @LENGTH@ 22
---------------DEL SimpleName@@dbConn @AT@ 237387 @LENGTH@ 6
------DEL ExpressionStatement@@MethodInvocation:close(rs,stmt,dbConn) @AT@ 237404 @LENGTH@ 24
---------DEL MethodInvocation@@close(rs,stmt,dbConn) @AT@ 237404 @LENGTH@ 23
------------DEL SimpleName@@MethodName:close:[rs, stmt, dbConn] @AT@ 237404 @LENGTH@ 23
---------------DEL SimpleName@@rs @AT@ 237410 @LENGTH@ 2
---------------DEL SimpleName@@stmt @AT@ 237414 @LENGTH@ 4
---------------DEL SimpleName@@dbConn @AT@ 237420 @LENGTH@ 6
---UPD Block@@FinallyBody:{  unlockInternal();} @TO@ FinallyBody:{  if (needToCloseConn) {    rollbackDBConn(dbConn);    close(rs,stmt,dbConn);  }  unlockInternal();} @AT@ 237591 @LENGTH@ 35
------INS IfStatement@@if (needToCloseConn) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @TO@ Block@@FinallyBody:{  unlockInternal();} @AT@ 237588 @LENGTH@ 101
---------INS SimpleName@@needToCloseConn @TO@ IfStatement@@if (needToCloseConn) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @AT@ 237592 @LENGTH@ 15
---------INS Block@@ThenBody:{  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @TO@ IfStatement@@if (needToCloseConn) {  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @AT@ 237609 @LENGTH@ 80
------------MOV ExpressionStatement@@MethodInvocation:rollbackDBConn(dbConn) @TO@ Block@@ThenBody:{  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @AT@ 237050 @LENGTH@ 23
------------MOV ExpressionStatement@@MethodInvocation:close(rs,stmt,dbConn) @TO@ Block@@ThenBody:{  rollbackDBConn(dbConn);  close(rs,stmt,dbConn);} @AT@ 237082 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultingRDF.size(),28) @TO@ MethodInvocation:assertEquals(28,resultingRDF.size()) @AT@ 2023 @LENGTH@ 38
---UPD MethodInvocation@@assertEquals(resultingRDF.size(),28) @TO@ assertEquals(28,resultingRDF.size()) @AT@ 2023 @LENGTH@ 37
------UPD SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @TO@ MethodName:assertEquals:[28, resultingRDF.size()] @AT@ 2023 @LENGTH@ 37
---------INS NumberLiteral@@28 @TO@ SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @AT@ 2036 @LENGTH@ 2
---------DEL NumberLiteral@@28 @AT@ 2057 @LENGTH@ 2


INS VariableDeclarationStatement@@Object singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY); @TO@ MethodDeclaration@@private, void, MethodName:formatSpecialQueueArguments, Map<String,Object> queueArgs,  @AT@ 4235 @LENGTH@ 99
---INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY); @AT@ 4235 @LENGTH@ 6
---INS VariableDeclarationFragment@@singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @TO@ VariableDeclarationStatement@@Object singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY); @AT@ 4242 @LENGTH@ 91
------INS SimpleName@@singleConsumer @TO@ VariableDeclarationFragment@@singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @AT@ 4242 @LENGTH@ 14
------INS MethodInvocation@@queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @TO@ VariableDeclarationFragment@@singleConsumer=queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @AT@ 4259 @LENGTH@ 74
---------INS SimpleName@@Name:queueArgs @TO@ MethodInvocation@@queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @AT@ 4259 @LENGTH@ 9
---------INS SimpleName@@MethodName:get:[RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY] @TO@ MethodInvocation@@queueArgs.get(RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY) @AT@ 4269 @LENGTH@ 64
------------INS QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @TO@ SimpleName@@MethodName:get:[RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY] @AT@ 4273 @LENGTH@ 59
---------------INS SimpleName@@RabbitMQConstants @TO@ QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @AT@ 4273 @LENGTH@ 17
---------------INS SimpleName@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @TO@ QualifiedName@@RabbitMQConstants.RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @AT@ 4291 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId) @TO@ MethodInvocation:this.logger.warn(LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId)) @AT@ 1704 @LENGTH@ 133
---UPD MethodInvocation@@this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId) @TO@ this.logger.warn(LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId)) @AT@ 1704 @LENGTH@ 132
------UPD SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @TO@ MethodName:format:["Denying user %s permission '%s' on object with Id %s", authentication.getName(), permission, targetId] @AT@ 1716 @LENGTH@ 120
------INS SimpleName@@MethodName:warn:[LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId)] @TO@ MethodInvocation@@this.logger.warn("Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId) @AT@ 1775 @LENGTH@ 131
---------INS MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId) @TO@ SimpleName@@MethodName:warn:[LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId)] @AT@ 1780 @LENGTH@ 125
------------MOV SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @TO@ MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId) @AT@ 1716 @LENGTH@ 120
---------------DEL InfixExpression@@"Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId @AT@ 1721 @LENGTH@ 114
------------------DEL StringLiteral@@"Denying user " @AT@ 1721 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 1736 @LENGTH@ 1
------------------DEL MethodInvocation@@authentication.getName() @AT@ 1739 @LENGTH@ 24
------------------DEL StringLiteral@@" permission '" @AT@ 1766 @LENGTH@ 15
------------------DEL SimpleName@@permission @AT@ 1784 @LENGTH@ 10
------------------DEL StringLiteral@@"' on object with Id '" @AT@ 1801 @LENGTH@ 23
------------------DEL SimpleName@@targetId @AT@ 1827 @LENGTH@ 8
---------------INS StringLiteral@@"Denying user %s permission '%s' on object with Id %s" @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @AT@ 1798 @LENGTH@ 54
---------------INS MethodInvocation@@authentication.getName() @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @AT@ 1858 @LENGTH@ 24
------------------MOV SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 1739 @LENGTH@ 14
------------------MOV SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 1739 @LENGTH@ 14
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 1754 @LENGTH@ 9
------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 1754 @LENGTH@ 9
---------------INS SimpleName@@permission @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @AT@ 1884 @LENGTH@ 10
---------------INS SimpleName@@targetId @TO@ SimpleName@@MethodName:warn:["Denying user " + authentication.getName() + " permission '"+ permission+ "' on object with Id '"+ targetId] @AT@ 1896 @LENGTH@ 8
------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Denying user %s permission '%s' on object with Id %s",authentication.getName(),permission,targetId) @AT@ 1780 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2423 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2423 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2439 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader("copy-counter",counter + 1) @TO@ MethodInvocation:exchange.getMessage().setHeader("copy-counter",counter + 1) @AT@ 1895 @LENGTH@ 57
---UPD MethodInvocation@@exchange.getOut().setHeader("copy-counter",counter + 1) @TO@ exchange.getMessage().setHeader("copy-counter",counter + 1) @AT@ 1895 @LENGTH@ 56
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1895 @LENGTH@ 17


DEL IfStatement@@if (response == null) {  throw new IllegalArgumentException("The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " + HTTP_RESPONSE_ATTR);} @AT@ 3058 @LENGTH@ 191
---DEL InfixExpression@@response == null @AT@ 3062 @LENGTH@ 16
------DEL SimpleName@@response @AT@ 3062 @LENGTH@ 8
------DEL Operator@@== @AT@ 3070 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 3074 @LENGTH@ 4
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " + HTTP_RESPONSE_ATTR);} @AT@ 3080 @LENGTH@ 169
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " + HTTP_RESPONSE_ATTR) @AT@ 3085 @LENGTH@ 160
---------DEL ClassInstanceCreation@@IllegalArgumentException["The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " + HTTP_RESPONSE_ATTR] @AT@ 3091 @LENGTH@ 153
------------DEL New@@new @AT@ 3091 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 3095 @LENGTH@ 24
------------DEL InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3126 @LENGTH@ 117


INS ExpressionStatement@@MethodInvocation:instructions.add(BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()) @TO@ MethodDeclaration@@public, static, void, MethodName:init,  @AT@ 1710 @LENGTH@ 74
---INS MethodInvocation@@instructions.add(BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()) @TO@ ExpressionStatement@@MethodInvocation:instructions.add(BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()) @AT@ 1710 @LENGTH@ 73
------INS SimpleName@@Name:instructions @TO@ MethodInvocation@@instructions.add(BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()) @AT@ 1710 @LENGTH@ 12
------INS SimpleName@@MethodName:add:[BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()] @TO@ MethodInvocation@@instructions.add(BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()) @AT@ 1723 @LENGTH@ 60
---------INS MethodInvocation@@BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig() @TO@ SimpleName@@MethodName:add:[BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig()] @AT@ 1727 @LENGTH@ 55
------------INS QualifiedName@@Name:BootableJarLogger.ROOT_LOGGER @TO@ MethodInvocation@@BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig() @AT@ 1727 @LENGTH@ 29
------------INS SimpleName@@MethodName:argDisplayGalleonConfig:[] @TO@ MethodInvocation@@BootableJarLogger.ROOT_LOGGER.argDisplayGalleonConfig() @AT@ 1757 @LENGTH@ 25


UPD MethodDeclaration@@public, static, void, MethodName:setCacheXZAvailability, final boolean doCache,  @TO@ public, static, void, MethodName:setCacheXZAvailablity, final boolean doCache,  @AT@ 5862 @LENGTH@ 465
---UPD SimpleName@@MethodName:setCacheXZAvailability @TO@ MethodName:setCacheXZAvailablity @AT@ 5881 @LENGTH@ 22


UPD VariableDeclarationStatement@@org.apache.camel.Message out=exchange.getOut(); @TO@ org.apache.camel.Message out=exchange.getMessage(); @AT@ 4920 @LENGTH@ 49
---UPD VariableDeclarationFragment@@out=exchange.getOut() @TO@ out=exchange.getMessage() @AT@ 4945 @LENGTH@ 23
------UPD MethodInvocation@@exchange.getOut() @TO@ exchange.getMessage() @AT@ 4951 @LENGTH@ 17
---------UPD SimpleName@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4960 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]TestRoutes, SpringRouteBuilder @TO@ [public, static]TestRoutes, RouteBuilder @AT@ 2964 @LENGTH@ 1000
---UPD SimpleType@@SpringRouteBuilder @TO@ RouteBuilder @AT@ 3003 @LENGTH@ 18


MOV FieldDeclaration@@private, static, final, PasswordEncoder, [INSTANCE=new NoOpPasswordEncoder()] @TO@ TypeDeclaration@@[@Deprecated, public, final]NoOpPasswordEncoder, [PasswordEncoder] @AT@ 1821 @LENGTH@ 74


INS MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @TO@ TypeDeclaration@@[public]JdbcAclService, [AclService] @AT@ 3913 @LENGTH@ 349
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 3913 @LENGTH@ 6
---INS ParameterizedType@@List<ObjectIdentity> @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 3920 @LENGTH@ 20
------INS SimpleType@@List @TO@ ParameterizedType@@List<ObjectIdentity> @AT@ 3920 @LENGTH@ 4
------INS SimpleType@@ObjectIdentity @TO@ ParameterizedType@@List<ObjectIdentity> @AT@ 3925 @LENGTH@ 14
---MOV VariableDeclarationStatement@@Object[] args={parentIdentity.getIdentifier().toString(),parentIdentity.getType()}; @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 3932 @LENGTH@ 88
---INS SimpleName@@MethodName:findChildren @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 3941 @LENGTH@ 12
---INS SingleVariableDeclaration@@ObjectIdentity parentIdentity @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 3954 @LENGTH@ 29
------INS SimpleType@@ObjectIdentity @TO@ SingleVariableDeclaration@@ObjectIdentity parentIdentity @AT@ 3954 @LENGTH@ 14
------INS SimpleName@@parentIdentity @TO@ SingleVariableDeclaration@@ObjectIdentity parentIdentity @AT@ 3969 @LENGTH@ 14
---INS VariableDeclarationStatement@@List<ObjectIdentity> objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)); @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4080 @LENGTH@ 131
------INS ParameterizedType@@List<ObjectIdentity> @TO@ VariableDeclarationStatement@@List<ObjectIdentity> objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)); @AT@ 4080 @LENGTH@ 20
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ObjectIdentity> @AT@ 4080 @LENGTH@ 4
---------INS SimpleType@@ObjectIdentity @TO@ ParameterizedType@@List<ObjectIdentity> @AT@ 4085 @LENGTH@ 14
------INS VariableDeclarationFragment@@objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @TO@ VariableDeclarationStatement@@List<ObjectIdentity> objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)); @AT@ 4101 @LENGTH@ 109
---------INS SimpleName@@objects @TO@ VariableDeclarationFragment@@objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @AT@ 4101 @LENGTH@ 7
---------INS MethodInvocation@@this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @TO@ VariableDeclarationFragment@@objects=this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @AT@ 4111 @LENGTH@ 99
------------INS FieldAccess@@this.jdbcOperations @TO@ MethodInvocation@@this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @AT@ 4111 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.jdbcOperations @AT@ 4111 @LENGTH@ 4
---------------INS SimpleName@@jdbcOperations @TO@ FieldAccess@@this.jdbcOperations @AT@ 4116 @LENGTH@ 14
------------INS SimpleName@@MethodName:query:[this.findChildrenSql, args, (rs,rowNum) -> mapObjectIdentityRow(rs)] @TO@ MethodInvocation@@this.jdbcOperations.query(this.findChildrenSql,args,(rs,rowNum) -> mapObjectIdentityRow(rs)) @AT@ 4131 @LENGTH@ 79
---------------INS FieldAccess@@this.findChildrenSql @TO@ SimpleName@@MethodName:query:[this.findChildrenSql, args, (rs,rowNum) -> mapObjectIdentityRow(rs)] @AT@ 4137 @LENGTH@ 20
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.findChildrenSql @AT@ 4137 @LENGTH@ 4
------------------INS SimpleName@@findChildrenSql @TO@ FieldAccess@@this.findChildrenSql @AT@ 4142 @LENGTH@ 15
---------------INS SimpleName@@args @TO@ SimpleName@@MethodName:query:[this.findChildrenSql, args, (rs,rowNum) -> mapObjectIdentityRow(rs)] @AT@ 4159 @LENGTH@ 4
---------------INS LambdaExpression@@(rs,rowNum) -> mapObjectIdentityRow(rs) @TO@ SimpleName@@MethodName:query:[this.findChildrenSql, args, (rs,rowNum) -> mapObjectIdentityRow(rs)] @AT@ 4169 @LENGTH@ 40
------------------INS VariableDeclarationFragment@@rs @TO@ LambdaExpression@@(rs,rowNum) -> mapObjectIdentityRow(rs) @AT@ 4170 @LENGTH@ 2
---------------------INS SimpleName@@rs @TO@ VariableDeclarationFragment@@rs @AT@ 4170 @LENGTH@ 2
------------------INS VariableDeclarationFragment@@rowNum @TO@ LambdaExpression@@(rs,rowNum) -> mapObjectIdentityRow(rs) @AT@ 4174 @LENGTH@ 6
---------------------INS SimpleName@@rowNum @TO@ VariableDeclarationFragment@@rowNum @AT@ 4174 @LENGTH@ 6
------------------INS MethodInvocation@@mapObjectIdentityRow(rs) @TO@ LambdaExpression@@(rs,rowNum) -> mapObjectIdentityRow(rs) @AT@ 4185 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:mapObjectIdentityRow:[rs] @TO@ MethodInvocation@@mapObjectIdentityRow(rs) @AT@ 4185 @LENGTH@ 24
------------------------INS SimpleName@@rs @TO@ SimpleName@@MethodName:mapObjectIdentityRow:[rs] @AT@ 4206 @LENGTH@ 2
---INS ReturnStatement@@ConditionalExpression:(!objects.isEmpty()) ? objects : null @TO@ MethodDeclaration@@public, List<ObjectIdentity>, MethodName:findChildren, ObjectIdentity parentIdentity,  @AT@ 4214 @LENGTH@ 45
------INS ConditionalExpression@@(!objects.isEmpty()) ? objects : null @TO@ ReturnStatement@@ConditionalExpression:(!objects.isEmpty()) ? objects : null @AT@ 4221 @LENGTH@ 37
---------INS ParenthesizedExpression@@(!objects.isEmpty()) @TO@ ConditionalExpression@@(!objects.isEmpty()) ? objects : null @AT@ 4221 @LENGTH@ 20
------------INS PrefixExpression@@!objects.isEmpty() @TO@ ParenthesizedExpression@@(!objects.isEmpty()) @AT@ 4222 @LENGTH@ 18
---------------INS Operator@@! @TO@ PrefixExpression@@!objects.isEmpty() @AT@ 4222 @LENGTH@ 1
---------------INS MethodInvocation@@objects.isEmpty() @TO@ PrefixExpression@@!objects.isEmpty() @AT@ 4223 @LENGTH@ 17
------------------INS SimpleName@@Name:objects @TO@ MethodInvocation@@objects.isEmpty() @AT@ 4223 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@objects.isEmpty() @AT@ 4231 @LENGTH@ 9
---------INS SimpleName@@objects @TO@ ConditionalExpression@@(!objects.isEmpty()) ? objects : null @AT@ 4244 @LENGTH@ 7
---------INS NullLiteral@@null @TO@ ConditionalExpression@@(!objects.isEmpty()) ? objects : null @AT@ 4254 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("seda:seda").routeId("Async").inOnly(bigqueryEndpoint).log(LoggingLevel.INFO,"To sendresult").to(sendResult) @TO@ MethodInvocation:from("seda:seda").routeId("Async").to(ExchangePattern.InOnly,bigqueryEndpoint).log(LoggingLevel.INFO,"To sendresult").to(sendResult) @AT@ 2226 @LENGTH@ 215
---UPD MethodInvocation@@from("seda:seda").routeId("Async").inOnly(bigqueryEndpoint).log(LoggingLevel.INFO,"To sendresult").to(sendResult) @TO@ from("seda:seda").routeId("Async").to(ExchangePattern.InOnly,bigqueryEndpoint).log(LoggingLevel.INFO,"To sendresult").to(sendResult) @AT@ 2226 @LENGTH@ 214
------UPD MethodInvocation@@MethodName:inOnly:[bigqueryEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, bigqueryEndpoint] @AT@ 2226 @LENGTH@ 109
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[bigqueryEndpoint] @AT@ 2355 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2355 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2371 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:test").inOut("activemq:queue:test1?requestTimeout=200").inOut("activemq:queue:test1?requestTimeout=200").inOut("activemq:queue:test1?requestTimeout=200").to("mock:finished") @TO@ MethodInvocation:from("direct:test").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to("mock:finished") @AT@ 2348 @LENGTH@ 287
---UPD MethodInvocation@@from("direct:test").inOut("activemq:queue:test1?requestTimeout=200").inOut("activemq:queue:test1?requestTimeout=200").inOut("activemq:queue:test1?requestTimeout=200").to("mock:finished") @TO@ from("direct:test").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to(ExchangePattern.InOut,"activemq:queue:test1?requestTimeout=200").to("mock:finished") @AT@ 2348 @LENGTH@ 286
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:test1?requestTimeout=200"] @AT@ 2348 @LENGTH@ 241
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @AT@ 2625 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2625 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2641 @LENGTH@ 5
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:test1?requestTimeout=200"] @AT@ 2348 @LENGTH@ 167
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @AT@ 2531 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2531 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2547 @LENGTH@ 5
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:test1?requestTimeout=200"] @AT@ 2348 @LENGTH@ 93
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:test1?requestTimeout=200"] @AT@ 2437 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2437 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2453 @LENGTH@ 5


UPD IfStatement@@if (in.getHeader(CxfConstants.OPERATION_NAME).equals("myOrder")) {  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(1);  Holder<String> customer=(Holder<String>)parameters.get(1);  if (customer.value.length() == 0) {    customer.value="newCustomer";  }  parameters.add(0,"Ordered ammount " + amount);  exchange.getOut().setBody(parameters);} else {  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(0);  Holder<String> securityOrder=(Holder<String>)parameters.get(0);  securityOrder.value="secureParts";  parameters.add(0,"Ordered ammount " + amount);  exchange.getOut().setBody(parameters);} @TO@ if (in.getHeader(CxfConstants.OPERATION_NAME).equals("myOrder")) {  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(1);  Holder<String> customer=(Holder<String>)parameters.get(1);  if (customer.value.length() == 0) {    customer.value="newCustomer";  }  parameters.add(0,"Ordered ammount " + amount);  exchange.getMessage().setBody(parameters);} else {  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(0);  Holder<String> securityOrder=(Holder<String>)parameters.get(0);  securityOrder.value="secureParts";  parameters.add(0,"Ordered ammount " + amount);  exchange.getMessage().setBody(parameters);} @AT@ 1280 @LENGTH@ 1015
---UPD Block@@ThenBody:{  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(1);  Holder<String> customer=(Holder<String>)parameters.get(1);  if (customer.value.length() == 0) {    customer.value="newCustomer";  }  parameters.add(0,"Ordered ammount " + amount);  exchange.getOut().setBody(parameters);} @TO@ ThenBody:{  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(1);  Holder<String> customer=(Holder<String>)parameters.get(1);  if (customer.value.length() == 0) {    customer.value="newCustomer";  }  parameters.add(0,"Ordered ammount " + amount);  exchange.getMessage().setBody(parameters);} @AT@ 1345 @LENGTH@ 500
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(parameters) @TO@ MethodInvocation:exchange.getMessage().setBody(parameters) @AT@ 1797 @LENGTH@ 38
---------UPD MethodInvocation@@exchange.getOut().setBody(parameters) @TO@ exchange.getMessage().setBody(parameters) @AT@ 1797 @LENGTH@ 37
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1797 @LENGTH@ 17
---UPD Block@@ElseBody:{  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(0);  Holder<String> securityOrder=(Holder<String>)parameters.get(0);  securityOrder.value="secureParts";  parameters.add(0,"Ordered ammount " + amount);  exchange.getOut().setBody(parameters);} @TO@ ElseBody:{  List<Object> parameters=in.getBody(List.class);  int amount=(Integer)parameters.remove(0);  Holder<String> securityOrder=(Holder<String>)parameters.get(0);  securityOrder.value="secureParts";  parameters.add(0,"Ordered ammount " + amount);  exchange.getMessage().setBody(parameters);} @AT@ 1851 @LENGTH@ 444
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(parameters) @TO@ MethodInvocation:exchange.getMessage().setBody(parameters) @AT@ 2247 @LENGTH@ 38
---------UPD MethodInvocation@@exchange.getOut().setBody(parameters) @TO@ exchange.getMessage().setBody(parameters) @AT@ 2247 @LENGTH@ 37
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2247 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE),"Get a wrong response code") @TO@ MethodInvocation:assertEquals(200,exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE),"Get a wrong response code") @AT@ 4008 @LENGTH@ 105
---UPD MethodInvocation@@assertEquals(200,exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE),"Get a wrong response code") @TO@ assertEquals(200,exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE),"Get a wrong response code") @AT@ 4008 @LENGTH@ 104
------UPD SimpleName@@MethodName:assertEquals:[200, exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE), "Get a wrong response code"] @TO@ MethodName:assertEquals:[200, exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE), "Get a wrong response code"] @AT@ 4008 @LENGTH@ 104
---------UPD MethodInvocation@@exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE) @TO@ exchange.getMessage().getHeader(Exchange.HTTP_RESPONSE_CODE) @AT@ 4026 @LENGTH@ 56
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4026 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2123 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2123 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2139 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @TO@ TypeDeclaration@@[public]SimpleJobRepositoryTests,  @AT@ 8699 @LENGTH@ 331
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8699 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8706 @LENGTH@ 4
---INS SimpleName@@MethodName:testCreateJobExecutionInstanceWithoutExecutions @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8711 @LENGTH@ 47
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8768 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(jobInstanceDao.getJobInstance("foo",new JobParameters())).thenReturn(jobInstance) @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8782 @LENGTH@ 88
------INS MethodInvocation@@when(jobInstanceDao.getJobInstance("foo",new JobParameters())).thenReturn(jobInstance) @TO@ ExpressionStatement@@MethodInvocation:when(jobInstanceDao.getJobInstance("foo",new JobParameters())).thenReturn(jobInstance) @AT@ 8782 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:when:[jobInstanceDao.getJobInstance("foo",new JobParameters())] @TO@ MethodInvocation@@when(jobInstanceDao.getJobInstance("foo",new JobParameters())).thenReturn(jobInstance) @AT@ 8782 @LENGTH@ 63
------------INS MethodInvocation@@jobInstanceDao.getJobInstance("foo",new JobParameters()) @TO@ MethodInvocation@@MethodName:when:[jobInstanceDao.getJobInstance("foo",new JobParameters())] @AT@ 8787 @LENGTH@ 57
---------------INS SimpleName@@Name:jobInstanceDao @TO@ MethodInvocation@@jobInstanceDao.getJobInstance("foo",new JobParameters()) @AT@ 8787 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getJobInstance:["foo", new JobParameters()] @TO@ MethodInvocation@@jobInstanceDao.getJobInstance("foo",new JobParameters()) @AT@ 8802 @LENGTH@ 42
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:getJobInstance:["foo", new JobParameters()] @AT@ 8817 @LENGTH@ 5
------------------INS ClassInstanceCreation@@JobParameters[] @TO@ SimpleName@@MethodName:getJobInstance:["foo", new JobParameters()] @AT@ 8824 @LENGTH@ 19
---------------------INS New@@new @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 8824 @LENGTH@ 3
---------------------INS SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 8828 @LENGTH@ 13
---------INS SimpleName@@MethodName:thenReturn:[jobInstance] @TO@ MethodInvocation@@when(jobInstanceDao.getJobInstance("foo",new JobParameters())).thenReturn(jobInstance) @AT@ 8846 @LENGTH@ 23
------------INS SimpleName@@jobInstance @TO@ SimpleName@@MethodName:thenReturn:[jobInstance] @AT@ 8857 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:when(jobExecutionDao.findJobExecutions(jobInstance)).thenReturn(Collections.emptyList()) @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8873 @LENGTH@ 89
------INS MethodInvocation@@when(jobExecutionDao.findJobExecutions(jobInstance)).thenReturn(Collections.emptyList()) @TO@ ExpressionStatement@@MethodInvocation:when(jobExecutionDao.findJobExecutions(jobInstance)).thenReturn(Collections.emptyList()) @AT@ 8873 @LENGTH@ 88
---------INS MethodInvocation@@MethodName:when:[jobExecutionDao.findJobExecutions(jobInstance)] @TO@ MethodInvocation@@when(jobExecutionDao.findJobExecutions(jobInstance)).thenReturn(Collections.emptyList()) @AT@ 8873 @LENGTH@ 52
------------INS MethodInvocation@@jobExecutionDao.findJobExecutions(jobInstance) @TO@ MethodInvocation@@MethodName:when:[jobExecutionDao.findJobExecutions(jobInstance)] @AT@ 8878 @LENGTH@ 46
---------------INS SimpleName@@Name:jobExecutionDao @TO@ MethodInvocation@@jobExecutionDao.findJobExecutions(jobInstance) @AT@ 8878 @LENGTH@ 15
---------------INS SimpleName@@MethodName:findJobExecutions:[jobInstance] @TO@ MethodInvocation@@jobExecutionDao.findJobExecutions(jobInstance) @AT@ 8894 @LENGTH@ 30
------------------INS SimpleName@@jobInstance @TO@ SimpleName@@MethodName:findJobExecutions:[jobInstance] @AT@ 8912 @LENGTH@ 11
---------INS SimpleName@@MethodName:thenReturn:[Collections.emptyList()] @TO@ MethodInvocation@@when(jobExecutionDao.findJobExecutions(jobInstance)).thenReturn(Collections.emptyList()) @AT@ 8926 @LENGTH@ 35
------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:thenReturn:[Collections.emptyList()] @AT@ 8937 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 8937 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 8949 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:jobRepository.createJobExecution("foo",new JobParameters()) @TO@ MethodDeclaration@@public, void, MethodName:testCreateJobExecutionInstanceWithoutExecutions, Exception,  @AT@ 8966 @LENGTH@ 61
------INS MethodInvocation@@jobRepository.createJobExecution("foo",new JobParameters()) @TO@ ExpressionStatement@@MethodInvocation:jobRepository.createJobExecution("foo",new JobParameters()) @AT@ 8966 @LENGTH@ 60
---------INS SimpleName@@Name:jobRepository @TO@ MethodInvocation@@jobRepository.createJobExecution("foo",new JobParameters()) @AT@ 8966 @LENGTH@ 13
---------INS SimpleName@@MethodName:createJobExecution:["foo", new JobParameters()] @TO@ MethodInvocation@@jobRepository.createJobExecution("foo",new JobParameters()) @AT@ 8980 @LENGTH@ 46
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:createJobExecution:["foo", new JobParameters()] @AT@ 8999 @LENGTH@ 5
------------INS ClassInstanceCreation@@JobParameters[] @TO@ SimpleName@@MethodName:createJobExecution:["foo", new JobParameters()] @AT@ 9006 @LENGTH@ 19
---------------INS New@@new @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 9006 @LENGTH@ 3
---------------INS SimpleType@@JobParameters @TO@ ClassInstanceCreation@@JobParameters[] @AT@ 9010 @LENGTH@ 13


INS FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @TO@ TypeDeclaration@@[public, final]RabbitMQConstants,  @AT@ 3123 @LENGTH@ 98
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @AT@ 3123 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @AT@ 3130 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @AT@ 3137 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @AT@ 3143 @LENGTH@ 6
---INS VariableDeclarationFragment@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer" @TO@ FieldDeclaration@@public, static, final, String, [RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer"] @AT@ 3150 @LENGTH@ 70
------INS SimpleName@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY @TO@ VariableDeclarationFragment@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer" @AT@ 3150 @LENGTH@ 41
------INS StringLiteral@@"x-single-active-consumer" @TO@ VariableDeclarationFragment@@RABBITMQ_QUEUE_SINGLE_ACTIVE_CONSUMER_KEY="x-single-active-consumer" @AT@ 3194 @LENGTH@ 26


UPD MethodDeclaration@@public, void, MethodName:should_handle_whole_range_of_bytes, IOException,  @TO@ public, void, MethodName:shouldHandleWholeRangeOfBytes, IOException,  @AT@ 1382 @LENGTH@ 474
---UPD SimpleName@@MethodName:should_handle_whole_range_of_bytes @TO@ MethodName:shouldHandleWholeRangeOfBytes @AT@ 1394 @LENGTH@ 34


UPD TryStatement@@try {  session.close();} catch (JMSException ex2) {  if (LOG.isDebugEnabled()) {    LOG.debug("Exception caught closing session",ex2);  }  LOG.warn("Exception caught closing session: {}. This exception is ignored.",ex2.getMessage());} @TO@ try {  if (session != null) {    session.close();  }} catch (JMSException ex2) {  if (LOG.isDebugEnabled()) {    LOG.debug("Exception caught closing session",ex2);  }  LOG.warn("Exception caught closing session: {}. This exception is ignored.",ex2.getMessage());} @AT@ 16523 @LENGTH@ 399
---INS IfStatement@@if (session != null) {  session.close();} @TO@ TryStatement@@try {  session.close();} catch (JMSException ex2) {  if (LOG.isDebugEnabled()) {    LOG.debug("Exception caught closing session",ex2);  }  LOG.warn("Exception caught closing session: {}. This exception is ignored.",ex2.getMessage());} @AT@ 16611 @LENGTH@ 77
------INS InfixExpression@@session != null @TO@ IfStatement@@if (session != null) {  session.close();} @AT@ 16615 @LENGTH@ 15
---------INS SimpleName@@session @TO@ InfixExpression@@session != null @AT@ 16615 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@session != null @AT@ 16622 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@session != null @AT@ 16626 @LENGTH@ 4
------INS Block@@ThenBody:{  session.close();} @TO@ IfStatement@@if (session != null) {  session.close();} @AT@ 16632 @LENGTH@ 56
---------MOV ExpressionStatement@@MethodInvocation:session.close() @TO@ Block@@ThenBody:{  session.close();} @AT@ 16545 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertEquals(null,out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2208 @LENGTH@ 43
---UPD MethodInvocation@@assertEquals(null,out.getOut().getBody()) @TO@ assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2208 @LENGTH@ 42
------UPD SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody()] @AT@ 2208 @LENGTH@ 42
---------DEL NullLiteral@@null @AT@ 2221 @LENGTH@ 4
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 2227 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2227 @LENGTH@ 12
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertEquals:[null, out.getOut().getBody()] @AT@ 2286 @LENGTH@ 13


UPD IfStatement@@if (this.isPrincipalAuthenticated(principal)) {  return this.authorizedClientService.loadAuthorizedClient(clientRegistrationId,principal.getName());} else {  return this.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId,principal,request);} @TO@ if (this.isPrincipalAuthenticated(principal)) {  return this.authorizedClientService.loadAuthorizedClient(clientRegistrationId,principal.getName());} @AT@ 3563 @LENGTH@ 288
---DEL Block@@ElseBody:{  return this.anonymousAuthorizedClientRepository.loadAuthorizedClient(clientRegistrationId,principal,request);} @AT@ 3726 @LENGTH@ 125


UPD FieldDeclaration@@public, static, final, DefaultExchangeFormatter, [DEFAULT_EXCHANGE_FORMATTER=new DefaultExchangeFormatter()] @TO@ protected, static, final, DefaultExchangeFormatter, [DEFAULT_EXCHANGE_FORMATTER=new DefaultExchangeFormatter()] @AT@ 1752 @LENGTH@ 105
---UPD Modifier@@public @TO@ protected @AT@ 1752 @LENGTH@ 6


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoveryClientFalse, Exception,  @AT@ 2134 @LENGTH@ 560
---DEL Modifier@@public @AT@ 2134 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2141 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoveryClientFalse @AT@ 2146 @LENGTH@ 42
---DEL SimpleType@@Exception @AT@ 2198 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonSQSClientMock awsSQSClient=new AmazonSQSClientMock(); @AT@ 2219 @LENGTH@ 61
------DEL SimpleType@@AmazonSQSClientMock @AT@ 2219 @LENGTH@ 19
------DEL VariableDeclarationFragment@@awsSQSClient=new AmazonSQSClientMock() @AT@ 2239 @LENGTH@ 40
---------DEL SimpleName@@awsSQSClient @AT@ 2239 @LENGTH@ 12
---------DEL ClassInstanceCreation@@AmazonSQSClientMock[] @AT@ 2254 @LENGTH@ 25
------------DEL New@@new @AT@ 2254 @LENGTH@ 3
------------DEL SimpleType@@AmazonSQSClientMock @AT@ 2258 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("awsSQSClient",awsSQSClient) @AT@ 2289 @LENGTH@ 57
------DEL MethodInvocation@@context.getRegistry().bind("awsSQSClient",awsSQSClient) @AT@ 2289 @LENGTH@ 56
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2289 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2289 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["awsSQSClient", awsSQSClient] @AT@ 2311 @LENGTH@ 34
------------DEL StringLiteral@@"awsSQSClient" @AT@ 2316 @LENGTH@ 14
------------DEL SimpleName@@awsSQSClient @AT@ 2332 @LENGTH@ 12
---DEL VariableDeclarationStatement@@Sqs2Component component=context.getComponent("aws2-sqs",Sqs2Component.class); @AT@ 2355 @LENGTH@ 80
------DEL SimpleType@@Sqs2Component @AT@ 2355 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-sqs",Sqs2Component.class) @AT@ 2369 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2369 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-sqs",Sqs2Component.class) @AT@ 2381 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2381 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-sqs", Sqs2Component.class] @AT@ 2389 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-sqs" @AT@ 2402 @LENGTH@ 10
---------------DEL TypeLiteral@@Sqs2Component.class @AT@ 2414 @LENGTH@ 19
---DEL VariableDeclarationStatement@@Sqs2Endpoint endpoint=(Sqs2Endpoint)component.createEndpoint("aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2444 @LENGTH@ 156
------DEL SimpleType@@Sqs2Endpoint @AT@ 2444 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(Sqs2Endpoint)component.createEndpoint("aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2457 @LENGTH@ 142
---------DEL SimpleName@@endpoint @AT@ 2457 @LENGTH@ 8
---------DEL CastExpression@@(Sqs2Endpoint)component.createEndpoint("aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2468 @LENGTH@ 131
------------DEL SimpleType@@Sqs2Endpoint @AT@ 2469 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2483 @LENGTH@ 116
---------------DEL SimpleName@@Name:component @AT@ 2483 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2510 @LENGTH@ 89
------------------DEL StringLiteral@@"aws2-sqs://MyQueue?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2525 @LENGTH@ 73
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(awsSQSClient,endpoint.getConfiguration().getAmazonSQSClient()) @AT@ 2610 @LENGTH@ 78
------DEL MethodInvocation@@assertNotSame(awsSQSClient,endpoint.getConfiguration().getAmazonSQSClient()) @AT@ 2610 @LENGTH@ 77
---------DEL SimpleName@@MethodName:assertNotSame:[awsSQSClient, endpoint.getConfiguration().getAmazonSQSClient()] @AT@ 2610 @LENGTH@ 77
------------DEL SimpleName@@awsSQSClient @AT@ 2624 @LENGTH@ 12
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonSQSClient() @AT@ 2638 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2638 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2638 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonSQSClient:[] @AT@ 2666 @LENGTH@ 20


DEL SuperConstructorInvocation@@super();
 @AT@ 2380 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 1883 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1883 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1890 @LENGTH@ 21


UPD IfStatement@@if (persistentProperty.getTypeInformation().isCollectionLike()) {  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} else {  if (relationshipDescription.isDynamic()) {    return Optional.ofNullable(dynamicValue.isEmpty() ? null : dynamicValue);  } else   if (relationshipDescription.hasRelationshipProperties()) {    return Optional.ofNullable(relationshipsAndProperties.isEmpty() ? null : relationshipsAndProperties.get(0));  } else {    return Optional.ofNullable(value.isEmpty() ? null : value.get(0));  }} @TO@ if (persistentProperty.getTypeInformation().isCollectionLike()) {  List<Object> returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value;  Collection<Object> target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size());  target.addAll(returnedValues);  return Optional.of(target);} else {  if (relationshipDescription.isDynamic()) {    return Optional.ofNullable(dynamicValue.isEmpty() ? null : dynamicValue);  } else   if (relationshipDescription.hasRelationshipProperties()) {    return Optional.ofNullable(relationshipsAndProperties.isEmpty() ? null : relationshipsAndProperties.get(0));  } else {    return Optional.ofNullable(value.isEmpty() ? null : value.get(0));  }} @AT@ 22361 @LENGTH@ 744
---UPD Block@@ThenBody:{  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} @TO@ ThenBody:{  List<Object> returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value;  Collection<Object> target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size());  target.addAll(returnedValues);  return Optional.of(target);} @AT@ 22425 @LENGTH@ 275
------DEL IfStatement@@if (relationshipDescription.hasRelationshipProperties()) {  return Optional.of(relationshipsAndProperties);} else if (persistentProperty.getType().equals(Set.class)) {  return Optional.of(new HashSet(value));} else {  return Optional.of(value);} @AT@ 22430 @LENGTH@ 266
---------DEL MethodInvocation@@relationshipDescription.hasRelationshipProperties() @AT@ 22434 @LENGTH@ 51
---------DEL Block@@ThenBody:{  return Optional.of(relationshipsAndProperties);} @AT@ 22487 @LENGTH@ 58
------------DEL ReturnStatement@@MethodInvocation:Optional.of(relationshipsAndProperties) @AT@ 22493 @LENGTH@ 47
---------------DEL MethodInvocation@@Optional.of(relationshipsAndProperties) @AT@ 22500 @LENGTH@ 39
---------DEL Block@@ElseBody:if (persistentProperty.getType().equals(Set.class)) {  return Optional.of(new HashSet(value));} else {  return Optional.of(value);} @AT@ 22551 @LENGTH@ 145
------------DEL IfStatement@@if (persistentProperty.getType().equals(Set.class)) {  return Optional.of(new HashSet(value));} else {  return Optional.of(value);} @AT@ 22551 @LENGTH@ 145
---------------DEL MethodInvocation@@persistentProperty.getType().equals(Set.class) @AT@ 22555 @LENGTH@ 46
------------------DEL MethodInvocation@@MethodName:getType:[] @AT@ 22555 @LENGTH@ 28
---------------DEL Block@@ThenBody:{  return Optional.of(new HashSet(value));} @AT@ 22603 @LENGTH@ 50
------------------DEL ReturnStatement@@MethodInvocation:Optional.of(new HashSet(value)) @AT@ 22609 @LENGTH@ 39
---------------------DEL MethodInvocation@@Optional.of(new HashSet(value)) @AT@ 22616 @LENGTH@ 31
---------------DEL Block@@ElseBody:{  return Optional.of(value);} @AT@ 22659 @LENGTH@ 37
------INS VariableDeclarationStatement@@List<Object> returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value; @TO@ Block@@ThenBody:{  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} @AT@ 22430 @LENGTH@ 120
---------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List<Object> returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value; @AT@ 22430 @LENGTH@ 12
------------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 22430 @LENGTH@ 4
------------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 22435 @LENGTH@ 6
---------INS VariableDeclarationFragment@@returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @TO@ VariableDeclarationStatement@@List<Object> returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value; @AT@ 22443 @LENGTH@ 106
------------INS SimpleName@@returnedValues @TO@ VariableDeclarationFragment@@returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @AT@ 22443 @LENGTH@ 14
------------INS ConditionalExpression@@relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @TO@ VariableDeclarationFragment@@returnedValues=relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @AT@ 22460 @LENGTH@ 89
---------------INS MethodInvocation@@relationshipDescription.hasRelationshipProperties() @TO@ ConditionalExpression@@relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @AT@ 22460 @LENGTH@ 51
------------------MOV SimpleName@@Name:relationshipDescription @TO@ MethodInvocation@@relationshipDescription.hasRelationshipProperties() @AT@ 22434 @LENGTH@ 23
------------------MOV SimpleName@@MethodName:hasRelationshipProperties:[] @TO@ MethodInvocation@@relationshipDescription.hasRelationshipProperties() @AT@ 22458 @LENGTH@ 27
---------------INS SimpleName@@relationshipsAndProperties @TO@ ConditionalExpression@@relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @AT@ 22515 @LENGTH@ 26
---------------INS SimpleName@@value @TO@ ConditionalExpression@@relationshipDescription.hasRelationshipProperties() ? relationshipsAndProperties : value @AT@ 22544 @LENGTH@ 5
------INS VariableDeclarationStatement@@Collection<Object> target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()); @TO@ Block@@ThenBody:{  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} @AT@ 22554 @LENGTH@ 158
---------INS ParameterizedType@@Collection<Object> @TO@ VariableDeclarationStatement@@Collection<Object> target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()); @AT@ 22554 @LENGTH@ 18
------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Object> @AT@ 22554 @LENGTH@ 10
------------INS SimpleType@@Object @TO@ ParameterizedType@@Collection<Object> @AT@ 22565 @LENGTH@ 6
---------INS VariableDeclarationFragment@@target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @TO@ VariableDeclarationStatement@@Collection<Object> target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()); @AT@ 22573 @LENGTH@ 138
------------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @AT@ 22573 @LENGTH@ 6
------------INS MethodInvocation@@CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @TO@ VariableDeclarationFragment@@target=CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @AT@ 22582 @LENGTH@ 129
---------------INS SimpleName@@Name:CollectionFactory @TO@ MethodInvocation@@CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @AT@ 22582 @LENGTH@ 17
---------------INS SimpleName@@MethodName:createCollection:[persistentProperty.getRawType(), persistentProperty.getComponentType(), returnedValues.size()] @TO@ MethodInvocation@@CollectionFactory.createCollection(persistentProperty.getRawType(),persistentProperty.getComponentType(),returnedValues.size()) @AT@ 22600 @LENGTH@ 111
------------------INS MethodInvocation@@persistentProperty.getRawType() @TO@ SimpleName@@MethodName:createCollection:[persistentProperty.getRawType(), persistentProperty.getComponentType(), returnedValues.size()] @AT@ 22617 @LENGTH@ 31
---------------------MOV SimpleName@@Name:Optional @TO@ MethodInvocation@@persistentProperty.getRawType() @AT@ 22500 @LENGTH@ 8
---------------------MOV SimpleName@@MethodName:of:[relationshipsAndProperties] @TO@ MethodInvocation@@persistentProperty.getRawType() @AT@ 22509 @LENGTH@ 30
------------------------DEL SimpleName@@relationshipsAndProperties @AT@ 22512 @LENGTH@ 26
------------------INS MethodInvocation@@persistentProperty.getComponentType() @TO@ SimpleName@@MethodName:createCollection:[persistentProperty.getRawType(), persistentProperty.getComponentType(), returnedValues.size()] @AT@ 22650 @LENGTH@ 37
---------------------MOV SimpleName@@Name:persistentProperty @TO@ MethodInvocation@@persistentProperty.getComponentType() @AT@ 22555 @LENGTH@ 18
---------------------MOV SimpleName@@MethodName:equals:[Set.class] @TO@ MethodInvocation@@persistentProperty.getComponentType() @AT@ 22584 @LENGTH@ 17
------------------------DEL TypeLiteral@@Set.class @AT@ 22591 @LENGTH@ 9
------------------INS MethodInvocation@@returnedValues.size() @TO@ SimpleName@@MethodName:createCollection:[persistentProperty.getRawType(), persistentProperty.getComponentType(), returnedValues.size()] @AT@ 22689 @LENGTH@ 21
---------------------INS SimpleName@@Name:returnedValues @TO@ MethodInvocation@@returnedValues.size() @AT@ 22689 @LENGTH@ 14
---------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@returnedValues.size() @AT@ 22704 @LENGTH@ 6
------MOV ReturnStatement@@MethodInvocation:Optional.of(value) @TO@ Block@@ThenBody:{  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} @AT@ 22665 @LENGTH@ 26
---------UPD MethodInvocation@@Optional.of(value) @TO@ Optional.of(target) @AT@ 22672 @LENGTH@ 18
------------UPD SimpleName@@MethodName:of:[value] @TO@ MethodName:of:[target] @AT@ 22681 @LENGTH@ 9
---------------UPD SimpleName@@value @TO@ target @AT@ 22684 @LENGTH@ 5
------INS ExpressionStatement@@MethodInvocation:target.addAll(returnedValues) @TO@ Block@@ThenBody:{  if (relationshipDescription.hasRelationshipProperties()) {    return Optional.of(relationshipsAndProperties);  } else   if (persistentProperty.getType().equals(Set.class)) {    return Optional.of(new HashSet(value));  } else {    return Optional.of(value);  }} @AT@ 22716 @LENGTH@ 30
---------INS MethodInvocation@@target.addAll(returnedValues) @TO@ ExpressionStatement@@MethodInvocation:target.addAll(returnedValues) @AT@ 22716 @LENGTH@ 29
------------MOV SimpleName@@Name:Optional @TO@ MethodInvocation@@target.addAll(returnedValues) @AT@ 22616 @LENGTH@ 8
------------MOV SimpleName@@MethodName:of:[new HashSet(value)] @TO@ MethodInvocation@@target.addAll(returnedValues) @AT@ 22625 @LENGTH@ 22
---------------DEL ClassInstanceCreation@@HashSet[value] @AT@ 22628 @LENGTH@ 18
------------------DEL New@@new @AT@ 22628 @LENGTH@ 3
------------------DEL SimpleType@@HashSet @AT@ 22632 @LENGTH@ 7
------------------DEL SimpleName@@value @AT@ 22640 @LENGTH@ 5
---------------INS SimpleName@@returnedValues @TO@ SimpleName@@MethodName:of:[new HashSet(value)] @AT@ 22730 @LENGTH@ 14


UPD VariableDeclarationStatement@@Object[] result=exchange.getOut().getBody(Object[].class); @TO@ Object[] result=exchange.getMessage().getBody(Object[].class); @AT@ 3499 @LENGTH@ 60
---UPD VariableDeclarationFragment@@result=exchange.getOut().getBody(Object[].class) @TO@ result=exchange.getMessage().getBody(Object[].class) @AT@ 3508 @LENGTH@ 50
------UPD MethodInvocation@@exchange.getOut().getBody(Object[].class) @TO@ exchange.getMessage().getBody(Object[].class) @AT@ 3517 @LENGTH@ 41
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3517 @LENGTH@ 17


DEL IfStatement@@if ((invocation == null) || (config == null)) {  throw new IllegalArgumentException("Nulls cannot be provided");} @AT@ 2154 @LENGTH@ 118
---DEL InfixExpression@@(invocation == null) || (config == null) @AT@ 2158 @LENGTH@ 40
------DEL ParenthesizedExpression@@(invocation == null) @AT@ 2158 @LENGTH@ 20
---------DEL InfixExpression@@invocation == null @AT@ 2159 @LENGTH@ 18
------DEL ParenthesizedExpression@@(config == null) @AT@ 2182 @LENGTH@ 16
---------DEL InfixExpression@@config == null @AT@ 2183 @LENGTH@ 14
---DEL Block@@ThenBody:{  throw new IllegalArgumentException("Nulls cannot be provided");} @AT@ 2200 @LENGTH@ 72
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Nulls cannot be provided") @AT@ 2205 @LENGTH@ 63
---------DEL ClassInstanceCreation@@IllegalArgumentException["Nulls cannot be provided"] @AT@ 2211 @LENGTH@ 56
------------DEL New@@new @AT@ 2211 @LENGTH@ 3
------------DEL SimpleType@@IllegalArgumentException @AT@ 2215 @LENGTH@ 24
------------DEL StringLiteral@@"Nulls cannot be provided" @AT@ 2240 @LENGTH@ 26


UPD Block@@ThenBody:{  if (contextAnno.errorOnInvalidType()) {    throw new ClassCastException(securityContext + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @TO@ ThenBody:{  if (contextAnno.errorOnInvalidType()) {    throw new ClassCastException(securityContext + " is not assignable to " + parameter.getParameterType());  }  return null;} @AT@ 5606 @LENGTH@ 195
---UPD IfStatement@@if (contextAnno.errorOnInvalidType()) {  throw new ClassCastException(securityContext + " is not assignable to " + parameter.getParameterType());} else {  return null;} @TO@ if (contextAnno.errorOnInvalidType()) {  throw new ClassCastException(securityContext + " is not assignable to " + parameter.getParameterType());} @AT@ 5612 @LENGTH@ 185
------DEL Block@@ElseBody:{  return null;} @AT@ 5774 @LENGTH@ 23
---------DEL ReturnStatement@@NullLiteral:null @AT@ 5780 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 5787 @LENGTH@ 4
---INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  if (contextAnno.errorOnInvalidType()) {    throw new ClassCastException(securityContext + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @AT@ 5765 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5772 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 2335 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 2335 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 2335 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2346 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2353 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(200),responseCode) @TO@ MethodInvocation:assertEquals(Integer.valueOf(200),responseCode) @AT@ 12633 @LENGTH@ 45
---UPD MethodInvocation@@assertEquals(new Integer(200),responseCode) @TO@ assertEquals(Integer.valueOf(200),responseCode) @AT@ 12633 @LENGTH@ 44
------UPD SimpleName@@MethodName:assertEquals:[new Integer(200), responseCode] @TO@ MethodName:assertEquals:[Integer.valueOf(200), responseCode] @AT@ 12633 @LENGTH@ 44
---------INS MethodInvocation@@Integer.valueOf(200) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(200), responseCode] @AT@ 12646 @LENGTH@ 20
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(200) @AT@ 12646 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[200] @TO@ MethodInvocation@@Integer.valueOf(200) @AT@ 12654 @LENGTH@ 12
---------------INS NumberLiteral@@200 @TO@ SimpleName@@MethodName:valueOf:[200] @AT@ 12662 @LENGTH@ 3
---------DEL ClassInstanceCreation@@Integer[200] @AT@ 12646 @LENGTH@ 16
------------DEL New@@new @AT@ 12646 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 12650 @LENGTH@ 7
------------DEL NumberLiteral@@200 @AT@ 12658 @LENGTH@ 3


UPD VariableDeclarationStatement@@SimpleQueryHints countHints=new SimpleQueryHints(); @TO@ MutableQueryHints countHints=new MutableQueryHints(); @AT@ 2192 @LENGTH@ 53
---UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2192 @LENGTH@ 16
---UPD VariableDeclarationFragment@@countHints=new SimpleQueryHints() @TO@ countHints=new MutableQueryHints() @AT@ 2209 @LENGTH@ 35
------UPD ClassInstanceCreation@@SimpleQueryHints[] @TO@ MutableQueryHints[] @AT@ 2222 @LENGTH@ 22
---------UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2226 @LENGTH@ 16


UPD ReturnStatement@@CastExpression:(SecurityExpressionRoot)this.securityExtension.getRootObject() @TO@ MethodInvocation:this.securityExtension.getRootObject() @AT@ 2725 @LENGTH@ 71
---DEL CastExpression@@(SecurityExpressionRoot)this.securityExtension.getRootObject() @AT@ 2732 @LENGTH@ 63
------DEL SimpleType@@SecurityExpressionRoot @AT@ 2733 @LENGTH@ 22
---MOV MethodInvocation@@this.securityExtension.getRootObject() @TO@ ReturnStatement@@CastExpression:(SecurityExpressionRoot)this.securityExtension.getRootObject() @AT@ 2757 @LENGTH@ 38


UPD ExpressionStatement@@MethodInvocation:assertEquals(context.getName(),"dest_context","Get the wrong camel context") @TO@ MethodInvocation:assertEquals("dest_context",context.getName(),"Get the wrong camel context") @AT@ 4005 @LENGTH@ 79
---UPD MethodInvocation@@assertEquals(context.getName(),"dest_context","Get the wrong camel context") @TO@ assertEquals("dest_context",context.getName(),"Get the wrong camel context") @AT@ 4005 @LENGTH@ 78
------UPD SimpleName@@MethodName:assertEquals:[context.getName(), "dest_context", "Get the wrong camel context"] @TO@ MethodName:assertEquals:["dest_context", context.getName(), "Get the wrong camel context"] @AT@ 4005 @LENGTH@ 78
---------INS StringLiteral@@"dest_context" @TO@ SimpleName@@MethodName:assertEquals:[context.getName(), "dest_context", "Get the wrong camel context"] @AT@ 4018 @LENGTH@ 14
---------DEL StringLiteral@@"dest_context" @AT@ 4037 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:this.delegate.execute(task) @TO@ MethodInvocation:this.delegate.execute(wrap(task)) @AT@ 2263 @LENGTH@ 28
---UPD MethodInvocation@@this.delegate.execute(task) @TO@ this.delegate.execute(wrap(task)) @AT@ 2263 @LENGTH@ 27
------UPD SimpleName@@MethodName:execute:[task] @TO@ MethodName:execute:[wrap(task)] @AT@ 2277 @LENGTH@ 13
---------MOV MethodInvocation@@wrap(task) @TO@ SimpleName@@MethodName:execute:[task] @AT@ 2249 @LENGTH@ 10
---------DEL SimpleName@@task @AT@ 2285 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:uri="zendesk:getTopicsByUser?userId=123" @TO@ Assignment:uri="zendesk:GET_TOPICS_BY_USER?userId=123" @AT@ 47307 @LENGTH@ 43
---UPD Assignment@@uri="zendesk:getTopicsByUser?userId=123" @TO@ uri="zendesk:GET_TOPICS_BY_USER?userId=123" @AT@ 47307 @LENGTH@ 42
------UPD StringLiteral@@"zendesk:getTopicsByUser?userId=123" @TO@ "zendesk:GET_TOPICS_BY_USER?userId=123" @AT@ 47313 @LENGTH@ 36


UPD EnhancedForStatement@@for (Map.Entry<Class,Boolean> entry : threadClasses.entrySet()) {  if (entry.getKey() == Worker.class) {    if (entry.getValue()) {      LOG.info("Thread found for " + entry.getKey().getSimpleName());    }    Assert.assertTrue("No thread found for " + entry.getKey().getSimpleName(),entry.getValue());  } else {    if (!entry.getValue()) {      LOG.info("No thread found for " + entry.getKey().getSimpleName());    }    Assert.assertFalse("Thread found for class " + entry.getKey().getSimpleName(),entry.getValue());  }} @TO@ for (Map.Entry<Class<? extends Thread>,Boolean> entry : threadClasses.entrySet()) {  if (entry.getKey() == Worker.class) {    if (entry.getValue()) {      LOG.info("Thread found for " + entry.getKey().getSimpleName());    }    Assert.assertTrue("No thread found for " + entry.getKey().getSimpleName(),entry.getValue());  } else {    if (!entry.getValue()) {      LOG.info("No thread found for " + entry.getKey().getSimpleName());    }    Assert.assertFalse("Thread found for class " + entry.getKey().getSimpleName(),entry.getValue());  }} @AT@ 1947 @LENGTH@ 692
---UPD SingleVariableDeclaration@@Map.Entry<Class,Boolean> entry @TO@ Map.Entry<Class<? extends Thread>,Boolean> entry @AT@ 1952 @LENGTH@ 31
------UPD ParameterizedType@@Map.Entry<Class,Boolean> @TO@ Map.Entry<Class<? extends Thread>,Boolean> @AT@ 1952 @LENGTH@ 25
---------INS ParameterizedType@@Class<? extends Thread> @TO@ ParameterizedType@@Map.Entry<Class,Boolean> @AT@ 1962 @LENGTH@ 23
------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 1962 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 1968 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 1436 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 1436 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 1436 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1447 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1454 @LENGTH@ 21


UPD TryStatement@@try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  LOG.debug("Cleaning up older Metrics");  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS));  int deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @TO@ try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS);  LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs);  int deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: {} " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @AT@ 1997 @LENGTH@ 635
---DEL ExpressionStatement@@MethodInvocation:LOG.debug("Cleaning up older Metrics") @AT@ 2114 @LENGTH@ 39
------DEL MethodInvocation@@LOG.debug("Cleaning up older Metrics") @AT@ 2114 @LENGTH@ 38
---------DEL SimpleName@@Name:LOG @AT@ 2114 @LENGTH@ 3
---------DEL SimpleName@@MethodName:debug:["Cleaning up older Metrics"] @AT@ 2118 @LENGTH@ 34
------------DEL StringLiteral@@"Cleaning up older Metrics" @AT@ 2124 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs) @TO@ TryStatement@@try {  if (!MetastoreConf.getBoolVar(conf,ConfVars.SCHEDULED_QUERIES_ENABLED)) {    return;  }  LOG.debug("Cleaning up older Metrics");  RawStore ms=HiveMetaStore.HMSHandler.getMSForConf(conf);  int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS));  int deleteCnt=ms.deleteReplicationMetrics(maxRetainSecs);  if (deleteCnt > 0L) {    LOG.info("Number of deleted entries: " + deleteCnt);  }} catch (Exception e) {  LOG.error("Exception while trying to delete: " + e.getMessage(),e);} @AT@ 2160 @LENGTH@ 62
------INS MethodInvocation@@LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs) @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs) @AT@ 2160 @LENGTH@ 61
---------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs) @AT@ 2160 @LENGTH@ 3
---------INS SimpleName@@MethodName:info:["Cleaning up Metrics older than {} ", maxRetainSecs] @TO@ MethodInvocation@@LOG.info("Cleaning up Metrics older than {} ",maxRetainSecs) @AT@ 2164 @LENGTH@ 57
------------INS StringLiteral@@"Cleaning up Metrics older than {} " @TO@ SimpleName@@MethodName:info:["Cleaning up Metrics older than {} ", maxRetainSecs] @AT@ 2169 @LENGTH@ 36
------------INS SimpleName@@maxRetainSecs @TO@ SimpleName@@MethodName:info:["Cleaning up Metrics older than {} ", maxRetainSecs] @AT@ 2207 @LENGTH@ 13
---UPD VariableDeclarationStatement@@int maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)); @TO@ int maxRetainSecs=(int)MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS); @AT@ 2225 @LENGTH@ 136
------UPD VariableDeclarationFragment@@maxRetainSecs=(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)) @TO@ maxRetainSecs=(int)MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS) @AT@ 2229 @LENGTH@ 131
---------UPD CastExpression@@(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)) @TO@ (int)MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS) @AT@ 2245 @LENGTH@ 115
------------INS MethodInvocation@@MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS) @TO@ CastExpression@@(int)TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)) @AT@ 2073 @LENGTH@ 79
---------------MOV SimpleName@@Name:MetastoreConf @TO@ MethodInvocation@@MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS) @AT@ 2275 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:getTimeVar:[conf, ConfVars.REPL_METRICS_MAX_AGE, TimeUnit.DAYS] @TO@ MethodInvocation@@MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.SECONDS) @AT@ 2289 @LENGTH@ 70
------------DEL MethodInvocation@@TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)) @AT@ 2251 @LENGTH@ 109
---------------DEL QualifiedName@@Name:TimeUnit.DAYS @AT@ 2251 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:toSeconds:[MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS)] @AT@ 2265 @LENGTH@ 95
------------------DEL MethodInvocation@@MetastoreConf.getTimeVar(conf,ConfVars.REPL_METRICS_MAX_AGE,TimeUnit.DAYS) @AT@ 2275 @LENGTH@ 84
---UPD IfStatement@@if (deleteCnt > 0L) {  LOG.info("Number of deleted entries: " + deleteCnt);} @TO@ if (deleteCnt > 0L) {  LOG.info("Number of deleted entries: {} " + deleteCnt);} @AT@ 2434 @LENGTH@ 89
------UPD Block@@ThenBody:{  LOG.info("Number of deleted entries: " + deleteCnt);} @TO@ ThenBody:{  LOG.info("Number of deleted entries: {} " + deleteCnt);} @AT@ 2453 @LENGTH@ 70
---------UPD ExpressionStatement@@MethodInvocation:LOG.info("Number of deleted entries: " + deleteCnt) @TO@ MethodInvocation:LOG.info("Number of deleted entries: {} " + deleteCnt) @AT@ 2463 @LENGTH@ 52
------------UPD MethodInvocation@@LOG.info("Number of deleted entries: " + deleteCnt) @TO@ LOG.info("Number of deleted entries: {} " + deleteCnt) @AT@ 2463 @LENGTH@ 51
---------------UPD SimpleName@@MethodName:info:["Number of deleted entries: " + deleteCnt] @TO@ MethodName:info:["Number of deleted entries: {} " + deleteCnt] @AT@ 2467 @LENGTH@ 47
------------------UPD InfixExpression@@"Number of deleted entries: " + deleteCnt @TO@ "Number of deleted entries: {} " + deleteCnt @AT@ 2472 @LENGTH@ 41
---------------------UPD StringLiteral@@"Number of deleted entries: " @TO@ "Number of deleted entries: {} " @AT@ 2472 @LENGTH@ 29


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requries either 2, 4, 5, or 7 trailing 5-bit characters to create bytes.") @TO@ ClassInstanceCreation:new IllegalArgumentException("Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requires either 2, 4, 5, or 7 trailing 5-bit characters to create bytes.") @AT@ 30892 @LENGTH@ 286
---UPD ClassInstanceCreation@@IllegalArgumentException["Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requries either 2, 4, 5, or 7 trailing 5-bit characters to create bytes."] @TO@ IllegalArgumentException["Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requires either 2, 4, 5, or 7 trailing 5-bit characters to create bytes."] @AT@ 30898 @LENGTH@ 279
------UPD InfixExpression@@"Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requries either 2, 4, 5, or 7 trailing 5-bit characters to create bytes." @TO@ "Strict decoding: Last encoded character(s) (before the paddings if any) are valid base 32 alphabet but not a possible encoding. " + "Decoding requires either 2, 4, 5, or 7 trailing 5-bit characters to create bytes." @AT@ 30944 @LENGTH@ 232
---------UPD StringLiteral@@"Decoding requries either 2, 4, 5, or 7 trailing 5-bit characters to create bytes." @TO@ "Decoding requires either 2, 4, 5, or 7 trailing 5-bit characters to create bytes." @AT@ 31093 @LENGTH@ 83


UPD EnhancedForStatement@@for (FileStatus src : srcs) {  if (src.isDirectory()) {    try {      files=srcFs.listStatus(src.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  } else {    files=new FileStatus[]{src};  }  if (isCompactionTable) {    try {      List<FileStatus> fileStatuses=new ArrayList<>();      for (      FileStatus file : files) {        if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {          FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);          fileStatuses.addAll(Arrays.asList(taskDir));        } else {          fileStatuses.add(file);        }      }      files=fileStatuses.toArray(new FileStatus[files.length]);      if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {        AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);      }    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  }  final SessionState parentSession=SessionState.get();  Arrays.sort(files);  for (  final FileStatus srcFile : files) {    final Path srcP=srcFile.getPath();    final boolean needToCopy=needToCopy(conf,srcP,destf,srcFs,destFs,configuredOwner,isManaged);    final boolean isRenameAllowed=!needToCopy && !isSrcLocal;    final String msg="Unable to move source " + srcP + " to destination "+ destf;    if (null == pool) {      try {        Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,acidRename ? taskId++ : -1);        if (null != newFiles) {          newFiles.add(destPath);        }      } catch (      Exception e) {        throw getHiveException(e,msg,"Failed to move: {}");      }    } else {      final int finalTaskId=acidRename ? taskId++ : -1;      futures.add(pool.submit(new Callable<Pair<Path,Path>>(){        @Override public Pair<Path,Path> call() throws HiveException {          SessionState.setCurrentSessionState(parentSession);          try {            Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,finalTaskId);            if (null != newFiles) {              newFiles.add(destPath);            }            return Pair.of(srcP,destPath);          } catch (          Exception e) {            throw getHiveException(e,msg);          }        }      }));    }  }} @TO@ for (FileStatus src : srcs) {  if (src.isDirectory()) {    try {      files=srcFs.listStatus(src.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  } else {    files=new FileStatus[]{src};  }  if (isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {    try {      AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  }  final SessionState parentSession=SessionState.get();  Arrays.sort(files);  for (  final FileStatus srcFile : files) {    final Path srcP=srcFile.getPath();    final boolean needToCopy=needToCopy(conf,srcP,destf,srcFs,destFs,configuredOwner,isManaged);    final boolean isRenameAllowed=!needToCopy && !isSrcLocal;    final String msg="Unable to move source " + srcP + " to destination "+ destf;    if (null == pool) {      try {        Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,acidRename ? taskId++ : -1);        if (null != newFiles) {          newFiles.add(destPath);        }      } catch (      Exception e) {        throw getHiveException(e,msg,"Failed to move: {}");      }    } else {      final int finalTaskId=acidRename ? taskId++ : -1;      futures.add(pool.submit(new Callable<Pair<Path,Path>>(){        @Override public Pair<Path,Path> call() throws HiveException {          SessionState.setCurrentSessionState(parentSession);          try {            Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,finalTaskId);            if (null != newFiles) {              newFiles.add(destPath);            }            return Pair.of(srcP,destPath);          } catch (          Exception e) {            throw getHiveException(e,msg);          }        }      }));    }  }} @AT@ 177595 @LENGTH@ 3598
---DEL IfStatement@@if (isCompactionTable) {  try {    List<FileStatus> fileStatuses=new ArrayList<>();    for (    FileStatus file : files) {      if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {        FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);        fileStatuses.addAll(Arrays.asList(taskDir));      } else {        fileStatuses.add(file);      }    }    files=fileStatuses.toArray(new FileStatus[files.length]);    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {      AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);    }  } catch (  IOException e) {    if (null != pool) {      pool.shutdownNow();    }    throw new HiveException(e);  }} @AT@ 177983 @LENGTH@ 1180
------DEL SimpleName@@isCompactionTable @AT@ 177987 @LENGTH@ 17
------DEL Block@@ThenBody:{  try {    List<FileStatus> fileStatuses=new ArrayList<>();    for (    FileStatus file : files) {      if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {        FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);        fileStatuses.addAll(Arrays.asList(taskDir));      } else {        fileStatuses.add(file);      }    }    files=fileStatuses.toArray(new FileStatus[files.length]);    if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {      AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);    }  } catch (  IOException e) {    if (null != pool) {      pool.shutdownNow();    }    throw new HiveException(e);  }} @AT@ 178006 @LENGTH@ 1157
---------DEL TryStatement@@try {  List<FileStatus> fileStatuses=new ArrayList<>();  for (  FileStatus file : files) {    if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {      FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);      fileStatuses.addAll(Arrays.asList(taskDir));    } else {      fileStatuses.add(file);    }  }  files=fileStatuses.toArray(new FileStatus[files.length]);  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {    AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);  }} catch (IOException e) {  if (null != pool) {    pool.shutdownNow();  }  throw new HiveException(e);} @AT@ 178301 @LENGTH@ 854
------------DEL VariableDeclarationStatement@@List<FileStatus> fileStatuses=new ArrayList<>(); @AT@ 178317 @LENGTH@ 50
---------------DEL ParameterizedType@@List<FileStatus> @AT@ 178317 @LENGTH@ 16
------------------DEL SimpleType@@List @AT@ 178317 @LENGTH@ 4
------------------DEL SimpleType@@FileStatus @AT@ 178322 @LENGTH@ 10
---------------DEL VariableDeclarationFragment@@fileStatuses=new ArrayList<>() @AT@ 178334 @LENGTH@ 32
------------------DEL SimpleName@@fileStatuses @AT@ 178334 @LENGTH@ 12
------------------DEL ClassInstanceCreation@@ArrayList<>[] @AT@ 178349 @LENGTH@ 17
---------------------DEL New@@new @AT@ 178349 @LENGTH@ 3
---------------------DEL ParameterizedType@@ArrayList<> @AT@ 178353 @LENGTH@ 11
------------------------DEL SimpleType@@ArrayList @AT@ 178353 @LENGTH@ 9
------------DEL EnhancedForStatement@@for (FileStatus file : files) {  if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {    FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);    fileStatuses.addAll(Arrays.asList(taskDir));  } else {    fileStatuses.add(file);  }} @AT@ 178378 @LENGTH@ 377
---------------DEL SingleVariableDeclaration@@FileStatus file @AT@ 178383 @LENGTH@ 15
------------------DEL SimpleType@@FileStatus @AT@ 178383 @LENGTH@ 10
------------------DEL SimpleName@@file @AT@ 178394 @LENGTH@ 4
---------------DEL SimpleName@@files @AT@ 178401 @LENGTH@ 5
---------------DEL IfStatement@@if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {  FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);  fileStatuses.addAll(Arrays.asList(taskDir));} else {  fileStatuses.add(file);} @AT@ 178422 @LENGTH@ 321
------------------DEL InfixExpression@@file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath()) @AT@ 178426 @LENGTH@ 75
---------------------DEL MethodInvocation@@file.isDirectory() @AT@ 178426 @LENGTH@ 18
------------------------DEL SimpleName@@Name:file @AT@ 178426 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:isDirectory:[] @AT@ 178431 @LENGTH@ 13
---------------------DEL Operator@@&& @AT@ 178444 @LENGTH@ 2
---------------------DEL MethodInvocation@@AcidUtils.originalBucketFilter.accept(file.getPath()) @AT@ 178448 @LENGTH@ 53
------------------------DEL QualifiedName@@Name:AcidUtils.originalBucketFilter @AT@ 178448 @LENGTH@ 30
------------------------DEL SimpleName@@MethodName:accept:[file.getPath()] @AT@ 178479 @LENGTH@ 22
---------------------------DEL MethodInvocation@@file.getPath() @AT@ 178486 @LENGTH@ 14
------------------------------DEL SimpleName@@Name:file @AT@ 178486 @LENGTH@ 4
------------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 178491 @LENGTH@ 9
------------------DEL Block@@ThenBody:{  FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);  fileStatuses.addAll(Arrays.asList(taskDir));} @AT@ 178503 @LENGTH@ 181
---------------------DEL VariableDeclarationStatement@@FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER); @AT@ 178519 @LENGTH@ 92
------------------------DEL ArrayType@@FileStatus[] @AT@ 178519 @LENGTH@ 12
---------------------------DEL SimpleType@@FileStatus @AT@ 178519 @LENGTH@ 10
------------------------DEL VariableDeclarationFragment@@taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER) @AT@ 178532 @LENGTH@ 78
---------------------------DEL SimpleName@@taskDir @AT@ 178532 @LENGTH@ 7
---------------------------DEL MethodInvocation@@srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER) @AT@ 178542 @LENGTH@ 68
------------------------------DEL SimpleName@@Name:srcFs @AT@ 178542 @LENGTH@ 5
------------------------------DEL SimpleName@@MethodName:listStatus:[file.getPath(), FileUtils.HIDDEN_FILES_PATH_FILTER] @AT@ 178548 @LENGTH@ 62
---------------------------------DEL MethodInvocation@@file.getPath() @AT@ 178559 @LENGTH@ 14
------------------------------------DEL SimpleName@@Name:file @AT@ 178559 @LENGTH@ 4
------------------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 178564 @LENGTH@ 9
---------------------------------DEL QualifiedName@@FileUtils.HIDDEN_FILES_PATH_FILTER @AT@ 178575 @LENGTH@ 34
------------------------------------DEL SimpleName@@FileUtils @AT@ 178575 @LENGTH@ 9
------------------------------------DEL SimpleName@@HIDDEN_FILES_PATH_FILTER @AT@ 178585 @LENGTH@ 24
---------------------DEL ExpressionStatement@@MethodInvocation:fileStatuses.addAll(Arrays.asList(taskDir)) @AT@ 178626 @LENGTH@ 44
------------------------DEL MethodInvocation@@fileStatuses.addAll(Arrays.asList(taskDir)) @AT@ 178626 @LENGTH@ 43
---------------------------DEL SimpleName@@Name:fileStatuses @AT@ 178626 @LENGTH@ 12
---------------------------DEL SimpleName@@MethodName:addAll:[Arrays.asList(taskDir)] @AT@ 178639 @LENGTH@ 30
------------------------------DEL MethodInvocation@@Arrays.asList(taskDir) @AT@ 178646 @LENGTH@ 22
---------------------------------DEL SimpleName@@Name:Arrays @AT@ 178646 @LENGTH@ 6
---------------------------------DEL SimpleName@@MethodName:asList:[taskDir] @AT@ 178653 @LENGTH@ 15
------------------------------------DEL SimpleName@@taskDir @AT@ 178660 @LENGTH@ 7
------------------DEL Block@@ElseBody:{  fileStatuses.add(file);} @AT@ 178690 @LENGTH@ 53
---------------------DEL ExpressionStatement@@MethodInvocation:fileStatuses.add(file) @AT@ 178706 @LENGTH@ 23
------------------------DEL MethodInvocation@@fileStatuses.add(file) @AT@ 178706 @LENGTH@ 22
---------------------------DEL SimpleName@@Name:fileStatuses @AT@ 178706 @LENGTH@ 12
---------------------------DEL SimpleName@@MethodName:add:[file] @AT@ 178719 @LENGTH@ 9
------------------------------DEL SimpleName@@file @AT@ 178723 @LENGTH@ 4
------------DEL ExpressionStatement@@Assignment:files=fileStatuses.toArray(new FileStatus[files.length]) @AT@ 178766 @LENGTH@ 59
---------------DEL Assignment@@files=fileStatuses.toArray(new FileStatus[files.length]) @AT@ 178766 @LENGTH@ 58
------------------DEL SimpleName@@files @AT@ 178766 @LENGTH@ 5
------------------DEL Operator@@= @AT@ 178771 @LENGTH@ 1
------------------DEL MethodInvocation@@fileStatuses.toArray(new FileStatus[files.length]) @AT@ 178774 @LENGTH@ 50
---------------------DEL SimpleName@@Name:fileStatuses @AT@ 178774 @LENGTH@ 12
---------------------DEL SimpleName@@MethodName:toArray:[new FileStatus[files.length]] @AT@ 178787 @LENGTH@ 37
------------------------DEL ArrayCreation@@new FileStatus[files.length] @AT@ 178795 @LENGTH@ 28
---------------------------DEL ArrayType@@FileStatus[] @AT@ 178799 @LENGTH@ 24
------------------------------DEL SimpleType@@FileStatus @AT@ 178799 @LENGTH@ 10
---------------------------DEL QualifiedName@@files.length @AT@ 178810 @LENGTH@ 12
------------------------------DEL SimpleName@@files @AT@ 178810 @LENGTH@ 5
------------------------------DEL SimpleName@@length @AT@ 178816 @LENGTH@ 6
---MOV IfStatement@@if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} @TO@ EnhancedForStatement@@for (FileStatus src : srcs) {  if (src.isDirectory()) {    try {      files=srcFs.listStatus(src.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  } else {    files=new FileStatus[]{src};  }  if (isCompactionTable) {    try {      List<FileStatus> fileStatuses=new ArrayList<>();      for (      FileStatus file : files) {        if (file.isDirectory() && AcidUtils.originalBucketFilter.accept(file.getPath())) {          FileStatus[] taskDir=srcFs.listStatus(file.getPath(),FileUtils.HIDDEN_FILES_PATH_FILTER);          fileStatuses.addAll(Arrays.asList(taskDir));        } else {          fileStatuses.add(file);        }      }      files=fileStatuses.toArray(new FileStatus[files.length]);      if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {        AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);      }    } catch (    IOException e) {      if (null != pool) {        pool.shutdownNow();      }      throw new HiveException(e);    }  }  final SessionState parentSession=SessionState.get();  Arrays.sort(files);  for (  final FileStatus srcFile : files) {    final Path srcP=srcFile.getPath();    final boolean needToCopy=needToCopy(conf,srcP,destf,srcFs,destFs,configuredOwner,isManaged);    final boolean isRenameAllowed=!needToCopy && !isSrcLocal;    final String msg="Unable to move source " + srcP + " to destination "+ destf;    if (null == pool) {      try {        Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,acidRename ? taskId++ : -1);        if (null != newFiles) {          newFiles.add(destPath);        }      } catch (      Exception e) {        throw getHiveException(e,msg,"Failed to move: {}");      }    } else {      final int finalTaskId=acidRename ? taskId++ : -1;      futures.add(pool.submit(new Callable<Pair<Path,Path>>(){        @Override public Pair<Path,Path> call() throws HiveException {          SessionState.setCurrentSessionState(parentSession);          try {            Path destPath=mvFile(conf,srcFs,srcP,destFs,destf,isSrcLocal,isOverwrite,isRenameAllowed,finalTaskId);            if (null != newFiles) {              newFiles.add(destPath);            }            return Pair.of(srcP,destPath);          } catch (          Exception e) {            throw getHiveException(e,msg);          }        }      }));    }  }} @AT@ 178837 @LENGTH@ 162
------INS InfixExpression@@isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE) @TO@ IfStatement@@if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE)) {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} @AT@ 177987 @LENGTH@ 94
---------INS SimpleName@@isCompactionTable @TO@ InfixExpression@@isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE) @AT@ 177987 @LENGTH@ 17
---------INS Operator@@&& @TO@ InfixExpression@@isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE) @AT@ 178004 @LENGTH@ 2
---------MOV MethodInvocation@@HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE) @TO@ InfixExpression@@isCompactionTable && HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WRITE_ACID_VERSION_FILE) @AT@ 178841 @LENGTH@ 73
------UPD Block@@ThenBody:{  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} @TO@ ThenBody:{  try {    AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);  } catch (  IOException e) {    if (null != pool) {      pool.shutdownNow();    }    throw new HiveException(e);  }} @AT@ 178916 @LENGTH@ 83
---------INS TryStatement@@try {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} catch (IOException e) {  if (null != pool) {    pool.shutdownNow();  }  throw new HiveException(e);} @TO@ Block@@ThenBody:{  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} @AT@ 178093 @LENGTH@ 229
------------MOV ExpressionStatement@@MethodInvocation:AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs) @TO@ TryStatement@@try {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} catch (IOException e) {  if (null != pool) {    pool.shutdownNow();  }  throw new HiveException(e);} @AT@ 178930 @LENGTH@ 57
------------MOV CatchClause@@catch (IOException e) {  if (null != pool) {    pool.shutdownNow();  }  throw new HiveException(e);} @TO@ TryStatement@@try {  AcidUtils.OrcAcidVersion.writeVersionFile(destf,destFs);} catch (IOException e) {  if (null != pool) {    pool.shutdownNow();  }  throw new HiveException(e);} @AT@ 179010 @LENGTH@ 145


UPD ExpressionStatement@@MethodInvocation:assertEquals(context.getRoutes().size(),2,"The camel context should has two routers") @TO@ MethodInvocation:assertEquals(2,context.getRoutes().size(),"The camel context should has two routers") @AT@ 4093 @LENGTH@ 88
---UPD MethodInvocation@@assertEquals(context.getRoutes().size(),2,"The camel context should has two routers") @TO@ assertEquals(2,context.getRoutes().size(),"The camel context should has two routers") @AT@ 4093 @LENGTH@ 87
------UPD SimpleName@@MethodName:assertEquals:[context.getRoutes().size(), 2, "The camel context should has two routers"] @TO@ MethodName:assertEquals:[2, context.getRoutes().size(), "The camel context should has two routers"] @AT@ 4093 @LENGTH@ 87
---------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[context.getRoutes().size(), 2, "The camel context should has two routers"] @AT@ 4107 @LENGTH@ 1
---------DEL NumberLiteral@@2 @AT@ 4134 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2509 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2509 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2525 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ MethodInvocation:assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 3929 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 3929 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @TO@ MethodName:assertEquals:["John", response.getName(), "Get a wrong customer name"] @AT@ 3929 @LENGTH@ 69
---------INS StringLiteral@@"John" @TO@ SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @AT@ 3942 @LENGTH@ 6
---------DEL StringLiteral@@"John" @AT@ 3962 @LENGTH@ 6


UPD SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(pattern).build());
 @TO@ super(name,null,PatternLayout.newBuilder().withPattern(pattern).build(),true,Property.EMPTY_ARRAY);
 @AT@ 1762 @LENGTH@ 75
---INS BooleanLiteral@@true @TO@ SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(pattern).build());
 @AT@ 1891 @LENGTH@ 4
---INS QualifiedName@@Property.EMPTY_ARRAY @TO@ SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(pattern).build());
 @AT@ 1911 @LENGTH@ 20
------INS SimpleName@@Property @TO@ QualifiedName@@Property.EMPTY_ARRAY @AT@ 1911 @LENGTH@ 8
------INS SimpleName@@EMPTY_ARRAY @TO@ QualifiedName@@Property.EMPTY_ARRAY @AT@ 1920 @LENGTH@ 11


UPD EnhancedForStatement@@for (SessionAuthenticationStrategy strategy : delegateStrategies) {  if (strategy == null) {    throw new IllegalArgumentException("delegateStrategies cannot contain null entires. Got " + delegateStrategies);  }} @TO@ for (SessionAuthenticationStrategy strategy : delegateStrategies) {  Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies);} @AT@ 2632 @LENGTH@ 227
---DEL IfStatement@@if (strategy == null) {  throw new IllegalArgumentException("delegateStrategies cannot contain null entires. Got " + delegateStrategies);} @AT@ 2703 @LENGTH@ 152
------DEL InfixExpression@@strategy == null @AT@ 2707 @LENGTH@ 16
---------DEL SimpleName@@strategy @AT@ 2707 @LENGTH@ 8
---------DEL Operator@@== @AT@ 2715 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2719 @LENGTH@ 4
------DEL Block@@ThenBody:{  throw new IllegalArgumentException("delegateStrategies cannot contain null entires. Got " + delegateStrategies);} @AT@ 2725 @LENGTH@ 130
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("delegateStrategies cannot contain null entires. Got " + delegateStrategies) @AT@ 2731 @LENGTH@ 119
------------DEL ClassInstanceCreation@@IllegalArgumentException["delegateStrategies cannot contain null entires. Got " + delegateStrategies] @AT@ 2737 @LENGTH@ 112
---------------DEL New@@new @AT@ 2737 @LENGTH@ 3
---------------DEL SimpleType@@IllegalArgumentException @AT@ 2741 @LENGTH@ 24
---------------DEL InfixExpression@@"delegateStrategies cannot contain null entires. Got " + delegateStrategies @AT@ 2773 @LENGTH@ 75
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies) @TO@ EnhancedForStatement@@for (SessionAuthenticationStrategy strategy : delegateStrategies) {  if (strategy == null) {    throw new IllegalArgumentException("delegateStrategies cannot contain null entires. Got " + delegateStrategies);  }} @AT@ 2751 @LENGTH@ 108
------INS MethodInvocation@@Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies) @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies) @AT@ 2751 @LENGTH@ 107
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies) @AT@ 2751 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[strategy, () -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies] @TO@ MethodInvocation@@Assert.notNull(strategy,() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies) @AT@ 2758 @LENGTH@ 100
------------INS SimpleName@@strategy @TO@ SimpleName@@MethodName:notNull:[strategy, () -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies] @AT@ 2766 @LENGTH@ 8
------------INS LambdaExpression@@() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies @TO@ SimpleName@@MethodName:notNull:[strategy, () -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies] @AT@ 2776 @LENGTH@ 81
---------------INS InfixExpression@@"delegateStrategies cannot contain null entires. Got " + delegateStrategies @TO@ LambdaExpression@@() -> "delegateStrategies cannot contain null entires. Got " + delegateStrategies @AT@ 2782 @LENGTH@ 75
------------------MOV StringLiteral@@"delegateStrategies cannot contain null entires. Got " @TO@ InfixExpression@@"delegateStrategies cannot contain null entires. Got " + delegateStrategies @AT@ 2773 @LENGTH@ 54
------------------MOV Operator@@+ @TO@ InfixExpression@@"delegateStrategies cannot contain null entires. Got " + delegateStrategies @AT@ 2827 @LENGTH@ 1
------------------MOV SimpleName@@delegateStrategies @TO@ InfixExpression@@"delegateStrategies cannot contain null entires. Got " + delegateStrategies @AT@ 2830 @LENGTH@ 18


MOV MethodDeclaration@@public, void, MethodName:deleteAll,  @TO@ TypeDeclaration@@[@Repository, @Transactional(readOnly=true), @API(status=API.Status.STABLE,since="6.0"), public]SimpleNeo4jRepository, [PagingAndSortingRepository<T,ID>] @AT@ 5374 @LENGTH@ 101


UPD EnhancedForStatement@@for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,singleAttributeList);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Voter: " + voter + ", returned: "+ result);  }switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    grant++;  break;case AccessDecisionVoter.ACCESS_DENIED:throw new AccessDeniedException(this.messages.getMessage("AbstractAccessDecisionManager.accessDenied","Access is denied"));default :break;}} @TO@ for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,singleAttributeList);  this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result));switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    grant++;  break;case AccessDecisionVoter.ACCESS_DENIED:throw new AccessDeniedException(this.messages.getMessage("AbstractAccessDecisionManager.accessDenied","Access is denied"));default :break;}} @AT@ 2642 @LENGTH@ 560
---DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Voter: " + voter + ", returned: "+ result);} @AT@ 2777 @LENGTH@ 110
------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 2781 @LENGTH@ 28
---------DEL FieldAccess@@this.logger @AT@ 2781 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 2781 @LENGTH@ 4
------------DEL SimpleName@@logger @AT@ 2786 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2793 @LENGTH@ 16
------DEL Block@@ThenBody:{  this.logger.debug("Voter: " + voter + ", returned: "+ result);} @AT@ 2811 @LENGTH@ 76
---------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("Voter: " + voter + ", returned: "+ result) @AT@ 2818 @LENGTH@ 63
---INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result)) @TO@ EnhancedForStatement@@for (AccessDecisionVoter voter : getDecisionVoters()) {  int result=voter.vote(authentication,object,singleAttributeList);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Voter: " + voter + ", returned: "+ result);  }switch (result) {case AccessDecisionVoter.ACCESS_GRANTED:    grant++;  break;case AccessDecisionVoter.ACCESS_DENIED:throw new AccessDeniedException(this.messages.getMessage("AbstractAccessDecisionManager.accessDenied","Access is denied"));default :break;}} @AT@ 2868 @LENGTH@ 79
------MOV MethodInvocation@@this.logger.debug("Voter: " + voter + ", returned: "+ result) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Voter: %s, returned: %s",voter,result)) @AT@ 2818 @LENGTH@ 62
---------UPD SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodName:format:["Voter: %s, returned: %s", voter, result] @AT@ 2830 @LENGTH@ 50
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Voter: %s, returned: %s",voter,result)] @TO@ MethodInvocation@@this.logger.debug("Voter: " + voter + ", returned: "+ result) @AT@ 2880 @LENGTH@ 66
------------INS MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Voter: %s, returned: %s",voter,result)] @AT@ 2886 @LENGTH@ 59
---------------MOV SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2830 @LENGTH@ 50
------------------DEL InfixExpression@@"Voter: " + voter + ", returned: "+ result @AT@ 2836 @LENGTH@ 43
---------------------DEL StringLiteral@@"Voter: " @AT@ 2836 @LENGTH@ 9
---------------------DEL Operator@@+ @AT@ 2845 @LENGTH@ 1
---------------------DEL SimpleName@@voter @AT@ 2848 @LENGTH@ 5
---------------------DEL StringLiteral@@", returned: " @AT@ 2856 @LENGTH@ 14
---------------------DEL SimpleName@@result @AT@ 2873 @LENGTH@ 6
------------------INS StringLiteral@@"Voter: %s, returned: %s" @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2904 @LENGTH@ 25
------------------INS SimpleName@@voter @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2931 @LENGTH@ 5
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2938 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2830 @LENGTH@ 50
------------------DEL InfixExpression@@"Voter: " + voter + ", returned: "+ result @AT@ 2836 @LENGTH@ 43
---------------------DEL StringLiteral@@"Voter: " @AT@ 2836 @LENGTH@ 9
---------------------DEL Operator@@+ @AT@ 2845 @LENGTH@ 1
---------------------DEL SimpleName@@voter @AT@ 2848 @LENGTH@ 5
---------------------DEL StringLiteral@@", returned: " @AT@ 2856 @LENGTH@ 14
---------------------DEL SimpleName@@result @AT@ 2873 @LENGTH@ 6
------------------INS StringLiteral@@"Voter: %s, returned: %s" @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2904 @LENGTH@ 25
------------------INS SimpleName@@voter @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2931 @LENGTH@ 5
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:debug:["Voter: " + voter + ", returned: "+ result] @AT@ 2938 @LENGTH@ 6
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Voter: %s, returned: %s",voter,result) @AT@ 2886 @LENGTH@ 10


UPD VariableDeclarationStatement@@SimpleQueryHints hints=new SimpleQueryHints(); @TO@ MutableQueryHints hints=new MutableQueryHints(); @AT@ 2652 @LENGTH@ 48
---UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2652 @LENGTH@ 16
---UPD VariableDeclarationFragment@@hints=new SimpleQueryHints() @TO@ hints=new MutableQueryHints() @AT@ 2669 @LENGTH@ 30
------UPD ClassInstanceCreation@@SimpleQueryHints[] @TO@ MutableQueryHints[] @AT@ 2677 @LENGTH@ 22
---------UPD SimpleType@@SimpleQueryHints @TO@ MutableQueryHints @AT@ 2681 @LENGTH@ 16


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") GCMBlockCipher blockCipher=new GCMBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()); @TO@ GCMBlockCipher blockCipher=new GCMBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()); @AT@ 2403 @LENGTH@ 136


UPD MethodDeclaration@@public, boolean, MethodName:isAllowed, MethodInvocation mi, Authentication authentication,  @TO@ public, boolean, MethodName:isAllowed, MethodInvocation invocation, Authentication authentication,  @AT@ 2150 @LENGTH@ 885
---UPD SingleVariableDeclaration@@MethodInvocation mi @TO@ MethodInvocation invocation @AT@ 2175 @LENGTH@ 19
------UPD SimpleName@@mi @TO@ invocation @AT@ 2192 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(mi,"MethodInvocation required") @TO@ MethodInvocation:Assert.notNull(invocation,"MethodInvocation required") @AT@ 2231 @LENGTH@ 48
------UPD MethodInvocation@@Assert.notNull(mi,"MethodInvocation required") @TO@ Assert.notNull(invocation,"MethodInvocation required") @AT@ 2231 @LENGTH@ 47
---------UPD SimpleName@@MethodName:notNull:[mi, "MethodInvocation required"] @TO@ MethodName:notNull:[invocation, "MethodInvocation required"] @AT@ 2238 @LENGTH@ 40
------------UPD SimpleName@@mi @TO@ invocation @AT@ 2246 @LENGTH@ 2
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(mi.getMethod(),"MethodInvocation must provide a non-null getMethod()") @TO@ MethodInvocation:Assert.notNull(invocation.getMethod(),"MethodInvocation must provide a non-null getMethod()") @AT@ 2282 @LENGTH@ 87
------UPD MethodInvocation@@Assert.notNull(mi.getMethod(),"MethodInvocation must provide a non-null getMethod()") @TO@ Assert.notNull(invocation.getMethod(),"MethodInvocation must provide a non-null getMethod()") @AT@ 2282 @LENGTH@ 86
---------UPD SimpleName@@MethodName:notNull:[mi.getMethod(), "MethodInvocation must provide a non-null getMethod()"] @TO@ MethodName:notNull:[invocation.getMethod(), "MethodInvocation must provide a non-null getMethod()"] @AT@ 2289 @LENGTH@ 79
------------UPD MethodInvocation@@mi.getMethod() @TO@ invocation.getMethod() @AT@ 2297 @LENGTH@ 14
---------------UPD SimpleName@@Name:mi @TO@ Name:invocation @AT@ 2297 @LENGTH@ 2
---UPD VariableDeclarationStatement@@Collection<ConfigAttribute> attrs=this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(mi); @TO@ Collection<ConfigAttribute> attrs=this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(invocation); @AT@ 2373 @LENGTH@ 110
------UPD VariableDeclarationFragment@@attrs=this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(mi) @TO@ attrs=this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(invocation) @AT@ 2401 @LENGTH@ 81
---------UPD MethodInvocation@@this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(mi) @TO@ this.securityInterceptor.obtainSecurityMetadataSource().getAttributes(invocation) @AT@ 2409 @LENGTH@ 73
------------UPD SimpleName@@MethodName:getAttributes:[mi] @TO@ MethodName:getAttributes:[invocation] @AT@ 2465 @LENGTH@ 17
---------------UPD SimpleName@@mi @TO@ invocation @AT@ 2479 @LENGTH@ 2
---DEL IfStatement@@if (attrs == null) {  if (this.securityInterceptor.isRejectPublicInvocations()) {    return false;  }  return true;} @AT@ 2487 @LENGTH@ 127
------DEL InfixExpression@@attrs == null @AT@ 2491 @LENGTH@ 13
---------DEL SimpleName@@attrs @AT@ 2491 @LENGTH@ 5
---------DEL Operator@@== @AT@ 2496 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2500 @LENGTH@ 4
------DEL Block@@ThenBody:{  if (this.securityInterceptor.isRejectPublicInvocations()) {    return false;  }  return true;} @AT@ 2506 @LENGTH@ 108
---------DEL ReturnStatement@@BooleanLiteral:true @AT@ 2598 @LENGTH@ 12
------------DEL BooleanLiteral@@true @AT@ 2605 @LENGTH@ 4
---MOV IfStatement@@if (this.securityInterceptor.isRejectPublicInvocations()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:isAllowed, MethodInvocation mi, Authentication authentication,  @AT@ 2511 @LENGTH@ 82
------UPD Block@@ThenBody:{  return false;} @TO@ ThenBody:{  return !this.securityInterceptor.isRejectPublicInvocations();} @AT@ 2569 @LENGTH@ 24
---------UPD ReturnStatement@@BooleanLiteral:false @TO@ PrefixExpression:!this.securityInterceptor.isRejectPublicInvocations() @AT@ 2575 @LENGTH@ 13
------------DEL BooleanLiteral@@false @AT@ 2582 @LENGTH@ 5
------------INS PrefixExpression@@!this.securityInterceptor.isRejectPublicInvocations() @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2601 @LENGTH@ 53
---------------MOV MethodInvocation@@this.securityInterceptor.isRejectPublicInvocations() @TO@ PrefixExpression@@!this.securityInterceptor.isRejectPublicInvocations() @AT@ 2515 @LENGTH@ 52
---------------INS Operator@@! @TO@ PrefixExpression@@!this.securityInterceptor.isRejectPublicInvocations() @AT@ 2601 @LENGTH@ 1
------INS InfixExpression@@attrs == null @TO@ IfStatement@@if (this.securityInterceptor.isRejectPublicInvocations()) {  return false;} @AT@ 2574 @LENGTH@ 13
---------INS SimpleName@@attrs @TO@ InfixExpression@@attrs == null @AT@ 2574 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@attrs == null @AT@ 2579 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@attrs == null @AT@ 2583 @LENGTH@ 4
---UPD TryStatement@@try {  this.securityInterceptor.getAccessDecisionManager().decide(authentication,mi,attrs);} catch (AccessDeniedException unauthorized) {  if (logger.isDebugEnabled()) {    logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);  }  return false;} @TO@ try {  this.securityInterceptor.getAccessDecisionManager().decide(authentication,invocation,attrs);  return true;} catch (AccessDeniedException unauthorized) {  logger.debug(LogMessage.format("%s denied for %s",invocation,authentication),unauthorized);  return false;} @AT@ 2717 @LENGTH@ 299
------UPD ExpressionStatement@@MethodInvocation:this.securityInterceptor.getAccessDecisionManager().decide(authentication,mi,attrs) @TO@ MethodInvocation:this.securityInterceptor.getAccessDecisionManager().decide(authentication,invocation,attrs) @AT@ 2726 @LENGTH@ 86
---------UPD MethodInvocation@@this.securityInterceptor.getAccessDecisionManager().decide(authentication,mi,attrs) @TO@ this.securityInterceptor.getAccessDecisionManager().decide(authentication,invocation,attrs) @AT@ 2726 @LENGTH@ 85
------------UPD SimpleName@@MethodName:decide:[authentication, mi, attrs] @TO@ MethodName:decide:[authentication, invocation, attrs] @AT@ 2778 @LENGTH@ 33
---------------UPD SimpleName@@mi @TO@ invocation @AT@ 2801 @LENGTH@ 2
------UPD CatchClause@@catch (AccessDeniedException unauthorized) {  if (logger.isDebugEnabled()) {    logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);  }  return false;} @TO@ catch (AccessDeniedException unauthorized) {  logger.debug(LogMessage.format("%s denied for %s",invocation,authentication),unauthorized);  return false;} @AT@ 2819 @LENGTH@ 197
---------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);} @AT@ 2867 @LENGTH@ 127
------------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2871 @LENGTH@ 23
---------------DEL SimpleName@@Name:logger @AT@ 2871 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2878 @LENGTH@ 16
------------DEL Block@@ThenBody:{  logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);} @AT@ 2896 @LENGTH@ 98
---------------DEL ExpressionStatement@@MethodInvocation:logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized) @AT@ 2902 @LENGTH@ 87
---------INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("%s denied for %s",invocation,authentication),unauthorized) @TO@ CatchClause@@catch (AccessDeniedException unauthorized) {  if (logger.isDebugEnabled()) {    logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);  }  return false;} @AT@ 2934 @LENGTH@ 94
------------MOV MethodInvocation@@logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized) @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("%s denied for %s",invocation,authentication),unauthorized) @AT@ 2902 @LENGTH@ 86
---------------UPD SimpleName@@MethodName:debug:[mi.toString() + " denied for " + authentication.toString(), unauthorized] @TO@ MethodName:debug:[LogMessage.format("%s denied for %s",invocation,authentication), unauthorized] @AT@ 2909 @LENGTH@ 79
------------------DEL InfixExpression@@mi.toString() + " denied for " + authentication.toString() @AT@ 2915 @LENGTH@ 58
---------------------DEL MethodInvocation@@mi.toString() @AT@ 2915 @LENGTH@ 13
------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 2918 @LENGTH@ 10
---------------------DEL Operator@@+ @AT@ 2928 @LENGTH@ 1
---------------------DEL StringLiteral@@" denied for " @AT@ 2931 @LENGTH@ 14
---------------------DEL MethodInvocation@@authentication.toString() @AT@ 2948 @LENGTH@ 25
------------------------DEL SimpleName@@Name:authentication @AT@ 2948 @LENGTH@ 14
------------------------DEL SimpleName@@MethodName:toString:[] @AT@ 2963 @LENGTH@ 10
------------------INS MethodInvocation@@LogMessage.format("%s denied for %s",invocation,authentication) @TO@ SimpleName@@MethodName:debug:[mi.toString() + " denied for " + authentication.toString(), unauthorized] @AT@ 2947 @LENGTH@ 65
---------------------MOV SimpleName@@Name:mi @TO@ MethodInvocation@@LogMessage.format("%s denied for %s",invocation,authentication) @AT@ 2915 @LENGTH@ 2
---------------------MOV SimpleName@@Name:mi @TO@ MethodInvocation@@LogMessage.format("%s denied for %s",invocation,authentication) @AT@ 2915 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:format:["%s denied for %s", invocation, authentication] @TO@ MethodInvocation@@LogMessage.format("%s denied for %s",invocation,authentication) @AT@ 2958 @LENGTH@ 54
------------------------INS StringLiteral@@"%s denied for %s" @TO@ SimpleName@@MethodName:format:["%s denied for %s", invocation, authentication] @AT@ 2965 @LENGTH@ 18
------------------------INS SimpleName@@invocation @TO@ SimpleName@@MethodName:format:["%s denied for %s", invocation, authentication] @AT@ 2985 @LENGTH@ 10
------------------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:format:["%s denied for %s", invocation, authentication] @AT@ 2997 @LENGTH@ 14
------INS ReturnStatement@@BooleanLiteral:true @TO@ TryStatement@@try {  this.securityInterceptor.getAccessDecisionManager().decide(authentication,mi,attrs);} catch (AccessDeniedException unauthorized) {  if (logger.isDebugEnabled()) {    logger.debug(mi.toString() + " denied for " + authentication.toString(),unauthorized);  }  return false;} @AT@ 2867 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2874 @LENGTH@ 4
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 3020 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 3027 @LENGTH@ 4


DEL ExpressionStatement@@Assignment:task=wrap(task) @AT@ 2242 @LENGTH@ 18
---DEL Assignment@@task=wrap(task) @AT@ 2242 @LENGTH@ 17
------DEL SimpleName@@task @AT@ 2242 @LENGTH@ 4
------DEL Operator@@= @AT@ 2246 @LENGTH@ 1


UPD EnhancedForStatement@@for (SessionAuthenticationStrategy delegate : this.delegateStrategies) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Delegating to " + delegate);  }  delegate.onAuthentication(authentication,request,response);} @TO@ for (SessionAuthenticationStrategy delegate : this.delegateStrategies) {  this.logger.debug(LogMessage.format("Delegating to %s",delegate));  delegate.onAuthentication(authentication,request,response);} @AT@ 3087 @LENGTH@ 237
---DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Delegating to " + delegate);} @AT@ 3163 @LENGTH@ 92
------DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 3167 @LENGTH@ 28
---------DEL FieldAccess@@this.logger @AT@ 3167 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 3167 @LENGTH@ 4
------------DEL SimpleName@@logger @AT@ 3172 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3179 @LENGTH@ 16
------DEL Block@@ThenBody:{  this.logger.debug("Delegating to " + delegate);} @AT@ 3197 @LENGTH@ 58
---------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("Delegating to " + delegate) @AT@ 3203 @LENGTH@ 47
---INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Delegating to %s",delegate)) @TO@ EnhancedForStatement@@for (SessionAuthenticationStrategy delegate : this.delegateStrategies) {  if (this.logger.isDebugEnabled()) {    this.logger.debug("Delegating to " + delegate);  }  delegate.onAuthentication(authentication,request,response);} @AT@ 3167 @LENGTH@ 67
------MOV MethodInvocation@@this.logger.debug("Delegating to " + delegate) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Delegating to %s",delegate)) @AT@ 3203 @LENGTH@ 46
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Delegating to %s",delegate)] @TO@ MethodInvocation@@this.logger.debug("Delegating to " + delegate) @AT@ 3179 @LENGTH@ 54
------------INS MethodInvocation@@LogMessage.format("Delegating to %s",delegate) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Delegating to %s",delegate)] @AT@ 3185 @LENGTH@ 47
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Delegating to %s",delegate) @AT@ 3185 @LENGTH@ 10
---------------MOV SimpleName@@MethodName:debug:["Delegating to " + delegate] @TO@ MethodInvocation@@LogMessage.format("Delegating to %s",delegate) @AT@ 3215 @LENGTH@ 34
------------------INS StringLiteral@@"Delegating to %s" @TO@ SimpleName@@MethodName:debug:["Delegating to " + delegate] @AT@ 3203 @LENGTH@ 18
------------------INS StringLiteral@@"Delegating to %s" @TO@ SimpleName@@MethodName:debug:["Delegating to " + delegate] @AT@ 3203 @LENGTH@ 18
------------------INS SimpleName@@delegate @TO@ SimpleName@@MethodName:debug:["Delegating to " + delegate] @AT@ 3223 @LENGTH@ 8


INS MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="1.0",scheme="xmpp",title="XMPP",syntax="xmpp:host:port/participant",alternativeSyntax="xmpp:user:password@host:port/participant",category={Category.CHAT,Category.MESSAGING}), public]XmppEndpoint, DefaultEndpoint[HeaderFilterStrategyAware] @AT@ 9432 @LENGTH@ 304
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9432 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9439 @LENGTH@ 6
---INS SimpleName@@MethodName:resolveParticipant @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9446 @LENGTH@ 18
---INS SingleVariableDeclaration@@XMPPConnection connection @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9465 @LENGTH@ 25
------INS SimpleType@@XMPPConnection @TO@ SingleVariableDeclaration@@XMPPConnection connection @AT@ 9465 @LENGTH@ 14
------INS SimpleName@@connection @TO@ SingleVariableDeclaration@@XMPPConnection connection @AT@ 9480 @LENGTH@ 10
---INS VariableDeclarationStatement@@String participant=getParticipant(); @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9502 @LENGTH@ 38
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String participant=getParticipant(); @AT@ 9502 @LENGTH@ 6
------INS VariableDeclarationFragment@@participant=getParticipant() @TO@ VariableDeclarationStatement@@String participant=getParticipant(); @AT@ 9509 @LENGTH@ 30
---------INS SimpleName@@participant @TO@ VariableDeclarationFragment@@participant=getParticipant() @AT@ 9509 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:getParticipant:[] @TO@ VariableDeclarationFragment@@participant=getParticipant() @AT@ 9523 @LENGTH@ 16
---INS IfStatement@@if (participant.indexOf('@',0) != -1) {  return participant;} @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9558 @LENGTH@ 82
------INS InfixExpression@@participant.indexOf('@',0) != -1 @TO@ IfStatement@@if (participant.indexOf('@',0) != -1) {  return participant;} @AT@ 9562 @LENGTH@ 33
---------INS MethodInvocation@@participant.indexOf('@',0) @TO@ InfixExpression@@participant.indexOf('@',0) != -1 @AT@ 9562 @LENGTH@ 27
------------INS SimpleName@@Name:participant @TO@ MethodInvocation@@participant.indexOf('@',0) @AT@ 9562 @LENGTH@ 11
------------INS SimpleName@@MethodName:indexOf:['@', 0] @TO@ MethodInvocation@@participant.indexOf('@',0) @AT@ 9574 @LENGTH@ 15
---------------INS CharacterLiteral@@'@' @TO@ SimpleName@@MethodName:indexOf:['@', 0] @AT@ 9582 @LENGTH@ 3
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:indexOf:['@', 0] @AT@ 9587 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@participant.indexOf('@',0) != -1 @AT@ 9589 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@participant.indexOf('@',0) != -1 @AT@ 9593 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 9593 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 9594 @LENGTH@ 1
------INS Block@@ThenBody:{  return participant;} @TO@ IfStatement@@if (participant.indexOf('@',0) != -1) {  return participant;} @AT@ 9597 @LENGTH@ 43
---------INS ReturnStatement@@SimpleName:participant @TO@ Block@@ThenBody:{  return participant;} @AT@ 9611 @LENGTH@ 19
------------INS SimpleName@@participant @TO@ ReturnStatement@@SimpleName:participant @AT@ 9618 @LENGTH@ 11
---INS ReturnStatement@@InfixExpression:participant + "@" + connection.getXMPPServiceDomain().toString() @TO@ MethodDeclaration@@public, String, MethodName:resolveParticipant, XMPPConnection connection,  @AT@ 9658 @LENGTH@ 72
------INS InfixExpression@@participant + "@" + connection.getXMPPServiceDomain().toString() @TO@ ReturnStatement@@InfixExpression:participant + "@" + connection.getXMPPServiceDomain().toString() @AT@ 9665 @LENGTH@ 64
---------INS SimpleName@@participant @TO@ InfixExpression@@participant + "@" + connection.getXMPPServiceDomain().toString() @AT@ 9665 @LENGTH@ 11
---------INS Operator@@+ @TO@ InfixExpression@@participant + "@" + connection.getXMPPServiceDomain().toString() @AT@ 9676 @LENGTH@ 1
---------INS StringLiteral@@"@" @TO@ InfixExpression@@participant + "@" + connection.getXMPPServiceDomain().toString() @AT@ 9679 @LENGTH@ 3
---------INS MethodInvocation@@connection.getXMPPServiceDomain().toString() @TO@ InfixExpression@@participant + "@" + connection.getXMPPServiceDomain().toString() @AT@ 9685 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getXMPPServiceDomain:[] @TO@ MethodInvocation@@connection.getXMPPServiceDomain().toString() @AT@ 9685 @LENGTH@ 33
------------INS SimpleName@@Name:connection @TO@ MethodInvocation@@connection.getXMPPServiceDomain().toString() @AT@ 9685 @LENGTH@ 10
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@connection.getXMPPServiceDomain().toString() @AT@ 9719 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:Utf8.encode(s) @TO@ ConditionalExpression:(s != null) ? Utf8.encode(s) : null @AT@ 1483 @LENGTH@ 22
---INS ConditionalExpression@@(s != null) ? Utf8.encode(s) : null @TO@ ReturnStatement@@MethodInvocation:Utf8.encode(s) @AT@ 1450 @LENGTH@ 35
------INS ParenthesizedExpression@@(s != null) @TO@ ConditionalExpression@@(s != null) ? Utf8.encode(s) : null @AT@ 1450 @LENGTH@ 11
---------INS InfixExpression@@s != null @TO@ ParenthesizedExpression@@(s != null) @AT@ 1451 @LENGTH@ 9
------------INS SimpleName@@s @TO@ InfixExpression@@s != null @AT@ 1451 @LENGTH@ 1
------------INS Operator@@!= @TO@ InfixExpression@@s != null @AT@ 1452 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@s != null @AT@ 1456 @LENGTH@ 4
------INS NullLiteral@@null @TO@ ConditionalExpression@@(s != null) ? Utf8.encode(s) : null @AT@ 1481 @LENGTH@ 4
------MOV MethodInvocation@@Utf8.encode(s) @TO@ ConditionalExpression@@(s != null) ? Utf8.encode(s) : null @AT@ 1490 @LENGTH@ 14


UPD IfStatement@@if (this.messagingMessageConverter.method == null) {  amqpMessage.getMessageProperties().setTargetMethod(this.handlerAdapter.getMethodFor(message.getPayload()));} @TO@ if (this.messagingMessageConverter.method == null && amqpMessage != null) {  amqpMessage.getMessageProperties().setTargetMethod(this.handlerAdapter.getMethodFor(message.getPayload()));} @AT@ 5526 @LENGTH@ 176
---INS InfixExpression@@this.messagingMessageConverter.method == null && amqpMessage != null @TO@ IfStatement@@if (this.messagingMessageConverter.method == null) {  amqpMessage.getMessageProperties().setTargetMethod(this.handlerAdapter.getMethodFor(message.getPayload()));} @AT@ 5530 @LENGTH@ 68
------MOV InfixExpression@@this.messagingMessageConverter.method == null @TO@ InfixExpression@@this.messagingMessageConverter.method == null && amqpMessage != null @AT@ 5530 @LENGTH@ 45
------INS Operator@@&& @TO@ InfixExpression@@this.messagingMessageConverter.method == null && amqpMessage != null @AT@ 5575 @LENGTH@ 2
------INS InfixExpression@@amqpMessage != null @TO@ InfixExpression@@this.messagingMessageConverter.method == null && amqpMessage != null @AT@ 5579 @LENGTH@ 19
---------INS SimpleName@@amqpMessage @TO@ InfixExpression@@amqpMessage != null @AT@ 5579 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@amqpMessage != null @AT@ 5590 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@amqpMessage != null @AT@ 5594 @LENGTH@ 4


UPD IfStatement@@if (request.indexOf(ECHO_METHOD) > 0) {  exchange.getOut().setBody(ECHO_RESPONSE);} else {  exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE);} @TO@ if (request.indexOf(ECHO_METHOD) > 0) {  exchange.getMessage().setBody(ECHO_RESPONSE);} else {  exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE);} @AT@ 5023 @LENGTH@ 282
---UPD Block@@ThenBody:{  exchange.getOut().setBody(ECHO_RESPONSE);} @TO@ ThenBody:{  exchange.getMessage().setBody(ECHO_RESPONSE);} @AT@ 5061 @LENGTH@ 105
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(ECHO_RESPONSE) @TO@ MethodInvocation:exchange.getMessage().setBody(ECHO_RESPONSE) @AT@ 5095 @LENGTH@ 41
---------UPD MethodInvocation@@exchange.getOut().setBody(ECHO_RESPONSE) @TO@ exchange.getMessage().setBody(ECHO_RESPONSE) @AT@ 5095 @LENGTH@ 40
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 5095 @LENGTH@ 17
---UPD Block@@ElseBody:{  exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE);} @TO@ ElseBody:{  exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE);} @AT@ 5172 @LENGTH@ 133
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE) @TO@ MethodInvocation:exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE) @AT@ 5226 @LENGTH@ 49
---------UPD MethodInvocation@@exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE) @TO@ exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE) @AT@ 5226 @LENGTH@ 48
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 5226 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getMessage().getBody(String.class),"{\"Hello\":\"Camel\"}") @TO@ MethodInvocation:assertEquals("{\"Hello\":\"Camel\"}",exchange.getMessage().getBody(String.class)) @AT@ 2088 @LENGTH@ 83
---UPD MethodInvocation@@assertEquals(exchange.getMessage().getBody(String.class),"{\"Hello\":\"Camel\"}") @TO@ assertEquals("{\"Hello\":\"Camel\"}",exchange.getMessage().getBody(String.class)) @AT@ 2088 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(String.class), "{\"Hello\":\"Camel\"}"] @TO@ MethodName:assertEquals:["{\"Hello\":\"Camel\"}", exchange.getMessage().getBody(String.class)] @AT@ 2088 @LENGTH@ 82
---------MOV MethodInvocation@@exchange.getMessage().getBody(String.class) @TO@ SimpleName@@MethodName:assertEquals:[exchange.getMessage().getBody(String.class), "{\"Hello\":\"Camel\"}"] @AT@ 2101 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(sbody) @TO@ MethodInvocation:exchange.getMessage().setBody(sbody) @AT@ 6104 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(sbody) @TO@ exchange.getMessage().setBody(sbody) @AT@ 6104 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 6104 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:assertThat(request.doesRequestMatch(mockRequest,new PortResolverImpl())).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:matchRequestBuildWithConstructorAndBuilder,  @AT@ 3332 @LENGTH@ 83
---INS MethodInvocation@@assertThat(request.doesRequestMatch(mockRequest,new PortResolverImpl())).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.doesRequestMatch(mockRequest,new PortResolverImpl())).isTrue() @AT@ 3332 @LENGTH@ 82
------INS MethodInvocation@@MethodName:assertThat:[request.doesRequestMatch(mockRequest,new PortResolverImpl())] @TO@ MethodInvocation@@assertThat(request.doesRequestMatch(mockRequest,new PortResolverImpl())).isTrue() @AT@ 3332 @LENGTH@ 73
---------MOV MethodInvocation@@request.doesRequestMatch(mockRequest,new PortResolverImpl()) @TO@ MethodInvocation@@MethodName:assertThat:[request.doesRequestMatch(mockRequest,new PortResolverImpl())] @AT@ 3339 @LENGTH@ 61
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(request.doesRequestMatch(mockRequest,new PortResolverImpl())).isTrue() @AT@ 3406 @LENGTH@ 8


INS MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @TO@ TypeDeclaration@@[@Nested]FindWithRelationships, IntegrationTestBase @AT@ 42881 @LENGTH@ 657
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 42876 @LENGTH@ 4
---INS SimpleName@@MethodName:findAndMapMultipleLevelsOfSimpleRelationships @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 42881 @LENGTH@ 45
---INS SingleVariableDeclaration@@@Autowired SimpleEntityWithRelationshipARepository repository @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 42927 @LENGTH@ 61
------INS SimpleType@@SimpleEntityWithRelationshipARepository @TO@ SingleVariableDeclaration@@@Autowired SimpleEntityWithRelationshipARepository repository @AT@ 42938 @LENGTH@ 39
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired SimpleEntityWithRelationshipARepository repository @AT@ 42978 @LENGTH@ 10
---INS VariableDeclarationStatement@@Long aId=null; @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 42995 @LENGTH@ 16
------INS SimpleType@@Long @TO@ VariableDeclarationStatement@@Long aId=null; @AT@ 42995 @LENGTH@ 4
------INS VariableDeclarationFragment@@aId=null @TO@ VariableDeclarationStatement@@Long aId=null; @AT@ 43000 @LENGTH@ 10
---------INS SimpleName@@aId @TO@ VariableDeclarationFragment@@aId=null @AT@ 43000 @LENGTH@ 3
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@aId=null @AT@ 43006 @LENGTH@ 4
---INS TryStatement@@try (Session session=createSession()){  aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong());}  @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 43015 @LENGTH@ 306
------INS VariableDeclarationExpression@@Session session=createSession() @TO@ TryStatement@@try (Session session=createSession()){  aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong());}  @AT@ 43020 @LENGTH@ 33
---------INS SimpleType@@Session @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 43020 @LENGTH@ 7
---------INS VariableDeclarationFragment@@session=createSession() @TO@ VariableDeclarationExpression@@Session session=createSession() @AT@ 43028 @LENGTH@ 25
------------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 43028 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:createSession:[] @TO@ VariableDeclarationFragment@@session=createSession() @AT@ 43038 @LENGTH@ 15
------INS ExpressionStatement@@Assignment:aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @TO@ TryStatement@@try (Session session=createSession()){  aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong());}  @AT@ 43061 @LENGTH@ 255
---------INS Assignment@@aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @TO@ ExpressionStatement@@Assignment:aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43061 @LENGTH@ 254
------------INS SimpleName@@aId @TO@ Assignment@@aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43061 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43064 @LENGTH@ 1
------------INS MethodInvocation@@session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @TO@ Assignment@@aId=session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43067 @LENGTH@ 248
---------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43067 @LENGTH@ 7
---------------INS SimpleName@@MethodName:writeTransaction:[tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()] @TO@ MethodInvocation@@session.writeTransaction(tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()) @AT@ 43075 @LENGTH@ 240
------------------INS LambdaExpression@@tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @TO@ SimpleName@@MethodName:writeTransaction:[tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong()] @AT@ 43092 @LENGTH@ 222
---------------------INS VariableDeclarationFragment@@tx @TO@ LambdaExpression@@tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43092 @LENGTH@ 2
------------------------INS SimpleName@@tx @TO@ VariableDeclarationFragment@@tx @AT@ 43092 @LENGTH@ 2
---------------------INS MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @TO@ LambdaExpression@@tx -> tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43098 @LENGTH@ 216
------------------------INS MethodInvocation@@MethodName:get:["aId"] @TO@ MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43098 @LENGTH@ 207
---------------------------INS StringLiteral@@"aId" @TO@ MethodInvocation@@MethodName:get:["aId"] @AT@ 43299 @LENGTH@ 5
------------------------INS MethodInvocation@@MethodName:single:[] @TO@ MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43098 @LENGTH@ 196
------------------------INS MethodInvocation@@MethodName:run:["CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId"] @TO@ MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43098 @LENGTH@ 187
---------------------------INS InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @TO@ MethodInvocation@@MethodName:run:["CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId"] @AT@ 43105 @LENGTH@ 179
------------------------------INS StringLiteral@@"CREATE (a:SimpleEntityWithRelationshipA)" @TO@ InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @AT@ 43105 @LENGTH@ 42
------------------------------INS Operator@@+ @TO@ InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @AT@ 43147 @LENGTH@ 1
------------------------------INS StringLiteral@@"-[:TO_B]->(:SimpleEntityWithRelationshipB)" @TO@ InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @AT@ 43156 @LENGTH@ 44
------------------------------INS StringLiteral@@"-[:TO_C]->(:SimpleEntityWithRelationshipC)" @TO@ InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @AT@ 43209 @LENGTH@ 44
------------------------------INS StringLiteral@@" RETURN id(a) as aId" @TO@ InfixExpression@@"CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId" @AT@ 43262 @LENGTH@ 22
------------------------INS SimpleName@@Name:tx @TO@ MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43098 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:asLong:[] @TO@ MethodInvocation@@tx.run("CREATE (a:SimpleEntityWithRelationshipA)" + "-[:TO_B]->(:SimpleEntityWithRelationshipB)" + "-[:TO_C]->(:SimpleEntityWithRelationshipC)"+ " RETURN id(a) as aId").single().get("aId").asLong() @AT@ 43306 @LENGTH@ 8
---INS VariableDeclarationStatement@@SimpleEntityWithRelationshipA entityA=repository.findById(aId).get(); @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 43326 @LENGTH@ 71
------INS SimpleType@@SimpleEntityWithRelationshipA @TO@ VariableDeclarationStatement@@SimpleEntityWithRelationshipA entityA=repository.findById(aId).get(); @AT@ 43326 @LENGTH@ 29
------INS VariableDeclarationFragment@@entityA=repository.findById(aId).get() @TO@ VariableDeclarationStatement@@SimpleEntityWithRelationshipA entityA=repository.findById(aId).get(); @AT@ 43356 @LENGTH@ 40
---------INS SimpleName@@entityA @TO@ VariableDeclarationFragment@@entityA=repository.findById(aId).get() @AT@ 43356 @LENGTH@ 7
---------INS MethodInvocation@@repository.findById(aId).get() @TO@ VariableDeclarationFragment@@entityA=repository.findById(aId).get() @AT@ 43366 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:findById:[aId] @TO@ MethodInvocation@@repository.findById(aId).get() @AT@ 43366 @LENGTH@ 24
---------------INS SimpleName@@aId @TO@ MethodInvocation@@MethodName:findById:[aId] @AT@ 43386 @LENGTH@ 3
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(aId).get() @AT@ 43366 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@repository.findById(aId).get() @AT@ 43391 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(entityA).isNotNull() @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 43401 @LENGTH@ 32
------INS MethodInvocation@@assertThat(entityA).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(entityA).isNotNull() @AT@ 43401 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:assertThat:[entityA] @TO@ MethodInvocation@@assertThat(entityA).isNotNull() @AT@ 43401 @LENGTH@ 19
------------INS SimpleName@@entityA @TO@ MethodInvocation@@MethodName:assertThat:[entityA] @AT@ 43412 @LENGTH@ 7
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(entityA).isNotNull() @AT@ 43421 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(entityA.getBs()).hasSize(1) @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 43437 @LENGTH@ 39
------INS MethodInvocation@@assertThat(entityA.getBs()).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(entityA.getBs()).hasSize(1) @AT@ 43437 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:assertThat:[entityA.getBs()] @TO@ MethodInvocation@@assertThat(entityA.getBs()).hasSize(1) @AT@ 43437 @LENGTH@ 27
------------INS MethodInvocation@@entityA.getBs() @TO@ MethodInvocation@@MethodName:assertThat:[entityA.getBs()] @AT@ 43448 @LENGTH@ 15
---------------INS SimpleName@@Name:entityA @TO@ MethodInvocation@@entityA.getBs() @AT@ 43448 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getBs:[] @TO@ MethodInvocation@@entityA.getBs() @AT@ 43456 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(entityA.getBs()).hasSize(1) @AT@ 43465 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 43473 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(entityA.getBs().get(0).getCs()).hasSize(1) @TO@ MethodDeclaration@@void, MethodName:findAndMapMultipleLevelsOfSimpleRelationships, @Autowired SimpleEntityWithRelationshipARepository repository,  @AT@ 43480 @LENGTH@ 54
------INS MethodInvocation@@assertThat(entityA.getBs().get(0).getCs()).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(entityA.getBs().get(0).getCs()).hasSize(1) @AT@ 43480 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:assertThat:[entityA.getBs().get(0).getCs()] @TO@ MethodInvocation@@assertThat(entityA.getBs().get(0).getCs()).hasSize(1) @AT@ 43480 @LENGTH@ 42
------------INS MethodInvocation@@entityA.getBs().get(0).getCs() @TO@ MethodInvocation@@MethodName:assertThat:[entityA.getBs().get(0).getCs()] @AT@ 43491 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@entityA.getBs().get(0).getCs() @AT@ 43491 @LENGTH@ 22
------------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 43511 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:getBs:[] @TO@ MethodInvocation@@entityA.getBs().get(0).getCs() @AT@ 43491 @LENGTH@ 15
---------------INS SimpleName@@Name:entityA @TO@ MethodInvocation@@entityA.getBs().get(0).getCs() @AT@ 43491 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getCs:[] @TO@ MethodInvocation@@entityA.getBs().get(0).getCs() @AT@ 43514 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(entityA.getBs().get(0).getCs()).hasSize(1) @AT@ 43523 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 43531 @LENGTH@ 1


UPD TypeDeclaration@@[public, abstract]AuthorityUtils,  @TO@ [public, final]AuthorityUtils,  @AT@ 1137 @LENGTH@ 1574
---UPD Modifier@@abstract @TO@ final @AT@ 1144 @LENGTH@ 8


UPD IfStatement@@if (configurer instanceof PropertyConfigurerGetter) {  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }  ;} @TO@ if (configurer instanceof PropertyConfigurerGetter) {  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }} @AT@ 5434 @LENGTH@ 439
---UPD Block@@ThenBody:{  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }  ;} @TO@ ThenBody:{  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }} @AT@ 5486 @LENGTH@ 387


UPD VariableDeclarationStatement@@Integer expectedTimeout=new Integer(6); @TO@ Integer expectedTimeout=Integer.valueOf(6); @AT@ 3061 @LENGTH@ 41
---UPD VariableDeclarationFragment@@expectedTimeout=new Integer(6) @TO@ expectedTimeout=Integer.valueOf(6) @AT@ 3069 @LENGTH@ 32
------DEL ClassInstanceCreation@@Integer[6] @AT@ 3087 @LENGTH@ 14
---------DEL New@@new @AT@ 3087 @LENGTH@ 3
---------DEL SimpleType@@Integer @AT@ 3091 @LENGTH@ 7
---------DEL NumberLiteral@@6 @AT@ 3099 @LENGTH@ 1
------INS MethodInvocation@@Integer.valueOf(6) @TO@ VariableDeclarationFragment@@expectedTimeout=new Integer(6) @AT@ 3165 @LENGTH@ 18
---------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(6) @AT@ 3165 @LENGTH@ 7
---------INS SimpleName@@MethodName:valueOf:[6] @TO@ MethodInvocation@@Integer.valueOf(6) @AT@ 3173 @LENGTH@ 10
------------INS NumberLiteral@@6 @TO@ SimpleName@@MethodName:valueOf:[6] @AT@ 3181 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:constructor_fileName_nullFile, IOException,  @TO@ public, void, MethodName:constructor_fileName_nullFile,  @AT@ 7253 @LENGTH@ 304
---DEL SimpleType@@IOException @AT@ 7304 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:this.userProperties.forEach((name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
) @TO@ MethodDeclaration@@public, Collection<UserDetails>, MethodName:getObject,  @AT@ 2200 @LENGTH@ 554
---INS MethodInvocation@@this.userProperties.forEach((name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
) @TO@ ExpressionStatement@@MethodInvocation:this.userProperties.forEach((name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
) @AT@ 2200 @LENGTH@ 553
------MOV FieldAccess@@this.userProperties @TO@ MethodInvocation@@this.userProperties.forEach((name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
) @AT@ 2158 @LENGTH@ 19
------INS SimpleName@@MethodName:forEach:[(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
] @TO@ MethodInvocation@@this.userProperties.forEach((name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
) @AT@ 2220 @LENGTH@ 533
---------INS LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @TO@ SimpleName@@MethodName:forEach:[(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
] @AT@ 2228 @LENGTH@ 524
------------INS VariableDeclarationFragment@@name @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2229 @LENGTH@ 4
---------------MOV SimpleName@@name @TO@ VariableDeclarationFragment@@name @AT@ 2202 @LENGTH@ 4
------------INS VariableDeclarationFragment@@property @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2235 @LENGTH@ 8
---------------MOV SimpleName@@property @TO@ VariableDeclarationFragment@@property @AT@ 2235 @LENGTH@ 8
------------MOV ExpressionStatement@@MethodInvocation:editor.setAsText(property) @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2267 @LENGTH@ 27
------------MOV VariableDeclarationStatement@@UserAttribute attr=(UserAttribute)editor.getValue(); @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2298 @LENGTH@ 55
------------INS ExpressionStatement@@MethodInvocation:Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2343 @LENGTH@ 150
---------------INS MethodInvocation@@Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @AT@ 2343 @LENGTH@ 149
------------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @AT@ 2343 @LENGTH@ 6
------------------INS SimpleName@@MethodName:state:[attr != null, () -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails."] @TO@ MethodInvocation@@Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.") @AT@ 2350 @LENGTH@ 142
---------------------INS InfixExpression@@attr != null @TO@ SimpleName@@MethodName:state:[attr != null, () -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails."] @AT@ 2356 @LENGTH@ 12
------------------------MOV SimpleName@@attr @TO@ InfixExpression@@attr != null @AT@ 2361 @LENGTH@ 4
------------------------MOV Operator@@== @TO@ InfixExpression@@attr != null @AT@ 2365 @LENGTH@ 2
------------------------MOV NullLiteral@@null @TO@ InfixExpression@@attr != null @AT@ 2369 @LENGTH@ 4
---------------------INS LambdaExpression@@() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @TO@ SimpleName@@MethodName:state:[attr != null, () -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails."] @AT@ 2370 @LENGTH@ 121
------------------------INS InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @TO@ LambdaExpression@@() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2376 @LENGTH@ 115
---------------------------MOV StringLiteral@@"The entry with username '" @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2413 @LENGTH@ 27
---------------------------MOV Operator@@+ @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2440 @LENGTH@ 1
---------------------------MOV SimpleName@@name @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2443 @LENGTH@ 4
---------------------------MOV StringLiteral@@"' and value '" @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2450 @LENGTH@ 15
---------------------------MOV SimpleName@@property @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2468 @LENGTH@ 8
---------------------------MOV StringLiteral@@"' could not be converted to a UserDetails." @TO@ InfixExpression@@"The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails." @AT@ 2485 @LENGTH@ 44
------------INS VariableDeclarationStatement@@String password=attr.getPassword(); @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2497 @LENGTH@ 37
---------------INS VariableDeclarationFragment@@password=attr.getPassword() @TO@ VariableDeclarationStatement@@String password=attr.getPassword(); @AT@ 2504 @LENGTH@ 29
------------------INS MethodInvocation@@attr.getPassword() @TO@ VariableDeclarationFragment@@password=attr.getPassword() @AT@ 2515 @LENGTH@ 18
---------------------MOV SimpleName@@Name:attr @TO@ MethodInvocation@@attr.getPassword() @AT@ 2618 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:getPassword:[] @TO@ MethodInvocation@@attr.getPassword() @AT@ 2623 @LENGTH@ 13
------------------MOV SimpleName@@user @TO@ VariableDeclarationFragment@@password=attr.getPassword() @AT@ 2573 @LENGTH@ 4
---------------MOV SimpleType@@UserDetails @TO@ VariableDeclarationStatement@@String password=attr.getPassword(); @AT@ 2561 @LENGTH@ 11
------------INS VariableDeclarationStatement@@boolean disabled=!attr.isEnabled(); @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2538 @LENGTH@ 37
---------------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean disabled=!attr.isEnabled(); @AT@ 2538 @LENGTH@ 7
---------------INS VariableDeclarationFragment@@disabled=!attr.isEnabled() @TO@ VariableDeclarationStatement@@boolean disabled=!attr.isEnabled(); @AT@ 2546 @LENGTH@ 28
------------------INS SimpleName@@disabled @TO@ VariableDeclarationFragment@@disabled=!attr.isEnabled() @AT@ 2546 @LENGTH@ 8
------------------MOV PrefixExpression@@!attr.isEnabled() @TO@ VariableDeclarationFragment@@disabled=!attr.isEnabled() @AT@ 2652 @LENGTH@ 17
------------INS VariableDeclarationStatement@@List<GrantedAuthority> authorities=attr.getAuthorities(); @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2579 @LENGTH@ 59
---------------INS ParameterizedType@@List<GrantedAuthority> @TO@ VariableDeclarationStatement@@List<GrantedAuthority> authorities=attr.getAuthorities(); @AT@ 2579 @LENGTH@ 22
------------------INS SimpleType@@List @TO@ ParameterizedType@@List<GrantedAuthority> @AT@ 2579 @LENGTH@ 4
------------------INS SimpleType@@GrantedAuthority @TO@ ParameterizedType@@List<GrantedAuthority> @AT@ 2584 @LENGTH@ 16
---------------INS VariableDeclarationFragment@@authorities=attr.getAuthorities() @TO@ VariableDeclarationStatement@@List<GrantedAuthority> authorities=attr.getAuthorities(); @AT@ 2602 @LENGTH@ 35
------------------INS SimpleName@@authorities @TO@ VariableDeclarationFragment@@authorities=attr.getAuthorities() @AT@ 2602 @LENGTH@ 11
------------------INS MethodInvocation@@attr.getAuthorities() @TO@ VariableDeclarationFragment@@authorities=attr.getAuthorities() @AT@ 2616 @LENGTH@ 21
---------------------MOV SimpleName@@Name:attr @TO@ MethodInvocation@@attr.getAuthorities() @AT@ 2688 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@attr.getAuthorities() @AT@ 2693 @LENGTH@ 16
------------INS ExpressionStatement@@MethodInvocation:users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build()) @TO@ LambdaExpression@@(name,property) -> {
  editor.setAsText(property);
  UserAttribute attr=(UserAttribute)editor.getValue();
  Assert.state(attr != null,() -> "The entry with username '" + name + "' and value '"+ property+ "' could not be converted to a UserDetails.");
  String password=attr.getPassword();
  boolean disabled=!attr.isEnabled();
  List<GrantedAuthority> authorities=attr.getAuthorities();
  users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build());
}
 @AT@ 2642 @LENGTH@ 106
---------------MOV MethodInvocation@@users.add(user) @TO@ ExpressionStatement@@MethodInvocation:users.add(User.withUsername(name).password(password).disabled(disabled).authorities(authorities).build()) @AT@ 2728 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultingRDF.size(),28) @TO@ MethodInvocation:assertEquals(28,resultingRDF.size()) @AT@ 1973 @LENGTH@ 38
---UPD MethodInvocation@@assertEquals(resultingRDF.size(),28) @TO@ assertEquals(28,resultingRDF.size()) @AT@ 1973 @LENGTH@ 37
------UPD SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @TO@ MethodName:assertEquals:[28, resultingRDF.size()] @AT@ 1973 @LENGTH@ 37
---------INS NumberLiteral@@28 @TO@ SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @AT@ 1986 @LENGTH@ 2
---------DEL NumberLiteral@@28 @AT@ 2007 @LENGTH@ 2


UPD VariableDeclarationStatement@@final Map<String,String> variables=((SimpDestinationMessageMatcher)this.matcher).extractPathVariables(message); @TO@ Map<String,String> variables=((SimpDestinationMessageMatcher)this.matcher).extractPathVariables(message); @AT@ 2427 @LENGTH@ 121
---DEL Modifier@@final @AT@ 2427 @LENGTH@ 5


UPD Block@@ThenBody:{  int count=0;  Iterator<BlockingQueueConsumer> consumerIterator=this.consumers.iterator();  while (consumerIterator.hasNext()) {    BlockingQueueConsumer consumer=consumerIterator.next();    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer);    }    consumer.basicCancel(true);    consumerIterator.remove();    count++;  }  this.addAndStartConsumers(count);} @TO@ ThenBody:{  int count=0;  Iterator<BlockingQueueConsumer> consumerIterator=this.consumers.iterator();  while (consumerIterator.hasNext()) {    BlockingQueueConsumer consumer=consumerIterator.next();    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer);    }    consumer.basicCancel(true);    consumerIterator.remove();    count++;  }  try {    this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS);  } catch (  InterruptedException e) {    Thread.currentThread().interrupt();  }  addAndStartConsumers(count);} @AT@ 29097 @LENGTH@ 447
---UPD ExpressionStatement@@MethodInvocation:this.addAndStartConsumers(count) @TO@ MethodInvocation:addAndStartConsumers(count) @AT@ 29506 @LENGTH@ 33
------UPD MethodInvocation@@this.addAndStartConsumers(count) @TO@ addAndStartConsumers(count) @AT@ 29506 @LENGTH@ 32
---------DEL ThisExpression@@this @AT@ 29506 @LENGTH@ 4
---INS TryStatement@@try {  this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS);} catch (InterruptedException e) {  Thread.currentThread().interrupt();} @TO@ Block@@ThenBody:{  int count=0;  Iterator<BlockingQueueConsumer> consumerIterator=this.consumers.iterator();  while (consumerIterator.hasNext()) {    BlockingQueueConsumer consumer=consumerIterator.next();    if (logger.isDebugEnabled()) {      logger.debug("Queues changed; stopping consumer: " + consumer);    }    consumer.basicCancel(true);    consumerIterator.remove();    count++;  }  this.addAndStartConsumers(count);} @AT@ 29535 @LENGTH@ 174
------INS ExpressionStatement@@MethodInvocation:this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS) @TO@ TryStatement@@try {  this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS);} catch (InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 29546 @LENGTH@ 73
---------INS MethodInvocation@@this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS) @TO@ ExpressionStatement@@MethodInvocation:this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS) @AT@ 29546 @LENGTH@ 72
------------INS FieldAccess@@this.cancellationLock @TO@ MethodInvocation@@this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS) @AT@ 29546 @LENGTH@ 21
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.cancellationLock @AT@ 29546 @LENGTH@ 4
---------------INS SimpleName@@cancellationLock @TO@ FieldAccess@@this.cancellationLock @AT@ 29551 @LENGTH@ 16
------------INS SimpleName@@MethodName:await:[getShutdownTimeout(), TimeUnit.MILLISECONDS] @TO@ MethodInvocation@@this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS) @AT@ 29568 @LENGTH@ 50
---------------INS MethodInvocation@@MethodName:getShutdownTimeout:[] @TO@ SimpleName@@MethodName:await:[getShutdownTimeout(), TimeUnit.MILLISECONDS] @AT@ 29574 @LENGTH@ 20
---------------INS QualifiedName@@TimeUnit.MILLISECONDS @TO@ SimpleName@@MethodName:await:[getShutdownTimeout(), TimeUnit.MILLISECONDS] @AT@ 29596 @LENGTH@ 21
------------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 29596 @LENGTH@ 8
------------------INS SimpleName@@MILLISECONDS @TO@ QualifiedName@@TimeUnit.MILLISECONDS @AT@ 29605 @LENGTH@ 12
------INS CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();} @TO@ TryStatement@@try {  this.cancellationLock.await(getShutdownTimeout(),TimeUnit.MILLISECONDS);} catch (InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 29630 @LENGTH@ 79
---------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 29637 @LENGTH@ 22
------------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 29637 @LENGTH@ 20
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 29658 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @TO@ CatchClause@@catch (InterruptedException e) {  Thread.currentThread().interrupt();} @AT@ 29668 @LENGTH@ 35
------------INS MethodInvocation@@Thread.currentThread().interrupt() @TO@ ExpressionStatement@@MethodInvocation:Thread.currentThread().interrupt() @AT@ 29668 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 29668 @LENGTH@ 22
---------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 29668 @LENGTH@ 6
---------------INS SimpleName@@MethodName:interrupt:[] @TO@ MethodInvocation@@Thread.currentThread().interrupt() @AT@ 29691 @LENGTH@ 11


INS MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @TO@ TypeDeclaration@@[@Nested]Projection, ReactiveIntegrationTestBase @AT@ 91746 @LENGTH@ 415
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @AT@ 91741 @LENGTH@ 4
---INS SimpleName@@MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod @TO@ MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @AT@ 91746 @LENGTH@ 48
---INS SingleVariableDeclaration@@@Autowired ReactivePersonRepository repository @TO@ MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @AT@ 91795 @LENGTH@ 46
------INS SimpleType@@ReactivePersonRepository @TO@ SingleVariableDeclaration@@@Autowired ReactivePersonRepository repository @AT@ 91806 @LENGTH@ 24
------INS SimpleName@@repository @TO@ SingleVariableDeclaration@@@Autowired ReactivePersonRepository repository @AT@ 91831 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @AT@ 91849 @LENGTH@ 180
------INS MethodInvocation@@StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @AT@ 91849 @LENGTH@ 179
---------INS MethodInvocation@@MethodName:expectNext:[TEST_PERSON1_FIRST_NAME] @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @AT@ 91849 @LENGTH@ 156
------------INS SimpleName@@TEST_PERSON1_FIRST_NAME @TO@ MethodInvocation@@MethodName:expectNext:[TEST_PERSON1_FIRST_NAME] @AT@ 91981 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:create:[repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)] @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @AT@ 91849 @LENGTH@ 114
------------INS MethodInvocation@@repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName) @TO@ MethodInvocation@@MethodName:create:[repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)] @AT@ 91869 @LENGTH@ 93
---------------INS MethodInvocation@@MethodName:findOneByFirstName:[TEST_PERSON1_FIRST_NAME] @TO@ MethodInvocation@@repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName) @AT@ 91869 @LENGTH@ 54
------------------INS SimpleName@@TEST_PERSON1_FIRST_NAME @TO@ MethodInvocation@@MethodName:findOneByFirstName:[TEST_PERSON1_FIRST_NAME] @AT@ 91899 @LENGTH@ 23
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName) @AT@ 91869 @LENGTH@ 10
---------------INS SimpleName@@MethodName:map:[DtoPersonProjection::getFirstName] @TO@ MethodInvocation@@repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName) @AT@ 91924 @LENGTH@ 38
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @AT@ 91849 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName(TEST_PERSON1_FIRST_NAME).map(DtoPersonProjection::getFirstName)).expectNext(TEST_PERSON1_FIRST_NAME).verifyComplete() @AT@ 92012 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @TO@ MethodDeclaration@@void, MethodName:mapsOptionalDtoProjectionWithDerivedFinderMethod, @Autowired ReactivePersonRepository repository,  @AT@ 92034 @LENGTH@ 123
------INS MethodInvocation@@StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @AT@ 92034 @LENGTH@ 122
---------INS MethodInvocation@@MethodName:create:[repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)] @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @AT@ 92034 @LENGTH@ 99
------------INS MethodInvocation@@repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName) @TO@ MethodInvocation@@MethodName:create:[repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)] @AT@ 92054 @LENGTH@ 78
---------------INS MethodInvocation@@MethodName:findOneByFirstName:["foobar"] @TO@ MethodInvocation@@repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName) @AT@ 92054 @LENGTH@ 39
------------------INS StringLiteral@@"foobar" @TO@ MethodInvocation@@MethodName:findOneByFirstName:["foobar"] @AT@ 92084 @LENGTH@ 8
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName) @AT@ 92054 @LENGTH@ 10
---------------INS SimpleName@@MethodName:map:[DtoPersonProjection::getFirstName] @TO@ MethodInvocation@@repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName) @AT@ 92094 @LENGTH@ 38
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @AT@ 92034 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(repository.findOneByFirstName("foobar").map(DtoPersonProjection::getFirstName)).verifyComplete() @AT@ 92140 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 1912 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1912 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1919 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1487 @LENGTH@ 50
---UPD MethodInvocation@@assertTrue(oneExchangeDone.matchesMockWaitTime()) @TO@ assertTrue(oneExchangeDone.matchesWaitTime()) @AT@ 1487 @LENGTH@ 49
------UPD SimpleName@@MethodName:assertTrue:[oneExchangeDone.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[oneExchangeDone.matchesWaitTime()] @AT@ 1487 @LENGTH@ 49
---------UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1498 @LENGTH@ 37
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1514 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:start?asyncConsumer=true").choice().when(body().contains("Camel")).to("async:camel?delay=2000").inOut("activemq:queue:camel").to("mock:result").otherwise().to("log:other").to("mock:result") @TO@ MethodInvocation:from("activemq:queue:start?asyncConsumer=true").choice().when(body().contains("Camel")).to("async:camel?delay=2000").to(ExchangePattern.InOut,"activemq:queue:camel").to("mock:result").otherwise().to("log:other").to("mock:result") @AT@ 2592 @LENGTH@ 411
---UPD MethodInvocation@@from("activemq:queue:start?asyncConsumer=true").choice().when(body().contains("Camel")).to("async:camel?delay=2000").inOut("activemq:queue:camel").to("mock:result").otherwise().to("log:other").to("mock:result") @TO@ from("activemq:queue:start?asyncConsumer=true").choice().when(body().contains("Camel")).to("async:camel?delay=2000").to(ExchangePattern.InOut,"activemq:queue:camel").to("mock:result").otherwise().to("log:other").to("mock:result") @AT@ 2592 @LENGTH@ 410
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:camel"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:camel"] @AT@ 2592 @LENGTH@ 246
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:camel"] @AT@ 2853 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2853 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2869 @LENGTH@ 5


UPD ReturnStatement@@InfixExpression:"OrServerWebExchangeMatcher{" + "matchers=" + this.matchers + '}' @TO@ InfixExpression:"OrServerWebExchangeMatcher{matchers=" + this.matchers + '}' @AT@ 2203 @LENGTH@ 73
---UPD InfixExpression@@"OrServerWebExchangeMatcher{" + "matchers=" + this.matchers + '}' @TO@ "OrServerWebExchangeMatcher{matchers=" + this.matchers + '}' @AT@ 2210 @LENGTH@ 65
------DEL InfixExpression@@"OrServerWebExchangeMatcher{" + "matchers=" @AT@ 2210 @LENGTH@ 43
---------DEL StringLiteral@@"matchers=" @AT@ 2242 @LENGTH@ 11
------MOV StringLiteral@@"OrServerWebExchangeMatcher{" @TO@ InfixExpression@@"OrServerWebExchangeMatcher{" + "matchers=" + this.matchers + '}' @AT@ 2210 @LENGTH@ 29
------MOV Operator@@+ @TO@ InfixExpression@@"OrServerWebExchangeMatcher{" + "matchers=" + this.matchers + '}' @AT@ 2239 @LENGTH@ 1
------DEL Operator@@+ @AT@ 2253 @LENGTH@ 1


UPD FieldDeclaration@@private, ServerAccessDeniedHandler, [defaultHandler=(exchange,e) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
] @TO@ private, ServerAccessDeniedHandler, [defaultHandler=(exchange,ex) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
] @AT@ 1455 @LENGTH@ 182
---UPD VariableDeclarationFragment@@defaultHandler=(exchange,e) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
 @TO@ defaultHandler=(exchange,ex) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
 @AT@ 1489 @LENGTH@ 147
------UPD LambdaExpression@@(exchange,e) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
 @TO@ (exchange,ex) -> {
  exchange.getResponse().setStatusCode(HttpStatus.FORBIDDEN);
  return exchange.getResponse().setComplete();
}
 @AT@ 1506 @LENGTH@ 130
---------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 1517 @LENGTH@ 1
------------UPD SimpleName@@e @TO@ ex @AT@ 1517 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn) @TO@ MethodInvocation:this.logger.debug(LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)) @AT@ 2592 @LENGTH@ 98
---UPD MethodInvocation@@this.logger.debug("Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn) @TO@ LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn) @AT@ 2592 @LENGTH@ 97
------DEL FieldAccess@@this.logger @AT@ 2592 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 2592 @LENGTH@ 4
---------DEL SimpleName@@logger @AT@ 2597 @LENGTH@ 6
------UPD SimpleName@@MethodName:debug:["Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn] @TO@ MethodName:format:["Couldn't read role attribute '%s' for user $s", this.roleAttributes[i], dn] @AT@ 2604 @LENGTH@ 85
---------DEL InfixExpression@@"Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn @AT@ 2610 @LENGTH@ 78
------------DEL StringLiteral@@"Couldn't read role attribute '" @AT@ 2610 @LENGTH@ 32
------------DEL Operator@@+ @AT@ 2642 @LENGTH@ 1
------------DEL StringLiteral@@"' for user " @AT@ 2670 @LENGTH@ 13
------------DEL SimpleName@@dn @AT@ 2686 @LENGTH@ 2
---------MOV ArrayAccess@@this.roleAttributes[i] @TO@ SimpleName@@MethodName:debug:["Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn] @AT@ 2645 @LENGTH@ 22
---------INS StringLiteral@@"Couldn't read role attribute '%s' for user $s" @TO@ SimpleName@@MethodName:debug:["Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn] @AT@ 2696 @LENGTH@ 47
---------INS SimpleName@@dn @TO@ SimpleName@@MethodName:debug:["Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn] @AT@ 2769 @LENGTH@ 2
------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@this.logger.debug("Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn) @AT@ 2678 @LENGTH@ 10
---INS MethodInvocation@@this.logger.debug(LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug("Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn) @AT@ 2653 @LENGTH@ 120
------INS FieldAccess@@this.logger @TO@ MethodInvocation@@this.logger.debug(LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)) @AT@ 2653 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.logger @AT@ 2653 @LENGTH@ 4
---------INS SimpleName@@logger @TO@ FieldAccess@@this.logger @AT@ 2658 @LENGTH@ 6
------INS SimpleName@@MethodName:debug:[LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)] @TO@ MethodInvocation@@this.logger.debug(LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)) @AT@ 2665 @LENGTH@ 108
---------MOV MethodInvocation@@this.logger.debug("Couldn't read role attribute '" + this.roleAttributes[i] + "' for user "+ dn) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Couldn't read role attribute '%s' for user $s",this.roleAttributes[i],dn)] @AT@ 2592 @LENGTH@ 97


UPD ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),25) @TO@ MethodInvocation:assertEquals(25,parse.size()) @AT@ 2437 @LENGTH@ 31
---UPD MethodInvocation@@assertEquals(parse.size(),25) @TO@ assertEquals(25,parse.size()) @AT@ 2437 @LENGTH@ 30
------UPD SimpleName@@MethodName:assertEquals:[parse.size(), 25] @TO@ MethodName:assertEquals:[25, parse.size()] @AT@ 2437 @LENGTH@ 30
---------INS NumberLiteral@@25 @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 25] @AT@ 2450 @LENGTH@ 2
---------DEL NumberLiteral@@25 @AT@ 2464 @LENGTH@ 2


UPD ThrowStatement@@ClassInstanceCreation:new NoSuchBeanDefinitionException(HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME,"A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring MVC are configured in a shared ApplicationContext.") @TO@ ClassInstanceCreation:new NoSuchBeanDefinitionException(HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME,"A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring "+ "MVC are configured in a shared ApplicationContext.") @AT@ 1657 @LENGTH@ 340
---UPD ClassInstanceCreation@@NoSuchBeanDefinitionException[HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME, "A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring MVC are configured in a shared ApplicationContext."] @TO@ NoSuchBeanDefinitionException[HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME, "A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring "+ "MVC are configured in a shared ApplicationContext."] @AT@ 1663 @LENGTH@ 333
------UPD InfixExpression@@"A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring MVC are configured in a shared ApplicationContext." @TO@ "A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring "+ "MVC are configured in a shared ApplicationContext." @AT@ 1737 @LENGTH@ 258
---------UPD StringLiteral@@" is required to use MvcRequestMatcher. Please ensure Spring Security & Spring MVC are configured in a shared ApplicationContext." @TO@ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring " @AT@ 1865 @LENGTH@ 130
---------INS StringLiteral@@"MVC are configured in a shared ApplicationContext." @TO@ InfixExpression@@"A Bean named " + HANDLER_MAPPING_INTROSPECTOR_BEAN_NAME + " of type "+ HandlerMappingIntrospector.class.getName()+ " is required to use MvcRequestMatcher. Please ensure Spring Security & Spring MVC are configured in a shared ApplicationContext." @AT@ 1964 @LENGTH@ 52


UPD ExpressionStatement@@MethodInvocation:assertEquals(context.get("org.apache.cxf.message.Message.RESPONSE_CODE"),200,"Should get the response code") @TO@ MethodInvocation:assertEquals(200,context.get("org.apache.cxf.message.Message.RESPONSE_CODE"),"Should get the response code") @AT@ 2904 @LENGTH@ 111
---UPD MethodInvocation@@assertEquals(context.get("org.apache.cxf.message.Message.RESPONSE_CODE"),200,"Should get the response code") @TO@ assertEquals(200,context.get("org.apache.cxf.message.Message.RESPONSE_CODE"),"Should get the response code") @AT@ 2904 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertEquals:[context.get("org.apache.cxf.message.Message.RESPONSE_CODE"), 200, "Should get the response code"] @TO@ MethodName:assertEquals:[200, context.get("org.apache.cxf.message.Message.RESPONSE_CODE"), "Should get the response code"] @AT@ 2904 @LENGTH@ 110
---------MOV MethodInvocation@@context.get("org.apache.cxf.message.Message.RESPONSE_CODE") @TO@ SimpleName@@MethodName:assertEquals:[context.get("org.apache.cxf.message.Message.RESPONSE_CODE"), 200, "Should get the response code"] @AT@ 2917 @LENGTH@ 59


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]LatchCountDownAndCallRealMethodAnswer, ForwardsInvocations @TO@ [public]LatchCountDownAndCallRealMethodAnswer, ForwardsInvocations @AT@ 1247 @LENGTH@ 1983
---DEL SingleMemberAnnotation@@@SuppressWarnings("serial") @AT@ 1247 @LENGTH@ 27


UPD TypeDeclaration@@[public]OpenIDAuthenticationFilterTests,  @TO@ [@Deprecated, public]OpenIDAuthenticationFilterTests,  @AT@ 1666 @LENGTH@ 3017
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OpenIDAuthenticationFilterTests,  @AT@ 1666 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertNotNull(receivedTweet.getId()) @TO@ MethodInvocation:assertNotEquals(0,receivedTweet.getId()) @AT@ 2790 @LENGTH@ 37
---UPD MethodInvocation@@assertNotNull(receivedTweet.getId()) @TO@ assertNotEquals(0,receivedTweet.getId()) @AT@ 2790 @LENGTH@ 36
------UPD SimpleName@@MethodName:assertNotNull:[receivedTweet.getId()] @TO@ MethodName:assertNotEquals:[0, receivedTweet.getId()] @AT@ 2790 @LENGTH@ 36
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertNotNull:[receivedTweet.getId()] @AT@ 2870 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:context.buffer=new byte[getDefaultBufferSize()] @TO@ Assignment:context.buffer=new byte[Math.max(size,getDefaultBufferSize())] @AT@ 22288 @LENGTH@ 50
---UPD Assignment@@context.buffer=new byte[getDefaultBufferSize()] @TO@ context.buffer=new byte[Math.max(size,getDefaultBufferSize())] @AT@ 22288 @LENGTH@ 49
------UPD ArrayCreation@@new byte[getDefaultBufferSize()] @TO@ new byte[Math.max(size,getDefaultBufferSize())] @AT@ 22305 @LENGTH@ 32
---------INS MethodInvocation@@Math.max(size,getDefaultBufferSize()) @TO@ ArrayCreation@@new byte[getDefaultBufferSize()] @AT@ 22314 @LENGTH@ 38
------------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.max(size,getDefaultBufferSize()) @AT@ 22314 @LENGTH@ 4
------------INS SimpleName@@MethodName:max:[size, getDefaultBufferSize()] @TO@ MethodInvocation@@Math.max(size,getDefaultBufferSize()) @AT@ 22319 @LENGTH@ 33
---------------INS SimpleName@@size @TO@ SimpleName@@MethodName:max:[size, getDefaultBufferSize()] @AT@ 22323 @LENGTH@ 4
---------------INS MethodInvocation@@MethodName:getDefaultBufferSize:[] @TO@ SimpleName@@MethodName:max:[size, getDefaultBufferSize()] @AT@ 22329 @LENGTH@ 22
---------DEL MethodInvocation@@MethodName:getDefaultBufferSize:[] @AT@ 22314 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2633 @LENGTH@ 104
---UPD MethodInvocation@@LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2633 @LENGTH@ 103
------UPD SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @TO@ MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception.getMessage(), exception] @AT@ 2640 @LENGTH@ 96
---------INS MethodInvocation@@exception.getMessage() @TO@ SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @AT@ 2750 @LENGTH@ 22
------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getMessage() @AT@ 2750 @LENGTH@ 9
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exception.getMessage() @AT@ 2760 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.DOGS);
  pets.remove(TypeOfPet.DOGS);
  pets.get(TypeOfPet.CATS).add(new Pet("Delilah"));
  pets.put(TypeOfPet.FISH,Collections.singletonList(new Pet("Nemo")));
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove(TypeOfHobby.ACTIVE);
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put(TypeOfHobby.WATCHING,Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.FISH);
  assertThat(pets.get(TypeOfPet.CATS)).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get(TypeOfPet.FISH)).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys(TypeOfHobby.WATCHING);
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @TO@ MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.DOGS);
  pets.remove(TypeOfPet.DOGS);
  pets.get(TypeOfPet.CATS).add(new Pet("Delilah"));
  pets.put(TypeOfPet.FISH,Collections.singletonList(new Pet("Nemo")));
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove(TypeOfHobby.ACTIVE);
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put(TypeOfHobby.WATCHING,Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.FISH);
  assertThat(pets.get(TypeOfPet.CATS)).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get(TypeOfPet.FISH)).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys(TypeOfHobby.WATCHING);
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6894 @LENGTH@ 1693
---UPD MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.DOGS);
  pets.remove(TypeOfPet.DOGS);
  pets.get(TypeOfPet.CATS).add(new Pet("Delilah"));
  pets.put(TypeOfPet.FISH,Collections.singletonList(new Pet("Nemo")));
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove(TypeOfHobby.ACTIVE);
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put(TypeOfHobby.WATCHING,Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.FISH);
  assertThat(pets.get(TypeOfPet.CATS)).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get(TypeOfPet.FISH)).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys(TypeOfHobby.WATCHING);
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @TO@ repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.DOGS);
  pets.remove(TypeOfPet.DOGS);
  pets.get(TypeOfPet.CATS).add(new Pet("Delilah"));
  pets.put(TypeOfPet.FISH,Collections.singletonList(new Pet("Nemo")));
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove(TypeOfHobby.ACTIVE);
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put(TypeOfHobby.WATCHING,Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.FISH);
  assertThat(pets.get(TypeOfPet.CATS)).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get(TypeOfPet.FISH)).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys(TypeOfHobby.WATCHING);
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6894 @LENGTH@ 1692
------INS MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @TO@ MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.DOGS);
  pets.remove(TypeOfPet.DOGS);
  pets.get(TypeOfPet.CATS).add(new Pet("Delilah"));
  pets.put(TypeOfPet.FISH,Collections.singletonList(new Pet("Nemo")));
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove(TypeOfHobby.ACTIVE);
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put(TypeOfHobby.WATCHING,Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<TypeOfPet,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys(TypeOfPet.CATS,TypeOfPet.FISH);
  assertThat(pets.get(TypeOfPet.CATS)).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get(TypeOfPet.FISH)).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<TypeOfHobby,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys(TypeOfHobby.WATCHING);
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get(TypeOfHobby.WATCHING)).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6985 @LENGTH@ 896
---------INS LambdaExpression@@p -> repository.findById(p.getId()) @TO@ MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @AT@ 7845 @LENGTH@ 35
------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 7845 @LENGTH@ 1
---------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 7845 @LENGTH@ 1
------------INS MethodInvocation@@repository.findById(p.getId()) @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 7850 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 7850 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findById:[p.getId()] @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 7861 @LENGTH@ 19
------------------INS MethodInvocation@@p.getId() @TO@ SimpleName@@MethodName:findById:[p.getId()] @AT@ 7870 @LENGTH@ 9
---------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getId() @AT@ 7870 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@p.getId() @AT@ 7872 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("activemq:queue:inbox?messageListenerContainerFactory=#myListenerContainerFactory").to("mock:inbox").inOnly("activemq:topic:order").bean("orderService","handleOrder") @TO@ MethodInvocation:from("activemq:queue:inbox?messageListenerContainerFactory=#myListenerContainerFactory").to("mock:inbox").to(ExchangePattern.InOnly,"activemq:topic:order").bean("orderService","handleOrder") @AT@ 3744 @LENGTH@ 230
---UPD MethodInvocation@@from("activemq:queue:inbox?messageListenerContainerFactory=#myListenerContainerFactory").to("mock:inbox").inOnly("activemq:topic:order").bean("orderService","handleOrder") @TO@ from("activemq:queue:inbox?messageListenerContainerFactory=#myListenerContainerFactory").to("mock:inbox").to(ExchangePattern.InOnly,"activemq:topic:order").bean("orderService","handleOrder") @AT@ 3744 @LENGTH@ 229
------UPD MethodInvocation@@MethodName:inOnly:["activemq:topic:order"] @TO@ MethodName:to:[ExchangePattern.InOnly, "activemq:topic:order"] @AT@ 3744 @LENGTH@ 161
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:["activemq:topic:order"] @AT@ 3878 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3878 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3894 @LENGTH@ 6


UPD ExpressionStatement@@ClassInstanceCreation:new AndMessageMatcher<>((MessageMatcher<Object>[])new MessageMatcher[0]) @TO@ ClassInstanceCreation:new AndMessageMatcher<>(new MessageMatcher[0]) @AT@ 1724 @LENGTH@ 74
---UPD ClassInstanceCreation@@AndMessageMatcher<>[(MessageMatcher<Object>[])new MessageMatcher[0]] @TO@ AndMessageMatcher<>[new MessageMatcher[0]] @AT@ 1724 @LENGTH@ 73
------DEL CastExpression@@(MessageMatcher<Object>[])new MessageMatcher[0] @AT@ 1748 @LENGTH@ 48
---------DEL ArrayType@@MessageMatcher<Object>[] @AT@ 1749 @LENGTH@ 24
------------DEL ParameterizedType@@MessageMatcher<Object> @AT@ 1749 @LENGTH@ 22
---------------DEL SimpleType@@MessageMatcher @AT@ 1749 @LENGTH@ 14
---------------DEL SimpleType@@Object @AT@ 1764 @LENGTH@ 6
------MOV ArrayCreation@@new MessageMatcher[0] @TO@ ClassInstanceCreation@@AndMessageMatcher<>[(MessageMatcher<Object>[])new MessageMatcher[0]] @AT@ 1775 @LENGTH@ 21


UPD IfStatement@@if (request.indexOf(ECHO_METHOD) > 0) {  exchange.getOut().setBody(ECHO_RESPONSE);} else {  exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE);} @TO@ if (request.indexOf(ECHO_METHOD) > 0) {  exchange.getMessage().setBody(ECHO_RESPONSE);} else {  exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE);} @AT@ 3810 @LENGTH@ 266
---UPD Block@@ThenBody:{  exchange.getOut().setBody(ECHO_RESPONSE);} @TO@ ThenBody:{  exchange.getMessage().setBody(ECHO_RESPONSE);} @AT@ 3848 @LENGTH@ 97
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(ECHO_RESPONSE) @TO@ MethodInvocation:exchange.getMessage().setBody(ECHO_RESPONSE) @AT@ 3878 @LENGTH@ 41
---------UPD MethodInvocation@@exchange.getOut().setBody(ECHO_RESPONSE) @TO@ exchange.getMessage().setBody(ECHO_RESPONSE) @AT@ 3878 @LENGTH@ 40
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3878 @LENGTH@ 17
---UPD Block@@ElseBody:{  exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE);} @TO@ ElseBody:{  exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE);} @AT@ 3951 @LENGTH@ 125
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE) @TO@ MethodInvocation:exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE) @AT@ 4001 @LENGTH@ 49
---------UPD MethodInvocation@@exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE) @TO@ exchange.getMessage().setBody(ECHO_BOOLEAN_RESPONSE) @AT@ 4001 @LENGTH@ 48
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4001 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(5,readOpsDelta) @TO@ MethodInvocation:assertEquals(4,readOpsDelta) @AT@ 157307 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals(5,readOpsDelta) @TO@ assertEquals(4,readOpsDelta) @AT@ 157307 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertEquals:[5, readOpsDelta] @TO@ MethodName:assertEquals:[4, readOpsDelta] @AT@ 157307 @LENGTH@ 29
---------UPD NumberLiteral@@5 @TO@ 4 @AT@ 157320 @LENGTH@ 1


MOV FieldDeclaration@@private, static, final, int, [DEFAULT_ITERATIONS=1024] @TO@ TypeDeclaration@@[@Deprecated, public, final]StandardPasswordEncoder, [PasswordEncoder] @AT@ 3927 @LENGTH@ 51


UPD FieldDeclaration@@private, static, final, char[], [HEX={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'}] @TO@ private, static, final, char[], [HEX="0123456789abcdef".toCharArray()] @AT@ 914 @LENGTH@ 120
---UPD VariableDeclarationFragment@@HEX={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'} @TO@ HEX="0123456789abcdef".toCharArray() @AT@ 942 @LENGTH@ 91
------DEL ArrayInitializer@@{'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'} @AT@ 948 @LENGTH@ 85
---------DEL CharacterLiteral@@'0' @AT@ 950 @LENGTH@ 3
---------DEL CharacterLiteral@@'1' @AT@ 955 @LENGTH@ 3
---------DEL CharacterLiteral@@'2' @AT@ 960 @LENGTH@ 3
---------DEL CharacterLiteral@@'3' @AT@ 965 @LENGTH@ 3
---------DEL CharacterLiteral@@'4' @AT@ 970 @LENGTH@ 3
---------DEL CharacterLiteral@@'5' @AT@ 975 @LENGTH@ 3
---------DEL CharacterLiteral@@'6' @AT@ 980 @LENGTH@ 3
---------DEL CharacterLiteral@@'7' @AT@ 985 @LENGTH@ 3
---------DEL CharacterLiteral@@'8' @AT@ 990 @LENGTH@ 3
---------DEL CharacterLiteral@@'9' @AT@ 995 @LENGTH@ 3
---------DEL CharacterLiteral@@'a' @AT@ 1000 @LENGTH@ 3
---------DEL CharacterLiteral@@'b' @AT@ 1005 @LENGTH@ 3
---------DEL CharacterLiteral@@'c' @AT@ 1010 @LENGTH@ 3
---------DEL CharacterLiteral@@'d' @AT@ 1015 @LENGTH@ 3
---------DEL CharacterLiteral@@'e' @AT@ 1020 @LENGTH@ 3
---------DEL CharacterLiteral@@'f' @AT@ 1028 @LENGTH@ 3
------INS MethodInvocation@@"0123456789abcdef".toCharArray() @TO@ VariableDeclarationFragment@@HEX={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'} @AT@ 948 @LENGTH@ 32
---------INS StringLiteral@@"0123456789abcdef" @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 948 @LENGTH@ 18
---------INS SimpleName@@MethodName:toCharArray:[] @TO@ MethodInvocation@@"0123456789abcdef".toCharArray() @AT@ 967 @LENGTH@ 13


UPD SuperConstructorInvocation@@super(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName())));
 @TO@ super(ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.getName()).append(configuration.getDeploymentName()));
 @AT@ 1577 @LENGTH@ 126
---UPD MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName())) @TO@ ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.getName()).append(configuration.getDeploymentName()) @AT@ 1583 @LENGTH@ 118
------INS MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.ROUTE_LOCATOR.getName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName())) @AT@ 1583 @LENGTH@ 85
---------INS MethodInvocation@@WebDeploymentRequirement.ROUTE_LOCATOR.getName() @TO@ MethodInvocation@@MethodName:parseServiceName:[WebDeploymentRequirement.ROUTE_LOCATOR.getName()] @AT@ 1619 @LENGTH@ 48
------------MOV QualifiedName@@Name:WebDeploymentRequirement.ROUTE_LOCATOR @TO@ MethodInvocation@@WebDeploymentRequirement.ROUTE_LOCATOR.getName() @AT@ 1619 @LENGTH@ 38
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@WebDeploymentRequirement.ROUTE_LOCATOR.getName() @AT@ 1658 @LENGTH@ 9
------DEL SimpleName@@MethodName:parseServiceName:[WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName())] @AT@ 1602 @LENGTH@ 99
---------DEL MethodInvocation@@WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName()) @AT@ 1619 @LENGTH@ 81
------MOV SimpleName@@MethodName:resolve:[configuration.getDeploymentName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(WebDeploymentRequirement.ROUTE_LOCATOR.resolve(configuration.getDeploymentName())) @AT@ 1658 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:assertEquals(context.getTypeConverter().convertTo(String.class,out),"Something went wrong but we dont care") @TO@ MethodInvocation:assertEquals("Something went wrong but we dont care",context.getTypeConverter().convertTo(String.class,out)) @AT@ 1992 @LENGTH@ 111
---UPD MethodInvocation@@assertEquals(context.getTypeConverter().convertTo(String.class,out),"Something went wrong but we dont care") @TO@ assertEquals("Something went wrong but we dont care",context.getTypeConverter().convertTo(String.class,out)) @AT@ 1992 @LENGTH@ 110
------UPD SimpleName@@MethodName:assertEquals:[context.getTypeConverter().convertTo(String.class,out), "Something went wrong but we dont care"] @TO@ MethodName:assertEquals:["Something went wrong but we dont care", context.getTypeConverter().convertTo(String.class,out)] @AT@ 1992 @LENGTH@ 110
---------MOV MethodInvocation@@context.getTypeConverter().convertTo(String.class,out) @TO@ SimpleName@@MethodName:assertEquals:[context.getTypeConverter().convertTo(String.class,out), "Something went wrong but we dont care"] @AT@ 2005 @LENGTH@ 55


INS MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @TO@ TypeDeclaration@@[public]MapReactiveUserDetailsService, [ReactiveUserDetailsService, ReactiveUserDetailsPasswordService] @AT@ 2491 @LENGTH@ 159
---INS Modifier@@private @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2491 @LENGTH@ 7
---INS SimpleType@@UserDetails @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2499 @LENGTH@ 11
---INS SimpleName@@MethodName:withNewPassword @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2511 @LENGTH@ 15
---INS SingleVariableDeclaration@@UserDetails userDetails @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2527 @LENGTH@ 23
------INS SimpleType@@UserDetails @TO@ SingleVariableDeclaration@@UserDetails userDetails @AT@ 2527 @LENGTH@ 11
------INS SimpleName@@userDetails @TO@ SingleVariableDeclaration@@UserDetails userDetails @AT@ 2539 @LENGTH@ 11
---INS SingleVariableDeclaration@@String newPassword @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2552 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String newPassword @AT@ 2552 @LENGTH@ 6
------INS SimpleName@@newPassword @TO@ SingleVariableDeclaration@@String newPassword @AT@ 2559 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:User.withUserDetails(userDetails).password(newPassword).build() @TO@ MethodDeclaration@@private, UserDetails, MethodName:withNewPassword, UserDetails userDetails, String newPassword,  @AT@ 2576 @LENGTH@ 71
------INS MethodInvocation@@User.withUserDetails(userDetails).password(newPassword).build() @TO@ ReturnStatement@@MethodInvocation:User.withUserDetails(userDetails).password(newPassword).build() @AT@ 2583 @LENGTH@ 63
---------INS MethodInvocation@@MethodName:password:[newPassword] @TO@ MethodInvocation@@User.withUserDetails(userDetails).password(newPassword).build() @AT@ 2583 @LENGTH@ 55
------------INS SimpleName@@newPassword @TO@ MethodInvocation@@MethodName:password:[newPassword] @AT@ 2626 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:withUserDetails:[userDetails] @TO@ MethodInvocation@@User.withUserDetails(userDetails).password(newPassword).build() @AT@ 2583 @LENGTH@ 33
------------INS SimpleName@@userDetails @TO@ MethodInvocation@@MethodName:withUserDetails:[userDetails] @AT@ 2604 @LENGTH@ 11
---------INS SimpleName@@Name:User @TO@ MethodInvocation@@User.withUserDetails(userDetails).password(newPassword).build() @AT@ 2583 @LENGTH@ 4
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@User.withUserDetails(userDetails).password(newPassword).build() @AT@ 2639 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:start").transform(constant("Bye World")).inOnly("disruptor:log") @TO@ MethodInvocation:from("direct:start").transform(constant("Bye World")).to(ExchangePattern.InOnly,"disruptor:log") @AT@ 2068 @LENGTH@ 78
---UPD MethodInvocation@@from("direct:start").transform(constant("Bye World")).inOnly("disruptor:log") @TO@ from("direct:start").transform(constant("Bye World")).to(ExchangePattern.InOnly,"disruptor:log") @AT@ 2068 @LENGTH@ 77
------UPD SimpleName@@MethodName:inOnly:["disruptor:log"] @TO@ MethodName:to:[ExchangePattern.InOnly, "disruptor:log"] @AT@ 2122 @LENGTH@ 23
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ SimpleName@@MethodName:inOnly:["disruptor:log"] @AT@ 2166 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2166 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2182 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(count,4,"The message should be delivered 4 times") @TO@ MethodInvocation:assertEquals(4,count,"The message should be delivered 4 times") @AT@ 2473 @LENGTH@ 66
---UPD MethodInvocation@@assertEquals(count,4,"The message should be delivered 4 times") @TO@ assertEquals(4,count,"The message should be delivered 4 times") @AT@ 2473 @LENGTH@ 65
------UPD SimpleName@@MethodName:assertEquals:[count, 4, "The message should be delivered 4 times"] @TO@ MethodName:assertEquals:[4, count, "The message should be delivered 4 times"] @AT@ 2473 @LENGTH@ 65
---------INS NumberLiteral@@4 @TO@ SimpleName@@MethodName:assertEquals:[count, 4, "The message should be delivered 4 times"] @AT@ 2486 @LENGTH@ 1
---------DEL NumberLiteral@@4 @AT@ 2493 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true").to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @TO@ MethodInvocation:from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true").to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @AT@ 4190 @LENGTH@ 447
---UPD MethodInvocation@@from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").inOut("sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true").to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @TO@ from("direct:start").to("log:" + TEST_DESTINATION_NAME + ".in.log?showBody=true").to(ExchangePattern.InOut,"sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true").to("log:" + TEST_DESTINATION_NAME + ".out.log?showBody=true") @AT@ 4190 @LENGTH@ 446
------UPD MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true"] @TO@ MethodName:to:[ExchangePattern.InOut, "sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true"] @AT@ 4190 @LENGTH@ 359
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["sjms:queue:" + TEST_DESTINATION_NAME + ".request"+ "?namedReplyTo="+ TEST_DESTINATION_NAME+ ".response&consumerCount=20&producerCount=40&synchronous=true"] @AT@ 4366 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4366 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 4382 @LENGTH@ 5


INS IfStatement@@if (deploymentUnit.hasAttachment(CLASSES)) {  return;} @TO@ MethodDeclaration@@static, void, MethodName:handleParseAnnotations, final DeploymentUnit deploymentUnit,  @AT@ 2982 @LENGTH@ 235
---INS MethodInvocation@@deploymentUnit.hasAttachment(CLASSES) @TO@ IfStatement@@if (deploymentUnit.hasAttachment(CLASSES)) {  return;} @AT@ 2986 @LENGTH@ 37
------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.hasAttachment(CLASSES) @AT@ 2986 @LENGTH@ 14
------INS SimpleName@@MethodName:hasAttachment:[CLASSES] @TO@ MethodInvocation@@deploymentUnit.hasAttachment(CLASSES) @AT@ 3001 @LENGTH@ 22
---------INS SimpleName@@CLASSES @TO@ SimpleName@@MethodName:hasAttachment:[CLASSES] @AT@ 3015 @LENGTH@ 7
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (deploymentUnit.hasAttachment(CLASSES)) {  return;} @AT@ 3025 @LENGTH@ 192
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 3200 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(fromHandler.getFaultCount(),0,"Can't get the right fault count") @TO@ MethodInvocation:assertEquals(0,fromHandler.getFaultCount(),"Can't get the right fault count") @AT@ 3581 @LENGTH@ 80
---UPD MethodInvocation@@assertEquals(fromHandler.getFaultCount(),0,"Can't get the right fault count") @TO@ assertEquals(0,fromHandler.getFaultCount(),"Can't get the right fault count") @AT@ 3581 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertEquals:[fromHandler.getFaultCount(), 0, "Can't get the right fault count"] @TO@ MethodName:assertEquals:[0, fromHandler.getFaultCount(), "Can't get the right fault count"] @AT@ 3581 @LENGTH@ 79
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertEquals:[fromHandler.getFaultCount(), 0, "Can't get the right fault count"] @AT@ 3594 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 3623 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ MethodInvocation:assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 3247 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(response.getName(),"John","Get a wrong customer name") @TO@ assertEquals("John",response.getName(),"Get a wrong customer name") @AT@ 3247 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @TO@ MethodName:assertEquals:["John", response.getName(), "Get a wrong customer name"] @AT@ 3247 @LENGTH@ 69
---------INS StringLiteral@@"John" @TO@ SimpleName@@MethodName:assertEquals:[response.getName(), "John", "Get a wrong customer name"] @AT@ 3260 @LENGTH@ 6
---------DEL StringLiteral@@"John" @AT@ 3280 @LENGTH@ 6


DEL IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("PreAuthenticated J2EE principal: " + principal);} @AT@ 1455 @LENGTH@ 110
---DEL MethodInvocation@@this.logger.isDebugEnabled() @AT@ 1459 @LENGTH@ 28
------DEL FieldAccess@@this.logger @AT@ 1459 @LENGTH@ 11
---------DEL ThisExpression@@this @AT@ 1459 @LENGTH@ 4
---------DEL SimpleName@@logger @AT@ 1464 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1471 @LENGTH@ 16
---DEL Block@@ThenBody:{  this.logger.debug("PreAuthenticated J2EE principal: " + principal);} @AT@ 1489 @LENGTH@ 76
------DEL ExpressionStatement@@MethodInvocation:this.logger.debug("PreAuthenticated J2EE principal: " + principal) @AT@ 1494 @LENGTH@ 67


MOV IfStatement@@if (beans.size() > 1) {  throw new ApplicationContextException("More than one UserDetailsService registered. Please " + "use a specific Id reference in <remember-me/> <openid-login/> or <x509 /> elements.");} @TO@ MethodDeclaration@@private, UserDetailsService, MethodName:getUserDetailsService,  @AT@ 4186 @LENGTH@ 218


DEL MethodDeclaration@@default, CryptoCmsEndpointBuilder, MethodName:signer, List<Object> signer,  @AT@ 16839 @LENGTH@ 142
---DEL Modifier@@default @AT@ 16839 @LENGTH@ 7
---DEL SimpleType@@CryptoCmsEndpointBuilder @AT@ 16847 @LENGTH@ 24
---DEL SimpleName@@MethodName:signer @AT@ 16872 @LENGTH@ 6
---DEL SingleVariableDeclaration@@List<Object> signer @AT@ 16879 @LENGTH@ 19
------DEL ParameterizedType@@List<Object> @AT@ 16879 @LENGTH@ 12
---------DEL SimpleType@@List @AT@ 16879 @LENGTH@ 4
---------DEL SimpleType@@Object @AT@ 16884 @LENGTH@ 6
------DEL SimpleName@@signer @AT@ 16892 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:doSetProperty("signer",signer) @AT@ 16914 @LENGTH@ 32
------DEL MethodInvocation@@doSetProperty("signer",signer) @AT@ 16914 @LENGTH@ 31
---------DEL SimpleName@@MethodName:doSetProperty:["signer", signer] @AT@ 16914 @LENGTH@ 31
------------DEL StringLiteral@@"signer" @AT@ 16928 @LENGTH@ 8
------------DEL SimpleName@@signer @AT@ 16938 @LENGTH@ 6
---DEL ReturnStatement@@ThisExpression:this @AT@ 16959 @LENGTH@ 12
------DEL ThisExpression@@this @AT@ 16966 @LENGTH@ 4


UPD FieldDeclaration@@final, private, Set<Consumer>, [subscribers=ConcurrentHashMap.newKeySet()] @TO@ private, final, Set<Consumer>, [subscribers=ConcurrentHashMap.newKeySet()] @AT@ 1379 @LENGTH@ 72
---INS Modifier@@private @TO@ FieldDeclaration@@final, private, Set<Consumer>, [subscribers=ConcurrentHashMap.newKeySet()] @AT@ 1379 @LENGTH@ 7
---DEL Modifier@@private @AT@ 1385 @LENGTH@ 7


UPD Block@@ThenBody:{  final byte[] longNameData=getLongNameData();  if (longNameData == null) {    return null;  }  String name=zipEncoding.decode(longNameData);  if (currEntry.isDirectory() && !name.endsWith("/")) {    name+="/";  }  currEntry.setName(name);} @TO@ ThenBody:{  final byte[] longNameData=getLongNameData();  if (longNameData == null) {    return null;  }  final String name=zipEncoding.decode(longNameData);  currEntry.setName(name);  if (currEntry.isDirectory() && !name.endsWith("/")) {    currEntry.setName(name + "/");  }} @AT@ 13984 @LENGTH@ 566
---UPD VariableDeclarationStatement@@String name=zipEncoding.decode(longNameData); @TO@ final String name=zipEncoding.decode(longNameData); @AT@ 14347 @LENGTH@ 47
------INS Modifier@@final @TO@ VariableDeclarationStatement@@String name=zipEncoding.decode(longNameData); @AT@ 14347 @LENGTH@ 5
---UPD IfStatement@@if (currEntry.isDirectory() && !name.endsWith("/")) {  name+="/";} @TO@ if (currEntry.isDirectory() && !name.endsWith("/")) {  currEntry.setName(name + "/");} @AT@ 14407 @LENGTH@ 96
------UPD Block@@ThenBody:{  name+="/";} @TO@ ThenBody:{  currEntry.setName(name + "/");} @AT@ 14459 @LENGTH@ 44
---------UPD ExpressionStatement@@Assignment:name+="/" @TO@ MethodInvocation:currEntry.setName(name + "/") @AT@ 14477 @LENGTH@ 12
------------DEL Assignment@@name+="/" @AT@ 14477 @LENGTH@ 11
---------------DEL SimpleName@@name @AT@ 14477 @LENGTH@ 4
---------------DEL Operator@@+= @AT@ 14481 @LENGTH@ 2
---------------DEL StringLiteral@@"/" @AT@ 14485 @LENGTH@ 3
------------INS MethodInvocation@@currEntry.setName(name + "/") @TO@ ExpressionStatement@@Assignment:name+="/" @AT@ 14520 @LENGTH@ 29
---------------INS SimpleName@@Name:currEntry @TO@ MethodInvocation@@currEntry.setName(name + "/") @AT@ 14520 @LENGTH@ 9
---------------INS SimpleName@@MethodName:setName:[name + "/"] @TO@ MethodInvocation@@currEntry.setName(name + "/") @AT@ 14530 @LENGTH@ 19
------------------INS InfixExpression@@name + "/" @TO@ SimpleName@@MethodName:setName:[name + "/"] @AT@ 14538 @LENGTH@ 10
---------------------INS SimpleName@@name @TO@ InfixExpression@@name + "/" @AT@ 14538 @LENGTH@ 4
---------------------INS Operator@@+ @TO@ InfixExpression@@name + "/" @AT@ 14542 @LENGTH@ 1
---------------------INS StringLiteral@@"/" @TO@ InfixExpression@@name + "/" @AT@ 14545 @LENGTH@ 3
---MOV IfStatement@@if (currEntry.isDirectory() && !name.endsWith("/")) {  name+="/";} @TO@ Block@@ThenBody:{  final byte[] longNameData=getLongNameData();  if (longNameData == null) {    return null;  }  String name=zipEncoding.decode(longNameData);  if (currEntry.isDirectory() && !name.endsWith("/")) {    name+="/";  }  currEntry.setName(name);} @AT@ 14407 @LENGTH@ 96


INS TypeDeclaration@@SimpleEntityWithRelationshipARepository, [Neo4jRepository<SimpleEntityWithRelationshipA,Long>] @TO@ TypeDeclaration@@[@ExtendWith(Neo4jExtension.class), @SpringJUnitConfig, @DirtiesContext]RepositoryIT,  @AT@ 134379 @LENGTH@ 103
---INS SimpleName@@ClassName:SimpleEntityWithRelationshipARepository @TO@ TypeDeclaration@@SimpleEntityWithRelationshipARepository, [Neo4jRepository<SimpleEntityWithRelationshipA,Long>] @AT@ 134379 @LENGTH@ 39
---INS ParameterizedType@@Neo4jRepository<SimpleEntityWithRelationshipA,Long> @TO@ TypeDeclaration@@SimpleEntityWithRelationshipARepository, [Neo4jRepository<SimpleEntityWithRelationshipA,Long>] @AT@ 134427 @LENGTH@ 52
------INS SimpleType@@Neo4jRepository @TO@ ParameterizedType@@Neo4jRepository<SimpleEntityWithRelationshipA,Long> @AT@ 134427 @LENGTH@ 15
------INS SimpleType@@SimpleEntityWithRelationshipA @TO@ ParameterizedType@@Neo4jRepository<SimpleEntityWithRelationshipA,Long> @AT@ 134443 @LENGTH@ 29
------INS SimpleType@@Long @TO@ ParameterizedType@@Neo4jRepository<SimpleEntityWithRelationshipA,Long> @AT@ 134474 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("Hello " + name) @TO@ MethodInvocation:exchange.getMessage().setBody("Hello " + name) @AT@ 1318 @LENGTH@ 43
---UPD MethodInvocation@@exchange.getOut().setBody("Hello " + name) @TO@ exchange.getMessage().setBody("Hello " + name) @AT@ 1318 @LENGTH@ 42
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1318 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(xmlConverter.toSource(RESPONSE)) @TO@ MethodInvocation:exchange.getMessage().setBody(xmlConverter.toSource(RESPONSE)) @AT@ 3154 @LENGTH@ 59
---UPD MethodInvocation@@exchange.getOut().setBody(xmlConverter.toSource(RESPONSE)) @TO@ exchange.getMessage().setBody(xmlConverter.toSource(RESPONSE)) @AT@ 3154 @LENGTH@ 58
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3154 @LENGTH@ 17


INS IfStatement@@if (str == null || end == null) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:checkEndsWith, final String str, final String end,  @AT@ 6475 @LENGTH@ 69
---INS InfixExpression@@str == null || end == null @TO@ IfStatement@@if (str == null || end == null) {  return false;} @AT@ 6479 @LENGTH@ 26
------INS InfixExpression@@str == null @TO@ InfixExpression@@str == null || end == null @AT@ 6479 @LENGTH@ 11
---------INS SimpleName@@str @TO@ InfixExpression@@str == null @AT@ 6479 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@str == null @AT@ 6482 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@str == null @AT@ 6486 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@str == null || end == null @AT@ 6490 @LENGTH@ 2
------INS InfixExpression@@end == null @TO@ InfixExpression@@str == null || end == null @AT@ 6494 @LENGTH@ 11
---------INS SimpleName@@end @TO@ InfixExpression@@end == null @AT@ 6494 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@end == null @AT@ 6497 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@end == null @AT@ 6501 @LENGTH@ 4
---INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (str == null || end == null) {  return false;} @AT@ 6507 @LENGTH@ 37
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 6521 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 6528 @LENGTH@ 5


UPD VariableDeclarationStatement@@@SuppressWarnings("deprecation") PaddedBufferedBlockCipher blockCipher=new PaddedBufferedBlockCipher(new CBCBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()),new PKCS7Padding()); @TO@ PaddedBufferedBlockCipher blockCipher=new PaddedBufferedBlockCipher(new CBCBlockCipher(new org.bouncycastle.crypto.engines.AESFastEngine()),new PKCS7Padding()); @AT@ 2584 @LENGTH@ 203


UPD ExpressionStatement@@MethodInvocation:assertEquals(17,details.get(6).getLinePosition()) @TO@ MethodInvocation:assertEquals(21,details.get(6).getLinePosition()) @AT@ 3439 @LENGTH@ 51
---UPD MethodInvocation@@assertEquals(17,details.get(6).getLinePosition()) @TO@ assertEquals(21,details.get(6).getLinePosition()) @AT@ 3439 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertEquals:[17, details.get(6).getLinePosition()] @TO@ MethodName:assertEquals:[21, details.get(6).getLinePosition()] @AT@ 3439 @LENGTH@ 50
---------UPD NumberLiteral@@17 @TO@ 21 @AT@ 3452 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertEquals(list.size(),1,"Should get one message") @TO@ MethodInvocation:assertEquals(1,list.size(),"Should get one message") @AT@ 2882 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals(list.size(),1,"Should get one message") @TO@ assertEquals(1,list.size(),"Should get one message") @AT@ 2882 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:[list.size(), 1, "Should get one message"] @TO@ MethodName:assertEquals:[1, list.size(), "Should get one message"] @AT@ 2882 @LENGTH@ 54
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[list.size(), 1, "Should get one message"] @AT@ 2895 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 2908 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(1438,details.get(6).getAbsolutePosition()) @TO@ MethodInvocation:assertEquals(1454,details.get(6).getAbsolutePosition()) @AT@ 3373 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(1438,details.get(6).getAbsolutePosition()) @TO@ assertEquals(1454,details.get(6).getAbsolutePosition()) @AT@ 3373 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[1438, details.get(6).getAbsolutePosition()] @TO@ MethodName:assertEquals:[1454, details.get(6).getAbsolutePosition()] @AT@ 3373 @LENGTH@ 56
---------UPD NumberLiteral@@1438 @TO@ 1454 @AT@ 3386 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @TO@ TypeDeclaration@@ParameterBindingJsonReaderUnitTests,  @AT@ 12338 @LENGTH@ 302
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @AT@ 12338 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @AT@ 12345 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldParseRegexWithPlaceholderCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @AT@ 12350 @LENGTH@ 40
---INS VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC"); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @AT@ 12398 @LENGTH@ 108
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC"); @AT@ 12398 @LENGTH@ 8
------INS VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC") @TO@ VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC"); @AT@ 12407 @LENGTH@ 98
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC") @AT@ 12407 @LENGTH@ 6
---------INS MethodInvocation@@parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC") @TO@ VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC") @AT@ 12416 @LENGTH@ 89
------------INS SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}", "ABC"] @TO@ MethodInvocation@@parse("{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}","ABC") @AT@ 12416 @LENGTH@ 89
---------------INS StringLiteral@@"{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}" @TO@ SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}", "ABC"] @AT@ 12422 @LENGTH@ 75
---------------INS StringLiteral@@"ABC" @TO@ SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/?0.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}", "ABC"] @AT@ 12499 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexWithPlaceholderCorrectly,  @AT@ 12509 @LENGTH@ 128
------INS MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12509 @LENGTH@ 127
---------INS MethodInvocation@@MethodName:assertThat:[target] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12509 @LENGTH@ 18
------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:assertThat:[target] @AT@ 12520 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12533 @LENGTH@ 103
------------INS MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")] @AT@ 12543 @LENGTH@ 92
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12543 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @TO@ MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12552 @LENGTH@ 83
------------------INS StringLiteral@@"{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}" @TO@ SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @AT@ 12558 @LENGTH@ 76


UPD IfStatement@@if (filter(read)) {  continue;} @TO@ if (filter(cbuf[readPos])) {  continue;} @AT@ 2134 @LENGTH@ 59
---UPD MethodInvocation@@filter(read) @TO@ filter(cbuf[readPos]) @AT@ 2138 @LENGTH@ 12
------UPD SimpleName@@MethodName:filter:[read] @TO@ MethodName:filter:[cbuf[readPos]] @AT@ 2138 @LENGTH@ 12
---------INS ArrayAccess@@cbuf[readPos] @TO@ SimpleName@@MethodName:filter:[read] @AT@ 2145 @LENGTH@ 13
------------INS SimpleName@@cbuf @TO@ ArrayAccess@@cbuf[readPos] @AT@ 2145 @LENGTH@ 4
------------INS SimpleName@@readPos @TO@ ArrayAccess@@cbuf[readPos] @AT@ 2150 @LENGTH@ 7
---------DEL SimpleName@@read @AT@ 2145 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ MethodInvocation:LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2641 @LENGTH@ 104
---UPD MethodInvocation@@LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception) @TO@ LOGGER.error("A PulsarClientException occurred when creating Consumer {}, {}",consumerName,exception.getMessage(),exception) @AT@ 2641 @LENGTH@ 103
------UPD SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @TO@ MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception.getMessage(), exception] @AT@ 2648 @LENGTH@ 96
---------INS MethodInvocation@@exception.getMessage() @TO@ SimpleName@@MethodName:error:["A PulsarClientException occurred when creating Consumer {}, {}", consumerName, exception] @AT@ 2758 @LENGTH@ 22
------------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getMessage() @AT@ 2758 @LENGTH@ 9
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@exception.getMessage() @AT@ 2768 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 1800 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 1800 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 1800 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1811 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1818 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process?timeout=-1") @TO@ MethodInvocation:from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process?timeout=-1") @AT@ 1272 @LENGTH@ 182
---UPD MethodInvocation@@from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process?timeout=-1") @TO@ from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").to(ExchangePattern.InOut,"seda:process?timeout=-1") @AT@ 1272 @LENGTH@ 181
------UPD SimpleName@@MethodName:inOut:["seda:process?timeout=-1"] @TO@ MethodName:to:[ExchangePattern.InOut, "seda:process?timeout=-1"] @AT@ 1421 @LENGTH@ 32
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:["seda:process?timeout=-1"] @AT@ 1465 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1465 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 1481 @LENGTH@ 5


UPD FieldDeclaration@@private, String, [code] @TO@ private, final, String, [code] @AT@ 944 @LENGTH@ 20
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [code] @AT@ 958 @LENGTH@ 5


UPD EnhancedForStatement@@for (MessageMatcher<T> matcher : getMessageMatchers()) {  if (this.LOGGER.isDebugEnabled()) {    this.LOGGER.debug("Trying to match using " + matcher);  }  if (matcher.matches(message)) {    this.LOGGER.debug("matched");    return true;  }} @TO@ for (MessageMatcher<T> matcher : getMessageMatchers()) {  this.logger.debug(LogMessage.format("Trying to match using %s",matcher));  if (matcher.matches(message)) {    this.logger.debug("matched");    return true;  }} @AT@ 1474 @LENGTH@ 254
---DEL IfStatement@@if (this.LOGGER.isDebugEnabled()) {  this.LOGGER.debug("Trying to match using " + matcher);} @AT@ 1534 @LENGTH@ 99
------DEL MethodInvocation@@this.LOGGER.isDebugEnabled() @AT@ 1538 @LENGTH@ 28
---------DEL FieldAccess@@this.LOGGER @AT@ 1538 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 1538 @LENGTH@ 4
------------DEL SimpleName@@LOGGER @AT@ 1543 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 1550 @LENGTH@ 16
------DEL Block@@ThenBody:{  this.LOGGER.debug("Trying to match using " + matcher);} @AT@ 1568 @LENGTH@ 65
---------DEL ExpressionStatement@@MethodInvocation:this.LOGGER.debug("Trying to match using " + matcher) @AT@ 1574 @LENGTH@ 54
---INS ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Trying to match using %s",matcher)) @TO@ EnhancedForStatement@@for (MessageMatcher<T> matcher : getMessageMatchers()) {  if (this.LOGGER.isDebugEnabled()) {    this.LOGGER.debug("Trying to match using " + matcher);  }  if (matcher.matches(message)) {    this.LOGGER.debug("matched");    return true;  }} @AT@ 1582 @LENGTH@ 74
------MOV MethodInvocation@@this.LOGGER.debug("Trying to match using " + matcher) @TO@ ExpressionStatement@@MethodInvocation:this.logger.debug(LogMessage.format("Trying to match using %s",matcher)) @AT@ 1574 @LENGTH@ 53
---------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1574 @LENGTH@ 11
------------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1579 @LENGTH@ 6
---------UPD SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodName:format:["Trying to match using %s", matcher] @AT@ 1586 @LENGTH@ 41
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @TO@ MethodInvocation@@this.LOGGER.debug("Trying to match using " + matcher) @AT@ 1594 @LENGTH@ 61
------------INS MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Trying to match using %s",matcher)] @AT@ 1600 @LENGTH@ 54
---------------MOV SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1586 @LENGTH@ 41
------------------DEL InfixExpression@@"Trying to match using " + matcher @AT@ 1592 @LENGTH@ 34
---------------------DEL StringLiteral@@"Trying to match using " @AT@ 1592 @LENGTH@ 24
---------------------DEL Operator@@+ @AT@ 1616 @LENGTH@ 1
---------------------DEL SimpleName@@matcher @AT@ 1619 @LENGTH@ 7
------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1618 @LENGTH@ 26
------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1646 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:debug:["Trying to match using " + matcher] @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1586 @LENGTH@ 41
------------------DEL InfixExpression@@"Trying to match using " + matcher @AT@ 1592 @LENGTH@ 34
---------------------DEL StringLiteral@@"Trying to match using " @AT@ 1592 @LENGTH@ 24
---------------------DEL Operator@@+ @AT@ 1616 @LENGTH@ 1
---------------------DEL SimpleName@@matcher @AT@ 1619 @LENGTH@ 7
------------------INS StringLiteral@@"Trying to match using %s" @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1618 @LENGTH@ 26
------------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:debug:["Trying to match using " + matcher] @AT@ 1646 @LENGTH@ 7
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Trying to match using %s",matcher) @AT@ 1600 @LENGTH@ 10
---UPD IfStatement@@if (matcher.matches(message)) {  this.LOGGER.debug("matched");  return true;} @TO@ if (matcher.matches(message)) {  this.logger.debug("matched");  return true;} @AT@ 1637 @LENGTH@ 87
------UPD Block@@ThenBody:{  this.LOGGER.debug("matched");  return true;} @TO@ ThenBody:{  this.logger.debug("matched");  return true;} @AT@ 1667 @LENGTH@ 57
---------UPD ExpressionStatement@@MethodInvocation:this.LOGGER.debug("matched") @TO@ MethodInvocation:this.logger.debug("matched") @AT@ 1673 @LENGTH@ 29
------------UPD MethodInvocation@@this.LOGGER.debug("matched") @TO@ this.logger.debug("matched") @AT@ 1673 @LENGTH@ 28
---------------UPD FieldAccess@@this.LOGGER @TO@ this.logger @AT@ 1673 @LENGTH@ 11
------------------UPD SimpleName@@LOGGER @TO@ logger @AT@ 1678 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:resultHandler.onComplete(new Integer(num1 + num2)) @TO@ MethodInvocation:resultHandler.onComplete(Integer.valueOf(num1 + num2)) @AT@ 1692 @LENGTH@ 51
---UPD MethodInvocation@@resultHandler.onComplete(new Integer(num1 + num2)) @TO@ resultHandler.onComplete(Integer.valueOf(num1 + num2)) @AT@ 1692 @LENGTH@ 50
------UPD SimpleName@@MethodName:onComplete:[new Integer(num1 + num2)] @TO@ MethodName:onComplete:[Integer.valueOf(num1 + num2)] @AT@ 1706 @LENGTH@ 36
---------INS MethodInvocation@@Integer.valueOf(num1 + num2) @TO@ SimpleName@@MethodName:onComplete:[new Integer(num1 + num2)] @AT@ 1717 @LENGTH@ 28
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(num1 + num2) @AT@ 1717 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[num1 + num2] @TO@ MethodInvocation@@Integer.valueOf(num1 + num2) @AT@ 1725 @LENGTH@ 20
---------------INS InfixExpression@@num1 + num2 @TO@ SimpleName@@MethodName:valueOf:[num1 + num2] @AT@ 1733 @LENGTH@ 11
------------------MOV SimpleName@@num1 @TO@ InfixExpression@@num1 + num2 @AT@ 1729 @LENGTH@ 4
------------------MOV Operator@@+ @TO@ InfixExpression@@num1 + num2 @AT@ 1733 @LENGTH@ 1
------------------MOV SimpleName@@num2 @TO@ InfixExpression@@num1 + num2 @AT@ 1736 @LENGTH@ 4
---------DEL ClassInstanceCreation@@Integer[num1 + num2] @AT@ 1717 @LENGTH@ 24
------------DEL New@@new @AT@ 1717 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 1721 @LENGTH@ 7
------------DEL InfixExpression@@num1 + num2 @AT@ 1729 @LENGTH@ 11


UPD FieldDeclaration@@private, String, [policy] @TO@ private, final, String, [policy] @AT@ 3549 @LENGTH@ 22
---INS Modifier@@final @TO@ FieldDeclaration@@private, String, [policy] @AT@ 3557 @LENGTH@ 5


UPD Block@@ThenBody:{  WebAuthenticationDetails rhs=(WebAuthenticationDetails)obj;  if ((this.remoteAddress == null) && (rhs.getRemoteAddress() != null)) {    return false;  }  if ((this.remoteAddress != null) && (rhs.getRemoteAddress() == null)) {    return false;  }  if (this.remoteAddress != null) {    if (!this.remoteAddress.equals(rhs.getRemoteAddress())) {      return false;    }  }  if ((this.sessionId == null) && (rhs.getSessionId() != null)) {    return false;  }  if ((this.sessionId != null) && (rhs.getSessionId() == null)) {    return false;  }  if (this.sessionId != null) {    if (!this.sessionId.equals(rhs.getSessionId())) {      return false;    }  }  return true;} @TO@ ThenBody:{  WebAuthenticationDetails other=(WebAuthenticationDetails)obj;  if ((this.remoteAddress == null) && (other.getRemoteAddress() != null)) {    return false;  }  if ((this.remoteAddress != null) && (other.getRemoteAddress() == null)) {    return false;  }  if (this.remoteAddress != null) {    if (!this.remoteAddress.equals(other.getRemoteAddress())) {      return false;    }  }  if ((this.sessionId == null) && (other.getSessionId() != null)) {    return false;  }  if ((this.sessionId != null) && (other.getSessionId() == null)) {    return false;  }  if (this.sessionId != null) {    if (!this.sessionId.equals(other.getSessionId())) {      return false;    }  }  return true;} @AT@ 2078 @LENGTH@ 716
---UPD VariableDeclarationStatement@@WebAuthenticationDetails rhs=(WebAuthenticationDetails)obj; @TO@ WebAuthenticationDetails other=(WebAuthenticationDetails)obj; @AT@ 2083 @LENGTH@ 62
------UPD VariableDeclarationFragment@@rhs=(WebAuthenticationDetails)obj @TO@ other=(WebAuthenticationDetails)obj @AT@ 2108 @LENGTH@ 36
---------UPD SimpleName@@rhs @TO@ other @AT@ 2108 @LENGTH@ 3
---UPD IfStatement@@if ((this.remoteAddress == null) && (rhs.getRemoteAddress() != null)) {  return false;} @TO@ if ((this.remoteAddress == null) && (other.getRemoteAddress() != null)) {  return false;} @AT@ 2150 @LENGTH@ 94
------UPD InfixExpression@@(this.remoteAddress == null) && (rhs.getRemoteAddress() != null) @TO@ (this.remoteAddress == null) && (other.getRemoteAddress() != null) @AT@ 2154 @LENGTH@ 64
---------UPD ParenthesizedExpression@@(rhs.getRemoteAddress() != null) @TO@ (other.getRemoteAddress() != null) @AT@ 2186 @LENGTH@ 32
------------UPD InfixExpression@@rhs.getRemoteAddress() != null @TO@ other.getRemoteAddress() != null @AT@ 2187 @LENGTH@ 30
---------------UPD MethodInvocation@@rhs.getRemoteAddress() @TO@ other.getRemoteAddress() @AT@ 2187 @LENGTH@ 22
------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2187 @LENGTH@ 3
---UPD IfStatement@@if ((this.remoteAddress != null) && (rhs.getRemoteAddress() == null)) {  return false;} @TO@ if ((this.remoteAddress != null) && (other.getRemoteAddress() == null)) {  return false;} @AT@ 2249 @LENGTH@ 94
------UPD InfixExpression@@(this.remoteAddress != null) && (rhs.getRemoteAddress() == null) @TO@ (this.remoteAddress != null) && (other.getRemoteAddress() == null) @AT@ 2253 @LENGTH@ 64
---------UPD ParenthesizedExpression@@(rhs.getRemoteAddress() == null) @TO@ (other.getRemoteAddress() == null) @AT@ 2285 @LENGTH@ 32
------------UPD InfixExpression@@rhs.getRemoteAddress() == null @TO@ other.getRemoteAddress() == null @AT@ 2286 @LENGTH@ 30
---------------UPD MethodInvocation@@rhs.getRemoteAddress() @TO@ other.getRemoteAddress() @AT@ 2286 @LENGTH@ 22
------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2286 @LENGTH@ 3
---UPD IfStatement@@if (this.remoteAddress != null) {  if (!this.remoteAddress.equals(rhs.getRemoteAddress())) {    return false;  }} @TO@ if (this.remoteAddress != null) {  if (!this.remoteAddress.equals(other.getRemoteAddress())) {    return false;  }} @AT@ 2348 @LENGTH@ 125
------UPD Block@@ThenBody:{  if (!this.remoteAddress.equals(rhs.getRemoteAddress())) {    return false;  }} @TO@ ThenBody:{  if (!this.remoteAddress.equals(other.getRemoteAddress())) {    return false;  }} @AT@ 2380 @LENGTH@ 93
---------UPD IfStatement@@if (!this.remoteAddress.equals(rhs.getRemoteAddress())) {  return false;} @TO@ if (!this.remoteAddress.equals(other.getRemoteAddress())) {  return false;} @AT@ 2386 @LENGTH@ 82
------------UPD PrefixExpression@@!this.remoteAddress.equals(rhs.getRemoteAddress()) @TO@ !this.remoteAddress.equals(other.getRemoteAddress()) @AT@ 2390 @LENGTH@ 50
---------------UPD MethodInvocation@@this.remoteAddress.equals(rhs.getRemoteAddress()) @TO@ this.remoteAddress.equals(other.getRemoteAddress()) @AT@ 2391 @LENGTH@ 49
------------------UPD SimpleName@@MethodName:equals:[rhs.getRemoteAddress()] @TO@ MethodName:equals:[other.getRemoteAddress()] @AT@ 2410 @LENGTH@ 30
---------------------UPD MethodInvocation@@rhs.getRemoteAddress() @TO@ other.getRemoteAddress() @AT@ 2417 @LENGTH@ 22
------------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2417 @LENGTH@ 3
---UPD IfStatement@@if ((this.sessionId == null) && (rhs.getSessionId() != null)) {  return false;} @TO@ if ((this.sessionId == null) && (other.getSessionId() != null)) {  return false;} @AT@ 2478 @LENGTH@ 86
------UPD InfixExpression@@(this.sessionId == null) && (rhs.getSessionId() != null) @TO@ (this.sessionId == null) && (other.getSessionId() != null) @AT@ 2482 @LENGTH@ 56
---------UPD ParenthesizedExpression@@(rhs.getSessionId() != null) @TO@ (other.getSessionId() != null) @AT@ 2510 @LENGTH@ 28
------------UPD InfixExpression@@rhs.getSessionId() != null @TO@ other.getSessionId() != null @AT@ 2511 @LENGTH@ 26
---------------UPD MethodInvocation@@rhs.getSessionId() @TO@ other.getSessionId() @AT@ 2511 @LENGTH@ 18
------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2511 @LENGTH@ 3
---UPD IfStatement@@if ((this.sessionId != null) && (rhs.getSessionId() == null)) {  return false;} @TO@ if ((this.sessionId != null) && (other.getSessionId() == null)) {  return false;} @AT@ 2569 @LENGTH@ 86
------UPD InfixExpression@@(this.sessionId != null) && (rhs.getSessionId() == null) @TO@ (this.sessionId != null) && (other.getSessionId() == null) @AT@ 2573 @LENGTH@ 56
---------UPD ParenthesizedExpression@@(rhs.getSessionId() == null) @TO@ (other.getSessionId() == null) @AT@ 2601 @LENGTH@ 28
------------UPD InfixExpression@@rhs.getSessionId() == null @TO@ other.getSessionId() == null @AT@ 2602 @LENGTH@ 26
---------------UPD MethodInvocation@@rhs.getSessionId() @TO@ other.getSessionId() @AT@ 2602 @LENGTH@ 18
------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2602 @LENGTH@ 3
---UPD IfStatement@@if (this.sessionId != null) {  if (!this.sessionId.equals(rhs.getSessionId())) {    return false;  }} @TO@ if (this.sessionId != null) {  if (!this.sessionId.equals(other.getSessionId())) {    return false;  }} @AT@ 2660 @LENGTH@ 113
------UPD Block@@ThenBody:{  if (!this.sessionId.equals(rhs.getSessionId())) {    return false;  }} @TO@ ThenBody:{  if (!this.sessionId.equals(other.getSessionId())) {    return false;  }} @AT@ 2688 @LENGTH@ 85
---------UPD IfStatement@@if (!this.sessionId.equals(rhs.getSessionId())) {  return false;} @TO@ if (!this.sessionId.equals(other.getSessionId())) {  return false;} @AT@ 2694 @LENGTH@ 74
------------UPD PrefixExpression@@!this.sessionId.equals(rhs.getSessionId()) @TO@ !this.sessionId.equals(other.getSessionId()) @AT@ 2698 @LENGTH@ 42
---------------UPD MethodInvocation@@this.sessionId.equals(rhs.getSessionId()) @TO@ this.sessionId.equals(other.getSessionId()) @AT@ 2699 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:equals:[rhs.getSessionId()] @TO@ MethodName:equals:[other.getSessionId()] @AT@ 2714 @LENGTH@ 26
---------------------UPD MethodInvocation@@rhs.getSessionId() @TO@ other.getSessionId() @AT@ 2721 @LENGTH@ 18
------------------------UPD SimpleName@@Name:rhs @TO@ Name:other @AT@ 2721 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:headers.put(HazelcastConstants.TTL_VALUE,new Long(1)) @TO@ MethodInvocation:headers.put(HazelcastConstants.TTL_VALUE,Long.valueOf(1)) @AT@ 4756 @LENGTH@ 55
---UPD MethodInvocation@@headers.put(HazelcastConstants.TTL_VALUE,new Long(1)) @TO@ headers.put(HazelcastConstants.TTL_VALUE,Long.valueOf(1)) @AT@ 4756 @LENGTH@ 54
------UPD SimpleName@@MethodName:put:[HazelcastConstants.TTL_VALUE, new Long(1)] @TO@ MethodName:put:[HazelcastConstants.TTL_VALUE, Long.valueOf(1)] @AT@ 4764 @LENGTH@ 46
---------INS MethodInvocation@@Long.valueOf(1) @TO@ SimpleName@@MethodName:put:[HazelcastConstants.TTL_VALUE, new Long(1)] @AT@ 4798 @LENGTH@ 15
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 4798 @LENGTH@ 4
------------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Long.valueOf(1) @AT@ 4803 @LENGTH@ 10
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 4811 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Long[1] @AT@ 4798 @LENGTH@ 11
------------DEL New@@new @AT@ 4798 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 4802 @LENGTH@ 4
------------DEL NumberLiteral@@1 @AT@ 4807 @LENGTH@ 1


UPD MethodDeclaration@@public, Authentication, MethodName:authenticate, Authentication authentication, AuthenticationException,  @TO@ private, Jwt, MethodName:getJwt, BearerTokenAuthenticationToken bearer,  @AT@ 3359 @LENGTH@ 631
---UPD Modifier@@public @TO@ private @AT@ 3359 @LENGTH@ 6
---UPD SimpleType@@Authentication @TO@ Jwt @AT@ 3366 @LENGTH@ 14
---UPD SimpleName@@MethodName:authenticate @TO@ MethodName:getJwt @AT@ 3381 @LENGTH@ 12
---UPD SingleVariableDeclaration@@Authentication authentication @TO@ BearerTokenAuthenticationToken bearer @AT@ 3394 @LENGTH@ 29
------UPD SimpleType@@Authentication @TO@ BearerTokenAuthenticationToken @AT@ 3394 @LENGTH@ 14
------UPD SimpleName@@authentication @TO@ bearer @AT@ 3409 @LENGTH@ 14
---DEL SimpleType@@AuthenticationException @AT@ 3432 @LENGTH@ 23
---DEL VariableDeclarationStatement@@Jwt jwt; @AT@ 3552 @LENGTH@ 8
------DEL SimpleType@@Jwt @AT@ 3552 @LENGTH@ 3
------DEL VariableDeclarationFragment@@jwt @AT@ 3556 @LENGTH@ 3
---------DEL SimpleName@@jwt @AT@ 3556 @LENGTH@ 3
---UPD TryStatement@@try {  jwt=this.jwtDecoder.decode(bearer.getToken());} catch (BadJwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);}catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @TO@ try {  return this.jwtDecoder.decode(bearer.getToken());} catch (BadJwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);}catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 3563 @LENGTH@ 281
------DEL ExpressionStatement@@Assignment:jwt=this.jwtDecoder.decode(bearer.getToken()) @AT@ 3572 @LENGTH@ 48
---------DEL Assignment@@jwt=this.jwtDecoder.decode(bearer.getToken()) @AT@ 3572 @LENGTH@ 47
------------DEL SimpleName@@jwt @AT@ 3572 @LENGTH@ 3
------------DEL Operator@@= @AT@ 3575 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:this.jwtDecoder.decode(bearer.getToken()) @TO@ TryStatement@@try {  jwt=this.jwtDecoder.decode(bearer.getToken());} catch (BadJwtException failed) {  throw new InvalidBearerTokenException(failed.getMessage(),failed);}catch (JwtException failed) {  throw new AuthenticationServiceException(failed.getMessage(),failed);} @AT@ 3794 @LENGTH@ 49
---------MOV MethodInvocation@@this.jwtDecoder.decode(bearer.getToken()) @TO@ ReturnStatement@@MethodInvocation:this.jwtDecoder.decode(bearer.getToken()) @AT@ 3578 @LENGTH@ 41
---DEL ReturnStatement@@SimpleName:token @AT@ 3974 @LENGTH@ 13
------DEL SimpleName@@token @AT@ 3981 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]TestRoutes, SpringRouteBuilder @TO@ [public, static]TestRoutes, RouteBuilder @AT@ 2948 @LENGTH@ 946
---UPD SimpleType@@SpringRouteBuilder @TO@ RouteBuilder @AT@ 2987 @LENGTH@ 18


UPD MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @TO@ private, OAuth2AuthorizationRequest.Builder, MethodName:getBuilder, ClientRegistration clientRegistration, Map<String,Object> attributes,  @AT@ 6975 @LENGTH@ 2048
---UPD SimpleType@@OAuth2AuthorizationRequest @TO@ OAuth2AuthorizationRequest.Builder @AT@ 6983 @LENGTH@ 26
---UPD SimpleName@@MethodName:authorizationRequest @TO@ MethodName:getBuilder @AT@ 7010 @LENGTH@ 20
---DEL SingleVariableDeclaration@@ServerWebExchange exchange @AT@ 7031 @LENGTH@ 26
------DEL SimpleType@@ServerWebExchange @AT@ 7031 @LENGTH@ 17
------DEL SimpleName@@exchange @AT@ 7049 @LENGTH@ 8
---DEL VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder; @AT@ 7343 @LENGTH@ 43
------DEL SimpleType@@OAuth2AuthorizationRequest.Builder @AT@ 7343 @LENGTH@ 34
------DEL VariableDeclarationFragment@@builder @AT@ 7378 @LENGTH@ 7
---------DEL SimpleName@@builder @AT@ 7378 @LENGTH@ 7
---UPD IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(clientRegistration.getAuthorizationGrantType())) {  builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);} else if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  builder=OAuth2AuthorizationRequest.implicit();} else {  throw new IllegalArgumentException("Invalid Authorization Grant Type (" + clientRegistration.getAuthorizationGrantType().getValue() + ") for Client Registration with Id: "+ clientRegistration.getRegistrationId());} @TO@ if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(clientRegistration.getAuthorizationGrantType())) {  OAuth2AuthorizationRequest.Builder builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);  return builder;} @AT@ 7389 @LENGTH@ 1268
------UPD Block@@ThenBody:{  builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);} @TO@ ThenBody:{  OAuth2AuthorizationRequest.Builder builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);  return builder;} @AT@ 7491 @LENGTH@ 765
---------DEL ExpressionStatement@@Assignment:builder=OAuth2AuthorizationRequest.authorizationCode() @AT@ 7496 @LENGTH@ 57
------------DEL Assignment@@builder=OAuth2AuthorizationRequest.authorizationCode() @AT@ 7496 @LENGTH@ 56
---------------DEL SimpleName@@builder @AT@ 7496 @LENGTH@ 7
---------------DEL Operator@@= @AT@ 7503 @LENGTH@ 1
---------------DEL MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode() @AT@ 7506 @LENGTH@ 46
---------INS VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=OAuth2AuthorizationRequest.authorizationCode(); @TO@ Block@@ThenBody:{  builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);} @AT@ 8037 @LENGTH@ 92
------------INS SimpleType@@OAuth2AuthorizationRequest.Builder @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=OAuth2AuthorizationRequest.authorizationCode(); @AT@ 8037 @LENGTH@ 34
------------INS VariableDeclarationFragment@@builder=OAuth2AuthorizationRequest.authorizationCode() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest.Builder builder=OAuth2AuthorizationRequest.authorizationCode(); @AT@ 8072 @LENGTH@ 56
---------------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=OAuth2AuthorizationRequest.authorizationCode() @AT@ 8072 @LENGTH@ 7
---------------INS MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode() @TO@ VariableDeclarationFragment@@builder=OAuth2AuthorizationRequest.authorizationCode() @AT@ 8082 @LENGTH@ 46
------------------MOV SimpleName@@Name:OAuth2AuthorizationRequest @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode() @AT@ 7506 @LENGTH@ 26
------------------MOV SimpleName@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.authorizationCode() @AT@ 7533 @LENGTH@ 19
---------INS ReturnStatement@@SimpleName:builder @TO@ Block@@ThenBody:{  builder=OAuth2AuthorizationRequest.authorizationCode();  Map<String,Object> additionalParameters=new HashMap<>();  if (!CollectionUtils.isEmpty(clientRegistration.getScopes()) && clientRegistration.getScopes().contains(OidcScopes.OPENID)) {    addNonceParameters(attributes,additionalParameters);  }  if (ClientAuthenticationMethod.NONE.equals(clientRegistration.getClientAuthenticationMethod())) {    addPkceParameters(attributes,additionalParameters);  }  builder.additionalParameters(additionalParameters);} @AT@ 8832 @LENGTH@ 15
------------INS SimpleName@@builder @TO@ ReturnStatement@@SimpleName:builder @AT@ 8839 @LENGTH@ 7
------DEL Block@@ElseBody:if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  builder=OAuth2AuthorizationRequest.implicit();} else {  throw new IllegalArgumentException("Invalid Authorization Grant Type (" + clientRegistration.getAuthorizationGrantType().getValue() + ") for Client Registration with Id: "+ clientRegistration.getRegistrationId());} @AT@ 8264 @LENGTH@ 393
---------DEL IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  builder=OAuth2AuthorizationRequest.implicit();} else {  throw new IllegalArgumentException("Invalid Authorization Grant Type (" + clientRegistration.getAuthorizationGrantType().getValue() + ") for Client Registration with Id: "+ clientRegistration.getRegistrationId());} @AT@ 8264 @LENGTH@ 393
------------DEL Block@@ThenBody:{  builder=OAuth2AuthorizationRequest.implicit();} @AT@ 8356 @LENGTH@ 57
---------------DEL ExpressionStatement@@Assignment:builder=OAuth2AuthorizationRequest.implicit() @AT@ 8361 @LENGTH@ 48
------------------DEL Assignment@@builder=OAuth2AuthorizationRequest.implicit() @AT@ 8361 @LENGTH@ 47
---------------------DEL SimpleName@@builder @AT@ 8361 @LENGTH@ 7
---------------------DEL Operator@@= @AT@ 8368 @LENGTH@ 1
---------------------DEL MethodInvocation@@OAuth2AuthorizationRequest.implicit() @AT@ 8371 @LENGTH@ 37
------------------------DEL SimpleName@@Name:OAuth2AuthorizationRequest @AT@ 8371 @LENGTH@ 26
------------------------DEL SimpleName@@MethodName:implicit:[] @AT@ 8398 @LENGTH@ 10
------------DEL Block@@ElseBody:{  throw new IllegalArgumentException("Invalid Authorization Grant Type (" + clientRegistration.getAuthorizationGrantType().getValue() + ") for Client Registration with Id: "+ clientRegistration.getRegistrationId());} @AT@ 8421 @LENGTH@ 236
---INS SingleVariableDeclaration@@Map<String,Object> attributes @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 7894 @LENGTH@ 30
------INS ParameterizedType@@Map<String,Object> @TO@ SingleVariableDeclaration@@Map<String,Object> attributes @AT@ 7894 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 7894 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 7898 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 7906 @LENGTH@ 6
------INS SimpleName@@attributes @TO@ SingleVariableDeclaration@@Map<String,Object> attributes @AT@ 7914 @LENGTH@ 10
---MOV ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Invalid Authorization Grant Type (" + clientRegistration.getAuthorizationGrantType().getValue() + ") for Client Registration with Id: "+ clientRegistration.getRegistrationId()) @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 8426 @LENGTH@ 227
---INS IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  return OAuth2AuthorizationRequest.implicit();} @TO@ MethodDeclaration@@private, OAuth2AuthorizationRequest, MethodName:authorizationRequest, ServerWebExchange exchange, ClientRegistration clientRegistration,  @AT@ 8854 @LENGTH@ 146
------MOV MethodInvocation@@AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType()) @TO@ IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  return OAuth2AuthorizationRequest.implicit();} @AT@ 8268 @LENGTH@ 86
------INS Block@@ThenBody:{  return OAuth2AuthorizationRequest.implicit();} @TO@ IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(clientRegistration.getAuthorizationGrantType())) {  return OAuth2AuthorizationRequest.implicit();} @AT@ 8946 @LENGTH@ 54
---------INS ReturnStatement@@MethodInvocation:OAuth2AuthorizationRequest.implicit() @TO@ Block@@ThenBody:{  return OAuth2AuthorizationRequest.implicit();} @AT@ 8951 @LENGTH@ 45
------------INS MethodInvocation@@OAuth2AuthorizationRequest.implicit() @TO@ ReturnStatement@@MethodInvocation:OAuth2AuthorizationRequest.implicit() @AT@ 8958 @LENGTH@ 37
---------------INS SimpleName@@Name:OAuth2AuthorizationRequest @TO@ MethodInvocation@@OAuth2AuthorizationRequest.implicit() @AT@ 8958 @LENGTH@ 26
---------------INS SimpleName@@MethodName:implicit:[] @TO@ MethodInvocation@@OAuth2AuthorizationRequest.implicit() @AT@ 8985 @LENGTH@ 10


DEL VariableDeclarationStatement@@final int startupBeansCount=moduleDescription.getStartupBeansCount(); @AT@ 3116 @LENGTH@ 71
---DEL Modifier@@final @AT@ 3116 @LENGTH@ 5
---DEL PrimitiveType@@int @AT@ 3122 @LENGTH@ 3
---DEL VariableDeclarationFragment@@startupBeansCount=moduleDescription.getStartupBeansCount() @AT@ 3126 @LENGTH@ 60
------DEL SimpleName@@startupBeansCount @AT@ 3126 @LENGTH@ 17
------DEL MethodInvocation@@moduleDescription.getStartupBeansCount() @AT@ 3146 @LENGTH@ 40
---------DEL SimpleName@@Name:moduleDescription @AT@ 3146 @LENGTH@ 17
---------DEL SimpleName@@MethodName:getStartupBeansCount:[] @AT@ 3164 @LENGTH@ 22


UPD EnhancedForStatement@@for (AfterInvocationProvider provider : this.providers) {  if (logger.isDebugEnabled()) {    logger.debug("Evaluating " + attribute + " against "+ provider);  }  if (provider.supports(attribute)) {    return true;  }} @TO@ for (AfterInvocationProvider provider : this.providers) {  logger.debug(LogMessage.format("Evaluating %s against %s",attribute,provider));  if (provider.supports(attribute)) {    return true;  }} @AT@ 3455 @LENGTH@ 232
---DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Evaluating " + attribute + " against "+ provider);} @AT@ 3516 @LENGTH@ 105
------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 3520 @LENGTH@ 23
---------DEL SimpleName@@Name:logger @AT@ 3520 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 3527 @LENGTH@ 16
------DEL Block@@ThenBody:{  logger.debug("Evaluating " + attribute + " against "+ provider);} @AT@ 3545 @LENGTH@ 76
---------DEL ExpressionStatement@@MethodInvocation:logger.debug("Evaluating " + attribute + " against "+ provider) @AT@ 3551 @LENGTH@ 65
---INS ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Evaluating %s against %s",attribute,provider)) @TO@ EnhancedForStatement@@for (AfterInvocationProvider provider : this.providers) {  if (logger.isDebugEnabled()) {    logger.debug("Evaluating " + attribute + " against "+ provider);  }  if (provider.supports(attribute)) {    return true;  }} @AT@ 3562 @LENGTH@ 81
------MOV MethodInvocation@@logger.debug("Evaluating " + attribute + " against "+ provider) @TO@ ExpressionStatement@@MethodInvocation:logger.debug(LogMessage.format("Evaluating %s against %s",attribute,provider)) @AT@ 3551 @LENGTH@ 64
---------UPD SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @TO@ MethodName:format:["Evaluating %s against %s", attribute, provider] @AT@ 3558 @LENGTH@ 57
---------INS SimpleName@@MethodName:debug:[LogMessage.format("Evaluating %s against %s",attribute,provider)] @TO@ MethodInvocation@@logger.debug("Evaluating " + attribute + " against "+ provider) @AT@ 3569 @LENGTH@ 73
------------INS MethodInvocation@@LogMessage.format("Evaluating %s against %s",attribute,provider) @TO@ SimpleName@@MethodName:debug:[LogMessage.format("Evaluating %s against %s",attribute,provider)] @AT@ 3575 @LENGTH@ 66
---------------MOV SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @TO@ MethodInvocation@@LogMessage.format("Evaluating %s against %s",attribute,provider) @AT@ 3558 @LENGTH@ 57
------------------DEL InfixExpression@@"Evaluating " + attribute + " against "+ provider @AT@ 3564 @LENGTH@ 50
---------------------DEL StringLiteral@@"Evaluating " @AT@ 3564 @LENGTH@ 13
---------------------DEL Operator@@+ @AT@ 3577 @LENGTH@ 1
---------------------DEL SimpleName@@attribute @AT@ 3580 @LENGTH@ 9
---------------------DEL StringLiteral@@" against " @AT@ 3592 @LENGTH@ 11
---------------------DEL SimpleName@@provider @AT@ 3606 @LENGTH@ 8
------------------INS StringLiteral@@"Evaluating %s against %s" @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3593 @LENGTH@ 26
------------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3621 @LENGTH@ 9
------------------INS SimpleName@@provider @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3632 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @TO@ MethodInvocation@@LogMessage.format("Evaluating %s against %s",attribute,provider) @AT@ 3558 @LENGTH@ 57
------------------DEL InfixExpression@@"Evaluating " + attribute + " against "+ provider @AT@ 3564 @LENGTH@ 50
---------------------DEL StringLiteral@@"Evaluating " @AT@ 3564 @LENGTH@ 13
---------------------DEL Operator@@+ @AT@ 3577 @LENGTH@ 1
---------------------DEL SimpleName@@attribute @AT@ 3580 @LENGTH@ 9
---------------------DEL StringLiteral@@" against " @AT@ 3592 @LENGTH@ 11
---------------------DEL SimpleName@@provider @AT@ 3606 @LENGTH@ 8
------------------INS StringLiteral@@"Evaluating %s against %s" @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3593 @LENGTH@ 26
------------------INS SimpleName@@attribute @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3621 @LENGTH@ 9
------------------INS SimpleName@@provider @TO@ SimpleName@@MethodName:debug:["Evaluating " + attribute + " against "+ provider] @AT@ 3632 @LENGTH@ 8
---------------INS SimpleName@@Name:LogMessage @TO@ MethodInvocation@@LogMessage.format("Evaluating %s against %s",attribute,provider) @AT@ 3575 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1888 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1888 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1904 @LENGTH@ 21


UPD IfStatement@@if (!ObjectUtils.isEmpty(this.locales)) savedRequest.locales.addAll(this.locales); @TO@ if (!ObjectUtils.isEmpty(this.locales)) {  savedRequest.locales.addAll(this.locales);} @AT@ 12958 @LENGTH@ 86
---UPD Block@@ThenBody:savedRequest.locales.addAll(this.locales); @TO@ ThenBody:{  savedRequest.locales.addAll(this.locales);} @AT@ 13002 @LENGTH@ 42


UPD ExpressionStatement@@MethodInvocation:setCacheZstdAvailability(true) @TO@ MethodInvocation:setCacheZstdAvailablity(true) @AT@ 1743 @LENGTH@ 31
---UPD MethodInvocation@@setCacheZstdAvailability(true) @TO@ setCacheZstdAvailablity(true) @AT@ 1743 @LENGTH@ 30
------UPD SimpleName@@MethodName:setCacheZstdAvailability:[true] @TO@ MethodName:setCacheZstdAvailablity:[true] @AT@ 1743 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:request.setParameter(MockRememberMeServices.DEFAULT_PARAMETER,"false") @TO@ MethodInvocation:request.setParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"false") @AT@ 13680 @LENGTH@ 72
---UPD MethodInvocation@@request.setParameter(MockRememberMeServices.DEFAULT_PARAMETER,"false") @TO@ request.setParameter(AbstractRememberMeServices.DEFAULT_PARAMETER,"false") @AT@ 13680 @LENGTH@ 71
------UPD SimpleName@@MethodName:setParameter:[MockRememberMeServices.DEFAULT_PARAMETER, "false"] @TO@ MethodName:setParameter:[AbstractRememberMeServices.DEFAULT_PARAMETER, "false"] @AT@ 13688 @LENGTH@ 63
---------UPD QualifiedName@@MockRememberMeServices.DEFAULT_PARAMETER @TO@ AbstractRememberMeServices.DEFAULT_PARAMETER @AT@ 13701 @LENGTH@ 40
------------UPD SimpleName@@MockRememberMeServices @TO@ AbstractRememberMeServices @AT@ 13701 @LENGTH@ 22


UPD IfStatement@@if (ReplDumpWork.testDeletePreviousDumpMetaPath && conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) {  return null;} else {  return currentDumpPath.getParent();} @TO@ if (ReplDumpWork.testDeletePreviousDumpMetaPath && (conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL))) {  return null;} else {  return currentDumpPath.getParent();} @AT@ 14853 @LENGTH@ 247
---INS InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && (conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @TO@ IfStatement@@if (ReplDumpWork.testDeletePreviousDumpMetaPath && conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) {  return null;} else {  return currentDumpPath.getParent();} @AT@ 14857 @LENGTH@ 180
------INS QualifiedName@@ReplDumpWork.testDeletePreviousDumpMetaPath @TO@ InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && (conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @AT@ 14857 @LENGTH@ 43
---------INS SimpleName@@ReplDumpWork @TO@ QualifiedName@@ReplDumpWork.testDeletePreviousDumpMetaPath @AT@ 14857 @LENGTH@ 12
---------INS SimpleName@@testDeletePreviousDumpMetaPath @TO@ QualifiedName@@ReplDumpWork.testDeletePreviousDumpMetaPath @AT@ 14870 @LENGTH@ 30
------INS Operator@@&& @TO@ InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && (conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @AT@ 14900 @LENGTH@ 2
------INS ParenthesizedExpression@@(conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @TO@ InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && (conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @AT@ 14916 @LENGTH@ 121
---------MOV InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL) @TO@ ParenthesizedExpression@@(conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL)) @AT@ 14857 @LENGTH@ 99
------------DEL QualifiedName@@ReplDumpWork.testDeletePreviousDumpMetaPath @AT@ 14857 @LENGTH@ 43
------------UPD Operator@@&& @TO@ || @AT@ 14900 @LENGTH@ 2
------------INS MethodInvocation@@conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) @TO@ InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL) @AT@ 14917 @LENGTH@ 47
---------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) @AT@ 14917 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getBoolVar:[HiveConf.ConfVars.HIVE_IN_TEST] @TO@ MethodInvocation@@conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) @AT@ 14922 @LENGTH@ 42
------------------INS QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST @TO@ SimpleName@@MethodName:getBoolVar:[HiveConf.ConfVars.HIVE_IN_TEST] @AT@ 14933 @LENGTH@ 30
---------------------INS QualifiedName@@HiveConf.ConfVars @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST @AT@ 14933 @LENGTH@ 17
------------------------MOV SimpleName@@ReplDumpWork @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 14857 @LENGTH@ 12
------------------------MOV SimpleName@@ReplDumpWork @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 14857 @LENGTH@ 12
------------------------MOV SimpleName@@testDeletePreviousDumpMetaPath @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 14870 @LENGTH@ 30
------------------------MOV SimpleName@@testDeletePreviousDumpMetaPath @TO@ QualifiedName@@HiveConf.ConfVars @AT@ 14870 @LENGTH@ 30
---------------------INS SimpleName@@HIVE_IN_TEST @TO@ QualifiedName@@HiveConf.ConfVars.HIVE_IN_TEST @AT@ 14951 @LENGTH@ 12
---UPD InfixExpression@@ReplDumpWork.testDeletePreviousDumpMetaPath && conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL) @TO@ conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST) || conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST_REPL) @AT@ 14857 @LENGTH@ 99


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2134 @LENGTH@ 559
---DEL Modifier@@public @AT@ 2134 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2141 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2146 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2197 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonSNSClientMock awsSNSClient=new AmazonSNSClientMock(); @AT@ 2218 @LENGTH@ 61
------DEL SimpleType@@AmazonSNSClientMock @AT@ 2218 @LENGTH@ 19
------DEL VariableDeclarationFragment@@awsSNSClient=new AmazonSNSClientMock() @AT@ 2238 @LENGTH@ 40
---------DEL SimpleName@@awsSNSClient @AT@ 2238 @LENGTH@ 12
---------DEL ClassInstanceCreation@@AmazonSNSClientMock[] @AT@ 2253 @LENGTH@ 25
------------DEL New@@new @AT@ 2253 @LENGTH@ 3
------------DEL SimpleType@@AmazonSNSClientMock @AT@ 2257 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("awsSNSClient",awsSNSClient) @AT@ 2288 @LENGTH@ 57
------DEL MethodInvocation@@context.getRegistry().bind("awsSNSClient",awsSNSClient) @AT@ 2288 @LENGTH@ 56
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2288 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2288 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["awsSNSClient", awsSNSClient] @AT@ 2310 @LENGTH@ 34
------------DEL StringLiteral@@"awsSNSClient" @AT@ 2315 @LENGTH@ 14
------------DEL SimpleName@@awsSNSClient @AT@ 2331 @LENGTH@ 12
---DEL VariableDeclarationStatement@@Sns2Component component=context.getComponent("aws2-sns",Sns2Component.class); @AT@ 2354 @LENGTH@ 80
------DEL SimpleType@@Sns2Component @AT@ 2354 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-sns",Sns2Component.class) @AT@ 2368 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2368 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-sns",Sns2Component.class) @AT@ 2380 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2380 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-sns", Sns2Component.class] @AT@ 2388 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-sns" @AT@ 2401 @LENGTH@ 10
---------------DEL TypeLiteral@@Sns2Component.class @AT@ 2413 @LENGTH@ 19
---DEL VariableDeclarationStatement@@Sns2Endpoint endpoint=(Sns2Endpoint)component.createEndpoint("aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2443 @LENGTH@ 156
------DEL SimpleType@@Sns2Endpoint @AT@ 2443 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(Sns2Endpoint)component.createEndpoint("aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2456 @LENGTH@ 142
---------DEL SimpleName@@endpoint @AT@ 2456 @LENGTH@ 8
---------DEL CastExpression@@(Sns2Endpoint)component.createEndpoint("aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2467 @LENGTH@ 131
------------DEL SimpleType@@Sns2Endpoint @AT@ 2468 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2482 @LENGTH@ 116
---------------DEL SimpleName@@Name:component @AT@ 2482 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2509 @LENGTH@ 89
------------------DEL StringLiteral@@"aws2-sns://MyTopic?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2524 @LENGTH@ 73
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(awsSNSClient,endpoint.getConfiguration().getAmazonSNSClient()) @AT@ 2609 @LENGTH@ 78
------DEL MethodInvocation@@assertNotSame(awsSNSClient,endpoint.getConfiguration().getAmazonSNSClient()) @AT@ 2609 @LENGTH@ 77
---------DEL SimpleName@@MethodName:assertNotSame:[awsSNSClient, endpoint.getConfiguration().getAmazonSNSClient()] @AT@ 2609 @LENGTH@ 77
------------DEL SimpleName@@awsSNSClient @AT@ 2623 @LENGTH@ 12
------------DEL MethodInvocation@@endpoint.getConfiguration().getAmazonSNSClient() @AT@ 2637 @LENGTH@ 48
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2637 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2637 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getAmazonSNSClient:[] @AT@ 2665 @LENGTH@ 20


DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Pre-authenticated entry point called. Rejecting access");} @AT@ 2195 @LENGTH@ 109
---DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 2199 @LENGTH@ 23
------DEL SimpleName@@Name:logger @AT@ 2199 @LENGTH@ 6
------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 2206 @LENGTH@ 16
---DEL Block@@ThenBody:{  logger.debug("Pre-authenticated entry point called. Rejecting access");} @AT@ 2224 @LENGTH@ 80


INS ExpressionStatement@@MethodInvocation:Assert.notNull(this.method,() -> "Could not obtain target method from JoinPoint: '" + jp + "'") @TO@ MethodDeclaration@@voidMethodName:MethodInvocationAdapter, JoinPoint jp,  @AT@ 1944 @LENGTH@ 97
---INS MethodInvocation@@Assert.notNull(this.method,() -> "Could not obtain target method from JoinPoint: '" + jp + "'") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(this.method,() -> "Could not obtain target method from JoinPoint: '" + jp + "'") @AT@ 1944 @LENGTH@ 96
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(this.method,() -> "Could not obtain target method from JoinPoint: '" + jp + "'") @AT@ 1944 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[this.method, () -> "Could not obtain target method from JoinPoint: '" + jp + "'"] @TO@ MethodInvocation@@Assert.notNull(this.method,() -> "Could not obtain target method from JoinPoint: '" + jp + "'") @AT@ 1951 @LENGTH@ 89
---------INS FieldAccess@@this.method @TO@ SimpleName@@MethodName:notNull:[this.method, () -> "Could not obtain target method from JoinPoint: '" + jp + "'"] @AT@ 1959 @LENGTH@ 11
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.method @AT@ 1909 @LENGTH@ 4
------------MOV SimpleName@@method @TO@ FieldAccess@@this.method @AT@ 1914 @LENGTH@ 6
---------INS LambdaExpression@@() -> "Could not obtain target method from JoinPoint: '" + jp + "'" @TO@ SimpleName@@MethodName:notNull:[this.method, () -> "Could not obtain target method from JoinPoint: '" + jp + "'"] @AT@ 1972 @LENGTH@ 67
------------INS InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @TO@ LambdaExpression@@() -> "Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 1978 @LENGTH@ 61
---------------MOV StringLiteral@@"Could not obtain target method from JoinPoint: '" @TO@ InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 1970 @LENGTH@ 50
---------------MOV Operator@@+ @TO@ InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 2020 @LENGTH@ 1
---------------MOV SimpleName@@jp @TO@ InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 2023 @LENGTH@ 2
---------------MOV StringLiteral@@"'" @TO@ InfixExpression@@"Could not obtain target method from JoinPoint: '" + jp + "'" @AT@ 2028 @LENGTH@ 3


DEL ReturnStatement@@NullLiteral:null @AT@ 3439 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 3446 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(acceptBaseName(file.getFileName().toString()),file) @TO@ MethodInvocation:toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null)),file) @AT@ 6606 @LENGTH@ 78
---UPD MethodInvocation@@toFileVisitResult(acceptBaseName(file.getFileName().toString()),file) @TO@ toFileVisitResult(acceptBaseName(Objects.toString(file.getFileName(),null)),file) @AT@ 6613 @LENGTH@ 70
------UPD SimpleName@@MethodName:toFileVisitResult:[acceptBaseName(file.getFileName().toString()), file] @TO@ MethodName:toFileVisitResult:[acceptBaseName(Objects.toString(file.getFileName(),null)), file] @AT@ 6613 @LENGTH@ 70
---------UPD MethodInvocation@@acceptBaseName(file.getFileName().toString()) @TO@ acceptBaseName(Objects.toString(file.getFileName(),null)) @AT@ 6631 @LENGTH@ 45
------------UPD SimpleName@@MethodName:acceptBaseName:[file.getFileName().toString()] @TO@ MethodName:acceptBaseName:[Objects.toString(file.getFileName(),null)] @AT@ 6631 @LENGTH@ 45
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 6646 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:acceptBaseName:[file.getFileName().toString()] @AT@ 6672 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 6672 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 6680 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6709 @LENGTH@ 4
------------UPD SimpleName@@MethodName:acceptBaseName:[file.getFileName().toString()] @TO@ MethodName:acceptBaseName:[Objects.toString(file.getFileName(),null)] @AT@ 6631 @LENGTH@ 45
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 6646 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:acceptBaseName:[file.getFileName().toString()] @AT@ 6672 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 6672 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 6680 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6646 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 6646 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 6665 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 6709 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000l) @TO@ MethodInvocation:Thread.sleep(1000L) @AT@ 4466 @LENGTH@ 20
---UPD MethodInvocation@@Thread.sleep(1000l) @TO@ Thread.sleep(1000L) @AT@ 4466 @LENGTH@ 19
------UPD SimpleName@@MethodName:sleep:[1000l] @TO@ MethodName:sleep:[1000L] @AT@ 4473 @LENGTH@ 12
---------UPD NumberLiteral@@1000l @TO@ 1000L @AT@ 4479 @LENGTH@ 5


UPD LambdaExpression@@(authority) -> {
  OidcUserInfo userInfo=authority.getUserInfo();
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  String userNameAttributeName=userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUserNameAttributeName();
  if (StringUtils.hasText(userNameAttributeName)) {
    return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo,userNameAttributeName);
  }
 else {
    return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo);
  }
}
 @TO@ (authority) -> {
  OidcUserInfo userInfo=authority.getUserInfo();
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  String userNameAttributeName=userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUserNameAttributeName();
  if (StringUtils.hasText(userNameAttributeName)) {
    return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo,userNameAttributeName);
  }
  return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo);
}
 @AT@ 4839 @LENGTH@ 779
---UPD IfStatement@@if (StringUtils.hasText(userNameAttributeName)) {  return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo,userNameAttributeName);} else {  return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo);} @TO@ if (StringUtils.hasText(userNameAttributeName)) {  return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo,userNameAttributeName);} @AT@ 5340 @LENGTH@ 272
------DEL Block@@ElseBody:{  return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo);} @AT@ 5521 @LENGTH@ 91
---MOV ReturnStatement@@ClassInstanceCreation:new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo) @TO@ LambdaExpression@@(authority) -> {
  OidcUserInfo userInfo=authority.getUserInfo();
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  String userNameAttributeName=userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUserNameAttributeName();
  if (StringUtils.hasText(userNameAttributeName)) {
    return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo,userNameAttributeName);
  }
 else {
    return new DefaultOidcUser(authorities,userRequest.getIdToken(),userInfo);
  }
}
 @AT@ 5529 @LENGTH@ 76


UPD ReturnStatement@@MethodInvocation:this.serverAuthenticationConverter.convert(exchange).flatMap((a) -> MatchResult.match()).onErrorResume((e) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.notMatch()) @TO@ MethodInvocation:this.serverAuthenticationConverter.convert(exchange).flatMap((a) -> MatchResult.match()).onErrorResume((ex) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.notMatch()) @AT@ 1735 @LENGTH@ 184
---UPD MethodInvocation@@this.serverAuthenticationConverter.convert(exchange).flatMap((a) -> MatchResult.match()).onErrorResume((e) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.notMatch()) @TO@ this.serverAuthenticationConverter.convert(exchange).flatMap((a) -> MatchResult.match()).onErrorResume((ex) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.notMatch()) @AT@ 1742 @LENGTH@ 176
------UPD MethodInvocation@@MethodName:onErrorResume:[(e) -> MatchResult.notMatch()] @TO@ MethodName:onErrorResume:[(ex) -> MatchResult.notMatch()] @AT@ 1742 @LENGTH@ 138
---------UPD LambdaExpression@@(e) -> MatchResult.notMatch() @TO@ (ex) -> MatchResult.notMatch() @AT@ 1850 @LENGTH@ 29
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 1851 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 1851 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","DOGS");
  pets.remove("DOGS");
  pets.get("CATS").add(new Pet("Delilah"));
  pets.put("FISH",Collections.singletonList(new Pet("Nemo")));
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove("ACTIVE");
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put("WATCHING",Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","FISH");
  assertThat(pets.get("CATS")).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get("FISH")).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys("WATCHING");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @TO@ MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","DOGS");
  pets.remove("DOGS");
  pets.get("CATS").add(new Pet("Delilah"));
  pets.put("FISH",Collections.singletonList(new Pet("Nemo")));
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove("ACTIVE");
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put("WATCHING",Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","FISH");
  assertThat(pets.get("CATS")).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get("FISH")).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys("WATCHING");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6221 @LENGTH@ 1551
---UPD MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","DOGS");
  pets.remove("DOGS");
  pets.get("CATS").add(new Pet("Delilah"));
  pets.put("FISH",Collections.singletonList(new Pet("Nemo")));
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove("ACTIVE");
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put("WATCHING",Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","FISH");
  assertThat(pets.get("CATS")).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get("FISH")).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys("WATCHING");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @TO@ repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","DOGS");
  pets.remove("DOGS");
  pets.get("CATS").add(new Pet("Delilah"));
  pets.put("FISH",Collections.singletonList(new Pet("Nemo")));
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove("ACTIVE");
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put("WATCHING",Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","FISH");
  assertThat(pets.get("CATS")).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get("FISH")).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys("WATCHING");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6221 @LENGTH@ 1550
------INS MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @TO@ MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","DOGS");
  pets.remove("DOGS");
  pets.get("CATS").add(new Pet("Delilah"));
  pets.put("FISH",Collections.singletonList(new Pet("Nemo")));
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  hobbies.remove("ACTIVE");
  HobbyRelationship hobbyRelationship=new HobbyRelationship("average");
  Hobby hobby=new Hobby();
  hobby.setName("Football");
  hobbyRelationship.setHobby(hobby);
  hobbies.put("WATCHING",Collections.singletonList(hobbyRelationship));
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,List<Pet>> pets=person.getPets();
  assertThat(pets).containsOnlyKeys("CATS","FISH");
  assertThat(pets.get("CATS")).extracting(Pet::getName).containsExactlyInAnyOrder("Tom","Garfield","Delilah");
  assertThat(pets.get("FISH")).extracting(Pet::getName).containsExactlyInAnyOrder("Nemo");
  Map<String,List<HobbyRelationship>> hobbies=person.getHobbies();
  assertThat(hobbies).containsOnlyKeys("WATCHING");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getPerformance).containsExactly("average");
  assertThat(hobbies.get("WATCHING")).extracting(HobbyRelationship::getHobby).extracting(Hobby::getName).containsExactly("Football");
}
).verifyComplete() @AT@ 6312 @LENGTH@ 829
---------INS LambdaExpression@@p -> repository.findById(p.getId()) @TO@ MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @AT@ 7105 @LENGTH@ 35
------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 7105 @LENGTH@ 1
---------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 7105 @LENGTH@ 1
------------INS MethodInvocation@@repository.findById(p.getId()) @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 7110 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 7110 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findById:[p.getId()] @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 7121 @LENGTH@ 19
------------------INS MethodInvocation@@p.getId() @TO@ SimpleName@@MethodName:findById:[p.getId()] @AT@ 7130 @LENGTH@ 9
---------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getId() @AT@ 7130 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@p.getId() @AT@ 7132 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:addArguments(Constants.DISPLAY_GALLEON_CONFIG_ARG) @TO@ MethodDeclaration@@public, static, void, MethodName:init,  @AT@ 1650 @LENGTH@ 51
---INS MethodInvocation@@addArguments(Constants.DISPLAY_GALLEON_CONFIG_ARG) @TO@ ExpressionStatement@@MethodInvocation:addArguments(Constants.DISPLAY_GALLEON_CONFIG_ARG) @AT@ 1650 @LENGTH@ 50
------INS SimpleName@@MethodName:addArguments:[Constants.DISPLAY_GALLEON_CONFIG_ARG] @TO@ MethodInvocation@@addArguments(Constants.DISPLAY_GALLEON_CONFIG_ARG) @AT@ 1650 @LENGTH@ 50
---------INS QualifiedName@@Constants.DISPLAY_GALLEON_CONFIG_ARG @TO@ SimpleName@@MethodName:addArguments:[Constants.DISPLAY_GALLEON_CONFIG_ARG] @AT@ 1663 @LENGTH@ 36
------------INS SimpleName@@Constants @TO@ QualifiedName@@Constants.DISPLAY_GALLEON_CONFIG_ARG @AT@ 1663 @LENGTH@ 9
------------INS SimpleName@@DISPLAY_GALLEON_CONFIG_ARG @TO@ QualifiedName@@Constants.DISPLAY_GALLEON_CONFIG_ARG @AT@ 1673 @LENGTH@ 26


INS ExpressionStatement@@MethodInvocation:assertTrue(true,"Dummy to show test completed OK") @TO@ MethodDeclaration@@public, void, MethodName:testConstructorsNull, IOException,  @AT@ 15178 @LENGTH@ 52
---INS MethodInvocation@@assertTrue(true,"Dummy to show test completed OK") @TO@ ExpressionStatement@@MethodInvocation:assertTrue(true,"Dummy to show test completed OK") @AT@ 15178 @LENGTH@ 51
------INS SimpleName@@MethodName:assertTrue:[true, "Dummy to show test completed OK"] @TO@ MethodInvocation@@assertTrue(true,"Dummy to show test completed OK") @AT@ 15178 @LENGTH@ 51
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertTrue:[true, "Dummy to show test completed OK"] @AT@ 15189 @LENGTH@ 4
---------INS StringLiteral@@"Dummy to show test completed OK" @TO@ SimpleName@@MethodName:assertTrue:[true, "Dummy to show test completed OK"] @AT@ 15195 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("pdf:create?font=Courier&pageSize=PAGE_SIZE_A1").to("mock:result") @TO@ MethodInvocation:from("direct:start").to("pdf:create?fontSize=6&font=Courier&pageSize=PAGE_SIZE_A1").to("mock:result") @AT@ 5312 @LENGTH@ 141
---UPD MethodInvocation@@from("direct:start").to("pdf:create?font=Courier&pageSize=PAGE_SIZE_A1").to("mock:result") @TO@ from("direct:start").to("pdf:create?fontSize=6&font=Courier&pageSize=PAGE_SIZE_A1").to("mock:result") @AT@ 5312 @LENGTH@ 140
------UPD MethodInvocation@@MethodName:to:["pdf:create?font=Courier&pageSize=PAGE_SIZE_A1"] @TO@ MethodName:to:["pdf:create?fontSize=6&font=Courier&pageSize=PAGE_SIZE_A1"] @AT@ 5312 @LENGTH@ 97
---------UPD StringLiteral@@"pdf:create?font=Courier&pageSize=PAGE_SIZE_A1" @TO@ "pdf:create?fontSize=6&font=Courier&pageSize=PAGE_SIZE_A1" @AT@ 5361 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ MethodInvocation:assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 4900 @LENGTH@ 64
---UPD MethodInvocation@@assertEquals(elements.size(),1,"Get the wrong elements size") @TO@ assertEquals(1,elements.size(),"Get the wrong elements size") @AT@ 4900 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @TO@ MethodName:assertEquals:[1, elements.size(), "Get the wrong elements size"] @AT@ 4900 @LENGTH@ 63
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[elements.size(), 1, "Get the wrong elements size"] @AT@ 4913 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 4930 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @TO@ TypeDeclaration@@[@RunWith(Parameterized.class), @IfProfileValue(name="redisVersion",value="3.2.0+"), public]DefaultGeoOperationsTests,  @AT@ 6555 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6555 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6562 @LENGTH@ 4
---INS SimpleName@@MethodName:geoDistShouldReturnNullIfNoDistanceCalculable @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6567 @LENGTH@ 45
---INS VariableDeclarationStatement@@K key=keyFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6620 @LENGTH@ 30
------INS SimpleType@@K @TO@ VariableDeclarationStatement@@K key=keyFactory.instance(); @AT@ 6620 @LENGTH@ 1
------INS VariableDeclarationFragment@@key=keyFactory.instance() @TO@ VariableDeclarationStatement@@K key=keyFactory.instance(); @AT@ 6622 @LENGTH@ 27
---------INS SimpleName@@key @TO@ VariableDeclarationFragment@@key=keyFactory.instance() @AT@ 6622 @LENGTH@ 3
---------INS MethodInvocation@@keyFactory.instance() @TO@ VariableDeclarationFragment@@key=keyFactory.instance() @AT@ 6628 @LENGTH@ 21
------------INS SimpleName@@Name:keyFactory @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6628 @LENGTH@ 10
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6639 @LENGTH@ 10
---INS VariableDeclarationStatement@@M member1=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6653 @LENGTH@ 36
------INS SimpleType@@M @TO@ VariableDeclarationStatement@@M member1=valueFactory.instance(); @AT@ 6653 @LENGTH@ 1
------INS VariableDeclarationFragment@@member1=valueFactory.instance() @TO@ VariableDeclarationStatement@@M member1=valueFactory.instance(); @AT@ 6655 @LENGTH@ 33
---------INS SimpleName@@member1 @TO@ VariableDeclarationFragment@@member1=valueFactory.instance() @AT@ 6655 @LENGTH@ 7
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@member1=valueFactory.instance() @AT@ 6665 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6665 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6678 @LENGTH@ 10
---INS VariableDeclarationStatement@@M member2=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6692 @LENGTH@ 36
------INS SimpleType@@M @TO@ VariableDeclarationStatement@@M member2=valueFactory.instance(); @AT@ 6692 @LENGTH@ 1
------INS VariableDeclarationFragment@@member2=valueFactory.instance() @TO@ VariableDeclarationStatement@@M member2=valueFactory.instance(); @AT@ 6694 @LENGTH@ 33
---------INS SimpleName@@member2 @TO@ VariableDeclarationFragment@@member2=valueFactory.instance() @AT@ 6694 @LENGTH@ 7
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@member2=valueFactory.instance() @AT@ 6704 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6704 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6717 @LENGTH@ 10
---INS VariableDeclarationStatement@@M member3=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6731 @LENGTH@ 36
------INS SimpleType@@M @TO@ VariableDeclarationStatement@@M member3=valueFactory.instance(); @AT@ 6731 @LENGTH@ 1
------INS VariableDeclarationFragment@@member3=valueFactory.instance() @TO@ VariableDeclarationStatement@@M member3=valueFactory.instance(); @AT@ 6733 @LENGTH@ 33
---------INS SimpleName@@member3 @TO@ VariableDeclarationFragment@@member3=valueFactory.instance() @AT@ 6733 @LENGTH@ 7
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@member3=valueFactory.instance() @AT@ 6743 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6743 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6756 @LENGTH@ 10
---INS VariableDeclarationStatement@@M member4=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6770 @LENGTH@ 36
------INS SimpleType@@M @TO@ VariableDeclarationStatement@@M member4=valueFactory.instance(); @AT@ 6770 @LENGTH@ 1
------INS VariableDeclarationFragment@@member4=valueFactory.instance() @TO@ VariableDeclarationStatement@@M member4=valueFactory.instance(); @AT@ 6772 @LENGTH@ 33
---------INS SimpleName@@member4 @TO@ VariableDeclarationFragment@@member4=valueFactory.instance() @AT@ 6772 @LENGTH@ 7
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@member4=valueFactory.instance() @AT@ 6782 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6782 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6795 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:geoOperations.add(key,POINT_PALERMO,member1) @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6810 @LENGTH@ 47
------INS MethodInvocation@@geoOperations.add(key,POINT_PALERMO,member1) @TO@ ExpressionStatement@@MethodInvocation:geoOperations.add(key,POINT_PALERMO,member1) @AT@ 6810 @LENGTH@ 46
---------INS SimpleName@@Name:geoOperations @TO@ MethodInvocation@@geoOperations.add(key,POINT_PALERMO,member1) @AT@ 6810 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[key, POINT_PALERMO, member1] @TO@ MethodInvocation@@geoOperations.add(key,POINT_PALERMO,member1) @AT@ 6824 @LENGTH@ 32
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:add:[key, POINT_PALERMO, member1] @AT@ 6828 @LENGTH@ 3
------------INS SimpleName@@POINT_PALERMO @TO@ SimpleName@@MethodName:add:[key, POINT_PALERMO, member1] @AT@ 6833 @LENGTH@ 13
------------INS SimpleName@@member1 @TO@ SimpleName@@MethodName:add:[key, POINT_PALERMO, member1] @AT@ 6848 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:geoOperations.add(key,POINT_CATANIA,member2) @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6860 @LENGTH@ 47
------INS MethodInvocation@@geoOperations.add(key,POINT_CATANIA,member2) @TO@ ExpressionStatement@@MethodInvocation:geoOperations.add(key,POINT_CATANIA,member2) @AT@ 6860 @LENGTH@ 46
---------INS SimpleName@@Name:geoOperations @TO@ MethodInvocation@@geoOperations.add(key,POINT_CATANIA,member2) @AT@ 6860 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[key, POINT_CATANIA, member2] @TO@ MethodInvocation@@geoOperations.add(key,POINT_CATANIA,member2) @AT@ 6874 @LENGTH@ 32
------------INS SimpleName@@key @TO@ SimpleName@@MethodName:add:[key, POINT_CATANIA, member2] @AT@ 6878 @LENGTH@ 3
------------INS SimpleName@@POINT_CATANIA @TO@ SimpleName@@MethodName:add:[key, POINT_CATANIA, member2] @AT@ 6883 @LENGTH@ 13
------------INS SimpleName@@member2 @TO@ SimpleName@@MethodName:add:[key, POINT_CATANIA, member2] @AT@ 6898 @LENGTH@ 7
---INS VariableDeclarationStatement@@Distance dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET); @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6911 @LENGTH@ 81
------INS SimpleType@@Distance @TO@ VariableDeclarationStatement@@Distance dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET); @AT@ 6911 @LENGTH@ 8
------INS VariableDeclarationFragment@@dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @TO@ VariableDeclarationStatement@@Distance dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET); @AT@ 6920 @LENGTH@ 71
---------INS SimpleName@@dist @TO@ VariableDeclarationFragment@@dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @AT@ 6920 @LENGTH@ 4
---------INS MethodInvocation@@geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @TO@ VariableDeclarationFragment@@dist=geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @AT@ 6927 @LENGTH@ 64
------------INS SimpleName@@Name:geoOperations @TO@ MethodInvocation@@geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @AT@ 6927 @LENGTH@ 13
------------INS SimpleName@@MethodName:distance:[key, member3, member4, DistanceUnit.FEET] @TO@ MethodInvocation@@geoOperations.distance(key,member3,member4,DistanceUnit.FEET) @AT@ 6941 @LENGTH@ 50
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:distance:[key, member3, member4, DistanceUnit.FEET] @AT@ 6950 @LENGTH@ 3
---------------INS SimpleName@@member3 @TO@ SimpleName@@MethodName:distance:[key, member3, member4, DistanceUnit.FEET] @AT@ 6955 @LENGTH@ 7
---------------INS SimpleName@@member4 @TO@ SimpleName@@MethodName:distance:[key, member3, member4, DistanceUnit.FEET] @AT@ 6964 @LENGTH@ 7
---------------INS QualifiedName@@DistanceUnit.FEET @TO@ SimpleName@@MethodName:distance:[key, member3, member4, DistanceUnit.FEET] @AT@ 6973 @LENGTH@ 17
------------------INS SimpleName@@DistanceUnit @TO@ QualifiedName@@DistanceUnit.FEET @AT@ 6973 @LENGTH@ 12
------------------INS SimpleName@@FEET @TO@ QualifiedName@@DistanceUnit.FEET @AT@ 6986 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(dist).isNull() @TO@ MethodDeclaration@@public, void, MethodName:geoDistShouldReturnNullIfNoDistanceCalculable,  @AT@ 6995 @LENGTH@ 26
------INS MethodInvocation@@assertThat(dist).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(dist).isNull() @AT@ 6995 @LENGTH@ 25
---------INS MethodInvocation@@MethodName:assertThat:[dist] @TO@ MethodInvocation@@assertThat(dist).isNull() @AT@ 6995 @LENGTH@ 16
------------INS SimpleName@@dist @TO@ MethodInvocation@@MethodName:assertThat:[dist] @AT@ 7006 @LENGTH@ 4
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(dist).isNull() @AT@ 7012 @LENGTH@ 8


UPD VariableDeclarationStatement@@CxfPayload<?> out=exchange.getOut().getBody(CxfPayload.class); @TO@ CxfPayload<?> out=exchange.getMessage().getBody(CxfPayload.class); @AT@ 4213 @LENGTH@ 64
---UPD VariableDeclarationFragment@@out=exchange.getOut().getBody(CxfPayload.class) @TO@ out=exchange.getMessage().getBody(CxfPayload.class) @AT@ 4227 @LENGTH@ 49
------UPD MethodInvocation@@exchange.getOut().getBody(CxfPayload.class) @TO@ exchange.getMessage().getBody(CxfPayload.class) @AT@ 4233 @LENGTH@ 43
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4233 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertEquals(fromHandler.getMessageCount(),8,"Can't get the right message count") @TO@ MethodInvocation:assertEquals(8,fromHandler.getMessageCount(),"Can't get the right message count") @AT@ 3488 @LENGTH@ 84
---UPD MethodInvocation@@assertEquals(fromHandler.getMessageCount(),8,"Can't get the right message count") @TO@ assertEquals(8,fromHandler.getMessageCount(),"Can't get the right message count") @AT@ 3488 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertEquals:[fromHandler.getMessageCount(), 8, "Can't get the right message count"] @TO@ MethodName:assertEquals:[8, fromHandler.getMessageCount(), "Can't get the right message count"] @AT@ 3488 @LENGTH@ 83
---------INS NumberLiteral@@8 @TO@ SimpleName@@MethodName:assertEquals:[fromHandler.getMessageCount(), 8, "Can't get the right message count"] @AT@ 3501 @LENGTH@ 1
---------DEL NumberLiteral@@8 @AT@ 3532 @LENGTH@ 1


UPD VariableDeclarationStatement@@CxfPayload<SoapHeader> out=exchange.getOut().getBody(CxfPayload.class); @TO@ CxfPayload<SoapHeader> out=exchange.getMessage().getBody(CxfPayload.class); @AT@ 4751 @LENGTH@ 73
---UPD VariableDeclarationFragment@@out=exchange.getOut().getBody(CxfPayload.class) @TO@ out=exchange.getMessage().getBody(CxfPayload.class) @AT@ 4774 @LENGTH@ 49
------UPD MethodInvocation@@exchange.getOut().getBody(CxfPayload.class) @TO@ exchange.getMessage().getBody(CxfPayload.class) @AT@ 4780 @LENGTH@ 43
---------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 4780 @LENGTH@ 17


UPD TypeDeclaration@@[public]CamelCatalogLuceneTest,  @TO@ [@TestInstance(TestInstance.Lifecycle.PER_CLASS), public]CamelCatalogLuceneTest,  @AT@ 1259 @LENGTH@ 683
---INS SingleMemberAnnotation@@@TestInstance(TestInstance.Lifecycle.PER_CLASS) @TO@ TypeDeclaration@@[public]CamelCatalogLuceneTest,  @AT@ 1302 @LENGTH@ 47


UPD ExpressionStatement@@MethodInvocation:setReadOnly(file,false,LinkOption.NOFOLLOW_LINKS) @TO@ MethodInvocation:setReadOnly(file,false) @AT@ 15585 @LENGTH@ 52
---UPD MethodInvocation@@setReadOnly(file,false,LinkOption.NOFOLLOW_LINKS) @TO@ setReadOnly(file,false) @AT@ 15585 @LENGTH@ 51
------UPD SimpleName@@MethodName:setReadOnly:[file, false, LinkOption.NOFOLLOW_LINKS] @TO@ MethodName:setReadOnly:[file, false] @AT@ 15585 @LENGTH@ 51
---------DEL QualifiedName@@LinkOption.NOFOLLOW_LINKS @AT@ 15610 @LENGTH@ 25
------------DEL SimpleName@@LinkOption @AT@ 15610 @LENGTH@ 10
------------DEL SimpleName@@NOFOLLOW_LINKS @AT@ 15621 @LENGTH@ 14


UPD IfStatement@@if (relationship.isDynamic()) {  Map<Object,List<MappingSupport.RelationshipPropertiesWithEntityHolder>> relationshipProperties=new HashMap<>();  for (  Map.Entry<Object,Object> mapEntry : ((Map<Object,Object>)value).entrySet()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipValues=new ArrayList<>();    relationshipProperties.put(mapEntry.getKey(),relationshipValues);    Object mapEntryValue=mapEntry.getValue();    if (mapEntryValue instanceof List) {      for (      Object relationshipProperty : ((List<Object>)mapEntryValue)) {        MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));        relationshipValues.add(oneOfThem);      }    } else {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(mapEntryValue,getTargetNode(relationshipPropertiesEntity,mapEntryValue));      relationshipValues.add(oneOfThem);    }  }  value=relationshipProperties;} else {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} @TO@ if (relationship.isDynamic()) {  Map<Object,List<MappingSupport.RelationshipPropertiesWithEntityHolder>> relationshipProperties=new HashMap<>();  for (  Map.Entry<Object,Object> mapEntry : ((Map<Object,Object>)value).entrySet()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipValues=new ArrayList<>();    relationshipProperties.put(mapEntry.getKey(),relationshipValues);    Object mapEntryValue=mapEntry.getValue();    if (mapEntryValue instanceof List) {      for (      Object relationshipProperty : ((List<Object>)mapEntryValue)) {        MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));        relationshipValues.add(oneOfThem);      }    } else {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(mapEntryValue,getTargetNode(relationshipPropertiesEntity,mapEntryValue));      relationshipValues.add(oneOfThem);    }  }  value=relationshipProperties;} else {  if (inverse.isCollectionLike()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();    for (    Object relationshipProperty : ((Collection<Object>)value)) {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));      relationshipProperties.add(oneOfThem);    }    value=relationshipProperties;  } else {    value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));  }} @AT@ 4843 @LENGTH@ 1778
---INS Block@@ElseBody:{  if (inverse.isCollectionLike()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();    for (    Object relationshipProperty : ((Collection<Object>)value)) {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));      relationshipProperties.add(oneOfThem);    }    value=relationshipProperties;  } else {    value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));  }} @TO@ IfStatement@@if (relationship.isDynamic()) {  Map<Object,List<MappingSupport.RelationshipPropertiesWithEntityHolder>> relationshipProperties=new HashMap<>();  for (  Map.Entry<Object,Object> mapEntry : ((Map<Object,Object>)value).entrySet()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipValues=new ArrayList<>();    relationshipProperties.put(mapEntry.getKey(),relationshipValues);    Object mapEntryValue=mapEntry.getValue();    if (mapEntryValue instanceof List) {      for (      Object relationshipProperty : ((List<Object>)mapEntryValue)) {        MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));        relationshipValues.add(oneOfThem);      }    } else {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(mapEntryValue,getTargetNode(relationshipPropertiesEntity,mapEntryValue));      relationshipValues.add(oneOfThem);    }  }  value=relationshipProperties;} else {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} @AT@ 6114 @LENGTH@ 710
------INS IfStatement@@if (inverse.isCollectionLike()) {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} else {  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @TO@ Block@@ElseBody:{  if (inverse.isCollectionLike()) {    List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();    for (    Object relationshipProperty : ((Collection<Object>)value)) {      MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));      relationshipProperties.add(oneOfThem);    }    value=relationshipProperties;  } else {    value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));  }} @AT@ 6120 @LENGTH@ 699
---------MOV Block@@ElseBody:{  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} @TO@ IfStatement@@if (inverse.isCollectionLike()) {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} else {  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @AT@ 6114 @LENGTH@ 507
---------INS MethodInvocation@@inverse.isCollectionLike() @TO@ IfStatement@@if (inverse.isCollectionLike()) {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} else {  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @AT@ 6124 @LENGTH@ 26
------------INS SimpleName@@Name:inverse @TO@ MethodInvocation@@inverse.isCollectionLike() @AT@ 6124 @LENGTH@ 7
------------INS SimpleName@@MethodName:isCollectionLike:[] @TO@ MethodInvocation@@inverse.isCollectionLike() @AT@ 6132 @LENGTH@ 18
---------INS Block@@ElseBody:{  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @TO@ IfStatement@@if (inverse.isCollectionLike()) {  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} else {  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @AT@ 6674 @LENGTH@ 145
------------INS ExpressionStatement@@Assignment:value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @TO@ Block@@ElseBody:{  value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value));} @AT@ 6681 @LENGTH@ 132
---------------INS Assignment@@value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @TO@ ExpressionStatement@@Assignment:value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @AT@ 6681 @LENGTH@ 131
------------------INS SimpleName@@value @TO@ Assignment@@value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @AT@ 6681 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @AT@ 6686 @LENGTH@ 1
------------------INS ClassInstanceCreation@@MappingSupport.RelationshipPropertiesWithEntityHolder[value, getTargetNode(relationshipPropertiesEntity,value)] @TO@ Assignment@@value=new MappingSupport.RelationshipPropertiesWithEntityHolder(value,getTargetNode(relationshipPropertiesEntity,value)) @AT@ 6689 @LENGTH@ 123
---------------------INS New@@new @TO@ ClassInstanceCreation@@MappingSupport.RelationshipPropertiesWithEntityHolder[value, getTargetNode(relationshipPropertiesEntity,value)] @AT@ 6689 @LENGTH@ 3
---------------------INS SimpleType@@MappingSupport.RelationshipPropertiesWithEntityHolder @TO@ ClassInstanceCreation@@MappingSupport.RelationshipPropertiesWithEntityHolder[value, getTargetNode(relationshipPropertiesEntity,value)] @AT@ 6693 @LENGTH@ 53
---------------------INS SimpleName@@value @TO@ ClassInstanceCreation@@MappingSupport.RelationshipPropertiesWithEntityHolder[value, getTargetNode(relationshipPropertiesEntity,value)] @AT@ 6747 @LENGTH@ 5
---------------------INS MethodInvocation@@getTargetNode(relationshipPropertiesEntity,value) @TO@ ClassInstanceCreation@@MappingSupport.RelationshipPropertiesWithEntityHolder[value, getTargetNode(relationshipPropertiesEntity,value)] @AT@ 6761 @LENGTH@ 50
------------------------INS SimpleName@@MethodName:getTargetNode:[relationshipPropertiesEntity, value] @TO@ MethodInvocation@@getTargetNode(relationshipPropertiesEntity,value) @AT@ 6761 @LENGTH@ 50
---------------------------INS SimpleName@@relationshipPropertiesEntity @TO@ SimpleName@@MethodName:getTargetNode:[relationshipPropertiesEntity, value] @AT@ 6775 @LENGTH@ 28
---------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:getTargetNode:[relationshipPropertiesEntity, value] @AT@ 6805 @LENGTH@ 5
---UPD Block@@ElseBody:{  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} @TO@ ThenBody:{  List<MappingSupport.RelationshipPropertiesWithEntityHolder> relationshipProperties=new ArrayList<>();  for (  Object relationshipProperty : ((Collection<Object>)value)) {    MappingSupport.RelationshipPropertiesWithEntityHolder oneOfThem=new MappingSupport.RelationshipPropertiesWithEntityHolder(relationshipProperty,getTargetNode(relationshipPropertiesEntity,relationshipProperty));    relationshipProperties.add(oneOfThem);  }  value=relationshipProperties;} @AT@ 6114 @LENGTH@ 507


UPD MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @TO@ private, ResponseEntity<Map<String,Object>>, MethodName:getResponse, OAuth2UserRequest userRequest, RequestEntity<?> request,  @AT@ 3854 @LENGTH@ 4019
---UPD Modifier@@public @TO@ private @AT@ 3854 @LENGTH@ 6
---DEL SimpleType@@OAuth2User @AT@ 3861 @LENGTH@ 10
---UPD SimpleName@@MethodName:loadUser @TO@ MethodName:getResponse @AT@ 3872 @LENGTH@ 8
---DEL SimpleType@@OAuth2AuthenticationException @AT@ 3919 @LENGTH@ 29
---UPD VariableDeclarationStatement@@ResponseEntity<Map<String,Object>> response; @TO@ ResponseEntity<Map<String,Object>> response=getResponse(userRequest,request); @AT@ 5090 @LENGTH@ 45
---UPD TryStatement@@try {  response=this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE);} catch (OAuth2AuthorizationException ex) {  OAuth2Error oauth2Error=ex.getError();  StringBuilder errorDetails=new StringBuilder();  errorDetails.append("Error details: [");  errorDetails.append("UserInfo Uri: ").append(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri());  errorDetails.append(", Error Code: ").append(oauth2Error.getErrorCode());  if (oauth2Error.getDescription() != null) {    errorDetails.append(", Error Description: ").append(oauth2Error.getDescription());  }  errorDetails.append("]");  oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + errorDetails.toString(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (UnknownContentTypeException ex) {  String errorMessage="An error occurred while attempting to retrieve the UserInfo Resource from '" + userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() + "': response contains invalid content type '"+ ex.getContentType().toString()+ "'. "+ "The UserInfo Response should return a JSON object (content type 'application/json') "+ "that contains a collection of name and value pairs of the claims about the authenticated End-User. "+ "Please ensure the UserInfo Uri in UserInfoEndpoint for Client Registration '"+ userRequest.getClientRegistration().getRegistrationId()+ "' conforms to the UserInfo Endpoint, "+ "as defined in OpenID Connect 1.0: 'https://openid.net/specs/openid-connect-core-1_0.html#UserInfo'";  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorMessage,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + ex.getMessage(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);} @TO@ try {  return this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE);} catch (OAuth2AuthorizationException ex) {  OAuth2Error oauth2Error=ex.getError();  StringBuilder errorDetails=new StringBuilder();  errorDetails.append("Error details: [");  errorDetails.append("UserInfo Uri: ").append(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri());  errorDetails.append(", Error Code: ").append(oauth2Error.getErrorCode());  if (oauth2Error.getDescription() != null) {    errorDetails.append(", Error Description: ").append(oauth2Error.getDescription());  }  errorDetails.append("]");  oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + errorDetails.toString(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (UnknownContentTypeException ex) {  String errorMessage="An error occurred while attempting to retrieve the UserInfo Resource from '" + userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() + "': response contains invalid content type '"+ ex.getContentType().toString()+ "'. "+ "The UserInfo Response should return a JSON object (content type 'application/json') "+ "that contains a collection of name and value pairs of the claims about the authenticated End-User. "+ "Please ensure the UserInfo Uri in UserInfoEndpoint for Client Registration '"+ userRequest.getClientRegistration().getRegistrationId()+ "' conforms to the UserInfo Endpoint, "+ "as defined in OpenID Connect 1.0: 'https://openid.net/specs/openid-connect-core-1_0.html#UserInfo'";  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorMessage,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + ex.getMessage(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);} @AT@ 5138 @LENGTH@ 2287
------DEL ExpressionStatement@@Assignment:response=this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE) @AT@ 5147 @LENGTH@ 78
---------DEL Assignment@@response=this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE) @AT@ 5147 @LENGTH@ 77
------------DEL SimpleName@@response @AT@ 5147 @LENGTH@ 8
------------DEL Operator@@= @AT@ 5155 @LENGTH@ 1
------INS ReturnStatement@@MethodInvocation:this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE) @TO@ TryStatement@@try {  response=this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE);} catch (OAuth2AuthorizationException ex) {  OAuth2Error oauth2Error=ex.getError();  StringBuilder errorDetails=new StringBuilder();  errorDetails.append("Error details: [");  errorDetails.append("UserInfo Uri: ").append(userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri());  errorDetails.append(", Error Code: ").append(oauth2Error.getErrorCode());  if (oauth2Error.getDescription() != null) {    errorDetails.append(", Error Description: ").append(oauth2Error.getDescription());  }  errorDetails.append("]");  oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + errorDetails.toString(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (UnknownContentTypeException ex) {  String errorMessage="An error occurred while attempting to retrieve the UserInfo Resource from '" + userRequest.getClientRegistration().getProviderDetails().getUserInfoEndpoint().getUri() + "': response contains invalid content type '"+ ex.getContentType().toString()+ "'. "+ "The UserInfo Response should return a JSON object (content type 'application/json') "+ "that contains a collection of name and value pairs of the claims about the authenticated End-User. "+ "Please ensure the UserInfo Uri in UserInfoEndpoint for Client Registration '"+ userRequest.getClientRegistration().getRegistrationId()+ "' conforms to the UserInfo Endpoint, "+ "as defined in OpenID Connect 1.0: 'https://openid.net/specs/openid-connect-core-1_0.html#UserInfo'";  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,errorMessage,null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);}catch (RestClientException ex) {  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred while attempting to retrieve the UserInfo Resource: " + ex.getMessage(),null);  throw new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),ex);} @AT@ 5743 @LENGTH@ 74
---------MOV MethodInvocation@@this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE) @TO@ ReturnStatement@@MethodInvocation:this.restOperations.exchange(request,PARAMETERIZED_RESPONSE_TYPE) @AT@ 5158 @LENGTH@ 66
---INS ParameterizedType@@ResponseEntity<Map<String,Object>> @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 5625 @LENGTH@ 35
------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Map<String,Object>> @AT@ 5625 @LENGTH@ 14
------INS ParameterizedType@@Map<String,Object> @TO@ ParameterizedType@@ResponseEntity<Map<String,Object>> @AT@ 5640 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5640 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5644 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5652 @LENGTH@ 6
---INS SingleVariableDeclaration@@RequestEntity<?> request @TO@ MethodDeclaration@@public, OAuth2User, MethodName:loadUser, OAuth2UserRequest userRequest, OAuth2AuthenticationException,  @AT@ 5704 @LENGTH@ 24
------INS ParameterizedType@@RequestEntity<?> @TO@ SingleVariableDeclaration@@RequestEntity<?> request @AT@ 5704 @LENGTH@ 16
---------INS SimpleType@@RequestEntity @TO@ ParameterizedType@@RequestEntity<?> @AT@ 5704 @LENGTH@ 13
---------INS WildcardType@@? @TO@ ParameterizedType@@RequestEntity<?> @AT@ 5718 @LENGTH@ 1
------INS SimpleName@@request @TO@ SingleVariableDeclaration@@RequestEntity<?> request @AT@ 5721 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:toFileVisitResult(accept(file.getFileName().toString()),file) @TO@ MethodInvocation:toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @AT@ 7094 @LENGTH@ 70
---UPD MethodInvocation@@toFileVisitResult(accept(file.getFileName().toString()),file) @TO@ toFileVisitResult(accept(Objects.toString(file.getFileName(),null)),file) @AT@ 7101 @LENGTH@ 62
------UPD SimpleName@@MethodName:toFileVisitResult:[accept(file.getFileName().toString()), file] @TO@ MethodName:toFileVisitResult:[accept(Objects.toString(file.getFileName(),null)), file] @AT@ 7101 @LENGTH@ 62
---------UPD MethodInvocation@@accept(file.getFileName().toString()) @TO@ accept(Objects.toString(file.getFileName(),null)) @AT@ 7119 @LENGTH@ 37
------------UPD SimpleName@@MethodName:accept:[file.getFileName().toString()] @TO@ MethodName:accept:[Objects.toString(file.getFileName(),null)] @AT@ 7119 @LENGTH@ 37
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 7126 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:accept:[file.getFileName().toString()] @AT@ 7152 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7152 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7160 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7189 @LENGTH@ 4
------------UPD SimpleName@@MethodName:accept:[file.getFileName().toString()] @TO@ MethodName:accept:[Objects.toString(file.getFileName(),null)] @AT@ 7119 @LENGTH@ 37
---------------UPD MethodInvocation@@file.getFileName().toString() @TO@ file.getFileName() @AT@ 7126 @LENGTH@ 29
---------------INS MethodInvocation@@Objects.toString(file.getFileName(),null) @TO@ SimpleName@@MethodName:accept:[file.getFileName().toString()] @AT@ 7152 @LENGTH@ 42
------------------INS SimpleName@@Name:Objects @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7152 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toString:[file.getFileName(), null] @TO@ MethodInvocation@@Objects.toString(file.getFileName(),null) @AT@ 7160 @LENGTH@ 34
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------MOV MethodInvocation@@file.getFileName().toString() @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7126 @LENGTH@ 29
------------------------DEL MethodInvocation@@MethodName:getFileName:[] @AT@ 7126 @LENGTH@ 18
------------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getFileName:[] @AT@ 7145 @LENGTH@ 10
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:toString:[file.getFileName(), null] @AT@ 7189 @LENGTH@ 4


UPD IfStatement@@if (jobInstance != null) {  List<JobExecution> executions=jobExecutionDao.findJobExecutions(jobInstance);  for (  JobExecution execution : executions) {    if (execution.isRunning() || execution.isStopping()) {      throw new JobExecutionAlreadyRunningException("A job execution for this job is already running: " + jobInstance);    }    BatchStatus status=execution.getStatus();    if (status == BatchStatus.UNKNOWN) {      throw new JobRestartException("Cannot restart job from UNKNOWN status. " + "The last execution ended with a failure that could not be rolled back, " + "so it may be dangerous to proceed. Manual intervention is probably necessary.");    }    if (execution.getJobParameters().getParameters().size() > 0 && (status == BatchStatus.COMPLETED || status == BatchStatus.ABANDONED)) {      throw new JobInstanceAlreadyCompleteException("A job instance already exists and is complete for parameters=" + jobParameters + ".  If you want to run this job again, change the parameters.");    }  }  executionContext=ecDao.getExecutionContext(jobExecutionDao.getLastJobExecution(jobInstance));} else {  jobInstance=jobInstanceDao.createJobInstance(jobName,jobParameters);  executionContext=new ExecutionContext();} @TO@ if (jobInstance != null) {  List<JobExecution> executions=jobExecutionDao.findJobExecutions(jobInstance);  if (executions.isEmpty()) {    throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);  }  for (  JobExecution execution : executions) {    if (execution.isRunning() || execution.isStopping()) {      throw new JobExecutionAlreadyRunningException("A job execution for this job is already running: " + jobInstance);    }    BatchStatus status=execution.getStatus();    if (status == BatchStatus.UNKNOWN) {      throw new JobRestartException("Cannot restart job from UNKNOWN status. " + "The last execution ended with a failure that could not be rolled back, " + "so it may be dangerous to proceed. Manual intervention is probably necessary.");    }    if (execution.getJobParameters().getParameters().size() > 0 && (status == BatchStatus.COMPLETED || status == BatchStatus.ABANDONED)) {      throw new JobInstanceAlreadyCompleteException("A job instance already exists and is complete for parameters=" + jobParameters + ".  If you want to run this job again, change the parameters.");    }  }  executionContext=ecDao.getExecutionContext(jobExecutionDao.getLastJobExecution(jobInstance));} else {  jobInstance=jobInstanceDao.createJobInstance(jobName,jobParameters);  executionContext=new ExecutionContext();} @AT@ 4011 @LENGTH@ 1388
---UPD Block@@ThenBody:{  List<JobExecution> executions=jobExecutionDao.findJobExecutions(jobInstance);  for (  JobExecution execution : executions) {    if (execution.isRunning() || execution.isStopping()) {      throw new JobExecutionAlreadyRunningException("A job execution for this job is already running: " + jobInstance);    }    BatchStatus status=execution.getStatus();    if (status == BatchStatus.UNKNOWN) {      throw new JobRestartException("Cannot restart job from UNKNOWN status. " + "The last execution ended with a failure that could not be rolled back, " + "so it may be dangerous to proceed. Manual intervention is probably necessary.");    }    if (execution.getJobParameters().getParameters().size() > 0 && (status == BatchStatus.COMPLETED || status == BatchStatus.ABANDONED)) {      throw new JobInstanceAlreadyCompleteException("A job instance already exists and is complete for parameters=" + jobParameters + ".  If you want to run this job again, change the parameters.");    }  }  executionContext=ecDao.getExecutionContext(jobExecutionDao.getLastJobExecution(jobInstance));} @TO@ ThenBody:{  List<JobExecution> executions=jobExecutionDao.findJobExecutions(jobInstance);  if (executions.isEmpty()) {    throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);  }  for (  JobExecution execution : executions) {    if (execution.isRunning() || execution.isStopping()) {      throw new JobExecutionAlreadyRunningException("A job execution for this job is already running: " + jobInstance);    }    BatchStatus status=execution.getStatus();    if (status == BatchStatus.UNKNOWN) {      throw new JobRestartException("Cannot restart job from UNKNOWN status. " + "The last execution ended with a failure that could not be rolled back, " + "so it may be dangerous to proceed. Manual intervention is probably necessary.");    }    if (execution.getJobParameters().getParameters().size() > 0 && (status == BatchStatus.COMPLETED || status == BatchStatus.ABANDONED)) {      throw new JobInstanceAlreadyCompleteException("A job instance already exists and is complete for parameters=" + jobParameters + ".  If you want to run this job again, change the parameters.");    }  }  executionContext=ecDao.getExecutionContext(jobExecutionDao.getLastJobExecution(jobInstance));} @AT@ 4036 @LENGTH@ 1198
------INS IfStatement@@if (executions.isEmpty()) {  throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);} @TO@ Block@@ThenBody:{  List<JobExecution> executions=jobExecutionDao.findJobExecutions(jobInstance);  for (  JobExecution execution : executions) {    if (execution.isRunning() || execution.isStopping()) {      throw new JobExecutionAlreadyRunningException("A job execution for this job is already running: " + jobInstance);    }    BatchStatus status=execution.getStatus();    if (status == BatchStatus.UNKNOWN) {      throw new JobRestartException("Cannot restart job from UNKNOWN status. " + "The last execution ended with a failure that could not be rolled back, " + "so it may be dangerous to proceed. Manual intervention is probably necessary.");    }    if (execution.getJobParameters().getParameters().size() > 0 && (status == BatchStatus.COMPLETED || status == BatchStatus.ABANDONED)) {      throw new JobInstanceAlreadyCompleteException("A job instance already exists and is complete for parameters=" + jobParameters + ".  If you want to run this job again, change the parameters.");    }  }  executionContext=ecDao.getExecutionContext(jobExecutionDao.getLastJobExecution(jobInstance));} @AT@ 4126 @LENGTH@ 135
---------INS MethodInvocation@@executions.isEmpty() @TO@ IfStatement@@if (executions.isEmpty()) {  throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);} @AT@ 4130 @LENGTH@ 20
------------INS SimpleName@@Name:executions @TO@ MethodInvocation@@executions.isEmpty() @AT@ 4130 @LENGTH@ 10
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@executions.isEmpty() @AT@ 4141 @LENGTH@ 9
---------INS Block@@ThenBody:{  throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);} @TO@ IfStatement@@if (executions.isEmpty()) {  throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);} @AT@ 4152 @LENGTH@ 109
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance) @TO@ Block@@ThenBody:{  throw new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance);} @AT@ 4158 @LENGTH@ 98
---------------INS ClassInstanceCreation@@IllegalStateException["Cannot find any job execution for job instance: " + jobInstance] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot find any job execution for job instance: " + jobInstance) @AT@ 4164 @LENGTH@ 91
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Cannot find any job execution for job instance: " + jobInstance] @AT@ 4164 @LENGTH@ 3
------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Cannot find any job execution for job instance: " + jobInstance] @AT@ 4168 @LENGTH@ 21
------------------INS InfixExpression@@"Cannot find any job execution for job instance: " + jobInstance @TO@ ClassInstanceCreation@@IllegalStateException["Cannot find any job execution for job instance: " + jobInstance] @AT@ 4190 @LENGTH@ 64
---------------------INS StringLiteral@@"Cannot find any job execution for job instance: " @TO@ InfixExpression@@"Cannot find any job execution for job instance: " + jobInstance @AT@ 4190 @LENGTH@ 50
---------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot find any job execution for job instance: " + jobInstance @AT@ 4240 @LENGTH@ 1
---------------------INS SimpleName@@jobInstance @TO@ InfixExpression@@"Cannot find any job execution for job instance: " + jobInstance @AT@ 4243 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("SOAPAction"),"GetPersonAction") @TO@ MethodInvocation:assertEquals("GetPersonAction",exchange.getIn().getHeader("SOAPAction")) @AT@ 1760 @LENGTH@ 74
---UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("SOAPAction"),"GetPersonAction") @TO@ assertEquals("GetPersonAction",exchange.getIn().getHeader("SOAPAction")) @AT@ 1760 @LENGTH@ 73
------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("SOAPAction"), "GetPersonAction"] @TO@ MethodName:assertEquals:["GetPersonAction", exchange.getIn().getHeader("SOAPAction")] @AT@ 1760 @LENGTH@ 73
---------MOV MethodInvocation@@exchange.getIn().getHeader("SOAPAction") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("SOAPAction"), "GetPersonAction"] @AT@ 1773 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(IOConverter.toString(file,null),"Bye World") @TO@ MethodInvocation:assertEquals("Bye World",IOConverter.toString(file,null)) @AT@ 1717 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals(IOConverter.toString(file,null),"Bye World") @TO@ assertEquals("Bye World",IOConverter.toString(file,null)) @AT@ 1717 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:[IOConverter.toString(file,null), "Bye World"] @TO@ MethodName:assertEquals:["Bye World", IOConverter.toString(file,null)] @AT@ 1717 @LENGTH@ 59
---------MOV MethodInvocation@@IOConverter.toString(file,null) @TO@ SimpleName@@MethodName:assertEquals:[IOConverter.toString(file,null), "Bye World"] @AT@ 1730 @LENGTH@ 32


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowired, Exception,  @AT@ 2664 @LENGTH@ 507
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowired @AT@ 2676 @LENGTH@ 40


UPD Block@@ElseBody:if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals(exchange.getIn().getHeader("String"),"String");    assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @TO@ ElseBody:if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals("String",exchange.getIn().getHeader("String"));    assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @AT@ 5175 @LENGTH@ 899
---UPD IfStatement@@if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals(exchange.getIn().getHeader("String"),"String");    assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @TO@ if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals("String",exchange.getIn().getHeader("String"));    assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @AT@ 5175 @LENGTH@ 899
------UPD Block@@ThenBody:{  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals(exchange.getIn().getHeader("String"),"String");    assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @TO@ ThenBody:{  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals("String",exchange.getIn().getHeader("String"));    assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @AT@ 5227 @LENGTH@ 847
---------UPD IfStatement@@if (exchange.getIn().getBody(String.class).contains("header")) {  assertEquals(exchange.getIn().getHeader("String"),"String");  assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");} @TO@ if (exchange.getIn().getBody(String.class).contains("header")) {  assertEquals("String",exchange.getIn().getHeader("String"));  assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));} @AT@ 5257 @LENGTH@ 292
------------UPD Block@@ThenBody:{  assertEquals(exchange.getIn().getHeader("String"),"String");  assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");} @TO@ ThenBody:{  assertEquals("String",exchange.getIn().getHeader("String"));  assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));} @AT@ 5320 @LENGTH@ 229
---------------UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("String"),"String") @TO@ MethodInvocation:assertEquals("String",exchange.getIn().getHeader("String")) @AT@ 5354 @LENGTH@ 61
------------------UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("String"),"String") @TO@ assertEquals("String",exchange.getIn().getHeader("String")) @AT@ 5354 @LENGTH@ 60
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader") @TO@ MethodInvocation:assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader")) @AT@ 5448 @LENGTH@ 71
------------------UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader") @TO@ assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader")) @AT@ 5448 @LENGTH@ 70
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---UPD IfStatement@@if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals(exchange.getIn().getHeader("String"),"String");    assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @TO@ if (exchange.getIn().getBody(String.class) != null) {  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals("String",exchange.getIn().getHeader("String"));    assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @AT@ 5175 @LENGTH@ 899
------UPD Block@@ThenBody:{  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals(exchange.getIn().getHeader("String"),"String");    assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @TO@ ThenBody:{  if (exchange.getIn().getBody(String.class).contains("header")) {    assertEquals("String",exchange.getIn().getHeader("String"));    assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));  }  if (exchange.getIn().getBody(String.class).contains("Exception")) {    throw new IllegalArgumentException("Boom");  }  if (exchange.getIn().getBody(String.class).contains("TimeOut")) {    Thread.sleep(TIMEOUT_MS * 2);  }  exchange.getIn().setBody(exchange.getIn().getBody(String.class) + " response");} @AT@ 5227 @LENGTH@ 847
---------UPD IfStatement@@if (exchange.getIn().getBody(String.class).contains("header")) {  assertEquals(exchange.getIn().getHeader("String"),"String");  assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");} @TO@ if (exchange.getIn().getBody(String.class).contains("header")) {  assertEquals("String",exchange.getIn().getHeader("String"));  assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));} @AT@ 5257 @LENGTH@ 292
------------UPD Block@@ThenBody:{  assertEquals(exchange.getIn().getHeader("String"),"String");  assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader");} @TO@ ThenBody:{  assertEquals("String",exchange.getIn().getHeader("String"));  assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader"));} @AT@ 5320 @LENGTH@ 229
---------------UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("String"),"String") @TO@ MethodInvocation:assertEquals("String",exchange.getIn().getHeader("String")) @AT@ 5354 @LENGTH@ 61
------------------UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("String"),"String") @TO@ assertEquals("String",exchange.getIn().getHeader("String")) @AT@ 5354 @LENGTH@ 60
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @TO@ MethodName:assertEquals:["String", exchange.getIn().getHeader("String")] @AT@ 5354 @LENGTH@ 60
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("String") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("String"), "String"] @AT@ 5367 @LENGTH@ 36
---------------UPD ExpressionStatement@@MethodInvocation:assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader") @TO@ MethodInvocation:assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader")) @AT@ 5448 @LENGTH@ 71
------------------UPD MethodInvocation@@assertEquals(exchange.getIn().getHeader("routeHeader"),"routeHeader") @TO@ assertEquals("routeHeader",exchange.getIn().getHeader("routeHeader")) @AT@ 5448 @LENGTH@ 70
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41
---------------------UPD SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @TO@ MethodName:assertEquals:["routeHeader", exchange.getIn().getHeader("routeHeader")] @AT@ 5448 @LENGTH@ 70
------------------------MOV MethodInvocation@@exchange.getIn().getHeader("routeHeader") @TO@ SimpleName@@MethodName:assertEquals:[exchange.getIn().getHeader("routeHeader"), "routeHeader"] @AT@ 5461 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ MethodInvocation:assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2432 @LENGTH@ 91
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.VERSION_ID),"11192828ahsh2723") @TO@ assertEquals("11192828ahsh2723",resultExchange.getIn().getHeader(S3Constants.VERSION_ID)) @AT@ 2432 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @TO@ MethodName:assertEquals:["11192828ahsh2723", resultExchange.getIn().getHeader(S3Constants.VERSION_ID)] @AT@ 2432 @LENGTH@ 90
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.VERSION_ID) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.VERSION_ID), "11192828ahsh2723"] @AT@ 2445 @LENGTH@ 56


UPD IfStatement@@if (configurer instanceof PropertyConfigurerGetter) {  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }  ;} @TO@ if (configurer instanceof PropertyConfigurerGetter) {  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }} @AT@ 5424 @LENGTH@ 439
---UPD Block@@ThenBody:{  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }  ;} @TO@ ThenBody:{  PropertyConfigurerGetter getter=(PropertyConfigurerGetter)configurer;  for (  String name : getter.getAllOptions(this).keySet()) {    if (known.containsKey(name)) {      Object value=known.remove(name);      configurer.configure(getCamelContext(),this,name,value,true);    }  }} @AT@ 5476 @LENGTH@ 387


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault) @TO@ MethodInvocation:exchange.getMessage().setBody(fault) @AT@ 2115 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(fault) @TO@ exchange.getMessage().setBody(fault) @AT@ 2115 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2115 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:Optional.of(value) @TO@ MethodInvocation:Optional.of(target) @AT@ 22665 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertEquals("we should get the right answer from router","echo hello world",str) @TO@ MethodInvocation:assertEquals("echo hello world",str,"we should get the right answer from router") @AT@ 3321 @LENGTH@ 84
---UPD MethodInvocation@@assertEquals("we should get the right answer from router","echo hello world",str) @TO@ assertEquals("echo hello world",str,"we should get the right answer from router") @AT@ 3321 @LENGTH@ 83
------UPD SimpleName@@MethodName:assertEquals:["we should get the right answer from router", "echo hello world", str] @TO@ MethodName:assertEquals:["echo hello world", str, "we should get the right answer from router"] @AT@ 3321 @LENGTH@ 83
---------DEL StringLiteral@@"we should get the right answer from router" @AT@ 3334 @LENGTH@ 44
---------INS StringLiteral@@"we should get the right answer from router" @TO@ SimpleName@@MethodName:assertEquals:["we should get the right answer from router", "echo hello world", str] @AT@ 3359 @LENGTH@ 44


UPD FieldDeclaration@@private, static, final, Double, [VALUE=new Long(System.currentTimeMillis()).doubleValue()] @TO@ private, static, final, Double, [VALUE=Long.valueOf(System.currentTimeMillis()).doubleValue()] @AT@ 1702 @LENGTH@ 87
---UPD VariableDeclarationFragment@@VALUE=new Long(System.currentTimeMillis()).doubleValue() @TO@ VALUE=Long.valueOf(System.currentTimeMillis()).doubleValue() @AT@ 1730 @LENGTH@ 58
------UPD MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @TO@ Long.valueOf(System.currentTimeMillis()).doubleValue() @AT@ 1738 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:valueOf:[System.currentTimeMillis()] @TO@ MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @AT@ 1738 @LENGTH@ 40
------------INS MethodInvocation@@System.currentTimeMillis() @TO@ MethodInvocation@@MethodName:valueOf:[System.currentTimeMillis()] @AT@ 1751 @LENGTH@ 26
---------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1747 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 1754 @LENGTH@ 19
---------DEL ClassInstanceCreation@@Long[System.currentTimeMillis()] @AT@ 1738 @LENGTH@ 36
------------DEL New@@new @AT@ 1738 @LENGTH@ 3
------------DEL SimpleType@@Long @AT@ 1742 @LENGTH@ 4
------------DEL MethodInvocation@@System.currentTimeMillis() @AT@ 1747 @LENGTH@ 26
---------INS SimpleName@@Name:Long @TO@ MethodInvocation@@new Long(System.currentTimeMillis()).doubleValue() @AT@ 1738 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:answer.setCamelContext(context) @TO@ MethodDeclaration@@protected, Language, MethodName:assertResolveLanguage, String languageName,  @AT@ 2069 @LENGTH@ 32
---INS MethodInvocation@@answer.setCamelContext(context) @TO@ ExpressionStatement@@MethodInvocation:answer.setCamelContext(context) @AT@ 2069 @LENGTH@ 31
------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.setCamelContext(context) @AT@ 2069 @LENGTH@ 6
------INS SimpleName@@MethodName:setCamelContext:[context] @TO@ MethodInvocation@@answer.setCamelContext(context) @AT@ 2076 @LENGTH@ 24
---------INS SimpleName@@context @TO@ SimpleName@@MethodName:setCamelContext:[context] @AT@ 2092 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("log:before").process(exchange -> beforeThreadName=Thread.currentThread().getName()).inOut(url).process(exchange -> afterThreadName=Thread.currentThread().getName()).to("log:after").to("mock:result") @TO@ MethodInvocation:from("direct:start").to("log:before").process(exchange -> beforeThreadName=Thread.currentThread().getName()).to(ExchangePattern.InOut,url).process(exchange -> afterThreadName=Thread.currentThread().getName()).to("log:after").to("mock:result") @AT@ 1836 @LENGTH@ 378
---UPD MethodInvocation@@from("direct:start").to("log:before").process(exchange -> beforeThreadName=Thread.currentThread().getName()).inOut(url).process(exchange -> afterThreadName=Thread.currentThread().getName()).to("log:after").to("mock:result") @TO@ from("direct:start").to("log:before").process(exchange -> beforeThreadName=Thread.currentThread().getName()).to(ExchangePattern.InOut,url).process(exchange -> afterThreadName=Thread.currentThread().getName()).to("log:after").to("mock:result") @AT@ 1836 @LENGTH@ 377
------UPD MethodInvocation@@MethodName:inOut:[url] @TO@ MethodName:to:[ExchangePattern.InOut, url] @AT@ 1836 @LENGTH@ 196
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:[url] @AT@ 2066 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2066 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2082 @LENGTH@ 5


INS MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), @MockitoSettings(strictness=Strictness.LENIENT)]DomainClassConverterUnitTests,  @AT@ 6905 @LENGTH@ 526
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 6900 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsNullForFailedLookup @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 6905 @LENGTH@ 26
---INS VariableDeclarationStatement@@ApplicationContext context=initContextWithRepo(); @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 6939 @LENGTH@ 51
------INS SimpleType@@ApplicationContext @TO@ VariableDeclarationStatement@@ApplicationContext context=initContextWithRepo(); @AT@ 6939 @LENGTH@ 18
------INS VariableDeclarationFragment@@context=initContextWithRepo() @TO@ VariableDeclarationStatement@@ApplicationContext context=initContextWithRepo(); @AT@ 6958 @LENGTH@ 31
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=initContextWithRepo() @AT@ 6958 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:initContextWithRepo:[] @TO@ VariableDeclarationFragment@@context=initContextWithRepo() @AT@ 6968 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:converter.setApplicationContext(context) @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 6993 @LENGTH@ 41
------INS MethodInvocation@@converter.setApplicationContext(context) @TO@ ExpressionStatement@@MethodInvocation:converter.setApplicationContext(context) @AT@ 6993 @LENGTH@ 40
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setApplicationContext(context) @AT@ 6993 @LENGTH@ 9
---------INS SimpleName@@MethodName:setApplicationContext:[context] @TO@ MethodInvocation@@converter.setApplicationContext(context) @AT@ 7003 @LENGTH@ 30
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:setApplicationContext:[context] @AT@ 7025 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:doReturn(4711L).when(service).convert("4711",Long.class) @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 7064 @LENGTH@ 58
------INS MethodInvocation@@doReturn(4711L).when(service).convert("4711",Long.class) @TO@ ExpressionStatement@@MethodInvocation:doReturn(4711L).when(service).convert("4711",Long.class) @AT@ 7064 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:when:[service] @TO@ MethodInvocation@@doReturn(4711L).when(service).convert("4711",Long.class) @AT@ 7064 @LENGTH@ 29
------------INS SimpleName@@service @TO@ MethodInvocation@@MethodName:when:[service] @AT@ 7085 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:doReturn:[4711L] @TO@ MethodInvocation@@doReturn(4711L).when(service).convert("4711",Long.class) @AT@ 7064 @LENGTH@ 15
------------INS NumberLiteral@@4711L @TO@ MethodInvocation@@MethodName:doReturn:[4711L] @AT@ 7073 @LENGTH@ 5
---------INS SimpleName@@MethodName:convert:["4711", Long.class] @TO@ MethodInvocation@@doReturn(4711L).when(service).convert("4711",Long.class) @AT@ 7094 @LENGTH@ 27
------------INS StringLiteral@@"4711" @TO@ SimpleName@@MethodName:convert:["4711", Long.class] @AT@ 7102 @LENGTH@ 6
------------INS TypeLiteral@@Long.class @TO@ SimpleName@@MethodName:convert:["4711", Long.class] @AT@ 7110 @LENGTH@ 10
---INS VariableDeclarationStatement@@UserRepository users=context.getBean(UserRepository.class); @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 7166 @LENGTH@ 61
------INS SimpleType@@UserRepository @TO@ VariableDeclarationStatement@@UserRepository users=context.getBean(UserRepository.class); @AT@ 7166 @LENGTH@ 14
------INS VariableDeclarationFragment@@users=context.getBean(UserRepository.class) @TO@ VariableDeclarationStatement@@UserRepository users=context.getBean(UserRepository.class); @AT@ 7181 @LENGTH@ 45
---------INS SimpleName@@users @TO@ VariableDeclarationFragment@@users=context.getBean(UserRepository.class) @AT@ 7181 @LENGTH@ 5
---------INS MethodInvocation@@context.getBean(UserRepository.class) @TO@ VariableDeclarationFragment@@users=context.getBean(UserRepository.class) @AT@ 7189 @LENGTH@ 37
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBean(UserRepository.class) @AT@ 7189 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBean:[UserRepository.class] @TO@ MethodInvocation@@context.getBean(UserRepository.class) @AT@ 7197 @LENGTH@ 29
---------------INS TypeLiteral@@UserRepository.class @TO@ SimpleName@@MethodName:getBean:[UserRepository.class] @AT@ 7205 @LENGTH@ 20
---INS ExpressionStatement@@Assignment:users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 7230 @LENGTH@ 65
------INS Assignment@@users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @TO@ ExpressionStatement@@Assignment:users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7230 @LENGTH@ 64
---------INS SimpleName@@users @TO@ Assignment@@users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7230 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7235 @LENGTH@ 1
---------INS CastExpression@@(UserRepository)AopProxyUtils.getSingletonTarget(users) @TO@ Assignment@@users=(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7238 @LENGTH@ 56
------------INS SimpleType@@UserRepository @TO@ CastExpression@@(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7239 @LENGTH@ 14
------------INS MethodInvocation@@AopProxyUtils.getSingletonTarget(users) @TO@ CastExpression@@(UserRepository)AopProxyUtils.getSingletonTarget(users) @AT@ 7255 @LENGTH@ 39
---------------INS SimpleName@@Name:AopProxyUtils @TO@ MethodInvocation@@AopProxyUtils.getSingletonTarget(users) @AT@ 7255 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getSingletonTarget:[users] @TO@ MethodInvocation@@AopProxyUtils.getSingletonTarget(users) @AT@ 7269 @LENGTH@ 25
------------------INS SimpleName@@users @TO@ SimpleName@@MethodName:getSingletonTarget:[users] @AT@ 7288 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:doReturn(Optional.empty()).when(users).findById(any()) @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 7298 @LENGTH@ 55
------INS MethodInvocation@@doReturn(Optional.empty()).when(users).findById(any()) @TO@ ExpressionStatement@@MethodInvocation:doReturn(Optional.empty()).when(users).findById(any()) @AT@ 7298 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:when:[users] @TO@ MethodInvocation@@doReturn(Optional.empty()).when(users).findById(any()) @AT@ 7298 @LENGTH@ 38
------------INS SimpleName@@users @TO@ MethodInvocation@@MethodName:when:[users] @AT@ 7330 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:doReturn:[Optional.empty()] @TO@ MethodInvocation@@doReturn(Optional.empty()).when(users).findById(any()) @AT@ 7298 @LENGTH@ 26
------------INS MethodInvocation@@Optional.empty() @TO@ MethodInvocation@@MethodName:doReturn:[Optional.empty()] @AT@ 7307 @LENGTH@ 16
---------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.empty() @AT@ 7307 @LENGTH@ 8
---------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Optional.empty() @AT@ 7316 @LENGTH@ 7
---------INS SimpleName@@MethodName:findById:[any()] @TO@ MethodInvocation@@doReturn(Optional.empty()).when(users).findById(any()) @AT@ 7337 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:findById:[any()] @AT@ 7346 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(converter.convert("4711",STRING_TYPE,USER_TYPE)).isNull() @TO@ MethodDeclaration@@void, MethodName:returnsNullForFailedLookup,  @AT@ 7357 @LENGTH@ 71
------INS MethodInvocation@@assertThat(converter.convert("4711",STRING_TYPE,USER_TYPE)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(converter.convert("4711",STRING_TYPE,USER_TYPE)).isNull() @AT@ 7357 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:assertThat:[converter.convert("4711",STRING_TYPE,USER_TYPE)] @TO@ MethodInvocation@@assertThat(converter.convert("4711",STRING_TYPE,USER_TYPE)).isNull() @AT@ 7357 @LENGTH@ 61
------------INS MethodInvocation@@converter.convert("4711",STRING_TYPE,USER_TYPE) @TO@ MethodInvocation@@MethodName:assertThat:[converter.convert("4711",STRING_TYPE,USER_TYPE)] @AT@ 7368 @LENGTH@ 49
---------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convert("4711",STRING_TYPE,USER_TYPE) @AT@ 7368 @LENGTH@ 9
---------------INS SimpleName@@MethodName:convert:["4711", STRING_TYPE, USER_TYPE] @TO@ MethodInvocation@@converter.convert("4711",STRING_TYPE,USER_TYPE) @AT@ 7378 @LENGTH@ 39
------------------INS StringLiteral@@"4711" @TO@ SimpleName@@MethodName:convert:["4711", STRING_TYPE, USER_TYPE] @AT@ 7386 @LENGTH@ 6
------------------INS SimpleName@@STRING_TYPE @TO@ SimpleName@@MethodName:convert:["4711", STRING_TYPE, USER_TYPE] @AT@ 7394 @LENGTH@ 11
------------------INS SimpleName@@USER_TYPE @TO@ SimpleName@@MethodName:convert:["4711", STRING_TYPE, USER_TYPE] @AT@ 7407 @LENGTH@ 9
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(converter.convert("4711",STRING_TYPE,USER_TYPE)).isNull() @AT@ 7419 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals(e.getCause().getMessage(),"We don't have Donkeys, only Camels") @TO@ MethodInvocation:assertEquals("We don't have Donkeys, only Camels",e.getCause().getMessage()) @AT@ 1724 @LENGTH@ 78
---UPD MethodInvocation@@assertEquals(e.getCause().getMessage(),"We don't have Donkeys, only Camels") @TO@ assertEquals("We don't have Donkeys, only Camels",e.getCause().getMessage()) @AT@ 1724 @LENGTH@ 77
------UPD SimpleName@@MethodName:assertEquals:[e.getCause().getMessage(), "We don't have Donkeys, only Camels"] @TO@ MethodName:assertEquals:["We don't have Donkeys, only Camels", e.getCause().getMessage()] @AT@ 1724 @LENGTH@ 77
---------INS StringLiteral@@"We don't have Donkeys, only Camels" @TO@ SimpleName@@MethodName:assertEquals:[e.getCause().getMessage(), "We don't have Donkeys, only Camels"] @AT@ 1737 @LENGTH@ 36
---------DEL StringLiteral@@"We don't have Donkeys, only Camels" @AT@ 1764 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ MethodInvocation:assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2643 @LENGTH@ 102
---UPD MethodInvocation@@assertEquals(resultExchange.getIn().getHeader(S3Constants.E_TAG),"3a5c8b1ad448bca04584ecb55b836264") @TO@ assertEquals("3a5c8b1ad448bca04584ecb55b836264",resultExchange.getIn().getHeader(S3Constants.E_TAG)) @AT@ 2643 @LENGTH@ 101
------UPD SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @TO@ MethodName:assertEquals:["3a5c8b1ad448bca04584ecb55b836264", resultExchange.getIn().getHeader(S3Constants.E_TAG)] @AT@ 2643 @LENGTH@ 101
---------MOV MethodInvocation@@resultExchange.getIn().getHeader(S3Constants.E_TAG) @TO@ SimpleName@@MethodName:assertEquals:[resultExchange.getIn().getHeader(S3Constants.E_TAG), "3a5c8b1ad448bca04584ecb55b836264"] @AT@ 2656 @LENGTH@ 51


UPD ReturnStatement@@MethodInvocation:convertAndReturn(delegate.zRangeByLex(serialize(key),range),byteSetToStringSet) @TO@ MethodInvocation:convertAndReturn(delegate.zRangeByLex(serialize(key),range,limit),byteSetToStringSet) @AT@ 114003 @LENGTH@ 89
---UPD MethodInvocation@@convertAndReturn(delegate.zRangeByLex(serialize(key),range),byteSetToStringSet) @TO@ convertAndReturn(delegate.zRangeByLex(serialize(key),range,limit),byteSetToStringSet) @AT@ 114010 @LENGTH@ 81
------UPD SimpleName@@MethodName:convertAndReturn:[delegate.zRangeByLex(serialize(key),range), byteSetToStringSet] @TO@ MethodName:convertAndReturn:[delegate.zRangeByLex(serialize(key),range,limit), byteSetToStringSet] @AT@ 114010 @LENGTH@ 81
---------UPD MethodInvocation@@delegate.zRangeByLex(serialize(key),range) @TO@ delegate.zRangeByLex(serialize(key),range,limit) @AT@ 114027 @LENGTH@ 43
------------UPD SimpleName@@MethodName:zRangeByLex:[serialize(key), range] @TO@ MethodName:zRangeByLex:[serialize(key), range, limit] @AT@ 114036 @LENGTH@ 34
---------------INS SimpleName@@limit @TO@ SimpleName@@MethodName:zRangeByLex:[serialize(key), range] @AT@ 114110 @LENGTH@ 5


UPD EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @TO@ for (ClientRegistration registration : registrations) {  Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId()));  result.put(registration.getRegistrationId(),registration);} @AT@ 2379 @LENGTH@ 296
---DEL IfStatement@@if (result.containsKey(registration.getRegistrationId())) {  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @AT@ 2438 @LENGTH@ 170
------DEL Block@@ThenBody:{  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @AT@ 2496 @LENGTH@ 112
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId())) @AT@ 2502 @LENGTH@ 101
------------DEL ClassInstanceCreation@@IllegalStateException[String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2508 @LENGTH@ 94
---------------DEL New@@new @AT@ 2508 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2512 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId())) @TO@ EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @AT@ 2438 @LENGTH@ 148
------INS MethodInvocation@@Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId())) @TO@ ExpressionStatement@@MethodInvocation:Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId())) @AT@ 2438 @LENGTH@ 147
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId())) @AT@ 2438 @LENGTH@ 6
---------INS SimpleName@@MethodName:state:[!result.containsKey(registration.getRegistrationId()), () -> String.format("Duplicate key %s",registration.getRegistrationId())] @TO@ MethodInvocation@@Assert.state(!result.containsKey(registration.getRegistrationId()),() -> String.format("Duplicate key %s",registration.getRegistrationId())) @AT@ 2445 @LENGTH@ 140
------------INS PrefixExpression@@!result.containsKey(registration.getRegistrationId()) @TO@ SimpleName@@MethodName:state:[!result.containsKey(registration.getRegistrationId()), () -> String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2451 @LENGTH@ 53
---------------MOV MethodInvocation@@result.containsKey(registration.getRegistrationId()) @TO@ PrefixExpression@@!result.containsKey(registration.getRegistrationId()) @AT@ 2442 @LENGTH@ 52
---------------INS Operator@@! @TO@ PrefixExpression@@!result.containsKey(registration.getRegistrationId()) @AT@ 2451 @LENGTH@ 1
------------INS LambdaExpression@@() -> String.format("Duplicate key %s",registration.getRegistrationId()) @TO@ SimpleName@@MethodName:state:[!result.containsKey(registration.getRegistrationId()), () -> String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2511 @LENGTH@ 73
---------------MOV MethodInvocation@@String.format("Duplicate key %s",registration.getRegistrationId()) @TO@ LambdaExpression@@() -> String.format("Duplicate key %s",registration.getRegistrationId()) @AT@ 2534 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:assertNull(out.getOut().getBody()) @TO@ MethodInvocation:assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2186 @LENGTH@ 35
---UPD MethodInvocation@@assertNull(out.getOut().getBody()) @TO@ assertEquals("Hello World",out.getMessage().getBody()) @AT@ 2186 @LENGTH@ 34
------UPD SimpleName@@MethodName:assertNull:[out.getOut().getBody()] @TO@ MethodName:assertEquals:["Hello World", out.getMessage().getBody()] @AT@ 2186 @LENGTH@ 34
---------UPD MethodInvocation@@out.getOut().getBody() @TO@ out.getMessage().getBody() @AT@ 2197 @LENGTH@ 22
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2197 @LENGTH@ 12
---------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:assertNull:[out.getOut().getBody()] @AT@ 2205 @LENGTH@ 13


UPD MethodDeclaration@@public, static, MongoDatabase, MethodName:getDatabase, String dbName, MongoDatabaseFactory factory, SessionSynchronization sessionSynchronization,  @TO@ public, static, MongoDatabase, MethodName:getDatabase, @Nullable String dbName, MongoDatabaseFactory factory, SessionSynchronization sessionSynchronization,  @AT@ 4986 @LENGTH@ 209
---UPD SingleVariableDeclaration@@String dbName @TO@ @Nullable String dbName @AT@ 5026 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(response,"<ok/>","The response should be ok") @TO@ MethodInvocation:assertEquals("<ok/>",response,"The response should be ok") @AT@ 1630 @LENGTH@ 61
---UPD MethodInvocation@@assertEquals(response,"<ok/>","The response should be ok") @TO@ assertEquals("<ok/>",response,"The response should be ok") @AT@ 1630 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @TO@ MethodName:assertEquals:["<ok/>", response, "The response should be ok"] @AT@ 1630 @LENGTH@ 60
---------INS StringLiteral@@"<ok/>" @TO@ SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @AT@ 1643 @LENGTH@ 7
---------DEL StringLiteral@@"<ok/>" @AT@ 1653 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue(builder.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(builder.matchesWaitTime()) @AT@ 2901 @LENGTH@ 42
---UPD MethodInvocation@@assertTrue(builder.matchesMockWaitTime()) @TO@ assertTrue(builder.matchesWaitTime()) @AT@ 2901 @LENGTH@ 41
------UPD SimpleName@@MethodName:assertTrue:[builder.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[builder.matchesWaitTime()] @AT@ 2901 @LENGTH@ 41
---------UPD MethodInvocation@@builder.matchesMockWaitTime() @TO@ builder.matchesWaitTime() @AT@ 2912 @LENGTH@ 29
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2920 @LENGTH@ 21


UPD VariableDeclarationStatement@@ServiceNameRegistry<ClusteringCacheRequirement> registry=requirement -> ServiceNameFactory.parseServiceName(requirement.resolve(containerName,serverName)); @TO@ ServiceNameRegistry<ClusteringCacheRequirement> registry=new ServiceNameRegistry<ClusteringCacheRequirement>(){
  @Override public ServiceName getServiceName(  ClusteringCacheRequirement requirement){
    return ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName);
  }
}
; @AT@ 3666 @LENGTH@ 158
---UPD VariableDeclarationFragment@@registry=requirement -> ServiceNameFactory.parseServiceName(requirement.resolve(containerName,serverName)) @TO@ registry=new ServiceNameRegistry<ClusteringCacheRequirement>(){
  @Override public ServiceName getServiceName(  ClusteringCacheRequirement requirement){
    return ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName);
  }
}
 @AT@ 3714 @LENGTH@ 109
------DEL LambdaExpression@@requirement -> ServiceNameFactory.parseServiceName(requirement.resolve(containerName,serverName)) @AT@ 3725 @LENGTH@ 98
---------DEL VariableDeclarationFragment@@requirement @AT@ 3725 @LENGTH@ 11
------------DEL SimpleName@@requirement @AT@ 3725 @LENGTH@ 11
---------DEL MethodInvocation@@ServiceNameFactory.parseServiceName(requirement.resolve(containerName,serverName)) @AT@ 3740 @LENGTH@ 83
------------DEL SimpleName@@MethodName:parseServiceName:[requirement.resolve(containerName,serverName)] @AT@ 3759 @LENGTH@ 64
---------------DEL MethodInvocation@@requirement.resolve(containerName,serverName) @AT@ 3776 @LENGTH@ 46
------INS ClassInstanceCreation@@ServiceNameRegistry<ClusteringCacheRequirement>[] @TO@ VariableDeclarationFragment@@registry=requirement -> ServiceNameFactory.parseServiceName(requirement.resolve(containerName,serverName)) @AT@ 3767 @LENGTH@ 306
---------INS New@@new @TO@ ClassInstanceCreation@@ServiceNameRegistry<ClusteringCacheRequirement>[] @AT@ 3767 @LENGTH@ 3
---------INS ParameterizedType@@ServiceNameRegistry<ClusteringCacheRequirement> @TO@ ClassInstanceCreation@@ServiceNameRegistry<ClusteringCacheRequirement>[] @AT@ 3771 @LENGTH@ 47
------------INS SimpleType@@ServiceNameRegistry @TO@ ParameterizedType@@ServiceNameRegistry<ClusteringCacheRequirement> @AT@ 3771 @LENGTH@ 19
------------INS SimpleType@@ClusteringCacheRequirement @TO@ ParameterizedType@@ServiceNameRegistry<ClusteringCacheRequirement> @AT@ 3791 @LENGTH@ 26
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ServiceNameRegistry<ClusteringCacheRequirement>[] @AT@ 3821 @LENGTH@ 252
------------INS MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3857 @LENGTH@ 206
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @AT@ 3857 @LENGTH@ 6
---------------INS SimpleType@@ServiceName @TO@ MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @AT@ 3864 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getServiceName @TO@ MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @AT@ 3876 @LENGTH@ 14
---------------INS SingleVariableDeclaration@@ClusteringCacheRequirement requirement @TO@ MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @AT@ 3891 @LENGTH@ 38
------------------INS SimpleType@@ClusteringCacheRequirement @TO@ SingleVariableDeclaration@@ClusteringCacheRequirement requirement @AT@ 3891 @LENGTH@ 26
------------------INS SimpleName@@requirement @TO@ SingleVariableDeclaration@@ClusteringCacheRequirement requirement @AT@ 3918 @LENGTH@ 11
---------------INS ReturnStatement@@MethodInvocation:ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @TO@ MethodDeclaration@@public, ServiceName, MethodName:getServiceName, ClusteringCacheRequirement requirement,  @AT@ 3949 @LENGTH@ 100
------------------INS MethodInvocation@@ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @TO@ ReturnStatement@@MethodInvocation:ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @AT@ 3956 @LENGTH@ 92
---------------------MOV SimpleName@@Name:ServiceNameFactory @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @AT@ 3740 @LENGTH@ 18
---------------------MOV SimpleName@@MethodName:resolve:[containerName, serverName] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @AT@ 3788 @LENGTH@ 34
---------------------INS MethodInvocation@@MethodName:parseServiceName:[requirement.getName()] @TO@ MethodInvocation@@ServiceNameFactory.parseServiceName(requirement.getName()).append(containerName,serverName) @AT@ 3956 @LENGTH@ 58
------------------------INS MethodInvocation@@requirement.getName() @TO@ MethodInvocation@@MethodName:parseServiceName:[requirement.getName()] @AT@ 3992 @LENGTH@ 21
---------------------------MOV SimpleName@@Name:requirement @TO@ MethodInvocation@@requirement.getName() @AT@ 3776 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@requirement.getName() @AT@ 4004 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ MethodInvocation:Thread.sleep(10000) @AT@ 1893 @LENGTH@ 50
---UPD MethodInvocation@@Thread.sleep(runFrequency(TimeUnit.MILLISECONDS)) @TO@ Thread.sleep(10000) @AT@ 1893 @LENGTH@ 49
------UPD SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @TO@ MethodName:sleep:[10000] @AT@ 1900 @LENGTH@ 42
---------DEL MethodInvocation@@runFrequency(TimeUnit.MILLISECONDS) @AT@ 1906 @LENGTH@ 35
------------DEL SimpleName@@MethodName:runFrequency:[TimeUnit.MILLISECONDS] @AT@ 1906 @LENGTH@ 35
---------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 1919 @LENGTH@ 21
------------------DEL SimpleName@@TimeUnit @AT@ 1919 @LENGTH@ 8
------------------DEL SimpleName@@MILLISECONDS @AT@ 1928 @LENGTH@ 12
---------INS NumberLiteral@@10000 @TO@ SimpleName@@MethodName:sleep:[runFrequency(TimeUnit.MILLISECONDS)] @AT@ 1906 @LENGTH@ 5


UPD EnhancedForStatement@@for (String dbName : Utils.matchesDb(hiveDb,work.dbNameOrPattern)) {  LOG.debug("Dumping db: " + dbName);  tableList=work.replScope.includeAllTables() ? null : new ArrayList<>();  Database db=hiveDb.getDatabase(dbName);  if ((db != null) && (ReplUtils.isFirstIncPending(db.getParameters()))) {    throw new HiveException("Replication dump not allowed for replicated database" + " with first incremental dump pending : " + dbName);  }  int estimatedNumTables=Utils.getAllTables(hiveDb,dbName,work.replScope).size();  int estimatedNumFunctions=hiveDb.getAllFunctions().size();  replLogger=new BootstrapDumpLogger(dbName,dumpRoot.toString(),estimatedNumTables,estimatedNumFunctions);  replLogger.startLog();  Map<String,Long> metricMap=new HashMap<>();  metricMap.put(ReplUtils.MetricName.TABLES.name(),(long)estimatedNumTables);  metricMap.put(ReplUtils.MetricName.FUNCTIONS.name(),(long)estimatedNumFunctions);  work.getMetricCollector().reportStageStart(getName(),metricMap);  Path dbRoot=dumpDbMetadata(dbName,metadataPath,bootDumpBeginReplId,hiveDb);  Path dbDataRoot=new Path(new Path(dumpRoot,EximUtil.DATA_PATH_NAME),dbName);  dumpFunctionMetadata(dbName,dbRoot,hiveDb);  String uniqueKey=Utils.setDbBootstrapDumpState(hiveDb,dbName);  Exception caught=null;  try (Writer writer=new Writer(dbRoot,conf)){    List<Path> extTableLocations=new LinkedList<>();    for (    String tblName : Utils.matchesTbl(hiveDb,dbName,work.replScope)) {      LOG.debug("Dumping table: " + tblName + " to db root "+ dbRoot.toUri());      Table table=null;      try {        HiveWrapper.Tuple<Table> tableTuple=new HiveWrapper(hiveDb,dbName).table(tblName,conf);        table=tableTuple != null ? tableTuple.object : null;        if (shouldDumpExternalTableLocation() && TableType.EXTERNAL_TABLE.equals(tableTuple.object.getTableType())) {          LOG.debug("Adding table {} to external tables list",tblName);          extTableLocations.addAll(writer.dataLocationDump(tableTuple.object));        }        managedTableCopyPaths.addAll(dumpTable(dbName,tblName,validTxnList,dbRoot,dbDataRoot,bootDumpBeginReplId,hiveDb,tableTuple));      } catch (      InvalidTableException te) {        LOG.debug(te.getMessage());      }      dumpConstraintMetadata(dbName,tblName,dbRoot,hiveDb);      if (tableList != null && isTableSatifiesConfig(table)) {        tableList.add(tblName);      }    }    dumpTableListToDumpLocation(tableList,dumpRoot,dbName,conf);    extTableCopyWorks=dirLocationsToCopy(extTableLocations);  } catch (  Exception e) {    caught=e;  } finally {    try {      Utils.resetDbBootstrapDumpState(hiveDb,dbName,uniqueKey);    } catch (    Exception e) {      if (caught == null) {        throw e;      } else {        LOG.error("failed to reset the db state for " + uniqueKey + " on failure of repl dump",e);        throw caught;      }    }    if (caught != null) {      throw caught;    }  }  replLogger.endLog(bootDumpBeginReplId.toString());} @TO@ for (String dbName : Utils.matchesDb(hiveDb,work.dbNameOrPattern)) {  LOG.debug("Dumping db: " + dbName);  tableList=work.replScope.includeAllTables() ? null : new ArrayList<>();  Database db=hiveDb.getDatabase(dbName);  if ((db != null) && (ReplUtils.isFirstIncPending(db.getParameters()))) {    throw new HiveException("Replication dump not allowed for replicated database" + " with first incremental dump pending : " + dbName);  }  int estimatedNumTables=Utils.getAllTables(hiveDb,dbName,work.replScope).size();  int estimatedNumFunctions=hiveDb.getAllFunctions().size();  replLogger=new BootstrapDumpLogger(dbName,dumpRoot.toString(),estimatedNumTables,estimatedNumFunctions);  replLogger.startLog();  Map<String,Long> metricMap=new HashMap<>();  metricMap.put(ReplUtils.MetricName.TABLES.name(),(long)estimatedNumTables);  metricMap.put(ReplUtils.MetricName.FUNCTIONS.name(),(long)estimatedNumFunctions);  work.getMetricCollector().reportStageStart(getName(),metricMap);  Path dbRoot=dumpDbMetadata(dbName,metadataPath,bootDumpBeginReplId,hiveDb);  Path dbDataRoot=new Path(new Path(dumpRoot,EximUtil.DATA_PATH_NAME),dbName);  dumpFunctionMetadata(dbName,dbRoot,hiveDb);  String uniqueKey=Utils.setDbBootstrapDumpState(hiveDb,dbName);  Exception caught=null;  try (Writer writer=new Writer(dbRoot,conf)){    List<Path> extTableLocations=new LinkedList<>();    for (    String tblName : Utils.matchesTbl(hiveDb,dbName,work.replScope)) {      LOG.debug("Dumping table: " + tblName + " to db root "+ dbRoot.toUri());      Table table=null;      try {        HiveWrapper.Tuple<Table> tableTuple=new HiveWrapper(hiveDb,dbName).table(tblName,conf);        table=tableTuple != null ? tableTuple.object : null;        if (shouldDumpExternalTableLocation() && TableType.EXTERNAL_TABLE.equals(tableTuple.object.getTableType())) {          LOG.debug("Adding table {} to external tables list",tblName);          extTableLocations.addAll(writer.dataLocationDump(tableTuple.object));        }        managedTableCopyPaths.addAll(dumpTable(dbName,tblName,validTxnList,dbRoot,dbDataRoot,bootDumpBeginReplId,hiveDb,tableTuple));      } catch (      InvalidTableException te) {        LOG.debug(te.getMessage());      }      dumpConstraintMetadata(dbName,tblName,dbRoot,hiveDb);      if (tableList != null && isTableSatifiesConfig(table)) {        tableList.add(tblName);      }    }    dumpTableListToDumpLocation(tableList,dumpRoot,dbName,conf);    extTableCopyWorks=dirLocationsToCopy(extTableLocations);  } catch (  Exception e) {    caught=e;  } finally {    try {      Utils.resetDbBootstrapDumpState(hiveDb,dbName,uniqueKey);    } catch (    Exception e) {      if (caught == null) {        throw e;      } else {        LOG.error("failed to reset the db state for " + uniqueKey + " on failure of repl dump",e);        throw caught;      }    }    if (caught != null) {      throw caught;    }  }  replLogger.endLog(bootDumpBeginReplId.toString());  work.getMetricCollector().reportStageEnd(getName(),Status.SUCCESS,bootDumpBeginReplId);} @AT@ 36966 @LENGTH@ 3875
---MOV ExpressionStatement@@MethodInvocation:work.getMetricCollector().reportStageEnd(getName(),Status.SUCCESS,bootDumpBeginReplId) @TO@ EnhancedForStatement@@for (String dbName : Utils.matchesDb(hiveDb,work.dbNameOrPattern)) {  LOG.debug("Dumping db: " + dbName);  tableList=work.replScope.includeAllTables() ? null : new ArrayList<>();  Database db=hiveDb.getDatabase(dbName);  if ((db != null) && (ReplUtils.isFirstIncPending(db.getParameters()))) {    throw new HiveException("Replication dump not allowed for replicated database" + " with first incremental dump pending : " + dbName);  }  int estimatedNumTables=Utils.getAllTables(hiveDb,dbName,work.replScope).size();  int estimatedNumFunctions=hiveDb.getAllFunctions().size();  replLogger=new BootstrapDumpLogger(dbName,dumpRoot.toString(),estimatedNumTables,estimatedNumFunctions);  replLogger.startLog();  Map<String,Long> metricMap=new HashMap<>();  metricMap.put(ReplUtils.MetricName.TABLES.name(),(long)estimatedNumTables);  metricMap.put(ReplUtils.MetricName.FUNCTIONS.name(),(long)estimatedNumFunctions);  work.getMetricCollector().reportStageStart(getName(),metricMap);  Path dbRoot=dumpDbMetadata(dbName,metadataPath,bootDumpBeginReplId,hiveDb);  Path dbDataRoot=new Path(new Path(dumpRoot,EximUtil.DATA_PATH_NAME),dbName);  dumpFunctionMetadata(dbName,dbRoot,hiveDb);  String uniqueKey=Utils.setDbBootstrapDumpState(hiveDb,dbName);  Exception caught=null;  try (Writer writer=new Writer(dbRoot,conf)){    List<Path> extTableLocations=new LinkedList<>();    for (    String tblName : Utils.matchesTbl(hiveDb,dbName,work.replScope)) {      LOG.debug("Dumping table: " + tblName + " to db root "+ dbRoot.toUri());      Table table=null;      try {        HiveWrapper.Tuple<Table> tableTuple=new HiveWrapper(hiveDb,dbName).table(tblName,conf);        table=tableTuple != null ? tableTuple.object : null;        if (shouldDumpExternalTableLocation() && TableType.EXTERNAL_TABLE.equals(tableTuple.object.getTableType())) {          LOG.debug("Adding table {} to external tables list",tblName);          extTableLocations.addAll(writer.dataLocationDump(tableTuple.object));        }        managedTableCopyPaths.addAll(dumpTable(dbName,tblName,validTxnList,dbRoot,dbDataRoot,bootDumpBeginReplId,hiveDb,tableTuple));      } catch (      InvalidTableException te) {        LOG.debug(te.getMessage());      }      dumpConstraintMetadata(dbName,tblName,dbRoot,hiveDb);      if (tableList != null && isTableSatifiesConfig(table)) {        tableList.add(tblName);      }    }    dumpTableListToDumpLocation(tableList,dumpRoot,dbName,conf);    extTableCopyWorks=dirLocationsToCopy(extTableLocations);  } catch (  Exception e) {    caught=e;  } finally {    try {      Utils.resetDbBootstrapDumpState(hiveDb,dbName,uniqueKey);    } catch (    Exception e) {      if (caught == null) {        throw e;      } else {        LOG.error("failed to reset the db state for " + uniqueKey + " on failure of repl dump",e);        throw caught;      }    }    if (caught != null) {      throw caught;    }  }  replLogger.endLog(bootDumpBeginReplId.toString());} @AT@ 41356 @LENGTH@ 89


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1807 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1807 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1823 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:uriBuilder.addParameter("updateIfExists","true") @TO@ MethodInvocation:uriBuilder.addParameter("mergeIfExists","true") @AT@ 12443 @LENGTH@ 50
---UPD MethodInvocation@@uriBuilder.addParameter("updateIfExists","true") @TO@ uriBuilder.addParameter("mergeIfExists","true") @AT@ 12443 @LENGTH@ 49
------UPD SimpleName@@MethodName:addParameter:["updateIfExists", "true"] @TO@ MethodName:addParameter:["mergeIfExists", "true"] @AT@ 12454 @LENGTH@ 38
---------UPD StringLiteral@@"updateIfExists" @TO@ "mergeIfExists" @AT@ 12467 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:Assume.assumeThat("Please specify a Slack access token",token,CoreMatchers.notNullValue()) @TO@ MethodInvocation:assumeTrue(token != null,"Please specify a Slack access token") @AT@ 2319 @LENGTH@ 93
---UPD MethodInvocation@@Assume.assumeThat("Please specify a Slack access token",token,CoreMatchers.notNullValue()) @TO@ assumeTrue(token != null,"Please specify a Slack access token") @AT@ 2319 @LENGTH@ 92
------DEL SimpleName@@Name:Assume @AT@ 2319 @LENGTH@ 6
------UPD SimpleName@@MethodName:assumeThat:["Please specify a Slack access token", token, CoreMatchers.notNullValue()] @TO@ MethodName:assumeTrue:[token != null, "Please specify a Slack access token"] @AT@ 2326 @LENGTH@ 85
---------INS InfixExpression@@token != null @TO@ SimpleName@@MethodName:assumeThat:["Please specify a Slack access token", token, CoreMatchers.notNullValue()] @AT@ 2331 @LENGTH@ 13
------------INS SimpleName@@token @TO@ InfixExpression@@token != null @AT@ 2331 @LENGTH@ 5
------------INS Operator@@!= @TO@ InfixExpression@@token != null @AT@ 2336 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@token != null @AT@ 2340 @LENGTH@ 4
---------DEL SimpleName@@token @AT@ 2376 @LENGTH@ 5
---------DEL MethodInvocation@@CoreMatchers.notNullValue() @AT@ 2383 @LENGTH@ 27
------------DEL SimpleName@@Name:CoreMatchers @AT@ 2383 @LENGTH@ 12
------------DEL SimpleName@@MethodName:notNullValue:[] @AT@ 2396 @LENGTH@ 14


UPD TryStatement@@try (XmlWebApplicationContext parent=new XmlWebApplicationContext()){  parent.setConfigLocations(this.xml("AutoConfig"));  parent.refresh();  try (XmlWebApplicationContext child=new XmlWebApplicationContext()){    child.setParent(parent);    child.setConfigLocation(this.xml("MissingUserDetailsService"));    child.refresh();  } }  @TO@ try (XmlWebApplicationContext parent=new XmlWebApplicationContext()){  parent.setConfigLocations(MiscHttpConfigTests.xml("AutoConfig"));  parent.refresh();  try (XmlWebApplicationContext child=new XmlWebApplicationContext()){    child.setParent(parent);    child.setConfigLocation(MiscHttpConfigTests.xml("MissingUserDetailsService"));    child.refresh();  } }  @AT@ 22485 @LENGTH@ 350
---UPD ExpressionStatement@@MethodInvocation:parent.setConfigLocations(this.xml("AutoConfig")) @TO@ MethodInvocation:parent.setConfigLocations(MiscHttpConfigTests.xml("AutoConfig")) @AT@ 22561 @LENGTH@ 50
------UPD MethodInvocation@@parent.setConfigLocations(this.xml("AutoConfig")) @TO@ parent.setConfigLocations(MiscHttpConfigTests.xml("AutoConfig")) @AT@ 22561 @LENGTH@ 49
---------UPD SimpleName@@MethodName:setConfigLocations:[this.xml("AutoConfig")] @TO@ MethodName:setConfigLocations:[MiscHttpConfigTests.xml("AutoConfig")] @AT@ 22568 @LENGTH@ 42
------------UPD MethodInvocation@@this.xml("AutoConfig") @TO@ MiscHttpConfigTests.xml("AutoConfig") @AT@ 22587 @LENGTH@ 22
---------------DEL ThisExpression@@this @AT@ 22587 @LENGTH@ 4
---------------INS SimpleName@@Name:MiscHttpConfigTests @TO@ MethodInvocation@@this.xml("AutoConfig") @AT@ 22609 @LENGTH@ 19
---UPD TryStatement@@try (XmlWebApplicationContext child=new XmlWebApplicationContext()){  child.setParent(parent);  child.setConfigLocation(this.xml("MissingUserDetailsService"));  child.refresh();}  @TO@ try (XmlWebApplicationContext child=new XmlWebApplicationContext()){  child.setParent(parent);  child.setConfigLocation(MiscHttpConfigTests.xml("MissingUserDetailsService"));  child.refresh();}  @AT@ 22637 @LENGTH@ 194
------UPD ExpressionStatement@@MethodInvocation:child.setConfigLocation(this.xml("MissingUserDetailsService")) @TO@ MethodInvocation:child.setConfigLocation(MiscHttpConfigTests.xml("MissingUserDetailsService")) @AT@ 22742 @LENGTH@ 63
---------UPD MethodInvocation@@child.setConfigLocation(this.xml("MissingUserDetailsService")) @TO@ child.setConfigLocation(MiscHttpConfigTests.xml("MissingUserDetailsService")) @AT@ 22742 @LENGTH@ 62
------------UPD SimpleName@@MethodName:setConfigLocation:[this.xml("MissingUserDetailsService")] @TO@ MethodName:setConfigLocation:[MiscHttpConfigTests.xml("MissingUserDetailsService")] @AT@ 22748 @LENGTH@ 56
---------------UPD MethodInvocation@@this.xml("MissingUserDetailsService") @TO@ MiscHttpConfigTests.xml("MissingUserDetailsService") @AT@ 22766 @LENGTH@ 37
------------------DEL ThisExpression@@this @AT@ 22766 @LENGTH@ 4
------------------INS SimpleName@@Name:MiscHttpConfigTests @TO@ MethodInvocation@@this.xml("MissingUserDetailsService") @AT@ 22803 @LENGTH@ 19


UPD IfStatement@@if (inputBuffer[offset] != res) {  throw new IllegalStateException("Expected " + inputBuffer[offset] + " at offset "+ offset+ ", got "+ res);} @TO@ if (inputBuffer[offset] != (byte)res) {  throw new IllegalStateException("Expected " + inputBuffer[offset] + " at offset "+ offset+ ", got "+ res);} @AT@ 2015 @LENGTH@ 154
---UPD InfixExpression@@inputBuffer[offset] != res @TO@ inputBuffer[offset] != (byte)res @AT@ 2019 @LENGTH@ 26
------INS CastExpression@@(byte)res @TO@ InfixExpression@@inputBuffer[offset] != res @AT@ 2042 @LENGTH@ 10
---------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)res @AT@ 2043 @LENGTH@ 4
---------INS SimpleName@@res @TO@ CastExpression@@(byte)res @AT@ 2049 @LENGTH@ 3
------DEL SimpleName@@res @AT@ 2042 @LENGTH@ 3


UPD FieldDeclaration@@private, final, VectorizedRowBatch, [vectorizedRowBatch] @TO@ final, VectorizedRowBatch, [vectorizedRowBatch] @AT@ 5888 @LENGTH@ 52
---DEL Modifier@@private @AT@ 5888 @LENGTH@ 7


UPD MethodDeclaration@@private, void, MethodName:assertNotNull, PermissionList result, String list_result,  @TO@ private, void, MethodName:assertNotNull, PermissionList result, String listResult,  @AT@ 2105 @LENGTH@ 77
---UPD SingleVariableDeclaration@@String list_result @TO@ String listResult @AT@ 2155 @LENGTH@ 18
------UPD SimpleName@@list_result @TO@ listResult @AT@ 2162 @LENGTH@ 11


MOV MethodDeclaration@@public, voidMethodName:Argon2PasswordEncoder, int saltLength, int hashLength, int parallelism, int memory, int iterations,  @TO@ TypeDeclaration@@[public]Argon2PasswordEncoder, [PasswordEncoder] @AT@ 2213 @LENGTH@ 296


MOV MethodDeclaration@@public, static, MacAlgorithm, MethodName:from, String name,  @TO@ EnumDeclaration@@[public]MacAlgorithm, [JwsAlgorithm] @AT@ 1881 @LENGTH@ 182


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Integer(1),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted 2 rows") @TO@ MethodInvocation:assertEquals(Integer.valueOf(1),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted 2 rows") @AT@ 2879 @LENGTH@ 152
---UPD MethodInvocation@@assertEquals(new Integer(1),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted 2 rows") @TO@ assertEquals(Integer.valueOf(1),jdbcTemplate.queryForObject("select count(*) from projects",Integer.class),"Should have deleted 2 rows") @AT@ 2879 @LENGTH@ 151
------UPD SimpleName@@MethodName:assertEquals:[new Integer(1), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted 2 rows"] @TO@ MethodName:assertEquals:[Integer.valueOf(1), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted 2 rows"] @AT@ 2879 @LENGTH@ 151
---------INS MethodInvocation@@Integer.valueOf(1) @TO@ SimpleName@@MethodName:assertEquals:[new Integer(1), jdbcTemplate.queryForObject("select count(*) from projects",Integer.class), "Should have deleted 2 rows"] @AT@ 2892 @LENGTH@ 18
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 2892 @LENGTH@ 7
------------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 2900 @LENGTH@ 10
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 2908 @LENGTH@ 1
---------DEL ClassInstanceCreation@@Integer[1] @AT@ 2892 @LENGTH@ 14
------------DEL New@@new @AT@ 2892 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2896 @LENGTH@ 7
------------DEL NumberLiteral@@1 @AT@ 2904 @LENGTH@ 1


UPD VariableDeclarationStatement@@Value list=allValues.get(relationshipDescription.generateRelatedNodesCollectionName()); @TO@ Value list=values.get(relationshipDescription.generateRelatedNodesCollectionName()); @AT@ 17351 @LENGTH@ 89
---UPD VariableDeclarationFragment@@list=allValues.get(relationshipDescription.generateRelatedNodesCollectionName()) @TO@ list=values.get(relationshipDescription.generateRelatedNodesCollectionName()) @AT@ 17357 @LENGTH@ 82
------UPD MethodInvocation@@allValues.get(relationshipDescription.generateRelatedNodesCollectionName()) @TO@ values.get(relationshipDescription.generateRelatedNodesCollectionName()) @AT@ 17364 @LENGTH@ 75
---------UPD SimpleName@@Name:allValues @TO@ Name:values @AT@ 17364 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @TO@ TypeDeclaration@@[public]AbstractHttpSpanDecoratorTest,  @AT@ 2516 @LENGTH@ 407
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2516 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2523 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetMethodFromMethodHeaderEnum @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2528 @LENGTH@ 33
---INS VariableDeclarationStatement@@Exchange exchange=Mockito.mock(Exchange.class); @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2574 @LENGTH@ 49
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=Mockito.mock(Exchange.class); @AT@ 2574 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=Mockito.mock(Exchange.class) @TO@ VariableDeclarationStatement@@Exchange exchange=Mockito.mock(Exchange.class); @AT@ 2583 @LENGTH@ 39
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=Mockito.mock(Exchange.class) @AT@ 2583 @LENGTH@ 8
---------INS MethodInvocation@@Mockito.mock(Exchange.class) @TO@ VariableDeclarationFragment@@exchange=Mockito.mock(Exchange.class) @AT@ 2594 @LENGTH@ 28
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.mock(Exchange.class) @AT@ 2594 @LENGTH@ 7
------------INS SimpleName@@MethodName:mock:[Exchange.class] @TO@ MethodInvocation@@Mockito.mock(Exchange.class) @AT@ 2602 @LENGTH@ 20
---------------INS TypeLiteral@@Exchange.class @TO@ SimpleName@@MethodName:mock:[Exchange.class] @AT@ 2607 @LENGTH@ 14
---INS VariableDeclarationStatement@@Message message=Mockito.mock(Message.class); @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2632 @LENGTH@ 46
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message message=Mockito.mock(Message.class); @AT@ 2632 @LENGTH@ 7
------INS VariableDeclarationFragment@@message=Mockito.mock(Message.class) @TO@ VariableDeclarationStatement@@Message message=Mockito.mock(Message.class); @AT@ 2640 @LENGTH@ 37
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message=Mockito.mock(Message.class) @AT@ 2640 @LENGTH@ 7
---------INS MethodInvocation@@Mockito.mock(Message.class) @TO@ VariableDeclarationFragment@@message=Mockito.mock(Message.class) @AT@ 2650 @LENGTH@ 27
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.mock(Message.class) @AT@ 2650 @LENGTH@ 7
------------INS SimpleName@@MethodName:mock:[Message.class] @TO@ MethodInvocation@@Mockito.mock(Message.class) @AT@ 2658 @LENGTH@ 19
---------------INS TypeLiteral@@Message.class @TO@ SimpleName@@MethodName:mock:[Message.class] @AT@ 2663 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getIn()).thenReturn(message) @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2688 @LENGTH@ 51
------INS MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(message) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getIn()).thenReturn(message) @AT@ 2688 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:when:[exchange.getIn()] @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(message) @AT@ 2688 @LENGTH@ 30
------------INS MethodInvocation@@exchange.getIn() @TO@ MethodInvocation@@MethodName:when:[exchange.getIn()] @AT@ 2701 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 2701 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 2710 @LENGTH@ 7
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(message) @AT@ 2688 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[message] @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(message) @AT@ 2719 @LENGTH@ 19
------------INS SimpleName@@message @TO@ SimpleName@@MethodName:thenReturn:[message] @AT@ 2730 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2748 @LENGTH@ 82
------INS MethodInvocation@@Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @AT@ 2748 @LENGTH@ 81
---------INS MethodInvocation@@MethodName:when:[message.getHeader(Exchange.HTTP_METHOD)] @TO@ MethodInvocation@@Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @AT@ 2748 @LENGTH@ 53
------------INS MethodInvocation@@message.getHeader(Exchange.HTTP_METHOD) @TO@ MethodInvocation@@MethodName:when:[message.getHeader(Exchange.HTTP_METHOD)] @AT@ 2761 @LENGTH@ 39
---------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getHeader(Exchange.HTTP_METHOD) @AT@ 2761 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getHeader:[Exchange.HTTP_METHOD] @TO@ MethodInvocation@@message.getHeader(Exchange.HTTP_METHOD) @AT@ 2769 @LENGTH@ 31
------------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:getHeader:[Exchange.HTTP_METHOD] @AT@ 2779 @LENGTH@ 20
---------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 2779 @LENGTH@ 8
---------------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 2788 @LENGTH@ 11
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @AT@ 2748 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[HttpMethods.GET] @TO@ MethodInvocation@@Mockito.when(message.getHeader(Exchange.HTTP_METHOD)).thenReturn(HttpMethods.GET) @AT@ 2802 @LENGTH@ 27
------------INS QualifiedName@@HttpMethods.GET @TO@ SimpleName@@MethodName:thenReturn:[HttpMethods.GET] @AT@ 2813 @LENGTH@ 15
---------------INS SimpleName@@HttpMethods @TO@ QualifiedName@@HttpMethods.GET @AT@ 2813 @LENGTH@ 11
---------------INS SimpleName@@GET @TO@ QualifiedName@@HttpMethods.GET @AT@ 2825 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("GET",AbstractHttpSpanDecorator.getHttpMethod(exchange,null)) @TO@ MethodDeclaration@@public, void, MethodName:testGetMethodFromMethodHeaderEnum,  @AT@ 2840 @LENGTH@ 77
------INS MethodInvocation@@assertEquals("GET",AbstractHttpSpanDecorator.getHttpMethod(exchange,null)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("GET",AbstractHttpSpanDecorator.getHttpMethod(exchange,null)) @AT@ 2840 @LENGTH@ 76
---------INS SimpleName@@MethodName:assertEquals:["GET", AbstractHttpSpanDecorator.getHttpMethod(exchange,null)] @TO@ MethodInvocation@@assertEquals("GET",AbstractHttpSpanDecorator.getHttpMethod(exchange,null)) @AT@ 2840 @LENGTH@ 76
------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:assertEquals:["GET", AbstractHttpSpanDecorator.getHttpMethod(exchange,null)] @AT@ 2853 @LENGTH@ 5
------------INS MethodInvocation@@AbstractHttpSpanDecorator.getHttpMethod(exchange,null) @TO@ SimpleName@@MethodName:assertEquals:["GET", AbstractHttpSpanDecorator.getHttpMethod(exchange,null)] @AT@ 2860 @LENGTH@ 55
---------------INS SimpleName@@Name:AbstractHttpSpanDecorator @TO@ MethodInvocation@@AbstractHttpSpanDecorator.getHttpMethod(exchange,null) @AT@ 2860 @LENGTH@ 25
---------------INS SimpleName@@MethodName:getHttpMethod:[exchange, null] @TO@ MethodInvocation@@AbstractHttpSpanDecorator.getHttpMethod(exchange,null) @AT@ 2886 @LENGTH@ 29
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getHttpMethod:[exchange, null] @AT@ 2900 @LENGTH@ 8
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getHttpMethod:[exchange, null] @AT@ 2910 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:rec.field5=new Double(10.00) @TO@ Assignment:rec.field5=Double.valueOf(10.00) @AT@ 3012 @LENGTH@ 31
---UPD Assignment@@rec.field5=new Double(10.00) @TO@ rec.field5=Double.valueOf(10.00) @AT@ 3012 @LENGTH@ 30
------DEL ClassInstanceCreation@@Double[10.00] @AT@ 3025 @LENGTH@ 17
---------DEL New@@new @AT@ 3025 @LENGTH@ 3
---------DEL SimpleType@@Double @AT@ 3029 @LENGTH@ 6
---------DEL NumberLiteral@@10.00 @AT@ 3036 @LENGTH@ 5
------INS MethodInvocation@@Double.valueOf(10.00) @TO@ Assignment@@rec.field5=new Double(10.00) @AT@ 3029 @LENGTH@ 21
---------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.valueOf(10.00) @AT@ 3029 @LENGTH@ 6
---------INS SimpleName@@MethodName:valueOf:[10.00] @TO@ MethodInvocation@@Double.valueOf(10.00) @AT@ 3036 @LENGTH@ 14
------------INS NumberLiteral@@10.00 @TO@ SimpleName@@MethodName:valueOf:[10.00] @AT@ 3044 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(fault) @TO@ MethodInvocation:exchange.getMessage().setBody(fault) @AT@ 2591 @LENGTH@ 33
---UPD MethodInvocation@@exchange.getOut().setBody(fault) @TO@ exchange.getMessage().setBody(fault) @AT@ 2591 @LENGTH@ 32
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 2591 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 1679 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 1679 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1695 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals("CamsResponse",exchange.getOut().getHeader("Status")) @TO@ MethodInvocation:assertEquals("CamsResponse",exchange.getMessage().getHeader("Status")) @AT@ 1562 @LENGTH@ 68
---UPD MethodInvocation@@assertEquals("CamsResponse",exchange.getOut().getHeader("Status")) @TO@ assertEquals("CamsResponse",exchange.getMessage().getHeader("Status")) @AT@ 1562 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertEquals:["CamsResponse", exchange.getOut().getHeader("Status")] @TO@ MethodName:assertEquals:["CamsResponse", exchange.getMessage().getHeader("Status")] @AT@ 1562 @LENGTH@ 67
---------UPD MethodInvocation@@exchange.getOut().getHeader("Status") @TO@ exchange.getMessage().getHeader("Status") @AT@ 1591 @LENGTH@ 37
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 1591 @LENGTH@ 17


UPD TypeDeclaration@@[public, abstract]PayloadExchangeMatchers,  @TO@ [public, final]PayloadExchangeMatchers,  @AT@ 879 @LENGTH@ 879
---UPD Modifier@@abstract @TO@ final @AT@ 886 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(QueryExecutionConverters.unwrapWrapperTypes(returnType)).isEqualTo(ClassTypeInformation.from(String.class)) @TO@ MethodInvocation:assertThat(QueryExecutionConverters.unwrapWrapperTypes(returnType).getType()).isEqualTo(String.class) @AT@ 9986 @LENGTH@ 124
---UPD MethodInvocation@@assertThat(QueryExecutionConverters.unwrapWrapperTypes(returnType)).isEqualTo(ClassTypeInformation.from(String.class)) @TO@ assertThat(QueryExecutionConverters.unwrapWrapperTypes(returnType).getType()).isEqualTo(String.class) @AT@ 9986 @LENGTH@ 123
------UPD MethodInvocation@@MethodName:assertThat:[QueryExecutionConverters.unwrapWrapperTypes(returnType)] @TO@ MethodName:assertThat:[QueryExecutionConverters.unwrapWrapperTypes(returnType).getType()] @AT@ 9986 @LENGTH@ 67
---------UPD MethodInvocation@@QueryExecutionConverters.unwrapWrapperTypes(returnType) @TO@ QueryExecutionConverters.unwrapWrapperTypes(returnType).getType() @AT@ 9997 @LENGTH@ 55
------------INS MethodInvocation@@MethodName:unwrapWrapperTypes:[returnType] @TO@ MethodInvocation@@QueryExecutionConverters.unwrapWrapperTypes(returnType) @AT@ 9997 @LENGTH@ 55
---------------INS SimpleName@@returnType @TO@ MethodInvocation@@MethodName:unwrapWrapperTypes:[returnType] @AT@ 10041 @LENGTH@ 10
------------DEL SimpleName@@MethodName:unwrapWrapperTypes:[returnType] @AT@ 10022 @LENGTH@ 30
---------------DEL SimpleName@@returnType @AT@ 10041 @LENGTH@ 10
------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@QueryExecutionConverters.unwrapWrapperTypes(returnType) @AT@ 10053 @LENGTH@ 9
------DEL SimpleName@@MethodName:isEqualTo:[ClassTypeInformation.from(String.class)] @AT@ 10059 @LENGTH@ 50
---------DEL MethodInvocation@@ClassTypeInformation.from(String.class) @AT@ 10069 @LENGTH@ 39
------------DEL SimpleName@@Name:ClassTypeInformation @AT@ 10069 @LENGTH@ 20
------MOV SimpleName@@MethodName:from:[String.class] @TO@ MethodInvocation@@assertThat(QueryExecutionConverters.unwrapWrapperTypes(returnType)).isEqualTo(ClassTypeInformation.from(String.class)) @AT@ 10090 @LENGTH@ 18


UPD TryStatement@@try {  do {    final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);    try {      Queue queue=session.createQueue(destinationName);      MessageConsumer consumer=session.createConsumer(queue);      try {        task.consumeBatchesOnLoop(session,consumer);      }  finally {        closeJmsConsumer(consumer);      }    } catch (    Exception ex) {      if (keepAliveDelay < 0) {        throw ex;      }      getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);      if (keepAliveDelay > 0) {        Thread.sleep(keepAliveDelay);      }    } finally {      closeJmsSession(session);    }  } while (running.get() || isStarting());} catch (Throwable ex) {  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);} finally {  CountDownLatch consumersShutdownLatch=consumersShutdownLatchRef.get();  consumersShutdownLatch.countDown();} @TO@ try {  do {    Session session=null;    try {      session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);      Queue queue=session.createQueue(destinationName);      MessageConsumer consumer=session.createConsumer(queue);      try {        task.consumeBatchesOnLoop(session,consumer);      }  finally {        closeJmsConsumer(consumer);      }    } catch (    Exception ex) {      if (keepAliveDelay < 0) {        throw ex;      }      getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);      if (keepAliveDelay > 0) {        Thread.sleep(keepAliveDelay);      }    } finally {      closeJmsSession(session);    }  } while (running.get() || isStarting());} catch (Throwable ex) {  getExceptionHandler().handleException("Exiting consumption loop due to exception caught consuming from " + destinationName,ex);} finally {  CountDownLatch consumersShutdownLatch=consumersShutdownLatchRef.get();  consumersShutdownLatch.countDown();} @AT@ 13236 @LENGTH@ 2715
---UPD DoStatement@@do {  final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  try {    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  Exception ex) {    if (keepAliveDelay < 0) {      throw ex;    }    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0) {      Thread.sleep(keepAliveDelay);    }  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @TO@ do {  Session session=null;  try {    session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);    Queue queue=session.createQueue(destinationName);    MessageConsumer consumer=session.createConsumer(queue);    try {      task.consumeBatchesOnLoop(session,consumer);    }  finally {      closeJmsConsumer(consumer);    }  } catch (  Exception ex) {    if (keepAliveDelay < 0) {      throw ex;    }    getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);    if (keepAliveDelay > 0) {      Thread.sleep(keepAliveDelay);    }  } finally {    closeJmsSession(session);  }} while (running.get() || isStarting()); @AT@ 13607 @LENGTH@ 1826
------UPD VariableDeclarationStatement@@final Session session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE); @TO@ Session session=null; @AT@ 13756 @LENGTH@ 89
---------DEL Modifier@@final @AT@ 13756 @LENGTH@ 5
---------UPD VariableDeclarationFragment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @TO@ session=null @AT@ 13770 @LENGTH@ 74
------------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @AT@ 13774 @LENGTH@ 4
------UPD TryStatement@@try {  Queue queue=session.createQueue(destinationName);  MessageConsumer consumer=session.createConsumer(queue);  try {    task.consumeBatchesOnLoop(session,consumer);  }  finally {    closeJmsConsumer(consumer);  }} catch (Exception ex) {  if (keepAliveDelay < 0) {    throw ex;  }  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0) {    Thread.sleep(keepAliveDelay);  }} finally {  closeJmsSession(session);} @TO@ try {  session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE);  Queue queue=session.createQueue(destinationName);  MessageConsumer consumer=session.createConsumer(queue);  try {    task.consumeBatchesOnLoop(session,consumer);  }  finally {    closeJmsConsumer(consumer);  }} catch (Exception ex) {  if (keepAliveDelay < 0) {    throw ex;  }  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0) {    Thread.sleep(keepAliveDelay);  }} finally {  closeJmsSession(session);} @AT@ 13866 @LENGTH@ 1511
---------INS ExpressionStatement@@Assignment:session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @TO@ TryStatement@@try {  Queue queue=session.createQueue(destinationName);  MessageConsumer consumer=session.createConsumer(queue);  try {    task.consumeBatchesOnLoop(session,consumer);  }  finally {    closeJmsConsumer(consumer);  }} catch (Exception ex) {  if (keepAliveDelay < 0) {    throw ex;  }  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);  if (keepAliveDelay > 0) {    Thread.sleep(keepAliveDelay);  }} finally {  closeJmsSession(session);} @AT@ 13830 @LENGTH@ 75
------------INS Assignment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @TO@ ExpressionStatement@@Assignment:session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @AT@ 13830 @LENGTH@ 74
---------------MOV MethodInvocation@@connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @TO@ Assignment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @AT@ 13780 @LENGTH@ 64
---------------INS SimpleName@@session @TO@ Assignment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @AT@ 13830 @LENGTH@ 7
---------------INS Operator@@= @TO@ Assignment@@session=connection.createSession(TRANSACTED,Session.CLIENT_ACKNOWLEDGE) @AT@ 13837 @LENGTH@ 1
---UPD CatchClause@@catch (Throwable ex) {  getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex);} @TO@ catch (Throwable ex) {  getExceptionHandler().handleException("Exiting consumption loop due to exception caught consuming from " + destinationName,ex);} @AT@ 15448 @LENGTH@ 287
------UPD ExpressionStatement@@MethodInvocation:getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex) @TO@ MethodInvocation:getExceptionHandler().handleException("Exiting consumption loop due to exception caught consuming from " + destinationName,ex) @AT@ 15625 @LENGTH@ 96
---------UPD MethodInvocation@@getExceptionHandler().handleException("Exception caught consuming from " + destinationName,ex) @TO@ getExceptionHandler().handleException("Exiting consumption loop due to exception caught consuming from " + destinationName,ex) @AT@ 15625 @LENGTH@ 95
------------UPD SimpleName@@MethodName:handleException:["Exception caught consuming from " + destinationName, ex] @TO@ MethodName:handleException:["Exiting consumption loop due to exception caught consuming from " + destinationName, ex] @AT@ 15647 @LENGTH@ 73
---------------UPD InfixExpression@@"Exception caught consuming from " + destinationName @TO@ "Exiting consumption loop due to exception caught consuming from " + destinationName @AT@ 15663 @LENGTH@ 52
------------------UPD StringLiteral@@"Exception caught consuming from " @TO@ "Exiting consumption loop due to exception caught consuming from " @AT@ 15663 @LENGTH@ 34


UPD ReturnStatement@@InfixExpression:"StreamReadOptions{" + "block=" + block + ", count="+ count+ ", noack="+ noack+ ", autoAcknowledge="+ autoAcknowledge()+ ", blocking="+ isBlocking()+ '}' @TO@ InfixExpression:"StreamReadOptions{" + "block=" + block + ", count="+ count+ ", noack="+ noack+ ", blocking="+ isBlocking()+ '}' @AT@ 3625 @LENGTH@ 173
---UPD InfixExpression@@"StreamReadOptions{" + "block=" + block + ", count="+ count+ ", noack="+ noack+ ", autoAcknowledge="+ autoAcknowledge()+ ", blocking="+ isBlocking()+ '}' @TO@ "StreamReadOptions{" + "block=" + block + ", count="+ count+ ", noack="+ noack+ ", blocking="+ isBlocking()+ '}' @AT@ 3632 @LENGTH@ 165
------DEL StringLiteral@@", autoAcknowledge=" @AT@ 3716 @LENGTH@ 20
------DEL MethodInvocation@@MethodName:autoAcknowledge:[] @AT@ 3743 @LENGTH@ 17


UPD FieldDeclaration@@private, WebClient, [webClient] @TO@ private, final, WebClient, [webClient] @AT@ 2231 @LENGTH@ 28
---INS Modifier@@final @TO@ FieldDeclaration@@private, WebClient, [webClient] @AT@ 2245 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:Assert.state(Publisher.class.isAssignableFrom(returnType),() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context") @TO@ MethodDeclaration@@public, Object, MethodName:invoke, final MethodInvocation invocation,  @AT@ 3220 @LENGTH@ 253
---INS MethodInvocation@@Assert.state(Publisher.class.isAssignableFrom(returnType),() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(Publisher.class.isAssignableFrom(returnType),() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context") @AT@ 3220 @LENGTH@ 252
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(Publisher.class.isAssignableFrom(returnType),() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context") @AT@ 3220 @LENGTH@ 6
------INS SimpleName@@MethodName:state:[Publisher.class.isAssignableFrom(returnType), () -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context"] @TO@ MethodInvocation@@Assert.state(Publisher.class.isAssignableFrom(returnType),() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context") @AT@ 3227 @LENGTH@ 245
---------MOV MethodInvocation@@Publisher.class.isAssignableFrom(returnType) @TO@ SimpleName@@MethodName:state:[Publisher.class.isAssignableFrom(returnType), () -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context"] @AT@ 3226 @LENGTH@ 44
---------INS LambdaExpression@@() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @TO@ SimpleName@@MethodName:state:[Publisher.class.isAssignableFrom(returnType), () -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context"] @AT@ 3283 @LENGTH@ 188
------------INS InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @TO@ LambdaExpression@@() -> "The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3289 @LENGTH@ 182
---------------MOV StringLiteral@@"The returnType " @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3309 @LENGTH@ 17
---------------MOV Operator@@+ @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3326 @LENGTH@ 1
---------------MOV SimpleName@@returnType @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3329 @LENGTH@ 10
---------------MOV StringLiteral@@" on " @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3342 @LENGTH@ 6
---------------MOV SimpleName@@method @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3351 @LENGTH@ 6
---------------MOV StringLiteral@@" must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) in order to support Reactor Context" @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3365 @LENGTH@ 114
---------------INS StringLiteral@@"(i.e. Mono / Flux) in order to support Reactor Context" @TO@ InfixExpression@@"The returnType " + returnType + " on "+ method+ " must return an instance of org.reactivestreams.Publisher "+ "(i.e. Mono / Flux) in order to support Reactor Context" @AT@ 3415 @LENGTH@ 56


UPD IfStatement@@if (config.getSigner().isEmpty()) {  throw new CryptoCmsException("No signer information configured");} @TO@ if (config.getSignerList().isEmpty()) {  throw new CryptoCmsException("No signer information configured");} @AT@ 3268 @LENGTH@ 123
---UPD MethodInvocation@@config.getSigner().isEmpty() @TO@ config.getSignerList().isEmpty() @AT@ 3272 @LENGTH@ 28
------UPD MethodInvocation@@MethodName:getSigner:[] @TO@ MethodName:getSignerList:[] @AT@ 3272 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertNotNull(exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)) @TO@ MethodInvocation:assertNotNull(exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)) @AT@ 2986 @LENGTH@ 71
---UPD MethodInvocation@@assertNotNull(exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)) @TO@ assertNotNull(exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)) @AT@ 2986 @LENGTH@ 70
------UPD SimpleName@@MethodName:assertNotNull:[exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID)] @TO@ MethodName:assertNotNull:[exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID)] @AT@ 2986 @LENGTH@ 70
---------UPD MethodInvocation@@exchange.getOut().getHeader(IronMQConstants.MESSAGE_ID) @TO@ exchange.getMessage().getHeader(IronMQConstants.MESSAGE_ID) @AT@ 3000 @LENGTH@ 55
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3000 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertNotNull(response != null) @TO@ MethodInvocation:assertNotNull(response) @AT@ 3046 @LENGTH@ 32
---UPD MethodInvocation@@assertNotNull(response != null) @TO@ assertNotNull(response) @AT@ 3046 @LENGTH@ 31
------UPD SimpleName@@MethodName:assertNotNull:[response != null] @TO@ MethodName:assertNotNull:[response] @AT@ 3046 @LENGTH@ 31
---------DEL InfixExpression@@response != null @AT@ 3060 @LENGTH@ 16
------------DEL SimpleName@@response @AT@ 3060 @LENGTH@ 8
------------DEL Operator@@!= @AT@ 3068 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 3072 @LENGTH@ 4
---------INS SimpleName@@response @TO@ SimpleName@@MethodName:assertNotNull:[response != null] @AT@ 3060 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("Greet Hello World!",reply.getOut().getBody(String.class),"Get a wrong response") @TO@ MethodInvocation:assertEquals("Greet Hello World!",reply.getMessage().getBody(String.class),"Get a wrong response") @AT@ 3496 @LENGTH@ 97
---UPD MethodInvocation@@assertEquals("Greet Hello World!",reply.getOut().getBody(String.class),"Get a wrong response") @TO@ assertEquals("Greet Hello World!",reply.getMessage().getBody(String.class),"Get a wrong response") @AT@ 3496 @LENGTH@ 96
------UPD SimpleName@@MethodName:assertEquals:["Greet Hello World!", reply.getOut().getBody(String.class), "Get a wrong response"] @TO@ MethodName:assertEquals:["Greet Hello World!", reply.getMessage().getBody(String.class), "Get a wrong response"] @AT@ 3496 @LENGTH@ 96
---------UPD MethodInvocation@@reply.getOut().getBody(String.class) @TO@ reply.getMessage().getBody(String.class) @AT@ 3531 @LENGTH@ 36
------------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3531 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals(consumer.getLockModeType(),LockModeType.PESSIMISTIC_WRITE) @TO@ MethodInvocation:assertEquals(LockModeType.PESSIMISTIC_WRITE,consumer.getLockModeType()) @AT@ 1969 @LENGTH@ 73
---UPD MethodInvocation@@assertEquals(consumer.getLockModeType(),LockModeType.PESSIMISTIC_WRITE) @TO@ assertEquals(LockModeType.PESSIMISTIC_WRITE,consumer.getLockModeType()) @AT@ 1969 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertEquals:[consumer.getLockModeType(), LockModeType.PESSIMISTIC_WRITE] @TO@ MethodName:assertEquals:[LockModeType.PESSIMISTIC_WRITE, consumer.getLockModeType()] @AT@ 1969 @LENGTH@ 72
---------INS QualifiedName@@LockModeType.PESSIMISTIC_WRITE @TO@ SimpleName@@MethodName:assertEquals:[consumer.getLockModeType(), LockModeType.PESSIMISTIC_WRITE] @AT@ 1982 @LENGTH@ 30
------------INS SimpleName@@LockModeType @TO@ QualifiedName@@LockModeType.PESSIMISTIC_WRITE @AT@ 1982 @LENGTH@ 12
------------INS SimpleName@@PESSIMISTIC_WRITE @TO@ QualifiedName@@LockModeType.PESSIMISTIC_WRITE @AT@ 1995 @LENGTH@ 17
---------DEL QualifiedName@@LockModeType.PESSIMISTIC_WRITE @AT@ 2010 @LENGTH@ 30
------------DEL SimpleName@@LockModeType @AT@ 2010 @LENGTH@ 12
------------DEL SimpleName@@PESSIMISTIC_WRITE @AT@ 2023 @LENGTH@ 17


UPD ReturnStatement@@MethodInvocation:Mono.just(exchange.getRequest()).flatMap((r) -> Mono.justOrEmpty(r.getMethod())).filter((m) -> ALLOWED_METHODS.contains(m)).flatMap((m) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @TO@ MethodInvocation:Mono.just(exchange.getRequest()).flatMap((r) -> Mono.justOrEmpty(r.getMethod())).filter(ALLOWED_METHODS::contains).flatMap((m) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @AT@ 7899 @LENGTH@ 217
---UPD MethodInvocation@@Mono.just(exchange.getRequest()).flatMap((r) -> Mono.justOrEmpty(r.getMethod())).filter((m) -> ALLOWED_METHODS.contains(m)).flatMap((m) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @TO@ Mono.just(exchange.getRequest()).flatMap((r) -> Mono.justOrEmpty(r.getMethod())).filter(ALLOWED_METHODS::contains).flatMap((m) -> MatchResult.notMatch()).switchIfEmpty(MatchResult.match()) @AT@ 7906 @LENGTH@ 209
------UPD MethodInvocation@@MethodName:filter:[(m) -> ALLOWED_METHODS.contains(m)] @TO@ MethodName:filter:[ALLOWED_METHODS::contains] @AT@ 7906 @LENGTH@ 129
---------DEL LambdaExpression@@(m) -> ALLOWED_METHODS.contains(m) @AT@ 8000 @LENGTH@ 34
------------DEL VariableDeclarationFragment@@m @AT@ 8001 @LENGTH@ 1
---------------DEL SimpleName@@m @AT@ 8001 @LENGTH@ 1
------------DEL MethodInvocation@@ALLOWED_METHODS.contains(m) @AT@ 8007 @LENGTH@ 27
---------------DEL SimpleName@@Name:ALLOWED_METHODS @AT@ 8007 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:contains:[m] @AT@ 8023 @LENGTH@ 11
------------------DEL SimpleName@@m @AT@ 8032 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:from("seda:start").log("Sending ${body}").inOut("activemq:queue:foo?replyTo=myReplies").threads(5).log("Reply ${body}").delay(2000).to("mock:result") @TO@ MethodInvocation:from("seda:start").log("Sending ${body}").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=myReplies").threads(5).log("Reply ${body}").delay(2000).to("mock:result") @AT@ 2257 @LENGTH@ 375
---UPD MethodInvocation@@from("seda:start").log("Sending ${body}").inOut("activemq:queue:foo?replyTo=myReplies").threads(5).log("Reply ${body}").delay(2000).to("mock:result") @TO@ from("seda:start").log("Sending ${body}").to(ExchangePattern.InOut,"activemq:queue:foo?replyTo=myReplies").threads(5).log("Reply ${body}").delay(2000).to("mock:result") @AT@ 2257 @LENGTH@ 374
------UPD MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=myReplies"] @TO@ MethodName:to:[ExchangePattern.InOut, "activemq:queue:foo?replyTo=myReplies"] @AT@ 2257 @LENGTH@ 137
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["activemq:queue:foo?replyTo=myReplies"] @AT@ 2393 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2393 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 2409 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Will create JmsMessage with caused exception: {}",cause) @TO@ MethodInvocation:LOG.debug("Will create JmsMessage with caused exception: {}",cause.getMessage(),cause) @AT@ 16103 @LENGTH@ 69
---UPD MethodInvocation@@LOG.debug("Will create JmsMessage with caused exception: {}",cause) @TO@ LOG.debug("Will create JmsMessage with caused exception: {}",cause.getMessage(),cause) @AT@ 16103 @LENGTH@ 68
------UPD SimpleName@@MethodName:debug:["Will create JmsMessage with caused exception: {}", cause] @TO@ MethodName:debug:["Will create JmsMessage with caused exception: {}", cause.getMessage(), cause] @AT@ 16107 @LENGTH@ 64
---------INS MethodInvocation@@cause.getMessage() @TO@ SimpleName@@MethodName:debug:["Will create JmsMessage with caused exception: {}", cause] @AT@ 16165 @LENGTH@ 18
------------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getMessage() @AT@ 16165 @LENGTH@ 5
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@cause.getMessage() @AT@ 16171 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:from(rabbitMQEndpoint).id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated exception")) @TO@ MethodInvocation:from(rabbitMQEndpoint).id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated exception")) @AT@ 3351 @LENGTH@ 177
---UPD MethodInvocation@@from(rabbitMQEndpoint).id("consumingRoute").log("Receiving message").inOnly(consumingMockEndpoint).throwException(new Exception("Simulated exception")) @TO@ from(rabbitMQEndpoint).id("consumingRoute").log("Receiving message").to(ExchangePattern.InOnly,consumingMockEndpoint).throwException(new Exception("Simulated exception")) @AT@ 3351 @LENGTH@ 176
------UPD MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @TO@ MethodName:to:[ExchangePattern.InOnly, consumingMockEndpoint] @AT@ 3351 @LENGTH@ 98
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:inOnly:[consumingMockEndpoint] @AT@ 3509 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3509 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3525 @LENGTH@ 6


UPD IfStatement@@if (txnHandler instanceof TxnHandler) {  final TxnHandler tHndlr=(TxnHandler)txnHandler;  Connection conn=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();  tHndlr.closeDbConn(conn);  final AtomicBoolean sawDeadlock=new AtomicBoolean();  final Connection conn1=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  final Connection conn2=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    for (int i=0; i < 5; i++) {      Thread t1=new Thread(){        @Override public void run(){          try {            try {              updateTxns(conn1);              updateLocks(conn1);              Thread.sleep(1000);              conn1.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn1,e,"thread t1");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn1.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      Thread t2=new Thread(){        @Override public void run(){          try {            try {              updateLocks(conn2);              updateTxns(conn2);              Thread.sleep(1000);              conn2.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn2,e,"thread t2");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn2.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      t1.start();      t2.start();      t1.join();      t2.join();      if (sawDeadlock.get())       break;    }    assertTrue(sawDeadlock.get());  }  finally {    conn1.rollback();    tHndlr.closeDbConn(conn1);    conn2.rollback();    tHndlr.closeDbConn(conn2);  }} @TO@ if (txnHandler instanceof TxnHandler) {  final TxnHandler tHndlr=(TxnHandler)txnHandler;  Connection conn=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    Statement stmt=conn.createStatement();    long now=tHndlr.getDbTime(conn);    stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");    stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");    conn.commit();  }  finally {    tHndlr.closeDbConn(conn);  }  final AtomicBoolean sawDeadlock=new AtomicBoolean();  final Connection conn1=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  final Connection conn2=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    for (int i=0; i < 5; i++) {      Thread t1=new Thread(){        @Override public void run(){          try {            try {              updateTxns(conn1);              updateLocks(conn1);              Thread.sleep(1000);              conn1.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn1,e,"thread t1");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn1.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      Thread t2=new Thread(){        @Override public void run(){          try {            try {              updateLocks(conn2);              updateTxns(conn2);              Thread.sleep(1000);              conn2.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn2,e,"thread t2");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn2.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      t1.start();      t2.start();      t1.join();      t2.join();      if (sawDeadlock.get())       break;    }    assertTrue(sawDeadlock.get());  }  finally {    conn1.rollback();    tHndlr.closeDbConn(conn1);    conn2.rollback();    tHndlr.closeDbConn(conn2);  }} @AT@ 58974 @LENGTH@ 4105
---UPD Block@@ThenBody:{  final TxnHandler tHndlr=(TxnHandler)txnHandler;  Connection conn=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();  tHndlr.closeDbConn(conn);  final AtomicBoolean sawDeadlock=new AtomicBoolean();  final Connection conn1=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  final Connection conn2=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    for (int i=0; i < 5; i++) {      Thread t1=new Thread(){        @Override public void run(){          try {            try {              updateTxns(conn1);              updateLocks(conn1);              Thread.sleep(1000);              conn1.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn1,e,"thread t1");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn1.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      Thread t2=new Thread(){        @Override public void run(){          try {            try {              updateLocks(conn2);              updateTxns(conn2);              Thread.sleep(1000);              conn2.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn2,e,"thread t2");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn2.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      t1.start();      t2.start();      t1.join();      t2.join();      if (sawDeadlock.get())       break;    }    assertTrue(sawDeadlock.get());  }  finally {    conn1.rollback();    tHndlr.closeDbConn(conn1);    conn2.rollback();    tHndlr.closeDbConn(conn2);  }} @TO@ ThenBody:{  final TxnHandler tHndlr=(TxnHandler)txnHandler;  Connection conn=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    Statement stmt=conn.createStatement();    long now=tHndlr.getDbTime(conn);    stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");    stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");    conn.commit();  }  finally {    tHndlr.closeDbConn(conn);  }  final AtomicBoolean sawDeadlock=new AtomicBoolean();  final Connection conn1=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  final Connection conn2=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    for (int i=0; i < 5; i++) {      Thread t1=new Thread(){        @Override public void run(){          try {            try {              updateTxns(conn1);              updateLocks(conn1);              Thread.sleep(1000);              conn1.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn1,e,"thread t1");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn1.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      Thread t2=new Thread(){        @Override public void run(){          try {            try {              updateLocks(conn2);              updateTxns(conn2);              Thread.sleep(1000);              conn2.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn2,e,"thread t2");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn2.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      t1.start();      t2.start();      t1.join();      t2.join();      if (sawDeadlock.get())       break;    }    assertTrue(sawDeadlock.get());  }  finally {    conn1.rollback();    tHndlr.closeDbConn(conn1);    conn2.rollback();    tHndlr.closeDbConn(conn2);  }} @AT@ 59012 @LENGTH@ 4067
------INS TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @TO@ Block@@ThenBody:{  final TxnHandler tHndlr=(TxnHandler)txnHandler;  Connection conn=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();  tHndlr.closeDbConn(conn);  final AtomicBoolean sawDeadlock=new AtomicBoolean();  final Connection conn1=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  final Connection conn2=tHndlr.getDbConn(Connection.TRANSACTION_SERIALIZABLE);  try {    for (int i=0; i < 5; i++) {      Thread t1=new Thread(){        @Override public void run(){          try {            try {              updateTxns(conn1);              updateLocks(conn1);              Thread.sleep(1000);              conn1.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn1,e,"thread t1");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn1.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      Thread t2=new Thread(){        @Override public void run(){          try {            try {              updateLocks(conn2);              updateTxns(conn2);              Thread.sleep(1000);              conn2.commit();              LOG.debug("no exception, no deadlock");            } catch (            SQLException e) {              try {                tHndlr.checkRetryable(conn2,e,"thread t2");                LOG.debug("Got an exception, but not a deadlock, SQLState is " + e.getSQLState() + " class of exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");              } catch (              TxnHandler.RetryException de) {                LOG.debug("Forced a deadlock, SQLState is " + e.getSQLState() + " class of "+ "exception is "+ e.getClass().getName()+ " msg is <"+ e.getMessage()+ ">");                sawDeadlock.set(true);              }            }            conn2.rollback();          } catch (          Exception e) {            throw new RuntimeException(e);          }        }      };      t1.start();      t2.start();      t1.join();      t2.join();      if (sawDeadlock.get())       break;    }    assertTrue(sawDeadlock.get());  }  finally {    conn1.rollback();    tHndlr.closeDbConn(conn1);    conn2.rollback();    tHndlr.closeDbConn(conn2);  }} @AT@ 59156 @LENGTH@ 909
---------MOV VariableDeclarationStatement@@Statement stmt=conn.createStatement(); @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 59155 @LENGTH@ 40
---------MOV VariableDeclarationStatement@@long now=tHndlr.getDbTime(conn); @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 59202 @LENGTH@ 34
---------MOV ExpressionStatement@@MethodInvocation:stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')") @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 59243 @LENGTH@ 227
---------MOV ExpressionStatement@@MethodInvocation:stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')") @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 59477 @LENGTH@ 448
---------MOV ExpressionStatement@@MethodInvocation:conn.commit() @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 59932 @LENGTH@ 14
---------INS Block@@FinallyBody:{  tHndlr.closeDbConn(conn);} @TO@ TryStatement@@try {  Statement stmt=conn.createStatement();  long now=tHndlr.getDbTime(conn);  stmt.executeUpdate("INSERT INTO \"TXNS\" (\"TXN_ID\", \"TXN_STATE\", \"TXN_STARTED\", \"TXN_LAST_HEARTBEAT\", " + "txn_user, txn_host) values (1, 'o', " + now + ", "+ now+ ", 'shagy', "+ "'scooby.com')");  stmt.executeUpdate("INSERT INTO \"HIVE_LOCKS\" (\"HL_LOCK_EXT_ID\", \"HL_LOCK_INT_ID\", \"HL_TXNID\", " + "\"HL_DB\", \"HL_TABLE\", \"HL_PARTITION\", \"HL_LOCK_STATE\", \"HL_LOCK_TYPE\", \"HL_LAST_HEARTBEAT\", " + "\"HL_USER\", \"HL_HOST\") VALUES (1, 1, 1, 'MYDB', 'MYTABLE', 'MYPARTITION', '" + tHndlr.LOCK_WAITING + "', '"+ getEncoding(LockType.EXCLUSIVE)+ "', "+ now+ ", 'fred', "+ "'scooby.com')");  conn.commit();}  finally {  tHndlr.closeDbConn(conn);} @AT@ 60022 @LENGTH@ 43
------------MOV ExpressionStatement@@MethodInvocation:tHndlr.closeDbConn(conn) @TO@ Block@@FinallyBody:{  tHndlr.closeDbConn(conn);} @AT@ 59953 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertEquals(((List<?>)result).get(0),"HelloWillem","Get the wrong response") @TO@ MethodInvocation:assertEquals("HelloWillem",((List<?>)result).get(0),"Get the wrong response") @AT@ 2888 @LENGTH@ 81
---UPD MethodInvocation@@assertEquals(((List<?>)result).get(0),"HelloWillem","Get the wrong response") @TO@ assertEquals("HelloWillem",((List<?>)result).get(0),"Get the wrong response") @AT@ 2888 @LENGTH@ 80
------UPD SimpleName@@MethodName:assertEquals:[((List<?>)result).get(0), "HelloWillem", "Get the wrong response"] @TO@ MethodName:assertEquals:["HelloWillem", ((List<?>)result).get(0), "Get the wrong response"] @AT@ 2888 @LENGTH@ 80
---------MOV MethodInvocation@@((List<?>)result).get(0) @TO@ SimpleName@@MethodName:assertEquals:[((List<?>)result).get(0), "HelloWillem", "Get the wrong response"] @AT@ 2901 @LENGTH@ 25


UPD IfStatement@@if (port > 0) {  Integer httpsPort=this.portMapper.lookupHttpsPort(port);  if (httpsPort == null) {    throw new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port");  }  builder.port(httpsPort);} @TO@ if (port > 0) {  Integer httpsPort=this.portMapper.lookupHttpsPort(port);  Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port");  builder.port(httpsPort);} @AT@ 3724 @LENGTH@ 248
---UPD Block@@ThenBody:{  Integer httpsPort=this.portMapper.lookupHttpsPort(port);  if (httpsPort == null) {    throw new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port");  }  builder.port(httpsPort);} @TO@ ThenBody:{  Integer httpsPort=this.portMapper.lookupHttpsPort(port);  Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port");  builder.port(httpsPort);} @AT@ 3738 @LENGTH@ 234
------INS ExpressionStatement@@MethodInvocation:Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @TO@ Block@@ThenBody:{  Integer httpsPort=this.portMapper.lookupHttpsPort(port);  if (httpsPort == null) {    throw new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port");  }  builder.port(httpsPort);} @AT@ 3774 @LENGTH@ 107
---------INS MethodInvocation@@Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @TO@ ExpressionStatement@@MethodInvocation:Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @AT@ 3774 @LENGTH@ 106
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @AT@ 3774 @LENGTH@ 6
------------INS SimpleName@@MethodName:state:[httpsPort != null, () -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @TO@ MethodInvocation@@Assert.state(httpsPort != null,() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @AT@ 3781 @LENGTH@ 99
---------------INS InfixExpression@@httpsPort != null @TO@ SimpleName@@MethodName:state:[httpsPort != null, () -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3787 @LENGTH@ 17
------------------MOV SimpleName@@httpsPort @TO@ InfixExpression@@httpsPort != null @AT@ 3809 @LENGTH@ 9
------------------MOV Operator@@== @TO@ InfixExpression@@httpsPort != null @AT@ 3818 @LENGTH@ 2
------------------MOV NullLiteral@@null @TO@ InfixExpression@@httpsPort != null @AT@ 3822 @LENGTH@ 4
---------------INS LambdaExpression@@() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @TO@ SimpleName@@MethodName:state:[httpsPort != null, () -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3806 @LENGTH@ 73
------------------INS InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @TO@ LambdaExpression@@() -> "HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3812 @LENGTH@ 67
---------------------MOV StringLiteral@@"HTTP Port '" @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3866 @LENGTH@ 13
---------------------MOV Operator@@+ @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3879 @LENGTH@ 1
---------------------MOV SimpleName@@port @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3882 @LENGTH@ 4
---------------------MOV StringLiteral@@"' does not have a corresponding HTTPS Port" @TO@ InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3889 @LENGTH@ 44
------DEL IfStatement@@if (httpsPort == null) {  throw new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port");} @AT@ 3805 @LENGTH@ 135
---------DEL InfixExpression@@httpsPort == null @AT@ 3809 @LENGTH@ 17
---------DEL Block@@ThenBody:{  throw new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port");} @AT@ 3828 @LENGTH@ 112
------------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("HTTP Port '" + port + "' does not have a corresponding HTTPS Port") @AT@ 3834 @LENGTH@ 101
---------------DEL ClassInstanceCreation@@IllegalStateException["HTTP Port '" + port + "' does not have a corresponding HTTPS Port"] @AT@ 3840 @LENGTH@ 94
------------------DEL New@@new @AT@ 3840 @LENGTH@ 3
------------------DEL SimpleType@@IllegalStateException @AT@ 3844 @LENGTH@ 21
------------------DEL InfixExpression@@"HTTP Port '" + port + "' does not have a corresponding HTTPS Port" @AT@ 3866 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:assertEquals(result.getCustId(),"mapCustomer:ACME") @TO@ MethodInvocation:assertEquals("mapCustomer:ACME",result.getCustId()) @AT@ 2342 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals(result.getCustId(),"mapCustomer:ACME") @TO@ assertEquals("mapCustomer:ACME",result.getCustId()) @AT@ 2342 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:[result.getCustId(), "mapCustomer:ACME"] @TO@ MethodName:assertEquals:["mapCustomer:ACME", result.getCustId()] @AT@ 2342 @LENGTH@ 52
---------INS StringLiteral@@"mapCustomer:ACME" @TO@ SimpleName@@MethodName:assertEquals:[result.getCustId(), "mapCustomer:ACME"] @AT@ 2355 @LENGTH@ 18
---------DEL StringLiteral@@"mapCustomer:ACME" @AT@ 2375 @LENGTH@ 18


UPD VariableDeclarationStatement@@final Integer notConvertibleToInputStreamBody=new Integer(1); @TO@ final Integer notConvertibleToInputStreamBody=Integer.valueOf(1); @AT@ 5152 @LENGTH@ 63
---UPD VariableDeclarationFragment@@notConvertibleToInputStreamBody=new Integer(1) @TO@ notConvertibleToInputStreamBody=Integer.valueOf(1) @AT@ 5166 @LENGTH@ 48
------INS MethodInvocation@@Integer.valueOf(1) @TO@ VariableDeclarationFragment@@notConvertibleToInputStreamBody=new Integer(1) @AT@ 5200 @LENGTH@ 18
---------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 5200 @LENGTH@ 7
---------INS SimpleName@@MethodName:valueOf:[1] @TO@ MethodInvocation@@Integer.valueOf(1) @AT@ 5208 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:valueOf:[1] @AT@ 5216 @LENGTH@ 1
------DEL ClassInstanceCreation@@Integer[1] @AT@ 5200 @LENGTH@ 14
---------DEL New@@new @AT@ 5200 @LENGTH@ 3
---------DEL SimpleType@@Integer @AT@ 5204 @LENGTH@ 7
---------DEL NumberLiteral@@1 @AT@ 5212 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:Mono.fromCallable(() -> this.metadataExtractor.extract(exchange.getPayload(),this.COMPOSITE_METADATA_MIME_TYPE)).flatMap(metadata -> Mono.justOrEmpty(authentication(metadata))) @TO@ MethodInvocation:Mono.fromCallable(() -> this.metadataExtractor.extract(exchange.getPayload(),AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE)).flatMap(metadata -> Mono.justOrEmpty(authentication(metadata))) @AT@ 2817 @LENGTH@ 202
---UPD MethodInvocation@@Mono.fromCallable(() -> this.metadataExtractor.extract(exchange.getPayload(),this.COMPOSITE_METADATA_MIME_TYPE)).flatMap(metadata -> Mono.justOrEmpty(authentication(metadata))) @TO@ Mono.fromCallable(() -> this.metadataExtractor.extract(exchange.getPayload(),AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE)).flatMap(metadata -> Mono.justOrEmpty(authentication(metadata))) @AT@ 2824 @LENGTH@ 194
------UPD MethodInvocation@@MethodName:fromCallable:[() -> this.metadataExtractor.extract(exchange.getPayload(),this.COMPOSITE_METADATA_MIME_TYPE)] @TO@ MethodName:fromCallable:[() -> this.metadataExtractor.extract(exchange.getPayload(),AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE)] @AT@ 2824 @LENGTH@ 125
---------UPD LambdaExpression@@() -> this.metadataExtractor.extract(exchange.getPayload(),this.COMPOSITE_METADATA_MIME_TYPE) @TO@ () -> this.metadataExtractor.extract(exchange.getPayload(),AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE) @AT@ 2854 @LENGTH@ 94
------------UPD MethodInvocation@@this.metadataExtractor.extract(exchange.getPayload(),this.COMPOSITE_METADATA_MIME_TYPE) @TO@ this.metadataExtractor.extract(exchange.getPayload(),AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE) @AT@ 2860 @LENGTH@ 88
---------------UPD SimpleName@@MethodName:extract:[exchange.getPayload(), this.COMPOSITE_METADATA_MIME_TYPE] @TO@ MethodName:extract:[exchange.getPayload(), AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE] @AT@ 2883 @LENGTH@ 65
------------------INS QualifiedName@@AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE @TO@ SimpleName@@MethodName:extract:[exchange.getPayload(), this.COMPOSITE_METADATA_MIME_TYPE] @AT@ 2913 @LENGTH@ 67
---------------------INS SimpleName@@AuthenticationPayloadExchangeConverter @TO@ QualifiedName@@AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE @AT@ 2913 @LENGTH@ 38
---------------------INS SimpleName@@COMPOSITE_METADATA_MIME_TYPE @TO@ QualifiedName@@AuthenticationPayloadExchangeConverter.COMPOSITE_METADATA_MIME_TYPE @AT@ 2952 @LENGTH@ 28
------------------DEL FieldAccess@@this.COMPOSITE_METADATA_MIME_TYPE @AT@ 2914 @LENGTH@ 33
---------------------DEL ThisExpression@@this @AT@ 2914 @LENGTH@ 4
---------------------DEL SimpleName@@COMPOSITE_METADATA_MIME_TYPE @AT@ 2919 @LENGTH@ 28


UPD MethodDeclaration@@public, static, ReduceSinkDesc, MethodName:getReduceSinkDesc, List<ExprNodeDesc> keyCols, List<ExprNodeDesc> valueCols, List<String> outputColumnNames, boolean includeKeyCols, int tag, List<ExprNodeDesc> partitionCols, String order, String nullOrder, NullOrdering defaultNullOrder, int numReducers, AcidUtils.Operation writeType,  @TO@ public, static, ReduceSinkDesc, MethodName:getReduceSinkDesc, List<ExprNodeDesc> keyCols, List<ExprNodeDesc> valueCols, List<String> outputColumnNames, boolean includeKeyCols, int tag, List<ExprNodeDesc> partitionCols, String order, String nullOrder, NullOrdering defaultNullOrder, int numReducers, AcidUtils.Operation writeType, boolean isCompaction,  @AT@ 28397 @LENGTH@ 1101
---INS SingleVariableDeclaration@@boolean isCompaction @TO@ MethodDeclaration@@public, static, ReduceSinkDesc, MethodName:getReduceSinkDesc, List<ExprNodeDesc> keyCols, List<ExprNodeDesc> valueCols, List<String> outputColumnNames, boolean includeKeyCols, int tag, List<ExprNodeDesc> partitionCols, String order, String nullOrder, NullOrdering defaultNullOrder, int numReducers, AcidUtils.Operation writeType,  @AT@ 28737 @LENGTH@ 20
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isCompaction @AT@ 28737 @LENGTH@ 7
------INS SimpleName@@isCompaction @TO@ SingleVariableDeclaration@@boolean isCompaction @AT@ 28745 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:reduceSinkDesc.setIsCompaction(isCompaction) @TO@ MethodDeclaration@@public, static, ReduceSinkDesc, MethodName:getReduceSinkDesc, List<ExprNodeDesc> keyCols, List<ExprNodeDesc> valueCols, List<String> outputColumnNames, boolean includeKeyCols, int tag, List<ExprNodeDesc> partitionCols, String order, String nullOrder, NullOrdering defaultNullOrder, int numReducers, AcidUtils.Operation writeType,  @AT@ 29494 @LENGTH@ 45
------INS MethodInvocation@@reduceSinkDesc.setIsCompaction(isCompaction) @TO@ ExpressionStatement@@MethodInvocation:reduceSinkDesc.setIsCompaction(isCompaction) @AT@ 29494 @LENGTH@ 44
---------INS SimpleName@@Name:reduceSinkDesc @TO@ MethodInvocation@@reduceSinkDesc.setIsCompaction(isCompaction) @AT@ 29494 @LENGTH@ 14
---------INS SimpleName@@MethodName:setIsCompaction:[isCompaction] @TO@ MethodInvocation@@reduceSinkDesc.setIsCompaction(isCompaction) @AT@ 29509 @LENGTH@ 29
------------INS SimpleName@@isCompaction @TO@ SimpleName@@MethodName:setIsCompaction:[isCompaction] @AT@ 29525 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertTrue(notify.matchesMockWaitTime()) @TO@ MethodInvocation:assertTrue(notify.matchesWaitTime()) @AT@ 1315 @LENGTH@ 41
---UPD MethodInvocation@@assertTrue(notify.matchesMockWaitTime()) @TO@ assertTrue(notify.matchesWaitTime()) @AT@ 1315 @LENGTH@ 40
------UPD SimpleName@@MethodName:assertTrue:[notify.matchesMockWaitTime()] @TO@ MethodName:assertTrue:[notify.matchesWaitTime()] @AT@ 1315 @LENGTH@ 40
---------UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 1326 @LENGTH@ 28
------------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 1333 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),28) @TO@ MethodInvocation:assertEquals(28,parse.size()) @AT@ 2387 @LENGTH@ 31
---UPD MethodInvocation@@assertEquals(parse.size(),28) @TO@ assertEquals(28,parse.size()) @AT@ 2387 @LENGTH@ 30
------UPD SimpleName@@MethodName:assertEquals:[parse.size(), 28] @TO@ MethodName:assertEquals:[28, parse.size()] @AT@ 2387 @LENGTH@ 30
---------INS NumberLiteral@@28 @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 28] @AT@ 2400 @LENGTH@ 2
---------DEL NumberLiteral@@28 @AT@ 2414 @LENGTH@ 2


UPD IfStatement@@if (isSecure(exchange)) {  return this.headerWriterDelegate.writeHttpHeaders(exchange);} else {  return Mono.empty();} @TO@ if (isSecure(exchange)) {  return this.headerWriterDelegate.writeHttpHeaders(exchange);} @AT@ 1933 @LENGTH@ 130
---DEL Block@@ElseBody:{  return Mono.empty();} @AT@ 2034 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertNotNull(attachments.size() == 1) @TO@ MethodInvocation:assertEquals(1,attachments.size()) @AT@ 16432 @LENGTH@ 39
---UPD MethodInvocation@@assertNotNull(attachments.size() == 1) @TO@ assertEquals(1,attachments.size()) @AT@ 16432 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @TO@ MethodName:assertEquals:[1, attachments.size()] @AT@ 16432 @LENGTH@ 38
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @AT@ 16442 @LENGTH@ 1
---------INS MethodInvocation@@attachments.size() @TO@ SimpleName@@MethodName:assertNotNull:[attachments.size() == 1] @AT@ 16445 @LENGTH@ 18
------------MOV SimpleName@@Name:attachments @TO@ MethodInvocation@@attachments.size() @AT@ 16446 @LENGTH@ 11
------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@attachments.size() @AT@ 16458 @LENGTH@ 6
---------DEL InfixExpression@@attachments.size() == 1 @AT@ 16446 @LENGTH@ 23
------------DEL MethodInvocation@@attachments.size() @AT@ 16446 @LENGTH@ 18
------------DEL Operator@@== @AT@ 16464 @LENGTH@ 2
------------DEL NumberLiteral@@1 @AT@ 16468 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:StepVerifier.create(findById).consumeNextWith((s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")).verifyComplete() @TO@ MethodInvocation:StepVerifier.create(findById).consumeNextWith((s) -> assertThat(s).isEqualTo("result")).verifyComplete() @AT@ 8604 @LENGTH@ 134
---UPD MethodInvocation@@StepVerifier.create(findById).consumeNextWith((s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")).verifyComplete() @TO@ StepVerifier.create(findById).consumeNextWith((s) -> assertThat(s).isEqualTo("result")).verifyComplete() @AT@ 8604 @LENGTH@ 133
------UPD MethodInvocation@@MethodName:consumeNextWith:[(s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result")] @TO@ MethodName:consumeNextWith:[(s) -> assertThat(s).isEqualTo("result")] @AT@ 8604 @LENGTH@ 111
---------UPD LambdaExpression@@(s) -> AssertionsForClassTypes.assertThat(s).isEqualTo("result") @TO@ (s) -> assertThat(s).isEqualTo("result") @AT@ 8650 @LENGTH@ 64
------------UPD MethodInvocation@@AssertionsForClassTypes.assertThat(s).isEqualTo("result") @TO@ assertThat(s).isEqualTo("result") @AT@ 8657 @LENGTH@ 57
---------------DEL SimpleName@@Name:AssertionsForClassTypes @AT@ 8657 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).flatMap((matchResult) -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @TO@ MethodInvocation:this.requiresAuthenticationMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).flatMap((matchResult) -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(ex) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),ex)) @AT@ 5081 @LENGTH@ 475
---UPD MethodInvocation@@this.requiresAuthenticationMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).flatMap((matchResult) -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)) @TO@ this.requiresAuthenticationMatcher.matches(exchange).filter((matchResult) -> matchResult.isMatch()).flatMap((matchResult) -> this.authenticationConverter.convert(exchange)).switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((token) -> authenticate(exchange,chain,token)).onErrorResume(AuthenticationException.class,(ex) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),ex)) @AT@ 5088 @LENGTH@ 467
------UPD SimpleName@@MethodName:onErrorResume:[AuthenticationException.class, (e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e)] @TO@ MethodName:onErrorResume:[AuthenticationException.class, (ex) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),ex)] @AT@ 5395 @LENGTH@ 160
---------UPD LambdaExpression@@(e) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @TO@ (ex) -> this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),ex) @AT@ 5440 @LENGTH@ 114
------------UPD VariableDeclarationFragment@@e @TO@ ex @AT@ 5441 @LENGTH@ 1
---------------UPD SimpleName@@e @TO@ ex @AT@ 5441 @LENGTH@ 1
------------UPD MethodInvocation@@this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),e) @TO@ this.authenticationFailureHandler.onAuthenticationFailure(new WebFilterExchange(exchange,chain),ex) @AT@ 5447 @LENGTH@ 107
---------------UPD SimpleName@@MethodName:onAuthenticationFailure:[new WebFilterExchange(exchange,chain), e] @TO@ MethodName:onAuthenticationFailure:[new WebFilterExchange(exchange,chain), ex] @AT@ 5488 @LENGTH@ 66
------------------UPD SimpleName@@e @TO@ ex @AT@ 5552 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t) @TO@ MethodInvocation:LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t.getMessage(),t) @AT@ 3243 @LENGTH@ 60
---UPD MethodInvocation@@LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t) @TO@ LOG.trace("{} onThrowable {}",exchange.getExchangeId(),t.getMessage(),t) @AT@ 3243 @LENGTH@ 59
------UPD SimpleName@@MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t] @TO@ MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t.getMessage(), t] @AT@ 3247 @LENGTH@ 55
---------INS MethodInvocation@@t.getMessage() @TO@ SimpleName@@MethodName:trace:["{} onThrowable {}", exchange.getExchangeId(), t] @AT@ 3300 @LENGTH@ 14
------------INS SimpleName@@Name:t @TO@ MethodInvocation@@t.getMessage() @AT@ 3300 @LENGTH@ 1
------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@t.getMessage() @AT@ 3302 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2310 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2310 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2326 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @TO@ TypeDeclaration@@[public]RabbitMQEndpointTest, CamelTestSupport @AT@ 15910 @LENGTH@ 824
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 15910 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 15917 @LENGTH@ 4
---INS SimpleName@@MethodName:testEndpointArgsIssue @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 15922 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 15953 @LENGTH@ 9
---INS VariableDeclarationStatement@@RabbitMQEndpoint endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class); @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 15973 @LENGTH@ 395
------INS SimpleType@@RabbitMQEndpoint @TO@ VariableDeclarationStatement@@RabbitMQEndpoint endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class); @AT@ 15973 @LENGTH@ 16
------INS VariableDeclarationFragment@@endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @TO@ VariableDeclarationStatement@@RabbitMQEndpoint endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class); @AT@ 15990 @LENGTH@ 377
---------INS SimpleName@@endpoint1 @TO@ VariableDeclarationFragment@@endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @AT@ 15990 @LENGTH@ 9
---------INS MethodInvocation@@context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @TO@ VariableDeclarationFragment@@endpoint1=context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @AT@ 16002 @LENGTH@ 365
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @AT@ 16002 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message", RabbitMQEndpoint.class] @TO@ MethodInvocation@@context.getEndpoint("rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message",RabbitMQEndpoint.class) @AT@ 16010 @LENGTH@ 357
---------------INS InfixExpression@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @TO@ SimpleName@@MethodName:getEndpoint:["rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message", RabbitMQEndpoint.class] @AT@ 16022 @LENGTH@ 320
------------------INS StringLiteral@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" @TO@ InfixExpression@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @AT@ 16022 @LENGTH@ 56
------------------INS Operator@@+ @TO@ InfixExpression@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @AT@ 16078 @LENGTH@ 1
------------------INS StringLiteral@@"&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" @TO@ InfixExpression@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @AT@ 16097 @LENGTH@ 104
------------------INS StringLiteral@@"&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @TO@ InfixExpression@@"rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message" @AT@ 16220 @LENGTH@ 122
---------------INS TypeLiteral@@RabbitMQEndpoint.class @TO@ SimpleName@@MethodName:getEndpoint:["rabbitmq://localhost:5672/mydirectdelayed?queue=testQ4" + "&routingKey=testKey&username=me&password=mypwd&threadPoolSize=1&concurrentConsumers=1&autoDelete=false" + "&vhost=myvhost&arg.queue.x-single-active-consumer=true&arg.exchange.x-delayed-type=direct&exchangeType=x-delayed-message", RabbitMQEndpoint.class] @AT@ 16344 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getArgs()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16378 @LENGTH@ 42
------INS MethodInvocation@@Assert.assertNotNull(endpoint1.getArgs()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getArgs()) @AT@ 16378 @LENGTH@ 41
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getArgs()) @AT@ 16378 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[endpoint1.getArgs()] @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getArgs()) @AT@ 16385 @LENGTH@ 34
------------INS MethodInvocation@@endpoint1.getArgs() @TO@ SimpleName@@MethodName:assertNotNull:[endpoint1.getArgs()] @AT@ 16399 @LENGTH@ 19
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getArgs() @AT@ 16399 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getArgs:[] @TO@ MethodInvocation@@endpoint1.getArgs() @AT@ 16409 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,endpoint1.getArgs().size()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16429 @LENGTH@ 51
------INS MethodInvocation@@Assert.assertEquals(2,endpoint1.getArgs().size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,endpoint1.getArgs().size()) @AT@ 16429 @LENGTH@ 50
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(2,endpoint1.getArgs().size()) @AT@ 16429 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[2, endpoint1.getArgs().size()] @TO@ MethodInvocation@@Assert.assertEquals(2,endpoint1.getArgs().size()) @AT@ 16436 @LENGTH@ 43
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, endpoint1.getArgs().size()] @AT@ 16449 @LENGTH@ 1
------------INS MethodInvocation@@endpoint1.getArgs().size() @TO@ SimpleName@@MethodName:assertEquals:[2, endpoint1.getArgs().size()] @AT@ 16452 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:getArgs:[] @TO@ MethodInvocation@@endpoint1.getArgs().size() @AT@ 16452 @LENGTH@ 19
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getArgs().size() @AT@ 16452 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@endpoint1.getArgs().size() @AT@ 16472 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getExchangeArgs()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16489 @LENGTH@ 50
------INS MethodInvocation@@Assert.assertNotNull(endpoint1.getExchangeArgs()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getExchangeArgs()) @AT@ 16489 @LENGTH@ 49
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getExchangeArgs()) @AT@ 16489 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[endpoint1.getExchangeArgs()] @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getExchangeArgs()) @AT@ 16496 @LENGTH@ 42
------------INS MethodInvocation@@endpoint1.getExchangeArgs() @TO@ SimpleName@@MethodName:assertNotNull:[endpoint1.getExchangeArgs()] @AT@ 16510 @LENGTH@ 27
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getExchangeArgs() @AT@ 16510 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getExchangeArgs:[] @TO@ MethodInvocation@@endpoint1.getExchangeArgs() @AT@ 16520 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,endpoint1.getExchangeArgs().size()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16548 @LENGTH@ 59
------INS MethodInvocation@@Assert.assertEquals(1,endpoint1.getExchangeArgs().size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,endpoint1.getExchangeArgs().size()) @AT@ 16548 @LENGTH@ 58
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(1,endpoint1.getExchangeArgs().size()) @AT@ 16548 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[1, endpoint1.getExchangeArgs().size()] @TO@ MethodInvocation@@Assert.assertEquals(1,endpoint1.getExchangeArgs().size()) @AT@ 16555 @LENGTH@ 51
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, endpoint1.getExchangeArgs().size()] @AT@ 16568 @LENGTH@ 1
------------INS MethodInvocation@@endpoint1.getExchangeArgs().size() @TO@ SimpleName@@MethodName:assertEquals:[1, endpoint1.getExchangeArgs().size()] @AT@ 16571 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getExchangeArgs:[] @TO@ MethodInvocation@@endpoint1.getExchangeArgs().size() @AT@ 16571 @LENGTH@ 27
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getExchangeArgs().size() @AT@ 16571 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@endpoint1.getExchangeArgs().size() @AT@ 16599 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getQueueArgs()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16616 @LENGTH@ 47
------INS MethodInvocation@@Assert.assertNotNull(endpoint1.getQueueArgs()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(endpoint1.getQueueArgs()) @AT@ 16616 @LENGTH@ 46
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getQueueArgs()) @AT@ 16616 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[endpoint1.getQueueArgs()] @TO@ MethodInvocation@@Assert.assertNotNull(endpoint1.getQueueArgs()) @AT@ 16623 @LENGTH@ 39
------------INS MethodInvocation@@endpoint1.getQueueArgs() @TO@ SimpleName@@MethodName:assertNotNull:[endpoint1.getQueueArgs()] @AT@ 16637 @LENGTH@ 24
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getQueueArgs() @AT@ 16637 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getQueueArgs:[] @TO@ MethodInvocation@@endpoint1.getQueueArgs() @AT@ 16647 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,endpoint1.getQueueArgs().size()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointArgsIssue, Exception,  @AT@ 16672 @LENGTH@ 56
------INS MethodInvocation@@Assert.assertEquals(1,endpoint1.getQueueArgs().size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,endpoint1.getQueueArgs().size()) @AT@ 16672 @LENGTH@ 55
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(1,endpoint1.getQueueArgs().size()) @AT@ 16672 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[1, endpoint1.getQueueArgs().size()] @TO@ MethodInvocation@@Assert.assertEquals(1,endpoint1.getQueueArgs().size()) @AT@ 16679 @LENGTH@ 48
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[1, endpoint1.getQueueArgs().size()] @AT@ 16692 @LENGTH@ 1
------------INS MethodInvocation@@endpoint1.getQueueArgs().size() @TO@ SimpleName@@MethodName:assertEquals:[1, endpoint1.getQueueArgs().size()] @AT@ 16695 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getQueueArgs:[] @TO@ MethodInvocation@@endpoint1.getQueueArgs().size() @AT@ 16695 @LENGTH@ 24
---------------INS SimpleName@@Name:endpoint1 @TO@ MethodInvocation@@endpoint1.getQueueArgs().size() @AT@ 16695 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@endpoint1.getQueueArgs().size() @AT@ 16720 @LENGTH@ 6


UPD MethodDeclaration@@static, String, MethodName:getName, final DeploymentUnit depUnit,  @TO@ private, static, String, MethodName:createDeploymentUnitName, DeploymentUnit depUnit,  @AT@ 2328 @LENGTH@ 294
---UPD SimpleName@@MethodName:getName @TO@ MethodName:createDeploymentUnitName @AT@ 2342 @LENGTH@ 7
---UPD SingleVariableDeclaration@@final DeploymentUnit depUnit @TO@ DeploymentUnit depUnit @AT@ 2350 @LENGTH@ 28
------DEL Modifier@@final @AT@ 2350 @LENGTH@ 5
---INS Modifier@@private @TO@ MethodDeclaration@@static, String, MethodName:getName, final DeploymentUnit depUnit,  @AT@ 2461 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @TO@ TypeDeclaration@@ParameterBindingJsonReaderUnitTests,  @AT@ 12029 @LENGTH@ 281
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @AT@ 12029 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @AT@ 12036 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldParseRegexCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @AT@ 12041 @LENGTH@ 25
---INS VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"); @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @AT@ 12074 @LENGTH@ 102
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"); @AT@ 12074 @LENGTH@ 8
------INS VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @TO@ VariableDeclarationStatement@@Document target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"); @AT@ 12083 @LENGTH@ 92
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12083 @LENGTH@ 6
---------INS MethodInvocation@@parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @TO@ VariableDeclarationFragment@@target=parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12092 @LENGTH@ 83
------------INS SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @TO@ MethodInvocation@@parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12092 @LENGTH@ 83
---------------INS StringLiteral@@"{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}" @TO@ SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @AT@ 12098 @LENGTH@ 76
---INS ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @TO@ MethodDeclaration@@public, void, MethodName:shouldParseRegexCorrectly,  @AT@ 12179 @LENGTH@ 128
------INS MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12179 @LENGTH@ 127
---------INS MethodInvocation@@MethodName:assertThat:[target] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12179 @LENGTH@ 18
------------INS SimpleName@@target @TO@ MethodInvocation@@MethodName:assertThat:[target] @AT@ 12190 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")] @TO@ MethodInvocation@@assertThat(target).isEqualTo(Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")) @AT@ 12203 @LENGTH@ 103
------------INS MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}")] @AT@ 12213 @LENGTH@ 92
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12213 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @TO@ MethodInvocation@@Document.parse("{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}") @AT@ 12222 @LENGTH@ 83
------------------INS StringLiteral@@"{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}" @TO@ SimpleName@@MethodName:parse:["{ $and: [{'fieldA': {$in: [/ABC.*/, /CDE.*F/]}}, {'fieldB': {$ne: null}}]}"] @AT@ 12228 @LENGTH@ 76


UPD ExpressionStatement@@MethodInvocation:assertEquals(resultingRDF.size(),28) @TO@ MethodInvocation:assertEquals(28,resultingRDF.size()) @AT@ 1973 @LENGTH@ 38
---UPD MethodInvocation@@assertEquals(resultingRDF.size(),28) @TO@ assertEquals(28,resultingRDF.size()) @AT@ 1973 @LENGTH@ 37
------UPD SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @TO@ MethodName:assertEquals:[28, resultingRDF.size()] @AT@ 1973 @LENGTH@ 37
---------INS NumberLiteral@@28 @TO@ SimpleName@@MethodName:assertEquals:[resultingRDF.size(), 28] @AT@ 1986 @LENGTH@ 2
---------DEL NumberLiteral@@28 @AT@ 2007 @LENGTH@ 2


DEL SuperConstructorInvocation@@super();
 @AT@ 3025 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:AssertionsForClassTypes.assertThatCode(() -> this.pkcs8.convert(toInputStream(PKCS1_PRIVATE_KEY))).isInstanceOf(IllegalArgumentException.class) @TO@ MethodInvocation:assertThatCode(() -> this.pkcs8.convert(toInputStream(PKCS1_PRIVATE_KEY))).isInstanceOf(IllegalArgumentException.class) @AT@ 5220 @LENGTH@ 149
---UPD MethodInvocation@@AssertionsForClassTypes.assertThatCode(() -> this.pkcs8.convert(toInputStream(PKCS1_PRIVATE_KEY))).isInstanceOf(IllegalArgumentException.class) @TO@ assertThatCode(() -> this.pkcs8.convert(toInputStream(PKCS1_PRIVATE_KEY))).isInstanceOf(IllegalArgumentException.class) @AT@ 5220 @LENGTH@ 148
------DEL SimpleName@@Name:AssertionsForClassTypes @AT@ 5220 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----") @TO@ MethodInvocation:Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----") @AT@ 2661 @LENGTH@ 214
---UPD MethodInvocation@@Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----") @TO@ Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----") @AT@ 2661 @LENGTH@ 213
------UPD SimpleName@@MethodName:isTrue:[!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER), "Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----"] @TO@ MethodName:isTrue:[!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER), "Key is not in PEM-encoded PKCS#8 format, please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----"] @AT@ 2668 @LENGTH@ 206
---------UPD InfixExpression@@"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----" @TO@ "Key is not in PEM-encoded PKCS#8 format, please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----" @AT@ 2743 @LENGTH@ 130
------------DEL InfixExpression@@"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" @AT@ 2743 @LENGTH@ 94
---------------DEL StringLiteral@@"Key is not in PEM-encoded PKCS#8 format, " @AT@ 2743 @LENGTH@ 43
---------------DEL Operator@@+ @AT@ 2786 @LENGTH@ 1
------------MOV StringLiteral@@"please check that the header begins with -----" @TO@ InfixExpression@@"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----" @AT@ 2789 @LENGTH@ 48


UPD Block@@WhileBody:{  Object listValue=readValue(reader,decoderContext);  if (listValue instanceof Collection) {    list.addAll((Collection)listValue);    break;  }  list.add(listValue);} @TO@ WhileBody:{  list.add(readValue(reader,decoderContext));} @AT@ 12927 @LENGTH@ 260
---DEL VariableDeclarationStatement@@Object listValue=readValue(reader,decoderContext); @AT@ 12971 @LENGTH@ 53
------DEL SimpleType@@Object @AT@ 12971 @LENGTH@ 6
------DEL VariableDeclarationFragment@@listValue=readValue(reader,decoderContext) @AT@ 12978 @LENGTH@ 45
---------DEL SimpleName@@listValue @AT@ 12978 @LENGTH@ 9
---DEL IfStatement@@if (listValue instanceof Collection) {  list.addAll((Collection)listValue);  break;} @AT@ 13028 @LENGTH@ 95
------DEL InstanceofExpression@@listValue instanceof Collection @AT@ 13032 @LENGTH@ 31
---------DEL SimpleName@@listValue @AT@ 13032 @LENGTH@ 9
---------DEL Instanceof@@instanceof @AT@ 13042 @LENGTH@ 10
---------DEL SimpleType@@Collection @AT@ 13053 @LENGTH@ 10
------DEL Block@@ThenBody:{  list.addAll((Collection)listValue);  break;} @AT@ 13065 @LENGTH@ 58
---------DEL ExpressionStatement@@MethodInvocation:list.addAll((Collection)listValue) @AT@ 13071 @LENGTH@ 36
------------DEL MethodInvocation@@list.addAll((Collection)listValue) @AT@ 13071 @LENGTH@ 35
---------------DEL SimpleName@@Name:list @AT@ 13071 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:addAll:[(Collection)listValue] @AT@ 13076 @LENGTH@ 30
------------------DEL CastExpression@@(Collection)listValue @AT@ 13083 @LENGTH@ 22
---------------------DEL SimpleType@@Collection @AT@ 13084 @LENGTH@ 10
---------------------DEL SimpleName@@listValue @AT@ 13096 @LENGTH@ 9
---------DEL BreakStatement@@ @AT@ 13112 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:list.add(listValue) @TO@ MethodInvocation:list.add(readValue(reader,decoderContext)) @AT@ 13127 @LENGTH@ 20
------UPD MethodInvocation@@list.add(listValue) @TO@ list.add(readValue(reader,decoderContext)) @AT@ 13127 @LENGTH@ 19
---------UPD SimpleName@@MethodName:add:[listValue] @TO@ MethodName:add:[readValue(reader,decoderContext)] @AT@ 13132 @LENGTH@ 14
------------MOV MethodInvocation@@readValue(reader,decoderContext) @TO@ SimpleName@@MethodName:add:[listValue] @AT@ 12990 @LENGTH@ 33
------------DEL SimpleName@@listValue @AT@ 13136 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("direct:start").doTry().to("bean:A").setHeader("CamelJmsDestinationName",constant("queue:outQueue")).inOut("bean:B").setHeader("Status",constant("CamsResponse")).doCatch(ExchangeTimedOutException.class).setHeader("Status",constant("TimeOut")).doCatch(Exception.class).setHeader("Status",constant("ExceptionGeneral")).end().to("bean:C").transform(body()) @TO@ MethodInvocation:from("direct:start").doTry().to("bean:A").setHeader("CamelJmsDestinationName",constant("queue:outQueue")).to(ExchangePattern.InOut,"bean:B").setHeader("Status",constant("CamsResponse")).doCatch(ExchangeTimedOutException.class).setHeader("Status",constant("TimeOut")).doCatch(Exception.class).setHeader("Status",constant("ExceptionGeneral")).end().to("bean:C").transform(body()) @AT@ 3766 @LENGTH@ 463
---UPD MethodInvocation@@from("direct:start").doTry().to("bean:A").setHeader("CamelJmsDestinationName",constant("queue:outQueue")).inOut("bean:B").setHeader("Status",constant("CamsResponse")).doCatch(ExchangeTimedOutException.class).setHeader("Status",constant("TimeOut")).doCatch(Exception.class).setHeader("Status",constant("ExceptionGeneral")).end().to("bean:C").transform(body()) @TO@ from("direct:start").doTry().to("bean:A").setHeader("CamelJmsDestinationName",constant("queue:outQueue")).to(ExchangePattern.InOut,"bean:B").setHeader("Status",constant("CamsResponse")).doCatch(ExchangeTimedOutException.class).setHeader("Status",constant("TimeOut")).doCatch(Exception.class).setHeader("Status",constant("ExceptionGeneral")).end().to("bean:C").transform(body()) @AT@ 3766 @LENGTH@ 462
------UPD MethodInvocation@@MethodName:inOut:["bean:B"] @TO@ MethodName:to:[ExchangePattern.InOut, "bean:B"] @AT@ 3766 @LENGTH@ 147
---------INS QualifiedName@@ExchangePattern.InOut @TO@ MethodInvocation@@MethodName:inOut:["bean:B"] @AT@ 3946 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3946 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 3962 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2726 @LENGTH@ 553
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2738 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys("HAS_WIFE","HAS_DAUGHTER");
  relatives.remove("HAS_WIFE");
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put("HAS_SON",d);
  ReflectionTestUtils.setField(relatives.get("HAS_DAUGHTER"),"firstName","C2");
  Map<String,ClubRelationship> clubs=person.getClubs();
  clubs.remove("FOOTBALL");
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put("BASEBALL",clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys("HAS_DAUGHTER","HAS_SON");
  assertThat(relatives.get("HAS_DAUGHTER").getFirstName()).isEqualTo("C2");
  assertThat(relatives.get("HAS_SON").getFirstName()).isEqualTo("D");
  Map<String,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys("BASEBALL");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @TO@ MethodInvocation:repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys("HAS_WIFE","HAS_DAUGHTER");
  relatives.remove("HAS_WIFE");
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put("HAS_SON",d);
  ReflectionTestUtils.setField(relatives.get("HAS_DAUGHTER"),"firstName","C2");
  Map<String,ClubRelationship> clubs=person.getClubs();
  clubs.remove("FOOTBALL");
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put("BASEBALL",clubRelationship);
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys("HAS_DAUGHTER","HAS_SON");
  assertThat(relatives.get("HAS_DAUGHTER").getFirstName()).isEqualTo("C2");
  assertThat(relatives.get("HAS_SON").getFirstName()).isEqualTo("D");
  Map<String,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys("BASEBALL");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 4558 @LENGTH@ 1534
---UPD MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys("HAS_WIFE","HAS_DAUGHTER");
  relatives.remove("HAS_WIFE");
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put("HAS_SON",d);
  ReflectionTestUtils.setField(relatives.get("HAS_DAUGHTER"),"firstName","C2");
  Map<String,ClubRelationship> clubs=person.getClubs();
  clubs.remove("FOOTBALL");
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put("BASEBALL",clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys("HAS_DAUGHTER","HAS_SON");
  assertThat(relatives.get("HAS_DAUGHTER").getFirstName()).isEqualTo("C2");
  assertThat(relatives.get("HAS_SON").getFirstName()).isEqualTo("D");
  Map<String,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys("BASEBALL");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @TO@ repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys("HAS_WIFE","HAS_DAUGHTER");
  relatives.remove("HAS_WIFE");
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put("HAS_SON",d);
  ReflectionTestUtils.setField(relatives.get("HAS_DAUGHTER"),"firstName","C2");
  Map<String,ClubRelationship> clubs=person.getClubs();
  clubs.remove("FOOTBALL");
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put("BASEBALL",clubRelationship);
  return person;
}
).flatMap(repository::save).flatMap(p -> repository.findById(p.getId())).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys("HAS_DAUGHTER","HAS_SON");
  assertThat(relatives.get("HAS_DAUGHTER").getFirstName()).isEqualTo("C2");
  assertThat(relatives.get("HAS_SON").getFirstName()).isEqualTo("D");
  Map<String,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys("BASEBALL");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 4558 @LENGTH@ 1533
------INS MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @TO@ MethodInvocation@@repository.findById(idOfExistingPerson).map(person -> {
  assumeThat(person).isNotNull();
  assumeThat(person.getName()).isEqualTo("A");
  Map<String,Person> relatives=person.getRelatives();
  assumeThat(relatives).containsOnlyKeys("HAS_WIFE","HAS_DAUGHTER");
  relatives.remove("HAS_WIFE");
  Person d=new Person();
  ReflectionTestUtils.setField(d,"firstName","D");
  relatives.put("HAS_SON",d);
  ReflectionTestUtils.setField(relatives.get("HAS_DAUGHTER"),"firstName","C2");
  Map<String,ClubRelationship> clubs=person.getClubs();
  clubs.remove("FOOTBALL");
  ClubRelationship clubRelationship=new ClubRelationship("Boston");
  Club club=new Club();
  club.setName("Red Sox");
  clubRelationship.setClub(club);
  clubs.put("BASEBALL",clubRelationship);
  return person;
}
).flatMap(repository::save).as(StepVerifier::create).consumeNextWith(person -> {
  Map<String,Person> relatives=person.getRelatives();
  assertThat(relatives).containsOnlyKeys("HAS_DAUGHTER","HAS_SON");
  assertThat(relatives.get("HAS_DAUGHTER").getFirstName()).isEqualTo("C2");
  assertThat(relatives.get("HAS_SON").getFirstName()).isEqualTo("D");
  Map<String,ClubRelationship> clubs=person.getClubs();
  assertThat(clubs).containsOnlyKeys("BASEBALL");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getPlace).isEqualTo("Boston");
  assertThat(clubs.get("BASEBALL")).extracting(ClubRelationship::getClub).extracting(Club::getName).isEqualTo("Red Sox");
}
).verifyComplete() @AT@ 4576 @LENGTH@ 894
---------INS LambdaExpression@@p -> repository.findById(p.getId()) @TO@ MethodInvocation@@MethodName:flatMap:[p -> repository.findById(p.getId())] @AT@ 5434 @LENGTH@ 35
------------INS VariableDeclarationFragment@@p @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 5434 @LENGTH@ 1
---------------INS SimpleName@@p @TO@ VariableDeclarationFragment@@p @AT@ 5434 @LENGTH@ 1
------------INS MethodInvocation@@repository.findById(p.getId()) @TO@ LambdaExpression@@p -> repository.findById(p.getId()) @AT@ 5439 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 5439 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findById:[p.getId()] @TO@ MethodInvocation@@repository.findById(p.getId()) @AT@ 5450 @LENGTH@ 19
------------------INS MethodInvocation@@p.getId() @TO@ SimpleName@@MethodName:findById:[p.getId()] @AT@ 5459 @LENGTH@ 9
---------------------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getId() @AT@ 5459 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@p.getId() @AT@ 5461 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(commitMessage,ex2.getMessage().getBody(RevCommit.class).getShortMessage()) @TO@ MethodInvocation:assertEquals(commitMessage,ex2.getMessage().getBody(String.class)) @AT@ 2768 @LENGTH@ 89
---UPD MethodInvocation@@assertEquals(commitMessage,ex2.getMessage().getBody(RevCommit.class).getShortMessage()) @TO@ assertEquals(commitMessage,ex2.getMessage().getBody(String.class)) @AT@ 2768 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertEquals:[commitMessage, ex2.getMessage().getBody(RevCommit.class).getShortMessage()] @TO@ MethodName:assertEquals:[commitMessage, ex2.getMessage().getBody(String.class)] @AT@ 2768 @LENGTH@ 88
---------UPD MethodInvocation@@ex2.getMessage().getBody(RevCommit.class).getShortMessage() @TO@ ex2.getMessage().getBody(String.class) @AT@ 2796 @LENGTH@ 59
------------DEL MethodInvocation@@MethodName:getBody:[RevCommit.class] @AT@ 2796 @LENGTH@ 41
---------------DEL TypeLiteral@@RevCommit.class @AT@ 2821 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getShortMessage:[] @TO@ MethodName:getBody:[String.class] @AT@ 2838 @LENGTH@ 17
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getShortMessage:[] @AT@ 2821 @LENGTH@ 12
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getShortMessage:[] @AT@ 2821 @LENGTH@ 12


UPD VariableDeclarationStatement@@Method method=annotation.getClass().getMethod(attribute); @TO@ Method method=annotation.annotationType().getDeclaredMethod(attribute); @AT@ 2306 @LENGTH@ 59
---UPD VariableDeclarationFragment@@method=annotation.getClass().getMethod(attribute) @TO@ method=annotation.annotationType().getDeclaredMethod(attribute) @AT@ 2313 @LENGTH@ 51
------UPD MethodInvocation@@annotation.getClass().getMethod(attribute) @TO@ annotation.annotationType().getDeclaredMethod(attribute) @AT@ 2322 @LENGTH@ 42
---------UPD MethodInvocation@@MethodName:getClass:[] @TO@ MethodName:annotationType:[] @AT@ 2322 @LENGTH@ 21
---------UPD SimpleName@@MethodName:getMethod:[attribute] @TO@ MethodName:getDeclaredMethod:[attribute] @AT@ 2344 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(invocation != null && config != null,"Nulls cannot be provided") @TO@ MethodDeclaration@@public, void, MethodName:decide, FilterInvocation invocation, Collection<ConfigAttribute> config, IOException, ServletException,  @AT@ 2154 @LENGTH@ 80
---INS MethodInvocation@@Assert.isTrue(invocation != null && config != null,"Nulls cannot be provided") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(invocation != null && config != null,"Nulls cannot be provided") @AT@ 2154 @LENGTH@ 79
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(invocation != null && config != null,"Nulls cannot be provided") @AT@ 2154 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[invocation != null && config != null, "Nulls cannot be provided"] @TO@ MethodInvocation@@Assert.isTrue(invocation != null && config != null,"Nulls cannot be provided") @AT@ 2161 @LENGTH@ 72
---------INS InfixExpression@@invocation != null && config != null @TO@ SimpleName@@MethodName:isTrue:[invocation != null && config != null, "Nulls cannot be provided"] @AT@ 2168 @LENGTH@ 36
------------INS InfixExpression@@invocation != null @TO@ InfixExpression@@invocation != null && config != null @AT@ 2168 @LENGTH@ 18
---------------MOV SimpleName@@invocation @TO@ InfixExpression@@invocation != null @AT@ 2159 @LENGTH@ 10
---------------MOV Operator@@== @TO@ InfixExpression@@invocation != null @AT@ 2169 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@invocation != null @AT@ 2173 @LENGTH@ 4
------------MOV Operator@@|| @TO@ InfixExpression@@invocation != null && config != null @AT@ 2178 @LENGTH@ 2
------------INS InfixExpression@@config != null @TO@ InfixExpression@@invocation != null && config != null @AT@ 2190 @LENGTH@ 14
---------------MOV SimpleName@@config @TO@ InfixExpression@@config != null @AT@ 2183 @LENGTH@ 6
---------------MOV Operator@@== @TO@ InfixExpression@@config != null @AT@ 2189 @LENGTH@ 2
---------------MOV NullLiteral@@null @TO@ InfixExpression@@config != null @AT@ 2193 @LENGTH@ 4
---------INS StringLiteral@@"Nulls cannot be provided" @TO@ SimpleName@@MethodName:isTrue:[invocation != null && config != null, "Nulls cannot be provided"] @AT@ 2206 @LENGTH@ 26


UPD ReturnStatement@@MethodInvocation:this.authenticationManager.authenticate(token).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ MethodInvocation:this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 11008 @LENGTH@ 409
---UPD MethodInvocation@@this.authenticationManager.authenticate(token).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @TO@ this.authenticationManager.authenticate(token).onErrorMap(OAuth2AuthorizationException.class,e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 11015 @LENGTH@ 401
------INS MethodInvocation@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @TO@ MethodInvocation@@this.authenticationManager.authenticate(token).switchIfEmpty(Mono.defer(() -> Mono.error(new IllegalStateException("No provider found for " + token.getClass())))).flatMap(authentication -> onAuthenticationSuccess(authentication,webFilterExchange)).onErrorResume(AuthenticationException.class,e -> this.authenticationFailureHandler.onAuthenticationFailure(webFilterExchange,e)) @AT@ 11485 @LENGTH@ 184
---------INS TypeLiteral@@OAuth2AuthorizationException.class @TO@ MethodInvocation@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @AT@ 11548 @LENGTH@ 34
---------INS LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @TO@ MethodInvocation@@MethodName:onErrorMap:[OAuth2AuthorizationException.class, e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString())] @AT@ 11584 @LENGTH@ 84
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @AT@ 11584 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 11584 @LENGTH@ 1
------------INS ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @TO@ LambdaExpression@@e -> new OAuth2AuthenticationException(e.getError(),e.getError().toString()) @AT@ 11589 @LENGTH@ 79
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 11589 @LENGTH@ 3
---------------INS SimpleType@@OAuth2AuthenticationException @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 11593 @LENGTH@ 29
---------------INS MethodInvocation@@e.getError() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 11630 @LENGTH@ 12
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getError() @AT@ 11630 @LENGTH@ 1
------------------INS SimpleName@@MethodName:getError:[] @TO@ MethodInvocation@@e.getError() @AT@ 11632 @LENGTH@ 10
---------------INS MethodInvocation@@e.getError().toString() @TO@ ClassInstanceCreation@@OAuth2AuthenticationException[e.getError(), e.getError().toString()] @AT@ 11644 @LENGTH@ 23
------------------INS MethodInvocation@@MethodName:getError:[] @TO@ MethodInvocation@@e.getError().toString() @AT@ 11644 @LENGTH@ 12
------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getError().toString() @AT@ 11644 @LENGTH@ 1
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@e.getError().toString() @AT@ 11657 @LENGTH@ 10


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.20.0",scheme="crypto-cms",title="Crypto CMS",syntax="crypto-cms:cryptoOperation:name",producerOnly=true,category={Category.SECURITY,Category.TRANSFORMATION}), public]CryptoCmsEndpoint, DefaultEndpoint @TO@ [@Deprecated, @UriEndpoint(firstVersion="2.20.0",scheme="crypto-cms",title="Crypto CMS",syntax="crypto-cms:cryptoOperation:name",producerOnly=true,category={Category.SECURITY,Category.TRANSFORMATION}), public]CryptoCmsEndpoint, DefaultEndpoint @AT@ 1625 @LENGTH@ 2872
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="2.20.0",scheme="crypto-cms",title="Crypto CMS",syntax="crypto-cms:cryptoOperation:name",producerOnly=true,category={Category.SECURITY,Category.TRANSFORMATION}), public]CryptoCmsEndpoint, DefaultEndpoint @AT@ 1625 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Mockito.verify(spyRequest,Mockito.never()).getParameterValues(Mockito.anyString()) @TO@ MethodInvocation:Mockito.verify(spyRequest,Mockito.never()).getParameterValues(ArgumentMatchers.anyString()) @AT@ 5694 @LENGTH@ 84
---UPD MethodInvocation@@Mockito.verify(spyRequest,Mockito.never()).getParameterValues(Mockito.anyString()) @TO@ Mockito.verify(spyRequest,Mockito.never()).getParameterValues(ArgumentMatchers.anyString()) @AT@ 5694 @LENGTH@ 83
------UPD SimpleName@@MethodName:getParameterValues:[Mockito.anyString()] @TO@ MethodName:getParameterValues:[ArgumentMatchers.anyString()] @AT@ 5738 @LENGTH@ 39
---------UPD MethodInvocation@@Mockito.anyString() @TO@ ArgumentMatchers.anyString() @AT@ 5757 @LENGTH@ 19
------------UPD SimpleName@@Name:Mockito @TO@ Name:ArgumentMatchers @AT@ 5757 @LENGTH@ 7


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.14.0",scheme="box",title="Box",syntax="box:apiName/methodName",apiSyntax="apiName/methodName",consumerPrefix="consumer",category={Category.CLOUD,Category.FILE,Category.API},lenientProperties=true), @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle,greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler"), public]BoxEndpoint, AbstractApiEndpoint<BoxApiName,BoxConfiguration> @TO@ [@UriEndpoint(firstVersion="2.14.0",scheme="box",title="Box",syntax="box:apiName/methodName",apiSyntax="apiName/methodName",consumerPrefix="consumer",category={Category.CLOUD,Category.FILE,Category.API},lenientProperties=true), @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle" + ",greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler"), public]BoxEndpoint, AbstractApiEndpoint<BoxApiName,BoxConfiguration> @AT@ 2372 @LENGTH@ 4608
---UPD NormalAnnotation@@@Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle,greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler") @TO@ @Metadata(excludeProperties="startScheduler,initialDelay,delay,timeUnit,useFixedDelay,pollStrategy,runLoggingLevel,sendEmptyMessageWhenIdle" + ",greedy,scheduler,schedulerProperties,scheduledExecutorService,backoffMultiplier,backoffIdleThreshold,backoffErrorThreshold,repeatCount,bridgeErrorHandler") @AT@ 2651 @LENGTH@ 297


UPD Block@@ThenBody:{  AuthenticationPrincipal authPrincipal=findMethodAnnotation(AuthenticationPrincipal.class,parameter);  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @TO@ ThenBody:{  AuthenticationPrincipal authPrincipal=findMethodAnnotation(AuthenticationPrincipal.class,parameter);  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  }  return null;} @AT@ 3771 @LENGTH@ 297
---UPD IfStatement@@if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} else {  return null;} @TO@ if (authPrincipal.errorOnInvalidType()) {  throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());} @AT@ 3883 @LENGTH@ 181
------DEL Block@@ElseBody:{  return null;} @AT@ 4041 @LENGTH@ 23
---------DEL ReturnStatement@@NullLiteral:null @AT@ 4047 @LENGTH@ 12
------------DEL NullLiteral@@null @AT@ 4054 @LENGTH@ 4
---INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  AuthenticationPrincipal authPrincipal=findMethodAnnotation(AuthenticationPrincipal.class,parameter);  if (authPrincipal.errorOnInvalidType()) {    throw new ClassCastException(principal + " is not assignable to " + parameter.getParameterType());  } else {    return null;  }} @AT@ 4036 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4043 @LENGTH@ 4


UPD MethodDeclaration@@public, boolean, MethodName:matches, Method m, Class targetClass,  @TO@ public, boolean, MethodName:matches, Method m, Class<?> targetClass,  @AT@ 5001 @LENGTH@ 232
---UPD SingleVariableDeclaration@@Class targetClass @TO@ Class<?> targetClass @AT@ 5034 @LENGTH@ 17
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class targetClass @AT@ 5020 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 5020 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 5026 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 5034 @LENGTH@ 5
---UPD VariableDeclarationStatement@@Collection attributes=MethodSecurityMetadataSourceAdvisor.this.attributeSource.getAttributes(m,targetClass); @TO@ MethodSecurityMetadataSource source=MethodSecurityMetadataSourceAdvisor.this.attributeSource; @AT@ 5058 @LENGTH@ 116
------UPD SimpleType@@Collection @TO@ MethodSecurityMetadataSource @AT@ 5058 @LENGTH@ 10
------UPD VariableDeclarationFragment@@attributes=MethodSecurityMetadataSourceAdvisor.this.attributeSource.getAttributes(m,targetClass) @TO@ source=MethodSecurityMetadataSourceAdvisor.this.attributeSource @AT@ 5069 @LENGTH@ 104
---------UPD SimpleName@@attributes @TO@ source @AT@ 5069 @LENGTH@ 10
---------DEL MethodInvocation@@MethodSecurityMetadataSourceAdvisor.this.attributeSource.getAttributes(m,targetClass) @AT@ 5082 @LENGTH@ 91
------------DEL FieldAccess@@MethodSecurityMetadataSourceAdvisor.this.attributeSource @AT@ 5082 @LENGTH@ 56
------------DEL SimpleName@@MethodName:getAttributes:[m, targetClass] @AT@ 5139 @LENGTH@ 34
---------------DEL SimpleName@@m @AT@ 5153 @LENGTH@ 1
---------------DEL SimpleName@@targetClass @AT@ 5161 @LENGTH@ 11
---------INS FieldAccess@@MethodSecurityMetadataSourceAdvisor.this.attributeSource @TO@ VariableDeclarationFragment@@attributes=MethodSecurityMetadataSourceAdvisor.this.attributeSource.getAttributes(m,targetClass) @AT@ 5085 @LENGTH@ 56
------------MOV ThisExpression@@this @TO@ FieldAccess@@MethodSecurityMetadataSourceAdvisor.this.attributeSource @AT@ 5082 @LENGTH@ 40
------------MOV SimpleName@@attributeSource @TO@ FieldAccess@@MethodSecurityMetadataSourceAdvisor.this.attributeSource @AT@ 5123 @LENGTH@ 15
---UPD ReturnStatement@@InfixExpression:attributes != null && !attributes.isEmpty() @TO@ PrefixExpression:!CollectionUtils.isEmpty(source.getAttributes(m,targetClass)) @AT@ 5178 @LENGTH@ 51
------INS PrefixExpression@@!CollectionUtils.isEmpty(source.getAttributes(m,targetClass)) @TO@ ReturnStatement@@InfixExpression:attributes != null && !attributes.isEmpty() @AT@ 5153 @LENGTH@ 62
---------MOV Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(source.getAttributes(m,targetClass)) @AT@ 5207 @LENGTH@ 1
---------MOV MethodInvocation@@attributes.isEmpty() @TO@ PrefixExpression@@!CollectionUtils.isEmpty(source.getAttributes(m,targetClass)) @AT@ 5208 @LENGTH@ 20
------DEL InfixExpression@@attributes != null && !attributes.isEmpty() @AT@ 5185 @LENGTH@ 43
---------DEL InfixExpression@@attributes != null @AT@ 5185 @LENGTH@ 18
------------DEL SimpleName@@attributes @AT@ 5185 @LENGTH@ 10
------------DEL Operator@@!= @AT@ 5195 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 5199 @LENGTH@ 4
---------DEL Operator@@&& @AT@ 5203 @LENGTH@ 2
---------DEL PrefixExpression@@!attributes.isEmpty() @AT@ 5207 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2999 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2999 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 3015 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:assertEquals(response,"<error/>","The response should be error") @TO@ MethodInvocation:assertEquals("<error/>",response,"The response should be error") @AT@ 2037 @LENGTH@ 67
---UPD MethodInvocation@@assertEquals(response,"<error/>","The response should be error") @TO@ assertEquals("<error/>",response,"The response should be error") @AT@ 2037 @LENGTH@ 66
------UPD SimpleName@@MethodName:assertEquals:[response, "<error/>", "The response should be error"] @TO@ MethodName:assertEquals:["<error/>", response, "The response should be error"] @AT@ 2037 @LENGTH@ 66
---------INS StringLiteral@@"<error/>" @TO@ SimpleName@@MethodName:assertEquals:[response, "<error/>", "The response should be error"] @AT@ 2050 @LENGTH@ 10
---------DEL StringLiteral@@"<error/>" @AT@ 2060 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(body) @TO@ MethodInvocation:exchange.getMessage().setBody(body) @AT@ 3414 @LENGTH@ 32
---UPD MethodInvocation@@exchange.getOut().setBody(body) @TO@ exchange.getMessage().setBody(body) @AT@ 3414 @LENGTH@ 31
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3414 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:interceptor.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE) @TO@ MethodInvocation:interceptor.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE) @AT@ 3054 @LENGTH@ 65
---UPD MethodInvocation@@interceptor.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE) @TO@ interceptor.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_BY_TYPE) @AT@ 3054 @LENGTH@ 64
------UPD SimpleName@@MethodName:setAutowireMode:[RootBeanDefinition.AUTOWIRE_BY_TYPE] @TO@ MethodName:setAutowireMode:[AbstractBeanDefinition.AUTOWIRE_BY_TYPE] @AT@ 3066 @LENGTH@ 52
---------UPD QualifiedName@@RootBeanDefinition.AUTOWIRE_BY_TYPE @TO@ AbstractBeanDefinition.AUTOWIRE_BY_TYPE @AT@ 3082 @LENGTH@ 35
------------UPD SimpleName@@RootBeanDefinition @TO@ AbstractBeanDefinition @AT@ 3082 @LENGTH@ 18


MOV MethodDeclaration@@private, voidMethodName:ServerWebExchangeMatchers,  @TO@ TypeDeclaration@@[public, abstract]ServerWebExchangeMatchers,  @AT@ 2755 @LENGTH@ 40


INS ExpressionStatement@@MethodInvocation:Assert.notNull(response,() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR) @TO@ MethodDeclaration@@private, HttpServletResponse, MethodName:getResponse, HttpServletRequest request,  @AT@ 3058 @LENGTH@ 152
---INS MethodInvocation@@Assert.notNull(response,() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR) @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(response,() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR) @AT@ 3058 @LENGTH@ 151
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(response,() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR) @AT@ 3058 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[response, () -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR] @TO@ MethodInvocation@@Assert.notNull(response,() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR) @AT@ 3065 @LENGTH@ 144
---------INS SimpleName@@response @TO@ SimpleName@@MethodName:notNull:[response, () -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR] @AT@ 3073 @LENGTH@ 8
---------INS LambdaExpression@@() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @TO@ SimpleName@@MethodName:notNull:[response, () -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR] @AT@ 3083 @LENGTH@ 125
------------INS InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @TO@ LambdaExpression@@() -> "The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3089 @LENGTH@ 119
---------------MOV StringLiteral@@"The HttpServletRequest attribute must contain an HttpServletResponse for the attribute " @TO@ InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3126 @LENGTH@ 89
---------------INS StringLiteral@@"for the attribute " @TO@ InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3167 @LENGTH@ 20
---------------MOV Operator@@+ @TO@ InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3215 @LENGTH@ 1
---------------MOV SimpleName@@HTTP_RESPONSE_ATTR @TO@ InfixExpression@@"The HttpServletRequest attribute must contain an HttpServletResponse " + "for the attribute " + HTTP_RESPONSE_ATTR @AT@ 3225 @LENGTH@ 18


UPD FieldDeclaration@@private, volatile, HttpHandler, [startupFailedHandler=ResponseCodeHandler.HANDLE_500] @TO@ private, final, HttpHandler, [startupFailedHandler=ResponseCodeHandler.HANDLE_500] @AT@ 1489 @LENGTH@ 83
---UPD Modifier@@volatile @TO@ final @AT@ 1497 @LENGTH@ 8


UPD VariableDeclarationStatement@@MockMvc traceEnabled=MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build(); @TO@ MockMvc traceEnabled=MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build(); @AT@ 6892 @LENGTH@ 256
---UPD VariableDeclarationFragment@@traceEnabled=MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @TO@ traceEnabled=MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @AT@ 6900 @LENGTH@ 247
------UPD MethodInvocation@@MockMvcBuilders.webAppContextSetup((WebApplicationContext)this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @TO@ MockMvcBuilders.webAppContextSetup(this.spring.getContext()).apply(springSecurity()).addDispatcherServletCustomizer(dispatcherServlet -> dispatcherServlet.setDispatchTraceRequest(true)).build() @AT@ 6915 @LENGTH@ 232
---------UPD MethodInvocation@@MethodName:webAppContextSetup:[(WebApplicationContext)this.spring.getContext()] @TO@ MethodName:webAppContextSetup:[this.spring.getContext()] @AT@ 6915 @LENGTH@ 84
------------DEL CastExpression@@(WebApplicationContext)this.spring.getContext() @AT@ 6950 @LENGTH@ 48
---------------DEL SimpleType@@WebApplicationContext @AT@ 6951 @LENGTH@ 21
------------MOV MethodInvocation@@this.spring.getContext() @TO@ MethodInvocation@@MethodName:webAppContextSetup:[(WebApplicationContext)this.spring.getContext()] @AT@ 6974 @LENGTH@ 24


UPD MethodDeclaration@@static, Set<String>, MethodName:getClasses, final DeploymentUnit depUnit,  @TO@ static, ArquillianConfig, MethodName:processDeployment, DeploymentUnit depUnit,  @AT@ 2069 @LENGTH@ 253
---INS SimpleType@@ArquillianConfig @TO@ MethodDeclaration@@static, Set<String>, MethodName:getClasses, final DeploymentUnit depUnit,  @AT@ 2076 @LENGTH@ 16
---DEL ParameterizedType@@Set<String> @AT@ 2076 @LENGTH@ 11
------DEL SimpleType@@Set @AT@ 2076 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 2080 @LENGTH@ 6
---UPD SimpleName@@MethodName:getClasses @TO@ MethodName:processDeployment @AT@ 2088 @LENGTH@ 10
---UPD SingleVariableDeclaration@@final DeploymentUnit depUnit @TO@ DeploymentUnit depUnit @AT@ 2099 @LENGTH@ 28
------DEL Modifier@@final @AT@ 2099 @LENGTH@ 5
---DEL ReturnStatement@@ConditionalExpression:testClasses == null || testClasses.isEmpty() ? null : testClasses @AT@ 2243 @LENGTH@ 73
------DEL ConditionalExpression@@testClasses == null || testClasses.isEmpty() ? null : testClasses @AT@ 2250 @LENGTH@ 65
---------DEL NullLiteral@@null @AT@ 2297 @LENGTH@ 4
---------DEL SimpleName@@testClasses @AT@ 2304 @LENGTH@ 11
---INS IfStatement@@if (testClasses == null || testClasses.isEmpty()) {  return null;} @TO@ MethodDeclaration@@static, Set<String>, MethodName:getClasses, final DeploymentUnit depUnit,  @AT@ 2277 @LENGTH@ 86
------MOV InfixExpression@@testClasses == null || testClasses.isEmpty() @TO@ IfStatement@@if (testClasses == null || testClasses.isEmpty()) {  return null;} @AT@ 2250 @LENGTH@ 44
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (testClasses == null || testClasses.isEmpty()) {  return null;} @AT@ 2327 @LENGTH@ 36
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 2341 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2348 @LENGTH@ 4
---INS ReturnStatement@@ClassInstanceCreation:new ArquillianConfig(testClasses,createDeploymentUnitName(depUnit)) @TO@ MethodDeclaration@@static, Set<String>, MethodName:getClasses, final DeploymentUnit depUnit,  @AT@ 2373 @LENGTH@ 76
------INS ClassInstanceCreation@@ArquillianConfig[testClasses, createDeploymentUnitName(depUnit)] @TO@ ReturnStatement@@ClassInstanceCreation:new ArquillianConfig(testClasses,createDeploymentUnitName(depUnit)) @AT@ 2380 @LENGTH@ 68
---------INS New@@new @TO@ ClassInstanceCreation@@ArquillianConfig[testClasses, createDeploymentUnitName(depUnit)] @AT@ 2380 @LENGTH@ 3
---------INS SimpleType@@ArquillianConfig @TO@ ClassInstanceCreation@@ArquillianConfig[testClasses, createDeploymentUnitName(depUnit)] @AT@ 2384 @LENGTH@ 16
---------INS SimpleName@@testClasses @TO@ ClassInstanceCreation@@ArquillianConfig[testClasses, createDeploymentUnitName(depUnit)] @AT@ 2401 @LENGTH@ 11
---------INS MethodInvocation@@createDeploymentUnitName(depUnit) @TO@ ClassInstanceCreation@@ArquillianConfig[testClasses, createDeploymentUnitName(depUnit)] @AT@ 2414 @LENGTH@ 33
------------INS SimpleName@@MethodName:createDeploymentUnitName:[depUnit] @TO@ MethodInvocation@@createDeploymentUnitName(depUnit) @AT@ 2414 @LENGTH@ 33
---------------INS SimpleName@@depUnit @TO@ SimpleName@@MethodName:createDeploymentUnitName:[depUnit] @AT@ 2439 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(out,"java.lang.IllegalArgumentException: Forced exception","should get the exception here") @TO@ MethodInvocation:assertEquals("java.lang.IllegalArgumentException: Forced exception",out,"should get the exception here") @AT@ 2882 @LENGTH@ 107
---UPD MethodInvocation@@assertEquals(out,"java.lang.IllegalArgumentException: Forced exception","should get the exception here") @TO@ assertEquals("java.lang.IllegalArgumentException: Forced exception",out,"should get the exception here") @AT@ 2882 @LENGTH@ 106
------UPD SimpleName@@MethodName:assertEquals:[out, "java.lang.IllegalArgumentException: Forced exception", "should get the exception here"] @TO@ MethodName:assertEquals:["java.lang.IllegalArgumentException: Forced exception", out, "should get the exception here"] @AT@ 2882 @LENGTH@ 106
---------INS StringLiteral@@"java.lang.IllegalArgumentException: Forced exception" @TO@ SimpleName@@MethodName:assertEquals:[out, "java.lang.IllegalArgumentException: Forced exception", "should get the exception here"] @AT@ 2895 @LENGTH@ 54
---------DEL StringLiteral@@"java.lang.IllegalArgumentException: Forced exception" @AT@ 2900 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:setCacheLZMAAvailability(true) @TO@ MethodInvocation:setCacheLZMAAvailablity(true) @AT@ 1890 @LENGTH@ 31
---UPD MethodInvocation@@setCacheLZMAAvailability(true) @TO@ setCacheLZMAAvailablity(true) @AT@ 1890 @LENGTH@ 30
------UPD SimpleName@@MethodName:setCacheLZMAAvailability:[true] @TO@ MethodName:setCacheLZMAAvailablity:[true] @AT@ 1890 @LENGTH@ 30


UPD VariableDeclarationStatement@@Product p=products.get(new Long(productId)); @TO@ Product p=products.get(Long.valueOf(productId)); @AT@ 1650 @LENGTH@ 46
---UPD VariableDeclarationFragment@@p=products.get(new Long(productId)) @TO@ p=products.get(Long.valueOf(productId)) @AT@ 1658 @LENGTH@ 37
------UPD MethodInvocation@@products.get(new Long(productId)) @TO@ products.get(Long.valueOf(productId)) @AT@ 1662 @LENGTH@ 33
---------UPD SimpleName@@MethodName:get:[new Long(productId)] @TO@ MethodName:get:[Long.valueOf(productId)] @AT@ 1671 @LENGTH@ 24
------------INS MethodInvocation@@Long.valueOf(productId) @TO@ SimpleName@@MethodName:get:[new Long(productId)] @AT@ 1675 @LENGTH@ 23
---------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf(productId) @AT@ 1675 @LENGTH@ 4
---------------INS SimpleName@@MethodName:valueOf:[productId] @TO@ MethodInvocation@@Long.valueOf(productId) @AT@ 1680 @LENGTH@ 18
------------------INS SimpleName@@productId @TO@ SimpleName@@MethodName:valueOf:[productId] @AT@ 1688 @LENGTH@ 9
------------DEL ClassInstanceCreation@@Long[productId] @AT@ 1675 @LENGTH@ 19
---------------DEL New@@new @AT@ 1675 @LENGTH@ 3
---------------DEL SimpleType@@Long @AT@ 1679 @LENGTH@ 4
---------------DEL SimpleName@@productId @AT@ 1684 @LENGTH@ 9


MOV FieldDeclaration@@private, String, [gitHubSourceString="{" + "\"apiVersion\": \"sources.knative.dev/v1alpha1\"," + "\"kind\": \"GitHubSource\","+ "\"metadata\": {"+ "   \"name\": \"test\"},"+ "\"spec\": {"+ "   \"eventTypes\": [issues, repository],"+ "   \"ownerAndRepository\": \"akihikokuroda/sample\","+ "   \"accessToken\": {"+ "       \"secretKeyRef\": {"+ "           \"name\": \"githubsecret\","+ "           \"key\": \"accessToken\"}},"+ "   \"secretToken\": {"+ "       \"secretKeyRef\": {"+ "           \"name\": \"githubsecret\","+ "           \"key\": \"secretToken\"}}},"+ "\"githubAPIURL\": \"https://api.github.com/\","+ "\"sink\": {"+ "    \"ref\": {"+ "       \"apiVersion\": \"messaging.knative.dev/v1beta1\","+ "       \"kind\": \"Channel\","+ "       \"name\": \"github\"}}"+ "}"] @TO@ TypeDeclaration@@[@Disabled("Requires a running Kubernetes Cluster"), public]KubernetesCustomResourcesConsumerTest, KubernetesTestSupport @AT@ 1513 @LENGTH@ 1681


UPD ReturnStatement@@QualifiedName:PriorityOrdered.HIGHEST_PRECEDENCE @TO@ QualifiedName:Ordered.HIGHEST_PRECEDENCE @AT@ 5121 @LENGTH@ 42
---UPD QualifiedName@@PriorityOrdered.HIGHEST_PRECEDENCE @TO@ Ordered.HIGHEST_PRECEDENCE @AT@ 5128 @LENGTH@ 34
------UPD SimpleName@@PriorityOrdered @TO@ Ordered @AT@ 5128 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertEquals(response,"<ok/>","The response should be ok") @TO@ MethodInvocation:assertEquals("<ok/>",response,"The response should be ok") @AT@ 1637 @LENGTH@ 61
---UPD MethodInvocation@@assertEquals(response,"<ok/>","The response should be ok") @TO@ assertEquals("<ok/>",response,"The response should be ok") @AT@ 1637 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @TO@ MethodName:assertEquals:["<ok/>", response, "The response should be ok"] @AT@ 1637 @LENGTH@ 60
---------INS StringLiteral@@"<ok/>" @TO@ SimpleName@@MethodName:assertEquals:[response, "<ok/>", "The response should be ok"] @AT@ 1650 @LENGTH@ 7
---------DEL StringLiteral@@"<ok/>" @AT@ 1660 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertNotNull(foo.hashCode()) @TO@ MethodInvocation:assertNotEquals(0,foo.hashCode()) @AT@ 1459 @LENGTH@ 30
---UPD MethodInvocation@@assertNotNull(foo.hashCode()) @TO@ assertNotEquals(0,foo.hashCode()) @AT@ 1459 @LENGTH@ 29
------UPD SimpleName@@MethodName:assertNotNull:[foo.hashCode()] @TO@ MethodName:assertNotEquals:[0, foo.hashCode()] @AT@ 1459 @LENGTH@ 29
---------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertNotNull:[foo.hashCode()] @AT@ 1475 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, Integer, [EIGHT=new Integer(8)] @TO@ private, static, final, Integer, [EIGHT=Integer.valueOf(8)] @AT@ 1801 @LENGTH@ 52
---UPD VariableDeclarationFragment@@EIGHT=new Integer(8) @TO@ EIGHT=Integer.valueOf(8) @AT@ 1830 @LENGTH@ 22
------INS MethodInvocation@@Integer.valueOf(8) @TO@ VariableDeclarationFragment@@EIGHT=new Integer(8) @AT@ 1838 @LENGTH@ 18
---------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(8) @AT@ 1838 @LENGTH@ 7
---------INS SimpleName@@MethodName:valueOf:[8] @TO@ MethodInvocation@@Integer.valueOf(8) @AT@ 1846 @LENGTH@ 10
------------INS NumberLiteral@@8 @TO@ SimpleName@@MethodName:valueOf:[8] @AT@ 1854 @LENGTH@ 1
------DEL ClassInstanceCreation@@Integer[8] @AT@ 1838 @LENGTH@ 14
---------DEL New@@new @AT@ 1838 @LENGTH@ 3
---------DEL SimpleType@@Integer @AT@ 1842 @LENGTH@ 7
---------DEL NumberLiteral@@8 @AT@ 1850 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @TO@ TypeDeclaration@@[public]CharacterFilterReaderTest,  @AT@ 2807 @LENGTH@ 414
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2807 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2814 @LENGTH@ 4
---INS SimpleName@@MethodName:testReadIntoBuffer @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2819 @LENGTH@ 18
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2847 @LENGTH@ 11
---INS VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2869 @LENGTH@ 57
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 2869 @LENGTH@ 5
------INS SimpleType@@StringReader @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 2875 @LENGTH@ 12
------INS VariableDeclarationFragment@@input=new StringReader("ababcabcd") @TO@ VariableDeclarationStatement@@final StringReader input=new StringReader("ababcabcd"); @AT@ 2888 @LENGTH@ 37
---------INS SimpleName@@input @TO@ VariableDeclarationFragment@@input=new StringReader("ababcabcd") @AT@ 2888 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringReader["ababcabcd"] @TO@ VariableDeclarationFragment@@input=new StringReader("ababcabcd") @AT@ 2896 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 2896 @LENGTH@ 3
------------INS SimpleType@@StringReader @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 2900 @LENGTH@ 12
------------INS StringLiteral@@"ababcabcd" @TO@ ClassInstanceCreation@@StringReader["ababcabcd"] @AT@ 2913 @LENGTH@ 11
---INS TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @TO@ MethodDeclaration@@public, void, MethodName:testReadIntoBuffer, IOException,  @AT@ 2935 @LENGTH@ 280
------INS VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @TO@ TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @AT@ 2940 @LENGTH@ 68
---------INS SimpleType@@CharacterFilterReader @TO@ VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @AT@ 2940 @LENGTH@ 21
---------INS VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @TO@ VariableDeclarationExpression@@CharacterFilterReader reader=new CharacterFilterReader(input,'b') @AT@ 2962 @LENGTH@ 46
------------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @AT@ 2962 @LENGTH@ 6
------------INS ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @TO@ VariableDeclarationFragment@@reader=new CharacterFilterReader(input,'b') @AT@ 2971 @LENGTH@ 37
---------------INS New@@new @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 2971 @LENGTH@ 3
---------------INS SimpleType@@CharacterFilterReader @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 2975 @LENGTH@ 21
---------------INS SimpleName@@input @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 2997 @LENGTH@ 5
---------------INS CharacterLiteral@@'b' @TO@ ClassInstanceCreation@@CharacterFilterReader[input, 'b'] @AT@ 3004 @LENGTH@ 3
------INS VariableDeclarationStatement@@char[] buff=new char[9]; @TO@ TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @AT@ 3024 @LENGTH@ 26
---------INS ArrayType@@char[] @TO@ VariableDeclarationStatement@@char[] buff=new char[9]; @AT@ 3024 @LENGTH@ 6
------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 3024 @LENGTH@ 4
---------INS VariableDeclarationFragment@@buff=new char[9] @TO@ VariableDeclarationStatement@@char[] buff=new char[9]; @AT@ 3031 @LENGTH@ 18
------------INS SimpleName@@buff @TO@ VariableDeclarationFragment@@buff=new char[9] @AT@ 3031 @LENGTH@ 4
------------INS ArrayCreation@@new char[9] @TO@ VariableDeclarationFragment@@buff=new char[9] @AT@ 3038 @LENGTH@ 11
---------------INS ArrayType@@char[] @TO@ ArrayCreation@@new char[9] @AT@ 3042 @LENGTH@ 7
------------------INS PrimitiveType@@char @TO@ ArrayType@@char[] @AT@ 3042 @LENGTH@ 4
---------------INS NumberLiteral@@9 @TO@ ArrayCreation@@new char[9] @AT@ 3047 @LENGTH@ 1
------INS VariableDeclarationStatement@@int charCount=reader.read(buff); @TO@ TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @AT@ 3063 @LENGTH@ 34
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int charCount=reader.read(buff); @AT@ 3063 @LENGTH@ 3
---------INS VariableDeclarationFragment@@charCount=reader.read(buff) @TO@ VariableDeclarationStatement@@int charCount=reader.read(buff); @AT@ 3067 @LENGTH@ 29
------------INS SimpleName@@charCount @TO@ VariableDeclarationFragment@@charCount=reader.read(buff) @AT@ 3067 @LENGTH@ 9
------------INS MethodInvocation@@reader.read(buff) @TO@ VariableDeclarationFragment@@charCount=reader.read(buff) @AT@ 3079 @LENGTH@ 17
---------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.read(buff) @AT@ 3079 @LENGTH@ 6
---------------INS SimpleName@@MethodName:read:[buff] @TO@ MethodInvocation@@reader.read(buff) @AT@ 3086 @LENGTH@ 10
------------------INS SimpleName@@buff @TO@ SimpleName@@MethodName:read:[buff] @AT@ 3091 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:assertEquals(6,charCount) @TO@ TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @AT@ 3110 @LENGTH@ 27
---------INS MethodInvocation@@assertEquals(6,charCount) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(6,charCount) @AT@ 3110 @LENGTH@ 26
------------INS SimpleName@@MethodName:assertEquals:[6, charCount] @TO@ MethodInvocation@@assertEquals(6,charCount) @AT@ 3110 @LENGTH@ 26
---------------INS NumberLiteral@@6 @TO@ SimpleName@@MethodName:assertEquals:[6, charCount] @AT@ 3123 @LENGTH@ 1
---------------INS SimpleName@@charCount @TO@ SimpleName@@MethodName:assertEquals:[6, charCount] @AT@ 3126 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:assertEquals("aacacd",new String(buff,0,charCount)) @TO@ TryStatement@@try (CharacterFilterReader reader=new CharacterFilterReader(input,'b')){  char[] buff=new char[9];  int charCount=reader.read(buff);  assertEquals(6,charCount);  assertEquals("aacacd",new String(buff,0,charCount));}  @AT@ 3150 @LENGTH@ 55
---------INS MethodInvocation@@assertEquals("aacacd",new String(buff,0,charCount)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("aacacd",new String(buff,0,charCount)) @AT@ 3150 @LENGTH@ 54
------------INS SimpleName@@MethodName:assertEquals:["aacacd", new String(buff,0,charCount)] @TO@ MethodInvocation@@assertEquals("aacacd",new String(buff,0,charCount)) @AT@ 3150 @LENGTH@ 54
---------------INS StringLiteral@@"aacacd" @TO@ SimpleName@@MethodName:assertEquals:["aacacd", new String(buff,0,charCount)] @AT@ 3163 @LENGTH@ 8
---------------INS ClassInstanceCreation@@String[buff, 0, charCount] @TO@ SimpleName@@MethodName:assertEquals:["aacacd", new String(buff,0,charCount)] @AT@ 3173 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@String[buff, 0, charCount] @AT@ 3173 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[buff, 0, charCount] @AT@ 3177 @LENGTH@ 6
------------------INS SimpleName@@buff @TO@ ClassInstanceCreation@@String[buff, 0, charCount] @AT@ 3184 @LENGTH@ 4
------------------INS NumberLiteral@@0 @TO@ ClassInstanceCreation@@String[buff, 0, charCount] @AT@ 3190 @LENGTH@ 1
------------------INS SimpleName@@charCount @TO@ ClassInstanceCreation@@String[buff, 0, charCount] @AT@ 3193 @LENGTH@ 9


UPD TypeDeclaration@@[@SuppressWarnings("unchecked"), public]OpenID4JavaConsumer, [OpenIDConsumer] @TO@ [@Deprecated, @SuppressWarnings("unchecked"), public]OpenID4JavaConsumer, [OpenIDConsumer] @AT@ 2026 @LENGTH@ 5929
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("unchecked"), public]OpenID4JavaConsumer, [OpenIDConsumer] @AT@ 2026 @LENGTH@ 11


UPD EnhancedForStatement@@for (String argType : argTypes) {  if (argType.charAt(0) == '\u200b') {    argType=argType.substring(1);  }  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }  if (++i < nTypes) {    parameterizedType.append(",");  }} @TO@ for (String argType : argTypes) {  if (argType.charAt(0) == '\u200b') {    argType=argType.substring(1);  }  if ("URL".equals(argType)) {    parameterizedType.append("java.net.URL");  } else   if ("URI".equals(argType)) {    parameterizedType.append("java.net.URI");  } else {    try {      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));    } catch (    ClassNotFoundException e) {      try {        if (log.isDebugEnabled()) {          log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);        }        parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));      } catch (      ClassNotFoundException e1) {        parameterizedType.append("?");        if (argType.trim().length() > 1) {          log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);        }      }    }  }  if (++i < nTypes) {    parameterizedType.append(",");  }} @AT@ 16442 @LENGTH@ 1719
---INS IfStatement@@if ("URL".equals(argType)) {  parameterizedType.append("java.net.URL");} else if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @TO@ EnhancedForStatement@@for (String argType : argTypes) {  if (argType.charAt(0) == '\u200b') {    argType=argType.substring(1);  }  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }  if (++i < nTypes) {    parameterizedType.append(",");  }} @AT@ 16681 @LENGTH@ 1711
------INS MethodInvocation@@"URL".equals(argType) @TO@ IfStatement@@if ("URL".equals(argType)) {  parameterizedType.append("java.net.URL");} else if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16685 @LENGTH@ 21
---------INS StringLiteral@@"URL" @TO@ MethodInvocation@@"URL".equals(argType) @AT@ 16685 @LENGTH@ 5
---------INS SimpleName@@MethodName:equals:[argType] @TO@ MethodInvocation@@"URL".equals(argType) @AT@ 16691 @LENGTH@ 15
------------INS SimpleName@@argType @TO@ SimpleName@@MethodName:equals:[argType] @AT@ 16698 @LENGTH@ 7
------INS Block@@ThenBody:{  parameterizedType.append("java.net.URL");} @TO@ IfStatement@@if ("URL".equals(argType)) {  parameterizedType.append("java.net.URL");} else if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16708 @LENGTH@ 81
---------INS ExpressionStatement@@MethodInvocation:parameterizedType.append("java.net.URL") @TO@ Block@@ThenBody:{  parameterizedType.append("java.net.URL");} @AT@ 16730 @LENGTH@ 41
------------INS MethodInvocation@@parameterizedType.append("java.net.URL") @TO@ ExpressionStatement@@MethodInvocation:parameterizedType.append("java.net.URL") @AT@ 16730 @LENGTH@ 40
---------------INS SimpleName@@Name:parameterizedType @TO@ MethodInvocation@@parameterizedType.append("java.net.URL") @AT@ 16730 @LENGTH@ 17
---------------INS SimpleName@@MethodName:append:["java.net.URL"] @TO@ MethodInvocation@@parameterizedType.append("java.net.URL") @AT@ 16748 @LENGTH@ 22
------------------INS StringLiteral@@"java.net.URL" @TO@ SimpleName@@MethodName:append:["java.net.URL"] @AT@ 16755 @LENGTH@ 14
------INS Block@@ElseBody:if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @TO@ IfStatement@@if ("URL".equals(argType)) {  parameterizedType.append("java.net.URL");} else if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16795 @LENGTH@ 1597
---------INS IfStatement@@if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @TO@ Block@@ElseBody:if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16795 @LENGTH@ 1597
------------INS MethodInvocation@@"URI".equals(argType) @TO@ IfStatement@@if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16799 @LENGTH@ 21
---------------INS StringLiteral@@"URI" @TO@ MethodInvocation@@"URI".equals(argType) @AT@ 16799 @LENGTH@ 5
---------------INS SimpleName@@MethodName:equals:[argType] @TO@ MethodInvocation@@"URI".equals(argType) @AT@ 16805 @LENGTH@ 15
------------------INS SimpleName@@argType @TO@ SimpleName@@MethodName:equals:[argType] @AT@ 16812 @LENGTH@ 7
------------INS Block@@ThenBody:{  parameterizedType.append("java.net.URI");} @TO@ IfStatement@@if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16822 @LENGTH@ 81
---------------INS ExpressionStatement@@MethodInvocation:parameterizedType.append("java.net.URI") @TO@ Block@@ThenBody:{  parameterizedType.append("java.net.URI");} @AT@ 16844 @LENGTH@ 41
------------------INS MethodInvocation@@parameterizedType.append("java.net.URI") @TO@ ExpressionStatement@@MethodInvocation:parameterizedType.append("java.net.URI") @AT@ 16844 @LENGTH@ 40
---------------------INS SimpleName@@Name:parameterizedType @TO@ MethodInvocation@@parameterizedType.append("java.net.URI") @AT@ 16844 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:append:["java.net.URI"] @TO@ MethodInvocation@@parameterizedType.append("java.net.URI") @AT@ 16862 @LENGTH@ 22
------------------------INS StringLiteral@@"java.net.URI" @TO@ SimpleName@@MethodName:append:["java.net.URI"] @AT@ 16869 @LENGTH@ 14
------------INS Block@@ElseBody:{  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @TO@ IfStatement@@if ("URI".equals(argType)) {  parameterizedType.append("java.net.URI");} else {  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16909 @LENGTH@ 1483
---------------MOV TryStatement@@try {  parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));} catch (ClassNotFoundException e) {  try {    if (log.isDebugEnabled()) {      log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);    }    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));  } catch (  ClassNotFoundException e1) {    parameterizedType.append("?");    if (argType.trim().length() > 1) {      log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);    }  }} @TO@ Block@@ElseBody:{  try {    parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass(argType)));  } catch (  ClassNotFoundException e) {    try {      if (log.isDebugEnabled()) {        log.debug("Could not load " + argType + ", trying to load java.lang."+ argType);      }      parameterizedType.append(getCanonicalName(getProjectClassLoader().loadClass("java.lang." + argType)));    } catch (    ClassNotFoundException e1) {      parameterizedType.append("?");      if (argType.trim().length() > 1) {        log.warn("Ignoring type parameters <" + typeArgs + "> for argument "+ argument.getName()+ ", unable to load parametric type argument "+ argType,e1);      }    }  }} @AT@ 16724 @LENGTH@ 1317


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(xml) @TO@ MethodInvocation:exchange.getMessage().setBody(xml) @AT@ 3538 @LENGTH@ 31
---UPD MethodInvocation@@exchange.getOut().setBody(xml) @TO@ exchange.getMessage().setBody(xml) @AT@ 3538 @LENGTH@ 30
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3538 @LENGTH@ 17


UPD VariableDeclarationStatement@@WebApplicationContext context=(WebApplicationContext)this.spring.getContext(); @TO@ WebApplicationContext context=this.spring.getContext(); @AT@ 12014 @LENGTH@ 81
---UPD VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @TO@ context=this.spring.getContext() @AT@ 12036 @LENGTH@ 58
------DEL CastExpression@@(WebApplicationContext)this.spring.getContext() @AT@ 12046 @LENGTH@ 48
---------DEL SimpleType@@WebApplicationContext @AT@ 12047 @LENGTH@ 21
------MOV MethodInvocation@@this.spring.getContext() @TO@ VariableDeclarationFragment@@context=(WebApplicationContext)this.spring.getContext() @AT@ 12070 @LENGTH@ 24


UPD MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientTrue, Exception,  @TO@ public, void, MethodName:createEndpointWithAutowire, Exception,  @AT@ 2651 @LENGTH@ 505
---UPD SimpleName@@MethodName:createEndpointWithAutoDiscoverClientTrue @TO@ MethodName:createEndpointWithAutowire @AT@ 2663 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:assertEquals(new Double(0.8),endpoint.getConfiguration().getKerberosRenewWindowFactor()) @TO@ MethodInvocation:assertEquals(Double.valueOf(0.8),endpoint.getConfiguration().getKerberosRenewWindowFactor()) @AT@ 9047 @LENGTH@ 90
---UPD MethodInvocation@@assertEquals(new Double(0.8),endpoint.getConfiguration().getKerberosRenewWindowFactor()) @TO@ assertEquals(Double.valueOf(0.8),endpoint.getConfiguration().getKerberosRenewWindowFactor()) @AT@ 9047 @LENGTH@ 89
------UPD SimpleName@@MethodName:assertEquals:[new Double(0.8), endpoint.getConfiguration().getKerberosRenewWindowFactor()] @TO@ MethodName:assertEquals:[Double.valueOf(0.8), endpoint.getConfiguration().getKerberosRenewWindowFactor()] @AT@ 9047 @LENGTH@ 89
---------DEL ClassInstanceCreation@@Double[0.8] @AT@ 9060 @LENGTH@ 15
------------DEL New@@new @AT@ 9060 @LENGTH@ 3
------------DEL SimpleType@@Double @AT@ 9064 @LENGTH@ 6
------------DEL NumberLiteral@@0.8 @AT@ 9071 @LENGTH@ 3
---------INS MethodInvocation@@Double.valueOf(0.8) @TO@ SimpleName@@MethodName:assertEquals:[new Double(0.8), endpoint.getConfiguration().getKerberosRenewWindowFactor()] @AT@ 9064 @LENGTH@ 19
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.valueOf(0.8) @AT@ 9064 @LENGTH@ 6
------------INS SimpleName@@MethodName:valueOf:[0.8] @TO@ MethodInvocation@@Double.valueOf(0.8) @AT@ 9071 @LENGTH@ 12
---------------INS NumberLiteral@@0.8 @TO@ SimpleName@@MethodName:valueOf:[0.8] @AT@ 9079 @LENGTH@ 3


INS VariableDeclarationStatement@@Listener listener=findListener(properties); @TO@ MethodDeclaration@@public, void, MethodName:handleReturn, int replyCode, String replyText, String exchange, String routingKey, AMQP.BasicProperties properties, byte[] body,  @AT@ 35278 @LENGTH@ 45
---INS SimpleType@@Listener @TO@ VariableDeclarationStatement@@Listener listener=findListener(properties); @AT@ 35278 @LENGTH@ 8
---INS VariableDeclarationFragment@@listener=findListener(properties) @TO@ VariableDeclarationStatement@@Listener listener=findListener(properties); @AT@ 35287 @LENGTH@ 35
------INS SimpleName@@listener @TO@ VariableDeclarationFragment@@listener=findListener(properties) @AT@ 35287 @LENGTH@ 8
------INS MethodInvocation@@findListener(properties) @TO@ VariableDeclarationFragment@@listener=findListener(properties) @AT@ 35298 @LENGTH@ 24
---------INS SimpleName@@MethodName:findListener:[properties] @TO@ MethodInvocation@@findListener(properties) @AT@ 35298 @LENGTH@ 24
------------INS SimpleName@@properties @TO@ SimpleName@@MethodName:findListener:[properties] @AT@ 35311 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:this.repositories=Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  this.toIdConverter.ifPresent(it -> conversionService.addConverter(it));
  return repositories;
}
) @TO@ Assignment:this.repositories=Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  return repositories;
}
) @AT@ 4317 @LENGTH@ 467
---UPD Assignment@@this.repositories=Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  this.toIdConverter.ifPresent(it -> conversionService.addConverter(it));
  return repositories;
}
) @TO@ this.repositories=Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  return repositories;
}
) @AT@ 4317 @LENGTH@ 466
------UPD MethodInvocation@@Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  this.toIdConverter.ifPresent(it -> conversionService.addConverter(it));
  return repositories;
}
) @TO@ Lazy.of(() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  return repositories;
}
) @AT@ 4337 @LENGTH@ 446
---------UPD SimpleName@@MethodName:of:[() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  this.toIdConverter.ifPresent(it -> conversionService.addConverter(it));
  return repositories;
}
] @TO@ MethodName:of:[() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  return repositories;
}
] @AT@ 4342 @LENGTH@ 441
------------UPD LambdaExpression@@() -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  this.toIdConverter.ifPresent(it -> conversionService.addConverter(it));
  return repositories;
}
 @TO@ () -> {
  Repositories repositories=new Repositories(context);
  this.toEntityConverter=Optional.of(new ToEntityConverter(repositories,conversionService));
  this.toIdConverter=Optional.of(new ToIdConverter(repositories,conversionService));
  return repositories;
}
 @AT@ 4345 @LENGTH@ 437
---------------DEL ExpressionStatement@@MethodInvocation:this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it)) @AT@ 4513 @LENGTH@ 75
------------------DEL MethodInvocation@@this.toEntityConverter.ifPresent(it -> conversionService.addConverter(it)) @AT@ 4513 @LENGTH@ 74
---------------------DEL FieldAccess@@this.toEntityConverter @AT@ 4513 @LENGTH@ 22
------------------------DEL ThisExpression@@this @AT@ 4513 @LENGTH@ 4
------------------------DEL SimpleName@@toEntityConverter @AT@ 4518 @LENGTH@ 17
---------------------DEL SimpleName@@MethodName:ifPresent:[it -> conversionService.addConverter(it)] @AT@ 4536 @LENGTH@ 51
------------------------DEL LambdaExpression@@it -> conversionService.addConverter(it) @AT@ 4546 @LENGTH@ 40
---------------------------DEL VariableDeclarationFragment@@it @AT@ 4546 @LENGTH@ 2
------------------------------DEL SimpleName@@it @AT@ 4546 @LENGTH@ 2
---------------------------DEL MethodInvocation@@conversionService.addConverter(it) @AT@ 4552 @LENGTH@ 34
------------------------------DEL SimpleName@@Name:conversionService @AT@ 4552 @LENGTH@ 17
------------------------------DEL SimpleName@@MethodName:addConverter:[it] @AT@ 4570 @LENGTH@ 16
---------------------------------DEL SimpleName@@it @AT@ 4583 @LENGTH@ 2
---------------DEL ExpressionStatement@@MethodInvocation:this.toIdConverter.ifPresent(it -> conversionService.addConverter(it)) @AT@ 4682 @LENGTH@ 71
------------------DEL MethodInvocation@@this.toIdConverter.ifPresent(it -> conversionService.addConverter(it)) @AT@ 4682 @LENGTH@ 70
---------------------DEL FieldAccess@@this.toIdConverter @AT@ 4682 @LENGTH@ 18
------------------------DEL ThisExpression@@this @AT@ 4682 @LENGTH@ 4
------------------------DEL SimpleName@@toIdConverter @AT@ 4687 @LENGTH@ 13
---------------------DEL SimpleName@@MethodName:ifPresent:[it -> conversionService.addConverter(it)] @AT@ 4701 @LENGTH@ 51
------------------------DEL LambdaExpression@@it -> conversionService.addConverter(it) @AT@ 4711 @LENGTH@ 40
---------------------------DEL VariableDeclarationFragment@@it @AT@ 4711 @LENGTH@ 2
------------------------------DEL SimpleName@@it @AT@ 4711 @LENGTH@ 2
---------------------------DEL MethodInvocation@@conversionService.addConverter(it) @AT@ 4717 @LENGTH@ 34
------------------------------DEL SimpleName@@Name:conversionService @AT@ 4717 @LENGTH@ 17
------------------------------DEL SimpleName@@MethodName:addConverter:[it] @AT@ 4735 @LENGTH@ 16
---------------------------------DEL SimpleName@@it @AT@ 4748 @LENGTH@ 2


UPD FieldDeclaration@@private, Serializer, [serializer] @TO@ Serializer, [serializer] @AT@ 4719 @LENGTH@ 30
---DEL Modifier@@private @AT@ 4719 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:queuesChanged() @AT@ 16359 @LENGTH@ 16
---DEL MethodInvocation@@MethodName:queuesChanged:[] @AT@ 16359 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:notify.matchesMockWaitTime() @TO@ MethodInvocation:notify.matchesWaitTime() @AT@ 2234 @LENGTH@ 29
---UPD MethodInvocation@@notify.matchesMockWaitTime() @TO@ notify.matchesWaitTime() @AT@ 2234 @LENGTH@ 28
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2241 @LENGTH@ 21


UPD EnhancedForStatement@@for (Map.Entry<Class,Boolean> entry : threadClasses.entrySet()) {  if (entry.getValue()) {    LOG.info("Found thread for " + entry.getKey().getSimpleName());  }  Assert.assertTrue("No thread found for class " + entry.getKey().getSimpleName(),entry.getValue());} @TO@ for (Map.Entry<Class<? extends Thread>,Boolean> entry : threadClasses.entrySet()) {  if (entry.getValue()) {    LOG.info("Found thread for " + entry.getKey().getSimpleName());  }  Assert.assertTrue("No thread found for class " + entry.getKey().getSimpleName(),entry.getValue());} @AT@ 1960 @LENGTH@ 302
---UPD SingleVariableDeclaration@@Map.Entry<Class,Boolean> entry @TO@ Map.Entry<Class<? extends Thread>,Boolean> entry @AT@ 1965 @LENGTH@ 31
------UPD ParameterizedType@@Map.Entry<Class,Boolean> @TO@ Map.Entry<Class<? extends Thread>,Boolean> @AT@ 1965 @LENGTH@ 25
---------INS ParameterizedType@@Class<? extends Thread> @TO@ ParameterizedType@@Map.Entry<Class,Boolean> @AT@ 1783 @LENGTH@ 23
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 1789 @LENGTH@ 16
------------MOV SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Thread> @AT@ 1975 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:oneExchangeDone.matchesMockWaitTime() @TO@ MethodInvocation:oneExchangeDone.matchesWaitTime() @AT@ 2669 @LENGTH@ 38
---UPD MethodInvocation@@oneExchangeDone.matchesMockWaitTime() @TO@ oneExchangeDone.matchesWaitTime() @AT@ 2669 @LENGTH@ 37
------UPD SimpleName@@MethodName:matchesMockWaitTime:[] @TO@ MethodName:matchesWaitTime:[] @AT@ 2685 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:Mockito.verify(spyRequest,Mockito.never()).getParameter(Mockito.anyString()) @TO@ MethodInvocation:Mockito.verify(spyRequest,Mockito.never()).getParameter(ArgumentMatchers.anyString()) @AT@ 5481 @LENGTH@ 78
---UPD MethodInvocation@@Mockito.verify(spyRequest,Mockito.never()).getParameter(Mockito.anyString()) @TO@ Mockito.verify(spyRequest,Mockito.never()).getParameter(ArgumentMatchers.anyString()) @AT@ 5481 @LENGTH@ 77
------UPD SimpleName@@MethodName:getParameter:[Mockito.anyString()] @TO@ MethodName:getParameter:[ArgumentMatchers.anyString()] @AT@ 5525 @LENGTH@ 33
---------UPD MethodInvocation@@Mockito.anyString() @TO@ ArgumentMatchers.anyString() @AT@ 5538 @LENGTH@ 19
------------UPD SimpleName@@Name:Mockito @TO@ Name:ArgumentMatchers @AT@ 5538 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:from("direct:start").transform(constant("Bye World")).inOnly("seda:log") @TO@ MethodInvocation:from("direct:start").transform(constant("Bye World")).to(ExchangePattern.InOnly,"seda:log") @AT@ 1925 @LENGTH@ 73
---UPD MethodInvocation@@from("direct:start").transform(constant("Bye World")).inOnly("seda:log") @TO@ from("direct:start").transform(constant("Bye World")).to(ExchangePattern.InOnly,"seda:log") @AT@ 1925 @LENGTH@ 72
------UPD SimpleName@@MethodName:inOnly:["seda:log"] @TO@ MethodName:to:[ExchangePattern.InOnly, "seda:log"] @AT@ 1979 @LENGTH@ 18
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ SimpleName@@MethodName:inOnly:["seda:log"] @AT@ 2023 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2023 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 2039 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:rabbitMQNoAutoAck").id("producingRouteNoAutoAck").setHeader("routeHeader",simple("routeHeader")).inOut(noAutoAckEndpoint) @TO@ MethodInvocation:from("direct:rabbitMQNoAutoAck").id("producingRouteNoAutoAck").setHeader("routeHeader",simple("routeHeader")).to(ExchangePattern.InOut,noAutoAckEndpoint) @AT@ 6135 @LENGTH@ 161
---UPD MethodInvocation@@from("direct:rabbitMQNoAutoAck").id("producingRouteNoAutoAck").setHeader("routeHeader",simple("routeHeader")).inOut(noAutoAckEndpoint) @TO@ from("direct:rabbitMQNoAutoAck").id("producingRouteNoAutoAck").setHeader("routeHeader",simple("routeHeader")).to(ExchangePattern.InOut,noAutoAckEndpoint) @AT@ 6135 @LENGTH@ 160
------UPD SimpleName@@MethodName:inOut:[noAutoAckEndpoint] @TO@ MethodName:to:[ExchangePattern.InOut, noAutoAckEndpoint] @AT@ 6271 @LENGTH@ 24
---------INS QualifiedName@@ExchangePattern.InOut @TO@ SimpleName@@MethodName:inOut:[noAutoAckEndpoint] @AT@ 6335 @LENGTH@ 21
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 6335 @LENGTH@ 15
------------INS SimpleName@@InOut @TO@ QualifiedName@@ExchangePattern.InOut @AT@ 6351 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?compressionType=ZLIB&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ MethodInvocation:from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?compressionType=ZLIB&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 4868 @LENGTH@ 663
---UPD MethodInvocation@@from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?compressionType=ZLIB&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @TO@ from("thrift://localhost:" + THRIFT_TEST_PORT + "/org.apache.camel.component.thrift.generated.Calculator?compressionType=ZLIB&synchronous=true").to("mock:thrift-secure-service").choice().when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("calculate")).setBody(simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())).when(header(ThriftConstants.THRIFT_METHOD_NAME_HEADER).isEqualTo("echo")).setBody(simple("${body[0]}")).bean(new CalculatorMessageBuilder(),"echo") @AT@ 4868 @LENGTH@ 662
------UPD MethodInvocation@@MethodName:setBody:[simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @TO@ MethodName:setBody:[simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString())] @AT@ 4868 @LENGTH@ 453
---------UPD MethodInvocation@@simple(new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @TO@ simple(Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()) @AT@ 5253 @LENGTH@ 67
------------UPD SimpleName@@MethodName:simple:[new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @TO@ MethodName:simple:[Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString()] @AT@ 5253 @LENGTH@ 67
---------------UPD MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @TO@ Integer.valueOf(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 5260 @LENGTH@ 59
------------------INS MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 5260 @LENGTH@ 52
---------------------INS InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @TO@ MethodInvocation@@MethodName:valueOf:[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 5276 @LENGTH@ 35
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 5272 @LENGTH@ 16
------------------------MOV SimpleName@@THRIFT_TEST_NUM1 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 5272 @LENGTH@ 16
------------------------MOV Operator@@* @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 5288 @LENGTH@ 1
------------------------MOV SimpleName@@THRIFT_TEST_NUM2 @TO@ InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 5291 @LENGTH@ 16
------------------DEL ClassInstanceCreation@@Integer[THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2] @AT@ 5260 @LENGTH@ 48
---------------------DEL New@@new @AT@ 5260 @LENGTH@ 3
---------------------DEL SimpleType@@Integer @AT@ 5264 @LENGTH@ 7
---------------------DEL InfixExpression@@THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2 @AT@ 5272 @LENGTH@ 35
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@new Integer(THRIFT_TEST_NUM1 * THRIFT_TEST_NUM2).toString() @AT@ 5260 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new AssertionError("Capacity must be a power of two") @TO@ ClassInstanceCreation:new AssertionError("Capacity must be a power of two but got " + capacity) @AT@ 24125 @LENGTH@ 60
---UPD ClassInstanceCreation@@AssertionError["Capacity must be a power of two"] @TO@ AssertionError["Capacity must be a power of two but got " + capacity] @AT@ 24131 @LENGTH@ 53
------INS InfixExpression@@"Capacity must be a power of two but got " + capacity @TO@ ClassInstanceCreation@@AssertionError["Capacity must be a power of two"] @AT@ 24143 @LENGTH@ 53
---------INS StringLiteral@@"Capacity must be a power of two but got " @TO@ InfixExpression@@"Capacity must be a power of two but got " + capacity @AT@ 24143 @LENGTH@ 42
---------INS Operator@@+ @TO@ InfixExpression@@"Capacity must be a power of two but got " + capacity @AT@ 24185 @LENGTH@ 1
---------INS SimpleName@@capacity @TO@ InfixExpression@@"Capacity must be a power of two but got " + capacity @AT@ 24188 @LENGTH@ 8
------DEL StringLiteral@@"Capacity must be a power of two" @AT@ 24150 @LENGTH@ 33


DEL MethodDeclaration@@public, void, MethodName:createEndpointWithAutoDiscoverClientFalse, Exception,  @AT@ 2095 @LENGTH@ 553
---DEL Modifier@@public @AT@ 2095 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 2102 @LENGTH@ 4
---DEL SimpleName@@MethodName:createEndpointWithAutoDiscoverClientFalse @AT@ 2107 @LENGTH@ 41
---DEL SimpleType@@Exception @AT@ 2158 @LENGTH@ 9
---DEL VariableDeclarationStatement@@AmazonECSClientMock clientMock=new AmazonECSClientMock(); @AT@ 2179 @LENGTH@ 59
------DEL SimpleType@@AmazonECSClientMock @AT@ 2179 @LENGTH@ 19
------DEL VariableDeclarationFragment@@clientMock=new AmazonECSClientMock() @AT@ 2199 @LENGTH@ 38
---------DEL SimpleName@@clientMock @AT@ 2199 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AmazonECSClientMock[] @AT@ 2212 @LENGTH@ 25
------------DEL New@@new @AT@ 2212 @LENGTH@ 3
------------DEL SimpleType@@AmazonECSClientMock @AT@ 2216 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:context.getRegistry().bind("amazonEcsClient",clientMock) @AT@ 2247 @LENGTH@ 58
------DEL MethodInvocation@@context.getRegistry().bind("amazonEcsClient",clientMock) @AT@ 2247 @LENGTH@ 57
---------DEL MethodInvocation@@MethodName:getRegistry:[] @AT@ 2247 @LENGTH@ 21
---------DEL SimpleName@@Name:context @AT@ 2247 @LENGTH@ 7
---------DEL SimpleName@@MethodName:bind:["amazonEcsClient", clientMock] @AT@ 2269 @LENGTH@ 35
------------DEL StringLiteral@@"amazonEcsClient" @AT@ 2274 @LENGTH@ 17
------------DEL SimpleName@@clientMock @AT@ 2293 @LENGTH@ 10
---DEL VariableDeclarationStatement@@ECS2Component component=context.getComponent("aws2-ecs",ECS2Component.class); @AT@ 2314 @LENGTH@ 80
------DEL SimpleType@@ECS2Component @AT@ 2314 @LENGTH@ 13
------DEL VariableDeclarationFragment@@component=context.getComponent("aws2-ecs",ECS2Component.class) @AT@ 2328 @LENGTH@ 65
---------DEL SimpleName@@component @AT@ 2328 @LENGTH@ 9
---------DEL MethodInvocation@@context.getComponent("aws2-ecs",ECS2Component.class) @AT@ 2340 @LENGTH@ 53
------------DEL SimpleName@@Name:context @AT@ 2340 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getComponent:["aws2-ecs", ECS2Component.class] @AT@ 2348 @LENGTH@ 45
---------------DEL StringLiteral@@"aws2-ecs" @AT@ 2361 @LENGTH@ 10
---------------DEL TypeLiteral@@ECS2Component.class @AT@ 2373 @LENGTH@ 19
---DEL VariableDeclarationStatement@@ECS2Endpoint endpoint=(ECS2Endpoint)component.createEndpoint("aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"); @AT@ 2403 @LENGTH@ 159
------DEL SimpleType@@ECS2Endpoint @AT@ 2403 @LENGTH@ 12
------DEL VariableDeclarationFragment@@endpoint=(ECS2Endpoint)component.createEndpoint("aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2416 @LENGTH@ 145
---------DEL SimpleName@@endpoint @AT@ 2416 @LENGTH@ 8
---------DEL CastExpression@@(ECS2Endpoint)component.createEndpoint("aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2427 @LENGTH@ 134
------------DEL SimpleType@@ECS2Endpoint @AT@ 2428 @LENGTH@ 12
------------DEL MethodInvocation@@component.createEndpoint("aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false") @AT@ 2442 @LENGTH@ 119
---------------DEL SimpleName@@Name:component @AT@ 2442 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:createEndpoint:["aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false"] @AT@ 2469 @LENGTH@ 92
------------------DEL StringLiteral@@"aws2-ecs://TestDomain?accessKey=xxx&secretKey=yyy&autoDiscoverClient=false" @AT@ 2484 @LENGTH@ 76
---DEL ExpressionStatement@@MethodInvocation:assertNotSame(clientMock,endpoint.getConfiguration().getEcsClient()) @AT@ 2572 @LENGTH@ 70
------DEL MethodInvocation@@assertNotSame(clientMock,endpoint.getConfiguration().getEcsClient()) @AT@ 2572 @LENGTH@ 69
---------DEL SimpleName@@MethodName:assertNotSame:[clientMock, endpoint.getConfiguration().getEcsClient()] @AT@ 2572 @LENGTH@ 69
------------DEL SimpleName@@clientMock @AT@ 2586 @LENGTH@ 10
------------DEL MethodInvocation@@endpoint.getConfiguration().getEcsClient() @AT@ 2598 @LENGTH@ 42
---------------DEL MethodInvocation@@MethodName:getConfiguration:[] @AT@ 2598 @LENGTH@ 27
---------------DEL SimpleName@@Name:endpoint @AT@ 2598 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getEcsClient:[] @AT@ 2626 @LENGTH@ 14


UPD TryStatement@@try {  BrotliUtils.setCacheBrotliAvailability(false);  assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE,BrotliUtils.getCachedBrotliAvailability());  assertTrue(BrotliUtils.isBrotliCompressionAvailable());}  finally {  BrotliUtils.setCacheBrotliAvailability(true);} @TO@ try {  BrotliUtils.setCacheBrotliAvailablity(false);  assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE,BrotliUtils.getCachedBrotliAvailability());  assertTrue(BrotliUtils.isBrotliCompressionAvailable());}  finally {  BrotliUtils.setCacheBrotliAvailablity(true);} @AT@ 2662 @LENGTH@ 332
---UPD ExpressionStatement@@MethodInvocation:BrotliUtils.setCacheBrotliAvailability(false) @TO@ MethodInvocation:BrotliUtils.setCacheBrotliAvailablity(false) @AT@ 2680 @LENGTH@ 46
------UPD MethodInvocation@@BrotliUtils.setCacheBrotliAvailability(false) @TO@ BrotliUtils.setCacheBrotliAvailablity(false) @AT@ 2680 @LENGTH@ 45
---------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[false] @TO@ MethodName:setCacheBrotliAvailablity:[false] @AT@ 2692 @LENGTH@ 33
---UPD Block@@FinallyBody:{  BrotliUtils.setCacheBrotliAvailability(true);} @TO@ FinallyBody:{  BrotliUtils.setCacheBrotliAvailablity(true);} @AT@ 2925 @LENGTH@ 69
------UPD ExpressionStatement@@MethodInvocation:BrotliUtils.setCacheBrotliAvailability(true) @TO@ MethodInvocation:BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 2939 @LENGTH@ 45
---------UPD MethodInvocation@@BrotliUtils.setCacheBrotliAvailability(true) @TO@ BrotliUtils.setCacheBrotliAvailablity(true) @AT@ 2939 @LENGTH@ 44
------------UPD SimpleName@@MethodName:setCacheBrotliAvailability:[true] @TO@ MethodName:setCacheBrotliAvailablity:[true] @AT@ 2951 @LENGTH@ 32


UPD ReturnStatement@@MethodInvocation:Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler((webHandler) -> chain.filter(webHandler),filters)).map((handler) -> new DefaultWebFilterChain(handler)).flatMap((securedChain) -> securedChain.filter(exchange)) @TO@ MethodInvocation:Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler(chain::filter,filters)).map(DefaultWebFilterChain::new).flatMap((securedChain) -> securedChain.filter(exchange)) @AT@ 1623 @LENGTH@ 507
---UPD MethodInvocation@@Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler((webHandler) -> chain.filter(webHandler),filters)).map((handler) -> new DefaultWebFilterChain(handler)).flatMap((securedChain) -> securedChain.filter(exchange)) @TO@ Flux.fromIterable(this.filters).filterWhen((securityWebFilterChain) -> securityWebFilterChain.matches(exchange)).next().switchIfEmpty(chain.filter(exchange).then(Mono.empty())).flatMap((securityWebFilterChain) -> securityWebFilterChain.getWebFilters().collectList()).map((filters) -> new FilteringWebHandler(chain::filter,filters)).map(DefaultWebFilterChain::new).flatMap((securedChain) -> securedChain.filter(exchange)) @AT@ 1630 @LENGTH@ 499
------UPD MethodInvocation@@MethodName:map:[(handler) -> new DefaultWebFilterChain(handler)] @TO@ MethodName:map:[DefaultWebFilterChain::new] @AT@ 1630 @LENGTH@ 437
---------DEL LambdaExpression@@(handler) -> new DefaultWebFilterChain(handler) @AT@ 2019 @LENGTH@ 47
------------DEL VariableDeclarationFragment@@handler @AT@ 2020 @LENGTH@ 7
---------------DEL SimpleName@@handler @AT@ 2020 @LENGTH@ 7
------------DEL ClassInstanceCreation@@DefaultWebFilterChain[handler] @AT@ 2032 @LENGTH@ 34
---------------DEL New@@new @AT@ 2032 @LENGTH@ 3
---------------DEL SimpleType@@DefaultWebFilterChain @AT@ 2036 @LENGTH@ 21
---------------DEL SimpleName@@handler @AT@ 2058 @LENGTH@ 7
------UPD MethodInvocation@@MethodName:map:[(filters) -> new FilteringWebHandler((webHandler) -> chain.filter(webHandler),filters)] @TO@ MethodName:map:[(filters) -> new FilteringWebHandler(chain::filter,filters)] @AT@ 1630 @LENGTH@ 379
---------UPD LambdaExpression@@(filters) -> new FilteringWebHandler((webHandler) -> chain.filter(webHandler),filters) @TO@ (filters) -> new FilteringWebHandler(chain::filter,filters) @AT@ 1921 @LENGTH@ 87
------------UPD ClassInstanceCreation@@FilteringWebHandler[(webHandler) -> chain.filter(webHandler), filters] @TO@ FilteringWebHandler[chain::filter, filters] @AT@ 1934 @LENGTH@ 74
---------------DEL LambdaExpression@@(webHandler) -> chain.filter(webHandler) @AT@ 1958 @LENGTH@ 40
------------------DEL VariableDeclarationFragment@@webHandler @AT@ 1959 @LENGTH@ 10
---------------------DEL SimpleName@@webHandler @AT@ 1959 @LENGTH@ 10
------------------DEL MethodInvocation@@chain.filter(webHandler) @AT@ 1974 @LENGTH@ 24
---------------------DEL SimpleName@@Name:chain @AT@ 1974 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:filter:[webHandler] @AT@ 1980 @LENGTH@ 18
------------------------DEL SimpleName@@webHandler @AT@ 1987 @LENGTH@ 10


UPD SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(PatternLayout.SIMPLE_CONVERSION_PATTERN).build());
 @TO@ super(name,null,PatternLayout.newBuilder().withPattern(PatternLayout.SIMPLE_CONVERSION_PATTERN).build(),true,Property.EMPTY_ARRAY);
 @AT@ 2330 @LENGTH@ 216
---INS BooleanLiteral@@true @TO@ SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(PatternLayout.SIMPLE_CONVERSION_PATTERN).build());
 @AT@ 2618 @LENGTH@ 4
---INS QualifiedName@@Property.EMPTY_ARRAY @TO@ SuperConstructorInvocation@@super(name,null,PatternLayout.newBuilder().withPattern(PatternLayout.SIMPLE_CONVERSION_PATTERN).build());
 @AT@ 2624 @LENGTH@ 20
------INS SimpleName@@Property @TO@ QualifiedName@@Property.EMPTY_ARRAY @AT@ 2624 @LENGTH@ 8
------INS SimpleName@@EMPTY_ARRAY @TO@ QualifiedName@@Property.EMPTY_ARRAY @AT@ 2633 @LENGTH@ 11


MOV VariableDeclarationStatement@@Map<String,Object> slotOptions=PropertiesHelper.extractProperties(parameters,"slotOptions."); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1526 @LENGTH@ 97


UPD ExpressionStatement@@MethodInvocation:assertEquals(results.size(),1,"Wrong number of results.") @TO@ MethodInvocation:assertEquals(1,results.size(),"Wrong number of results.") @AT@ 4382 @LENGTH@ 60
---UPD MethodInvocation@@assertEquals(results.size(),1,"Wrong number of results.") @TO@ assertEquals(1,results.size(),"Wrong number of results.") @AT@ 4382 @LENGTH@ 59
------UPD SimpleName@@MethodName:assertEquals:[results.size(), 1, "Wrong number of results."] @TO@ MethodName:assertEquals:[1, results.size(), "Wrong number of results."] @AT@ 4382 @LENGTH@ 59
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:assertEquals:[results.size(), 1, "Wrong number of results."] @AT@ 4395 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 4411 @LENGTH@ 1


UPD TryStatement@@try {  String issuer=JWTParser.parse(token.getToken()).getJWTClaimsSet().getIssuer();  if (issuer == null) {    throw new InvalidBearerTokenException("Missing issuer");  } else {    return issuer;  }} catch (Exception ex) {  throw new InvalidBearerTokenException(ex.getMessage(),ex);} @TO@ try {  String issuer=JWTParser.parse(token.getToken()).getJWTClaimsSet().getIssuer();  if (issuer == null) {    throw new InvalidBearerTokenException("Missing issuer");  }  return issuer;} catch (Exception ex) {  throw new InvalidBearerTokenException(ex.getMessage(),ex);} @AT@ 6357 @LENGTH@ 332
---UPD IfStatement@@if (issuer == null) {  throw new InvalidBearerTokenException("Missing issuer");} else {  return issuer;} @TO@ if (issuer == null) {  throw new InvalidBearerTokenException("Missing issuer");} @AT@ 6454 @LENGTH@ 131
------DEL Block@@ElseBody:{  return issuer;} @AT@ 6556 @LENGTH@ 29
---------DEL ReturnStatement@@SimpleName:issuer @AT@ 6564 @LENGTH@ 14
------------DEL SimpleName@@issuer @AT@ 6571 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:issuer @TO@ TryStatement@@try {  String issuer=JWTParser.parse(token.getToken()).getJWTClaimsSet().getIssuer();  if (issuer == null) {    throw new InvalidBearerTokenException("Missing issuer");  } else {    return issuer;  }} catch (Exception ex) {  throw new InvalidBearerTokenException(ex.getMessage(),ex);} @AT@ 6550 @LENGTH@ 14
------INS SimpleName@@issuer @TO@ ReturnStatement@@SimpleName:issuer @AT@ 6557 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @TO@ TypeDeclaration@@[@ExtendWith(MockitoExtension.class), @MockitoSettings(strictness=Strictness.LENIENT)]DomainClassConverterUnitTests,  @AT@ 6464 @LENGTH@ 353
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6459 @LENGTH@ 4
---INS SimpleName@@MethodName:registersConvertersOnConversionService @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6464 @LENGTH@ 38
---INS VariableDeclarationStatement@@ConfigurableConversionService conversionService=new DefaultConversionService(); @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6510 @LENGTH@ 81
------INS SimpleType@@ConfigurableConversionService @TO@ VariableDeclarationStatement@@ConfigurableConversionService conversionService=new DefaultConversionService(); @AT@ 6510 @LENGTH@ 29
------INS VariableDeclarationFragment@@conversionService=new DefaultConversionService() @TO@ VariableDeclarationStatement@@ConfigurableConversionService conversionService=new DefaultConversionService(); @AT@ 6540 @LENGTH@ 50
---------INS SimpleName@@conversionService @TO@ VariableDeclarationFragment@@conversionService=new DefaultConversionService() @AT@ 6540 @LENGTH@ 17
---------INS ClassInstanceCreation@@DefaultConversionService[] @TO@ VariableDeclarationFragment@@conversionService=new DefaultConversionService() @AT@ 6560 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 6560 @LENGTH@ 3
------------INS SimpleType@@DefaultConversionService @TO@ ClassInstanceCreation@@DefaultConversionService[] @AT@ 6564 @LENGTH@ 24
---INS VariableDeclarationStatement@@DomainClassConverter<?> converter=new DomainClassConverter<>(conversionService); @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6594 @LENGTH@ 82
------INS ParameterizedType@@DomainClassConverter<?> @TO@ VariableDeclarationStatement@@DomainClassConverter<?> converter=new DomainClassConverter<>(conversionService); @AT@ 6594 @LENGTH@ 23
---------INS SimpleType@@DomainClassConverter @TO@ ParameterizedType@@DomainClassConverter<?> @AT@ 6594 @LENGTH@ 20
---------INS WildcardType@@? @TO@ ParameterizedType@@DomainClassConverter<?> @AT@ 6615 @LENGTH@ 1
------INS VariableDeclarationFragment@@converter=new DomainClassConverter<>(conversionService) @TO@ VariableDeclarationStatement@@DomainClassConverter<?> converter=new DomainClassConverter<>(conversionService); @AT@ 6618 @LENGTH@ 57
---------INS SimpleName@@converter @TO@ VariableDeclarationFragment@@converter=new DomainClassConverter<>(conversionService) @AT@ 6618 @LENGTH@ 9
---------INS ClassInstanceCreation@@DomainClassConverter<>[conversionService] @TO@ VariableDeclarationFragment@@converter=new DomainClassConverter<>(conversionService) @AT@ 6630 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@DomainClassConverter<>[conversionService] @AT@ 6630 @LENGTH@ 3
------------INS ParameterizedType@@DomainClassConverter<> @TO@ ClassInstanceCreation@@DomainClassConverter<>[conversionService] @AT@ 6634 @LENGTH@ 22
---------------INS SimpleType@@DomainClassConverter @TO@ ParameterizedType@@DomainClassConverter<> @AT@ 6634 @LENGTH@ 20
------------INS SimpleName@@conversionService @TO@ ClassInstanceCreation@@DomainClassConverter<>[conversionService] @AT@ 6657 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:converter.setApplicationContext(initContextWithRepo()) @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6679 @LENGTH@ 55
------INS MethodInvocation@@converter.setApplicationContext(initContextWithRepo()) @TO@ ExpressionStatement@@MethodInvocation:converter.setApplicationContext(initContextWithRepo()) @AT@ 6679 @LENGTH@ 54
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setApplicationContext(initContextWithRepo()) @AT@ 6679 @LENGTH@ 9
---------INS SimpleName@@MethodName:setApplicationContext:[initContextWithRepo()] @TO@ MethodInvocation@@converter.setApplicationContext(initContextWithRepo()) @AT@ 6689 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:initContextWithRepo:[] @TO@ SimpleName@@MethodName:setApplicationContext:[initContextWithRepo()] @AT@ 6711 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(conversionService.canConvert(String.class,User.class)).isTrue() @TO@ MethodDeclaration@@void, MethodName:registersConvertersOnConversionService,  @AT@ 6738 @LENGTH@ 76
------INS MethodInvocation@@assertThat(conversionService.canConvert(String.class,User.class)).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(conversionService.canConvert(String.class,User.class)).isTrue() @AT@ 6738 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[conversionService.canConvert(String.class,User.class)] @TO@ MethodInvocation@@assertThat(conversionService.canConvert(String.class,User.class)).isTrue() @AT@ 6738 @LENGTH@ 66
------------INS MethodInvocation@@conversionService.canConvert(String.class,User.class) @TO@ MethodInvocation@@MethodName:assertThat:[conversionService.canConvert(String.class,User.class)] @AT@ 6749 @LENGTH@ 54
---------------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@conversionService.canConvert(String.class,User.class) @AT@ 6749 @LENGTH@ 17
---------------INS SimpleName@@MethodName:canConvert:[String.class, User.class] @TO@ MethodInvocation@@conversionService.canConvert(String.class,User.class) @AT@ 6767 @LENGTH@ 36
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:canConvert:[String.class, User.class] @AT@ 6778 @LENGTH@ 12
------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:canConvert:[String.class, User.class] @AT@ 6792 @LENGTH@ 10
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(conversionService.canConvert(String.class,User.class)).isTrue() @AT@ 6805 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:this.logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks") @TO@ MethodInvocation:this.logger.warn("Your servlet container did not change the session ID when a new session " + "was created. You will not be adequately protected against session-fixation attacks") @AT@ 3487 @LENGTH@ 195
---UPD MethodInvocation@@this.logger.warn("Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks") @TO@ this.logger.warn("Your servlet container did not change the session ID when a new session " + "was created. You will not be adequately protected against session-fixation attacks") @AT@ 3487 @LENGTH@ 194
------UPD SimpleName@@MethodName:warn:["Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks"] @TO@ MethodName:warn:["Your servlet container did not change the session ID when a new session " + "was created. You will not be adequately protected against session-fixation attacks"] @AT@ 3499 @LENGTH@ 182
---------UPD InfixExpression@@"Your servlet container did not change the session ID when a new session was created. You will" + " not be adequately protected against session-fixation attacks" @TO@ "Your servlet container did not change the session ID when a new session " + "was created. You will not be adequately protected against session-fixation attacks" @AT@ 3511 @LENGTH@ 169
------------UPD StringLiteral@@"Your servlet container did not change the session ID when a new session was created. You will" @TO@ "Your servlet container did not change the session ID when a new session " @AT@ 3511 @LENGTH@ 95
------------UPD StringLiteral@@" not be adequately protected against session-fixation attacks" @TO@ "was created. You will not be adequately protected against session-fixation attacks" @AT@ 3617 @LENGTH@ 63
